{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.12;\r\n    \r\ncontract Ownable {\r\n        \r\n    address public owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n    \r\n}\r\n\r\ncontract Storage is Ownable {\r\n    \r\n    \r\n    mapping (string => string) public kitUser;\r\n    mapping (string => bytes32[]) public kitHashes;\r\n    \r\n    event RegisterUserKitEvent(string indexed kitID, string indexed userID);\r\n    event AddHashToKitEvent(string indexed kitID, bytes32 indexed hash);\r\n    event DeleteHashEvent(string indexed kitID, bytes32 indexed hash);\r\n    \r\n    function registerUserKit(string calldata kitID, string calldata userID) external onlyOwner {\r\n        kitUser[kitID] = userID;\r\n        RegisterUserKitEvent(kitID, userID);\r\n    }\r\n    \r\n    function addDocumentHashes(string calldata kitID, bytes32[] calldata hashes) external onlyOwner {\r\n        for (uint i = 0; i < hashes.length; i++) {\r\n            kitHashes[kitID].push(hashes[i]);\r\n            AddHashToKitEvent(kitID, hashes[i]);\r\n        }\r\n    }\r\n    \r\n    function addDocumentHash(string calldata kitID, bytes32 hash) external onlyOwner {\r\n        kitHashes[kitID].push(hash);\r\n        AddHashToKitEvent(kitID, hash);\r\n    }\r\n    \r\n    function deleteDocumentHash(string calldata kitID, bytes32  hash, uint index) external onlyOwner {\r\n        uint length = kitHashes[kitID].length;\r\n\r\n        if(hash == kitHashes[kitID][index]){\r\n            delete kitHashes[kitID][index];\r\n            kitHashes[kitID][index] = kitHashes[kitID][length - 1];\r\n            delete kitHashes[kitID][length - 1];\r\n            kitHashes[kitID].pop();\r\n            DeleteHashEvent(kitID, hash);\r\n        }\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"kitID\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"AddHashToKitEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"kitID\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"DeleteHashEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"kitID\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"userID\",\"type\":\"string\"}],\"name\":\"RegisterUserKitEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"kitID\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"addDocumentHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"kitID\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"addDocumentHashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"kitID\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"deleteDocumentHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"kitHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"kitUser\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"kitID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userID\",\"type\":\"string\"}],\"name\":\"registerUserKit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Storage","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://a9dc0a28bc74f65b754c5191f349b2f01354d79cec12964a91264509f7e31bdc"}]}