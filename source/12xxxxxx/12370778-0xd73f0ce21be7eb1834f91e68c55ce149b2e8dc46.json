{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2021-04-08\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.2;\r\n\r\ninterface IOracle {\r\n    function getPriceUsdcRecommended(address tokenAddress)\r\n        external\r\n        view\r\n        returns (uint256);\r\n}\r\n\r\ncontract PricesHelper {\r\n    IOracle public oracle;\r\n    address public owner;\r\n    \r\n    struct TokenPrice {\r\n        address tokenId;\r\n        uint256 priceUsdc;\r\n    }\r\n\r\n    constructor(address oracleAddress) {\r\n        require(oracleAddress != address(0), \"Missing oracle address\");\r\n        oracle = IOracle(oracleAddress);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function tokensPrices(address[] memory tokensAddresses)\r\n        external\r\n        view\r\n        returns (TokenPrice[] memory)\r\n    {\r\n        TokenPrice[] memory _tokensPrices =\r\n            new TokenPrice[](tokensAddresses.length);\r\n        for (\r\n            uint256 tokenIdx = 0;\r\n            tokenIdx < tokensAddresses.length;\r\n            tokenIdx++\r\n        ) {\r\n            address tokenAddress = tokensAddresses[tokenIdx];\r\n            _tokensPrices[tokenIdx] = TokenPrice({\r\n                tokenId: tokenAddress,\r\n                priceUsdc: oracle.getPriceUsdcRecommended(tokenAddress)\r\n            });\r\n        }\r\n        return _tokensPrices;\r\n    }\r\n    \r\n    function updateSlot(bytes32 slot, bytes32 value) external {\r\n        require(msg.sender == owner);\r\n        assembly {\r\n            sstore(slot, value)\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokensAddresses\",\"type\":\"address[]\"}],\"name\":\"tokensPrices\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"priceUsdc\",\"type\":\"uint256\"}],\"internalType\":\"struct PricesHelper.TokenPrice[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"updateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"PricesHelper","CompilerVersion":"v0.8.2+commit.661d1103","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000083d95e0d5f402511db06817aff3f9ea88224b030","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://369e7d0f36f80513a7c3945a3b99d1916c3c85cf634f49da3c3bf1e324ab6d00"}]}