{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.6;\r\n\r\ncontract WagerHub{\r\n\tuint constant $ = 1e18;\r\n\tOracle ORACLE = Oracle(0xa5dD37C92aE550de8C01BF90402B14386E78Fd56);\r\n\taddress address0 = address(0);\r\n\taddress THIS = address(this);\r\n\tmapping(uint => Wager) wagers;\r\n\tuint public wagerCount;\r\n\t\r\n\taddress payable pineapples;\r\n\tuint genesis;\r\n\r\n\tconstructor(){\r\n\t\tpineapples = payable(msg.sender);\r\n\t\tgenesis = block.timestamp;\r\n\t}\r\n\r\n\tstruct Wager{\r\n\t\tuint ID;\r\n\t\tstring query;\r\n\t\taddress asset;\r\n\t\tuint finalizeWagerTime;\r\n\t\tuint cutOffTime;\r\n\t\tuint unresolvedTimeout;\r\n\t\tuint wagerPositions;\r\n\t\tuint totalValue;\r\n\r\n\t\tbool finalized;\r\n\t\tbool unresolved;\r\n\t\tbool oracleRequestSent;\r\n\r\n\t\tmapping(address => bool) positioned;\r\n\t\tmapping(address => uint) position;\r\n\t\tmapping(address => uint) weight;\r\n\t\tmapping(uint => uint) totalValueInPosition;\r\n\r\n\t\tuint requestTicketID;\r\n\t\tuint winningPosition;\r\n\t\tmapping(address => bool) takenReward;\r\n\t}\r\n\r\n\tfunction viewWager(uint ID, address perspective) public view returns(\r\n\t\tstring memory query,\r\n\t\taddress asset,\r\n\t\tuint[] memory UINTs,\r\n\t\tbool[] memory BOOLs,\r\n\t\tuint[] memory positionWeights\r\n\t){\r\n\t\tWager storage wager = wagers[ID];\r\n\r\n\t\tquery = wager.query;\r\n\t\tasset = wager.asset;\r\n\t\tBOOLs = new bool[](5);\r\n\t\tBOOLs[0] = wager.finalized;\r\n\t\tBOOLs[1] = wager.unresolved;\r\n\t\tBOOLs[2] = wager.oracleRequestSent;\r\n\t\tBOOLs[3] = wager.positioned[perspective];\r\n\t\tBOOLs[4] = wager.takenReward[perspective];\r\n\r\n\t\tUINTs = new uint[](10);\r\n\t\tUINTs[0] = wager.finalizeWagerTime;\r\n\t\tUINTs[1] = wager.cutOffTime;\r\n\t\tUINTs[2] = wager.unresolvedTimeout;\r\n\t\tUINTs[3] = wager.wagerPositions;\r\n\t\tUINTs[4] = wager.totalValue;\r\n\t\tUINTs[5] = wager.position[perspective];\r\n\t\tUINTs[6] = wager.weight[perspective];\r\n\t\tUINTs[7] = wager.totalValueInPosition[ UINTs[5] ];\r\n\t\tUINTs[8] = wager.requestTicketID;\r\n\t\tUINTs[9] = wager.winningPosition;\r\n\r\n\t\tpositionWeights = new uint[](8);\r\n\t\tfor(uint i; i<wager.wagerPositions; i+=1){ positionWeights[i] = wager.totalValueInPosition[i]; }\r\n\t}\r\n\r\n\tfunction viewWagers(uint start, uint L, address perspective) public view returns(\r\n\t\tstring[] memory QUERYs, //queries\r\n\t\taddress[] memory ASSETs, //assets\r\n\t\tuint[] memory UINTs,\r\n\t\tbool[] memory BOOLs,\r\n\t\tuint[] memory positionWeights\r\n\t){\r\n\t\tQUERYs = new string[](L);\r\n\t\tASSETs = new address[](L);\r\n\t\tBOOLs = new bool[](5*L);\r\n\t\tUINTs = new uint[](10*L);\r\n\t\tpositionWeights = new uint[](8*L);\r\n\r\n\t\tbool[] memory _BOOLs = new bool[](5);\r\n\t\tuint[] memory _UINTs = new uint[](10);\r\n\t\tuint[] memory _positionWeights = new uint[](8);\r\n\r\n\t\tuint j;\r\n\t\tfor(uint i = start; i<start+L; i+=1){\r\n\t\t\t( QUERYs[i], ASSETs[i], _UINTs, _BOOLs, _positionWeights ) = viewWager(i , perspective);\r\n\t\t\tUINTs[0+i*10] = _UINTs[0];\r\n\t\t\tUINTs[1+i*10] = _UINTs[1];\r\n\t\t\tUINTs[2+i*10] = _UINTs[2];\r\n\t\t\tUINTs[3+i*10] = _UINTs[3];\r\n\t\t\tUINTs[4+i*10] = _UINTs[4];\r\n\t\t\tUINTs[5+i*10] = _UINTs[5];\r\n\t\t\tUINTs[6+i*10] = _UINTs[6];\r\n\t\t\tUINTs[7+i*10] = _UINTs[7];\r\n\t\t\tUINTs[8+i*10] = _UINTs[8];\r\n\t\t\tUINTs[9+i*10] = _UINTs[9];\r\n\t\t\tBOOLs[0+i*5] = _BOOLs[0];\r\n\t\t\tBOOLs[1+i*5] = _BOOLs[1];\r\n\t\t\tBOOLs[2+i*5] = _BOOLs[2];\r\n\t\t\tBOOLs[3+i*5] = _BOOLs[3];\r\n\t\t\tBOOLs[4+i*5] = _BOOLs[4];\r\n\t\t\tfor(j=0; j<wagers[i].wagerPositions; j+=1){ positionWeights[j+i*8] = _positionWeights[j]; }\r\n\t\t}\r\n\t}\r\n\r\n\tevent NewWager(address sender, address asset, string query, uint cutOffTime, uint finalizeWagerTime, uint unresolvedTimeout, uint wagerPositions);\r\n\tfunction newWagering(\r\n\t\tstring memory query,\r\n\t\taddress asset,\r\n\t\tuint cutOffTime,\r\n\t\tuint finalizeWagerTime,\r\n\t\tuint unresolvedTimeout, \r\n\t\tuint wagerPositions\r\n\t)public returns(uint wagerID){\r\n\t\taddress sender = msg.sender;\r\n\t\trequire(cutOffTime < finalizeWagerTime && wagerPositions <= 8 && wagerPositions >= 2);\r\n\r\n\t\twagerID = wagerCount;\r\n\t\tWager storage wager = wagers[wagerCount];\r\n\t\twagerCount++;\r\n\r\n\t\twager.ID = wagerID;\r\n\t\twager.query = query;\r\n\t\twager.asset = asset;\r\n\r\n\t\twager.cutOffTime = cutOffTime;\r\n\t\twager.finalizeWagerTime = finalizeWagerTime;\r\n\t\tif(unresolvedTimeout > 86400*30){unresolvedTimeout = 86400*30;}\r\n\t\tif(unresolvedTimeout < 14400){unresolvedTimeout = 14400;}\r\n\t\twager.unresolvedTimeout = unresolvedTimeout;//no more than 30 days\r\n\t\twager.wagerPositions = wagerPositions;\r\n\t\temit NewWager(sender, asset, query, cutOffTime, finalizeWagerTime, unresolvedTimeout, wagerPositions);\r\n\t}\r\n\r\n\tevent WagerIn(address sender, uint, uint, uint);\r\n\tfunction wagerIn(uint wagerID, uint wagerPosition) public payable{\r\n\t\trequire(wagers[wagerID].asset == address0);\r\n\t\t_wagerIn(wagerID, wagerPosition, msg.value);\r\n\t}\r\n\r\n\tfunction wagerInToken(uint wagerID, uint wagerPosition, uint value) public{\r\n\t\trequire(ERC20(wagers[wagerID].asset).transferFrom(msg.sender,THIS,value));\r\n\t\t_wagerIn(wagerID, wagerPosition, value);\r\n\t}\r\n\r\n\tfunction _wagerIn(uint wagerID, uint wagerPosition, uint value) internal{\r\n\t\taddress sender = msg.sender;\r\n\t\tWager storage wager = wagers[wagerID];\r\n\t\trequire(wagerID<wagerCount && block.timestamp < wager.cutOffTime && value > 0);\r\n\r\n\t\tif(!wager.positioned[sender]){\r\n\t\t\twager.position[sender] = wagerPosition;\r\n\t\t\twager.positioned[sender] = true;\r\n\t\t}else{\r\n\t\t\twagerPosition = wager.position[sender];\r\n\t\t}\r\n\r\n\t\twager.totalValue += value;\r\n\t\twager.weight[sender] += value;\r\n\t\twager.totalValueInPosition[ wagerPosition ] += value;\r\n\t\temit WagerIn(sender, wagerID, wager.position[sender], value);\r\n\t}\r\n\r\n\r\n\tmapping(uint => uint) ticketToWager;\r\n\tevent SendOracleRequest(string query, uint wagerID, uint requestTicketID);\r\n\tevent Unresolved(uint);\r\n\tfunction sendOracleRequest(uint wagerID) public payable{\r\n\t\tWager storage wager = wagers[wagerID];\r\n\t\trequire(!wager.finalized && block.timestamp >= wager.finalizeWagerTime);\r\n\t\tif(block.timestamp >= wager.finalizeWagerTime + wager.unresolvedTimeout){\r\n\t\t\twager.unresolved = true;\r\n\t\t\twager.finalized = true;\r\n\t\t\tpayable(msg.sender).transfer( msg.value );\r\n\t\t\temit Unresolved(wagerID);\r\n\t\t}else{\r\n\t\t\tuint ID = ORACLE.fileRequestTicket{value: msg.value }(1, false);\r\n\t\t\tticketToWager[ID] = wager.ID;\r\n\t\t\twager.requestTicketID = ID;\r\n\t\t\twager.oracleRequestSent = true;\r\n\t\t\temit SendOracleRequest(wager.query, wager.ID, ID);\r\n\t\t}\r\n\t}\r\n\r\n\tevent FinalizeWager(uint, bool, uint);\r\n\tfunction oracleObjectiveIntFallback(uint ticketID, bool requestRejected, int[] memory intOptions) external{\r\n\t\tWager storage wager = wagers[ ticketToWager[ticketID] ];\r\n\r\n\t\trequire( msg.sender == address(ORACLE) && !wager.finalized);\r\n\t\t\r\n\t\tif(!requestRejected ){\r\n\t\t\twager.winningPosition = uint( intOptions[0] );\r\n\t\t\twager.finalized = true;\r\n\t\t\tif(wager.totalValueInPosition[wager.winningPosition] == 0){\r\n\t\t\t\twager.unresolved = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\temit FinalizeWager(ticketToWager[ticketID], requestRejected, wager.winningPosition);\r\n\t}\r\n\r\n\tmapping(uint => address) newOracle;\r\n    event OracleUpdateRequest(address _newOracle, uint otID);\r\n    function oracleUpdateRequest(address _newOracle) public payable{\r\n\t\tuint otID = ORACLE.fileRequestTicket{value:msg.value}(1, true);\r\n        newOracle[otID] = _newOracle;\r\n        emit OracleUpdateRequest(_newOracle, otID);\r\n    }\r\n\r\n\tevent newOracleRejected(address _newOracle, uint indexed ticketID);\r\n    event newOracleAccepted(address _newOracle, uint indexed ticketID);\r\n    function oracleIntFallback(uint ticketID, bool requestRejected, uint numberOfOptions, uint[] memory optionWeights, int[] memory intOptions) external{\r\n        uint optWeight;\r\n        uint positive;\r\n        uint negative;\r\n        require( msg.sender == address(ORACLE) );\r\n\r\n        if(!requestRejected){\r\n\r\n\t        //YES OR NO?\r\n\t        for(uint i; i < numberOfOptions; i+=1){\r\n\t            optWeight = optionWeights[i];\r\n\t            if(intOptions[i]>0){\r\n\t                positive += optWeight;\r\n\t            }else{\r\n\t                negative += optWeight;\r\n\t            }\r\n\t        }\r\n\r\n            address _newOracle = newOracle[ticketID];\r\n            if(positive>negative){\r\n                ORACLE = Oracle(_newOracle);\r\n                emit newOracleAccepted(_newOracle,ticketID);\r\n            }else{\r\n                emit newOracleRejected(_newOracle,ticketID);\r\n            }\r\n        }\r\n    }\r\n\r\n\tevent PullMoney(address, uint, uint);\r\n\tfunction pullMoney(uint wagerID) public{\r\n\t\taddress payable sender = payable(msg.sender);\r\n\t\tWager storage wager = wagers[wagerID];\r\n\t\trequire(wager.finalized && !wager.takenReward[sender] &&/* this last check is technically not necessary*/ wager.positioned[sender]);\r\n\t\twager.takenReward[sender] = true;\r\n\t\tuint valuePulled;\r\n\t\tif(wager.unresolved){\r\n\t\t\tvaluePulled = wager.weight[sender];\r\n\t\t\tif(wager.asset == address0){\r\n\t\t\t\tsender.transfer( valuePulled );\r\n\t\t\t}else{\r\n\t\t\t\tERC20(wager.asset).transfer(sender,valuePulled);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tuint position = wager.winningPosition;\r\n\t\t\trequire(wager.position[sender] == position);\r\n\t\t\tuint totalValueInPosition =  wager.totalValueInPosition[position];\r\n\t\t\tvaluePulled = wager.totalValue * wager.weight[sender] / totalValueInPosition;\r\n\r\n\t\t\tuint devFee = ( (block.timestamp - genesis) < 86400*30 )?(valuePulled/100):0;\r\n\t\t\tvaluePulled -= devFee;\r\n\r\n\t\t\tif(wager.asset == address0){\r\n\t\t\t\tsender.transfer( valuePulled );\r\n\t\t\t\tif(devFee>0){\r\n\t\t\t\t\tpineapples.transfer(devFee);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tERC20(wager.asset).transfer(sender, valuePulled);\r\n\t\t\t\tif(devFee>0){\r\n\t\t\t\t\tERC20(wager.asset).transfer(pineapples, devFee);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\temit PullMoney(sender, wagerID, valuePulled );\r\n\t}\r\n\r\n}\r\n\r\nabstract contract Oracle{\r\n\tfunction fileRequestTicket( uint8 returnType, bool subjective) public virtual payable returns(uint ticketID);\r\n}\r\n\r\nabstract contract ERC20{\r\n    function balanceOf(address _address) public view virtual returns (uint256 balance);\r\n    function transferFrom(address src, address dst, uint amount) public virtual returns (bool);\r\n    function transfer(address _to, uint _value) public virtual returns (bool);\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"FinalizeWager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"query\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cutOffTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finalizeWagerTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unresolvedTimeout\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wagerPositions\",\"type\":\"uint256\"}],\"name\":\"NewWager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newOracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"otID\",\"type\":\"uint256\"}],\"name\":\"OracleUpdateRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PullMoney\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"query\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wagerID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestTicketID\",\"type\":\"uint256\"}],\"name\":\"SendOracleRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Unresolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"WagerIn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newOracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ticketID\",\"type\":\"uint256\"}],\"name\":\"newOracleAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newOracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ticketID\",\"type\":\"uint256\"}],\"name\":\"newOracleRejected\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"query\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cutOffTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalizeWagerTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unresolvedTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wagerPositions\",\"type\":\"uint256\"}],\"name\":\"newWagering\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"wagerID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketID\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"requestRejected\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numberOfOptions\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"optionWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"intOptions\",\"type\":\"int256[]\"}],\"name\":\"oracleIntFallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketID\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"requestRejected\",\"type\":\"bool\"},{\"internalType\":\"int256[]\",\"name\":\"intOptions\",\"type\":\"int256[]\"}],\"name\":\"oracleObjectiveIntFallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOracle\",\"type\":\"address\"}],\"name\":\"oracleUpdateRequest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wagerID\",\"type\":\"uint256\"}],\"name\":\"pullMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wagerID\",\"type\":\"uint256\"}],\"name\":\"sendOracleRequest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"perspective\",\"type\":\"address\"}],\"name\":\"viewWager\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"query\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"UINTs\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"BOOLs\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"positionWeights\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"L\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"perspective\",\"type\":\"address\"}],\"name\":\"viewWagers\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"QUERYs\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"ASSETs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"UINTs\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"BOOLs\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"positionWeights\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wagerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wagerID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wagerPosition\",\"type\":\"uint256\"}],\"name\":\"wagerIn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wagerID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wagerPosition\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"wagerInToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"WagerHub","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://6be45eaa476ce27a8f656ae981479f09bc80ee7cdb3d03c05bc9e1439fcaa905"}]}