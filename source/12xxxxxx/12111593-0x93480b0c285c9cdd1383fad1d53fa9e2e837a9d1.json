{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.6.12;\r\n\r\n/// @dev brief EIP 20 interface for contract bridges\r\ninterface IERC20 {\r\n     function balanceOf(address account) external view returns (uint256);\r\n\r\n     function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n     /// @notice EIP 2612\r\n     function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n\r\ninterface IAaveBridge {\r\n    function UNDERLYING_ASSET_ADDRESS() external view returns (address);\r\n\r\n    function deposit( \r\n        address asset, \r\n        uint256 amount, \r\n        address onBehalfOf, \r\n        uint16 referralCode\r\n    ) external;\r\n\r\n    function withdraw( \r\n        address token, \r\n        uint256 amount, \r\n        address destination\r\n    ) external;\r\n}\r\n\r\ninterface IBentoBridge {\r\n    function registerProtocol() external;\r\n\r\n    function deposit( \r\n        IERC20 token_,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        uint256 share\r\n    ) external payable returns (uint256 amountOut, uint256 shareOut);\r\n\r\n    function withdraw(\r\n        IERC20 token_,\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        uint256 share\r\n    ) external returns (uint256 amountOut, uint256 shareOut);\r\n}\r\n\r\ninterface ICompoundBridge {\r\n    function underlying() external view returns (address);\r\n\r\n    function mint(uint mintAmount) external returns (uint);\r\n\r\n    function redeemUnderlying(uint redeemAmount) external returns (uint);\r\n}\r\n\r\ncontract BentoBridge {\r\n    IAaveBridge immutable aave; // AAVE lending pool contract - 0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\r\n    IBentoBridge immutable bento; // BENTO token vault contract - 0xF5BCE5077908a1b7370B9ae04AdC565EBd643966\r\n\r\n    constructor(IAaveBridge _aave, IBentoBridge _bento) public {\r\n        _bento.registerProtocol();\r\n        aave = _aave;\r\n        bento = _bento;\r\n    }\r\n\r\n    function approveTokenBridge(IERC20[] calldata underlying, address[] calldata cToken) external {\r\n        for (uint256 i = 0; i < underlying.length; i++) {\r\n            underlying[i].approve(address(aave), type(uint256).max); // max approve `aave` spender to pull `underlying` from this contract\r\n            underlying[i].approve(address(bento), type(uint256).max); // max approve `bento` spender to pull `underlying` from this contract\r\n            underlying[i].approve(address(cToken[i]), type(uint256).max); // max approve `cToken` spender to pull `underlying` from this contract\r\n        }\r\n    }\r\n\r\n    /// - AAVE - ///\r\n    function aaveToBento(address aToken, uint256 amount) external {\r\n        IERC20(aToken).transferFrom(msg.sender, address(this), amount);\r\n        address underlying = IAaveBridge(aToken).UNDERLYING_ASSET_ADDRESS();\r\n        aave.withdraw(underlying, amount, address(this));\r\n        bento.deposit(IERC20(underlying), address(this), msg.sender, amount, 0);\r\n    }\r\n\r\n    function aaveToBentoWithPermit(\r\n        address aToken, uint256 amount, \r\n        uint8 v, bytes32 r, bytes32 s\r\n    ) external {\r\n        IERC20(aToken).permit(msg.sender, address(this), amount, now, v, r, s);\r\n        IERC20(aToken).transferFrom(msg.sender, address(this), amount);\r\n        address underlying = IAaveBridge(aToken).UNDERLYING_ASSET_ADDRESS();\r\n        aave.withdraw(underlying, amount, address(this));\r\n        bento.deposit(IERC20(underlying), address(this), msg.sender, amount, 0);\r\n    }\r\n\r\n    function bentoToAave(IERC20 underlying, uint256 amount) external {\r\n        bento.withdraw(underlying, msg.sender, address(this), amount, 0);\r\n        aave.deposit(address(underlying), underlying.balanceOf(address(this)), msg.sender, 0); \r\n    }\r\n\r\n    /// - COMPOUND - ///\r\n    function compoundToBento(address cToken, uint256 amount) external {\r\n        IERC20(cToken).transferFrom(msg.sender, address(this), amount);\r\n        address underlying = ICompoundBridge(cToken).underlying();\r\n        ICompoundBridge(cToken).redeemUnderlying(amount);\r\n        bento.deposit(IERC20(underlying), address(this), msg.sender, amount, 0);\r\n    }\r\n\r\n    function bentoToCompound(address cToken, uint256 amount) external {\r\n        address underlying = ICompoundBridge(cToken).underlying();\r\n        bento.withdraw(IERC20(underlying), msg.sender, address(this), amount, 0);\r\n        ICompoundBridge(cToken).mint(amount);\r\n        IERC20(cToken).transfer(msg.sender, IERC20(cToken).balanceOf(address(this))); \r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IAaveBridge\",\"name\":\"_aave\",\"type\":\"address\"},{\"internalType\":\"contract IBentoBridge\",\"name\":\"_bento\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"aaveToBento\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"aaveToBentoWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"underlying\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"cToken\",\"type\":\"address[]\"}],\"name\":\"approveTokenBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bentoToAave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bentoToCompound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"compoundToBento\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"BentoBridge","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000007d2768de32b0b80b7a3454c06bdac94a69ddc7a9000000000000000000000000f5bce5077908a1b7370b9ae04adc565ebd643966","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://07b424f1fb13838364be377d3c4ac7aabb882bba76ced0411a90591e1708716a"}]}