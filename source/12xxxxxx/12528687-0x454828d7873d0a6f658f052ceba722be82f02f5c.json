{"status":"1","message":"OK","result":[{"SourceCode":"{\"ERC20Standard.sol\":{\"content\":\"pragma solidity 0.6.0;\\n\\n\\n\\nlibrary SafeMath {\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b);\\n\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b \\u003e 0);\\n        uint256 c = a / b;\\n        \\n\\treturn c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b \\u003c= a);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c \\u003e= a);\\n\\n        return c;\\n    }\\n\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0);\\n        return a % b;\\n    }\\n}\\n\\ncontract ERC20Standard {\\n\\tusing SafeMath for uint256;\\n\\tuint public totalSupply;\\n\\t\\n\\tstring public name;\\n\\tuint8 public decimals;\\n\\tstring public symbol;\\n\\tstring public version;\\n\\t\\n\\tmapping (address =\\u003e uint256) balances;\\n\\tmapping (address =\\u003e mapping (address =\\u003e uint)) allowed;\\n\\n\\t//Fix for short address attack against ERC20\\n\\tmodifier onlyPayloadSize(uint size) {\\n\\t\\tassert(msg.data.length == size + 4);\\n\\t\\t_;\\n\\t} \\n\\n\\tfunction balanceOf(address _owner) public view returns (uint balance) {\\n\\t\\treturn balances[_owner];\\n\\t}\\n\\n\\tfunction transfer(address _recipient, uint _value) public onlyPayloadSize(2*32) {\\n\\t    require(balances[msg.sender] \\u003e= _value \\u0026\\u0026 _value \\u003e 0);\\n\\t    balances[msg.sender] = balances[msg.sender].sub(_value);\\n\\t    balances[_recipient] = balances[_recipient].add(_value);\\n\\t    emit Transfer(msg.sender, _recipient, _value);        \\n        }\\n\\n\\tfunction transferFrom(address _from, address _to, uint _value) public {\\n\\t    require(balances[_from] \\u003e= _value \\u0026\\u0026 allowed[_from][msg.sender] \\u003e= _value \\u0026\\u0026 _value \\u003e 0);\\n            balances[_to] = balances[_to].add(_value);\\n            balances[_from] = balances[_from].sub(_value);\\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\n            emit Transfer(_from, _to, _value);\\n        }\\n\\n\\tfunction  approve(address _spender, uint _value) public {\\n\\t\\tallowed[msg.sender][_spender] = _value;\\n\\t\\temit Approval(msg.sender, _spender, _value);\\n\\t}\\n\\n\\tfunction allowance(address _spender, address _owner) public view returns (uint balance) {\\n\\t\\treturn allowed[_owner][_spender];\\n\\t}\\n\\t\\n\\t    /*  \\n    * accepts ether sent with no txData\\n    */\\n    receive() external payable {}\\n\\n    /*\\n    * refuses ether sent with txData that does not match any function signature in the contract\\n    */\\n    fallback() external {}\\n    \\n    \\n\\t//Event which is triggered to log all transfers to this contract\\u0027s event log\\n\\tevent Transfer(\\n\\t\\taddress indexed _from,\\n\\t\\taddress indexed _to,\\n\\t\\tuint _value\\n\\t\\t);\\n\\t\\t\\n\\t//Event which is triggered whenever an owner approves a new allowance for a spender.\\n\\tevent Approval(\\n\\t\\taddress indexed _owner,\\n\\t\\taddress indexed _spender,\\n\\t\\tuint _value\\n\\t\\t);\\n}\\n\\n\"},\"NewToken.sol\":{\"content\":\"pragma solidity 0.6.0;\\n\\nimport \\\"./ERC20Standard.sol\\\";\\n\\ncontract NewToken is ERC20Standard {\\n\\tconstructor() public {\\n\\t\\ttotalSupply = 2100000000000000;\\n\\t\\tname = \\\"FlyPenny Coin\\\";\\n\\t\\tdecimals = 0;\\n\\t\\tsymbol = \\\"FLPN\\\";\\n\\t\\tversion = \\\"2.0\\\";\\n\\t\\tbalances[msg.sender] = totalSupply;\\n\\t}\\n}\"}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"NewToken","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://873f8963f6378eec02ff9f0dc1acab4896e19c1212eb41d378e0e3bedd6d1a16"}]}