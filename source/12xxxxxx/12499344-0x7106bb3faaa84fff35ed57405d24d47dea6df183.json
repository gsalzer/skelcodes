{"status":"1","message":"OK","result":[{"SourceCode":"/// SPDX-License-Identifier: MIT\r\n/// Presented by LexDAO LLC\r\n/// @notice Minimal Certification NFT.\r\npragma solidity 0.8.4;\r\n\r\ncontract Certification {\r\n    address public governance;\r\n    uint256 public totalSupply;\r\n    string  public baseURI;\r\n    string  public details;\r\n    string  public name;\r\n    string  public symbol;\r\n    \r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(uint256 => address) public ownerOf;\r\n    mapping(uint256 => string) public tokenURI;\r\n    mapping(bytes4 => bool) public supportsInterface; // ERC-165 \r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n    event GovTokenURI(uint256 indexed tokenId, string tokenURI);\r\n    event TransferGovernance(address indexed governance);\r\n    event UpdateBaseURI(string baseURI);\r\n    \r\n    constructor(\r\n        address _governance,\r\n        string memory _baseURI, \r\n        string memory _details, \r\n        string memory _name, \r\n        string memory _symbol\r\n    ) {\r\n        governance = _governance;\r\n        baseURI = _baseURI;\r\n        details = _details; \r\n        name = _name; \r\n        symbol = _symbol;  \r\n        supportsInterface[0x80ac58cd] = true; // ERC-721 \r\n        supportsInterface[0x5b5e139f] = true; // METADATA\r\n    }\r\n\r\n    modifier onlyGovernance {\r\n        require(msg.sender == governance, '!governance');\r\n        _;\r\n    }\r\n    \r\n    function burn(address from, uint256 tokenId) external {\r\n        require(from == ownerOf[tokenId] || from == governance, '!owner||!governance');\r\n        balanceOf[from]--; \r\n        ownerOf[tokenId] = address(0);\r\n        tokenURI[tokenId] = \"\";\r\n        emit Transfer(from, address(0), tokenId); \r\n    }\r\n    \r\n    function mint(address to, string calldata customURI) external onlyGovernance { \r\n        string memory _tokenURI; \r\n        bytes(customURI).length > 0 ? _tokenURI = customURI : _tokenURI = baseURI;\r\n        totalSupply++;\r\n        uint256 tokenId = totalSupply;\r\n        balanceOf[to]++;\r\n        ownerOf[tokenId] = to;\r\n        tokenURI[tokenId] = _tokenURI;\r\n        emit Transfer(address(0), to, tokenId);\r\n    }\r\n\r\n    function govTokenURI(uint256 tokenId, string calldata _tokenURI) external onlyGovernance {\r\n        require(tokenId <= totalSupply, '!exist');\r\n        tokenURI[tokenId] = _tokenURI;\r\n        emit GovTokenURI(tokenId, _tokenURI);\r\n    }\r\n    \r\n    function govTransferFrom(address from, address to, uint256 tokenId) external onlyGovernance {\r\n        require(from == ownerOf[tokenId], 'from!=owner');\r\n        balanceOf[from]--; \r\n        balanceOf[to]++; \r\n        ownerOf[tokenId] = to;\r\n        emit Transfer(from, to, tokenId); \r\n    }\r\n\r\n    function transferGovernance(address _governance) external onlyGovernance {\r\n        governance = _governance;\r\n        emit TransferGovernance(_governance);\r\n    }\r\n    \r\n    function updateBaseURI(string calldata _baseURI) external onlyGovernance {\r\n        baseURI = _baseURI;\r\n        emit UpdateBaseURI(_baseURI);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_details\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"GovTokenURI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"}],\"name\":\"TransferGovernance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"UpdateBaseURI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"details\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"govTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"govTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"customURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"transferGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"updateBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Certification","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000001c0aa8ccd568d90d61659f060d1bfb1e6f855a2000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000005868747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d6375515368676b7a67454b6e45714846746d4a7732787a36417439726d3159766f50763262586f6e426b464a2f6c65782e7478740000000000000000000000000000000000000000000000000000000000000000000000000000000d4c657844414f20436f6d6574680000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000124c657844414f20456e67696e656572696e67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000054c45455448000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ee080bccebf75ca36d5ab0471e4094d9861f7ad7ffd60ec1a165f8b58d99c732"}]}