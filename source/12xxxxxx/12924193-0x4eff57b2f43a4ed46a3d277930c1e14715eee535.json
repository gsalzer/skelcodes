{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/LuckySwapPoolNames.sol\": {\r\n      \"content\": \"/**\\n *Submitted for verification at Etherscan.io on 2020-09-06\\n*/\\n\\npragma solidity ^0.6.0;\\npragma experimental ABIEncoderV2;\\n\\n//SPDX-License-Identifier: UNLICENSED\\n\\ncontract Ownable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    constructor () internal {\\n        address msgSender = msg.sender;\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(_owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\\ncontract LuckySwapPoolNames is Ownable {\\n    mapping(uint256 => string) public logos;\\n    mapping(uint256 => string) public names;\\n    \\n    constructor() public {\\n        logos[0] = '🐢'; names[0] = 'Tether Turtle';\\n        logos[1] = '🐌'; names[1] = 'Circle Snail';\\n        logos[2] = '🦆'; names[2] = 'Donald DAI';\\n        logos[3] = '🦍'; names[3] = 'Spartan Dollar';\\n        logos[4] = '🍄'; names[4] = 'Compound Truffle';\\n        logos[5] = '🐗'; names[5] = 'Aave Boar';\\n        logos[6] = '🐍'; names[6] = 'Synthetic Snake';\\n        logos[7] = '🦑'; names[7] = 'Umami Squid';\\n        logos[8] = '🐸'; names[8] = 'Toadie Marine';\\n        logos[9] = '🦖'; names[9] = 'Band-osaurus';\\n        logos[10] = '🐥'; names[10] = 'Ample Chicks';\\n        logos[11] = '🐋'; names[11] = 'YFI Whale';\\n        logos[12] = '🍀'; names[12] = 'Lucky Clover!';\\n        logos[13] = '🦏'; names[13] = 'REN Rhino';\\n        logos[14] = '🐂'; names[14] = 'BASED Bull';\\n        logos[15] = '🦈'; names[15] = 'SRM Shark';\\n        logos[16] = '🍠'; names[16] = 'YAMv2 Yam';\\n        logos[17] = '🐊'; names[17] = 'CRV Crocodile';\\n    }\\n    \\n    function setPoolInfo(uint256 pid, string memory logo, string memory name) public onlyOwner {\\n        logos[pid] = logo;\\n        names[pid] = name;\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"logos\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"names\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"logo\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"setPoolInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"LuckySwapPoolNames","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}