{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface PriceFeedOracle {\r\n\tfunction fetchPrice() external returns (uint);\r\n}\r\n\r\ninterface TroveManagerLike {\r\n    function getBorrowingRateWithDecay() external view returns (uint);\r\n    function getTCR(uint _price) external view returns (uint);\r\n    function getCurrentICR(address _borrower, uint _price) external view returns (uint);\r\n    function checkRecoveryMode(uint _price) external view returns (bool);\r\n    function getEntireDebtAndColl(address _borrower) external view returns (\r\n        uint debt, \r\n        uint coll, \r\n        uint pendingLUSDDebtReward, \r\n        uint pendingETHReward\r\n    );\r\n}\r\n\r\ninterface StabilityPoolLike {\r\n    function getCompoundedLUSDDeposit(address _depositor) external view returns (uint);\r\n    function getDepositorETHGain(address _depositor) external view returns (uint);\r\n    function getDepositorLQTYGain(address _depositor) external view returns (uint);\r\n}\r\n\r\ninterface StakingLike {\r\n    function stakes(address owner) external view returns (uint);\r\n    function getPendingETHGain(address _user) external view returns (uint);\r\n    function getPendingLUSDGain(address _user) external view returns (uint);\r\n}\r\n\r\ninterface PoolLike {\r\n    function getETH() external view returns (uint);\r\n}\r\n\r\ninterface HintHelpersLike {\r\n    function computeNominalCR(uint _coll, uint _debt) external pure returns (uint);\r\n    function computeCR(uint _coll, uint _debt, uint _price) external pure returns (uint);\r\n    function getApproxHint(uint _CR, uint _numTrials, uint _inputRandomSeed) external view returns (\r\n        address hintAddress,\r\n        uint diff,\r\n        uint latestRandomSeed\r\n    );\r\n    function getRedemptionHints(uint _LUSDamount, uint _price, uint _maxIterations) external view returns (\r\n        address firstHint,\r\n        uint partialRedemptionHintNICR,\r\n        uint truncatedLUSDamount\r\n    );\r\n}\r\n\r\ninterface SortedTrovesLike {\r\n    function getSize() external view returns (uint256);\r\n    function findInsertPosition(uint256 _ICR, address _prevId, address _nextId) external view returns (address, address);\r\n}\r\n\r\ncontract Math {\r\n    /* DSMath add */\r\n    function add(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x + y) >= x, \"math-not-safe\");\r\n    }\r\n    \r\n    /* DSMath mul */\r\n    function mul(uint x, uint y) internal pure returns (uint z) {\r\n                require(y == 0 || (z = x * y) / y == x, \"math-not-safe\");\r\n        }\r\n\r\n    /* Uniswap V2 sqrt */\r\n    function sqrt(uint y) internal pure returns (uint z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n            }\r\n        }\r\n}\r\n\r\ncontract Helpers is Math {\r\n    TroveManagerLike internal constant troveManager =\r\n        TroveManagerLike(0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2);\r\n\r\n    StabilityPoolLike internal constant stabilityPool = \r\n        StabilityPoolLike(0x66017D22b0f8556afDd19FC67041899Eb65a21bb);\r\n\r\n    StakingLike internal constant staking =\r\n        StakingLike(0x4f9Fbb3f1E99B56e0Fe2892e623Ed36A76Fc605d);\r\n\r\n    PoolLike internal constant activePool =\r\n        PoolLike(0xDf9Eb223bAFBE5c5271415C75aeCD68C21fE3D7F);\r\n    \r\n    PoolLike internal constant defaultPool =\r\n        PoolLike(0x896a3F03176f05CFbb4f006BfCd8723F2B0D741C);\r\n\r\n    HintHelpersLike internal constant hintHelpers =\r\n        HintHelpersLike(0xE84251b93D9524E0d2e621Ba7dc7cb3579F997C0);\r\n    \r\n    SortedTrovesLike internal constant sortedTroves =\r\n        SortedTrovesLike(0x8FdD3fbFEb32b28fb73555518f8b361bCeA741A6);\r\n\r\n    PriceFeedOracle internal constant priceFeedOracle =\r\n        PriceFeedOracle(0x4c517D4e2C851CA76d7eC94B805269Df0f2201De);\r\n\r\n    struct Trove {\r\n        uint collateral;\r\n        uint debt;\r\n    }\r\n}\r\n\r\n\r\ncontract Resolver is Helpers {\r\n\r\n    function fetchEthPrice() public returns (uint) {\r\n\t    return priceFeedOracle.fetchPrice();\r\n    }\r\n\r\n    function getTrove(address[] memory owners) public returns (Trove[] memory troves) {\r\n        troves = new Trove[](owners.length);\r\n        for (uint256 i = 0; i < owners.length; i++) {\r\n            address owner = owners[i];\r\n            (uint debt, uint collateral, , ) = troveManager.getEntireDebtAndColl(owner);\r\n            troves[i] = Trove(collateral, debt);\r\n        }\r\n\r\n    }\r\n}\r\n\r\ncontract InstaLiquityPowerResolver is Resolver {\r\n    string public constant name = \"Liquity-Power-Resolver-v1\";\r\n}","ABI":"[{\"inputs\":[],\"name\":\"fetchEthPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"}],\"name\":\"getTrove\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"}],\"internalType\":\"struct Helpers.Trove[]\",\"name\":\"troves\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"InstaLiquityPowerResolver","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ca1346ff17d3b5d0c876d8a410210e43255fa102858ab10c54f5b2042a6a91fd"}]}