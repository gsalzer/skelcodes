// ..........................................................................................
// ..........................................................................................
// .......................................::,,,,,,,,,,,,:::..................................
// ......................................,#@@###SSSSS###@@%..................................
// ......................................,@@@@@@@@@@@@@@@@%..................................
// ......................................,@@@@@@@@@@@@@@@@%..................................
// ......................................,@@@@@@@@@@@@@@@@%..................................
// ......................................,@@@@@@@@@@@@@@@@%..................................
// ......................................,@@@@@@@@@@@@@@@@%..................................
// ......................................,@@@@@@@@@@@@@@@@%..................................
// ......................................,@@@@@@@@@@@@@@@@%..................................
// ......................................,@@@@@@@@@@@@@@@@%..................................
// .............................,,::;;;;;;################%;;;;;;::,.........................
// ..........................,;++;;::,,,,,,,,,,,,,,,,,,,,,,,,,,:::;;+;:,.....................
// ........................:++:,.....................................,;++,...................
// ......................,++,.......,::;;;;;;;;;;;;;;;;;;;;;;;:,,.......:*;..................
// .....................:?:.....,+?S#@@@@@@@@@@@@@@@@@@@@@@@@@@@#S*;,.....;*,................
// ....................,?:....:%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#*,....;*................
// ....................*;...,?@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#+....*;...............
// ...................,?,..,S@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*...:?...............
// ...................,?...?@@@@@@@@@@@@@@@@@@@@@###@@@@@@@@@@@@@@@@@@@@@;..,?,..............
// ...................,?..,@@@@@@@@@@@@@@@@@@@@@%S##@@@@@@@@@@@@@@@@@@@@@%..,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@%S##@@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@S#@S#@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@%S#%S@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@@S?#@@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@#SS#@@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@?%S?S@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@%%S%#@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@SSSS#@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@?%SS#@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@%%SS#@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@SSSS@@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@?%S?S@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@%#@%S@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@SS@@@@#SSS@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@#S@#S@@@SSSS#@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@##@#S#@@@###@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..:@@@@@@@@@@@@@@@@@@@@@S@@#S@@@@@@@@@@@@@@@@@@@@S,.,?,..............
// ...................,?..,#@@@@@@@@@@@@@@@@@@@@S####@@@@@@@@@@@@@@@@@@@@?..,?,..............
// ...................,?...*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#:..,?...............
// ...................,?,..,?@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#;...;*...............
// ....................++....+#@@@@@@@@@@@@##SSSSS@##S%S%@@@@@@@@@@@@@%:....?:...............
// .....................*;....,+S@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#?;.....*+................
// ......................++,.....:+?%#################@########S%*;,.....:*;.................
// .......................;*;,........,,,,,,,,,,,,,,,,,,,,,,,,,........,+*:..................
// ........................,:++;,,.................................,:;++:....................
// ...........................,:;+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;++;:,......................
// ...............................,,,:::::::::::::::::::::::::::,,,..........................
// ..........................................................................................
//
// Cyber Eau de Parfum
// The Scent Of The Metaverse
// > MADE IN GRASSE, FRANCE
// > DESIGNED WITH â™¥ IN BERLIN
//
// TOTAL SUPPLY: 888
// PRODUCT DESIGN: J8
// NFT ARTWORK: SC.VISIONS
//
// Project site: https://cyber.looklabs.com
// Twitter: https://twitter.com/look_labs
// Discord: https://discord.gg/Res4aVnq2m
//
//   _      ____   ____  _  __  _               ____   _____ 
//  | |    / __ \ / __ \| |/ / | |        /\   |  _ \ / ____|
//  | |   | |  | | |  | | ' /  | |       /  \  | |_) | (___  
//  | |   | |  | | |  | |  <   | |      / /\ \ |  _ < \___ \ 
//  | |___| |__| | |__| | . \  | |____ / ____ \| |_) |____) |
//  |______\____/ \____/|_|\_\ |______/_/    \_\____/|_____/ 
//  
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;
pragma experimental ABIEncoderV2;

import '../node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol';
import '../node_modules/@openzeppelin/contracts/access/Ownable.sol';
import '../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol';
import '../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol';

contract Cyber is ERC721Enumerable, Ownable {
    using SafeMath for uint256;
    using SafeMath for uint8;
    uint256 public constant SUPPLY = 888;
    string baseURI;

    address public vault;
    uint256 public price = 300000000000000000; // 0.30 ETH

    constructor(string memory url)
        ERC721('Cyber', 'EDP')
    {
        setBaseURI(url);
    }

    function _baseURI() internal view override virtual returns (string memory) {
        return baseURI;
    }

    function mintCyber(uint256 _qty) public payable {
        require(totalSupply() < SUPPLY, 'No more units left');
        require(
            _qty > 0 && _qty <= 10,
            'You can buy no less than 1, and no more than 10 Cyber EDPs at a time'
        );
        require(
            totalSupply().add(_qty) <= SUPPLY,
            "Not enough supply"
        );
        require(
            msg.value >= price.mul(_qty),
            'Not enough balance'
        );

        for (uint256 i = 0; i < _qty; i++) {
            uint256 mintIndex = totalSupply() + 1;
            _safeMint(msg.sender, mintIndex);
        }
    }

    function tokensOfOwner(address _owner)
        external
        view
        returns (uint256[] memory)
    {
        uint256 tokenCount = balanceOf(_owner);
        if (tokenCount == 0) {
            // No tokens
            return new uint256[](0);
        } else {
            uint256[] memory result = new uint256[](tokenCount);
            uint256 index;
            for (index = 0; index < tokenCount; index++) {
                result[index] = tokenOfOwnerByIndex(_owner, index);
            }
            return result;
            // Array of tokens
        }
    }

    /*
     * Only the Cyber master perfumer can run
     */


    function setBaseURI(string memory _newBaseURI) public virtual onlyOwner {
        baseURI = _newBaseURI;
    }

    // Reserve units
    
    function reserve(uint256 _qty) public onlyOwner {
        uint256 currentSupply = totalSupply();
        require(
            totalSupply().add(_qty) <= 10,
            'Exceeded reserved supply'
        );
        uint256 index;
        for (index = 0; index < _qty; index++) {
            _safeMint(owner(), currentSupply + index + 1); // start from token 1
        }
    }

    function setPrice(uint256 _newPrice) public onlyOwner {
        price = _newPrice;
    }

    function setVault(address _newVaultAddress) public onlyOwner {
        vault = _newVaultAddress;
    }

    function withdraw(uint256 _amount) public onlyOwner {
        require(address(vault) != address(0), 'no vault');
        require(payable(vault).send(_amount));
    }

    function withdrawAll() public payable onlyOwner {
        require(address(vault) != address(0), 'no vault');
        require(payable(vault).send(address(this).balance));
    }

    function forwardERC20s(IERC20 _token, uint256 _amount) public onlyOwner {
        require(address(vault) != address(0));
        _token.transfer(vault, _amount);
    }

}
