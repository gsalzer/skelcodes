{"status":"1","message":"OK","result":[{"SourceCode":"// Verified using https://dapp.tools\n\n// hevm: flattened sources of src/lender/admin/pool.sol\n// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity >=0.5.15 >=0.6.12;\n\n////// lib/tinlake-auth/src/auth.sol\n// Copyright (C) Centrifuge 2020, based on MakerDAO dss https://github.com/makerdao/dss\n/* pragma solidity >=0.5.15; */\n\ncontract Auth {\n    mapping (address => uint256) public wards;\n    \n    event Rely(address indexed usr);\n    event Deny(address indexed usr);\n\n    function rely(address usr) external auth {\n        wards[usr] = 1;\n        emit Rely(usr);\n    }\n    function deny(address usr) external auth {\n        wards[usr] = 0;\n        emit Deny(usr);\n    }\n\n    modifier auth {\n        require(wards[msg.sender] == 1, \"not-authorized\");\n        _;\n    }\n\n}\n\n////// src/lender/admin/pool.sol\n/* pragma solidity >=0.6.12; */\n\n/* import \"tinlake-auth/auth.sol\"; */\n\ninterface AssessorLike_2 {\n    function file(bytes32 name, uint256 value) external;\n}\n\ninterface LendingAdapterLike {\n    function raise(uint256 amount) external;\n    function sink(uint256 amount) external;\n    function heal() external;\n}\n\ninterface MemberlistLike_2 {\n    function updateMember(address usr, uint256 validUntil) external;\n    function updateMembers(address[] calldata users, uint256 validUntil) external;\n}\n\n// Wrapper contract for various pool management tasks.\ncontract PoolAdmin is Auth {\n  \n    AssessorLike_2 public assessor;\n    LendingAdapterLike public lending;\n    MemberlistLike_2 public seniorMemberlist;\n    MemberlistLike_2 public juniorMemberlist;\n\n    bool public live = true;\n\n    // Admins can manage pools, but have to be added and can be removed by any ward on the PoolAdmin contract\n    mapping(address => uint256) public admins;\n\n    // Events\n    event File(bytes32 indexed what, bool indexed data);\n    event RelyAdmin(address indexed usr);\n    event DenyAdmin(address indexed usr);\n    event SetMaxReserve(uint256 value);\n    event RaiseCreditline(uint256 amount);\n    event SinkCreditline(uint256 amount);\n    event HealCreditline();\n    event UpdateSeniorMember(address indexed usr, uint256 validUntil);\n    event UpdateSeniorMembers(address[] indexed users, uint256 validUntil);\n    event UpdateJuniorMember(address indexed usr, uint256 validUntil);\n    event UpdateJuniorMembers(address[] indexed users, uint256 validUntil);\n\n    constructor() {\n        wards[msg.sender] = 1;\n    }\n\n    function depend(bytes32 contractName, address addr) public auth {\n        if (contractName == \"assessor\") {\n            assessor = AssessorLike_2(addr);\n        } else if (contractName == \"lending\") {\n            lending = LendingAdapterLike(addr);\n        } else if (contractName == \"seniorMemberlist\") {\n            seniorMemberlist = MemberlistLike_2(addr);\n        } else if (contractName == \"juniorMemberlist\") {\n            juniorMemberlist = MemberlistLike_2(addr);\n        } else revert();\n    }\n\n    function file(bytes32 what, bool data) public auth {\n        live = data;\n        emit File(what, data);\n    }\n\n    modifier admin { require(admins[msg.sender] == 1 && live); _; }\n\n    function relyAdmin(address usr) public auth {\n        admins[usr] = 1;\n        emit RelyAdmin(usr);\n    }\n\n    function denyAdmin(address usr) public auth {\n        admins[usr] = 0;\n        emit DenyAdmin(usr);\n    }\n\n    // Manage max reserve\n    function setMaxReserve(uint256 value) public admin {\n        assessor.file(\"maxReserve\", value);\n        emit SetMaxReserve(value);\n    }\n\n    // Manage creditline\n    function raiseCreditline(uint256 amount) public admin {\n        lending.raise(amount);\n        emit RaiseCreditline(amount);\n    }\n\n    function sinkCreditline(uint256 amount) public admin {\n        lending.sink(amount);\n        emit SinkCreditline(amount);\n    }\n\n    function healCreditline() public admin {\n        lending.heal();\n        emit HealCreditline();\n    }\n\n    function setMaxReserveAndRaiseCreditline(uint256 newMaxReserve, uint256 creditlineRaise) public admin {\n        setMaxReserve(newMaxReserve);\n        raiseCreditline(creditlineRaise);\n    }\n\n    function setMaxReserveAndSinkCreditline(uint256 newMaxReserve, uint256 creditlineSink) public admin {\n        setMaxReserve(newMaxReserve);\n        sinkCreditline(creditlineSink);\n    }\n\n    // Manage memberlists\n    function updateSeniorMember(address usr, uint256 validUntil) public admin {\n        seniorMemberlist.updateMember(usr, validUntil);\n        emit UpdateSeniorMember(usr, validUntil);\n    }\n\n    function updateSeniorMembers(address[] memory users, uint256 validUntil) public admin {\n        seniorMemberlist.updateMembers(users, validUntil);\n        emit UpdateSeniorMembers(users, validUntil);\n    }\n\n    function updateJuniorMember(address usr, uint256 validUntil) public admin {\n        juniorMemberlist.updateMember(usr, validUntil);\n        emit UpdateJuniorMember(usr, validUntil);\n    }\n\n    function updateJuniorMembers(address[] memory users, uint256 validUntil) public admin {\n        juniorMemberlist.updateMembers(users, validUntil);\n        emit UpdateJuniorMembers(users, validUntil);\n    }\n    \n}\n","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Deny\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"DenyAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"data\",\"type\":\"bool\"}],\"name\":\"File\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"HealCreditline\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaiseCreditline\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Rely\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"RelyAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetMaxReserve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SinkCreditline\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"UpdateJuniorMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"UpdateJuniorMembers\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"UpdateSeniorMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"UpdateSeniorMembers\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assessor\",\"outputs\":[{\"internalType\":\"contract AssessorLike_2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"denyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"contractName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"depend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"data\",\"type\":\"bool\"}],\"name\":\"file\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"healCreditline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"juniorMemberlist\",\"outputs\":[{\"internalType\":\"contract MemberlistLike_2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lending\",\"outputs\":[{\"internalType\":\"contract LendingAdapterLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"live\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"raiseCreditline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"relyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seniorMemberlist\",\"outputs\":[{\"internalType\":\"contract MemberlistLike_2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMaxReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditlineRaise\",\"type\":\"uint256\"}],\"name\":\"setMaxReserveAndRaiseCreditline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditlineSink\",\"type\":\"uint256\"}],\"name\":\"setMaxReserveAndSinkCreditline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sinkCreditline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"updateJuniorMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"updateJuniorMembers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"updateSeniorMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"updateSeniorMembers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"PoolAdmin","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}