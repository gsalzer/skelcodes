{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.11;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\ninterface KeeperLike {\r\n    function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\r\n    function performUpkeepSafe(bytes calldata performData) external;\r\n    function performUpkeep(bytes calldata performData) external;    \r\n}\r\n\r\ncontract BGelato {\r\n    KeeperLike immutable public proxy;\r\n\r\n    constructor(KeeperLike _proxy) public {\r\n        proxy = _proxy;\r\n    }\r\n\r\n    function checker()\r\n        external\r\n        returns (bool canExec, bytes memory execPayload)\r\n    {\r\n        (bool upkeepNeeded, bytes memory performData) = proxy.checkUpkeep(bytes(\"\"));\r\n        canExec = upkeepNeeded;\r\n\r\n        (uint qty, address bamm, uint bammBalance) = abi.decode(performData, (uint, address, uint));\r\n\r\n        execPayload = abi.encodeWithSelector(\r\n            BGelato.doer.selector,\r\n            qty, bamm, bammBalance\r\n        );\r\n    }\r\n\r\n    event Input(uint x, address y, uint z);\r\n    event Input2(bytes d);\r\n    function doer(uint qty, address bamm, uint bammBalance) external returns (bytes memory performData) {\r\n        emit Input(qty, bamm, bammBalance);\r\n        performData = abi.encode(qty, bamm, bammBalance);\r\n        emit Input2(performData);\r\n        proxy.performUpkeepSafe(performData);\r\n    }\r\n\r\n    function test(bytes calldata input) external {\r\n        address(this).call(input);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract KeeperLike\",\"name\":\"_proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"y\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"Input\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"d\",\"type\":\"bytes\"}],\"name\":\"Input2\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"checker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canExec\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"execPayload\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bamm\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bammBalance\",\"type\":\"uint256\"}],\"name\":\"doer\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"internalType\":\"contract KeeperLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"test\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"BGelato","CompilerVersion":"v0.6.11+commit.5ef660b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000048420fad7cc1b517e3b49126edc9988df6e0e778","EVMVersion":"Default","Library":"","LicenseType":"BSD-3-Clause","Proxy":"0","Implementation":"","SwarmSource":"ipfs://81254bd7c7ec0528eaa8652a6ce182461d496f048af9be7f5d87559ad110fa72"}]}