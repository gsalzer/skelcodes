{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.7;\r\n\r\ncontract GebAuth {\r\n    // --- Authorization ---\r\n    mapping (address => uint) public authorizedAccounts;\r\n    /**\r\n     * @notice Add auth to an account\r\n     * @param account Account to add auth to\r\n     */\r\n    function addAuthorization(address account) external isAuthorized {\r\n        authorizedAccounts[account] = 1;\r\n        emit AddAuthorization(account);\r\n    }\r\n    /**\r\n     * @notice Remove auth from an account\r\n     * @param account Account to remove auth from\r\n     */\r\n    function removeAuthorization(address account) external isAuthorized {\r\n        authorizedAccounts[account] = 0;\r\n        emit RemoveAuthorization(account);\r\n    }\r\n    /**\r\n    * @notice Checks whether msg.sender can call an authed function\r\n    **/\r\n    modifier isAuthorized {\r\n        require(authorizedAccounts[msg.sender] == 1, \"GebAuth/account-not-authorized\");\r\n        _;\r\n    }\r\n\r\n    // --- Events ---\r\n    event AddAuthorization(address account);\r\n    event RemoveAuthorization(address account);\r\n\r\n    constructor () public {\r\n        authorizedAccounts[msg.sender] = 1;\r\n        emit AddAuthorization(msg.sender);\r\n    }\r\n}\r\n\r\nabstract contract AccountingEngineLike {\r\n    function modifyParameters(bytes32, address) virtual external;\r\n    function modifyParameters(bytes32, uint256) virtual external;\r\n}\r\ncontract MinimalAccountingEngineOverlay is GebAuth {\r\n    AccountingEngineLike public accountingEngine;\r\n\r\n    constructor(address accountingEngine_) public GebAuth() {\r\n        require(accountingEngine_ != address(0), \"MinimalAccountingEngineOverlay/null-address\");\r\n        accountingEngine = AccountingEngineLike(accountingEngine_);\r\n    }\r\n\r\n    /*\r\n    * @notice Modify the systemStakingPool address inside the AccountingEngine\r\n    * @param parameter Must be \"systemStakingPool\"\r\n    * @param data The new address for the systemStakingPool\r\n    */\r\n    function modifyParameters(bytes32 parameter, address data) external isAuthorized {\r\n        if (parameter == \"systemStakingPool\") {\r\n          accountingEngine.modifyParameters(parameter, data);\r\n        }\r\n        else revert(\"MinimalAccountingEngineOverlay/modify-forbidden-param\");\r\n    }\r\n    /*\r\n    * @notice Modify extraSurplusIsTransferred\r\n    * @param parameter Must be \"extraSurplusIsTransferred\"\r\n    * @param data The new value for extraSurplusIsTransferred\r\n    */\r\n    function modifyParameters(bytes32 parameter, uint256 data) external isAuthorized {\r\n        if (parameter == \"extraSurplusIsTransferred\") {\r\n          accountingEngine.modifyParameters(parameter, data);\r\n        }\r\n        else revert(\"MinimalAccountingEngineOverlay/modify-forbidden-param\");\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"accountingEngine_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RemoveAuthorization\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountingEngine\",\"outputs\":[{\"internalType\":\"contract AccountingEngineLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedAccounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parameter\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"data\",\"type\":\"address\"}],\"name\":\"modifyParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parameter\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"modifyParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MinimalAccountingEngineOverlay","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000cee6aa1ab47d0fb0f24f51a3072ec16e20f90fce","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d1b8069dfae18fa4f407afde688f6667fa721f4f5d6bfbef7fa1a8f2432b6262"}]}