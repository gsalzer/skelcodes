{"status":"1","message":"OK","result":[{"SourceCode":"{\"TalhaToken.sol\":{\"content\":\"pragma solidity ^0.5.16;\\r\\n\\r\\ncontract TalhaToken {\\r\\n\\tstring  public name = \\\"Talha Token\\\";\\r\\n\\tstring  public symbol = \\\"TALHA\\\";\\r\\n\\r\\n\\tuint256 public totalSupply;\\r\\n\\r\\n\\tmapping(address =\\u003e uint256) public balanceOf;\\r\\n\\tmapping(address =\\u003e mapping(address =\\u003e uint256)) public allowance;\\r\\n\\r\\n\\t/* Events */\\r\\n\\tevent Transfer(\\r\\n\\t\\taddress indexed _from,\\r\\n\\t\\taddress indexed _to,\\r\\n\\t\\tuint256 _value);\\r\\n\\r\\n\\tevent Approval(\\r\\n\\t\\taddress indexed _owner,\\r\\n\\t\\taddress indexed _spender,\\r\\n\\t\\tuint256 _value);\\r\\n\\r\\n\\t/*Constructor*/\\r\\n\\tconstructor(uint256 _initialSupply) public {\\r\\n\\t\\tbalanceOf[msg.sender] = _initialSupply;\\r\\n\\t\\ttotalSupply = _initialSupply;\\r\\n\\t}\\r\\n\\r\\n\\t/*ERC20 Standard functions*/\\r\\n\\tfunction transfer(address _to, uint256 _value) public returns (bool success) {\\r\\n\\t\\trequire(balanceOf[msg.sender] \\u003e= _value);\\r\\n\\r\\n\\t\\tbalanceOf[msg.sender] -= _value;\\r\\n\\t\\tbalanceOf[_to] += _value;\\r\\n\\r\\n\\t\\temit Transfer(msg.sender, _to, _value);\\r\\n\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction approve(address _spender, uint256 _value) public returns (bool success) {\\r\\n\\t\\tallowance[msg.sender][_spender] = _value;\\r\\n\\r\\n\\t\\temit Approval(msg.sender, _spender, _value);\\r\\n\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\\r\\n\\t\\trequire(_value \\u003c= balanceOf[_from]);\\r\\n\\t\\trequire(_value \\u003c= allowance[_from][msg.sender]);\\r\\n\\r\\n\\t\\tbalanceOf[_from] -= _value;\\r\\n\\t\\tbalanceOf[_to] += _value;\\r\\n\\r\\n\\t\\tallowance[_from][msg.sender] -= _value;\\r\\n\\r\\n\\t\\temit Transfer(_from, _to, _value);\\r\\n\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n}\"},\"TalhaTokenSale.sol\":{\"content\":\"pragma solidity ^0.5.16;\\r\\n\\r\\nimport \\\"./TalhaToken.sol\\\";\\r\\n\\r\\ncontract TalhaTokenSale {\\r\\n    address payable auctioneer; \\r\\n\\r\\n    uint256 public tokenPrice;\\r\\n    uint256 public tokensSold;\\r\\n    TalhaToken public tokenContract;\\r\\n\\r\\n    event Sell(address _buyer, uint256 _amount);\\r\\n\\r\\n    constructor(TalhaToken _tokenContract, uint256 _tokenPrice) public {\\r\\n    \\tauctioneer = msg.sender;\\r\\n    \\ttokenContract = _tokenContract;\\r\\n    \\ttokenPrice = _tokenPrice;\\r\\n    }\\r\\n\\r\\n    //Taken from DS-Math. [https://github.com/dapphub/ds-math/blob/master/src/math.sol]\\r\\n    function multiply(uint x, uint y) internal pure returns (uint z) {\\r\\n    \\trequire(y == 0 || (z = x * y) / y == x);\\r\\n    }\\r\\n\\r\\n    function buyTokens(uint256 _numberOfTokens) public payable {\\r\\n    \\trequire(msg.value == multiply(_numberOfTokens, tokenPrice));\\r\\n    \\trequire(tokenContract.balanceOf(address(this)) \\u003e= _numberOfTokens);\\r\\n    \\trequire(tokenContract.transfer(msg.sender, _numberOfTokens));\\r\\n\\r\\n    \\ttokensSold += _numberOfTokens;\\r\\n\\r\\n    \\temit Sell(msg.sender, _numberOfTokens);\\r\\n    }\\r\\n\\r\\n    function endSale() public {\\r\\n    \\trequire(msg.sender == auctioneer);\\r\\n    \\trequire(tokenContract.transfer(auctioneer, tokenContract.balanceOf(address(this))));\\r\\n\\r\\n    \\tauctioneer.transfer(address(this).balance);\\r\\n    }\\r\\n}\"}}","ABI":"[{\"inputs\":[{\"internalType\":\"contract TalhaToken\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"contract TalhaToken\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TalhaTokenSale","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000003dbc4e75ffceeb080691b889523fb458d77318c200000000000000000000000000000000000000000000000000044364c5bb0000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://f50fbc3920fa0d4388722a53712d38f39e931465e91b4fab39e2228a212ec9e8"}]}