{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\ninterface IProofOfHumanity {\r\n    /** @dev Return true if the submission is registered and not expired.\r\n     *  @param _submissionID The address of the submission.\r\n     *  @return Whether the submission is registered or not.\r\n     */\r\n    function isRegistered(address _submissionID) external view returns (bool);\r\n\r\n    /** @dev Return the number of submissions irrespective of their status.\r\n     *  @return The number of submissions.\r\n     */\r\n    function submissionCounter() external view returns (uint256);\r\n}\r\n\r\n/**\r\n * @title ERC20 Interface\r\n * @dev See https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol.\r\n */\r\ninterface IERC20 {\r\n    function balanceOf(address _human) external view returns (uint256);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n}\r\n\r\n/**\r\n *  @title UBIProxy\r\n *  A proxy contract for UBI that implements a token interface to interact with other dapps.\r\n *  Note that it isn't an ERC20 and only implements its interface in order to be compatible with Snapshot.\r\n */\r\ncontract UBIProxy {\r\n    IProofOfHumanity public PoH;\r\n    IERC20 public UBI;\r\n    address public governor = msg.sender;\r\n    string public name = \"UBI Vote\";\r\n    string public symbol = \"UBIVOTE\";\r\n    uint8 public decimals = 18;\r\n\r\n    /** @dev Constructor.\r\n     *  @param _PoH The address of the related ProofOfHumanity contract.\r\n     *  @param _UBI The address of the related UBI contract.\r\n     */\r\n    constructor(IProofOfHumanity _PoH, IERC20 _UBI) public {\r\n        PoH = _PoH;\r\n        UBI = _UBI;\r\n    }\r\n\r\n    /** @dev Changes the address of the the related ProofOfHumanity contract.\r\n     *  @param _PoH The address of the new contract.\r\n     */\r\n    function changePoH(IProofOfHumanity _PoH) external {\r\n        require(msg.sender == governor, \"The caller must be the governor.\");\r\n        PoH = _PoH;\r\n    }\r\n\r\n    /** @dev Changes the address of the the related UBI contract.\r\n     *  @param _UBI The address of the new contract.\r\n     */\r\n    function changeUBI(IERC20 _UBI) external {\r\n        require(msg.sender == governor, \"The caller must be the governor.\");\r\n        UBI = _UBI;\r\n    }\r\n\r\n    /** @dev Changes the address of the the governor.\r\n     *  @param _governor The address of the new governor.\r\n     */\r\n    function changeGovernor(address _governor) external {\r\n        require(msg.sender == governor, \"The caller must be the governor.\");\r\n        governor = _governor;\r\n    }\r\n\r\n    /** @dev Returns true if the submission is registered and not expired.\r\n     *  @param _submissionID The address of the submission.\r\n     *  @return Whether the submission is registered or not.\r\n     */\r\n    function isRegistered(address _submissionID) public view returns (bool) {\r\n        return PoH.isRegistered(_submissionID);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the square root of a number. Uses the Babylonian Method.\r\n     * @param x The input.\r\n     * @return y The square root of the input.\r\n     **/\r\n    function sqrt(uint256 x) private pure returns (uint256 y) {\r\n        uint256 z = (x + 1) / 2;\r\n        y = x;\r\n        while (z < y) {\r\n            y = z;\r\n            z = (x / z + z) / 2;\r\n        }\r\n    }\r\n\r\n    // ******************** //\r\n    // *      IERC20      * //\r\n    // ******************** //\r\n\r\n    /** @dev Returns the square root of the UBI balance of a particular submission of the ProofOfHumanity contract.\r\n     *  Note that this function takes the expiration date into account.\r\n     *  @param _submissionID The address of the submission.\r\n     *  @return The balance of the submission.\r\n     */\r\n    function balanceOf(address _submissionID) external view returns (uint256) {\r\n        return\r\n            isRegistered(_submissionID)\r\n                ? sqrt(UBI.balanceOf(_submissionID))\r\n                : 0;\r\n    }\r\n\r\n    /** @dev Returns the total supply of the UBI token.\r\n     *  This function should really count the square root of each humans balance, but this would be costly.\r\n     *  @return The total supply.\r\n     */\r\n    function totalSupply() external view returns (uint256) {\r\n        return UBI.totalSupply();\r\n    }\r\n\r\n    function transfer(address _recipient, uint256 _amount)\r\n        external\r\n        returns (bool)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {}\r\n\r\n    function approve(address _spender, uint256 _amount)\r\n        external\r\n        returns (bool)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    function transferFrom(\r\n        address _sender,\r\n        address _recipient,\r\n        uint256 _amount\r\n    ) external returns (bool) {\r\n        return false;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IProofOfHumanity\",\"name\":\"_PoH\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_UBI\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"PoH\",\"outputs\":[{\"internalType\":\"contract IProofOfHumanity\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UBI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_submissionID\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"changeGovernor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IProofOfHumanity\",\"name\":\"_PoH\",\"type\":\"address\"}],\"name\":\"changePoH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_UBI\",\"type\":\"address\"}],\"name\":\"changeUBI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_submissionID\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"UBIProxy","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000c5e9ddebb09cd64dfacab4011a0d5cedaf7c9bdb000000000000000000000000dd1ad9a21ce722c151a836373babe42c868ce9a4","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://44969170abf3dece58193877a6a91b9cffb43fbc1b692a4b7a3da4b20f9afa7a"}]}