{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract owned {\r\n        address public owner;\r\n\r\n        constructor() public {\r\n            owner = msg.sender;\r\n        }\r\n\r\n        modifier onlyOwner {\r\n            require(msg.sender == owner);\r\n            _;\r\n        }\r\n\r\n        function transferOwnership(address newOwner) onlyOwner public {\r\n            owner = newOwner;\r\n        }\r\n}\r\n\r\ncontract fileStore is owned {\r\n    \r\n    using SafeMath for uint256;\r\n\r\n    /*\r\n     * vars\r\n    */\r\n    struct Items {\r\n        string issuerName;\r\n        string ownerId;\r\n        string fileHash;\r\n        string linkedTo;\r\n    }\r\n    \r\n    string[] public allFiles;\r\n    mapping (string => Items) public userFiles;\r\n    /*\r\n     * init\r\n    */\r\n    constructor() public {\r\n\r\n    }\r\n\r\n    /*Add file*/\r\n    function uploadCert(string memory _id, string memory _fileHash, string memory _ownerId, string memory _issuerName) public onlyOwner {\r\n        \r\n        userFiles[_id].issuerName = _issuerName;\r\n        userFiles[_id].ownerId = _ownerId;\r\n        userFiles[_id].fileHash = _fileHash;\r\n        userFiles[_id].linkedTo = \"None\";\r\n        allFiles.push(_id);\r\n    }\r\n    \r\n    /*Transfer file*/\r\n    function TransferCert(string memory _id, string memory linkedId, string memory _receiverID) public onlyOwner {\r\n        \r\n        userFiles[_id].issuerName = userFiles[linkedId].issuerName;\r\n        userFiles[_id].ownerId = _receiverID;\r\n        userFiles[_id].fileHash = userFiles[linkedId].fileHash;\r\n        userFiles[_id].linkedTo = linkedId;\r\n        allFiles.push(_id);\r\n    }\r\n    \r\n    /*get file details by id*/\r\n    function getUserFileDetails(string memory _id) view public returns (string memory, string memory, string memory, string memory)\r\n    {\r\n        return ( userFiles[_id].issuerName, userFiles[_id].ownerId, userFiles[_id].fileHash, userFiles[_id].linkedTo);\r\n    }\r\n    \r\n    /*get all files*/\r\n    function getAllUserFiles() view public returns (string[] memory )\r\n    {\r\n        return allFiles;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"linkedId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_receiverID\",\"type\":\"string\"}],\"name\":\"TransferCert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allFiles\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUserFiles\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_id\",\"type\":\"string\"}],\"name\":\"getUserFileDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_fileHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ownerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_issuerName\",\"type\":\"string\"}],\"name\":\"uploadCert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"userFiles\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"issuerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"fileHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"linkedTo\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"fileStore","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://be246e2b8da87715dc90d612c9b2d94118c6beb87bb5fadea56040713dc90996"}]}