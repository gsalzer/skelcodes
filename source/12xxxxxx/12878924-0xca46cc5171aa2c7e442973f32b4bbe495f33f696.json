{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/xiahonglin/ring/ring-protocol-core/contracts/pcv/IPCVDeposit.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title a PCV Deposit interface\\n/// @author Ring Protocol\\ninterface IPCVDeposit {\\n    // ----------- Events -----------\\n    event Deposit(address indexed _from, uint256 _amount);\\n    event Collect(address indexed _from, uint256 _amount0, uint256 _amount1);\\n\\n    event Withdrawal(\\n        address indexed _caller,\\n        address indexed _to,\\n        uint256 _amount\\n    );\\n\\n    // ----------- State changing api -----------\\n\\n    function deposit() external payable;\\n\\n    function collect() external returns (uint256 amount0, uint256 amount1);\\n\\n    // ----------- PCV Controller only state changing api -----------\\n\\n    function withdraw(address to, uint256 amount) external;\\n\\n    function burnAndReset(uint24 _fee, int24 _tickLower, int24 _tickUpper) external;\\n\\n    // ----------- Getters -----------\\n\\n    function fee() external view returns (uint24);\\n\\n    function tickLower() external view returns (int24);\\n\\n    function tickUpper() external view returns (int24);\\n\\n    function totalLiquidity() external view returns (uint128);\\n}\\n\"\r\n    },\r\n    \"/Users/xiahonglin/ring/ring-protocol-core/contracts/pcv/WithdrawPCVController.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity =0.7.6;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./IPCVDeposit.sol\\\";\\n\\n/// @author Ring Protocol\\ncontract WithdrawPCVController {\\n    address public receiver;\\n\\n    /// @notice WithdrawPCVController constructor\\n    /// @param _receiver receiver\\n    constructor(address _receiver) {\\n        receiver = _receiver;\\n    }\\n\\n    function withdrawLiquidity(address _pcvDeposit) external {\\n        require(msg.sender == receiver, \\\"RING: FORBIDDEN\\\");\\n        IPCVDeposit pcvDeposit = IPCVDeposit(_pcvDeposit);\\n        uint256 value = pcvDeposit.totalLiquidity();\\n        require(value > 0, \\\"ERC20UniswapPCVController: No liquidity to withdraw\\\");\\n        pcvDeposit.withdraw(receiver, value);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pcvDeposit\",\"type\":\"address\"}],\"name\":\"withdrawLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"WithdrawPCVController","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000c87eb3b9f3292c48b4fbe477f8a6bc17f5fad902","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}