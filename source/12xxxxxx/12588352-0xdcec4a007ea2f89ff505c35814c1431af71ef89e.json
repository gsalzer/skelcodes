{"status":"1","message":"OK","result":[{"SourceCode":"// File: @openzeppelin/contracts/utils/Strings.sol\r\n\r\n// spd-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        // Inspired by OraclizeAPI's implementation - MIT licence\r\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\r\n\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        bytes memory buffer = new bytes(digits);\r\n        uint256 index = digits - 1;\r\n        temp = value;\r\n        while (temp != 0) {\r\n            buffer[index--] = byte(uint8(48 + temp % 10));\r\n            temp /= 10;\r\n        }\r\n        return string(buffer);\r\n    }\r\n}\r\n\r\n// File: contracts/SVGGenerator2.sol\r\n\r\n// spd-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.6.8;\r\n\r\n\r\ncontract SVGGenerator2 {\r\n\r\n  using Strings for uint256;\r\n\r\n  function createSVG(uint256 id, uint256 gasPrice) external pure returns (string memory) {\r\n    gasPrice = gasPrice/(10**9);\r\n    string memory color = getColor(gasPrice);\r\n    string memory animationDuration = getSpeed(gasPrice);\r\n    string memory svg = string(abi.encodePacked('<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 300 300\"><rect width=\"280\" height=\"280\" x=\"10\" y=\"10\" fill=\"#eee\" ry=\"10\" rx=\"10\"/> <path d=\"M70 32c-13 0-24 11-24 24v102l-19 4v30h149v-30l-19-4V87h10v37h15V90l2-1 8-8c2-1 2-4 1-5l-4-4-1-1 15-14-2-2-16 15-2 1-8 8c-2 2-2 4-1 6l4 3v31h-6V82h-15V56c0-13-10-24-24-24z\" fill=\"',\r\n    color,\r\n    '\"/><rect width=\"67\" height=\"34\" x=\"68\" y=\"49\" ry=\"10\" rx=\"10\" fill=\"#fff\"/><circle r=\"5\" cx=\"205\" cy=\"60\"><animate attributeName=\"cy\" values=\"60;100\" dur=\"',\r\n    animationDuration,\r\n    's\" repeatCount=\"indefinite\" fill=\"freeze\"/></circle><circle r=\"5\" cx=\"205\" cy=\"100\"><animate attributeName=\"cy\" values=\"100;140\" dur=\"',\r\n    animationDuration,\r\n    's\" repeatCount=\"indefinite\" fill=\"freeze\"/></circle><circle r=\"5\" cx=\"205\" cy=\"140\"><animate attributeName=\"cy\" values=\"140;180\" dur=\"',\r\n    animationDuration,\r\n    's\" repeatCount=\"indefinite\" fill=\"freeze\"/></circle><rect width=\"20\" height=\"10\" x=\"195\" y=\"180\" rx=\"5\"><animate attributeName=\"width\" values=\"20;30;20\" dur=\"',\r\n    animationDuration,\r\n    's\" repeatCount=\"indefinite\" fill=\"freeze\" begin=\"',\r\n    animationDuration,\r\n    's\"/><animate attributeName=\"x\" values=\"195;190;195\" dur=\"',\r\n    animationDuration,\r\n    's\" repeatCount=\"indefinite\" fill=\"freeze\" begin=\"',\r\n    animationDuration,\r\n    's\"/></rect><text x=\"50\" y=\"230\" font-size=\"24\" font-weight=\"bold\">NFGas #',\r\n    id.toString(),\r\n    '</text><text x=\"70\" y=\"130\" font-size=\"34\" font-weight=\"bold\" fill=\"#fff\">',\r\n    gasPrice.toString(),\r\n    '</text></svg>'));\r\n    return svg;\r\n  }\r\n\r\n  function getSpeed(uint256 gasPrice) internal pure returns(string memory) {\r\n    if (gasPrice > 400) {\r\n      return \"0.2\";\r\n    }\r\n    if (gasPrice > 300) {\r\n      return \"0.3\";\r\n    }\r\n    if (gasPrice > 200) {\r\n      return \"0.4\";\r\n    }\r\n    if (gasPrice > 100) {\r\n      return \"0.8\";\r\n    }\r\n    if (gasPrice > 50) {\r\n      return \"1\";\r\n    }\r\n    else {\r\n      return (51/(gasPrice+1)).toString();\r\n    }\r\n  }\r\n\r\n  function getColor(uint256 gasPrice) internal pure returns(string memory) {\r\n    if (gasPrice <= 2) {\r\n      return \"rgb(220, 20, 60)\";\r\n    }\r\n    if (gasPrice <= 4) {\r\n      return \"rgb(230, 215, 140)\";\r\n    }\r\n    if (gasPrice <= 8) {\r\n      return \"rgb(120, 240, 20)\";\r\n    }\r\n    if (gasPrice <= 16) {\r\n      return \"rgb(20, 200, 209)\";\r\n    }\r\n    if (gasPrice <= 32) {\r\n      return \"rgb(30, 150, 220)\";\r\n    }\r\n    if (gasPrice <= 64) {\r\n      return \"rgb(120, 100, 220)\";\r\n    }\r\n    if (gasPrice <= 128) {\r\n      return \"rgb(220, 160, 220)\";\r\n    }\r\n    if (gasPrice <= 256) {\r\n      return \"rgb(250, 200, 200)\";\r\n    }\r\n    if (gasPrice <= 512) {\r\n      return \"rgb(120, 120, 120)\";\r\n    }\r\n    if (gasPrice <= 1000) {\r\n      return \"rgb(20, 40, 20)\";\r\n    }\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"}],\"name\":\"createSVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"SVGGenerator2","CompilerVersion":"v0.6.8+commit.0bbfe453","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unknown","Proxy":"0","Implementation":"","SwarmSource":"ipfs://e28ca8c01e2e7159418d0bdda7f0f7870a22877daff8775f475cf15e28b2d09b"}]}