{"status":"1","message":"OK","result":[{"SourceCode":"/// SPDX-License-Identifier: GPL-3.0-or-later\r\n/*\r\n ▄         ▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄         ▄  ▄▄▄▄▄▄▄▄▄▄▄ \r\n▐░▌       ▐░▌▐░░░░░░░░░░░▌▐░▌       ▐░▌▐░░░░░░░░░░░▌\r\n▐░▌       ▐░▌▐░█▀▀▀▀▀▀▀▀▀ ▐░▌       ▐░▌ ▀▀▀▀█░█▀▀▀▀ \r\n▐░▌       ▐░▌▐░▌          ▐░▌       ▐░▌     ▐░▌     \r\n▐░▌       ▐░▌▐░▌          ▐░█▄▄▄▄▄▄▄█░▌     ▐░▌     \r\n▐░▌       ▐░▌▐░▌          ▐░░░░░░░░░░░▌     ▐░▌     \r\n▐░▌       ▐░▌▐░▌          ▐░█▀▀▀▀▀▀▀█░▌     ▐░▌     \r\n▐░▌       ▐░▌▐░▌          ▐░▌       ▐░▌     ▐░▌     \r\n▐░█▄▄▄▄▄▄▄█░▌▐░█▄▄▄▄▄▄▄▄▄ ▐░▌       ▐░▌ ▄▄▄▄█░█▄▄▄▄ \r\n▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌       ▐░▌▐░░░░░░░░░░░▌\r\n ▀▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀         ▀  ▀▀▀▀▀▀▀▀▀▀▀ */\r\npragma solidity 0.8.3;\r\n\r\n/// @notice Interface for SushiSwap pair creation and ETH liquidity provision.\r\ninterface ISushiSwapLaunch {\r\n    function approve(address to, uint amount) external returns (bool); \r\n    function transferFrom(address from, address to, uint amount) external returns (bool);\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\n/// @notice Whitelist ERC20 token with SushiSwap launch.\r\ncontract UchiToken {\r\n    ISushiSwapLaunch constant sushiSwapFactory=ISushiSwapLaunch(0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac);\r\n    address constant sushiSwapRouter=0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F;\r\n    address constant wETH=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; \r\n    address public governance;\r\n    string public name;\r\n    string public symbol;\r\n    uint8 constant public decimals=18;\r\n    uint public totalSupply;\r\n    uint immutable public totalSupplyCap;\r\n    bool public uchiRestricted;\r\n    \r\n    mapping(address=>mapping(address=>uint)) public allowance;\r\n    mapping(address=>uint) public balanceOf;\r\n    mapping(address=>bool) public uchi;\r\n    \r\n    event Approval(address indexed owner, address indexed spender, uint amount);\r\n    event Transfer(address indexed from, address indexed to, uint amount);\r\n    event UpdateUchi(address indexed account, bool approved);\r\n    \r\n    constructor(\r\n        address[] memory _uchi, // initial whitelist array of accounts\r\n        string memory _name, // erc20-formatted UchiToken 'name'\r\n        string memory _symbol, // erc20-formatted UchiToken 'symbol'\r\n        uint _totalSupplyCap, // supply cap for UchiToken mint\r\n        uint pairDistro, // UchiToken amount minted for `sushiPair`\r\n        uint[] memory uchiDistro, // UchiToken amount minted to `uchi`\r\n        bool market // if 'true', launch pair and add ETH liquidity on SushiSwap via 'Factory'\r\n    ){\r\n        for(uint i=0;i<_uchi.length;i++){\r\n            balanceOf[_uchi[i]]=uchiDistro[i];\r\n            totalSupply+=uchiDistro[i];\r\n            uchi[_uchi[i]]=true;\r\n            emit Transfer(address(0), _uchi[i], uchiDistro[i]);}\r\n        if(market){\r\n            address sushiPair=sushiSwapFactory.createPair(address(this), wETH);\r\n            uchi[msg.sender]=true;\r\n            uchi[sushiSwapRouter]=true;\r\n            uchi[sushiPair]=true;\r\n            balanceOf[msg.sender]=pairDistro;\r\n            totalSupply+=pairDistro;\r\n            emit Transfer(address(0), msg.sender, pairDistro);}\r\n        require(totalSupply<=_totalSupplyCap,'capped'); \r\n        governance=_uchi[0]; // first `uchi` is `governance`\r\n        name=_name;\r\n        symbol=_symbol;\r\n        totalSupplyCap=_totalSupplyCap;\r\n        uchiRestricted=true;\r\n        balanceOf[address(this)]=type(uint).max; // max local balance blocks sends to UchiToken via overflow check (+saves gas)\r\n    }\r\n\r\n    /// - RESTRICTED ERC20 - ///\r\n    function approve(address to, uint amount) external returns (bool) {\r\n        allowance[msg.sender][to]=amount;\r\n        emit Approval(msg.sender, to, amount);\r\n        return true;\r\n    }\r\n    \r\n    function transfer(address to, uint amount) external returns (bool) {\r\n        if(uchiRestricted){require(uchi[msg.sender]&&uchi[to],'!uchi');}\r\n        balanceOf[msg.sender]-=amount;\r\n        balanceOf[to]+=amount;\r\n        emit Transfer(msg.sender, to, amount);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address from, address to, uint amount) external returns (bool) {\r\n        if(uchiRestricted){require(uchi[from]&&uchi[to],'!uchi');}\r\n        allowance[from][msg.sender]-=amount;\r\n        balanceOf[from]-=amount;\r\n        balanceOf[to]+=amount;\r\n        emit Transfer(from, to, amount);\r\n        return true;\r\n    }\r\n    \r\n    /// - GOVERNANCE - ///\r\n    modifier onlyGovernance {\r\n        require(msg.sender==governance,'!governance');\r\n        _;\r\n    }\r\n    \r\n    function mint(address to, uint amount) external onlyGovernance {\r\n        require(totalSupply+amount<=totalSupplyCap,'capped'); \r\n        balanceOf[to]+=amount; \r\n        totalSupply+=amount; \r\n        emit Transfer(address(0), to, amount); \r\n    }\r\n    \r\n    function transferGovernance(address _governance) external onlyGovernance {\r\n        governance=_governance;\r\n    }\r\n\r\n    function updateUchi(address[] calldata account, bool[] calldata approved) external onlyGovernance {\r\n        for(uint i=0;i<account.length;i++){\r\n            uchi[account[i]]=approved[i];\r\n            emit UpdateUchi(account[i], approved[i]);\r\n        }\r\n    }\r\n\r\n    function updateUchiRestriction(bool _uchiRestricted) external onlyGovernance {\r\n        uchiRestricted=_uchiRestricted;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_uchi\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupplyCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pairDistro\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"uchiDistro\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"market\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"UpdateUchi\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"transferGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"uchi\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uchiRestricted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"account\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"approved\",\"type\":\"bool[]\"}],\"name\":\"updateUchi\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_uchiRestricted\",\"type\":\"bool\"}],\"name\":\"updateUchiRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"UchiToken","CompilerVersion":"v0.8.3+commit.8d00100c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000021e19e0c9bab240000000000000000000000000000000000000000000000000003635c9adc5dea0000000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000001c0aa8ccd568d90d61659f060d1bfb1e6f855a20000000000000000000000000000000000000000000000000000000000000000455434849000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004554348490000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000de0b6b3a7640000","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://6f9a311001fdfe3bf05adfa9d853861f5df882565c29a5d05272396095aef883"}]}