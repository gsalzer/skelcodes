{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.8.0;\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC-721 Helper v0.9.1\r\n//\r\n// https://github.com/bokkypoobah/TokenToolz\r\n//\r\n// Deployed to 0x12B7458c90616c68fCC37C74609313fD105771F8\r\n//\r\n// SPDX-License-Identifier: MIT\r\n//\r\n// Enjoy.\r\n//\r\n// (c) BokkyPooBah / Bok Consulting Pty Ltd 2021. The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\ninterface IERC721 {\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function totalSupply() external view returns (uint256);\r\n    \r\n    function ownerOf(uint256 tokenId) external view returns (address);\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\r\n    function tokenByIndex(uint256 index) external view returns (uint256);\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}\r\n\r\n\r\ncontract ERC721Helper {\r\n    function tokenInfo(IERC721 token) external view returns(string memory _symbol, string memory _name, uint _totalSupply) {\r\n        return (token.symbol(), token.name(), token.totalSupply());\r\n    }\r\n\r\n    function tokenURIs(IERC721 token, uint from, uint to) external view returns(uint[] memory _tokenIds, string[] memory _tokenURIs) {\r\n        require(from < to && to <= token.totalSupply());\r\n        _tokenIds = new uint[](to - from);\r\n        _tokenURIs = new string[](to - from);\r\n        uint i = 0;\r\n        for (uint index = from; index < to; index++) {\r\n            uint tokenId = token.tokenByIndex(index);\r\n            _tokenIds[i] = tokenId;    \r\n            _tokenURIs[i] = token.tokenURI(tokenId);\r\n            i++;\r\n        }\r\n    }\r\n\r\n    function owners(IERC721 token, uint from, uint to) external view returns(uint[] memory _tokenIds, address[] memory _owners) {\r\n        require(from < to && to <= token.totalSupply());\r\n        _tokenIds = new uint[](to - from);\r\n        _owners = new address[](to - from);\r\n        uint i = 0;\r\n        for (uint index = from; index < to; index++) {\r\n            uint tokenId = token.tokenByIndex(index);\r\n            _tokenIds[i] = tokenId;\r\n            _owners[i] = token.ownerOf(tokenId);\r\n            i++;\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"}],\"name\":\"tokenURIs\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"_tokenURIs\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ERC721Helper","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://24fd1dbca1e10144b00ab681700f26b5fd69575ba0c02ba390453c61d6df57e4"}]}