{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: MIT\r\npragma solidity 0.6.6;\r\n\r\ninterface IPair {\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n}\r\n\r\nabstract contract Factory  {\r\n    address[] public allPairs;\r\n    function allPairsLength() external view virtual returns (uint);\r\n}\r\n\r\ncontract PairQuery {\r\n    function getPairs(IPair[] calldata _pairs) external view returns (address[3][] memory, uint[2][] memory, uint) {\r\n        uint len = _pairs.length;\r\n        address[3][] memory result = new address[3][](len);\r\n        uint[2][] memory reserves = new uint[2][](len);\r\n        for (uint i = 0; i < len; i++) {\r\n            IPair pair = IPair(_pairs[i]);\r\n            result[i][0] = pair.token0();\r\n            result[i][1] = pair.token1();\r\n            result[i][2] = address(pair);\r\n            (reserves[i][0], reserves[i][1], ) = pair.getReserves();\r\n        }\r\n        return (result,reserves,block.number);\r\n    }\r\n    \r\n    function getPairsByIndexRange(Factory _factory, uint _start, uint _stop) external view returns (address[3][] memory, uint[2][] memory, uint) {\r\n        uint _allPairsLength =_factory.allPairsLength();\r\n        if (_stop > _allPairsLength) {\r\n            _stop = _allPairsLength;\r\n        }\r\n        require(_stop >= _start, \"start cannot be higher than stop\");\r\n        uint len = _stop - _start + 1;\r\n        address[3][] memory result = new address[3][](len);\r\n        uint[2][] memory reserves = new uint[2][](len);\r\n        for (uint i = 0; i < len; i++) {\r\n            IPair pair = IPair(_factory.allPairs(_start + i));\r\n            result[i][0] = pair.token0();\r\n            result[i][1] = pair.token1();\r\n            result[i][2] = address(pair);\r\n            (reserves[i][0], reserves[i][1], ) = pair.getReserves();\r\n        }\r\n        return (result,reserves,block.number);\r\n    }\r\n    \r\n    function getAllPairLength(Factory _factory) external view returns (uint) {\r\n        return _factory.allPairsLength();\r\n    }\r\n    \r\n    function getAllPairLengthByFactorys(Factory[] calldata _factorys) external view returns (uint[] memory, uint) {\r\n        uint len = _factorys.length;\r\n        uint[] memory result = new uint[](len);\r\n        for (uint i = 0; i < len; i++){\r\n            result[i] = _factorys[i].allPairsLength();\r\n        }\r\n        return (result, block.number);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract Factory\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"getAllPairLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Factory[]\",\"name\":\"_factorys\",\"type\":\"address[]\"}],\"name\":\"getAllPairLengthByFactorys\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPair[]\",\"name\":\"_pairs\",\"type\":\"address[]\"}],\"name\":\"getPairs\",\"outputs\":[{\"internalType\":\"address[3][]\",\"name\":\"\",\"type\":\"address[3][]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Factory\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stop\",\"type\":\"uint256\"}],\"name\":\"getPairsByIndexRange\",\"outputs\":[{\"internalType\":\"address[3][]\",\"name\":\"\",\"type\":\"address[3][]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"PairQuery","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://a4cee1b97db58d568a21573780554d675e1a122a3013ac47d6cb228953257f7d"}]}