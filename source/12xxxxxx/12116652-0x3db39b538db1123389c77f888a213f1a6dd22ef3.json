{"status":"1","message":"OK","result":[{"SourceCode":"// File: localhost/VaultParameters.sol\r\n\r\n// SPDX-License-Identifier: bsl-1.1\r\n\r\n/*\r\n  Copyright 2020 Unit Protocol: Artem Zakharov (az@unit.xyz).\r\n*/\r\npragma solidity ^0.7.1;\r\n\r\n\r\n/**\r\n * @title Auth\r\n * @dev Manages USDP's system access\r\n **/\r\ncontract Auth {\r\n\r\n    // address of the the contract with vault parameters\r\n    VaultParameters public vaultParameters;\r\n\r\n    constructor(address _parameters) {\r\n        vaultParameters = VaultParameters(_parameters);\r\n    }\r\n\r\n    // ensures tx's sender is a manager\r\n    modifier onlyManager() {\r\n        require(vaultParameters.isManager(msg.sender), \"Unit Protocol: AUTH_FAILED\");\r\n        _;\r\n    }\r\n\r\n    // ensures tx's sender is able to modify the Vault\r\n    modifier hasVaultAccess() {\r\n        require(vaultParameters.canModifyVault(msg.sender), \"Unit Protocol: AUTH_FAILED\");\r\n        _;\r\n    }\r\n\r\n    // ensures tx's sender is the Vault\r\n    modifier onlyVault() {\r\n        require(msg.sender == vaultParameters.vault(), \"Unit Protocol: AUTH_FAILED\");\r\n        _;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title VaultParameters\r\n **/\r\ncontract VaultParameters {\r\n\r\n    // permissions to modify the Vault\r\n    mapping(address => bool) public canModifyVault;\r\n\r\n    // managers\r\n    mapping(address => bool) public isManager;\r\n\r\n    // address of the Vault\r\n    address payable public vault;\r\n}\r\n\r\n// File: localhost/CollateralRegistry.sol\r\n\r\n/*\r\n  Copyright 2020 Unit Protocol: Artem Zakharov (az@unit.xyz).\r\n*/\r\npragma solidity ^0.7.1;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\n\r\n/**\r\n * @title CollateralRegistry\r\n **/\r\ncontract CollateralRegistry is Auth {\r\n\r\n    event CollateralAdded(address indexed asset);\r\n    event CollateralRemoved(address indexed asset);\r\n\r\n    mapping(address => uint) public collateralId;\r\n\r\n    address[] public collateralList;\r\n    \r\n    constructor(address _vaultParameters, address[] memory assets) Auth(_vaultParameters) {\r\n        for (uint i = 0; i < assets.length; i++) {\r\n            collateralList.push(assets[i]);\r\n            collateralId[assets[i]] = i;\r\n            emit CollateralAdded(assets[i]);\r\n        }\r\n    }\r\n\r\n    function addCollateral(address asset) public onlyManager {\r\n        require(asset != address(0), \"Unit Protocol: ZERO_ADDRESS\");\r\n\r\n        require(!isCollateral(asset), \"Unit Protocol: ALREADY_EXIST\");\r\n\r\n        collateralId[asset] = collateralList.length;\r\n        collateralList.push(asset);\r\n\r\n        emit CollateralAdded(asset);\r\n    }\r\n\r\n    function removeCollateral(address asset) public onlyManager {\r\n        require(asset != address(0), \"Unit Protocol: ZERO_ADDRESS\");\r\n\r\n        require(isCollateral(asset), \"Unit Protocol: DOES_NOT_EXIST\");\r\n\r\n        uint id = collateralId[asset];\r\n\r\n        delete collateralId[asset];\r\n\r\n        uint lastId = collateralList.length - 1;\r\n\r\n        if (id != lastId) {\r\n            address lastCollateral = collateralList[lastId];\r\n            collateralList[id] = lastCollateral;\r\n            collateralId[lastCollateral] = id;\r\n        }\r\n\r\n        collateralList.pop();\r\n\r\n        emit CollateralRemoved(asset);\r\n    }\r\n\r\n    function isCollateral(address asset) public view returns(bool) {\r\n        if (collateralList.length == 0) { return false; }\r\n        return collateralId[asset] != 0 || collateralList[0] == asset;\r\n    }\r\n\r\n    function collaterals() external view returns (address[] memory) {\r\n        return collateralList;\r\n    }\r\n\r\n    function collateralsCount() external view returns (uint) {\r\n        return collateralList.length;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultParameters\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"CollateralAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"CollateralRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"addCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collateralList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collaterals\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"isCollateral\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"removeCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultParameters\",\"outputs\":[{\"internalType\":\"contract VaultParameters\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"CollateralRegistry","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000b46f8cf42e504efe8bef895f848741daa55e9f1d00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000059000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000002260fac5e5542a773aa44fbcfedf7c193bc2c59900000000000000000000000092e187a03b6cd19cb6af293ba17f2745fd2357d50000000000000000000000001ceb5cb57c4d4e2b2433641b95dd330a33185a44000000000000000000000000d533a949740bb3306d119cc777fa900ba034cd520000000000000000000000000ae055097c6d159879521c384f1d2123d1f195e60000000000000000000000009f8f72aa9304c8b593d555f12ef6589cc3a579a20000000000000000000000000bc529c00c6401aef6d220be8c6ea1667f6ad93e000000000000000000000000bb2b8038a1640196fbe3e38816f3e67cba72d94000000000000000000000000087febfb3ac5791034fd5ef1a615e9d9627c2665d0000000000000000000000003da1313ae46132a397d90d95b1424a9a7e3e0fce0000000000000000000000003b3d4eefdc603b232907a7f3d0ed1eea5c62b5f70000000000000000000000002fdbadf3c4d5a8666bc06645b8358ab803996e28000000000000000000000000c3601f3e1c26d1a47571c559348e4156786d1fec0000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f9840000000000000000000000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae9000000000000000000000000c00e94cb662c3520282e6f5717214004a7f26888000000000000000000000000c011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f000000000000000000000000514910771af9ca656af840dff83e8264ecf986ca00000000000000000000000004fa0d235c4abf4bcf4787af4cf447de572ef828000000000000000000000000eb4c2781e4eba804ce9a9803c67d0893436bb27d000000000000000000000000584bc13c7d411c00c01a62e8019472de687684300000000000000000000000000d4a11d5eeaac28ec3f61d100daf4d40471f1852000000000000000000000000b4e16d0168e52d35cacd2c6185b44281ec28c9dc000000000000000000000000a478c2975ab1ea89e8196811f51a7b7ade33eb11000000000000000000000000d3d2e2692501a5c9ca623199d38826e513033a17000000000000000000000000a2107fa5b38d9bbd2c461d6edf11b11a50f6b974000000000000000000000000dfc14d2af169b0d36c4eff567ada9b2e0cae044f000000000000000000000000c2adda861f89bbb333c90c492cb837741916a22500000000000000000000000081fbef4704776cc5bba0a5df3a90056d2c6900b300000000000000000000000043ae24960e5534731fc831386c07755a2dc33d47000000000000000000000000cffdded873554f362ac02f8fb1f02e5ada10516f00000000000000000000000088d97d199b9ed37c29d846d00d443de980832a220000000000000000000000001273ad5d8f3596a7a39efdb5a4b8f82e8f003fc3000000000000000000000000795065dcc9f64b5614c407a6efdc400da6221fb0000000000000000000000000001b6450083e531a5a7bf310bd2c1af4247e23d400000000000000000000000006da0fd433c1a5d7a4faa01111c044910a184553000000000000000000000000088ee5007c98a9677165d78dd2109ae4a3d04d0c00000000000000000000000031503dcb60119a812fee820bb7042752019f2355000000000000000000000000397ff1542f962076d0bfe58ea045ffa2d347aca000000000000000000000000058dc5a51fe44589beb22e8ce67720b5bc5378009000000000000000000000000611cde65dea90918c0078ac0400a72b0d25b9bb1000000000000000000000000a1d7b2d891e3a1f9ef4bbc5be20630c2feb1c470000000000000000000000000a75f7c2f025f470355515482bde9efa8153536a8000000000000000000000000c3d03e4f041fd4cd388c549ee2a29a9e5075882f000000000000000000000000c40d16476380e4037e6b1a2594caf6a6cc8da967000000000000000000000000ceff51756c56ceffca006cd410b03ffc46dd3a58000000000000000000000000d75ea151a61d06868e31f8988d28dfe5e9df57b4000000000000000000000000dafd66636e2561b0284edde37e42d192f2844d40000000000000000000000000f1f85b2c54a2bd284b1cf4141d64fd171bd85539000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000006b175474e89094c44da98b954eedeac495271d0f00000000000000000000000057ab1ec28d129707052df4df418d58a2d46d5f510000000000000000000000001494ca1f11d487c2bbe4543e90080aeba4ba3c2b000000000000000000000000ba11d00c5f74255f56a5e366f4f77f5a186d7f55000000000000000000000000408e41876cccdc0f92210600ef50372656052a380000000000000000000000006b3595068778dd592e39a122f4f5a5cf09c90fe2000000000000000000000000c944e90c64b2c07662a292be6244bdf05cda44a7000000000000000000000000a3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2000000000000000000000000429881672b9ae42b8eba0e26cd9c73711b891ca5000000000000000000000000bc396689893d065f41bc2c6ecbee5e0085233447000000000000000000000000967da4048cd07ab37855c090aaf366e4ce1b9f48000000000000000000000000ba100000625a3754423978a60c9317c58a424e3d0000000000000000000000002ba592f78db6436527729929aaf6c908497cb2000000000000000000000000005bc25f649fc4e26069ddf4cf4010f9f706c23831000000000000000000000000e2f2a5c287993345a840db3b0845fbc70f5935a5000000000000000000000000d26114cd6ee289accf82350c8d8487fedb8a0c070000000000000000000000003472a5a71965499acd81997a54bba8d852c6e53d0000000000000000000000004e15361fd6b4bb609fa63c81a2be19d8737178700000000000000000000000004688a8b1f292fdab17e9a90c8bc379dc1dbd87130000000000000000000000000aacfbec6a24756c20d41914f2caba817c0d8521000000000000000000000000c5bddf9843308380375a611c18b50fb9341f502a00000000000000000000000010b47177e92ef9d5c6059055d92ddf62908489910000000000000000000000008798249c2e607446efb7ad49ec89dd1865ff4272000000000000000000000000f99d58e463a2e07e5692127302c20a191861b4d60000000000000000000000001337def16f9b486faed0293eb623dc8395dfe46a0000000000000000000000003c9d6c1c73b31c837832c72e04d3152f051fc1a9000000000000000000000000b753428af26e81097e7fd17f40c88aaa3e04902c00000000000000000000000023b608675a2b2fb1890d3abbd85c5775c51691d5000000000000000000000000d291e7a03283640fdc51b121ac401383a46cc6230000000000000000000000001c5db575e2ff833e46a2e9864c22f4b22e0b37c2000000000000000000000000d5147bc8e386d91cc5dbe72099dac6c9b99276f50000000000000000000000003832d2f059e55934220881f831be501d180671a7000000000000000000000000e6c804ff4ec692e6808c0d032cdbc03772fc4d420000000000000000000000004423be2173401e96065953a3e962ba7b8fdba68a000000000000000000000000b46736888247c68c995b156ca86426ff32e27cc9000000000000000000000000dbdb4d16eda451d0503b854cf79d55697f90c8df0000000000000000000000008888801af4d980682e47f1a9036e589479e835c5","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f728b78d0f871e32e76ccaaab0fb4d4557adc62e1e86e0aa37a51a8a1e305dab"}]}