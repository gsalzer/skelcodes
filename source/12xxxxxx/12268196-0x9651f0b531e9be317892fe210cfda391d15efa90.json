{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.12;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract TokenSwaper {\r\n    using SafeMath for uint256;\r\n\r\n    address public newTokenAddr = 0x46d0DAc0926fa16707042CAdC23F1EB4141fe86B;\r\n    address public oldTokenAddr = 0x983F6d60db79ea8cA4eB9968C6aFf8cfA04B3c63;\r\n    address public newApprover;\r\n    address public oldApprover;\r\n    address public owner;\r\n    \r\n    uint256 public toNewDeadline;\r\n    uint256 public toOldDeadline;\r\n    uint256 public toNewRate;\r\n\r\n    constructor(\r\n        address _newApprover,\r\n        address _oldApprover,\r\n        uint256 _toNewDeadline,\r\n        uint256 _toOldDeadline,\r\n        uint256 _toNewRate\r\n    ) \r\n        public \r\n    {\r\n        newApprover = _newApprover;\r\n        oldApprover = _oldApprover;\r\n        toNewDeadline = _toNewDeadline;\r\n        toOldDeadline = _toOldDeadline;\r\n        toNewRate = _toNewRate;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n\r\n    function SwapToNew(uint256 _amount) external {\r\n        require(block.number <= toNewDeadline, \"toNew: ended\");\r\n        IERC20(oldTokenAddr).transferFrom(msg.sender, address(this), _amount);\r\n        uint256 newAmount = _amount.div(toNewRate);\r\n        uint256 newBal = IERC20(newTokenAddr).balanceOf(address(this));\r\n        if(newBal >= newAmount){\r\n            IERC20(newTokenAddr).transfer(msg.sender, newAmount);\r\n        }else{\r\n            IERC20(newTokenAddr).transferFrom(newApprover, msg.sender, newAmount);\r\n        }\r\n    }\r\n\r\n    function SwapToOld(uint256 _amount) external {\r\n        require(block.number <= toOldDeadline, \"toOld: ended\");\r\n        IERC20(newTokenAddr).transferFrom(msg.sender, address(this), _amount);\r\n        uint256 oldAmount = _amount.mul(toNewRate);\r\n        uint256 oldBal = IERC20(oldTokenAddr).balanceOf(address(this));\r\n        if(oldBal >= oldAmount){\r\n            IERC20(oldTokenAddr).transfer(msg.sender, oldAmount);\r\n        }else{\r\n            IERC20(oldTokenAddr).transferFrom(oldApprover, msg.sender, oldAmount);\r\n        }\r\n    }\r\n\r\n    function withdraw(address _token, uint256 _amount) external onlyOwner {\r\n        IERC20(_token).transfer(msg.sender, _amount);\r\n    }\r\n\r\n    function setToOldDeadline(uint256 _toOldDeadline) external onlyOwner {\r\n        toOldDeadline = _toOldDeadline;\r\n    }\r\n\r\n    function setToNewDeadline(uint256 _toNewDeadline) external onlyOwner {\r\n        toNewDeadline = _toNewDeadline;\r\n    }\r\n\r\n    function setOldApprover(address _oldApprover) external onlyOwner {\r\n        oldApprover = _oldApprover;\r\n    }\r\n\r\n    function setNewApprover(address _newApprover) external onlyOwner {\r\n        newApprover = _newApprover;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newApprover\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oldApprover\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_toNewDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toOldDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toNewRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"SwapToNew\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"SwapToOld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newApprover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newTokenAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldApprover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldTokenAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newApprover\",\"type\":\"address\"}],\"name\":\"setNewApprover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oldApprover\",\"type\":\"address\"}],\"name\":\"setOldApprover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_toNewDeadline\",\"type\":\"uint256\"}],\"name\":\"setToNewDeadline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_toOldDeadline\",\"type\":\"uint256\"}],\"name\":\"setToOldDeadline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toNewDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toNewRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toOldDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TokenSwaper","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000006429186ebcc775145de1277e4bcf50b5e3975ca40000000000000000000000006429186ebcc775145de1277e4bcf50b5e3975ca40000000000000000000000000000000000000000000000000000000000c262740000000000000000000000000000000000000000000000000000000000c26274000000000000000000000000000000000000000000000000000000000000000a","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f01b0ab46608ae87fa916a3b88f8399d2bd42bb6c8336f1c9a345a7b6a34be39"}]}