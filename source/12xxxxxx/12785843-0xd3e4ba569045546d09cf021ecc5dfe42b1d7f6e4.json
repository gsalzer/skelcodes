{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\ninterface iERC20 {\r\n\r\n\tfunction balanceOf(address who) external view returns (uint256 balance);\r\n\r\n\tfunction allowance(address owner, address spender) external view returns (uint256 remaining);\r\n\r\n\tfunction transfer(address to, uint256 value) external returns (bool success);\r\n\r\n\tfunction approve(address spender, uint256 value) external returns (bool success);\r\n\r\n\tfunction transferFrom(address from, address to, uint256 value) external returns (bool success);\r\n\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract Context {\r\n\tfunction _msgSender() internal view returns (address) {\r\n\t\treturn msg.sender;\r\n\t}\r\n\r\n\tfunction _msgData() internal view returns (bytes memory) {\r\n\t\tthis;\r\n\t\treturn msg.data;\r\n\t}\r\n}\r\n\r\nlibrary SafeMath {\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n\t\tc = a - b;\r\n\t\tassert(b <= a && c <= a);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n\t\tc = a + b;\r\n\t\tassert(c >= a && c>=b);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\nlibrary SafeERC20 {\r\n\tfunction safeTransfer(iERC20 _token, address _to, uint256 _value) internal {\r\n\t\trequire(_token.transfer(_to, _value));\r\n\t}\r\n}\r\n\r\ncontract Controllable is Context {\r\n    mapping (address => bool) public controllers;\r\n\r\n\tconstructor () {\r\n\t\taddress msgSender = _msgSender();\r\n\t\tcontrollers[msgSender] = true;\r\n\t}\r\n\r\n\tmodifier onlyController() {\r\n\t\trequire(controllers[_msgSender()], \"Controllable: caller is not a controller\");\r\n\t\t_;\r\n\t}\r\n\r\n    function addController(address _address) public onlyController {\r\n        controllers[_address] = true;\r\n    }\r\n\r\n    function removeController(address _address) public onlyController {\r\n        delete controllers[_address];\r\n    }\r\n}\r\n\r\ncontract Pausable is Controllable {\r\n\tevent Pause();\r\n\tevent Unpause();\r\n\r\n\tbool public paused = false;\r\n\r\n\tmodifier whenNotPaused() {\r\n\t\trequire(!paused);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier whenPaused() {\r\n\t\trequire(paused);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction pause() public onlyController whenNotPaused {\r\n\t\tpaused = true;\r\n\t\temit Pause();\r\n\t}\r\n\r\n\tfunction unpause() public onlyController whenPaused {\r\n\t\tpaused = false;\r\n\t\temit Unpause();\r\n\t}\r\n}\r\n\r\ncontract MNW is Controllable, Pausable, iERC20 {\r\n\tusing SafeMath for uint256;\r\n\tusing SafeERC20 for iERC20;\r\n\r\n\tmapping (address => uint256) public balances;\r\n\tmapping (address => mapping (address => uint256)) public allowed;\r\n\tmapping (address => bool) public frozenAccount;\r\n\r\n\tuint256 public totalSupply;\r\n\tstring public constant name = \"Morpheus.Network\";\r\n\tuint8 public constant decimals = 18;\r\n\tstring public constant symbol = \"MNW\";\r\n\tuint256 public constant initialSupply = 47897218 * 10 ** uint(decimals);\r\n\r\n\tconstructor() {\r\n\t\ttotalSupply = initialSupply;\r\n\t\tbalances[msg.sender] = totalSupply;\r\n    \tcontrollers[msg.sender] = true;\r\n\t\temit Transfer(address(0),msg.sender,initialSupply);\r\n\t}\r\n\r\n\tfunction receiveEther() public payable {\r\n\t\trevert();\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _value) external override whenNotPaused returns (bool success) {\r\n\t\trequire(_to != msg.sender,\"T1- Recipient can not be the same as sender\");\r\n\t\trequire(_to != address(0),\"T2- Please check the recipient address\");\r\n\t\trequire(balances[msg.sender] >= _value,\"T3- The balance of sender is too low\");\r\n\t\trequire(!frozenAccount[msg.sender],\"T4- The wallet of sender is frozen\");\r\n\t\trequire(!frozenAccount[_to],\"T5- The wallet of recipient is frozen\");\r\n\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\r\n\t\temit Transfer(msg.sender, _to, _value);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) external override whenNotPaused returns (bool success) {\r\n\t\trequire(_to != address(0),\"TF1- Please check the recipient address\");\r\n\t\trequire(balances[_from] >= _value,\"TF2- The balance of sender is too low\");\r\n\t\trequire(allowed[_from][msg.sender] >= _value,\"TF3- The allowance of sender is too low\");\r\n\t\trequire(!frozenAccount[_from],\"TF4- The wallet of sender is frozen\");\r\n\t\trequire(!frozenAccount[_to],\"TF5- The wallet of recipient is frozen\");\r\n\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\r\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n\r\n\t\temit Transfer(_from, _to, _value);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) public override view returns (uint256 balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _value) external override whenNotPaused returns (bool success) {\r\n\t\trequire((_value == 0) || (allowed[msg.sender][_spender] == 0),\"A1- Reset allowance to 0 first\");\r\n\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction increaseApproval(address _spender, uint256 _addedValue) external whenNotPaused returns (bool) {\r\n\t\tallowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction decreaseApproval(address _spender, uint256 _subtractedValue) external whenNotPaused returns (bool) {\r\n\t\tallowed[msg.sender][_spender] = allowed[msg.sender][_spender].sub(_subtractedValue);\r\n\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) public override view returns (uint256 remaining) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n\tfunction transferToken(address tokenAddress, uint256 amount) external onlyController {\r\n\t\tiERC20(tokenAddress).safeTransfer(msg.sender,amount);\r\n\t}\r\n\r\n\tfunction flushToken(address tokenAddress) external onlyController {\r\n\t\tuint256 amount = iERC20(tokenAddress).balanceOf(address(this));\r\n\t\tiERC20(tokenAddress).safeTransfer(msg.sender,amount);\r\n\t}\r\n\r\n\tfunction burn(uint256 _value) external onlyController returns (bool) {\r\n\t\trequire(_value <= balances[msg.sender],\"B1- The balance of burner is too low\");\r\n\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\ttotalSupply = totalSupply.sub(_value);\r\n\r\n\t\temit Burn(msg.sender, _value);\r\n\r\n\t\temit Transfer(msg.sender, address(0), _value);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction freeze(address _address, bool _state) external onlyController returns (bool) {\r\n\t\tfrozenAccount[_address] = _state;\r\n\r\n\t\temit Freeze(_address, _state);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tevent Burn(address indexed burner, uint256 value);\r\n\tevent Freeze(address target, bool frozen);\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"flushToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"freeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiveEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MNW","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://5f3fd6ea2e81230d926201494cd4b047640da202fa4a088a3d1abc3b0aafbac2"}]}