{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n * The HODL FLOKI rule:  1) feel free to sell in a month after you buy, and if you sell before that, don't complain; 2) Maximum buy, sell, and transfer: 1B. \r\n */ \r\n \r\npragma solidity ^0.5.17;\r\n\r\n\r\ncontract ERC20Interface { \r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint rawAmt) public returns (bool success);\r\n    function approve(address spender, uint rawAmt) public returns (bool success);\r\n    function transferFrom(address from, address to, uint rawAmt) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint rawAmt);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint rawAmt);\r\n}\r\n\r\n\r\ncontract SafeMath {\r\n    function safeAdd(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function safeSub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a); \r\n        c = a - b; \r\n    } \r\n        \r\n    function safeMul(uint a, uint b) internal pure returns (uint c) { \r\n        c = a * b; \r\n        require(a == 0 || c / a == b); \r\n    } \r\n        \r\n    function safeDiv(uint a, uint b) internal pure returns (uint c) { \r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\ncontract HODLFLOKI is ERC20Interface, SafeMath{\r\n    string public constant name = \"HODL FLOKI\";\r\n    string public constant symbol = \"FLOKI\";\r\n    uint8 public constant decimals = 18; \r\n    uint public constant _totalSupply = 1*10**12*10**18; \r\n    address contractOwner;\r\n\r\n\r\n    mapping(address => uint) balances;       \r\n    mapping(address => mapping(address => uint)) allowed;\r\n    event RenounceContractOwnership(address oldOwner, address newOwner);\r\n\r\n \r\n    constructor() public { \r\n        contractOwner = msg.sender;\r\n        balances[msg.sender] = _totalSupply; \r\n        emit Transfer(address(0), address(this), _totalSupply);\r\n    }\r\n    \r\n    function renouceContractOwnership()\r\n    public \r\n    returns (bool)\r\n    {\r\n        require(contractOwner == msg.sender, \"You are not the owner of this contract, sorry. \");\r\n        address oldOwner = contractOwner;\r\n        contractOwner = address(this);\r\n        emit RenounceContractOwnership(oldOwner, contractOwner);\r\n        return true;\r\n            \r\n    }\r\n    \r\n\r\n    function totalSupply() public view returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n\r\n\r\n     // The contract does not accept ETH\r\n    function () external payable  {\r\n        revert();\r\n    }  \r\n\r\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n        return balances[tokenOwner];\r\n\r\n    }\r\n    \r\n    \r\n\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint rawAmt) public returns (bool success) {\r\n        allowed[msg.sender][spender] = rawAmt;\r\n        emit Approval(msg.sender, spender, rawAmt);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint rawAmt) public returns (bool success) {\r\n        require(rawAmt <= 1*10**9*10**18, \"You can transfer at most 1B.\");\r\n        \r\n        balances[msg.sender] = safeSub(balances[msg.sender], rawAmt);\r\n        balances[to] = safeAdd(balances[to], rawAmt);\r\n        emit Transfer(msg.sender, to, rawAmt);\r\n        return true;\r\n    }\r\n\r\n    \r\n    function transferFrom(address from, address to, uint rawAmt) public returns (bool success) \r\n    {\r\n        require(rawAmt <= 1*10**9*10**18, \"You can transfer at most 1B.\");\r\n        \r\n        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], rawAmt);\r\n        balances[from] = safeSub(balances[from], rawAmt);\r\n        balances[to] = safeAdd(balances[to], rawAmt);\r\n        emit Transfer(from, to, rawAmt);\r\n        return true;\r\n    }    \r\n    \r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rawAmt\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"RenounceContractOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rawAmt\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmt\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouceContractOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rawAmt\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"HODLFLOKI","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://661ab026cd885eea7f22ccea10a68292c14ceb32b9fabcd04c3f87ea25f10504"}]}