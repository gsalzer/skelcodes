{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.16;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\ninterface GasToken {\r\n    function freeFromUpTo(address from, uint256 value) external returns (uint256 freed);\r\n}\r\ncontract SigRelayer2 {\r\n\tmodifier discountGST2 {\r\n\t\tuint256 gasStart = gasleft();\r\n\t\t_;\r\n\t\tuint256 gasSpent = 21000 + gasStart - gasleft() + 16 * msg.data.length;\r\n\t\tuint gas_left = gasleft();\r\n\t\tuint maxtokens = (gas_left - 27710) / 7020;\r\n\t\tuint tokens = (gasSpent + 14154) / 41130;\r\n\t\tif(tokens > maxtokens) tokens = maxtokens;\r\n\t\tGasToken(0x0000000000b3F879cb30FE243b4Dfee438691c04).freeFromUpTo(msg.sender, tokens);\r\n\t}\r\n\r\n\tbytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\r\n\tbytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\r\n\tbytes32 public constant BALLOT_TYPEHASH = keccak256(\"Ballot(uint256 proposalId,uint8 support)\");\r\n\tstring public constant name = \"Compound\";\r\n\tstring public constant name2 = \"Compound Governor Bravo\";\r\n\r\n\taddress public governorBravo;\r\n\taddress public compToken;\r\n\taddress public owner;\r\n\r\n\tconstructor(address governorBravo_, address compToken_) public {\r\n\t\tgovernorBravo = governorBravo_;\r\n\t\tcompToken = compToken_;\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tfunction setGovernorBravo(address governorBravo_) public  {\r\n\t\trequire(msg.sender == owner);\r\n\t\tgovernorBravo = governorBravo_;\r\n\t}\r\n\r\n\r\n\tfunction relayBySigsGST(DelegationSig[] memory s1, VoteSig[] memory s2) public discountGST2 {\r\n\t\tfor (uint i = 0; i < s1.length; i++) {\r\n\t\t\tDelegationSig memory sig = s1[i];\r\n\t\t\tcompToken.call(abi.encodeWithSignature(\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\", sig.delegatee, sig.nonce, sig.expiry, sig.v, sig.r, sig.s));\r\n\t\t}\r\n\t\tfor (uint i = 0; i < s2.length; i++) {\r\n\t\t\tVoteSig memory sig = s2[i];\r\n\t\t\tgovernorBravo.call(abi.encodeWithSignature(\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\", sig.proposalId,sig.support,sig.v,sig.r,sig.s));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction relayBySigs(DelegationSig[] memory s1, VoteSig[] memory s2) public {\r\n\t\tfor (uint i = 0; i < s1.length; i++) {\r\n\t\t\tDelegationSig memory sig = s1[i];\r\n\t\t\tcompToken.call(abi.encodeWithSignature(\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\", sig.delegatee, sig.nonce, sig.expiry, sig.v, sig.r, sig.s));\r\n\t\t}\r\n\t\tfor (uint i = 0; i < s2.length; i++) {\r\n\t\t\tVoteSig memory sig = s2[i];\r\n\t\t\tgovernorBravo.call(abi.encodeWithSignature(\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\", sig.proposalId,sig.support,sig.v,sig.r,sig.s));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction signatoryFromDelegateSig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public view returns (address) {\r\n\t    bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), compToken));\r\n\t    bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\r\n\t    bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\r\n\t    address signatory = ecrecover(digest, v, r, s);\r\n\t    require(signatory != address(0), \"invalid signature\");\r\n\t    require(now <= expiry, \"signature expired\");\r\n\t    return signatory;\r\n\t}\r\n\r\n\tfunction signatoryFromVoteSig(uint proposalId, uint8 support, uint8 v, bytes32 r, bytes32 s) public view returns (address) {\r\n\t    bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name2)), getChainId(), governorBravo));\r\n\t    bytes32 structHash = keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\r\n\t    bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\r\n\t    address signatory = ecrecover(digest, v, r, s);\r\n\t    require(signatory != address(0), \"invalid signature\");\r\n\t    return signatory;\r\n\t}\r\n\r\n\r\n  \tstruct DelegationSig {\r\n\t    address delegatee;\r\n\t    uint nonce;\r\n\t    uint expiry;\r\n\t    uint8 v;\r\n\t    bytes32 r;\r\n\t    bytes32 s;\r\n  \t}\r\n  \tstruct VoteSig {\r\n  \t\tuint proposalId;\r\n  \t\tuint8 support;\r\n  \t\tuint8 v;\r\n  \t\tbytes32 r;\r\n  \t\tbytes32 s;\r\n  \t}\r\n\r\n  \tfunction getChainId() internal pure returns (uint) {\r\n        uint256 chainId;\r\n        assembly { chainId := chainid() }\r\n        return chainId;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"governorBravo_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"compToken_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"compToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"governorBravo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name2\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct SigRelayer2.DelegationSig[]\",\"name\":\"s1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct SigRelayer2.VoteSig[]\",\"name\":\"s2\",\"type\":\"tuple[]\"}],\"name\":\"relayBySigs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct SigRelayer2.DelegationSig[]\",\"name\":\"s1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct SigRelayer2.VoteSig[]\",\"name\":\"s2\",\"type\":\"tuple[]\"}],\"name\":\"relayBySigsGST\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"governorBravo_\",\"type\":\"address\"}],\"name\":\"setGovernorBravo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"signatoryFromDelegateSig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"signatoryFromVoteSig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"SigRelayer2","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000c0da02939e1441f497fd74f78ce7decb17b66529000000000000000000000000c00e94cb662c3520282e6f5717214004a7f26888","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://df3197e3c31f6f6e8b203998fd9d38e6af4730a44c2e8209ae4e4417f9d4ce46"}]}