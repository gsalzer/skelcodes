{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.1;\r\n\r\ninterface ENS {\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n}\r\n\r\ninterface ERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    function mint(address to, uint256 amount) external;\r\n\r\n    function burnFrom(address account, uint256 amount) external;\r\n}\r\n\r\ncontract Mapping {\r\n\r\n    uint256 public lastTimeExecuted = block.timestamp;\r\n    address public THIRM = 0xb526FD41360c98929006f3bDcBd16d55dE4b0069;\r\n\r\n    mapping(string => address) private addressMap;\r\n\r\n    function nftOwner() public view returns (address) {\r\n        return ENS(0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85).ownerOf(77518759032194629606678436102314512673279501256913318464318261388698786067419);\r\n    }\r\n\r\n    function getBurnAmount() public view returns (uint256) {\r\n        uint256 burnAmount = (ERC20(THIRM).totalSupply() / 100000000) * 6;\r\n        return burnAmount;\r\n    }\r\n    \r\n     function toMint() public view returns (uint256) {\r\n        uint256 toMintint = block.timestamp - lastTimeExecuted;\r\n        return toMintint * 200000000000000;\r\n    }\r\n\r\n    function getAddressMap(string memory _coinAddress) public view returns (address) {\r\n        return addressMap[_coinAddress];\r\n    }\r\n\r\n    function setAddressMap(string memory _coinaddress) external {\r\n        require(addressMap[_coinaddress] == address(0), \"Address already mapped\");\r\n\r\n        require(getBurnAmount() <= ERC20(THIRM).balanceOf(msg.sender),\"No balance\");\r\n        require(getBurnAmount() <= ERC20(THIRM).allowance(msg.sender, address(this)), \"No allowance\");\r\n\r\n        ERC20(THIRM).burnFrom(msg.sender, getBurnAmount());\r\n        addressMap[_coinaddress] = msg.sender;\r\n        \r\n        if(toMint() > ERC20(THIRM).totalSupply()/200){\r\n        ERC20(THIRM).mint(nftOwner(), toMint());\r\n        lastTimeExecuted = block.timestamp;\r\n        }\r\n\r\n    }\r\n\r\n    function run() external {\r\n        ERC20(THIRM).mint(nftOwner(), toMint());\r\n        lastTimeExecuted = block.timestamp;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"name\":\"THIRM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_coinAddress\",\"type\":\"string\"}],\"name\":\"getAddressMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBurnAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeExecuted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_coinaddress\",\"type\":\"string\"}],\"name\":\"setAddressMap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Mapping","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://c6eb5f599c1125c2cd6d40e7aba9e251d990abc2ed8b7bb0be7a445be7eca245"}]}