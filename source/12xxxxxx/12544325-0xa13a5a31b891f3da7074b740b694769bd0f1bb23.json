{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.6.10;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface IComp {\r\n    function delegate(address delegatee) external;\r\n    function balanceOf(address account) external view returns (uint);\r\n    function transfer(address dst, uint rawAmount) external returns (bool);\r\n    function transferFrom(address src, address dst, uint rawAmount) external returns (bool);\r\n}\r\n\r\ninterface IGovernorBravo {\r\n    function propose(address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description) external returns (uint);\r\n    function castVote(uint proposalId, uint8 support) external;\r\n}\r\n\r\n\r\ncontract CrowdProposal {\r\n    /// @notice The crowd proposal author\r\n    address payable public immutable author;\r\n\r\n    /// @notice Governance proposal data\r\n    address[] public targets;\r\n    uint[] public values;\r\n    string[] public signatures;\r\n    bytes[] public calldatas;\r\n    string public description;\r\n\r\n    /// @notice COMP token contract address\r\n    address public immutable comp;\r\n    /// @notice Compound protocol `GovernorBravo` contract address\r\n    address public immutable governor;\r\n\r\n    /// @notice Governance proposal id\r\n    uint public govProposalId;\r\n    /// @notice Terminate flag\r\n    bool public terminated;\r\n\r\n    /// @notice An event emitted when the governance proposal is created\r\n    event CrowdProposalProposed(address indexed proposal, address indexed author, uint proposalId);\r\n    /// @notice An event emitted when the crowd proposal is terminated\r\n    event CrowdProposalTerminated(address indexed proposal, address indexed author);\r\n     /// @notice An event emitted when delegated votes are transfered to the governance proposal\r\n    event CrowdProposalVoted(address indexed proposal, uint proposalId);\r\n\r\n    /**\r\n    * @notice Construct crowd proposal\r\n    * @param author_ The crowd proposal author\r\n    * @param targets_ The ordered list of target addresses for calls to be made\r\n    * @param values_ The ordered list of values (i.e. msg.value) to be passed to the calls to be made\r\n    * @param signatures_ The ordered list of function signatures to be called\r\n    * @param calldatas_ The ordered list of calldata to be passed to each call\r\n    * @param description_ The block at which voting begins: holders must delegate their votes prior to this block\r\n    * @param comp_ `COMP` token contract address\r\n    * @param governor_ Compound protocol `GovernorBravo` contract address\r\n    */\r\n    constructor(address payable author_,\r\n                address[] memory targets_,\r\n                uint[] memory values_,\r\n                string[] memory signatures_,\r\n                bytes[] memory calldatas_,\r\n                string memory description_,\r\n                address comp_,\r\n                address governor_) public {\r\n        author = author_;\r\n\r\n        // Save proposal data\r\n        targets = targets_;\r\n        values = values_;\r\n        signatures = signatures_;\r\n        calldatas = calldatas_;\r\n        description = description_;\r\n\r\n        // Save Compound contracts data\r\n        comp = comp_;\r\n        governor = governor_;\r\n\r\n        terminated = false;\r\n\r\n        // Delegate votes to the crowd proposal\r\n        IComp(comp_).delegate(address(this));\r\n    }\r\n\r\n    /// @notice Create governance proposal\r\n    function propose() external returns (uint) {\r\n        require(govProposalId == 0, 'CrowdProposal::propose: gov proposal already exists');\r\n        require(!terminated, 'CrowdProposal::propose: proposal has been terminated');\r\n\r\n        // Create governance proposal and save proposal id\r\n        govProposalId = IGovernorBravo(governor).propose(targets, values, signatures, calldatas, description);\r\n        emit CrowdProposalProposed(address(this), author, govProposalId);\r\n\r\n        return govProposalId;\r\n    }\r\n\r\n    /// @notice Terminate the crowd proposal, send back staked COMP tokens\r\n    function terminate() external {\r\n        require(msg.sender == author, 'CrowdProposal::terminate: only author can terminate');\r\n        require(!terminated, 'CrowdProposal::terminate: proposal has been already terminated');\r\n\r\n        terminated = true;\r\n\r\n        // Transfer staked COMP tokens from the crowd proposal contract back to the author\r\n        IComp(comp).transfer(author, IComp(comp).balanceOf(address(this)));\r\n\r\n        emit CrowdProposalTerminated(address(this), author);\r\n    }\r\n\r\n    /// @notice Vote for the governance proposal with all delegated votes\r\n    function vote() external {\r\n        require(govProposalId > 0, 'CrowdProposal::vote: gov proposal has not been created yet');\r\n        // Support the proposal, vote value = 1\r\n        IGovernorBravo(governor).castVote(govProposalId, 1);\r\n\r\n        emit CrowdProposalVoted(address(this), govProposalId);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"author_\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"targets_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values_\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures_\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas_\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"comp_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"CrowdProposalProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"}],\"name\":\"CrowdProposalTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"CrowdProposalVoted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"author\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"calldatas\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"signatures\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"targets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terminate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terminated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"values\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"CrowdProposal","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000b0623c91c65621df716ab8afe5f66656b21a9108000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002800000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f9840000000000000000000000005e4be8bc9637f0eaa1a755019e06a68ce081d58f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000001a9c8182c09f50c8318d769245bea52c32be35bc0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001873657450656e64696e6741646d696e2861646472657373290000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020000000000000000000000000c4e172459f1e7939d522503b81afaac1014ce6f60000000000000000000000000000000000000000000000000000000000000a1d23205265647563652074686520554e492070726f706f73616c207375626d697373696f6e207468726573686f6c6420746f20322e354d0a202020200a20202020546869732070726f706f73616c206c6f776572732074686520554e492070726f706f73616c207375626d697373696f6e207468726573686f6c642066726f6d2031304d20554e4920746f20322e354d20554e492e0a0a556e6973776170e280997320676f7665726e616e63652073797374656d2063757272656e746c792068617320612068696768207468726573686f6c64206f662031304d20766f74657320666f722070726f706f73616c207375626d697373696f6e2e20204173206d656e74696f6e656420696e20446861726d612773205b6561726c6965722070726f706f73616c5d2868747470733a2f2f6170702e756e69737761702e6f72672f232f766f74652f31292c2074686572652068617665206265656e20205b64697363757373696f6e735d2868747470733a2f2f676f762e756e69737761702e6f72672f742f70726f706f73616c2d7265647563652d616d6f756e742d6f662d756e69732d72657175697265642d746f2d7375626d69742d676f7665726e616e63652d70726f706f73616c2f333332302920206f6e20205b6c6f776572696e67207468726573686f6c64735d2868747470733a2f2f676f762e756e69737761702e6f72672f742f70726f706f73616c2d7265647563652d616d6f756e742d6f662d756e69732d72657175697265642d746f2d7375626d69742d676f7665726e616e63652d70726f706f73616c2f333332302f3239292020746f206d616b6520676f7665726e616e6365206d6f72652061636365737369626c652e0a0a53696e63652074686174206f726967696e616c2070726f706f73616c2c20746865206e756d626572206f662064656c65676174656420766f7465732068617320696e637265617365642066726f6d207e38304d20746f207e3137304d2c206d616b696e67206974206d7563682065617369657220746f207265616368207468652071756f72756d207468726573686f6c64206f662034304d20766f7465732e20486f77657665722c2074686520554e4920746f6b656e20707269636520696e637265617365206f7665722074686520706173742036206d6f6e74687320686173206d616465207468652070726f706f73616c207375626d697373696f6e207468726573686f6c642065787472656d656c7920646966666963756c7420746f206163686965766520666f72206f6e6520696e646976696475616c2e0a0a54686520466973682e766f7465207465616d206861732070726570617265642061206e65772070726f706f73616c20696e206c696e65207769746820446861726d612773206f726967696e616c206d6f7469766174696f6e733a206d616b696e6720676f7665726e616e6365206d6f72652061636365737369626c652c207768696c65207374696c6c20656e737572696e67207468617420556e697377617020676f7665726e616e6365206973206e6f74207375626a65637420746f20756e696c61746572616c2064656c65746572696f7573206163746f72732e20205f57652070726f706f73652061207468726573686f6c64206f6620322e356d20554e4920666f722070726f706f73616c207375626d697373696f6e2c20616e64206b656570696e6720746865206578697374696e672034304d2071756f72756d207468726573686f6c642e5f2054686f75676820746869732070726f706f73616c207468726573686f6c64206973207374696c6c20717569746520686967682c2077652062656c6965766520696e206d616b696e6720736d616c6c2c20636f6e736572766174697665206368616e67657320696e2074686520726967687420646972656374696f6e2e0a0a496e206f7264657220746f20726564756365207468657365207468726573686f6c64732c2061206e6577202060476f7665726e6f72416c7068616020636f6e74726163742069732072657175697265642e20576520686176652063686f73656e20746f20757365207468652073616d6520736d61727420636f6e747261637420636f64652066726f6d20446861726d612773206f726967696e616c2070726f706f73616c2077697468207468657365206e65772076616c7565732e20546f207468617420656e642c2077652068617665205b6465706c6f7965642061206e657720636f6e74726163745d2868747470733a2f2f65746865727363616e2e696f2f616464726573732f30786334653137323435396631653739333964353232353033623831616661616331303134636536663623636f64652920776869636820636f6e7461696e732074686520666f6c6c6f77696e67206368616e6765733a0a0a2d2020206070726f706f73616c5468726573686f6c64602020686173206265656e206d6f6469666965642066726f6d20206031305f3030305f303030653138602020746f202060325f3530305f303030653138602c20692e652e2066726f6d20312520746f20302e3235252e0a2d20202061207075626c69632020605f5f61636365707441646d696e282960202066756e6374696f6e20686173206265656e2061646465642c20616c6c6f77696e672074686520636f6e747261637420746f20636c61696d206f776e657273686970206f7665722074686520206054696d656c6f636b602020636f6e7472616374206f6e636520206073657450656e64696e6741646d696e602020686173206265656e2065786563757465642e0a2d2020206074696d656c6f636b602020616e64202060756e69602020617265206e6f77206465636c61726564206173202060636f6e7374616e74602020696e7374656164206f66207669612061737369676e6d656e7420746f2073746f7261676520736c6f747320647572696e6720636f6e747261637420636f6e737472756374696f6e2c2061732074686569722076616c75657320617265206e6f74206d6f6469666961626c65206166746572206465706c6f796d656e742028616e6420757365206f66202060696d6d757461626c65602020776f756c64206e656365737369746174652061206d616a6f7220536f6c69646974792076657273696f6e2062756d7020616e6420636f72726573706f6e64696e67207265666163746f72206f6620616c72656164792077656c6c2d6175646974656420636f6465292e0a0a57652062656c6965766520746869732070726f706f73616c206973206120636f6e736572766174697665207374657020696e2074686520726967687420646972656374696f6e20666f7220554e4920676f7665726e616e63652c20616e64206f6e65207468617420637265617465732061206d6f72652061636365737369626c6520676f7665726e616e63652065636f73797374656d2e20576520686f7065207468697320697320746865206669727374206f66206d616e7920696d70726f76656d656e7473207468617420466973682e766f74652063616e20626520612070617274206f662e000000","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://0d80c2a0606dff40cf41f3f660928405118df6ead3d771c2cf3ed7c5534d4415"}]}