{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n\r\ncontract owned {\r\n    address public owner;\r\n    address public auditor;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        auditor = 0x241A280362b4ED2CE8627314FeFa75247fDC286B;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner || msg.sender == auditor);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\ncontract cashier is owned {\r\n    \r\n    string public name;\r\n    bool public online = true;\r\n    address public bucks;\r\n    address public blcks;\r\n    uint256 public period;\r\n    address public mainWallet = msg.sender;\r\n    uint256 public APY = 14;\r\n\r\n    struct deposits{\r\n        uint256 amount;\r\n        bool payed;\r\n        uint256 date;\r\n    }\r\n\r\n    mapping (address => deposits[]) public investments;\r\n\r\n    event SwapToUSDT(address indexed beneficiary, uint256 value);\r\n    \r\n    event SwapToBLACKT(address indexed beneficiary, uint256 value);\r\n \r\n    event IsOnline(bool status);\r\n\r\n    \r\n    constructor(\r\n        string memory Name,\r\n        address initialBucks,\r\n        address initialBlcks,\r\n        uint256 initialPeriod\r\n    ) public {           \r\n        name = Name;                                   \r\n        bucks = initialBucks;\r\n        blcks = initialBlcks;\r\n        period = initialPeriod;\r\n    }\r\n\r\n    \r\n    function USDtoBLACKT( uint256 value) public returns (bool success) {\r\n        BLACKT b0 = BLACKT(blcks);\r\n        IERC20 b1 = IERC20(bucks);\r\n        require(online);\r\n        uint256 d0 = 10**uint256(b0.decimals());\r\n        uint256 d1 = 10**uint256(b1.decimals());\r\n        uint256 vald = value*d0/d1;\r\n        require(b1.allowance(msg.sender,address(this)) >= value);\r\n        require(b0.allowance(mainWallet,address(this)) >= vald);\r\n        b1.transferFrom(msg.sender,mainWallet,value);\r\n        b0.transferFrom(mainWallet,msg.sender,vald);\r\n        emit SwapToBLACKT(msg.sender,value);\r\n        return true;\r\n    }\r\n\r\n    function BLACKTtoUSD(uint256 value) public returns (bool success) {\r\n        BLACKT b0 = BLACKT(blcks);\r\n        IERC20 b1 = IERC20(bucks);\r\n        require(online);\r\n        uint256 d0 = 10**uint256(b0.decimals());\r\n        uint256 d1 = 10**uint256(b1.decimals());\r\n        uint256 vald = value*d1/d0;\r\n        require(b0.allowance(msg.sender,address(this)) >= value);\r\n        require(b1.allowance(mainWallet,address(this)) >= vald);\r\n        b0.transferFrom(msg.sender,mainWallet,value);\r\n        b1.transferFrom(mainWallet,msg.sender,vald);\r\n        emit SwapToUSDT(msg.sender,value);\r\n        \r\n        return true;\r\n    }\r\n\r\n    function AutoInvestUSD(uint256 investment) public returns (bool success) {\r\n        BLACKT b0 = BLACKT(blcks);\r\n        IERC20 b1 = IERC20(bucks);\r\n        uint256 d0 = 10**uint256(b0.decimals());\r\n        uint256 d1 = 10**uint256(b1.decimals());\r\n        uint256 vald = investment*d0/d1;\r\n        require(online);\r\n        require(b1.allowance(msg.sender,address(this)) >= investment);\r\n        require(b0.allowance(mainWallet,address(this)) >= vald);\r\n        b1.transferFrom(msg.sender,mainWallet,investment);\r\n        b0.lockLiquidity(msg.sender, vald);   \r\n        investments[msg.sender].push(deposits(vald,false,now));\r\n        return true;\r\n    }\r\n\r\n    function AutoUnlock() public returns (bool success) {\r\n        require(online);\r\n        BLACKT b = BLACKT(blcks);\r\n        for (uint256 j=0; j < investments[msg.sender].length; j++){\r\n            if (now-investments[msg.sender][j].date>period && !investments[msg.sender][j].payed) {\r\n                if (b.unlockLiquidity(msg.sender, investments[msg.sender][j].amount)) {\r\n                    b.transferFrom(mainWallet,msg.sender,investments[msg.sender][j].amount*APY/100);\r\n                    investments[msg.sender][j].payed = true;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function zChangeAPY(uint256 newAPY) onlyOwner public returns (bool success) {\r\n        APY = newAPY;\r\n        return true;\r\n    }\r\n\r\n    function zChangePeriod(uint256 newPeriod) onlyOwner public returns (bool success) {\r\n        period = newPeriod;\r\n        return true;\r\n    }\r\n\r\n    function zChangeBucks(address newBucks) onlyOwner public returns (bool success) {\r\n        bucks = newBucks;\r\n        return true;\r\n    }\r\n\r\n    function zChangeBlcks(address newBlcks) onlyOwner public returns (bool success) {\r\n        blcks = newBlcks;\r\n        return true;\r\n    }\r\n\r\n    function zChangeOnlineState(bool state) onlyOwner public returns (bool success) {\r\n        online = state;\r\n        return true;\r\n    }\r\n\r\n    function zChangeMainWallet(address newWallet) onlyOwner public returns (bool success) {\r\n        mainWallet = newWallet;\r\n        return true;\r\n    }\r\n}\r\n\r\ninterface BLACKT {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n    function lockedBalance(address owner) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n    function lockLiquidity(address _beneficiary, uint256 _value) external returns (bool);\r\n    function unlockLiquidity(address _beneficiary, uint _value) external returns (bool);\r\n    function approveAndCall(address _spender, uint256 _value, bytes calldata _extraData) external returns (bool);\r\n}\r\n\r\ninterface IERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n    function approveAndCall(address _spender, uint256 _value, bytes calldata _extraData) external returns (bool);\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"initialBucks\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialBlcks\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPeriod\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"IsOnline\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SwapToBLACKT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SwapToUSDT\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"APY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"investment\",\"type\":\"uint256\"}],\"name\":\"AutoInvestUSD\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"AutoUnlock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BLACKTtoUSD\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"USDtoBLACKT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auditor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blcks\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bucks\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"payed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"online\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAPY\",\"type\":\"uint256\"}],\"name\":\"zChangeAPY\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBlcks\",\"type\":\"address\"}],\"name\":\"zChangeBlcks\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBucks\",\"type\":\"address\"}],\"name\":\"zChangeBucks\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"zChangeMainWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"zChangeOnlineState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"}],\"name\":\"zChangePeriod\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"cashier","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000182811002fa5bebbbf01dd3179aef7ab29cbb6c80000000000000000000000000000000000000000000000000000000001e1338000000000000000000000000000000000000000000000000000000000000000076361736869657200000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://a6e44fc6e52cb2a781e6d1ba948a1b61f3a8a8afc2d9b9a815ec772c2e7ee9fe"}]}