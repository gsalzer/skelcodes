{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.8.4;\r\n\r\nabstract contract AdminOperatorAccess {\r\n    address private admin;\r\n    address private operator;\r\n\r\n    event NewAdmin(address indexed previousAdmin, address indexed newAdmin);\r\n    event NewOperator(address indexed previousOperator, address indexed newOperator);\r\n\r\n    constructor () {\r\n        address msgSender = msg.sender;\r\n        admin = msgSender;\r\n        emit NewAdmin(address(0), msgSender);\r\n    }\r\n\r\n    function getAdmin() public view virtual returns (address) {\r\n        return admin;\r\n    }\r\n\r\n    function getOperator() public view virtual returns (address) {\r\n        return operator;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(getAdmin() == msg.sender, \"AdminOperatorAccess: caller is not the admin\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyOperator() {\r\n        require(getOperator() == msg.sender, \"AdminOperatorAccess: caller is not the operator\");\r\n        _;\r\n    }\r\n    \r\n    function setAdmin(address newAdmin) public virtual onlyAdmin {\r\n        require(newAdmin != address(0), \"AdminOperatorAccess: new admin is the zero address\");\r\n        emit NewAdmin(admin, newAdmin);\r\n        admin = newAdmin;\r\n    }\r\n\r\n    function setOperator(address newOperator) public virtual onlyAdmin {\r\n        require(newOperator != address(0), \"AdminOperatorAccess: new operator is the zero address\");\r\n        emit NewOperator(operator, newOperator);\r\n        operator = newOperator;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract TokensBridge is AdminOperatorAccess {\r\n    IERC20 public token;\r\n\r\n    event Collect(address indexed sender, uint256 amount);\r\n    event Dispense(address indexed sender, uint256 amount);\r\n    event TransferOwnership(address indexed previousOwner, address indexed newOwner);\r\n\r\n    function collect(address _sender, uint256 _amount) public onlyOperator returns (bool success) {\r\n        require(token.allowance(_sender, address(this)) >= _amount, \"Amount check failed\");\r\n        require(token.transferFrom(_sender, address(this), _amount), \"transferFrom() failure. Make sure that your balance is not lower than the allowance you set\");\r\n        emit Collect(_sender, _amount);\r\n        return true;\r\n    }\r\n\r\n    function dispense(address _sender, uint256 _amount) public onlyOperator returns (bool success) {\r\n        require(token.transfer(_sender, _amount), \"transfer() failure. Contact contract owner\");\r\n        emit Dispense(_sender, _amount);\r\n        return true;\r\n    }\r\n\r\n    constructor(IERC20 _token) {\r\n        token = _token;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Dispense\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"NewOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"dispense\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TokensBridge","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000103c3a209da59d3e7c4a89307e66521e081cfdf0","EVMVersion":"Default","Library":"","LicenseType":"Apache-2.0","Proxy":"0","Implementation":"","SwarmSource":"ipfs://c3d6e088528ee20d3214aa0dd866a1a39d4c4e27ea795987db439f14deeaaabe"}]}