{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/abialy/Documents/Projects/Crypto/defi/oracle/DecentralizedOracle/on-chain-oracle/contracts/Upgradable.sol\": {\r\n      \"content\": \"pragma solidity >=0.6.6;\\r\\n\\r\\nimport \\\"./library/Ownable.sol\\\";\\r\\nimport \\\"./interfaces/IUpgradable.sol\\\";\\r\\n\\r\\ncontract Upgradable is Ownable, IUpgradable {\\r\\n    address public oracle;\\r\\n\\r\\n    constructor (address oracleAddress) public {\\r\\n        oracle = oracleAddress;\\r\\n    }\\r\\n\\r\\n    function getOracleAddress() public override(IUpgradable) returns (address) {\\r\\n        return oracle;\\r\\n    }\\r\\n\\r\\n    function upgradeOracleAddress (address newOracle) public onlyOwner {\\r\\n        oracle = newOracle;\\r\\n    }\\r\\n}\\r\\n\"\r\n    },\r\n    \"/Users/abialy/Documents/Projects/Crypto/defi/oracle/DecentralizedOracle/on-chain-oracle/contracts/interfaces/IUpgradable.sol\": {\r\n      \"content\": \"// pragma solidity >=0.4.21 <0.6.0;\\npragma solidity >=0.6.6;\\n\\ninterface IUpgradable {\\n  function getOracleAddress() external returns (address);\\n}\\n\"\r\n    },\r\n    \"/Users/abialy/Documents/Projects/Crypto/defi/oracle/DecentralizedOracle/on-chain-oracle/contracts/library/Ownable.sol\": {\r\n      \"content\": \"pragma solidity >=0.6.6;\\r\\n\\r\\ncontract Ownable {\\r\\n    address public owner;\\r\\n\\r\\n    /**\\r\\n    * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n    * account.\\r\\n    */\\r\\n    constructor() public {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n    * @dev Throws if called by any account other than the owner.\\r\\n    */\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n    * @param newOwner The address to transfer ownership to.\\r\\n    */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        if (newOwner != address(0)) {\\r\\n            owner = newOwner;\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getOracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"upgradeOracleAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Upgradable","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000cbbcba58d851d7bee2deb14e0f47151a77de064e","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}