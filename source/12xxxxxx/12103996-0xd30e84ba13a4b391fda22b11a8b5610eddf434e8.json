{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract EthereumLinks {\r\n    event Link(address indexed from, uint256 index, uint32 indexed provider, uint16 protocol, uint16 flags, uint128 indexed id);\r\n    event Unlink(address indexed from);\r\n    address payable private _owner;\r\n    uint256 private _fee;\r\n\r\n    struct Resource {\r\n        uint64 timestamp;\r\n        uint32 provider;\r\n        uint16 protocol;\r\n        uint16 flags;\r\n        uint128 id;\r\n    } \r\n\r\n    mapping(address => Resource[]) private _links;\r\n    mapping(address => mapping(uint256 => string)) private _txt;\r\n\r\n    constructor(uint256 fee_) {\r\n        _owner = payable(msg.sender);\r\n        _fee = fee_;\r\n    }\r\n\r\n    function fee() public view virtual returns (uint256) {\r\n        return _fee;\r\n    }\r\n\r\n    function lengthOf(address address_) public view virtual returns (uint256) {\r\n        require(address_ != address(0), \"EthereumLink: address not found\");\r\n        return _links[address_].length;\r\n    }\r\n\r\n    function linkOf(address address_, uint256 index_) public view virtual returns (Resource memory) {\r\n        require(lengthOf(address_) > 0, \"EthereumLink: address not found\");\r\n        require(lengthOf(address_) > index_, \"EthereumLink: index not found\");\r\n        return _links[address_][index_];\r\n    }\r\n\r\n    function txtOf(address address_, uint256 index_) public view virtual returns (string memory) {\r\n        require(lengthOf(address_) > 0, \"EthereumLink: address not found\");\r\n        require(lengthOf(address_) > index_, \"EthereumLink: index not found\");\r\n        return _txt[address_][index_];\r\n    }\r\n\r\n    function link(uint32 provider, uint16 protocol, uint16 flags, uint128 id, string memory txt_) public payable virtual {\r\n        require(msg.value >= _fee, \"EthereumLink: fee too low\");\r\n        emit Link(msg.sender, _links[msg.sender].length, provider, protocol, flags, id);\r\n        Resource memory resource = Resource({\r\n            timestamp: uint64(block.timestamp),\r\n            provider: provider,\r\n            protocol: protocol,\r\n            flags: flags,\r\n            id: id\r\n        });\r\n        if (bytes(txt_).length > 0) {\r\n            _txt[msg.sender][_links[msg.sender].length] = txt_;\r\n        }\r\n        _links[msg.sender].push(resource);\r\n    }\r\n\r\n    function unlink() public virtual {\r\n        emit Unlink(msg.sender);\r\n        for (uint256 i=0; i < _links[msg.sender].length; i++) {\r\n            delete _txt[msg.sender][i];\r\n        }\r\n        delete _links[msg.sender];\r\n    }\r\n\r\n    function witdraw() public virtual {\r\n        _owner.transfer(address(this).balance);\r\n    }\r\n\r\n    function reduceFee(uint256 fee_) public virtual {\r\n        require(msg.sender == _owner, \"EthereumLink: owner required\");\r\n        require(fee_ < _fee, \"EthereumLink: new fee must be lower\");\r\n        _fee = fee_;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"provider\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"protocol\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"flags\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"id\",\"type\":\"uint128\"}],\"name\":\"Link\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"Unlink\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"}],\"name\":\"lengthOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"provider\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"protocol\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"flags\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"id\",\"type\":\"uint128\"},{\"internalType\":\"string\",\"name\":\"txt_\",\"type\":\"string\"}],\"name\":\"link\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index_\",\"type\":\"uint256\"}],\"name\":\"linkOf\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"provider\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"protocol\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"flags\",\"type\":\"uint16\"},{\"internalType\":\"uint128\",\"name\":\"id\",\"type\":\"uint128\"}],\"internalType\":\"struct EthereumLinks.Resource\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee_\",\"type\":\"uint256\"}],\"name\":\"reduceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index_\",\"type\":\"uint256\"}],\"name\":\"txtOf\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlink\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"witdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"EthereumLinks","CompilerVersion":"v0.8.3+commit.8d00100c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000038d7ea4c68000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://3d827d5a489334b2f1c4f6b4c45566b151d7ee1c2583dcada2e55393f6870fe5"}]}