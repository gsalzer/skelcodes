{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.7;\r\n\r\nabstract contract Setter {\r\n    function addAuthorization(address) external virtual;\r\n    function removeAuthorization(address) external virtual;\r\n}\r\n\r\nabstract contract GlobalSettlementLike {\r\n    function safeEngine() public virtual returns (address);\r\n    function liquidationEngine() public virtual returns (address);\r\n    function accountingEngine() public virtual returns (address);\r\n    function oracleRelayer() public virtual returns (address);\r\n    function stabilityFeeTreasury() public virtual returns (address);\r\n}\r\n\r\ncontract SwapGlobalSettlement {\r\n\r\n    function execute(address oldGlobalSettlement, address newGlobalSettlement) public {\r\n\r\n        // get old GlobalSettlement\r\n        GlobalSettlementLike oldContract = GlobalSettlementLike(oldGlobalSettlement);\r\n\r\n        // getting old GlobalSettlement vars\r\n        address safeEngine = oldContract.safeEngine();\r\n        address liquidationEngine = oldContract.liquidationEngine();\r\n        address accountingEngine = oldContract.accountingEngine();\r\n        address oracleRelayer = oldContract.oracleRelayer();\r\n        address stabilityFeeTreasury = oldContract.stabilityFeeTreasury();\r\n\r\n        // Authing new GlobalSettlement\r\n        Setter(safeEngine).addAuthorization(newGlobalSettlement);\r\n        Setter(liquidationEngine).addAuthorization(newGlobalSettlement);\r\n        Setter(accountingEngine).addAuthorization(newGlobalSettlement);\r\n        Setter(oracleRelayer).addAuthorization(newGlobalSettlement);\r\n        Setter(stabilityFeeTreasury).addAuthorization(newGlobalSettlement);\r\n\r\n        // Deauthing old GlobalSettlement\r\n        Setter(safeEngine).removeAuthorization(oldGlobalSettlement);\r\n        Setter(liquidationEngine).removeAuthorization(oldGlobalSettlement);\r\n        Setter(accountingEngine).removeAuthorization(oldGlobalSettlement);\r\n        Setter(oracleRelayer).removeAuthorization(oldGlobalSettlement);\r\n        Setter(stabilityFeeTreasury).removeAuthorization(address(oldGlobalSettlement));\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldGlobalSettlement\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newGlobalSettlement\",\"type\":\"address\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"SwapGlobalSettlement","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ebae6445296d99a19b7b274850946a24092c183e378bdcb39688c38a5e07cb52"}]}