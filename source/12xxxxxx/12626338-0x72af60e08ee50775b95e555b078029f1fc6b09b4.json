{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require((z = x + y) >= x);\r\n    }\r\n\r\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require((z = x - y) <= x);\r\n    }\r\n\r\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require(x == 0 || (z = x * y) / x == y);\r\n    }\r\n\r\n    function div(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        return x / y;\r\n    }\r\n\r\n    function max(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        return x >= y ? x : y;\r\n    }\r\n\r\n    function min(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        return x < y ? x : y;\r\n    }\r\n\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n \r\n  constructor() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n}\r\n\r\ncontract Airdropper is Ownable {\r\n    uint public eth;\r\n\r\n    constructor() {\r\n        eth=0;\r\n    }\r\n\r\n    function ERC20AirTransfer(address[] calldata _recipients, uint[] calldata _values, address _tokenAddress) onlyOwner public returns (bool) {\r\n        require(_recipients.length > 0 && _recipients.length==_values.length);\r\n\r\n        for(uint i = 0; i < _recipients.length; i++){\r\n            require(IERC20(_tokenAddress).allowance(msg.sender, address(this))>=_values[i]);\r\n            IERC20(_tokenAddress).transferFrom(owner, _recipients[i], _values[i]);\r\n        }\r\n \r\n        return true;\r\n    }\r\n\r\n    function ETHAirTransfer(address[] calldata _recipients, uint[] calldata _values) onlyOwner public returns (bool) {\r\n        require(_recipients.length > 0 && _recipients.length==_values.length);\r\n\r\n        for(uint i = 0; i < _recipients.length; i++){\r\n            require(eth>=_values[i], \"ETH is not sufficient\");\r\n            payable(_recipients[i]).transfer(_values[i]);\r\n            eth = eth - _values[i];\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    receive() external payable {\r\n        //eth.add(msg.value);\r\n        eth = eth + msg.value;\r\n    }\r\n\r\n    function withdraw() onlyOwner public {\r\n        payable(msg.sender).transfer(eth);\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"ERC20AirTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"ETHAirTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Airdropper","CompilerVersion":"v0.8.5+commit.a4f2e591","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://3f34793c804236471e187322afd8a0f338b93b560925f610126323879e5e9ec1"}]}