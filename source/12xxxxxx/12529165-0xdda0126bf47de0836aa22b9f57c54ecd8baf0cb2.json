{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n\r\n\r\n contract EtherCash {\r\n     struct User {\r\n       address One;  \r\n       address fastreferer;\r\n       address secondreferer;\r\n       }\r\n       \r\n       mapping(address => User) public users;\r\n       uint prise = 10 finney;\r\n       address public owner;\r\n       event ownershipTransferred(address indexed previousowner, address indexed newowner);\r\n       event prisetransferred(uint _prise, uint newprise);\r\n  \r\n   constructor()public{\r\n        owner = msg.sender;\r\n        }\r\n        modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n    function transferowner(address newowner) public onlyOwner {\r\n    require(newowner != address(0));\r\n    emit ownershipTransferred(owner, newowner);\r\n    owner = newowner;\r\n  }\r\n   function transferprise(uint newprise) public onlyOwner {\r\n    require(newprise != uint(0));\r\n    emit prisetransferred(prise, newprise);\r\n    prise = newprise;\r\n  }\r\n  \r\n  function Registracion(address One, address fastreferer) public payable {\r\n      address helper = msg.sender;\r\n      address sender = One;\r\n      address secondreferer = users[fastreferer].fastreferer;\r\n      require(One != fastreferer);\r\n      uint value = msg.value*44/100;\r\n      owner.transfer(value);\r\n      require(msg.value >= prise);\r\n      uint referervalue = msg.value*20/100;\r\n      uint sreferervalue = msg.value*30/100;\r\n      uint helpvalue = msg.value*5/100;\r\n      fastreferer.transfer(referervalue);\r\n      secondreferer.transfer(sreferervalue);\r\n      helper.transfer(helpvalue);\r\n       \r\n       User memory newUser;\r\n       newUser.fastreferer = fastreferer;\r\n       newUser.secondreferer = users[fastreferer].fastreferer;\r\n      \r\n       \r\n       users[sender] = newUser;\r\n       \r\n      \r\n  }\r\n }","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"newowner\",\"type\":\"address\"}],\"name\":\"transferowner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newprise\",\"type\":\"uint256\"}],\"name\":\"transferprise\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"One\",\"type\":\"address\"},{\"name\":\"fastreferer\",\"type\":\"address\"}],\"name\":\"Registracion\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"One\",\"type\":\"address\"},{\"name\":\"fastreferer\",\"type\":\"address\"},{\"name\":\"secondreferer\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousowner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newowner\",\"type\":\"address\"}],\"name\":\"ownershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_prise\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newprise\",\"type\":\"uint256\"}],\"name\":\"prisetransferred\",\"type\":\"event\"}]","ContractName":"EtherCash","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://32024416095d99214d71fd0c3ed485ccd1147b9d74183df82ce840975768e716"}]}