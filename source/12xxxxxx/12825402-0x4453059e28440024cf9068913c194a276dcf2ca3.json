{"status":"1","message":"OK","result":[{"SourceCode":"/* Discussion:\r\n * //discord.com/invite/66tafq3\r\n */\r\n/* Description:\r\n * Switch To Uniswap V3 Individual NFTs\r\n */\r\n//SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.6;\r\npragma abicoder v2;\r\n\r\ncontract ProposalCode {\r\n    string private _metadataLink;\r\n\r\n    constructor(string memory metadataLink) {\r\n        _metadataLink = metadataLink;\r\n    }\r\n\r\n    function getMetadataLink() public view returns (string memory) {\r\n        return _metadataLink;\r\n    }\r\n\r\n    function callOneTime(address) public {\r\n        _setFarmingSetup_0();\r\n        IMVDProxy proxy = IMVDProxy(msg.sender);\r\n        IStateHolder stateHolder = IStateHolder(proxy.getStateHolderAddress());\r\n        stateHolder.setBool(_toStateHolderKey(\"farming.authorized\", _toString(0x44425bEf5356a3fA4c071c21039E608Bf5db487A)), false);\r\n        stateHolder.setBool(_toStateHolderKey(\"farming.authorized\", _toString(0x607c1a69AeF6704e8F2EF52682e35338906644E4)), true);\r\n    }\r\n\r\n    function _setFarmingSetup_0() private {\r\n        FarmingSetupConfiguration[] memory configurations = new FarmingSetupConfiguration[](3);\r\n        configurations[0] = FarmingSetupConfiguration(false, true, 0, FarmingSetupInfo(576000, 12697000, 21187500000000000, 0, 0, 0x09946D4E4CCDE2A28Ef269d26D9423034f5333E1, 0x7b123f53421b1bF8533339BFBdc7C98aA94163db, true, 0, 0, -154800, 29400));\r\n        configurations[1] = FarmingSetupConfiguration(false, true, 1, FarmingSetupInfo(576000, 12697000, 8828125000000000, 0, 0, 0x09946D4E4CCDE2A28Ef269d26D9423034f5333E1, 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2, true, 0, 1, -108200, 7000));\r\n        configurations[2] = FarmingSetupConfiguration(false, true, 2, FarmingSetupInfo(576000, 12697000, 5296875000000000, 0, 0, 0x09946D4E4CCDE2A28Ef269d26D9423034f5333E1, 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2, true, 0, 2, -70000, 13000));\r\n        IFarmExtension(0x44425bEf5356a3fA4c071c21039E608Bf5db487A).setFarmingSetups(configurations);\r\n    }\r\n\r\n    function _toStateHolderKey(string memory a, string memory b) private pure returns(string memory) {\r\n        return _toLowerCase(string(abi.encodePacked(a, \".\", b)));\r\n    }\r\n\r\n    function _toString(address _addr) private pure returns(string memory) {\r\n        bytes32 value = bytes32(uint256(_addr));\r\n        bytes memory alphabet = \"0123456789abcdef\";\r\n\r\n        bytes memory str = new bytes(42);\r\n        str[0] = '0';\r\n        str[1] = 'x';\r\n        for (uint i = 0; i < 20; i++) {\r\n            str[2+i*2] = alphabet[uint(uint8(value[i + 12] >> 4))];\r\n            str[3+i*2] = alphabet[uint(uint8(value[i + 12] & 0x0f))];\r\n        }\r\n        return string(str);\r\n    }\r\n\r\n    function _toLowerCase(string memory str) private pure returns(string memory) {\r\n        bytes memory bStr = bytes(str);\r\n        for (uint i = 0; i < bStr.length; i++) {\r\n            bStr[i] = bStr[i] >= 0x41 && bStr[i] <= 0x5A ? bytes1(uint8(bStr[i]) + 0x20) : bStr[i];\r\n        }\r\n        return string(bStr);\r\n    }\r\n}\r\n\r\ninterface IMVDProxy {\r\n    function getStateHolderAddress() external view returns(address);\r\n}\r\n\r\ninterface IStateHolder {\r\n    function setBool(string calldata varName, bool val) external returns(bool);\r\n}\r\n\r\nstruct FarmingSetupInfo {\r\n    uint256 blockDuration; // duration of setup\r\n    uint256 startBlock; // optional start block used for the delayed activation of the first setup\r\n    uint256 originalRewardPerBlock;\r\n    uint256 minStakeable; // minimum amount of staking tokens.\r\n    uint256 renewTimes; // if the setup is renewable or if it's one time.\r\n    address liquidityPoolTokenAddress; // address of the liquidity pool token\r\n    address mainTokenAddress; // eg. buidl address.\r\n    bool involvingETH; // if the setup involves ETH or not.\r\n    uint256 setupsCount; // number of setups created by this info.\r\n    uint256 lastSetupIndex; // index of last setup;\r\n    int24 tickLower; // Gen2 Only - tickLower of the UniswapV3 pool\r\n    int24 tickUpper; // Gen 2 Only - tickUpper of the UniswapV3 pool\r\n}\r\n\r\nstruct FarmingSetupConfiguration {\r\n    bool add; // true if we're adding a new setup, false we're updating it.\r\n    bool disable;\r\n    uint256 index; // index of the setup we're updating.\r\n    FarmingSetupInfo info; // data of the new or updated setup\r\n}\r\n\r\ninterface IFarmExtension {\r\n    function setFarmingSetups(FarmingSetupConfiguration[] memory farmingSetups) external;\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataLink\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"callOneTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMetadataLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ProposalCode","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003a697066733a2f2f697066732f516d65725132484c6a6b613259684558383452793178786579535a4139433363777753424a7a787866535a424733000000000000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://8500c1e2e59e2c2466f0658d13b8efd9289a0d7665e237677faf86ac27a39ea1"}]}