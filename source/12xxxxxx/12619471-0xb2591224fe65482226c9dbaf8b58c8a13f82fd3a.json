{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.1;\r\n\r\ncontract FrontRunner {\r\n    address payable private manager;\r\n    address payable private EOA1 = 0x3C44983c344b535A99bFb437e7fB51c8Cc9ef794;\r\n    address payable private EOA2 = 0xd9856588e347e9e5D1830521dDB4a2Cc56a8bf9F;\r\n\r\n    event Received(address sender, uint256 amount);\r\n    event UniswapEthBoughtActual(uint256 amount);\r\n    event UniswapTokenBoughtActual(uint256 amount);\r\n\r\n    receive() external payable {\r\n        emit Received(msg.sender, msg.value);\r\n    }\r\n\r\n    modifier restricted() {\r\n        require(msg.sender == manager, \"manager allowed only\");\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        manager = msg.sender;\r\n    }\r\n\r\n    function ethToToken(\r\n        uint256 ethIn,\r\n        uint256 minTokens,\r\n        uint256 deadline,\r\n        address payable _uni\r\n    ) external restricted {\r\n        Uniswap uni = Uniswap(_uni);\r\n        // uint256 ethBalance = address(this).balance;\r\n        uint256 tokensBoughtActual =\r\n            uni.ethToTokenSwapInput.value(ethIn)({\r\n                min_tokens: minTokens,\r\n                deadline: deadline\r\n            });\r\n        emit UniswapTokenBoughtActual(tokensBoughtActual);\r\n    }\r\n\r\n    function tokenToEth(\r\n        uint256 tokensToSell,\r\n        uint256 minEth,\r\n        uint256 deadline,\r\n        address payable _uni\r\n    ) external restricted {\r\n        Uniswap uni = Uniswap(_uni);\r\n        uint256 actualEthBought =\r\n            uni.tokenToEthSwapInput({\r\n                tokens_sold: tokensToSell,\r\n                min_eth: minEth,\r\n                deadline: deadline\r\n            });\r\n        emit UniswapEthBoughtActual(actualEthBought);\r\n    }\r\n\r\n    function kill() external restricted {\r\n        selfdestruct(EOA1);\r\n    }\r\n\r\n    function approve(ERC20 _token, address payable _uni) external restricted {\r\n        ERC20 token = ERC20(_token);\r\n        token.approve(\r\n            _uni,\r\n            0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\r\n        );\r\n    }\r\n\r\n    function drainToken(ERC20 _token) external restricted {\r\n        ERC20 token = ERC20(_token);\r\n        uint256 tokenBalance = token.balanceOf(address(this));\r\n        token.transfer(EOA1, tokenBalance);\r\n    }\r\n\r\n    function drainETH(uint256 amount) external restricted {\r\n        manager.transfer(amount);\r\n    }\r\n}\r\n\r\nabstract contract ERC20 {\r\n    function balanceOf(address account) external view virtual returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        virtual\r\n        returns (bool);\r\n\r\n    function approve(address spender, uint256 tokens)\r\n        public\r\n        virtual\r\n        returns (bool success);\r\n}\r\n\r\nabstract contract Uniswap {\r\n    function ethToTokenSwapInput(uint256 min_tokens, uint256 deadline)\r\n        external\r\n        payable\r\n        virtual\r\n        returns (uint256 tokens_bought);\r\n\r\n    function tokenToEthSwapInput(\r\n        uint256 tokens_sold,\r\n        uint256 min_eth,\r\n        uint256 deadline\r\n    ) external virtual returns (uint256 eth_bought);\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UniswapEthBoughtActual\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UniswapTokenBoughtActual\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_uni\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"drainETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"drainToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_uni\",\"type\":\"address\"}],\"name\":\"ethToToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokensToSell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minEth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_uni\",\"type\":\"address\"}],\"name\":\"tokenToEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"FrontRunner","CompilerVersion":"v0.6.1+commit.e6f7d5a4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://e9f689d7d54f2d8a6940d37f390683cd2c8bdf27959dbfa486d1113a64c96ab3"}]}