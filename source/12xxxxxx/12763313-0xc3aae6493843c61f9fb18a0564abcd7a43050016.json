{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n \r\ncontract PresidentialElections {\r\n    struct StateResult {\r\n        string[] parties;\r\n        uint32[] votes;\r\n    }\r\n    \r\n    mapping (uint16 => mapping(string => StateResult)) results;\r\n    \r\n    function sendResult(uint16 year, string calldata state, string[] calldata parties, uint32[] calldata votes) public {\r\n        require(\r\n            (msg.sender == address(0x48c4412306d11d8011ccBA1DfB9925DB00A395E6)) ||\r\n            (msg.sender == address(0xfe7B4fc83c6586D2017B33F132C91CF00C881068))\r\n        );\r\n        results[year][state] = StateResult(parties, votes);\r\n    }\r\n    \r\n    function sendResults(uint16 year, string[] calldata states, string[][] calldata parties, uint32[][] calldata votes) public {\r\n        require(\r\n            (msg.sender == address(0x48c4412306d11d8011ccBA1DfB9925DB00A395E6)) ||\r\n            (msg.sender == address(0xfe7B4fc83c6586D2017B33F132C91CF00C881068))\r\n        );\r\n        for (uint256 i = 0; i < states.length; i++) {\r\n            results[year][states[i]] = StateResult(parties[i], votes[i]);\r\n        }\r\n    }\r\n    \r\n    function getResult(uint16 year, string calldata state) public view returns (StateResult memory result) {\r\n        return results[year][state];\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"year\",\"type\":\"uint16\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"}],\"name\":\"getResult\",\"outputs\":[{\"components\":[{\"internalType\":\"string[]\",\"name\":\"parties\",\"type\":\"string[]\"},{\"internalType\":\"uint32[]\",\"name\":\"votes\",\"type\":\"uint32[]\"}],\"internalType\":\"struct PresidentialElections.StateResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"year\",\"type\":\"uint16\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"parties\",\"type\":\"string[]\"},{\"internalType\":\"uint32[]\",\"name\":\"votes\",\"type\":\"uint32[]\"}],\"name\":\"sendResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"year\",\"type\":\"uint16\"},{\"internalType\":\"string[]\",\"name\":\"states\",\"type\":\"string[]\"},{\"internalType\":\"string[][]\",\"name\":\"parties\",\"type\":\"string[][]\"},{\"internalType\":\"uint32[][]\",\"name\":\"votes\",\"type\":\"uint32[][]\"}],\"name\":\"sendResults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"PresidentialElections","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://7a2cb04e2800a2b4a7646216bf6f1d4ed2f7a0470a3d9b4fc66e2bc4516c42a8"}]}