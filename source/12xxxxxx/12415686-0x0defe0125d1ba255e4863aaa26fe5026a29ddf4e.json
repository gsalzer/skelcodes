{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.7.6;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address addr) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n}\r\n\r\ncontract BalancesAndAllowancesHelper {\r\n    \r\n    uint256 private constant infinityAllowance = 1 << 248;\r\n    \r\n    function getBalances(IERC20[] calldata tokens, address wallet) external view returns (uint256[] memory indexAndBalance) {\r\n        uint counter = 0;\r\n        uint256[] memory tmp = new uint256[](tokens.length);\r\n        for (uint i = 0; i < tokens.length; i++) {\r\n            try tokens[i].balanceOf(wallet) returns (uint256 balance) {\r\n                if (balance == 0) {\r\n                continue;\r\n            }\r\n            \r\n            tmp[counter] = i << 248 | balance;\r\n            counter++;\r\n            } catch {\r\n                \r\n            }\r\n        }\r\n        \r\n        indexAndBalance = new uint256[](counter);\r\n        for (uint i = 0; i < counter; i++) {\r\n            indexAndBalance[i] = tmp[i];\r\n        }\r\n    }\r\n    \r\n    function getAllowances(IERC20[] calldata tokens, address owner, address spender) external view returns (uint256[] memory indexAndAllowance) {\r\n        uint counter = 0;\r\n        uint256[] memory tmp = new uint256[](tokens.length);\r\n        for (uint i = 0; i < tokens.length; i++) {\r\n            try tokens[i].allowance(owner, spender) returns (uint256 allowance) {\r\n                if (allowance == 0) {\r\n                    continue;\r\n                }\r\n            \r\n                if (allowance > infinityAllowance) {\r\n                    tmp[counter] = (i << 248) | (1 << 247);        \r\n                } else {\r\n                    tmp[counter] = (i << 248) | allowance;       \r\n                }\r\n                counter++;\r\n            } catch {\r\n                \r\n            }\r\n        }\r\n        \r\n        indexAndAllowance = new uint256[](counter);\r\n        for (uint i = 0; i < counter; i++) {\r\n            indexAndAllowance[i] = tmp[i];\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"getAllowances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indexAndAllowance\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"indexAndBalance\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"BalancesAndAllowancesHelper","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://7ee0cdd87a3b1f0965d3126027e826e7c3bbc335c53b2cea20538d379203056c"}]}