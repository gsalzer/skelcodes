{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/FeeCollect.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\npragma abicoder v2;\\n\\nimport \\\"./interfaces/IConjureFactory.sol\\\";\\nimport \\\"./interfaces/IConjureRouter.sol\\\";\\n\\ninterface Collect{\\n    function collectFees() external;\\n    function changeOwner(address payable _newOwner) external;\\n}\\n\\ncontract FeeCollect {\\n    // address used for pay out\\n\\n    address public CNJAddress = 0xcE53384b7ea89039e10B98E9401dd3454e4A9b9c;\\n    address public  control = 0xa71A51A4863A2f9c2a83A9FEb284595020CC80A7;\\n    Collect[] public CollectAddresses;\\n    address public DAOtimelock = 0x3aac79279108CF1C7dB7d8250c87eeffC63676f5;\\n\\n    receive() external payable {\\n    }\\n\\n    fallback() external payable{\\n        pay();\\n    }\\n\\n    function collect(Collect[] memory assets) public{\\n        for (uint c = 0; c < assets.length; c++) {\\n            assets[c].collectFees();\\n        }\\n        pay();\\n    }\\n    function pay() public{\\n        address payable conjureRouter = IConjureFactory(CNJAddress).getConjureRouter();\\n        IConjureRouter(conjureRouter).deposit{value:address(this).balance}();\\n    }\\n\\n    function collectSet(Collect[] memory assets) public{\\n        require(msg.sender == control, \\\"Must come from controller address\\\");\\n        CollectAddresses = assets;\\n    }\\n\\n    function updateControl(address _control) public{\\n        require(msg.sender == control, \\\"Must come from controller address\\\");\\n        control = _control;\\n    }\\n\\n    function collect1tap() public{\\n        for (uint c = 0; c < CollectAddresses.length; c++) {\\n            CollectAddresses[c].collectFees();\\n        }\\n        pay();\\n    }\\n\\n    function changeOwner(address cnjContract, address payable newOwner) public {\\n        require(msg.sender == DAOtimelock, \\\"Must come from DAO address\\\");\\n        Collect(cnjContract).changeOwner(newOwner);\\n    }\\n}\"\r\n    },\r\n    \"contracts/interfaces/IConjureFactory.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\n/// @author Conjure Finance Team\\n/// @title IConjureFactory\\n/// @notice Interface for interacting with the ConjureFactory Contract\\ninterface IConjureFactory {\\n\\n    /**\\n     * @dev gets the current conjure router\\n     *\\n     * @return the current conjure router\\n    */\\n    function getConjureRouter() external returns (address payable);\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/IConjureRouter.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\n/// @author Conjure Finance Team\\n/// @title IConjureRouter\\n/// @notice Interface for interacting with the ConjureRouter Contract\\ninterface IConjureRouter {\\n\\n    /**\\n     * @dev calls the deposit function\\n    */\\n    function deposit() external payable;\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"CNJAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CollectAddresses\",\"outputs\":[{\"internalType\":\"contract Collect\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAOtimelock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cnjContract\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Collect[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"collect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collect1tap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Collect[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"collectSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"control\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_control\",\"type\":\"address\"}],\"name\":\"updateControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"FeeCollect","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}