{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n                                                    ......''''......\r\n                                            .',:cldxxkOOO0kddk0OOOkxxdlc:;'.\r\n                                       .,:lxkO00000000000k, .;k00000000000Okxl:,.\r\n                                   .;ldO0000000000000000O;    :O0000000000000000Odl;.\r\n                                ':dk00000000000000000000Ol.  .o000000000000000000000kd:'\r\n                             .:dO0000000000000000000000000o;:d0000000000000000000000000Od:.\r\n                           ,ok000000000000000000000000000000000000000000000000000000000000ko,\r\n                        .;dO0000000000000000000000000000000000000000000000000000000000000000Od;.\r\n                       ;d0000000000000000000000000000000000000000000000000000000000000000000000d;\r\n                     'dO000000000000000000000000000000000000000000000000000000000000000000000000Od'\r\n                   .cO0000000000000000000000000000000000000000000000000000000000000000000000000000Oc.\r\n                  'd00000000000000000000000000000000000000000000000000000000000000000000000000000000d'\r\n                 ;k0000000000000000000000000000000000000000000000000000000000000000000000000000000000k;\r\n                cO000000000000000000000000000000000000000000000000000000000000000000000000000000000000Oc\r\n               cO00000000000000000000000000000000000000000000000000000000000000000000000000000000000000Oc\r\n              :O0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000O:\r\n             ;k000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000k;\r\n            .x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000x.\r\n            l0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000l\r\n           'k0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000k'\r\n           c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c\r\n          .x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000x.\r\n          ,k00000000000000000000000000000000000OOOO000000000000000000000000000000000000000000000000000000000k,\r\n          ;O000OO00000000000000000000000000000x,...'',,;;;:::cccclloooddxxkkkOOOO000000000000000000000000000O;\r\n          :0ko:'.,ldO0000000000000000000000000d.                         ........'',,;;;::ccccllooodddxxkkkOO:\r\n          cOd;.   .:k0000000000000000000000000d.                                        .......'',,;:cclodxxk:\r\n          :000kocok000000000000000000000000000d.                ...'',,;;;::cccclloodddxxkkkOOOO0000000000000:\r\n          ;O0000000000000000000000000000000000koccllood;       .o0O00000000000000000000000000000000000000000O;\r\n          'k0000000000000000000000000000000000000000000d.      .x0000000000000000000000000000000000000000000k'\r\n          .o0000000000000000000000000000000000000000000x.      ,k0000000000000000000000000000000000000000000o.\r\n           ;O000000000000000000000000000000000000000000k,      ;O000000000000000000000000000000000000000000O;\r\n           .d000000000000000000000000000000000000000000O;      c0000000000000000000000000000000000000000000d.\r\n            ;O000000000000000000000000000000000000000000c     .o000000000000000000000000000000000000000000O;\r\n            .l000000000000000000000000000000000000000000o.    .x000000000000000000000000000000000000000000l.\r\n             .d00000000000000000000000000000000000000000x.    'k00000000000000000000000000000000000000000d.\r\n              .x0000000000000000000000000000000000000000k'    ;O0000000000000000000000000000000000000000x.\r\n               'x000000000000000000000000000000000000000O;    c0000000000000000000000000000000000000000x'\r\n                .d000000000000000000000000000000000000000c   .o000000000000000000000000000000000000000d.\r\n                 .lO0000000000000000000000000000000000000o.  .d0000000000000000000000000000000000000Ol.\r\n                   ;k000000000000000000000000000000000000d.  'k000000000000000000000000000000000000k;\r\n                    .oO0000000000000000000000000000000000k'  ;O0000000000000000000000000000000000Oo.\r\n                      ,d000000000000000000000000000000000O,  :0000000000000000000000000000000000d,\r\n                       .;x00000000000000000000000000000000:..l00000000000000000000000000000000x;.\r\n                         .;dO00000000000000000000000000000l.,d00000000000000000000000000000Od;.\r\n                            'lk000000000000000000000000000d;cx000000000000000000000000000kl'\r\n                              .,lk000000000000000000000000xodk000000000000000000000000kl,.\r\n                                 .,cdO00000000000000000000OkOO00000000000000000000Odc,.\r\n                                     .;cdkO0000000000000000000000000000000000Okdc;.\r\n                                         .';cldkO0000000000000000000000Okdlc;'.\r\n                                               ..',;:cclllloollllcc:;,'..\r\n                           ':ccc,\r\n                         .l0KKKK0d.\r\n                         'kK0KK0K0;\r\n     ..'.'.'.            .o0KKKKKx.\r\n     :000000O,             ,cllc;.\r\n     :0K000KO,\r\n     c0K0K0KO,                                        .....              .....                        ......\r\n.cdddk000KKK0kdddddc.     :ddddddc.     .ldddddl. ,coxkOOOkdol;.     'coxkOOOkdl;.               .;loxkOOOkkxoc,.\r\n.xK0KK00KKKKKK0KK0Kd.    .oK0KK0Kx.     'OK0K0K0dx0KK0000000KKKOc. ,x0KK0000000KKOl.          .:dOKKK00000000KK0Oo,\r\n.kKKKKK0KKKKKKKKKKKd.    .oK0KK0Kx.     'OK0KK0KK00KKKKKK00KKK0K0xdOK0KKKKKK000K00Kx'       .:kKK0K0KKKKKKKK00K00K0d'\r\n.;cccx0K0K0K0dccccc;     .oK0KK0Kx.     'OK0KKK0K0xl;,,:oOK0KK000KKK0kl;,,:oOKK00K0Kd.     .o0K0K0K0xl:,,,:lk0K0KK0KO;\r\n     :0K0K0KO,           .oK0KK0Kx.     'OK0KK0K0l.      'xK00KKK0K0l.      .dK0000K0;    .l000KK0x,.       .:kK0KK0KO,\r\n     :0K0K0KO,           .oK0KK0Kx.     'OK0KK0Kd.        ,OKK0KK0Kd.        ,OK0KK0Kl    ,OK000Kk,...........:OK0KK0Ko.\r\n     :0K0K0KO,           .oK0KK0Kx.     'OK0KKKKc         'kXK0000Kl         .xK0KK0Ko.   :0K000K0kkkkkkkkkkkkO0K0000Kx.\r\n     :0K0K0KO,           .oK0KK0Kx.     'OK0KKKKc         'kXK0KK0Kl         .xK0KK0Ko.   :0K0K0K000000000000000000000x.\r\n     :0K000KO,           .oK0KK0Kx.     'OK0KKK0c         'kXK00K0Kl         .xK0KK0Ko.   'OK0K0KOc....................\r\n     :0K0K0K0l.          .oK0KK0Kx.     'OK0KKKKc         'kXK00K0Kl         .xK0KK0Ko.    l0K0K0Kk:.          'cl'\r\n     ,OK0KK0K0xc;,,:.    .oK0KK0Kx.     'OK0KKKKc         'kXK0KK0Kl         .xK0KK0Ko.    .l0K0K0K0ko:,,',;:lx0KKOc.\r\n      c0K0KKK0KKKKKKc    .oK0KK0Kx.     'OK0KKK0c         'kXK0KK0Kl         .xK0KK0Ko.      ;x0K0000KKK000KKK00K000x,\r\n       ;k0KK0000000Kc    .oK0KK0Kx.     'OK00000c         'kXK0K00Kl         .xK0000Ko.       .;oO0KK000000000KKK0Oo:.\r\n        .,cdxkOOOkxo'     :ddddddc.     .ldddddd,         .lxdddddd;         .cdddddd:           .,codxkOOOkkxol:,.\r\n            ..''...                                                                                   ...''...\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n/**\r\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\r\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\r\n * be specified by overriding the virtual {_implementation} function.\r\n *\r\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\r\n * different contract through the {_delegate} function.\r\n *\r\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\r\n */\r\nabstract contract Proxy {\r\n    /**\r\n     * @dev Delegates the current call to `implementation`.\r\n     *\r\n     * This function does not return to its internall call site, it will return directly to the external caller.\r\n     */\r\n    function _delegate(address implementation) internal {\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n        // Copy msg.data. We take full control of memory in this inline assembly\r\n        // block because it will not return to Solidity code. We overwrite the\r\n        // Solidity scratch pad at memory position 0.\r\n            calldatacopy(0, 0, calldatasize())\r\n\r\n        // Call the implementation.\r\n        // out and outsize are 0 because we don't know the size yet.\r\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\r\n\r\n        // Copy the returned data.\r\n            returndatacopy(0, 0, returndatasize())\r\n\r\n            switch result\r\n            // delegatecall returns 0 on error.\r\n            case 0 {revert(0, returndatasize())}\r\n            default {return (0, returndatasize())}\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\r\n     * and {_fallback} should delegate.\r\n     */\r\n    function _implementation() internal virtual view returns (address);\r\n\r\n    /**\r\n     * @dev Delegates the current call to the address returned by `_implementation()`.\r\n     *\r\n     * This function does not return to its internall call site, it will return directly to the external caller.\r\n     */\r\n    function _fallback() internal {\r\n        _beforeFallback();\r\n        _delegate(_implementation());\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\r\n     * function in the contract matches the call data.\r\n     */\r\n    fallback() payable external {\r\n        _fallback();\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\r\n     * is empty.\r\n     */\r\n    receive() payable external {\r\n        _fallback();\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\r\n     * call, or as part of the Solidity `fallback` or `receive` functions.\r\n     *\r\n     * If overriden should call `super._beforeFallback()`.\r\n     */\r\n    function _beforeFallback() internal virtual {\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies in extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {size := extcodesize(account)}\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success,) = recipient.call{value : amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{value : weiValue}(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\r\n * implementation address that can be changed. This address is stored in storage in the location specified by\r\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\r\n * implementation behind the proxy.\r\n *\r\n * Upgradeability is only provided internally through {_upgradeTo}. For an externally upgradeable proxy see\r\n * {TransparentUpgradeableProxy}.\r\n */\r\ncontract UpgradeableProxy is Proxy {\r\n    /**\r\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\r\n     *\r\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\r\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\r\n     */\r\n    constructor(address _logic, bytes memory _data) payable {\r\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\r\n        _setImplementation(_logic);\r\n        if (_data.length > 0) {\r\n            // solhint-disable-next-line avoid-low-level-calls\r\n            (bool success,) = _logic.delegatecall(_data);\r\n            require(success);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Emitted when the implementation is upgraded.\r\n     */\r\n    event Upgraded(address indexed implementation);\r\n\r\n    /**\r\n     * @dev Storage slot with the address of the current implementation.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\r\n     * validated in the constructor.\r\n     */\r\n    bytes32 private constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n\r\n    /**\r\n     * @dev Returns the current implementation address.\r\n     */\r\n    function _implementation() internal override view returns (address impl) {\r\n        bytes32 slot = _IMPLEMENTATION_SLOT;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            impl := sload(slot)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrades the proxy to a new implementation.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     */\r\n    function _upgradeTo(address newImplementation) internal {\r\n        _setImplementation(newImplementation);\r\n        emit Upgraded(newImplementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the EIP1967 implementation slot.\r\n     */\r\n    function _setImplementation(address newImplementation) private {\r\n        require(Address.isContract(newImplementation), \"UpgradeableProxy: new implementation is not a contract\");\r\n\r\n        bytes32 slot = _IMPLEMENTATION_SLOT;\r\n\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            sstore(slot, newImplementation)\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @dev This contract implements a proxy that is upgradeable by an admin.\r\n *\r\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\r\n * clashing], which can potentially be used in an attack, this contract uses the\r\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\r\n * things that go hand in hand:\r\n *\r\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\r\n * that call matches one of the admin functions exposed by the proxy itself.\r\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\r\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\r\n * \"admin cannot fallback to proxy target\".\r\n *\r\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\r\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\r\n * to sudden errors when trying to call a function from the proxy implementation.\r\n *\r\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\r\n * you should think of the `ProxyAdmin` instance as the real administrative inerface of your proxy.\r\n */\r\ncontract TransparentUpgradeableProxy is UpgradeableProxy {\r\n    /**\r\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\r\n     * optionally initialized with `_data` as explained in {UpgradeableProxy-constructor}.\r\n     */\r\n    constructor(address _logic, address _admin, bytes memory _data) payable UpgradeableProxy(_logic, _data) {\r\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1));\r\n        _setAdmin(_admin);\r\n    }\r\n\r\n    /**\r\n     * @dev Emitted when the admin account has changed.\r\n     */\r\n    event AdminChanged(address previousAdmin, address newAdmin);\r\n\r\n    /**\r\n     * @dev Storage slot with the admin of the contract.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\r\n     * validated in the constructor.\r\n     */\r\n    bytes32 private constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\r\n\r\n    /**\r\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\r\n     */\r\n    modifier ifAdmin() {\r\n        if (msg.sender == _admin()) {\r\n            _;\r\n        } else {\r\n            _fallback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current admin.\r\n     *\r\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\r\n     *\r\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\r\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\r\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\r\n     */\r\n    function admin() external ifAdmin returns (address) {\r\n        return _admin();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current implementation.\r\n     *\r\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\r\n     *\r\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\r\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\r\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\r\n     */\r\n    function implementation() external ifAdmin returns (address) {\r\n        return _implementation();\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the admin of the proxy.\r\n     *\r\n     * Emits an {AdminChanged} event.\r\n     *\r\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\r\n     */\r\n    function changeAdmin(address newAdmin) external ifAdmin {\r\n        require(newAdmin != address(0), \"TransparentUpgradeableProxy: new admin is the zero address\");\r\n        emit AdminChanged(_admin(), newAdmin);\r\n        _setAdmin(newAdmin);\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrade the implementation of the proxy.\r\n     *\r\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\r\n     */\r\n    function upgradeTo(address newImplementation) external ifAdmin {\r\n        _upgradeTo(newImplementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\r\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\r\n     * proxied contract.\r\n     *\r\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\r\n     */\r\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\r\n        _upgradeTo(newImplementation);\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success,) = newImplementation.delegatecall(data);\r\n        require(success);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current admin.\r\n     */\r\n    function _admin() internal view returns (address adm) {\r\n        bytes32 slot = _ADMIN_SLOT;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            adm := sload(slot)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the EIP1967 admin slot.\r\n     */\r\n    function _setAdmin(address newAdmin) private {\r\n        bytes32 slot = _ADMIN_SLOT;\r\n\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            sstore(slot, newAdmin)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\r\n     */\r\n    function _beforeFallback() internal override virtual {\r\n        require(msg.sender != _admin(), \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\");\r\n        super._beforeFallback();\r\n    }\r\n}\r\n\r\ncontract TimeUpgradeableProxy is TransparentUpgradeableProxy {\r\n\r\n    constructor(address logic, address admin, bytes memory data) TransparentUpgradeableProxy(logic, admin, data) {\r\n\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"TimeUpgradeableProxy","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000c4182eb9d2730dbbe28b606b903f7c95bc0af3d8000000000000000000000000e6b1a3a7823e8a0a31443e74884d0a208a6da38b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"1","Implementation":"0xc4182eb9d2730dbbe28b606b903f7c95bc0af3d8","SwarmSource":"ipfs://ec05aeae9d76cd5d029c89a9f3b15fb5812589796d567c05ddd33913da5d6d0b"}]}