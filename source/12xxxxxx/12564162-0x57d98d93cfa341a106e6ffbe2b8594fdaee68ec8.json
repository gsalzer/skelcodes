{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2021-06-03\r\n*/\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract MultiSend {\r\n    \r\n    // to save the owner of the contract in construction\r\n    address private owner;\r\n    // to save the amount of ethers in the smart-contract\r\n    uint total_value;\r\n    \r\n    // modifier to check if the caller is owner\r\n    modifier isOwner() {\r\n        require(msg.sender == owner, \"0\");\r\n        _;\r\n    }\r\n    \r\n    /**\r\n     * @dev Set contract deployer as owner\r\n     */\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // charge enable the owner to store ether in the smart-contract\r\n    function deposit() payable public isOwner {\r\n        // adding the message value to the smart contract\r\n        total_value += msg.value;\r\n    }\r\n    \r\n    // withdraw perform the transfering of ethers\r\n    function withdraw(address payable receiverAddr, uint receiverAmnt) private {\r\n        receiverAddr.transfer(receiverAmnt);\r\n    }\r\n    \r\n\r\n    function distribute(address payable[] memory addrs, uint amount) payable public isOwner {\r\n        total_value += msg.value;\r\n        uint totalAmnt = amount * addrs.length;\r\n        \r\n        require(total_value >= totalAmnt, \"1\");\r\n        \r\n        \r\n        for (uint i=0; i < addrs.length; i++) {\r\n            total_value -= amount;\r\n            withdraw(addrs[i], amount);\r\n        }\r\n    }\r\n    \r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"addrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"MultiSend","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://4d30c8266d9380ca58fd59ccf0e564a13f79f4e7bf3c6160faf685c41854b865"}]}