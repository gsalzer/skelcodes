{"status":"1","message":"OK","result":[{"SourceCode":"// Sources flattened with hardhat v2.1.1 https://hardhat.org\r\n// File contracts/BurnVendor.sol\r\n\r\npragma solidity ^0.8.4;\r\n//SPDX-License-Identifier: MIT\r\n\r\n/*\r\n     _    _    _ _        ____                                _\r\n    / \\  | | _(_) |_ __ _|  _ \\ ___  ___  ___ _   _  ___   __| | ___   __ _\r\n   / _ \\ | |/ / | __/ _` | |_) / _ \\/ __|/ __| | | |/ _ \\ / _` |/ _ \\ / _` |\r\n  / ___ \\|   <| | || (_| |  _ <  __/\\__ \\ (__| |_| |  __/| (_| | (_) | (_| |\r\n /_/   \\_\\_|\\_\\_|\\__\\__,_|_| \\_\\___||___/\\___|\\__,_|\\___(_)__,_|\\___/ \\__, |\r\n                                                                      |___/\r\n\r\n 🐕 AkitaRescue.dog\r\n\r\n 🏗 scaffold-eth\r\n\r\n 🖨 https://github.com/austintgriffith/scaffold-eth/tree/akita-rescue-dog\r\n\r\n ⚠️ Warning: not formally audited!\r\n\r\n 👨🏻‍🔬 @austingriffith\r\n\r\n*/\r\n\r\ninterface TOKEN {\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract BurnVendor {\r\n\r\n  TOKEN public akitaToken;\r\n\r\n  uint256 constant public tokensPerEth = 2037060000;\r\n\r\n  uint256 constant public burnMultiplier = 10;\r\n\r\n  address payable constant public gitcoinAddress = payable(0xde21F729137C5Af1b01d73aF1dC21eFfa2B8a0d6);\r\n\r\n  address constant public burnAddress = 0xDead000000000000000000000000000000000d06;\r\n\r\n  constructor(address akitaAddress) {\r\n    akitaToken = TOKEN(akitaAddress);\r\n  }\r\n\r\n  receive() external payable {\r\n    buy();\r\n  }\r\n\r\n  event Buy(address who, uint256 value, uint256 amount, uint256 burn);\r\n\r\n  function buy() public payable {\r\n\r\n    uint256 amountOfTokensToBuy = msg.value * tokensPerEth;\r\n\r\n    uint256 amountOfTokensToBurn = amountOfTokensToBuy * burnMultiplier;\r\n\r\n    akitaToken.transferFrom(gitcoinAddress, burnAddress, amountOfTokensToBurn);\r\n\r\n    akitaToken.transferFrom(gitcoinAddress, msg.sender, amountOfTokensToBuy);\r\n\r\n    gitcoinAddress.transfer(msg.value);\r\n\r\n    emit Buy(msg.sender, msg.value, amountOfTokensToBuy, amountOfTokensToBurn);\r\n\r\n  }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"akitaAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burn\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"akitaToken\",\"outputs\":[{\"internalType\":\"contract TOKEN\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gitcoinAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"BurnVendor","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000003301ee63fb29f863f2333bd4466acb46cd8323e6","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://20aed2a75ea53f8cdc6680dfedd1011e4e5f2fc99c257ec84bf0c9c71ef201bb"}]}