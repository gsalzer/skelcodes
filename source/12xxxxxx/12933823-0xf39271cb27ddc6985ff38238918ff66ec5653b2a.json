{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: UNLICENSED\r\npragma solidity >=0.8.0;\r\n\r\n\r\ncontract Owned {\r\n        address public owner;      \r\n\r\n        constructor() {\r\n            owner = msg.sender;\r\n        }\r\n\r\n        modifier onlyOwner {\r\n            assert(msg.sender == owner);\r\n            _;\r\n        }\r\n        \r\n        /* This function is used to transfer adminship to new owner\r\n         * @param  _newOwner - address of new admin or owner        \r\n         */\r\n\r\n        function transferOwnership(address _newOwner) onlyOwner public {\r\n            assert(_newOwner != address(0)); \r\n            owner = _newOwner;\r\n        }          \r\n}\r\n\r\ninterface ERC20 {\r\n    function transferOwnership(address _newOwner) external;\r\n    \r\n    function transferFrom(\r\n         address _from,\r\n         address _to,\r\n         uint256 _amount\r\n     ) external returns (bool success);\r\n    \r\n    \r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    \r\n    function burn(uint256 _value) external;\r\n    \r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n}\r\n\r\n\r\ncontract Burner is Owned {\r\n    ERC20 oldToken;\r\n    \r\n    function returnTokenOwnership(address _newOwner) public onlyOwner {\r\n        oldToken.transferOwnership(_newOwner);\r\n    }\r\n    \r\n    constructor(address _oldToken) {\r\n        oldToken = ERC20(_oldToken);\r\n    }\r\n    \r\n    function burn(uint256 _val) public{\r\n        oldToken.burn(_val);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oldToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"returnTokenOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Burner","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000096e322f2a4f151cd898f86ea5626cc6e10090c76","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://97649db77b7723c95433fc398e0bc02449e4296f97bf279753a932b488807c8d"}]}