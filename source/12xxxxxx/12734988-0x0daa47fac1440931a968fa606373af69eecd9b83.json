{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/ExchangeRegistry.sol\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract ExchangeRegistry {\r\n    address owner;\r\n    // frm asset -> to assets -> contract address\r\n    mapping(address => mapping(address => address)) pairs;\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"Only owner allowed\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function getPair(address _from, address _to) public view returns (address) {\r\n        return pairs[_from][_to];\r\n    }\r\n\r\n    function setOwner(address _owner) external onlyOwner {\r\n        owner = _owner;\r\n    }\r\n\r\n    function addOrChangePair(\r\n        address _from,\r\n        address _to,\r\n        address _contract\r\n    ) external onlyOwner {\r\n        require(_contract != address(0), \"contract address should not be zero\");\r\n        pairs[_from][_to] = _contract;\r\n    }\r\n\r\n    function addOrChangePairBulk(\r\n        address[] memory _fromList,\r\n        address[] memory _toList,\r\n        address[] memory _contractList\r\n    ) external onlyOwner {\r\n        for (uint256 i = 0; i < _contractList.length; i++) {\r\n            require(\r\n                _contractList[i] != address(0),\r\n                \"contract address should not be zero\"\r\n            );\r\n            pairs[_fromList[i]][_toList[i]] = _contractList[i];\r\n        }\r\n    }\r\n\r\n    function removePair(address _from, address _to) external onlyOwner {\r\n        delete pairs[_from][_to];\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"addOrChangePair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_fromList\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_toList\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_contractList\",\"type\":\"address[]\"}],\"name\":\"addOrChangePairBulk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"removePair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ExchangeRegistry","CompilerVersion":"v0.8.5+commit.a4f2e591","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://a7fd70f9068389e4d8a45e3374c68faf81f77c67981ad06d2df2f95944f16a72"}]}