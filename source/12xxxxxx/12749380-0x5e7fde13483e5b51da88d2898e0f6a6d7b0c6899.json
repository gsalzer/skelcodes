{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.6;\r\n\r\ncontract ChizDispenser {\r\n    struct Claim {\r\n        bool claimed;\r\n        uint256 ratId;\r\n    }\r\n\r\n    mapping(uint256 => Claim) public existingClaims;\r\n\r\n    ERC721 ratContract = ERC721(0xd21a23606D2746f086f6528Cd6873bAD3307b903);\r\n    ERC20 chizContract = ERC20(0x5c761c1a21637362374204000e383204d347064C);\r\n\r\n    bool paused = false;\r\n    address deployer;\r\n    uint256 amount = 10000 * 1 ether;\r\n\r\n    event Dispense(uint256 amount, uint256 ratId);\r\n\r\n    constructor() {\r\n        deployer = msg.sender;\r\n    }\r\n\r\n    modifier onlyDeployer() {\r\n        require(msg.sender == deployer);\r\n        _;\r\n    }\r\n\r\n    modifier pauseable() {\r\n        require(paused == false, \"contract is paused\");\r\n        _;\r\n    }\r\n\r\n    function pause() public onlyDeployer {\r\n        paused = true;\r\n    }\r\n\r\n    function unpause() public onlyDeployer {\r\n        paused = false;\r\n    }\r\n\r\n    function setAmount(uint256 newAmount) public onlyDeployer pauseable {\r\n        amount = newAmount;\r\n    }\r\n\r\n    function withdraw(uint256 withdrawAmount) public onlyDeployer pauseable {\r\n        chizContract.transfer(msg.sender, withdrawAmount);\r\n    }\r\n    \r\n    function claimChiz(uint256 ratId) public pauseable {\r\n        Claim memory claim = existingClaims[ratId];\r\n        require(\r\n            claim.claimed == false,\r\n            \"tokens have already been claimed for this rat\"\r\n        );\r\n\r\n        address ratOwner = ratContract.ownerOf(ratId);\r\n        require(msg.sender == ratOwner, \"caller is not owner of this rat\");\r\n\r\n        existingClaims[ratId] = Claim(true, ratId);\r\n        chizContract.transfer(msg.sender, amount);\r\n\r\n        emit Dispense(amount, ratId);\r\n    }\r\n    \r\n    function multiClaimChiz(uint256[] memory ratIds) public pauseable {\r\n        for(uint i = 0; i < ratIds.length; i++) {\r\n            claimChiz(ratIds[i]);\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract ERC721 {\r\n    function ownerOf(uint256 id) public virtual returns (address);\r\n}\r\n\r\nabstract contract ERC20 {\r\n    function transfer(address to, uint256 value) public virtual;\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ratId\",\"type\":\"uint256\"}],\"name\":\"Dispense\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ratId\",\"type\":\"uint256\"}],\"name\":\"claimChiz\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"existingClaims\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ratIds\",\"type\":\"uint256[]\"}],\"name\":\"multiClaimChiz\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"setAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ChizDispenser","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://36c644edcd58b5d79dd668bb63437ce159ad561502fea5b1b5d9ce903d9771b9"}]}