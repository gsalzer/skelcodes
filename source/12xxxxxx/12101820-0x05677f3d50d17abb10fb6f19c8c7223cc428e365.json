{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity >= 0.8.0<0.9.0;\r\n\r\n/*\r\nERC-20 token\r\n*/\r\ncontract BhangraCoin {\r\n\r\n\r\n\r\n    string public name = 'Bhangra Coin';\r\n    string public symbol = 'BGRA';\r\n    string public standard = 'Bhangra Coin v1.1';\r\n    uint256 public totalSupply;\r\n    uint8 public decimals;\r\n\r\n    // @dev Records data of all the tokens transferred\r\n    // @param _from Address that sends tokens\r\n    // @param _to Address that receives tokens\r\n    // @param _value the amount that _spender can spend on behalf of _owner\r\n    event Transfer(\r\n        address indexed _from,\r\n        address indexed _to,\r\n        uint256 _value\r\n    );\r\n\r\n    // @dev Records data of an Approval to spend the tokens on behalf of\r\n    // @param _owner address that approves to pay on its behalf\r\n    // @param _spender address to whom the approval is issued\r\n    // @param _value the amount that _spender can spend on behalf of _owner\r\n\r\n    event Approval(\r\n        address indexed _owner,\r\n        address indexed _spender,\r\n        uint256 _value\r\n    );\r\n\r\n\r\n    //@dev mapping array for keeping the balances of all the accounts\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    //@dev amping array that keeps the allowance that is still allowed to withdraw from _owner\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n    //@notice account A approved account B to send C tokens (amount C is actually left )\r\n\r\n\r\n    constructor(uint256 _intialSupply, uint8 _intialDecimals)\r\n    public\r\n    {\r\n        balanceOf[msg.sender] = _intialSupply;\r\n        totalSupply = _intialSupply;\r\n        decimals = _intialDecimals;\r\n    }\r\n\r\n\r\n    // @dev Transfers tokens from sender account to\r\n    // @param _from Address that sends tokens\r\n    // @param _to Address that receives tokens\r\n    // @param _value the amount that _spender can spend on behalf of _owner\r\n    function transfer(address _to, uint256 _value)\r\n    public\r\n    returns(bool success)\r\n    {\r\n        require(balanceOf[msg.sender] >= _value);\r\n        balanceOf[msg.sender] = balanceOf[msg.sender] - _value;\r\n        balanceOf[_to] = balanceOf[_to] + _value;\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    // @dev Allows _spender to withdraw from [msg.sender] account multiple times,\r\n    // up to the _value amount.\r\n    // @param _spender address to whom the approval is issued\r\n    // @param _value the amount that _spender can spend on behalf of _owner\r\n    // @notice If this function is called again it overwrites the current allowance\r\n    // with _value.\r\n    function approve(address _spender, uint256 _value)\r\n    public\r\n    returns(bool success)\r\n    {\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    // @dev Transfers tokens on behalf of _form account to _to account. [msg.sender]\r\n    // should have an allowance from _from account to transfer the number of tokens.\r\n    // @param _from address tokens are transferred from\r\n    // @param _to address tokens are transferred to\r\n    // @parram _value the number of tokens transferred\r\n    // @notice _from account should have enough tokens and allowance should be equal\r\n    // or greater than the amount transferred\r\n    function transferFrom(address _from, address _to, uint256 _value)\r\n    public\r\n    returns(bool success)\r\n    {\r\n        require(balanceOf[_from] >= _value);\r\n        require(allowance[_from][msg.sender] >= _value);\r\n        balanceOf[_from] = balanceOf[_from] - _value;\r\n        balanceOf[_to] = balanceOf[_to] + _value;\r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender] - _value;\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_intialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_intialDecimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"BhangraCoin","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000033b2e3c9fd0803ce80000000000000000000000000000000000000000000000000000000000000000000012","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://c88bce7bd06a762673a3e7d8bf6e803bcf70be57c25520aad3dd8f7f84c7ba89"}]}