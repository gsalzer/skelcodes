{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/C/Users/simor/Desktop/imx/contracts/AdvanceAggregator.sol\": {\r\n      \"content\": \"pragma solidity =0.6.6;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\nimport \\\"./interfaces/IFarmingPool.sol\\\";\\r\\n\\r\\ncontract AdvanceAggregator {\\r\\n\\r\\n\\tconstructor () public {}\\r\\n\\t\\r\\n\\tfunction advance(address[] calldata farmingPools) external {\\r\\n\\t\\tfor (uint i = 0; i < farmingPools.length; i++) {\\r\\n\\t\\t\\tIFarmingPool(farmingPools[i]).advance();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n}\"\r\n    },\r\n    \"/C/Users/simor/Desktop/imx/contracts/interfaces/IFarmingPool.sol\": {\r\n      \"content\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IFarmingPool {\\r\\n\\tfunction imx() external pure returns (address);\\r\\n\\tfunction claimable() external pure returns (address);\\r\\n\\tfunction borrowable() external pure returns (address);\\r\\n\\tfunction vestingBegin() external pure returns (uint);\\r\\n\\tfunction segmentLength() external pure returns (uint);\\r\\n\\tfunction recipients(address) external view returns (uint shares, uint lastShareIndex, uint credit);\\r\\n\\tfunction totalShares() external view returns (uint);\\r\\n\\tfunction shareIndex() external view returns (uint);\\r\\n\\tfunction epochBegin() external view returns (uint);\\r\\n\\tfunction epochAmount() external view returns (uint);\\r\\n\\tfunction lastUpdate() external view returns (uint);\\r\\n\\t\\r\\n\\tfunction updateShareIndex() external returns (uint _shareIndex);\\r\\n\\tfunction updateCredit(address account) external returns (uint credit);\\r\\n\\tfunction advance() external;\\r\\n\\tfunction claim() external returns (uint amount);\\r\\n\\tfunction claimAccount(address account) external returns (uint amount);\\r\\n\\tfunction trackBorrow(address borrower, uint borrowBalance, uint borrowIndex) external;\\r\\n\\t\\r\\n\\tevent UpdateShareIndex(uint shareIndex);\\r\\n\\tevent UpdateCredit(address indexed account, uint lastShareIndex, uint credit);\\r\\n\\tevent Claim(address indexed account, uint amount);\\r\\n\\tevent EditRecipient(address indexed account, uint shares, uint totalShares);\\r\\n\\tevent Advance(uint epochBegin, uint epochAmount);\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 999999\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"farmingPools\",\"type\":\"address[]\"}],\"name\":\"advance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"AdvanceAggregator","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"999999","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}