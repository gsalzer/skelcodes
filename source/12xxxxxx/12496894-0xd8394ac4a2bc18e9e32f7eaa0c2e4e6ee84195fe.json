{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n\r\n\r\n contract newstart {\r\n     \r\n       struct User {\r\n        \r\n       address referer;\r\n       address referer2;\r\n       address diler;\r\n       }\r\n      \r\n       address public owner;\r\n      address public ambassador;\r\n      \r\n     event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n     event ambassadorshipTransferred(address indexed previousambassador, address indexed newambassador);\r\n      mapping(address => User) public users;\r\n      \r\n     constructor()public{\r\n        owner = msg.sender;\r\n        ambassador = 0x2F6Cf50b71d71faFE45887F89ab3EA39ac1F5145;\r\n        }\r\n        \r\n         modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n \r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n      function transferambassador(address newambassador) public onlyOwner {\r\n    require(newambassador != address(0));\r\n    emit ambassadorshipTransferred(ambassador, newambassador);\r\n    ambassador = newambassador;\r\n  }\r\n      \r\n     function addUser(address referer, address referer2, address diler) public payable {\r\n       \r\n       address sender = msg.sender;\r\n        uint value = msg.value*42/100;\r\n      ambassador.transfer(value);\r\n       require(referer != msg.sender);\r\n      require(referer2 != msg.sender);\r\n      require(diler != msg.sender);\r\n      require(msg.value >= 500 finney);\r\n      require(msg.value <= 550 finney);\r\n      uint referervalue = msg.value*30/100;\r\n      referer.transfer(referervalue);\r\n      uint referer2value = msg.value*20/100;\r\n      referer2.transfer(referer2value);\r\n      uint dilervalue = msg.value*5/100;\r\n      diler.transfer(dilervalue);\r\n      \r\n       User storage newUser;\r\n       \r\n       newUser.referer = referer;\r\n       newUser.referer2 = referer2;\r\n       newUser.diler = diler;\r\n        users[sender] = newUser;   \r\n       }\r\n    }","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"referer\",\"type\":\"address\"},{\"name\":\"referer2\",\"type\":\"address\"},{\"name\":\"diler\",\"type\":\"address\"}],\"name\":\"addUser\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ambassador\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newambassador\",\"type\":\"address\"}],\"name\":\"transferambassador\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"referer\",\"type\":\"address\"},{\"name\":\"referer2\",\"type\":\"address\"},{\"name\":\"diler\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousambassador\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newambassador\",\"type\":\"address\"}],\"name\":\"ambassadorshipTransferred\",\"type\":\"event\"}]","ContractName":"newstart","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://a56b53373d67d42cbb47eb1313d23feed213fb0d2f2b188bb1804a0a49c1ed43"}]}