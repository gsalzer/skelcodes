{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/Ownable.sol\r\n\r\npragma solidity 0.6.6;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n\r\nOpen Zeppelin's ownable doesn't quite work with factory pattern because _owner has private access.\r\nWhen you create a DU, open-zeppelin _owner would be 0x0 (no state from template). Then no address could change _owner to the DU owner.\r\n\r\nWith this custom Ownable, the first person to call initialiaze() can set owner.\r\n */\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n    address public pendingOwner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor(address owner_) public {\r\n        owner = owner_;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"onlyOwner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to set the pendingOwner address.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        pendingOwner = newOwner;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the pendingOwner address to finalize the transfer.\r\n     */\r\n    function claimOwnership() public {\r\n        require(msg.sender == pendingOwner, \"onlyPendingOwner\");\r\n        emit OwnershipTransferred(owner, pendingOwner);\r\n        owner = pendingOwner;\r\n        pendingOwner = address(0);\r\n    }\r\n}\r\n\r\n// File: contracts/FactoryConfig.sol\r\n\r\npragma solidity 0.6.6;\r\n\r\ninterface FactoryConfig {\r\n    function currentToken() external view returns (address);\r\n    function currentMediator() external view returns (address);\r\n}\r\n\r\n// File: contracts/MainnetMigrationManager.sol\r\n\r\npragma solidity 0.6.6;\r\n\r\n\r\n\r\ncontract MainnetMigrationManager is Ownable, FactoryConfig {\r\n\r\n    event OldTokenChange(address indexed current, address indexed prev);\r\n    event CurrentTokenChange(address indexed current, address indexed prev);\r\n    event CurrentMediatorChange(address indexed current, address indexed prev);\r\n\r\n    address override public currentToken;\r\n    address override public currentMediator;\r\n    \r\n    constructor(address _currentToken, address _currentMediator) public Ownable(msg.sender) {\r\n        currentToken = _currentToken;\r\n        currentMediator = _currentMediator;\r\n    }\r\n\r\n    function setCurrentToken(address currentToken_) public onlyOwner {\r\n        emit CurrentTokenChange(currentToken_, currentToken);\r\n        currentToken = currentToken_;\r\n    }\r\n\r\n    function setCurrentMediator(address currentMediator_) public onlyOwner {\r\n        emit CurrentMediatorChange(currentMediator_, currentMediator);\r\n        currentMediator = currentMediator_;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_currentMediator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prev\",\"type\":\"address\"}],\"name\":\"CurrentMediatorChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prev\",\"type\":\"address\"}],\"name\":\"CurrentTokenChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prev\",\"type\":\"address\"}],\"name\":\"OldTokenChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMediator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currentMediator_\",\"type\":\"address\"}],\"name\":\"setCurrentMediator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currentToken_\",\"type\":\"address\"}],\"name\":\"setCurrentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MainnetMigrationManager","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000cf0ee63788a0849fe5297f3407f701e122cc0230000000000000000000000002eeeddeece91c9f4c5ba4c8e1d784a0234c6d015","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://fb0269d70a358d2c4c4722d07d6b153fa2ab44904819d6c9c5bcd7fce9dbee60"}]}