{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.26; /*\n\n                                                                                \n                                        @@@                                     \n                                     .@@@@@@@                                   \n                                   @@@@@@@@@@@@@                                \n                                .@@@@@@@@@@@@@@@@@                              \n                              @@@@@@@@@@@@@@@@@@@@@                             \n                           ,@@@@@@@@@@@@@@@@@@@@&                               \n                         @@@@@@@@@@@@@@@@@@@@@                                  \n                      ,@@@@@@@@@@@@@@@@@@@@&                                    \n                    @@@@@@@@@@@@@@@@@@@@@                                       \n                 *@@@@@@@@@@@@@@@@@@@@%                                         \n               @@@@@@@@@@@@@@@@@@@@@          @                                 \n            *@@@@@@@@@@@@@@@@@@@@#          @@@@@#                              \n          @@@@@@@@@@@@@@@@@@@@@          @@@@@@@@@@@                            \n       /@@@@@@@@@@@@@@@@@@@@(          @@@@@@@@@@@@@@@%                         \n     @@@@@@@@@@@@@@@@@@@@@          @@@@@@@@@@@@@@@@@@@@@                       \n     @@@@@@@@@@@@@@@@@@@@@            ,@@@@@@@@@@@@@@@@@@@@%                    \n        @@@@@@@@@@@@@@@@@@@@@            @@@@@@@@@@@@@@@@@@@@@                  \n          @@@@@@@@@@@@@@@@@@@@@            ,@@@@@@@@@@@@@@@@@@@@&               \n             @@@@@@@@@@@@@@@@@@@@@            @@@@@@@@@@@@@@@@@@@@@             \n               @@@@@@@@@@@@@@@@@@@@@.           .@@@@@@@@@@@@@@@@@@@@@          \n                  @@@@@@@@@@@@@@@@@@@@@            @@@@@@@@@@@@@@@@@@@@@        \n                    @@@@@@@@@@@@@@@@@@@@@.            @@@@@@@@@@@@@@@@@@@@@     \n                       @@@@@@@@@@@@@@@@@@@@@            @@@@@@@@@@@@@@@@@@@@@   \n                         &@@@@@@@@@@@@@@@@@@@@,          %@@@@@@@@@@@@@@@@@@@@, \n                            @@@@@@@@@@@@@@@@&          @@@@@@@@@@@@@@@@@@@@@    \n                              %@@@@@@@@@@@          @@@@@@@@@@@@@@@@@@@@@.      \n                                 @@@@@@%          @@@@@@@@@@@@@@@@@@@@@         \n                                   #@          @@@@@@@@@@@@@@@@@@@@@.           \n                                             @@@@@@@@@@@@@@@@@@@@@              \n                                          @@@@@@@@@@@@@@@@@@@@@                 \n                                        @@@@@@@@@@@@@@@@@@@@@                   \n                                     @@@@@@@@@@@@@@@@@@@@@                      \n                                   @@@@@@@@@@@@@@@@@@@@@                        \n                                @@@@@@@@@@@@@@@@@@@@@                           \n                                @@@@@@@@@@@@@@@@@@@                             \n                                   @@@@@@@@@@@@@                                \n                                     @@@@@@@@@                                  \n                                        @@@ \n\n\n\n░░░░░░░░░░░░░░░░░░░░░░░░░░██╗███████╗██████╗  █████╗░░░░░░░░░░░░░░░░░░░░░░\n██████╗██████╗██████╗░░░░░██║██╔════╝██╔══██╗██╔══██╗██████╗██████╗██████╗\n╚═════╝╚═════╝╚═════╝░░░░░██║█████╗░░██████╔╝███████║╚═════╝╚═════╝╚═════╝\n██████╗██████╗██████╗██╗░░██║██╔══╝░░██╔══██╗██╔══██║██████╗██████╗██████╗\n╚═════╝╚═════╝╚═════╝╚█████╔╝███████╗██║░░██║██║░░██║╚═════╝╚═════╝╚═════╝\n░░░░░░░░░░░░░░░░░░░░░░╚════╝░╚══════╝╚═╝░░╚═╝╚═╝░░╚═╝░░░░░░░░░░░░░░░░░░░░░\n\n========== 'JERA' Token contract with following features ==========\n    => ERC20 Compliance\n    => Higher degree of control by owner - safeguard functionality\n    => SafeMath implementation \n    => Burnable and minting \n\n\n============================== Stats ===============================\n    => Name/Nombre      : JERA\n    => Symbol/Simbolo   : JERA\n    => Initial Supply/ \n       Preminado        : 4500000\n    => Total supply\n       Maximo de tokens : 15000000\n    => Decimals/\n       Decimales        : 18\n    \n    the rest of the tokens will be created via interaction \n    with the smart contract\n\n    el resto de tokens se crearan via interaccion\n    con el contrato inteligente\n\n-------------------------------------------------------------------\n Copyright (c) 2021 onwards JERA.\n Contract designed with ❤ by P&P\n-------------------------------------------------------------------\n*/ \n\nlibrary SafeMath {\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\n    assert(b > 0); // Solidity automatically throws when dividing by 0\n    uint256 c = a / b;\n    assert(a == b * c + a % b); // There is no case in which this doesn't hold\n    return c;\n  }\n\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\n    uint256 c = a + b;\n    assert(c >= a);\n    return c;\n  }\n}\n\n interface ERC20 {\n    function totalSupply() public view returns(uint supply);\n\n    function balanceOf(address _owner) public view returns(uint balance);\n\n    function transfer(address _to, uint _value) public returns(bool success);\n\n    function transferFrom(address _from, address _to, uint _value) public returns(bool success);\n\n    function approve(address _spender, uint _value) public returns(bool success);\n\n    function allowance(address _owner, address _spender) public view returns(uint remaining);\n\n    function decimals() public view returns(uint digits);\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\n}\n\n\n    // ERC20 Token Smart Contract\n    contract JERA {\n        \n        string public constant name = \"JERA\";\n        string public constant symbol = \"JERA\";\n        uint8 public constant decimals = 18;\n        uint public _totalSupply = 4500000000000000000000000;\n        uint256 public RATE = 300000000000000000;\n        bool public isMinting = true;\n        string public constant generated_by  = \"P&P\";\n        \n        using SafeMath for uint256;\n        address public owner;\n        \n         modifier onlyOwner() {\n            if (msg.sender != owner) {\n                throw;\n            }\n             _;\n         }\n     \n        mapping(address => uint256) balances;\n        // Owner of account approves the transfer of an amount to another account\n        mapping(address => mapping(address=>uint256)) allowed;\n\n        // Its a payable function works as a token factory.\n        function () payable{\n            createTokens();\n        }\n\n        // Constructor\n         constructor() public payable {\n            owner = 0x3396aC4d01a15545eCD6fC8E5CB2e4fD61AF50B1; \n            balances[owner] = _totalSupply;\n        }\n\n          //allows owner to burn tokens that are not sold in a crowdsale\n        function burnTokens(uint256 _value) onlyOwner {\n\n             require(balances[msg.sender] >= _value && _value > 0 );\n             _totalSupply = _totalSupply.sub(_value);\n             balances[msg.sender] = balances[msg.sender].sub(_value);\n             \n        }\n  \n         function createTokens() payable {\n            if(isMinting == true){\n                require(msg.value > 0);\n                uint256  tokens = msg.value.div(100000000000000).mul(RATE);\n                balances[msg.sender] = balances[msg.sender].add(tokens);\n                _totalSupply = _totalSupply.add(tokens);\n                owner.transfer(msg.value);\n            }\n            else{\n                throw;\n            }\n        }\n\n\n        function endCrowdsale() onlyOwner {\n            isMinting = false;\n        }\n\n        function changeCrowdsaleRate(uint256 _value) onlyOwner {\n            RATE = _value;\n        }\n\n\n        \n        function totalSupply() constant returns(uint256){\n            return _totalSupply;\n        }\n\n        function balanceOf(address _owner) constant returns(uint256){\n            return balances[_owner];\n        }\n   \n        function transfer(address _to, uint256 _value)  returns(bool) {\n            require(balances[msg.sender] >= _value && _value > 0 );\n            balances[msg.sender] = balances[msg.sender].sub(_value);\n            balances[_to] = balances[_to].add(_value);\n            Transfer(msg.sender, _to, _value);\n            return true;\n        }\n        \n\n    function transferFrom(address _from, address _to, uint256 _value)  returns(bool) {\n        require(allowed[_from][msg.sender] >= _value && balances[_from] >= _value && _value > 0);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n    \n    function approve(address _spender, uint256 _value) returns(bool){\n        allowed[msg.sender][_spender] = _value; \n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    \n    function allowance(address _owner, address _spender) constant returns(uint256){\n        return allowed[_owner][_spender];\n    }\n    \n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"changeCrowdsaleRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"generated_by\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"JERA","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":""}]}