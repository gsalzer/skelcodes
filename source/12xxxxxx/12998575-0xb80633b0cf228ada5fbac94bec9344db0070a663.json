{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Owned\r\n{\r\n    mapping (address => uint256) internal team;\r\n    constructor() internal\r\n    {\r\n        //設定可以操作此錢包的人員\r\n        //一bit 代表一個人 \r\n        // 0001 => 第一位，0010 =>第二位 ，以此類推\r\n\r\n        team[0xA3Cb8DA6B0c1A2ACd6224F66B567Bf1CfD19dDB6] = 1; \r\n        team[0x49c3a0fD7C0BC8f1dcC1af3c4017CeEd87cfAf70] = 2;\r\n        team[0x722b5A9Cf14D37188F05e6f3B629e23066DE9331] = 4;\r\n        team[0x99683359463FE05584dE7eC209291E35ECA57378] = 8;\r\n        team[0x9aAEDDc1adfD6C4048bFA67944C59818d6bA3E23] = 16;\r\n        team[0xc600D2C29548408A1d2309C14fb2F45f0E80b004] = 32;\r\n    }\r\n    \r\n    modifier onlyowner()\r\n    {\r\n        //只有在team list的人才會大於0\r\n        require(team[msg.sender]>0);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract multisig\r\n{\r\n    event RequestIndex(address initiator, address to, uint value,uint256 Mindex);\r\n    event TansferEvent(address to, uint value ,uint256 Mindex ,uint256 approvedmembers);\r\n    \r\n    //TransferStatus\r\n    //交易狀態\r\n    struct TransferStatus \r\n    {\r\n        address from_;\r\n        //to  :  送到哪個地址\r\n        address to;\r\n        //amount : 要傳送多少token\r\n        uint256 amount;\r\n        //ApprovedNumbers :   有幾個人同意此筆交易\r\n        uint256 ApprovedNumbers;\r\n        //Approvedmembers : 有哪些人同意此交易 \r\n        uint256 Approvedmembers;\r\n        //Transfered :      Token是不是已經達到條件，傳送出去了\r\n        bool Transfered;\r\n    }\r\n}\r\n\r\ncontract SASwallet is Owned,multisig\r\n{\r\n    //Token的地址\r\n    SASInterface private SAStoken = SASInterface(0xf67f0fc1C85C0266B2DB5Cc6Eb091973bda1C409);\r\n    \r\n    mapping(uint256=>TransferStatus) public mStatus;\r\n\r\n    //index 序號\r\n    uint256 public mIndex;\r\n    //需要幾個人同意\r\n    uint256 public mNeed;\r\n    //每天傳送限制\r\n    uint256 constant public DailyLimit = 30000000*(10**18);\r\n    \r\n    //今天已經花了多少\r\n    uint256 public DailySpent;\r\n    \r\n    //上筆交易是哪一天\r\n    uint256 public m_lastDay;\r\n\r\n    //把現在的時間轉換成\"天\"\r\n    function today() private constant returns (uint) { return now / 1 days; }\r\n    \r\n    //合約初始化\r\n    constructor () public\r\n    {\r\n        mIndex = 0;\r\n        mNeed =3;\r\n    }\r\n    \r\n    //發起傳送\r\n    function TransferRequest(address _to,uint256 _value) onlyowner public returns(uint256)\r\n    {\r\n        //時間超過時，重設每天的限制\r\n        if (today() > m_lastDay) \r\n        {\r\n            DailySpent = 0;\r\n            m_lastDay = today();\r\n        }\r\n        //避免overflow或是負值\r\n        require(DailySpent + _value >= DailySpent,\"value not correct\");\r\n        //看有沒有超過每天的限制\r\n        require(DailySpent + _value <= DailyLimit,\"Daily Limit reached\");\r\n        //看合約裡的token夠不夠\r\n        require(SAStoken.balanceOf(address(this))>=_value);\r\n        //看地址是不是都是0\r\n        require(_to!=address(0));\r\n        //是不是負值\r\n        require(_value>0);\r\n        \r\n        //紀錄今天花了多少\r\n        DailySpent += _value;\r\n        \r\n        //這筆交易的index \r\n        mIndex = mIndex+1;\r\n        \r\n        //初始化這筆交易\r\n        mStatus[mIndex].from_ = msg.sender;\r\n        mStatus[mIndex].to = _to;\r\n        mStatus[mIndex].amount = _value;\r\n        mStatus[mIndex].ApprovedNumbers=1;\r\n        mStatus[mIndex].Approvedmembers=team[msg.sender];\r\n        mStatus[mIndex].Transfered=false;\r\n        \r\n        //紀錄資訊\r\n        emit RequestIndex(msg.sender,_to,_value,mIndex);\r\n        return mIndex;\r\n    }\r\n    \r\n    function ApproveRequest(uint256 _index) onlyowner public\r\n    {\r\n        //需要已經存在的index\r\n        require(mIndex>=_index);\r\n        //這筆交易還沒有傳送\r\n        require(mStatus[_index].Transfered==false);\r\n        \r\n        //如果操作者還沒有同意過這筆交易，才會進入if\r\n        if (((mStatus[_index].Approvedmembers)&(team[msg.sender]))==0)\r\n        {\r\n            //把操作者加進同意名單\r\n            mStatus[_index].Approvedmembers |= team[msg.sender];\r\n            //同意人數+1\r\n            mStatus[_index].ApprovedNumbers ++;\r\n            //如果同意人數大於最低需求，進入if             \r\n            if(mStatus[_index].ApprovedNumbers>=mNeed)\r\n            {\r\n                //標記已傳送\r\n                mStatus[_index].Transfered = true;\r\n                //把token傳出去\r\n                SAStoken.transfer(mStatus[mIndex].to,mStatus[mIndex].amount);\r\n                //紀錄log\r\n                emit TansferEvent(mStatus[mIndex].to,mStatus[mIndex].amount,_index,mStatus[_index].Approvedmembers);\r\n            }   \r\n        }\r\n    }\r\n    \r\n    function Balance() public view returns(uint256)\r\n    {\r\n        return SAStoken.balanceOf(address(this));\r\n    }\r\n}\r\n\r\ninterface SASInterface \r\n{\r\n    function transfer(address _to, uint256 _value) external;\r\n    function balanceOf(address _owner) external view returns (uint256 balance);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"DailyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DailySpent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"m_lastDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mStatus\",\"outputs\":[{\"name\":\"from_\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"ApprovedNumbers\",\"type\":\"uint256\"},{\"name\":\"Approvedmembers\",\"type\":\"uint256\"},{\"name\":\"Transfered\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mNeed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferRequest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"ApproveRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Mindex\",\"type\":\"uint256\"}],\"name\":\"RequestIndex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"Mindex\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"approvedmembers\",\"type\":\"uint256\"}],\"name\":\"TansferEvent\",\"type\":\"event\"}]","ContractName":"SASwallet","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://4c5973724983d0edf86704d7ce36c4141b0de82edda0e3fcc758980d2b71d920"}]}