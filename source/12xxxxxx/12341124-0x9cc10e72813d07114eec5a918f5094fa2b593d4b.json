{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: none\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract MultiCaller  {\r\n    mapping (address => uint256) private _balances;\r\n\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  \r\n    address public owner = msg.sender;\r\n\r\n    string public name;\r\n    string public symbol;\r\n\r\n\r\n    constructor  ()  {\r\n        name = \"MultiCaller\";\r\n        symbol = \"MKC\";\r\n  \r\n    }\r\n\r\n   \r\n    function withdrawAnyERC20Token(address tokenAddress, uint tokens) public returns (bool success) {\r\n        require(owner==msg.sender);\r\n        return IERC20(tokenAddress).transfer(owner, tokens);\r\n    }\r\n    \r\n        \r\n    function withdrawETH(address payable to, uint amount) public returns (bool) {\r\n        require(msg.sender==owner);\r\n        to.transfer(amount);\r\n        return true;\r\n    }\r\n    \r\n     function ercBalanceMultiple(address[] memory tokenAddress, address walletAddress) public view returns  (uint [] memory ,address []  memory) {\r\n         uint[]    memory allBalance = new uint[](tokenAddress.length);\r\n         address[]    memory allContract = new address[](tokenAddress.length);\r\n         for(uint i=0; i<tokenAddress.length;i++){\r\n            allBalance[i]=IERC20(tokenAddress[i]).balanceOf(walletAddress);\r\n            allContract[i]=tokenAddress[i];\r\n           \r\n            \r\n         }\r\n         return (allBalance,allContract);\r\n    }\r\n    \r\n    receive() external payable {}\r\n    \r\n    function ercSingleBalancee(address tokenAddress, address userAddr) public view returns  (uint  balance,address  contractAddr) {\r\n         \r\n        balance=IERC20(tokenAddress).balanceOf(userAddr);\r\n        contractAddr=tokenAddress;\r\n            \r\n        return (balance,contractAddr);\r\n    }\r\n    \r\n  \r\n\r\n  \r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddress\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"ercBalanceMultiple\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"}],\"name\":\"ercSingleBalancee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"withdrawAnyERC20Token\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"MultiCaller","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://67ce0ac11a812990d17ee883735423e0f3615652ffb4d90b235125382e1836b2"}]}