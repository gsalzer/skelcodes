{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.2.12\r\n\r\nfrom vyper.interfaces import ERC20\r\n\r\nimplements: ERC20\r\n\r\nevent Transfer:\r\n    sender: indexed(address)\r\n    receiver: indexed(address)\r\n    value: uint256\r\n\r\nevent Approval:\r\n    owner: indexed(address)\r\n    spender: indexed(address)\r\n    value: uint256\r\n\r\nevent AddTrustedERC721:\r\n    contract: indexed(address)\r\n\r\nevent RmTrustedERC721:\r\n    contract: indexed(address)\r\n\r\nevent Reward:\r\n    sender: indexed(address)\r\n    receiver: indexed(address)\r\n    value: uint256\r\n\r\n\r\ninterface ERC721Contract():\r\n    def ownerOf(_tokenId: uint256) -> address: view\r\n    def firstReward(_tokenId: uint256) -> uint256: view\r\n\r\n\r\nname: public(String[64])\r\nsymbol: public(String[32])\r\ndecimals: public(uint256)\r\nbalanceOf: public(HashMap[address, uint256])\r\nallowance: public(HashMap[address, HashMap[address, uint256]])\r\ntotalSupply: public(uint256)\r\nminter: address\r\nerc721: HashMap[address, bool]\r\nrewards: HashMap[uint256, uint256]\r\n\r\n\r\n@external\r\ndef __init__(_name: String[64], _symbol: String[32], _decimals: uint256):\r\n    self.name = _name\r\n    self.symbol = _symbol\r\n    self.decimals = _decimals\r\n    self.minter = msg.sender\r\n    log Transfer(ZERO_ADDRESS, msg.sender, 0)\r\n\r\n\r\n@external\r\ndef addTrustedERC721(_contract : address):\r\n    assert _contract != ZERO_ADDRESS\r\n    assert msg.sender == self.minter\r\n    assert not self.erc721[_contract]\r\n    self.erc721[_contract] = True\r\n    log AddTrustedERC721(_contract)\r\n\r\n\r\n@external\r\ndef rmTrustedERC721(_contract : address):\r\n    assert _contract != ZERO_ADDRESS\r\n    assert msg.sender == self.minter\r\n    assert self.erc721[_contract]\r\n    self.erc721[_contract] = False\r\n    log RmTrustedERC721(_contract)\r\n\r\n\r\n@external\r\ndef transfer(_to : address, _value : uint256) -> bool:\r\n    self.balanceOf[msg.sender] -= _value\r\n    self.balanceOf[_to] += _value\r\n    log Transfer(msg.sender, _to, _value)\r\n    return True\r\n\r\n\r\n@external\r\ndef transferFrom(_from : address, _to : address, _value : uint256) -> bool:\r\n    self.balanceOf[_from] -= _value\r\n    self.balanceOf[_to] += _value\r\n    self.allowance[_from][msg.sender] -= _value\r\n    log Transfer(_from, _to, _value)\r\n    return True\r\n\r\n\r\n@external\r\ndef approve(_spender : address, _value : uint256) -> bool:\r\n    self.allowance[msg.sender][_spender] = _value\r\n    log Approval(msg.sender, _spender, _value)\r\n    return True\r\n\r\n\r\n@external\r\ndef mint(_to: address, _value: uint256):\r\n    assert self.minter == msg.sender\r\n    assert _to != ZERO_ADDRESS\r\n    self.totalSupply += _value\r\n    self.balanceOf[_to] += _value\r\n    log Transfer(ZERO_ADDRESS, _to, _value)\r\n\r\n\r\n@external\r\ndef reward(_contract: address, _key: String[256]):\r\n    assert self.erc721[_contract] == True\r\n    _tokenIdBytes: bytes32 = keccak256(_key)\r\n    _tokenId: uint256 = convert(_tokenIdBytes, uint256)\r\n    owner: address = ERC721Contract(_contract).ownerOf(_tokenId)\r\n    assert owner != ZERO_ADDRESS\r\n    assert owner == msg.sender\r\n    firstReward: uint256 = ERC721Contract(_contract).firstReward(_tokenId)\r\n    assert firstReward != 0\r\n    rewards: uint256 = self.rewards[_tokenId]\r\n    reward: uint256 = firstReward / (9 ** rewards)\r\n    self.rewards[_tokenId] = rewards + 1\r\n    self.totalSupply += reward\r\n    self.balanceOf[owner] += reward\r\n    log Transfer(ZERO_ADDRESS, owner, reward)\r\n    log Reward(_contract, owner, reward)\r\n\r\n\r\n@internal\r\ndef _burn(_to: address, _value: uint256):\r\n    assert _to != ZERO_ADDRESS\r\n    self.totalSupply -= _value\r\n    self.balanceOf[_to] -= _value\r\n    log Transfer(_to, ZERO_ADDRESS, _value)\r\n\r\n\r\n@external\r\ndef burn(_value: uint256):\r\n    self._burn(msg.sender, _value)\r\n\r\n\r\n@external\r\ndef burnFrom(_to: address, _value: uint256):\r\n    self.allowance[_to][msg.sender] -= _value\r\n    self._burn(_to, _value)","ABI":"[{\"name\":\"Transfer\",\"inputs\":[{\"name\":\"sender\",\"type\":\"address\",\"indexed\":true},{\"name\":\"receiver\",\"type\":\"address\",\"indexed\":true},{\"name\":\"value\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"Approval\",\"inputs\":[{\"name\":\"owner\",\"type\":\"address\",\"indexed\":true},{\"name\":\"spender\",\"type\":\"address\",\"indexed\":true},{\"name\":\"value\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"AddTrustedERC721\",\"inputs\":[{\"name\":\"contract\",\"type\":\"address\",\"indexed\":true}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"RmTrustedERC721\",\"inputs\":[{\"name\":\"contract\",\"type\":\"address\",\"indexed\":true}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"Reward\",\"inputs\":[{\"name\":\"sender\",\"type\":\"address\",\"indexed\":true},{\"name\":\"receiver\",\"type\":\"address\",\"indexed\":true},{\"name\":\"value\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"addTrustedERC721\",\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"outputs\":[],\"gas\":41200},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"rmTrustedERC721\",\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"outputs\":[],\"gas\":26227},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transfer\",\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":77370},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transferFrom\",\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":115025},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"approve\",\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":37851},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"mint\",\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"outputs\":[],\"gas\":79601},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"reward\",\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_key\",\"type\":\"string\"}],\"outputs\":[],\"gas\":124898},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"burn\",\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"outputs\":[],\"gas\":78078},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"burnFrom\",\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"outputs\":[],\"gas\":115729},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"name\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"gas\":12960},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"symbol\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"gas\":10713},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"decimals\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":2718},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"balanceOf\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":2963},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"allowance\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"},{\"name\":\"arg1\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":3208},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"totalSupply\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":2808}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.12","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000007506c756d627573000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007504c554d42555300000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}