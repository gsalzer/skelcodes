{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/igor/job/dev/defi-sdk/contracts/Ownable.sol\": {\r\n      \"content\": \"// Copyright (C) 2020 Zerion Inc. <https://zerion.io>\\n//\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n//\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\\n// GNU General Public License for more details.\\n//\\n// You should have received a copy of the GNU General Public License\\n// along with this program. If not, see <https://www.gnu.org/licenses/>.\\n\\npragma solidity 0.6.5;\\npragma experimental ABIEncoderV2;\\n\\n\\nabstract contract Ownable {\\n\\n    modifier onlyOwner {\\n        require(msg.sender == owner, \\\"O: onlyOwner function!\\\");\\n        _;\\n    }\\n\\n    address public owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @notice Initializes owner variable with msg.sender address.\\n     */\\n    constructor() internal {\\n        owner = msg.sender;\\n        emit OwnershipTransferred(address(0), msg.sender);\\n    }\\n\\n    /**\\n     * @notice Transfers ownership to the desired address.\\n     * The function is callable only by the owner.\\n     */\\n    function transferOwnership(address _owner) external onlyOwner {\\n        require(_owner != address(0), \\\"O: new owner is the zero address!\\\");\\n        emit OwnershipTransferred(owner, _owner);\\n        owner = _owner;\\n    }\\n}\\n\"\r\n    },\r\n    \"/Users/igor/job/dev/defi-sdk/contracts/adapters/cozy/CozyRegistry.sol\": {\r\n      \"content\": \"// Copyright (C) 2020 Zerion Inc. <https://zerion.io>\\n//\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n//\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\\n// GNU General Public License for more details.\\n//\\n// You should have received a copy of the GNU General Public License\\n// along with this program. If not, see <https://www.gnu.org/licenses/>.\\n\\npragma solidity 0.6.5;\\n\\nimport { Ownable } from \\\"../../Ownable.sol\\\";\\n\\n\\n/**\\n * @title Registry for Cozy CTokens.\\n * @dev Implements the only function - getCToken(address).\\n * @notice Call getCToken(token) function and get address\\n * of CToken contract for the given token address.\\n * @author Igor Sobolev <sobolev@zerion.io>\\n */\\ncontract CozyRegistry is Ownable {\\n    mapping(address => address) internal tokenToCToken;\\n\\n    event CTokenSet(address indexed token, address indexed cToken);\\n\\n    constructor(address[] memory tokens, address[] memory cTokens) public {\\n        setCTokensInternal(tokens, cTokens);\\n    }\\n\\n    function setCTokens(address[] calldata tokens, address[] calldata cTokens) external onlyOwner {\\n        setCTokensInternal(tokens, cTokens);\\n    }\\n\\n    function getCToken(address token) external view returns (address) {\\n        return tokenToCToken[token];\\n    }\\n\\n    function setCTokensInternal(address[] memory tokens, address[] memory cTokens) internal {\\n        uint256 length = tokens.length;\\n        require(length == cTokens.length, \\\"CR: lengths differ!\\\");\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            setCToken(tokens[i], cTokens[i]);\\n        }\\n    }\\n\\n    function setCToken(address token, address cToken) internal {\\n        tokenToCToken[token] = cToken;\\n\\n        emit CTokenSet(token, cToken);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 10000\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"cTokens\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"CTokenSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getCToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"cTokens\",\"type\":\"address[]\"}],\"name\":\"setCTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"CozyRegistry","CompilerVersion":"v0.6.5+commit.f956cc89","OptimizationUsed":"1","Runs":"10000","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000004000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000002260fac5e5542a773aa44fbcfedf7c193bc2c599000000000000000000000000000000000000000000000000000000000000000400000000000000000000000038b050b6f78c66a7dd9b336cd1ff10ff2b9e9922000000000000000000000000dcb99dfbe5368d7c2d671a9ae5c4164ff69d86d3000000000000000000000000eeee96017550c817643bb0e85ebebc512e7a27ba000000000000000000000000a60ffbb5caaca4d26cb4326d82494163b1071fc6","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}