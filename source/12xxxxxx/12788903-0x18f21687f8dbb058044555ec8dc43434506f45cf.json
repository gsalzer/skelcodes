{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.6;\r\n\r\ncontract MegaChizDispenser {\r\n    ERC721 ratContract = ERC721(0xd21a23606D2746f086f6528Cd6873bAD3307b903);\r\n    ChizDispenser chizDispenserContract = ChizDispenser(0x5e7fDe13483e5b51da88D2898e0f6a6d7B0c6899);\r\n\r\n    bool paused = false;\r\n    address deployer;\r\n\r\n    event MegaClaim(address owner);\r\n\r\n    constructor() {\r\n        deployer = msg.sender;\r\n    }\r\n\r\n    modifier onlyDeployer() {\r\n        require(msg.sender == deployer);\r\n        _;\r\n    }\r\n\r\n    modifier pauseable() {\r\n        require(paused == false, \"contract is paused\");\r\n        _;\r\n    }\r\n\r\n    function pause() public onlyDeployer {\r\n        paused = true;\r\n    }\r\n\r\n    function unpause() public onlyDeployer {\r\n        paused = false;\r\n    }\r\n    \r\n    function megaClaimChiz() public pauseable {\r\n        uint256 ratBalance = ratContract.balanceOf(msg.sender);\r\n        for (uint i = 0; i < ratBalance; i++) {\r\n            uint256 tokenId = ratContract.tokenOfOwnerByIndex(i);\r\n            (bool claimed,) = chizDispenserContract.existingClaims(tokenId);\r\n            if (!claimed) chizDispenserContract.claimChiz(tokenId);\r\n        }\r\n        emit MegaClaim(msg.sender);\r\n    }\r\n}\r\n\r\nabstract contract ChizDispenser {\r\n    struct Claim {\r\n        bool claimed;\r\n        uint256 ratId;\r\n    }\r\n    mapping(uint256 => Claim) public existingClaims;\r\n    function claimChiz(uint256) public virtual;\r\n}\r\n\r\nabstract contract ERC721 {\r\n    function balanceOf(address) public virtual returns (uint256);\r\n    function tokenOfOwnerByIndex(uint256) public virtual returns (uint256);\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MegaClaim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"megaClaimChiz\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MegaChizDispenser","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://a7a23bdf001d7fd6d4bd2f9240eba97a0e5e16b051e3cbd05bf8d4b17374ff01"}]}