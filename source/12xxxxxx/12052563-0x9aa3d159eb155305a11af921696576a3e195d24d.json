{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.6.0;\r\n\r\ninterface MooncatContract {\r\n\r\n    function catOwners(bytes5 catId) external view returns (address);\r\n\r\n    function remainingGenesisCats() external view returns (uint);\r\n\r\n    function makeAdoptionOffer(bytes5 catId, uint price) external;\r\n\r\n    function makeAdoptionOfferToAddress(bytes5 catId, uint price, address to) external;\r\n\r\n    function acceptAdoptionOffer(bytes5 catId) external payable;\r\n\r\n}\r\n\r\ninterface WrappedMooncatContract {\r\n\r\n    function wrap(bytes5 catId) external;\r\n\r\n    function unwrap(uint256 tokenID) external;\r\n\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    function _catIDToTokenID(bytes5 catId) external view returns (uint);\r\n\r\n    function ownerOf(uint256 tokenId) external view returns (address);\r\n}\r\n\r\ncontract MooncatHelper {\r\n\r\n    address mc = 0x60cd862c9C687A9dE49aecdC3A99b74A4fc54aB6;\r\n    address wmc = 0x7C40c393DC0f283F318791d746d894DdD3693572;\r\n    uint256 fee = 10000000000000000;\r\n    address payable public dev;\r\n\r\n    constructor() public payable {\r\n        dev = payable(msg.sender);\r\n    }\r\n\r\n    function buyAndWrap(bytes5 catId) public payable {\r\n        require(msg.value > fee, \"Please include 0.01 eth fee\");\r\n        MooncatContract(mc).acceptAdoptionOffer{value:msg.value-fee}(catId);\r\n        MooncatContract(mc).makeAdoptionOfferToAddress(catId, 0, wmc);\r\n        WrappedMooncatContract(wmc).wrap(catId);\r\n        uint tokenId = WrappedMooncatContract(wmc)._catIDToTokenID(catId);\r\n        WrappedMooncatContract(wmc).transferFrom(address(this), msg.sender, tokenId);\r\n    }\r\n\r\n    function withdraw() public {\r\n        uint amount = address(this).balance;\r\n        (bool success,) = dev.call{value: amount}(\"\");\r\n        require(success, \"Failed to send Ether\");\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes5\",\"name\":\"catId\",\"type\":\"bytes5\"}],\"name\":\"buyAndWrap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MooncatHelper","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ceb535a6892615471a1804d6e1796b38e00dd955700f4a485360ec94dcedb744"}]}