{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface PriceFeedOracle {\r\n\tfunction fetchPrice() external returns (uint);\r\n}\r\n\r\ninterface TroveManagerLike {\r\n    function getBorrowingRateWithDecay() external view returns (uint);\r\n    function getTCR(uint _price) external view returns (uint);\r\n    function getCurrentICR(address _borrower, uint _price) external view returns (uint);\r\n    function checkRecoveryMode(uint _price) external view returns (bool);\r\n    function getEntireDebtAndColl(address _borrower) external view returns (\r\n        uint debt, \r\n        uint coll, \r\n        uint pendingLUSDDebtReward, \r\n        uint pendingETHReward\r\n    );\r\n}\r\n\r\ninterface StabilityPoolLike {\r\n    function getCompoundedLUSDDeposit(address _depositor) external view returns (uint);\r\n    function getDepositorETHGain(address _depositor) external view returns (uint);\r\n    function getDepositorLQTYGain(address _depositor) external view returns (uint);\r\n}\r\n\r\ninterface StakingLike {\r\n    function stakes(address owner) external view returns (uint);\r\n    function getPendingETHGain(address _user) external view returns (uint);\r\n    function getPendingLUSDGain(address _user) external view returns (uint);\r\n}\r\n\r\ninterface PoolLike {\r\n    function getETH() external view returns (uint);\r\n}\r\n\r\ninterface HintHelpersLike {\r\n    function computeNominalCR(uint _coll, uint _debt) external pure returns (uint);\r\n    function computeCR(uint _coll, uint _debt, uint _price) external pure returns (uint);\r\n    function getApproxHint(uint _CR, uint _numTrials, uint _inputRandomSeed) external view returns (\r\n        address hintAddress,\r\n        uint diff,\r\n        uint latestRandomSeed\r\n    );\r\n    function getRedemptionHints(uint _LUSDamount, uint _price, uint _maxIterations) external view returns (\r\n        address firstHint,\r\n        uint partialRedemptionHintNICR,\r\n        uint truncatedLUSDamount\r\n    );\r\n}\r\n\r\ninterface SortedTrovesLike {\r\n    function getSize() external view returns (uint256);\r\n    function findInsertPosition(uint256 _ICR, address _prevId, address _nextId) external view returns (address, address);\r\n}\r\n\r\ncontract Math {\r\n    /* DSMath add */\r\n    function add(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x + y) >= x, \"math-not-safe\");\r\n    }\r\n    \r\n    /* DSMath mul */\r\n    function mul(uint x, uint y) internal pure returns (uint z) {\r\n                require(y == 0 || (z = x * y) / y == x, \"math-not-safe\");\r\n        }\r\n\r\n    /* Uniswap V2 sqrt */\r\n    function sqrt(uint y) internal pure returns (uint z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n            }\r\n        }\r\n}\r\n\r\ncontract Helpers is Math {\r\n    TroveManagerLike internal constant troveManager =\r\n        TroveManagerLike(0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2);\r\n\r\n    StabilityPoolLike internal constant stabilityPool = \r\n        StabilityPoolLike(0x66017D22b0f8556afDd19FC67041899Eb65a21bb);\r\n\r\n    StakingLike internal constant staking =\r\n        StakingLike(0x4f9Fbb3f1E99B56e0Fe2892e623Ed36A76Fc605d);\r\n\r\n    PoolLike internal constant activePool =\r\n        PoolLike(0xDf9Eb223bAFBE5c5271415C75aeCD68C21fE3D7F);\r\n    \r\n    PoolLike internal constant defaultPool =\r\n        PoolLike(0x896a3F03176f05CFbb4f006BfCd8723F2B0D741C);\r\n\r\n    HintHelpersLike internal constant hintHelpers =\r\n        HintHelpersLike(0xE84251b93D9524E0d2e621Ba7dc7cb3579F997C0);\r\n    \r\n    SortedTrovesLike internal constant sortedTroves =\r\n        SortedTrovesLike(0x8FdD3fbFEb32b28fb73555518f8b361bCeA741A6);\r\n\r\n    PriceFeedOracle internal constant priceFeedOracle =\r\n        PriceFeedOracle(0x4c517D4e2C851CA76d7eC94B805269Df0f2201De);\r\n\r\n    struct Trove {\r\n        uint collateral;\r\n        uint debt;\r\n        uint icr;\r\n    }\r\n\r\n    struct StabilityDeposit {\r\n        uint deposit;\r\n        uint ethGain;\r\n        uint lqtyGain;\r\n    }\r\n\r\n    struct Stake {\r\n        uint amount;\r\n        uint ethGain;\r\n        uint lusdGain;\r\n    }\r\n\r\n    struct Position {\r\n        Trove trove;\r\n        StabilityDeposit stability;\r\n        Stake stake;\r\n    }\r\n\r\n    struct System {\r\n        uint borrowFee;\r\n        uint ethTvl;\r\n        uint tcr;\r\n        bool isInRecoveryMode;\r\n    }\r\n}\r\n\r\n\r\ncontract Resolver is Helpers {\r\n\r\n    function fetchETHPrice() public returns (uint) {\r\n\treturn priceFeedOracle.fetchPrice();\r\n    }\r\n\r\n    function getTrove(address owner) public returns (Trove memory) {\r\n\tuint oracleEthPrice = fetchETHPrice();\r\n        (uint debt, uint collateral, , ) = troveManager.getEntireDebtAndColl(owner);\r\n        uint icr = troveManager.getCurrentICR(owner, oracleEthPrice);\r\n        return Trove(collateral, debt, icr);\r\n    }\r\n\r\n    function getStabilityDeposit(address owner) public view returns (StabilityDeposit memory) {\r\n        uint deposit = stabilityPool.getCompoundedLUSDDeposit(owner);\r\n        uint ethGain = stabilityPool.getDepositorETHGain(owner);\r\n        uint lqtyGain = stabilityPool.getDepositorLQTYGain(owner);\r\n        return StabilityDeposit(deposit, ethGain, lqtyGain);\r\n    }\r\n\r\n    function getStake(address owner) public view returns (Stake memory) {\r\n        uint amount = staking.stakes(owner);\r\n        uint ethGain = staking.getPendingETHGain(owner);\r\n        uint lusdGain = staking.getPendingLUSDGain(owner);\r\n        return Stake(amount, ethGain, lusdGain);\r\n    }\r\n\r\n    function getPosition(address owner) external returns (Position memory) {\r\n        Trove memory trove = getTrove(owner);\r\n        StabilityDeposit memory stability = getStabilityDeposit(owner);\r\n        Stake memory stake = getStake(owner);\r\n        return Position(trove, stability, stake);\r\n    }\r\n\r\n    function getSystemState() external returns (System memory) {\r\n\tuint oracleEthPrice = fetchETHPrice();\r\n        uint borrowFee = troveManager.getBorrowingRateWithDecay();\r\n        uint ethTvl = add(activePool.getETH(), defaultPool.getETH());\r\n        uint tcr = troveManager.getTCR(oracleEthPrice);\r\n        bool isInRecoveryMode = troveManager.checkRecoveryMode(oracleEthPrice);\r\n        return System(borrowFee, ethTvl, tcr, isInRecoveryMode);\r\n    }\r\n\r\n    function getTrovePositionHints(uint collateral, uint debt, uint searchIterations, uint randomSeed) external view returns (\r\n        address upperHint,\r\n        address lowerHint\r\n    ) {\r\n        // See: https://github.com/liquity/dev#supplying-hints-to-trove-operations\r\n        uint nominalCr = hintHelpers.computeNominalCR(collateral, debt);\r\n        searchIterations = searchIterations == 0 ? mul(10, sqrt(sortedTroves.getSize())) : searchIterations;\r\n        randomSeed = randomSeed == 0 ? block.number : randomSeed;\r\n        (address hintAddress, ,) = hintHelpers.getApproxHint(nominalCr, searchIterations, randomSeed);\r\n        return sortedTroves.findInsertPosition(nominalCr, hintAddress, hintAddress);\r\n    }\r\n\r\n    function getRedemptionPositionHints(uint amount, uint searchIterations, uint randomSeed) external returns (\r\n        uint partialHintNicr,\r\n        address firstHint,\r\n        address upperHint,\r\n        address lowerHint\r\n    ) {\r\n\tuint oracleEthPrice = fetchETHPrice();\r\n        // See: https://github.com/liquity/dev#hints-for-redeemcollateral\r\n        (firstHint, partialHintNicr, ) = hintHelpers.getRedemptionHints(amount, oracleEthPrice, 0);\r\n        searchIterations = searchIterations == 0 ? mul(10, sqrt(sortedTroves.getSize())) : searchIterations;\r\n        randomSeed = randomSeed == 0 ? block.number : randomSeed;\r\n        (address hintAddress, ,) = hintHelpers.getApproxHint(partialHintNicr, searchIterations, randomSeed);\r\n        (upperHint, lowerHint) = sortedTroves.findInsertPosition(partialHintNicr, hintAddress, hintAddress);\r\n    }\r\n}\r\n\r\ncontract InstaLiquityResolver is Resolver {\r\n    string public constant name = \"Liquity-Resolver-v1\";\r\n}","ABI":"[{\"inputs\":[],\"name\":\"fetchETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"icr\",\"type\":\"uint256\"}],\"internalType\":\"struct Helpers.Trove\",\"name\":\"trove\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethGain\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lqtyGain\",\"type\":\"uint256\"}],\"internalType\":\"struct Helpers.StabilityDeposit\",\"name\":\"stability\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethGain\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lusdGain\",\"type\":\"uint256\"}],\"internalType\":\"struct Helpers.Stake\",\"name\":\"stake\",\"type\":\"tuple\"}],\"internalType\":\"struct Helpers.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"searchIterations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"randomSeed\",\"type\":\"uint256\"}],\"name\":\"getRedemptionPositionHints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"partialHintNicr\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"firstHint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"upperHint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lowerHint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getStabilityDeposit\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethGain\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lqtyGain\",\"type\":\"uint256\"}],\"internalType\":\"struct Helpers.StabilityDeposit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethGain\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lusdGain\",\"type\":\"uint256\"}],\"internalType\":\"struct Helpers.Stake\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSystemState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethTvl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tcr\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isInRecoveryMode\",\"type\":\"bool\"}],\"internalType\":\"struct Helpers.System\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getTrove\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"icr\",\"type\":\"uint256\"}],\"internalType\":\"struct Helpers.Trove\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"searchIterations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"randomSeed\",\"type\":\"uint256\"}],\"name\":\"getTrovePositionHints\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"upperHint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lowerHint\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"InstaLiquityResolver","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://a1d39167caeb9ebc84b72f096a8f8fcebb24ddbfd7701897b9f85909c5b7ae23"}]}