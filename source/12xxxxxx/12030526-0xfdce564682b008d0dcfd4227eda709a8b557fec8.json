{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.8;\r\ninterface FlashstakePoolInterface {\r\n    function reserveFlashAmount () external view returns (uint256); \r\n    function reserveAltAmount () external view returns (uint256);\r\n}\r\ninterface ERC20 {\r\n    function balanceOf(address _address) external view returns (uint256);\r\n    function totalSupply() external view returns (uint256);\r\n}\r\ncontract FlashstakeProtocolQuery {\r\n    address _protocolAddress = 0x15EB0c763581329C921C8398556EcFf85Cc48275;\r\n    address _flashToken = 0x20398aD62bb2D930646d45a6D4292baa0b860C1f;\r\n    function getReserves(address[] memory _pools) public view returns (uint[] memory) {\r\n        uint[] memory _output = new uint[](_pools.length * 5);\r\n         for (uint i = 0; i < _pools.length; i++) {\r\n             uint j = i*5;\r\n            _output[j] = ERC20(_flashToken).balanceOf(_protocolAddress);\r\n            _output[j+1] = ERC20(_flashToken).totalSupply();\r\n            _output[j+2]= FlashstakePoolInterface(_pools[i]).reserveFlashAmount();\r\n            _output[j+3]= FlashstakePoolInterface(_pools[i]).reserveAltAmount();\r\n            _output[j+4]= ERC20(_pools[i]).totalSupply();\r\n         }\r\n        return _output;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"FlashstakeProtocolQuery","CompilerVersion":"v0.6.8+commit.0bbfe453","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://116935bf5f1fb773ed4e1013c09c696eac3cfbf94154ed2d7f7bce08a294458a"}]}