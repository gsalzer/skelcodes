{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.0;\r\n\r\ncontract Leaderboard {\r\n    \r\n    mapping(address => mapping (bytes32 => Repartition)) public registery;\r\n    \r\n    struct Repartition {\r\n        uint256 unallocated;\r\n        mapping (bytes32 => uint256) allocated;\r\n    }\r\n    \r\n    event newAllocation(\r\n        address _at,\r\n        bytes32 _leaderHash,\r\n        bytes32 _fromEntryHash,\r\n        bytes32 _toEntryHash,\r\n        uint256 _value\r\n    );\r\n    \r\n    event newLeaderboard(address _from, bytes32 leaderHash, uint256 intialValue);\r\n    event deletedLeaderboard(address _from, bytes32 leaderHash);\r\n    \r\n    // Creation\r\n    \r\n    function createLeaderboard(bytes32 _leaderHash, uint256 _intialValue) public {\r\n        registery[msg.sender][_leaderHash].unallocated = _intialValue;\r\n        emit newLeaderboard(msg.sender, _leaderHash, _intialValue);\r\n    }\r\n    \r\n    // Allocation\r\n    \r\n    function allocateEntryFromUnallocated(\r\n        bytes32 _leaderHash,\r\n        bytes32 _toEntryHash,\r\n        uint256 _value\r\n    ) public {\r\n        // Checking repartion\r\n        require(_value <= registery[msg.sender][_leaderHash].unallocated, \"not enought\");\r\n        // Changing repartition\r\n        registery[msg.sender][_leaderHash].unallocated -= _value;\r\n        registery[msg.sender][_leaderHash].allocated[_toEntryHash] += _value;\r\n        emit newAllocation(msg.sender, _leaderHash, \"\", _toEntryHash, _value);\r\n    }\r\n    \r\n    function allocateEntryFromEntry(\r\n        bytes32 _leaderHash,\r\n        bytes32 _fromEntryHash,\r\n        bytes32 _toEntryHash,\r\n        uint256 _value\r\n    ) public {\r\n        // Checking repartion\r\n        require(_value <= registery[msg.sender][_leaderHash].allocated[_fromEntryHash], \"not enought\");\r\n        // Changing repartition\r\n        registery[msg.sender][_leaderHash].allocated[_fromEntryHash] -= _value;\r\n        registery[msg.sender][_leaderHash].allocated[_toEntryHash] += _value;\r\n        emit newAllocation(msg.sender, _leaderHash, _fromEntryHash, _toEntryHash, _value);\r\n    }\r\n    \r\n    function deallocateEntry(\r\n        bytes32 _leaderHash,\r\n        bytes32 _fromEntryHash,\r\n        uint256 _value\r\n    ) public {\r\n        // Checking repartion\r\n        require(_value <= registery[msg.sender][_leaderHash].allocated[_fromEntryHash], \"not enought\");\r\n        // Changing repartition\r\n        registery[msg.sender][_leaderHash].allocated[_fromEntryHash] -= _value;\r\n        registery[msg.sender][_leaderHash].unallocated += _value;\r\n        emit newAllocation(msg.sender, _leaderHash, _fromEntryHash, \"\", _value);\r\n    }\r\n    \r\n    // Getters\r\n    \r\n    function getUnallocation(address _from, bytes32 leaderHash) public view returns (uint256 _unallocatedAmount){\r\n        return registery[_from][leaderHash].unallocated;\r\n    }\r\n    \r\n    function getAllocation(address _from, bytes32 leaderHash, bytes32 _entryHash) public view returns (uint256 _allocatedAmount) {\r\n        return registery[_from][leaderHash].allocated[_entryHash];\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"leaderHash\",\"type\":\"bytes32\"}],\"name\":\"deletedLeaderboard\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_at\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_leaderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_fromEntryHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_toEntryHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"newAllocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"leaderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"intialValue\",\"type\":\"uint256\"}],\"name\":\"newLeaderboard\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_leaderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_fromEntryHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_toEntryHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"allocateEntryFromEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_leaderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_toEntryHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"allocateEntryFromUnallocated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_leaderHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_intialValue\",\"type\":\"uint256\"}],\"name\":\"createLeaderboard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_leaderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_fromEntryHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"deallocateEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"leaderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_entryHash\",\"type\":\"bytes32\"}],\"name\":\"getAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocatedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"leaderHash\",\"type\":\"bytes32\"}],\"name\":\"getUnallocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_unallocatedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"registery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"unallocated\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Leaderboard","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://1b986aa5450e91d0a6e7d603c4907e4e3e7257a03a92a66c961b59f324817cd0"}]}