{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.7.4;\r\n\r\nlibrary ErrorCode {\r\n\r\n    string constant FORBIDDEN = 'YouSwap:FORBIDDEN';\r\n    string constant IDENTICAL_ADDRESSES = 'YouSwap:IDENTICAL_ADDRESSES';\r\n    string constant ZERO_ADDRESS = 'YouSwap:ZERO_ADDRESS';\r\n    string constant INVALID_ADDRESSES = 'YouSwap:INVALID_ADDRESSES';\r\n    string constant BALANCE_INSUFFICIENT = 'YouSwap:BALANCE_INSUFFICIENT';\r\n    string constant REWARDTOTAL_LESS_THAN_REWARDPROVIDE = 'YouSwap:REWARDTOTAL_LESS_THAN_REWARDPROVIDE';\r\n    string constant PARAMETER_TOO_LONG = 'YouSwap:PARAMETER_TOO_LONG';\r\n    string constant REGISTERED = 'YouSwap:REGISTERED';\r\n\r\n}\r\n\r\ninterface IYouswapInviteV1 {\r\n\r\n    struct UserInfo {\r\n        address up;//上级\r\n        address[] down;//下级\r\n        uint256 startBlock;//邀请块高\r\n    }\r\n\r\n    event InviteV1(address indexed owner, address indexed upper, uint256 indexed height);//被邀请人的地址，邀请人的地址，邀请块高\r\n\r\n    function inviteLength() external view returns (uint256);//邀请人数\r\n\r\n    function inviteUp1(address) external view returns (address);//上级邀请\r\n\r\n    function inviteUp2(address) external view returns (address, address);//上级邀请\r\n\r\n    function inviteDown1(address) external view returns (address[] memory);//下级邀请\r\n\r\n    function inviteDown2(address) external view returns (address[] memory, address[] memory);//下级邀请\r\n\r\n    function inviteDown2Count(address) external view returns (uint256, uint256);//下级邀请\r\n    \r\n    function register() external returns (bool);//注册邀请关系\r\n\r\n    function invite(address) external returns (bool);//注册邀请关系\r\n    \r\n    function inviteBatch(address[] memory) external returns (uint, uint);//注册邀请关系，输入数量，成功数量\r\n\r\n}\r\n\r\ncontract YouswapInviteV1 is IYouswapInviteV1 {\r\n\r\n    address public constant zero = address(0);\r\n    uint256 public startBlock;\r\n    address[] public inviteUserInfoV1;\r\n    mapping(address => UserInfo) public inviteUserInfoV2;\r\n\r\n    constructor () {\r\n        startBlock = block.number;\r\n    }\r\n    \r\n    function inviteLength() override external view returns (uint256) {\r\n        return inviteUserInfoV1.length;\r\n    }\r\n\r\n    function inviteUp1(address _address) override external view returns (address) {\r\n        return inviteUserInfoV2[_address].up;\r\n    }\r\n\r\n    function inviteUp2(address _address) override external view returns (address, address) {\r\n        address up1 = inviteUserInfoV2[_address].up;\r\n        address up2 = address(0);\r\n        if (address(0) != up1) {\r\n            up2 = inviteUserInfoV2[up1].up;\r\n        }\r\n\r\n        return (up1, up2);\r\n    }\r\n\r\n    function inviteDown1(address _address) override external view returns (address[] memory) {\r\n        return inviteUserInfoV2[_address].down;\r\n    }\r\n\r\n    function inviteDown2(address _address) override external view returns (address[] memory, address[] memory) {\r\n        address[] memory invite1 = inviteUserInfoV2[_address].down;\r\n        uint256 count = 0;\r\n        uint256 len = invite1.length;\r\n        for (uint256 i = 0; i < len; i++) {\r\n            count += inviteUserInfoV2[invite1[i]].down.length;\r\n        }\r\n        address[] memory down;\r\n        address[] memory invite2 = new address[](count);\r\n        count = 0;\r\n        for (uint256 i = 0; i < len; i++) {\r\n            down = inviteUserInfoV2[invite1[i]].down;\r\n            for (uint256 j = 0; j < down.length; j++) {\r\n                invite2[count] = down[j];\r\n                count++;\r\n            }\r\n        }\r\n        \r\n        return (invite1, invite2);\r\n    }\r\n\r\n    function inviteDown2Count(address _address) override external view returns (uint256, uint256) {\r\n        address[] memory invite1 = inviteUserInfoV2[_address].down;\r\n        uint256 invite2 = 0;\r\n        uint256 len = invite1.length;\r\n        for (uint256 i = 0; i < len; i++) {\r\n            invite2 += inviteUserInfoV2[invite1[i]].down.length;\r\n        }\r\n        \r\n        return (invite1.length, invite2);\r\n    }\r\n\r\n    function register() override external returns (bool) {\r\n        UserInfo storage user = inviteUserInfoV2[tx.origin];\r\n        require(0 == user.startBlock, ErrorCode.REGISTERED);\r\n        user.up = zero;\r\n        user.startBlock = block.number;\r\n        inviteUserInfoV1.push(tx.origin);\r\n        \r\n        emit InviteV1(tx.origin, user.up, user.startBlock);\r\n        \r\n        return true;\r\n    }\r\n\r\n    function invite(address _address) override external returns (bool) {\r\n        require(msg.sender != _address, ErrorCode.FORBIDDEN);\r\n        UserInfo storage user = inviteUserInfoV2[msg.sender];\r\n        require(0 == user.startBlock, ErrorCode.REGISTERED);\r\n        UserInfo storage up = inviteUserInfoV2[_address];\r\n        if (0 == up.startBlock) {\r\n            user.up = zero;\r\n        }else {\r\n            user.up = _address;\r\n            up.down.push(msg.sender);\r\n        }\r\n        user.startBlock = block.number;\r\n        inviteUserInfoV1.push(msg.sender);\r\n        \r\n        emit InviteV1(msg.sender, user.up, user.startBlock);\r\n\r\n        return true;\r\n    }\r\n\r\n    function inviteBatch(address[] memory _addresss) override external returns (uint, uint) {\r\n        uint len = _addresss.length;\r\n        require(len <= 100, ErrorCode.PARAMETER_TOO_LONG);\r\n        UserInfo storage user = inviteUserInfoV2[msg.sender];\r\n        if (0 == user.startBlock) {\r\n            user.up = zero;\r\n            user.startBlock = block.number;\r\n            inviteUserInfoV1.push(msg.sender);\r\n                        \r\n            emit InviteV1(msg.sender, user.up, user.startBlock);\r\n        }\r\n        uint count = 0;\r\n        for (uint i = 0; i < len; i++) {\r\n            if ((address(0) != _addresss[i]) && (msg.sender != _addresss[i])) {\r\n                UserInfo storage down = inviteUserInfoV2[_addresss[i]];\r\n                if (0 == down.startBlock) {\r\n                    down.up = msg.sender;\r\n                    down.startBlock = block.number;\r\n                    user.down.push(_addresss[i]);\r\n                    inviteUserInfoV1.push(_addresss[i]);\r\n                    count++;\r\n\r\n                    emit InviteV1(_addresss[i], msg.sender, down.startBlock);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (len, count);\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"upper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"name\":\"InviteV1\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"invite\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresss\",\"type\":\"address[]\"}],\"name\":\"inviteBatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"inviteDown1\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"inviteDown2\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"inviteDown2Count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inviteLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"inviteUp1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"inviteUp2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"inviteUserInfoV1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"inviteUserInfoV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"up\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zero\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"YouswapInviteV1","CompilerVersion":"v0.7.4+commit.3f05b770","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://1fdeeed3cebeda2b231ef5f89f34ba2c5e15c89c9ed6a717ba45ba144a97d340"}]}