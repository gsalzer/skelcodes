{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.4;\r\n\r\ncontract firstContract {\r\n\r\n  address payable public  owner;\r\n\r\n  constructor() payable {\r\n    require(msg.value > 0.0005 ether,'Not enough Ether');\r\n    owner = payable(msg.sender);\r\n    \r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner,'Only the contract owner can call this');\r\n    _;\r\n  }\r\n  \r\n  function balanceOf() public view returns(uint256) {\r\n      return address(this).balance;\r\n  }\r\n\r\n  function withdraw() external onlyOwner  {\r\n    \r\n    return owner.transfer(address(this).balance);\r\n    \r\n  }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"firstContract","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://9703670208424ef36e4780938beedb85c59f100d1e1728b0d125fc2c5eaee763"}]}