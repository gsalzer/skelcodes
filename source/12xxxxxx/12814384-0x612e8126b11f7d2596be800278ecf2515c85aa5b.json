{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity 0.8.5;\r\n\r\n/**\r\n * @title TieredCrowdfundStorage\r\n * @author MirrorXYZ\r\n */\r\ncontract TieredCrowdfundStorage {\r\n    // The two states that this contract can exist in. \"FUNDING\" allows\r\n    // contributors to add funds.\r\n    enum Status {FUNDING, TRADING}\r\n\r\n    // ============ Constants ============\r\n\r\n    // The factor by which ETH contributions will multiply into crowdfund tokens.\r\n    uint16 internal constant TOKEN_SCALE = 1000;\r\n    uint256 internal constant REENTRANCY_NOT_ENTERED = 1;\r\n    uint256 internal constant REENTRANCY_ENTERED = 2;\r\n    uint8 public constant decimals = 18;\r\n\r\n    // ============ Immutable Storage ============\r\n\r\n    // The operator has a special role to change contract status.\r\n    address payable public operator;\r\n    address payable public fundingRecipient;\r\n    // We add a hard cap to prevent raising more funds than deemed reasonable.\r\n    uint256 public fundingCap;\r\n    // The operator takes some equity in the tokens, represented by this percent.\r\n    uint256 public operatorPercent;\r\n    string public symbol;\r\n    string public name;\r\n\r\n    // ============ Mutable Storage ============\r\n\r\n    // Represents the current state of the campaign.\r\n    Status public status;\r\n    uint256 internal reentrancy_status;\r\n\r\n    // ============ Mutable ERC20 Attributes ============\r\n\r\n    uint256 public totalSupply;\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n    mapping(address => uint256) public nonces;\r\n\r\n    // ============ Delegation logic ============\r\n    address public logic;\r\n\r\n    // ============ Tiered Campaigns ============\r\n    // Address of the editions contract to purchase from.\r\n    address public editions;\r\n}\r\n\r\n\r\n// File contracts/TieredCrowdfundProxy.sol\r\n\r\n\r\ninterface ITieredCrowdfundFactory {\r\n    function mediaAddress() external returns (address);\r\n\r\n    function logic() external returns (address);\r\n\r\n    function editions() external returns (address);\r\n\r\n    // ERC20 data.\r\n    function parameters()\r\n        external\r\n        returns (\r\n            address payable operator,\r\n            address payable fundingRecipient,\r\n            uint256 fundingCap,\r\n            uint256 operatorPercent,\r\n            string memory name,\r\n            string memory symbol\r\n        );\r\n}\r\n\r\n/**\r\n * @title TieredCrowdfundProxy\r\n * @author MirrorXYZ\r\n */\r\ncontract TieredCrowdfundProxy is TieredCrowdfundStorage {\r\n    constructor() {\r\n        logic = ITieredCrowdfundFactory(msg.sender).logic();\r\n        editions = ITieredCrowdfundFactory(msg.sender).editions();\r\n        // Crowdfund-specific data.\r\n        (\r\n            operator,\r\n            fundingRecipient,\r\n            fundingCap,\r\n            operatorPercent,\r\n            name,\r\n            symbol\r\n        ) = ITieredCrowdfundFactory(msg.sender).parameters();\r\n        // Initialize mutable storage.\r\n        status = Status.FUNDING;\r\n    }\r\n\r\n    fallback() external payable {\r\n        address _impl = logic;\r\n        assembly {\r\n            let ptr := mload(0x40)\r\n            calldatacopy(ptr, 0, calldatasize())\r\n            let result := delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)\r\n            let size := returndatasize()\r\n            returndatacopy(ptr, 0, size)\r\n\r\n            switch result\r\n                case 0 {\r\n                    revert(ptr, size)\r\n                }\r\n                default {\r\n                    return(ptr, size)\r\n                }\r\n        }\r\n    }\r\n\r\n    receive() external payable {}\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"editions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingRecipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"logic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum TieredCrowdfundStorage.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"TieredCrowdfundProxy","CompilerVersion":"v0.8.5+commit.a4f2e591","OptimizationUsed":"1","Runs":"2000","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://cec644ee21cdccf7b828fbfa1f15b275c2bc29023800e6bf8a3b9dd1a5baf5fd"}]}