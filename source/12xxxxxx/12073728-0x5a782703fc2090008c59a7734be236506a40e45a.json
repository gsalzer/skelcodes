{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2021-03-15\r\n*/\r\n\r\npragma solidity ^0.5.17;\r\ncontract Permissions {\r\n\r\n  address public admin;\r\n\r\n  \r\n  constructor() public {\r\n    admin = msg.sender;\r\n  }\r\n  \r\n  \r\n  modifier onlyAdmin(){\r\n      require(msg.sender == admin);\r\n      _;\r\n  }\r\n  \r\n  function changeAdmin(address _newAdmin) external onlyAdmin{\r\n      admin = _newAdmin;\r\n  }\r\n\r\n}\r\n\r\ncontract RatToken{\r\n      function intTransfer(address _from, address _to, uint256 tokenId) external returns(bool);\r\n     \r\n}\r\n\r\ncontract CATToken{\r\n    function allowDeposit(address _addr) public view returns (bool);\r\n    function burnToken(address _from,uint256 _amount) external;\r\n}\r\n\r\n\r\ncontract LoanContractDB{\r\n      function debitContract(uint256 _contractID) public view returns (uint256 _priciple,uint256 _comInt,uint256 _loanInt,uint256 _guaInt);\r\n      function loanContractData(uint256 _idx) public view  returns(uint256[] memory _data,bytes8 _cur,address[] memory _addr);\r\n\r\n      function TokenToConID(uint256 _TokenID) public view returns (uint256);\r\n      function loanConIDToIdx(uint256 _coinID) public view returns (uint256);\r\n      \r\n      function defaultContract(uint256 _contractID,uint256 _defAmount) external returns(bool);\r\n      function getPaidInfo(uint256 _conID) public view  returns(uint256[] memory _data,address _contract);\r\n      \r\n}\r\n\r\ncontract S1Global{\r\n    function getAllMaxAddr() public returns(uint256);\r\n    function getAddress(uint256 idx) public returns(address);\r\n    function getAddressLabel(string memory _label) public view returns(address);\r\n}\r\n\r\n\r\ncontract POOLS{\r\n    function loanBalance() public view returns(uint256);\r\n    function borrowWithAddr(uint256 amount,address _addr)public returns(uint256 contractID);\r\n    function borrowInterest() public view returns(uint256);\r\n    function rePaymentWithWrap(uint256 amount,uint256 conIdx,address _addr) public returns(bool);\r\n    function setBorrowInterest(uint256 _newInterst) public;\r\n   \r\n    function pricipleAndInterest(uint256 conIdx) public view returns(uint256 principle,uint256 _int);\r\n    function getBorrowData(uint256 condIdx) public view returns(uint256[] memory _data);\r\n\r\n    function token() public view returns(address);\r\n}\r\n\r\ncontract SZO {\r\n\r\n    function balanceOf(address tokenOwner) public view returns (uint256 balance);\r\n    function transfer(address to, uint256 tokens) public returns (bool success);\r\n       \r\n\tfunction createKYCData(bytes32 _KycData1, bytes32 _kycData2,address  _wallet) public returns(uint256);\r\n\tfunction intTransfer(address _from, address _to, uint256 _value) external  returns(bool);\r\n\tfunction haveKYC(address _addr) public view returns(bool);\r\n}\r\n\r\ncontract SELLSZO{\r\n     function buyToken(address _tokenAddr,address _toAddr,uint256 amount,uint256 wallID) public returns(bool);\r\n     function buyUseAndBurn(address _tokenAddr,address _toAddr,uint256 amount) public returns(bool);\r\n     function useAndBurn(address _fromAddress,uint256 amount) public returns(bool);\r\n     function sellPrices(address _addr) public view returns(uint256);\r\n}\r\n\r\ncontract RepaymentDefault is Permissions{\r\n\r\n    uint256 public version = 1;\r\n    uint256 public decimal = 18;\r\n    string public CURRENCY = 'USD';\r\n    uint256 public SECPYEAR = 31536000;\r\n\r\n    CATToken public catToken;\r\n    RatToken public ratToken;\r\n    LoanContractDB public contractDB;\r\n    SELLSZO  public sellSZO;\r\n    \r\n\r\n    constructor() public{\r\n        catToken = CATToken(0xD216356c91b88609C82Bd988d4425bb7EDf1Beb4);\r\n        ratToken = RatToken(0x8bE308B0A4CB6753783E078cF12E4A236c11a85A);\r\n        sellSZO = SELLSZO(0x0D80089B5E171eaC7b0CdC7afe6bC353B71832d1);\r\n        contractDB = LoanContractDB(0xd3F0D9a6DDC61f5a2C40458EF81A3b9fb735b7e3);\r\n    }\r\n    \r\n    function setCatToken(address _addr) public onlyAdmin returns(bool){\r\n        catToken = CATToken(_addr);\r\n        return true;\r\n    }\r\n    \r\n    function setRatToken(address _addr) public onlyAdmin returns(bool){\r\n        ratToken = RatToken(_addr);\r\n        return true;\r\n    }\r\n    \r\n    function setSellSZO(address _addr) public onlyAdmin returns(bool){\r\n        sellSZO = SELLSZO(_addr);\r\n        return true;\r\n    }\r\n    \r\n    function setContractDB(address _addr) public onlyAdmin returns(bool){\r\n        contractDB = LoanContractDB(_addr);\r\n        return true;\r\n    }\r\n    \r\n    function getTokenDetail(uint256 _tokenID) public view returns(bool error,string memory message,address _tokenAddr,address _poolAddr,uint256 principle,uint256 sumInt,uint256 _loanConID,uint256 _status,uint256 _conID){\r\n        uint256[] memory data;\r\n        uint256[] memory dataInfo;\r\n        POOLS pools;\r\n\r\n        data = new uint256[](5);\r\n        dataInfo = new uint256[](17);\r\n        \r\n        error = false;\r\n        _conID = contractDB.TokenToConID(_tokenID);\r\n        if(_conID == 0)\r\n            error = true;\r\n        else\r\n        {\r\n            (data,_poolAddr) = contractDB.getPaidInfo(_conID);\r\n            uint256 conIdx = contractDB.loanConIDToIdx(_conID);\r\n            (dataInfo,,) = contractDB.loanContractData(conIdx-1);\r\n            _status = dataInfo[14];\r\n            pools = POOLS(_poolAddr);\r\n        \r\n            _tokenAddr = pools.token();\r\n            \r\n            if(catToken.allowDeposit(_tokenAddr)  == false)\r\n            {\r\n                error = true;\r\n                message = \"This token not allow to paid\";\r\n            }\r\n            else\r\n            {\r\n                _loanConID = data[4];\r\n                 (principle,sumInt) = pools.pricipleAndInterest(data[4]);\r\n            }\r\n        \r\n        }\r\n        \r\n    }\r\n\r\n    function _paidContract(uint256 _loanConID,uint256 _amount,uint256 _fee,address _from,address poolAddr,uint256 _tokenID,uint256 _conID) internal returns(bool){\r\n        uint256 principle;\r\n        uint256 sumInt;\r\n        POOLS pools;\r\n      \r\n        \r\n        pools = POOLS(poolAddr);\r\n        \r\n        address _tokenAddr = pools.token();\r\n        \r\n        require(catToken.allowDeposit(_tokenAddr) == true,\"This token not allow to paid\");\r\n        \r\n        if(payFee(_from,_fee,_tokenAddr) == false)\r\n           return false;\r\n        \r\n        (principle,sumInt) = pools.pricipleAndInterest(_loanConID);\r\n       //data[4] = pool contract id;\r\n        pools.rePaymentWithWrap(_amount,_loanConID,_from); // pay to pool\r\n        \r\n        if(_amount >= principle + sumInt){\r\n            catToken.burnToken(_from,principle); // interest from pool can't burn\r\n            // \r\n            contractDB.defaultContract(_conID,_amount);\r\n            ratToken.intTransfer(poolAddr,_from,_tokenID);\r\n        }\r\n        else\r\n        {\r\n             catToken.burnToken(_from,_amount - sumInt);\r\n        }    \r\n        return true;\r\n    } \r\n\r\n    \r\n    function payFee(address _from,uint256 amount,address _tokenAddr) internal returns(bool){\r\n        return sellSZO.buyUseAndBurn(_tokenAddr,_from,amount);\r\n    }\r\n    \r\n\r\n    function paidTokenDefaultFee(uint256 _loanConID,uint256 _amount,uint256 _fee,address _from,address poolAddr,uint256 _tokenID,uint256 _conID) external returns(bool) {\r\n        require(_fee >= 10 ether,\"Can't pay for fee\");\r\n        return _paidContract(_loanConID,_amount,_fee,_from,poolAddr,_tokenID,_conID);\r\n    }\r\n\r\n\r\n\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"CURRENCY\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SECPYEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"catToken\",\"outputs\":[{\"internalType\":\"contract CATToken\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractDB\",\"outputs\":[{\"internalType\":\"contract LoanContractDB\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"getTokenDetail\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"error\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"principle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sumInt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loanConID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_status\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_conID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loanConID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_conID\",\"type\":\"uint256\"}],\"name\":\"paidTokenDefaultFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ratToken\",\"outputs\":[{\"internalType\":\"contract RatToken\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellSZO\",\"outputs\":[{\"internalType\":\"contract SELLSZO\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setCatToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setContractDB\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setRatToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setSellSZO\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"RepaymentDefault","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://699f4c541d38fe45f9262bec38488511b0af27e829e7d7216d0e8d334964b6c8"}]}