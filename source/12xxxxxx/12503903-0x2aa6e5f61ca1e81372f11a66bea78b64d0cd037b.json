{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\nlibrary Math {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if(a == 0) { return 0; }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    \r\n    address public owner_;\r\n    mapping(address => bool) locked_;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() public { owner_ = 0xB87bd5bBC5cC4B41E1FCb890Cb3EAF9BCa3b3044; }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner_);\r\n        _;\r\n    }\r\n\r\n    modifier locked() {\r\n        require(!locked_[msg.sender]);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner_, newOwner);\r\n        owner_ = newOwner;\r\n    }\r\n\r\n    function lock(address owner) public onlyOwner {\r\n        locked_[owner] = true;\r\n    }\r\n\r\n    function unlock(address owner) public onlyOwner {\r\n        locked_[owner] = false;\r\n    }\r\n}\r\n\r\n\r\ncontract ERC20Token {\r\n    \r\n    using Math for uint256;\r\n    \r\n    event Burn(address indexed burner, uint256 value);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    uint256 totalSupply_;\r\n    mapping(address => uint256) balances_;\r\n    mapping (address => mapping (address => uint256)) internal allowed_;\r\n\r\n    function totalSupply() public view returns (uint256) { return totalSupply_; }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool) {\r\n        require(to != address(0));\r\n        require(value <= balances_[msg.sender]);\r\n\r\n        balances_[msg.sender] = balances_[msg.sender].sub(value);\r\n        balances_[to] = balances_[to].add(value);\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address owner) public view returns (uint256 balance) { return balances_[owner]; }\r\n\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n\r\n        require(to != address(0));\r\n        require(value <= balances_[from]);\r\n        require(value <= allowed_[from][msg.sender]);\r\n\r\n        balances_[from] = balances_[from].sub(value);\r\n        balances_[to] = balances_[to].add(value);\r\n        emit Transfer(from, to, value);\r\n        \r\n        allowed_[from][msg.sender] = allowed_[from][msg.sender].sub(value);\r\n        emit Approval(from, msg.sender, allowed_[from][msg.sender]);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public returns (bool) {\r\n        allowed_[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view returns (uint256) {\r\n        return allowed_[owner][spender];\r\n    }\r\n\r\n    function burn(uint256 value) public {\r\n        require(value <= balances_[msg.sender]);\r\n        address burner = msg.sender;\r\n        balances_[burner] = balances_[burner].sub(value);\r\n        emit Transfer(burner, burner, value);\r\n        totalSupply_ = totalSupply_.sub(value);\r\n        emit Burn(burner, value);\r\n    }    \r\n}\r\n\r\ncontract SMARTCITY is Ownable, ERC20Token {\r\n\r\n    using Math for uint;\r\n\r\n    uint8 constant public decimals = 18;\r\n    string constant public symbol = \"SCW\";\r\n    string constant public name = \"SMARTCITY\";\r\n    \r\n    constructor(address company, uint amount) public {\r\n        \r\n        totalSupply_ = amount * 1000000000000000000;\r\n        initSetting(company, totalSupply_);\r\n    }\r\n\r\n    function initSetting(address addr, uint amount) internal returns (bool) {\r\n\r\n        balances_[addr] = amount;\r\n        emit Transfer(address(0x0), addr, balances_[addr]);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public locked returns (bool) {\r\n        return super.transfer(to, value);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) public locked returns (bool) {\r\n        require(!locked_[from]);\r\n        return super.transferFrom(from, to, value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner_\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"company\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"SMARTCITY","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000e63afc75cc7d03aa2f40c520493dfc4ff0289e73000000000000000000000000000000000000000000000000000000003b9aca00","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://e2e2007c65ea3162cae6c14ca39a92b6ce641a77bbe591f5254dc4c642779b2e"}]}