{"status":"1","message":"OK","result":[{"SourceCode":"// hevm: flattened sources of contracts/PolkaPetAdaptor.sol\r\n\r\npragma solidity >=0.4.24 <0.5.0;\r\n\r\n////// contracts/interfaces/IAuthority.sol\r\n/* pragma solidity ^0.4.24; */\r\n\r\ncontract IAuthority {\r\n    function canCall(\r\n        address src, address dst, bytes4 sig\r\n    ) public view returns (bool);\r\n}\r\n\r\n////// contracts/DSAuth.sol\r\n/* pragma solidity ^0.4.24; */\r\n\r\n/* import './interfaces/IAuthority.sol'; */\r\n\r\ncontract DSAuthEvents {\r\n    event LogSetAuthority (address indexed authority);\r\n    event LogSetOwner     (address indexed owner);\r\n}\r\n\r\n/**\r\n * @title DSAuth\r\n * @dev The DSAuth contract is reference implement of https://github.com/dapphub/ds-auth\r\n * But in the isAuthorized method, the src from address(this) is remove for safty concern.\r\n */\r\ncontract DSAuth is DSAuthEvents {\r\n    IAuthority   public  authority;\r\n    address      public  owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        emit LogSetOwner(msg.sender);\r\n    }\r\n\r\n    function setOwner(address owner_)\r\n        public\r\n        auth\r\n    {\r\n        owner = owner_;\r\n        emit LogSetOwner(owner);\r\n    }\r\n\r\n    function setAuthority(IAuthority authority_)\r\n        public\r\n        auth\r\n    {\r\n        authority = authority_;\r\n        emit LogSetAuthority(authority);\r\n    }\r\n\r\n    modifier auth {\r\n        require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function isAuthorized(address src, bytes4 sig) internal view returns (bool) {\r\n        if (src == owner) {\r\n            return true;\r\n        } else if (authority == IAuthority(0)) {\r\n            return false;\r\n        } else {\r\n            return authority.canCall(src, this, sig);\r\n        }\r\n    }\r\n}\r\n\r\n////// contracts/PausableDSAuth.sol\r\n/* pragma solidity ^0.4.24; */\r\n\r\n/* import \"./DSAuth.sol\"; */\r\n\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract PausableDSAuth is DSAuth {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is not paused.\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is paused.\r\n   */\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() public onlyOwner whenNotPaused {\r\n    paused = true;\r\n    emit Pause();\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() public onlyOwner whenPaused {\r\n    paused = false;\r\n    emit Unpause();\r\n  }\r\n}\r\n\r\n////// contracts/SettingIds.sol\r\n/* pragma solidity ^0.4.24; */\r\n\r\n/**\r\n    Id definitions for SettingsRegistry.sol\r\n    Can be used in conjunction with the settings registry to get properties\r\n*/\r\ncontract SettingIds {\r\n    // 0x434f4e54524143545f52494e475f45524332305f544f4b454e00000000000000\r\n    bytes32 public constant CONTRACT_RING_ERC20_TOKEN = \"CONTRACT_RING_ERC20_TOKEN\";\r\n\r\n    // 0x434f4e54524143545f4b544f4e5f45524332305f544f4b454e00000000000000\r\n    bytes32 public constant CONTRACT_KTON_ERC20_TOKEN = \"CONTRACT_KTON_ERC20_TOKEN\";\r\n\r\n    // 0x434f4e54524143545f474f4c445f45524332305f544f4b454e00000000000000\r\n    bytes32 public constant CONTRACT_GOLD_ERC20_TOKEN = \"CONTRACT_GOLD_ERC20_TOKEN\";\r\n\r\n    // 0x434f4e54524143545f574f4f445f45524332305f544f4b454e00000000000000\r\n    bytes32 public constant CONTRACT_WOOD_ERC20_TOKEN = \"CONTRACT_WOOD_ERC20_TOKEN\";\r\n\r\n    // 0x434f4e54524143545f57415445525f45524332305f544f4b454e000000000000\r\n    bytes32 public constant CONTRACT_WATER_ERC20_TOKEN = \"CONTRACT_WATER_ERC20_TOKEN\";\r\n\r\n    // 0x434f4e54524143545f464952455f45524332305f544f4b454e00000000000000\r\n    bytes32 public constant CONTRACT_FIRE_ERC20_TOKEN = \"CONTRACT_FIRE_ERC20_TOKEN\";\r\n\r\n    // 0x434f4e54524143545f534f494c5f45524332305f544f4b454e00000000000000\r\n    bytes32 public constant CONTRACT_SOIL_ERC20_TOKEN = \"CONTRACT_SOIL_ERC20_TOKEN\";\r\n\r\n    // 0x434f4e54524143545f4f424a4543545f4f574e45525348495000000000000000\r\n    bytes32 public constant CONTRACT_OBJECT_OWNERSHIP = \"CONTRACT_OBJECT_OWNERSHIP\";\r\n\r\n    // 0x434f4e54524143545f544f4b454e5f4c4f434154494f4e000000000000000000\r\n    bytes32 public constant CONTRACT_TOKEN_LOCATION = \"CONTRACT_TOKEN_LOCATION\";\r\n\r\n    // 0x434f4e54524143545f4c414e445f424153450000000000000000000000000000\r\n    bytes32 public constant CONTRACT_LAND_BASE = \"CONTRACT_LAND_BASE\";\r\n\r\n    // 0x434f4e54524143545f555345525f504f494e5453000000000000000000000000\r\n    bytes32 public constant CONTRACT_USER_POINTS = \"CONTRACT_USER_POINTS\";\r\n\r\n    // 0x434f4e54524143545f494e5445525354454c4c41525f454e434f444552000000\r\n    bytes32 public constant CONTRACT_INTERSTELLAR_ENCODER = \"CONTRACT_INTERSTELLAR_ENCODER\";\r\n\r\n    // 0x434f4e54524143545f4449564944454e44535f504f4f4c000000000000000000\r\n    bytes32 public constant CONTRACT_DIVIDENDS_POOL = \"CONTRACT_DIVIDENDS_POOL\";\r\n\r\n    // 0x434f4e54524143545f544f4b454e5f5553450000000000000000000000000000\r\n    bytes32 public constant CONTRACT_TOKEN_USE = \"CONTRACT_TOKEN_USE\";\r\n\r\n    // 0x434f4e54524143545f524556454e55455f504f4f4c0000000000000000000000\r\n    bytes32 public constant CONTRACT_REVENUE_POOL = \"CONTRACT_REVENUE_POOL\";\r\n\r\n    // 0x434f4e54524143545f4252494447455f504f4f4c000000000000000000000000\r\n    bytes32 public constant CONTRACT_BRIDGE_POOL = \"CONTRACT_BRIDGE_POOL\";\r\n\r\n    // 0x434f4e54524143545f4552433732315f42524944474500000000000000000000\r\n    bytes32 public constant CONTRACT_ERC721_BRIDGE = \"CONTRACT_ERC721_BRIDGE\";\r\n\r\n    // 0x434f4e54524143545f5045545f42415345000000000000000000000000000000\r\n    bytes32 public constant CONTRACT_PET_BASE = \"CONTRACT_PET_BASE\";\r\n\r\n    // Cut owner takes on each auction, measured in basis points (1/100 of a percent).\r\n    // this can be considered as transaction fee.\r\n    // Values 0-10,000 map to 0%-100%\r\n    // set ownerCut to 4%\r\n    // ownerCut = 400;\r\n    // 0x55494e545f41554354494f4e5f43555400000000000000000000000000000000\r\n    bytes32 public constant UINT_AUCTION_CUT = \"UINT_AUCTION_CUT\";  // Denominator is 10000\r\n\r\n    // 0x55494e545f544f4b454e5f4f464645525f435554000000000000000000000000\r\n    bytes32 public constant UINT_TOKEN_OFFER_CUT = \"UINT_TOKEN_OFFER_CUT\";  // Denominator is 10000\r\n\r\n    // Cut referer takes on each auction, measured in basis points (1/100 of a percent).\r\n    // which cut from transaction fee.\r\n    // Values 0-10,000 map to 0%-100%\r\n    // set refererCut to 4%\r\n    // refererCut = 400;\r\n    // 0x55494e545f524546455245525f43555400000000000000000000000000000000\r\n    bytes32 public constant UINT_REFERER_CUT = \"UINT_REFERER_CUT\";\r\n\r\n    // 0x55494e545f4252494447455f4645450000000000000000000000000000000000\r\n    bytes32 public constant UINT_BRIDGE_FEE = \"UINT_BRIDGE_FEE\";\r\n\r\n    // 0x434f4e54524143545f4c414e445f5245534f5552434500000000000000000000\r\n    bytes32 public constant CONTRACT_LAND_RESOURCE = \"CONTRACT_LAND_RESOURCE\";\r\n}\r\n\r\n////// contracts/interfaces/IInterstellarEncoderV3.sol\r\n/* pragma solidity ^0.4.24; */\r\n\r\ncontract IInterstellarEncoderV3 {\r\n    uint256 constant CLEAR_HIGH =  0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff;\r\n\r\n    uint256 public constant MAGIC_NUMBER = 42;    // Interstellar Encoding Magic Number.\r\n    uint256 public constant CHAIN_ID = 1; // Ethereum mainet.\r\n    uint256 public constant CURRENT_LAND = 1; // 1 is Atlantis, 0 is NaN.\r\n\r\n    enum ObjectClass { \r\n        NaN,\r\n        LAND,\r\n        APOSTLE,\r\n        OBJECT_CLASS_COUNT\r\n    }\r\n\r\n    function registerNewObjectClass(address _objectContract, uint8 objectClass) public;\r\n\r\n    function encodeTokenId(address _tokenAddress, uint8 _objectClass, uint128 _objectIndex) public view returns (uint256 _tokenId);\r\n\r\n    function encodeTokenIdForObjectContract(\r\n        address _tokenAddress, address _objectContract, uint128 _objectId) public view returns (uint256 _tokenId);\r\n\r\n    function encodeTokenIdForOuterObjectContract(\r\n        address _objectContract, address nftAddress, address _originNftAddress, uint128 _objectId, uint16 _producerId, uint8 _convertType) public view returns (uint256);\r\n\r\n    function getContractAddress(uint256 _tokenId) public view returns (address);\r\n\r\n    function getObjectId(uint256 _tokenId) public view returns (uint128 _objectId);\r\n\r\n    function getObjectClass(uint256 _tokenId) public view returns (uint8);\r\n\r\n    function getObjectAddress(uint256 _tokenId) public view returns (address);\r\n\r\n    function getProducerId(uint256 _tokenId) public view returns (uint16);\r\n\r\n    function getOriginAddress(uint256 _tokenId) public view returns (address);\r\n\r\n}\r\n\r\n////// contracts/interfaces/ISettingsRegistry.sol\r\n/* pragma solidity ^0.4.24; */\r\n\r\ncontract ISettingsRegistry {\r\n    enum SettingsValueTypes { NONE, UINT, STRING, ADDRESS, BYTES, BOOL, INT }\r\n\r\n    function uintOf(bytes32 _propertyName) public view returns (uint256);\r\n\r\n    function stringOf(bytes32 _propertyName) public view returns (string);\r\n\r\n    function addressOf(bytes32 _propertyName) public view returns (address);\r\n\r\n    function bytesOf(bytes32 _propertyName) public view returns (bytes);\r\n\r\n    function boolOf(bytes32 _propertyName) public view returns (bool);\r\n\r\n    function intOf(bytes32 _propertyName) public view returns (int);\r\n\r\n    function setUintProperty(bytes32 _propertyName, uint _value) public;\r\n\r\n    function setStringProperty(bytes32 _propertyName, string _value) public;\r\n\r\n    function setAddressProperty(bytes32 _propertyName, address _value) public;\r\n\r\n    function setBytesProperty(bytes32 _propertyName, bytes _value) public;\r\n\r\n    function setBoolProperty(bytes32 _propertyName, bool _value) public;\r\n\r\n    function setIntProperty(bytes32 _propertyName, int _value) public;\r\n\r\n    function getValueTypeOf(bytes32 _propertyName) public view returns (uint /* SettingsValueTypes */ );\r\n\r\n    event ChangeProperty(bytes32 indexed _propertyName, uint256 _type);\r\n}\r\n\r\n////// contracts/PolkaPetAdaptor.sol\r\n/* pragma solidity ^0.4.24; */\r\n\r\n/* import \"./SettingIds.sol\"; */\r\n/* import \"./PausableDSAuth.sol\"; */\r\n/* import \"./interfaces/ISettingsRegistry.sol\"; */\r\n/* import \"./interfaces/IInterstellarEncoderV3.sol\"; */\r\n\r\n\r\ncontract PolkaPetAdaptor is PausableDSAuth, SettingIds {\r\n\r\n    event SetTokenIDAuth(uint256 indexed tokenId, bool status);\r\n\r\n    /*\r\n     *  Storage\r\n    */\r\n\r\n    uint16 public producerId;\r\n\r\n    uint8 public convertType;\r\n\r\n    ISettingsRegistry public registry;\r\n\r\n    address public originNft;\r\n\r\n    uint128 public lastObjectId;\r\n\r\n    // tokenID => bool allowList\r\n    mapping (uint256 => bool) public allowList;\r\n\r\n    constructor(ISettingsRegistry _registry, address _originNft, uint16 _producerId) public {\r\n        registry = _registry;\r\n        originNft = _originNft;\r\n        producerId = _producerId;\r\n        convertType = 128;  // f(x) = x，fullfill with zero at left side.\r\n\r\n        allowList[2] = true;   // Darwinia\r\n        allowList[11] = true;  // EVO\r\n        allowList[20] = true;  // Crab\r\n    }\r\n\r\n    function setTokenIDAuth(uint256 _tokenId, bool _status) public auth {\r\n        allowList[_tokenId] = _status;\r\n        emit SetTokenIDAuth(_tokenId, _status);\t\r\n    }\r\n\r\n    function toMirrorTokenIdAndIncrease(uint256 _originTokenId) public auth returns (uint256) {\r\n        require(allowList[_originTokenId], \"POLKPET: PERMISSION\");\r\n        lastObjectId += 1;\r\n\trequire(lastObjectId < uint128(-1), \"POLKPET: OBJECTID_OVERFLOW\");\r\n        uint128 mirrorObjectId = uint128(lastObjectId & 0xffffffffffffffffffffffffffffffff);\r\n        address objectOwnership = registry.addressOf(SettingIds.CONTRACT_OBJECT_OWNERSHIP);\r\n        address petBase = registry.addressOf(SettingIds.CONTRACT_PET_BASE);\r\n        IInterstellarEncoderV3 interstellarEncoder = IInterstellarEncoderV3(registry.addressOf(SettingIds.CONTRACT_INTERSTELLAR_ENCODER));\r\n        uint256 mirrorTokenId = interstellarEncoder.encodeTokenIdForOuterObjectContract(\r\n        petBase, objectOwnership, originNft, mirrorObjectId, producerId, convertType);\r\n\r\n        return mirrorTokenId;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_USER_POINTS\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UINT_BRIDGE_FEE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_BRIDGE_POOL\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_WATER_ERC20_TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_GOLD_ERC20_TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastObjectId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint128\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_RING_ERC20_TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UINT_AUCTION_CUT\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_TOKEN_LOCATION\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_KTON_ERC20_TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_WOOD_ERC20_TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_FIRE_ERC20_TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"originNft\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_LAND_BASE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"convertType\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_INTERSTELLAR_ENCODER\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_PET_BASE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_SOIL_ERC20_TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_OBJECT_OWNERSHIP\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_TOKEN_USE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_ERC721_BRIDGE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_REVENUE_POOL\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setTokenIDAuth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_LAND_RESOURCE\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_originTokenId\",\"type\":\"uint256\"}],\"name\":\"toMirrorTokenIdAndIncrease\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UINT_REFERER_CUT\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UINT_TOKEN_OFFER_CUT\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"producerId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_DIVIDENDS_POOL\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"},{\"name\":\"_originNft\",\"type\":\"address\"},{\"name\":\"_producerId\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"SetTokenIDAuth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"}]","ContractName":"PolkaPetAdaptor","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000006b0940772516b69088904564a56d09cfe6bb3d850000000000000000000000008cb813bf27dc744fc5fb6ba7515504de45d39e080000000000000000000000000000000000000000000000000000000000000103","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://1fd09ef579e5599ab13450605cfc08282aa5c237c4644e7aaa76b19c83dc4898"}]}