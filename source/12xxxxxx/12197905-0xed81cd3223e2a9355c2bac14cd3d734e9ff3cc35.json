{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface NFT {\r\n    function mint(address to, uint id, uint amount, bytes memory data) external;\r\n    function mintBatch(address to, uint[] memory ids, uint[] memory amounts, bytes memory data) external;\r\n}\r\n\r\ncontract Owned {\r\n    bool initialised;\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address indexed from, address indexed to);\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"Not owner\");\r\n        _;\r\n    }\r\n\r\n    function initOwned() internal {\r\n        require(!initialised, \"Already initialised\");\r\n        owner = msg.sender;\r\n        initialised = true;\r\n    }\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        emit OwnershipTransferred(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// BokkyPooBah's ZombieBabyAdoptionCentre\r\n//\r\n// Send 0 value or < fee tx to this contract to receive a single random NFT\r\n// Send >= fee tx to this contract to receive a set of NFTs\r\n//\r\n// Enjoy. (c) BokkyPooBah / Bok Consulting Pty Ltd 2021. The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\ncontract ZombieBabyAdoptionCentre is Owned {\r\n\r\n    NFT public nft;\r\n    uint public paused;\r\n    uint public fee;\r\n    uint[] _ids;\r\n\r\n    event FeeUpdated(uint[] ids);\r\n    event IdsUpdated(uint[] ids);\r\n    event PausedToggled(bool paused);\r\n    event RefundedETH(uint amount);\r\n\r\n    constructor(NFT _nft, uint _fee, uint[] memory __ids) {\r\n        initOwned();\r\n        fee = _fee;\r\n        nft = _nft;\r\n        _setIds(__ids);\r\n    }\r\n\r\n    function setFee(uint _fee) public onlyOwner {\r\n        fee = _fee;\r\n    }\r\n\r\n    function _setIds(uint[] memory __ids) internal {\r\n        _ids = __ids;\r\n        emit IdsUpdated(__ids);\r\n    }\r\n\r\n    function setIds(uint[] memory __ids) public onlyOwner {\r\n        _setIds(__ids);\r\n    }\r\n\r\n    function ids() public view returns (uint[] memory __ids) {\r\n        return _ids;\r\n    }\r\n\r\n    function togglePaused() public onlyOwner {\r\n        paused = 1 - paused;\r\n        emit PausedToggled(paused == 1);\r\n    }\r\n\r\n    function withdraw() external onlyOwner {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n    receive() external payable {\r\n        require(paused == 0, \"Paused\");\r\n\r\n        // Mint a random NFT\r\n        if (msg.value < fee) {\r\n            uint randomIndex = uint(keccak256(abi.encodePacked(block.difficulty, block.timestamp))) % _ids.length;\r\n            nft.mint(msg.sender, _ids[randomIndex], 1, \"\");\r\n\r\n        // Mint set\r\n        } else {\r\n            uint[] memory amounts = new uint[](_ids.length);\r\n            for (uint i = 0; i < _ids.length; i++) {\r\n                amounts[i] = 1;\r\n            }\r\n            nft.mintBatch(msg.sender, _ids, amounts, \"\");\r\n            uint refund = msg.value - fee;\r\n            if (refund > 0) {\r\n                payable(msg.sender).transfer(refund);\r\n                emit RefundedETH(refund);\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract NFT\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"__ids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"IdsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundedETH\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ids\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"__ids\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract NFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"__ids\",\"type\":\"uint256[]\"}],\"name\":\"setIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"ZombieBabyAdoptionCentre","CompilerVersion":"v0.8.3+commit.8d00100c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000fe9231f0e6753a8412a00ec1f0028a24d5220ba900000000000000000000000000000000000000000000000000b1a2bc2ecersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://fadb71d0383b835812e39da057550f5ee62fb8a49da0f3e76374f8f002489e20"}]}