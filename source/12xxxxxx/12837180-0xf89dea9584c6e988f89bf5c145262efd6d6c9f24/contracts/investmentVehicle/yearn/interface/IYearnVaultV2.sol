pragma solidity 0.7.6;
interface IYearnVaultV2 {
  function decimals () external view returns ( uint256 );
  function transfer ( address receiver, uint256 amount ) external returns ( bool );
  function transferFrom ( address sender, address receiver, uint256 amount ) external returns ( bool );
  function approve ( address spender, uint256 amount ) external returns ( bool );
  function increaseAllowance ( address spender, uint256 amount ) external returns ( bool );
  function decreaseAllowance ( address spender, uint256 amount ) external returns ( bool );  function totalAssets (  ) external view returns ( uint256 );
  function deposit (  ) external returns ( uint256 );
  function deposit ( uint256 _amount ) external returns ( uint256 );
  function deposit ( uint256 _amount, address recipient ) external returns ( uint256 );
  function maxAvailableShares (  ) external view returns ( uint256 );
  function withdraw (  ) external returns ( uint256 );
  function withdraw ( uint256 maxShares ) external returns ( uint256 );
  function withdraw ( uint256 maxShares, address recipient ) external returns ( uint256 );
  function withdraw ( uint256 maxShares, address recipient, uint256 maxLoss ) external returns ( uint256 );
  function pricePerShare (  ) external view returns ( uint256 );
  function addStrategy ( address strategy, uint256 _debtRatio, uint256 rateLimit, uint256 _performanceFee ) external;
  function updateStrategyDebtRatio ( address strategy, uint256 _debtRatio ) external;
  function updateStrategyRateLimit ( address strategy, uint256 rateLimit ) external;
  function updateStrategyPerformanceFee ( address strategy, uint256 _performanceFee ) external;
  function migrateStrategy ( address oldVersion, address newVersion ) external;
  function revokeStrategy (  ) external;
  function revokeStrategy ( address strategy ) external;
  function addStrategyToQueue ( address strategy ) external;
  function removeStrategyFromQueue ( address strategy ) external;
  function debtOutstanding (  ) external view returns ( uint256 );
  function debtOutstanding ( address strategy ) external view returns ( uint256 );
  function creditAvailable (  ) external view returns ( uint256 );
  function creditAvailable ( address strategy ) external view returns ( uint256 );
  function availableDepositLimit (  ) external view returns ( uint256 );
  function expectedReturn (  ) external view returns ( uint256 );
  function expectedReturn ( address strategy ) external view returns ( uint256 );
  function report ( uint256 gain, uint256 loss, uint256 _debtPayment ) external returns ( uint256 );
  function sweep ( address _token ) external;
  function sweep ( address _token, uint256 amount ) external;
  function balanceOf ( address arg0 ) external view returns ( uint256 );
  function allowance ( address arg0, address arg1 ) external view returns ( uint256 );
  function totalSupply (  ) external view returns ( uint256 );
  function token (  ) external view returns ( address );
  function governance (  ) external view returns ( address );
  function management (  ) external view returns ( address );
  function guardian (  ) external view returns ( address );
  function guestList (  ) external view returns ( address );
  function strategies ( address arg0 ) external view returns ( uint256 _performanceFee, uint256 _activation, uint256 debtRatio, uint256 rateLimit, uint256 lastReport, uint256 totalDebt, uint256 totalGain, uint256 totalLoss );
  function withdrawalQueue ( uint256 arg0 ) external view returns ( address );
  function emergencyShutdown (  ) external view returns ( bool );
  function depositLimit (  ) external view returns ( uint256 );
  function debtRatio (  ) external view returns ( uint256 );
  function totalDebt (  ) external view returns ( uint256 );
  function lastReport (  ) external view returns ( uint256 );
  function activation (  ) external view returns ( uint256 );
  function rewards (  ) external view returns ( address );
  function managementFee (  ) external view returns ( uint256 );
  function performanceFee (  ) external view returns ( uint256 );
  function nonces ( address arg0 ) external view returns ( uint256 );
  function DOMAIN_SEPARATOR (  ) external view returns ( bytes32 );
}

