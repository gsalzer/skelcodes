{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/hodl.sol\": {\r\n      \"content\": \"pragma solidity ^0.8.0;\\npragma experimental ABIEncoderV2;\\n\\ncontract Hodl{\\n    \\n    \\n    address public owner;\\n    \\n    constructor() public{\\n        owner = msg.sender;\\n    }\\n   \\n    \\n    mapping (address =>uint) hodler;\\n    uint public lockuntil = 0;\\n    \\n    function deposit() payable public{\\n        hodler[msg.sender] = hodler[msg.sender]+msg.value;\\n    }\\n    \\n    function lockContract(uint newlock) public{\\n        require(msg.sender == owner, \\\"YOU ARE NOT THE OWNER\\\");\\n        require(newlock > lockuntil,\\\"TIME MUST LATER THAN OLD LOCK\\\");\\n        lockuntil = newlock;\\n    }\\n    \\n    \\n    function withdraw() public {\\n        require(block.timestamp > lockuntil,\\\"ERROR NOT TIME FOR IT\\\");\\n        payable(msg.sender).transfer(hodler[msg.sender]);\\n        hodler[msg.sender]=0;\\n    }\\n    \\n    function getHodlings() view public returns(uint hodl){\\n        return hodler[msg.sender];\\n    }\\n    \\n    function getTime() view public returns(uint){\\n        return block.timestamp;\\n    }\\n    \\n    \\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHodlings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hodl\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newlock\",\"type\":\"uint256\"}],\"name\":\"lockContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockuntil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Hodl","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}