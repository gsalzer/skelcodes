{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/lib/InitializableOwnable.sol\r\n\r\n/*\r\n\r\n    Copyright 2020 DODO ZOO.\r\n    SPDX-License-Identifier: Apache-2.0\r\n\r\n*/\r\n\r\npragma solidity 0.6.9;\r\npragma experimental ABIEncoderV2;\r\n\r\n/**\r\n * @title Ownable\r\n * @author DODO Breeder\r\n *\r\n * @notice Ownership related functions\r\n */\r\ncontract InitializableOwnable {\r\n    address public _OWNER_;\r\n    address public _NEW_OWNER_;\r\n    bool internal _INITIALIZED_;\r\n\r\n    // ============ Events ============\r\n\r\n    event OwnershipTransferPrepared(address indexed previousOwner, address indexed newOwner);\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    // ============ Modifiers ============\r\n\r\n    modifier notInitialized() {\r\n        require(!_INITIALIZED_, \"DODO_INITIALIZED\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == _OWNER_, \"NOT_OWNER\");\r\n        _;\r\n    }\r\n\r\n    // ============ Functions ============\r\n\r\n    function initOwner(address newOwner) public notInitialized {\r\n        _INITIALIZED_ = true;\r\n        _OWNER_ = newOwner;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        emit OwnershipTransferPrepared(_OWNER_, newOwner);\r\n        _NEW_OWNER_ = newOwner;\r\n    }\r\n\r\n    function claimOwnership() public {\r\n        require(msg.sender == _NEW_OWNER_, \"INVALID_CLAIM\");\r\n        emit OwnershipTransferred(_OWNER_, _NEW_OWNER_);\r\n        _OWNER_ = _NEW_OWNER_;\r\n        _NEW_OWNER_ = address(0);\r\n    }\r\n}\r\n\r\n// File: contracts/Factory/Registries/DODOMineV3Registry.sol\r\n\r\n\r\n\r\ninterface IDODOMineV3Registry {\r\n    function addMineV3(\r\n        address mine,\r\n        bool isLpToken,\r\n        address stakeToken\r\n    ) external;\r\n}\r\n\r\n/**\r\n * @title DODOMineV3 Registry\r\n * @author DODO Breeder\r\n *\r\n * @notice Register DODOMineV3 Pools \r\n */\r\ncontract DODOMineV3Registry is InitializableOwnable, IDODOMineV3Registry {\r\n\r\n    mapping (address => bool) public isAdminListed;\r\n    \r\n    // ============ Registry ============\r\n    // minePool -> stakeToken\r\n    mapping(address => address) public _MINE_REGISTRY_;\r\n    // lpToken -> minePool\r\n    mapping(address => address[]) public _LP_REGISTRY_;\r\n    // singleToken -> minePool\r\n    mapping(address => address[]) public _SINGLE_REGISTRY_;\r\n\r\n\r\n    // ============ Events ============\r\n    event NewMineV3(address mine, address stakeToken, bool isLpToken);\r\n    event RemoveMineV3(address mine, address stakeToken);\r\n    event addAdmin(address admin);\r\n    event removeAdmin(address admin);\r\n\r\n\r\n    function addMineV3(\r\n        address mine,\r\n        bool isLpToken,\r\n        address stakeToken\r\n    ) override external {\r\n        require(isAdminListed[msg.sender], \"ACCESS_DENIED\");\r\n        _MINE_REGISTRY_[mine] = stakeToken;\r\n        if(isLpToken) {\r\n            _LP_REGISTRY_[stakeToken].push(mine);\r\n        }else {\r\n            _SINGLE_REGISTRY_[stakeToken].push(mine);\r\n        }\r\n\r\n        emit NewMineV3(mine, stakeToken, isLpToken);\r\n    }\r\n\r\n    // ============ Admin Operation Functions ============\r\n\r\n    function removeMineV3(\r\n        address mine,\r\n        bool isLpToken,\r\n        address stakeToken\r\n    ) external onlyOwner {\r\n        _MINE_REGISTRY_[mine] = address(0);\r\n        if(isLpToken) {\r\n            uint256 len = _LP_REGISTRY_[stakeToken].length;\r\n            for (uint256 i = 0; i < len; i++) {\r\n                if (mine == _LP_REGISTRY_[stakeToken][i]) {\r\n                    if(i != len - 1) {\r\n                        _LP_REGISTRY_[stakeToken][i] = _LP_REGISTRY_[stakeToken][len - 1];\r\n                    }\r\n                    _LP_REGISTRY_[stakeToken].pop();\r\n                    break;\r\n                }\r\n            }\r\n        }else {\r\n            uint256 len = _SINGLE_REGISTRY_[stakeToken].length;\r\n            for (uint256 i = 0; i < len; i++) {\r\n                if (mine == _SINGLE_REGISTRY_[stakeToken][i]) {\r\n                    if(i != len - 1) {\r\n                        _SINGLE_REGISTRY_[stakeToken][i] = _SINGLE_REGISTRY_[stakeToken][len - 1];\r\n                    }\r\n                    _SINGLE_REGISTRY_[stakeToken].pop();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        emit RemoveMineV3(mine, stakeToken);\r\n    }\r\n\r\n    function addAdminList (address contractAddr) external onlyOwner {\r\n        isAdminListed[contractAddr] = true;\r\n        emit addAdmin(contractAddr);\r\n    }\r\n\r\n    function removeAdminList (address contractAddr) external onlyOwner {\r\n        isAdminListed[contractAddr] = false;\r\n        emit removeAdmin(contractAddr);\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mine\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLpToken\",\"type\":\"bool\"}],\"name\":\"NewMineV3\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferPrepared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mine\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"}],\"name\":\"RemoveMineV3\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_LP_REGISTRY_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_MINE_REGISTRY_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_NEW_OWNER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_OWNER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_SINGLE_REGISTRY_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"addAdminList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mine\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLpToken\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"}],\"name\":\"addMineV3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAdminListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"name\":\"removeAdminList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mine\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLpToken\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"}],\"name\":\"removeMineV3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DODOMineV3Registry","CompilerVersion":"v0.6.9+commit.3e3065ac","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Apache-2.0","Proxy":"0","Implementation":"","SwarmSource":"ipfs://22d0d09592ac9aa796026919600d2ac46c644d99731d38409ad799978d2abdf1"}]}