{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0-only\r\npragma solidity ^0.7.5;\r\n\r\n// @notice Used to create Radicle Link identity claims\r\ncontract Claims {\r\n    /// @notice Emitted on every Radicle Link identity claim\r\n    /// @param addr The account address which made the claim\r\n    event Claimed(address indexed addr);\r\n\r\n    /// @notice Creates a new claim of a Radicle Link identity.\r\n    /// Every new claim invalidates previous ones made with the same account.\r\n    /// The claims have no expiration date and don't need to be renewed.\r\n    /// If either `format` is unsupported or `payload` is malformed as per `format`,\r\n    /// the previous claim is revoked, but a new one isn't created.\r\n    /// Don't send a malformed transactions on purpose, to properly revoke a claim see `format`.\r\n    /// @param format The format of `payload`, currently supported values:\r\n    /// - `1` - `payload` is exactly 20 bytes and contains an SHA-1 Radicle Identity root hash\r\n    /// - `2` - `payload` is exactly 32 bytes and contains an SHA-256 Radicle Identity root hash\r\n    /// To revoke a claim without creating a new one, pass payload `0`,\r\n    /// which is guaranteed to not match any existing identity.\r\n    /// @param payload The claim payload\r\n    function claim(uint256 format, bytes calldata payload) public {\r\n        format;\r\n        payload;\r\n        emit Claimed(msg.sender);\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"format\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Claims","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d02259dcd1c74cdd8930c3bebc1e049bd1388409f9d7b535cc6740d1aecfcc89"}]}