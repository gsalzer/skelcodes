{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.8.1;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n// NOTE: this interface lacks return values for transfer/transferFrom/approve on purpose,\r\n// as we use the SafeERC20 library to check the return value\r\ninterface GeneralERC20 {\r\n\tfunction transfer(address to, uint256 amount) external;\r\n\tfunction transferFrom(address from, address to, uint256 amount) external;\r\n\tfunction approve(address spender, uint256 amount) external;\r\n\tfunction balanceOf(address spender) external view returns (uint);\r\n\tfunction allowance(address owner, address spender) external view returns (uint);\r\n}\r\n\r\nlibrary SafeERC20 {\r\n\tfunction checkSuccess()\r\n\t\tprivate\r\n\t\tpure\r\n\t\treturns (bool)\r\n\t{\r\n\t\tuint256 returnValue = 0;\r\n\r\n\t\tassembly {\r\n\t\t\t// check number of bytes returned from last function call\r\n\t\t\tswitch returndatasize()\r\n\r\n\t\t\t// no bytes returned: assume success\r\n\t\t\tcase 0x0 {\r\n\t\t\t\treturnValue := 1\r\n\t\t\t}\r\n\r\n\t\t\t// 32 bytes returned: check if non-zero\r\n\t\t\tcase 0x20 {\r\n\t\t\t\t// copy 32 bytes into scratch space\r\n\t\t\t\treturndatacopy(0x0, 0x0, 0x20)\r\n\r\n\t\t\t\t// load those bytes into returnValue\r\n\t\t\t\treturnValue := mload(0x0)\r\n\t\t\t}\r\n\r\n\t\t\t// not sure what was returned: don't mark as success\r\n\t\t\tdefault { }\r\n\t\t}\r\n\r\n\t\treturn returnValue != 0;\r\n\t}\r\n\r\n\tfunction transfer(address token, address to, uint256 amount) internal {\r\n\t\tGeneralERC20(token).transfer(to, amount);\r\n\t\trequire(checkSuccess(), \"SafeERC20: transfer failed\");\r\n\t}\r\n\r\n\tfunction transferFrom(address token, address from, address to, uint256 amount) internal {\r\n\t\tGeneralERC20(token).transferFrom(from, to, amount);\r\n\t\trequire(checkSuccess(), \"SafeERC20: transferFrom failed\");\r\n\t}\r\n\r\n\tfunction approve(address token, address spender, uint256 amount) internal {\r\n\t\tGeneralERC20(token).approve(spender, amount);\r\n\t\trequire(checkSuccess(), \"SafeERC20: approve failed\");\r\n\t}\r\n}\r\n\r\n\r\ninterface IStakingPool {\r\n\tfunction ADXToken() external returns (address);\r\n\tfunction enterTo(address recipient, uint amount) external;\r\n}\r\n\r\ncontract GaslessSweeper {\r\n\tfunction sweep(IStakingPool pool, address[] memory depositors) external {\r\n\t\taddress token = pool.ADXToken();\r\n\t\tfor (uint i = 0; i < depositors.length; i++) {\r\n\t\t\tnew GaslessDepositor{ salt: bytes32(0) }(token, pool, depositors[i]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\ncontract GaslessDepositor {\r\n\tconstructor(address token, IStakingPool pool, address depositor) {\r\n\t\tuint amount = IERC20(token).balanceOf(address(this));\r\n\t\tSafeERC20.approve(token, address(pool), amount);\r\n\t\tpool.enterTo(depositor, amount);\r\n\t\tassembly {\r\n\t\t\tselfdestruct(depositor)\r\n\t\t}\r\n\t}\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IStakingPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"depositors\",\"type\":\"address[]\"}],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"GaslessSweeper","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://6be2df1c8a0d227c984321b86efb3db3fe4edb79cf586ae611f9f6e0736b0c1f"}]}