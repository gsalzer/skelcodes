{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >= 0.4.24;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) external;\r\n\tfunction transferFrom(address from, address to, uint value) external;\r\n    function balanceOf(address tokenOwner) constant external returns (uint balance);\r\n    function allowance(address _owner, address _spender) constant external returns (uint remaining); \r\n}\r\n\r\ncontract astatoTokenTransfer {\r\n    \r\n    string public name = 'ASTATO TUSD Pool';\r\n    string public symbol = 'ATPOOL';\r\n    string public comment = 'TUSD <=> ASTATO';\r\n\t\r\n\tfunction exchangeIt(bool _tusd) public payable {\r\n       // _tusd true  => ASTATO to TUSD\r\n       // _tusd false => TSUD to ASTATO     \r\n       token tokenReward = token(0x91D88227cd0A11199cabD163c95eAA54EF8C02A5); //Mainnet\r\n       token tokenSwap = token(0x0000000000085d4780B73119b644AE5ecd22b376); //Mainnet\r\n       //token tokenReward = token(0x5e340d148cAc4DDC8D985c7CF148314032DAC9F8); //Ropsten\r\n       //token tokenSwap = token(0xc51FAfD6137B66501b7716Cd7BCDE8227e751440); //Ropsten\r\n       uint brend = 0; \r\n       if (_tusd) {\r\n          uint maxTokens = (10^18)*6000000; \r\n          tokenReward = token(0x0000000000085d4780B73119b644AE5ecd22b376); //Mainnet\r\n          tokenSwap = token(0x91D88227cd0A11199cabD163c95eAA54EF8C02A5); //Mainnet\r\n          //tokenReward = token(0xc51FAfD6137B66501b7716Cd7BCDE8227e751440); //Ropsten\r\n          //tokenSwap = token(0x5e340d148cAc4DDC8D985c7CF148314032DAC9F8); //Ropsten\r\n          brend = tokenReward.balanceOf(address(this))-(maxTokens-tokenSwap.balanceOf(this)) / maxTokens;   \r\n       }\r\n       require(tokenSwap.allowance(msg.sender, address(this)) > 0, 'Bid too low');       \r\n       uint tokenAmountSwap = tokenSwap.allowance(msg.sender, address(this));\r\n       if (tokenAmountSwap > tokenSwap.balanceOf(msg.sender)) { tokenAmountSwap = tokenSwap.balanceOf(msg.sender);}\r\n       uint fee = tokenAmountSwap / 100;\r\n       if (brend > 0) { brend = brend*tokenAmountSwap; } else { brend = 0;} \r\n       uint tokenAmountReward = tokenAmountSwap+brend-fee;\r\n       require(tokenReward.balanceOf(address(this)) >= tokenAmountReward,'No contract Funds');\r\n       tokenSwap.transferFrom(msg.sender, address(this), tokenAmountSwap);\r\n\t   tokenReward.transfer(msg.sender, tokenAmountReward);\r\n       tokenSwap.transfer(address(0x5D11B9e7b0ec9C9e70b63b266346Bc9136eEd523), fee);        \r\n\t}\t\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tusd\",\"type\":\"bool\"}],\"name\":\"exchangeIt\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"comment\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"astatoTokenTransfer","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://4e19abe59848044531267d9efe1684360518d6f803e491281ab01a94f49b988d"}]}