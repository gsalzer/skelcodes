{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.12;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\ncontract MultiCall {\r\n    \r\n    struct Call {\r\n        address to;\r\n        bytes data;\r\n    }\r\n    \r\n   function multicall(Call[] memory calls) public returns (bytes[] memory results) {\r\n        results = new bytes[](calls.length);\r\n        for (uint i = 0; i < calls.length; i++) {\r\n            (, results[i]) = calls[i].to.call(calls[i].data);\r\n        }\r\n    }\r\n    \r\n    \r\n    // be careful with calls.length == 0\r\n    function multicallWithGasLimitation(Call[] memory calls, uint256 gasBuffer) public returns (bytes[] memory results, uint256 lastSuccessIndex) {\r\n        results = new bytes[](calls.length);\r\n        for (uint i = 0; i < calls.length; i++) {\r\n            (, results[i]) = calls[i].to.call(calls[i].data);\r\n            if (gasleft() < gasBuffer) {\r\n                return (results, i);\r\n            }\r\n        }\r\n        return (results, calls.length - 1);\r\n    }\r\n    \r\n   function multicallWithGas(Call[] memory calls) public returns (bytes[] memory results, uint256[] memory gasUsed) {\r\n        results = new bytes[](calls.length);\r\n        gasUsed = new uint256[](calls.length);\r\n        for (uint i = 0; i < calls.length; i++) {\r\n            uint256 initialGas = gasleft();\r\n            (, results[i]) = calls[i].to.call(calls[i].data);\r\n            gasUsed[i] = initialGas - gasleft();\r\n        }\r\n    }\r\n    \r\n    function gaslimit() external view returns (uint256) {\r\n        return block.gaslimit;\r\n    }\r\n    \r\n    function gasLeft() external view returns (uint256) {\r\n        return gasleft();\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"name\":\"gasLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gaslimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCall.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCall.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multicallWithGas\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"gasUsed\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCall.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"gasBuffer\",\"type\":\"uint256\"}],\"name\":\"multicallWithGasLimitation\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"lastSuccessIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MultiCall","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://efad3ce6e4c3fa3d682492687ed360a5f08a7c68acdda81b76c025256dc151b3"}]}