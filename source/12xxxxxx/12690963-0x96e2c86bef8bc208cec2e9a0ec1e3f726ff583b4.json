{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Share.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\n/* Interface to allow shared access to edit parameters of a particular token.\\n\\n   To be allowed access, must be an owner of another Deafbeef token.\\n\\n   Signature can authenticate them on the deafbeef.com DAPP, to allow these\\n   editors to perform off-chain previews of parameter changes without gas cost.\\n\\n   If editors have 'allowCommit' privilege, they can also commit those previews\\n   permanently with setParams().\\n\\n*/\\n\\npragma solidity >=0.6.0 <0.8.2;\\n\\nabstract contract  extDeafbeef721  {\\n  function numSeries() public pure virtual returns (uint256) ;\\n  function mint(uint256 sid, address to) public virtual returns (uint256 _tokenId);\\n  function setPrice(uint256 sid, uint256 p) public virtual;\\n  function setTokenParam(uint256 tokenID, uint256 i, uint32 v) public virtual;\\n  function ownerOf(uint256 tokenId) external virtual view returns (address owner);\\n}\\n\\ncontract Share {\\n  extDeafbeef721 public deafbeef;\\n  address admin_address;\\n  uint256 public sharedID;\\n  bool public allowCommit;\\n  \\n  event ParamsChanged(uint256 tokenID, uint32 p0,uint32 p1,uint32 p2,uint32 p3,uint32 p4,uint32 p5,uint32 p6);\\n  event GrantAccess(address a);\\n  event RevokeAccess(address a);  \\n\\n  //Optionally, limit commits: once per address in 24hr period\\n  \\n  //each tokenID can have up to 3 editor addresses\\n  mapping(address => uint256) lastUpdate;\\n  mapping(address => bool) allowList;\\n  \\n  //only owners of other Deafbeef tokens are allowed to make commits\\n  modifier requireCommiter(uint256 tid) {\\n    require(msg.sender == deafbeef.ownerOf(tid) || allowList[msg.sender]);\\n    _;\\n  }\\n  \\n  modifier requireAdmin() {\\n    require(admin_address == msg.sender,\\\"Requires admin privileges\\\");\\n    _;\\n  }\\n  \\n  constructor(address _contract_address) {\\n    deafbeef = extDeafbeef721(_contract_address);\\n    admin_address = msg.sender;\\n    allowCommit = true;\\n  }\\n\\n  //Change the contract address this applies to. Probably never needed\\n  function setDeafbeef(address _contract_address)  public requireAdmin virtual {\\n    deafbeef = extDeafbeef721(_contract_address);    \\n  }\\n\\n  function onAllowList(address a) public view returns(bool) {\\n    return allowList[a];\\n  }\\n  \\n  function grantAccess(address a)  public requireAdmin virtual {\\n    if (!allowList[a]) {\\n      allowList[a] = true;\\n      emit GrantAccess(a);\\n    }\\n  }\\n\\n  function revokeAccess(address a)  public requireAdmin virtual {\\n    if (allowList[a]) {\\n      allowList[a] = false;\\n      emit RevokeAccess(a);\\n    }\\n  }\\n\\n  //Change the token ID that can be edited\\n  function setSharedID(uint256 tid) public requireAdmin virtual {\\n    sharedID = tid;\\n  }\\n\\n  //Enable/Disable parameter commits from anyone except owner\\n  function setEnabled(bool e) public requireAdmin virtual {\\n    allowCommit = e;\\n  }\\n  \\n  //optionally include rate limiting\\n  function setParams(uint256 ownedID, uint32[] memory v) public requireCommiter(ownedID) virtual {\\n    require(allowCommit==true,\\\"Committing disabled\\\");\\n    require(v.length==7,\\\"Must have all parameters in order from 0-6\\\");\\n    \\n    //    require(now - lastUpdate[msg.sender] > 60*5, \\\"Must wait 5 minutes between commits\\\");\\n    \\n    for (uint j=0;j<v.length;j++) {\\n      deafbeef.setTokenParam(sharedID,j,v[j]);\\n    }\\n    emit ParamsChanged(sharedID,v[0],v[1],v[2],v[3],v[4],v[5],v[6]);\\n    //    lastUpdate[msg.sender] = now;\\n  }\\n\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"GrantAccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"p0\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"p1\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"p2\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"p3\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"p4\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"p5\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"p6\",\"type\":\"uint32\"}],\"name\":\"ParamsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"RevokeAccess\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allowCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deafbeef\",\"outputs\":[{\"internalType\":\"contract extDeafbeef721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"grantAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"onAllowList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"revokeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract_address\",\"type\":\"address\"}],\"name\":\"setDeafbeef\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"e\",\"type\":\"bool\"}],\"name\":\"setEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ownedID\",\"type\":\"uint256\"},{\"internalType\":\"uint32[]\",\"name\":\"v\",\"type\":\"uint32[]\"}],\"name\":\"setParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tid\",\"type\":\"uint256\"}],\"name\":\"setSharedID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharedID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Share","CompilerVersion":"v0.7.3+commit.9bfce1f6","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000d754937672300ae6708a51229112de4017810934","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}