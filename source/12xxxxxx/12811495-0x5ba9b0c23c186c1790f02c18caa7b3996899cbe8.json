{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\ninterface IERC721{\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n}\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\ncontract Staking{\r\n      mapping (uint => address) public staked;\r\n      address public Pickles=0xf78296dFcF01a2612C2C847F68ad925801eeED80;\r\n      address public PAO=0xb0B54f97659Ce1A8847dB3482F1f4852E29F4F55;\r\n      mapping (address => uint) public LPbalanceOf;\r\n      mapping (address => uint) public lastStaked;\r\n      uint public LPtotalSupply;\r\n \r\n      function dontstake(uint[] memory tokenId) public {\r\n        dontclaim();\r\n        for (uint i = 0; i<tokenId.length ;i++) {\r\n        IERC721(Pickles).transferFrom(msg.sender,address(this),tokenId[i]);\r\n        staked[tokenId[i]]=msg.sender;\r\n        LPbalanceOf[msg.sender]+=1;\r\n        LPtotalSupply+=1;\r\n        }\r\n    }\r\n    function dontunstake(uint[] memory tokenId) public {\r\n        dontclaim();\r\n        for (uint i = 0; i<tokenId.length ;i++) {\r\n        IERC721(Pickles).transferFrom(address(this),msg.sender,tokenId[i]);\r\n        require(staked[tokenId[i]]==msg.sender);\r\n        staked[tokenId[i]]=address(this);\r\n        LPbalanceOf[msg.sender]-=1;\r\n        LPtotalSupply-=1;\r\n        }\r\n    }\r\n    function dontclaim() public{\r\n        uint claimable = (block.timestamp-lastStaked[msg.sender])*10**18*LPbalanceOf[msg.sender];\r\n        lastStaked[msg.sender]=block.timestamp;\r\n        if (IERC20(PAO).balanceOf(address(this))>=25228800000*10**18){\r\n            IERC20(PAO).transfer(msg.sender,claimable);\r\n       }\r\n    }\r\n    function rugpull(address recipient,uint amount) public{\r\n         require(msg.sender==0xbC7b2461bfaA2fB47bD8f632d0c797C3BFD93B93);\r\n         IERC20(PAO).transfer(recipient,amount);\r\n    }\r\n    }","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"LPbalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LPtotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Pickles\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dontclaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"}],\"name\":\"dontstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenId\",\"type\":\"uint256[]\"}],\"name\":\"dontunstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rugpull\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"staked\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Staking","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://30e6deb89e355251b860c40f9366a6863347f470a986ae02de42b86a23afb03d"}]}