{"status":"1","message":"OK","result":[{"SourceCode":"// This governance contract calculcates total STBZ held by a particular address\r\n// It first gets the STBZ tokens held in wallet\r\n// Then STBZ held in staking pool\r\n// Then LP tokens held in wallet to calculate STBZ held by user\r\n// Then LP tokens held in operator contract pool\r\n// Then STBZ as unclaimed rewards\r\n// Finally STBZ in stabinol staker\r\n\r\npragma solidity =0.6.6;\r\n\r\ninterface Operator {\r\n    function poolBalance(uint256, address) external view returns (uint256);\r\n    function poolLength() external view returns (uint256);\r\n    function rewardEarned(uint256, address) external view returns (uint256);\r\n}\r\n\r\ninterface StakingPool {\r\n    function poolBalance(address) external view returns (uint256);\r\n}\r\n\r\ninterface StabinolStaker{\r\n    function getSTBZBalance(address _user) external view returns (uint256);\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract StabilizeGovernanceCalculator {\r\n    \r\n    address constant OPERATOR_ADDRESS = address(0xEe9156C93ebB836513968F92B4A67721f3cEa08a);\r\n    address constant STBZ_ADDRESS = address(0xB987D48Ed8f2C468D52D6405624EADBa5e76d723);\r\n    address constant UNILP_ADDRESS = address(0xDB28312a8d26D59978D9B86cA185707B1A26725b);\r\n    address constant STAKING_ADDRESS = address(0x8c17bE13e034f7fa2a6496bC83B6010be6305204);\r\n    address constant STABINOL_ADDRESS = address(0x4d44545cB6AE1f0Efb972be59379c5ae406E676C);\r\n    \r\n    function calculateTotalSTBZ(address _address) external view returns (uint256) {\r\n        IERC20 stbz = IERC20(STBZ_ADDRESS);\r\n        uint256 mySTBZ = stbz.balanceOf(_address); // First get the token balance of STBZ in the wallet\r\n        mySTBZ = mySTBZ + StakingPool(STAKING_ADDRESS).poolBalance(_address); // Get STBZ being staked\r\n        IERC20 lp = IERC20(UNILP_ADDRESS);\r\n        uint256 myLP = lp.balanceOf(_address); // Get amount of LP in wallet\r\n        myLP = myLP + Operator(OPERATOR_ADDRESS).poolBalance(0, _address);\r\n        // Now we have our LP balance and must calculate how much STBZ we have in it\r\n        uint256 stbzInLP = stbz.balanceOf(UNILP_ADDRESS);\r\n        stbzInLP = stbzInLP * myLP / lp.totalSupply();\r\n        mySTBZ = mySTBZ + stbzInLP;\r\n        // Now calculate the unclaimed rewards in all the pools\r\n        uint256 _poolLength = Operator(OPERATOR_ADDRESS).poolLength();\r\n        for(uint256 i = 0; i < _poolLength; i++){\r\n            mySTBZ = mySTBZ + Operator(OPERATOR_ADDRESS).rewardEarned(i, _address);\r\n        }\r\n        // Now calculate the STBZ in the stabinol staker\r\n        mySTBZ = mySTBZ + StabinolStaker(STABINOL_ADDRESS).getSTBZBalance(_address);\r\n        return mySTBZ;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"calculateTotalSTBZ\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"StabilizeGovernanceCalculator","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://88a90bd3b1202ee6bc6c249cb9f16510e2de2abd9e8d8dbea467426787d31bc4"}]}