{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.8.6;\r\n\r\ninterface IERC20Metadata {\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ninterface IERC20TotalSupply {\r\n    function totalSupply() external view returns (uint256);\r\n}\r\n\r\ninterface IERC20BalanceOf {\r\n    function balanceOf(address) external view returns (uint256);\r\n}\r\n\r\ninterface IERC20Allowance {\r\n    function allowance(address, address) external view returns (uint256);\r\n}\r\n\r\n/// @author 0age\r\ncontract ERC20Helper {\r\n    function metadataSafe(IERC20Metadata token) external view returns (bool tokenExists, bool nameOK, string memory name, bool symbolOK, string memory symbol, bool decimalsOK, uint8 decimals) {\r\n        tokenExists = _hasCode(address(token));\r\n        if (tokenExists) {\r\n            bytes memory returnData;\r\n            (nameOK, returnData) = address(token).staticcall{gas: gasleft() / 2}(abi.encodeWithSelector(token.name.selector));\r\n            if (nameOK && returnData.length >= 64) {\r\n                name = abi.decode(returnData, (string));\r\n            } else {\r\n                nameOK = false;\r\n            }\r\n            \r\n            (symbolOK, returnData) = address(token).staticcall{gas: gasleft() / 2}(abi.encodeWithSelector(token.symbol.selector));\r\n            if (symbolOK && returnData.length >= 64) {\r\n                symbol = abi.decode(returnData, (string));\r\n            } else {\r\n                symbolOK = false;\r\n            }\r\n    \r\n            (decimalsOK, returnData) = address(token).staticcall{gas: gasleft() / 2}(abi.encodeWithSelector(token.decimals.selector));\r\n            if (decimalsOK && returnData.length >= 32) {\r\n                decimals = abi.decode(returnData, (uint8));\r\n            } else {\r\n                decimalsOK = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function totalSupplySafe(IERC20TotalSupply token) external view returns (bool tokenExists, bool ok, uint256 totalSupply) {\r\n        tokenExists = _hasCode(address(token));\r\n        if (tokenExists) {\r\n            bytes memory returnData;\r\n            (ok, returnData) = address(token).staticcall{gas: gasleft() / 2}(abi.encodeWithSelector(token.totalSupply.selector));\r\n            if (ok && returnData.length >= 32) {\r\n                totalSupply = abi.decode(returnData, (uint256));\r\n            } else {\r\n                ok = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function balanceOfSafe(IERC20BalanceOf token, address account) external view returns (bool tokenExists, bool ok, uint256 balance) {\r\n        tokenExists = _hasCode(address(token));\r\n        if (tokenExists) {\r\n            bytes memory returnData;\r\n            (ok, returnData) = address(token).staticcall{gas: gasleft() / 2}(abi.encodeWithSelector(token.balanceOf.selector, account));\r\n            if (ok && returnData.length >= 32) {\r\n                balance = abi.decode(returnData, (uint256));\r\n            } else {\r\n                ok = false;\r\n            }\r\n        }\r\n    }\r\n    \r\n    function allowanceSafe(IERC20Allowance token, address owner, address spender) external view returns (bool tokenExists, bool ok, uint256 allowance) {\r\n        tokenExists = _hasCode(address(token));\r\n        if (tokenExists) {\r\n            bytes memory returnData;\r\n            (ok, returnData) = address(token).staticcall{gas: gasleft() / 2}(abi.encodeWithSelector(token.allowance.selector, owner, spender));\r\n            if (ok && returnData.length >= 32) {\r\n                allowance = abi.decode(returnData, (uint256));\r\n            } else {\r\n                ok = false;\r\n            }\r\n        }\r\n    }\r\n    \r\n\tfunction _hasCode(address addr) internal view returns (bool) {\r\n      uint256 size;\r\n      assembly { size := extcodesize(addr) }\r\n      return size > 0;\r\n\t}\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20Allowance\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowanceSafe\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"tokenExists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20BalanceOf\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOfSafe\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"tokenExists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"metadataSafe\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"tokenExists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"nameOK\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"symbolOK\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"decimalsOK\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20TotalSupply\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totalSupplySafe\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"tokenExists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ERC20Helper","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://6667304e1b6c2a51a80c5371db8498e684bfc75da0021eee53ec3fbae4f80434"}]}