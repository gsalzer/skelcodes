{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n// From https://ethereum.stackexchange.com/a/88292\r\ncontract Ownable {\r\n\r\n    address private owner;\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"Ownable: You are not the owner, Bye.\");\r\n        _;\r\n    }\r\n\r\n    constructor () public {\r\n        owner = msg.sender;\r\n    }\r\n}\r\n\r\ncontract Upgradable is Ownable {\r\n\r\n    address private newAddress;\r\n\r\n    modifier notUpgraded {\r\n\r\n        require(newAddress == address(0), \"Contract has been upgraded\" );\r\n        _;\r\n    }\r\n\r\n    function upgrade(address _newAddress) public onlyOwner notUpgraded {\r\n\r\n        newAddress = _newAddress;\r\n\r\n    }\r\n\r\n    function getUpgradedAddress() public view returns (address) {\r\n\r\n        return newAddress;\r\n\r\n    }\r\n\r\n}\r\n\r\ncontract Claims is Ownable, Upgradable {\r\n\r\n    //    uint claimCount = 0;\r\n\r\n    event Claim(string publicHash, string publicLocator, string privateHash);\r\n\r\n    function claim(string memory publicHash, string memory publicLocator, string memory privateHash) public onlyOwner notUpgraded {\r\n\r\n        //        claimCount += 1;\r\n\r\n        emit Claim(publicHash, publicLocator, privateHash);\r\n\r\n    }\r\n\r\n    //    function getClaimCount() public view returns (uint) {\r\n    //\r\n    //        return claimCount;\r\n    //\r\n    //    }\r\n\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"publicHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"publicLocator\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"privateHash\",\"type\":\"string\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"publicHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"publicLocator\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"privateHash\",\"type\":\"string\"}],\"name\":\"claim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUpgradedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Claims","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://fb0048012267bc7156b9931ccdf9061977d16aff57bafe3c3492e63489b6daf9"}]}