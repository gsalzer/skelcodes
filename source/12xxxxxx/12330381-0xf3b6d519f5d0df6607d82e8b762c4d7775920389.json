{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/BatchEth.sol\": {\r\n      \"content\": \"pragma solidity 0.7.3;\\n\\n\\ncontract BatchEth {\\n\\n    function batchTransfer(\\n        address[] memory _tos,\\n        uint256[] memory _amounts\\n    ) \\n        public\\n        payable\\n    {\\n        for (uint256 i = 0; i < _tos.length; i++) {\\n            address payable currentTo = payable(_tos[i]);\\n            \\n            (bool success, ) = currentTo.call{ value: _amounts[i]}(\\\"\\\");\\n            require(\\n                success,\\n                \\\"batchTransfer::Transfer Error. Unable to send.\\\"\\n            );\\n        }\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tos\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"BatchEth","CompilerVersion":"v0.7.3+commit.9bfce1f6","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}