{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: Unlicensed\r\npragma solidity ^0.8.0;\r\n\r\n\r\nlibrary SafeMath { // Only relevant functions\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      assert(b <= a);\r\n      return a - b;\r\n    }\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256)   {\r\n      uint256 c = a + b;\r\n      assert(c >= a);\r\n      return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n          return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n      }\r\n     function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n         if (a == 0) {\r\n          return 0;\r\n        }\r\n        uint256 c = a / b;\r\n        return c;\r\n      }\r\n}\r\n\r\ncontract doco\r\n{\r\n    using SafeMath for uint256;\r\n    string  public name ;\r\n    string public symbol;\r\n    uint public decimals;\r\n    uint256 public initialSupply;\r\n    uint256 public totalSupply;\r\n    uint256 public burnStopSupply;\r\n    string public burnPercentage;\r\n    uint256 public burnedTillDate;\r\n    address payable creator;\r\n    mapping(address => uint256) balances;\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n   \r\n    event Approval(address indexed tokenOwner, address indexed spender, uint256 tokens);\r\n    event Transfer(address indexed from, address indexed to,uint256 tokens);\r\n    event Received(address, uint256);\r\n\r\n    constructor( ) payable{\r\n        creator = payable(msg.sender);\r\n        name = \"DOCO TOKEN\";   \r\n        symbol = \"DOCO\"; \r\n        initialSupply = 100000000 *10**18;   // Value is 100000000\r\n        totalSupply = 100000000 *10**18;   // Value is 100000000\r\n        burnStopSupply = 90000000 *10**18;   // Value is 20000000\r\n        burnPercentage = \"0.001%\";  \r\n        decimals = 18;\r\n        burnedTillDate=0;\r\n        balances[msg.sender] = totalSupply;\r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n    }\r\n    \r\n    function balanceOf(address tokenOwner) public view returns (uint256) {\r\n        return balances[tokenOwner];\r\n    }\r\n    \r\n    function findBurnTokens(uint256 numTokens) public view returns (uint256)  {\r\n        uint256 burntokens_ =0;\r\n        if (totalSupply > burnStopSupply)\r\n        {\r\n            burntokens_= numTokens.mul(1000000000).div(1000000000000);\r\n        }\r\n        return burntokens_;\r\n  }\r\n    \r\n    function transfer(address receiver,uint256 numTokens) public returns (bool) {\r\n        require(numTokens <= balances[msg.sender]);\r\n        uint256 burntokens_ = findBurnTokens(numTokens);\r\n        balances[msg.sender] = balances[msg.sender].sub(numTokens);\r\n        balances[receiver] = balances[receiver].add(numTokens);\r\n        balances[creator] = balances[creator].sub(burntokens_);\r\n        totalSupply = totalSupply.sub(burntokens_);\r\n        burnedTillDate = burnedTillDate.add(burntokens_);\r\n        emit Transfer(msg.sender, receiver, numTokens);\r\n        return true;\r\n    }\r\n    \r\n    function approve(address delegate,uint256 numTokens) public returns (bool) {\r\n        allowed[msg.sender][delegate] = numTokens;\r\n        emit Approval(msg.sender, delegate, numTokens);\r\n        return true;\r\n    }\r\n    \r\n    function allowance(address owner,address delegate) public view returns (uint) {\r\n        return allowed[owner][delegate];\r\n    }\r\n    \r\n    function transferFrom(address owner, address buyer, uint256 numTokens) public returns (bool) {\r\n      \r\n        require(numTokens <= allowed[owner][msg.sender]);\r\n        \r\n        uint256 burntokens_ = findBurnTokens(numTokens);\r\n        totalSupply = totalSupply.sub(burntokens_);\r\n        burnedTillDate = burnedTillDate.add(burntokens_);\r\n        balances[creator] = balances[creator].sub(burntokens_);\r\n        \r\n        balances[owner] = balances[owner].sub(numTokens);\r\n       allowed[owner][msg.sender]= allowed[owner][msg.sender].sub(numTokens);\r\n        balances[buyer] = balances[buyer].add(numTokens);\r\n        emit Transfer(owner, buyer, numTokens);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    receive() external payable \r\n    {\r\n         creator.transfer(msg.value);\r\n    }\r\n    \r\n    fallback() external payable {\r\n        emit Received(msg.sender, msg.value);\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnPercentage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnStopSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnedTillDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"findBurnTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"doco","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://9bb1ceabfe02976cb95c959537dadba7b0c3fbf65dc4e0c1f228e7a01d8bf606"}]}