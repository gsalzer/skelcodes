{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.8.0;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Etheria Helper v0.9.0\r\n//\r\n// https://github.com/bokkypoobah/TokenToolz\r\n//\r\n// Deployed to 0x7d0cBA86128957633156FBFF6A88D9A278eF32e2\r\n//\r\n// SPDX-License-Identifier: MIT\r\n//\r\n// Enjoy.\r\n//\r\n// (c) BokkyPooBah / Bok Consulting Pty Ltd 2021. The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\ninterface IEtheria {\r\n    function getOwner(uint8 col, uint8 row) external view returns(address);\r\n    function getName(uint8 col, uint8 row) external view returns(string memory);\r\n    function getStatus(uint8 col, uint8 row) external view returns(string memory);\r\n    function getLastFarm(uint8 col, uint8 row) external view returns (uint);\r\n    // function getBlocks(uint8 col, uint8 row) external view returns (int8[5][] memory);\r\n}\r\n\r\ncontract EtheriaHelper {\r\n\r\n    uint private constant SIZE = 33;\r\n    \r\n    IEtheria public constant etheria = IEtheria(0xB21f8684f23Dbb1008508B4DE91a0aaEDEbdB7E4);\r\n    \r\n    function owners() external view returns(address[] memory ) {\r\n        address[] memory result = new address[](SIZE * SIZE);\r\n        for (uint8 row = 0; row < SIZE; row++) {\r\n            for (uint8 col = 0; col < SIZE; col++) {\r\n                result[row * SIZE + col] = etheria.getOwner(col, row);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function names() external view returns(string[] memory ) {\r\n        string[] memory result = new string[](SIZE * SIZE);\r\n        for (uint8 row = 0; row < SIZE; row++) {\r\n            for (uint8 col = 0; col < SIZE; col++) {\r\n                result[row * SIZE + col] = etheria.getName(col, row);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function statuses() external view returns(string[] memory ) {\r\n        string[] memory result = new string[](SIZE * SIZE);\r\n        for (uint8 row = 0; row < SIZE; row++) {\r\n            for (uint8 col = 0; col < SIZE; col++) {\r\n                result[row * SIZE + col] = etheria.getStatus(col, row);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function lastFarms() external view returns(uint[] memory ) {\r\n        uint[] memory result = new uint[](SIZE * SIZE);\r\n        for (uint8 row = 0; row < SIZE; row++) {\r\n            for (uint8 col = 0; col < SIZE; col++) {\r\n                result[row * SIZE + col] = etheria.getLastFarm(col, row);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"name\":\"etheria\",\"outputs\":[{\"internalType\":\"contract IEtheria\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastFarms\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"names\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"statuses\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"EtheriaHelper","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://c44bec33aed2a571fab63c98edfe786bc8d1cf1fd6905a5afd0757996eacc459"}]}