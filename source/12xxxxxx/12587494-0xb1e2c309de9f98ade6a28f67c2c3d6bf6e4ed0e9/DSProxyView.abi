[
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_proxy",
                "type": "address"
            }
        ],
        "name": "checkDSGuardOwner",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_user",
                "type": "address"
            }
        ],
        "name": "getProxiesAndCheckDSGuard",
        "outputs": [
            {
                "components": [
                    {
                        "internalType": "address",
                        "name": "proxy",
                        "type": "address"
                    },
                    {
                        "internalType": "bool",
                        "name": "correctDSGuardOwner",
                        "type": "bool"
                    },
                    {
                        "internalType": "bool",
                        "name": "isUserOwner",
                        "type": "bool"
                    }
                ],
                "internalType": "struct DSProxyView.ProxyData[]",
                "name": "proxies",
                "type": "tuple[]"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_user",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_proxy",
                "type": "address"
            }
        ],
        "name": "isUserProxyOwner",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    }
]