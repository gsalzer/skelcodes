{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Beeeef Registry\r\n//\r\n// https://github.com/bokkypoobah/BeeeefRegistry\r\n//\r\n// Deployed to 0xbEEeEfffE871CE4b6aEAc8717194913f2bc27577\r\n//\r\n// Enjoy.\r\n//\r\n// (c) BokkyPooBah / Bok Consulting Pty Ltd 2021. The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\ncontract Curated {\r\n    address public curator;\r\n\r\n    event CuratorTransferred(address indexed from, address indexed to);\r\n\r\n    modifier onlyCurator {\r\n        require(msg.sender == curator);\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        curator = msg.sender;\r\n    }\r\n    function transferCurator(address _curator) public onlyCurator {\r\n        emit CuratorTransferred(curator, _curator);\r\n        curator = _curator;\r\n    }\r\n}\r\n\r\n\r\nenum Permission { None, View, ComposeWith, Permission3, Permission4, Permission5, Permission6, Permission7 }\r\nenum Curation { None, LoadByDefault, DisableView, DisableComposeWith, Curation4, Curation5, Curation6, Curation7 }\r\n\r\n\r\nlibrary Entries {\r\n    struct Entry {\r\n        uint index;\r\n        uint64 timestamp;\r\n        address account;\r\n        address token;\r\n        Permission permission;\r\n        Curation curation;\r\n    }\r\n    struct Data {\r\n        bool initialised;\r\n        mapping(bytes32 => Entry) entries;\r\n        bytes32[] index;\r\n    }\r\n\r\n    event EntryAdded(bytes32 key, address account, address token, Permission permission);\r\n    event EntryRemoved(bytes32 key, address account, address token);\r\n    event EntryUpdated(bytes32 key, address account, address token, Permission permission);\r\n    event EntryCurated(bytes32 key, address account, address token, Curation curation);\r\n\r\n    function init(Data storage self) internal {\r\n        require(!self.initialised);\r\n        self.initialised = true;\r\n    }\r\n    function generateKey(address account, address token) internal view returns (bytes32 hash) {\r\n        return keccak256(abi.encodePacked(address(this), account, token));\r\n    }\r\n    function hasKey(Data storage self, bytes32 key) internal view returns (bool) {\r\n        return self.entries[key].timestamp > 0;\r\n    }\r\n    function add(Data storage self, address account, address token, Permission permission) internal {\r\n        bytes32 key = generateKey(account, token);\r\n        require(self.entries[key].timestamp == 0);\r\n        self.index.push(key);\r\n        self.entries[key] = Entry(self.index.length - 1, uint64(block.timestamp), account, token, permission, Curation(0));\r\n        emit EntryAdded(key, account, token, permission);\r\n    }\r\n    function remove(Data storage self, address account, address token) internal {\r\n        bytes32 key = generateKey(account, token);\r\n        require(self.entries[key].timestamp > 0);\r\n        uint removeIndex = self.entries[key].index;\r\n        emit EntryRemoved(key, account, token);\r\n        uint lastIndex = self.index.length - 1;\r\n        bytes32 lastIndexKey = self.index[lastIndex];\r\n        self.index[removeIndex] = lastIndexKey;\r\n        self.entries[lastIndexKey].index = removeIndex;\r\n        delete self.entries[key];\r\n        if (self.index.length > 0) {\r\n            self.index.pop();\r\n        }\r\n    }\r\n    function update(Data storage self, address account, address token, Permission permission) internal {\r\n        bytes32 key = generateKey(account, token);\r\n        Entry storage entry = self.entries[key];\r\n        require(entry.timestamp > 0);\r\n        entry.timestamp = uint64(block.timestamp);\r\n        entry.permission = permission;\r\n        emit EntryUpdated(key, account, token, permission);\r\n    }\r\n    function curate(Data storage self, address account, address token, Curation curation) internal {\r\n        bytes32 key = generateKey(account, token);\r\n        Entry storage entry = self.entries[key];\r\n        require(entry.timestamp > 0);\r\n        entry.curation = curation;\r\n        emit EntryCurated(key, account, token, curation);\r\n    }\r\n    function length(Data storage self) internal view returns (uint) {\r\n        return self.index.length;\r\n    }\r\n}\r\n\r\n\r\ncontract BeeeefRegistry is Curated {\r\n    using Entries for Entries.Data;\r\n    using Entries for Entries.Entry;\r\n\r\n    Entries.Data private entries;\r\n\r\n    event EntryAdded(bytes32 key, address account, address token, uint permission);\r\n    event EntryRemoved(bytes32 key, address account, address token);\r\n    event EntryUpdated(bytes32 key, address account, address token, uint permission);\r\n    event EntryCurated(bytes32 key, address account, address token, Curation curation);\r\n\r\n    constructor() {\r\n        entries.init();\r\n    }\r\n\r\n    function addEntry(address token, Permission permission) public {\r\n        entries.add(msg.sender, token, permission);\r\n    }\r\n    function removeEntry(address token) public {\r\n        entries.remove(msg.sender, token);\r\n    }\r\n    function updateEntry(address token, Permission permission) public {\r\n        entries.update(msg.sender, token, permission);\r\n    }\r\n    function curateEntry(address account, address token, Curation curation) public onlyCurator {\r\n        entries.curate(account, token, curation);\r\n    }\r\n\r\n    function entriesLength() public view returns (uint) {\r\n        return entries.length();\r\n    }\r\n    function getEntryByIndex(uint i) public view returns (address _account, address _token, Permission _permission) {\r\n        require(i < entries.length(), \"getEntryByIndex: Invalid index\");\r\n        Entries.Entry memory entry = entries.entries[entries.index[i]];\r\n        return (entry.account, entry.token, entry.permission);\r\n    }\r\n    function getEntries() public view returns (address[] memory accounts, address[] memory tokens, Permission[] memory permissions, Curation[] memory curations) {\r\n        uint length = entries.length();\r\n        accounts = new address[](length);\r\n        tokens = new address[](length);\r\n        permissions = new Permission[](length);\r\n        curations = new Curation[](length);\r\n        for (uint i = 0; i < length; i++) {\r\n            Entries.Entry memory entry = entries.entries[entries.index[i]];\r\n            accounts[i] = entry.account;\r\n            tokens[i] = entry.token;\r\n            permissions[i] = entry.permission;\r\n            curations[i] = entry.curation;\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"CuratorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"permission\",\"type\":\"uint256\"}],\"name\":\"EntryAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Curation\",\"name\":\"curation\",\"type\":\"uint8\"}],\"name\":\"EntryCurated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"EntryRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"permission\",\"type\":\"uint256\"}],\"name\":\"EntryUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum Permission\",\"name\":\"permission\",\"type\":\"uint8\"}],\"name\":\"addEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum Curation\",\"name\":\"curation\",\"type\":\"uint8\"}],\"name\":\"curateEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entriesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"enum Permission[]\",\"name\":\"permissions\",\"type\":\"uint8[]\"},{\"internalType\":\"enum Curation[]\",\"name\":\"curations\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getEntryByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"enum Permission\",\"name\":\"_permission\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_curator\",\"type\":\"address\"}],\"name\":\"transferCurator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum Permission\",\"name\":\"permission\",\"type\":\"uint8\"}],\"name\":\"updateEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"BeeeefRegistry","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d3b6d63f8c66d90260465f1f80249aa0f0e4adf6e054a3593a50828692e9dc37"}]}