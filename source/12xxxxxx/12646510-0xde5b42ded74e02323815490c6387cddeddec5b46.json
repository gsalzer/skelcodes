{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2020-09-11\r\n*/\r\n\r\npragma solidity 0.5.17;\r\n\r\n\r\ncontract testArrayEvent {\r\n    \r\n    uint256[] growableUintsArray;\r\n    bool[] growableBoolArray;\r\n    address[] growableAddressArray;\r\n    event arraysFixed(uint256[3] numbers, address[2] addresses, bool[4] bools);\r\n    event arraysDynamic(uint256[] numbers, address[] addresses, bool[] bools);\r\n    \r\n    constructor () public {}    \r\n    \r\n    function emitEventFixedArray() public {\r\n\r\n        uint256 one = 1;\r\n        uint256 two = 2;\r\n        uint256 threehundredand4 = 304;\r\n        uint256[3] memory  uints = [one,two,threehundredand4];\r\n        bool[4] memory bools = [true,false,true,false];\r\n        address[2] memory addresses = [address(this), msg.sender];\r\n\r\n        emit arraysFixed(uints,  addresses,  bools);\r\n    }\r\n    \r\n    function emitEventDynamicArray(uint slots) public {\r\n\r\n        uint256 count = 1;\r\n        bool current = true;\r\n        while (count <= slots){\r\n            growableUintsArray.push(count);\r\n            growableBoolArray.push(current);\r\n            current = !current;\r\n            growableAddressArray.push(block.coinbase);\r\n            count++;\r\n        }\r\n\r\n        emit arraysDynamic(growableUintsArray,  growableAddressArray,  growableBoolArray);\r\n    }\r\n    \r\n    \r\n    \r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"numbers\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"bools\",\"type\":\"bool[]\"}],\"name\":\"arraysDynamic\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"numbers\",\"type\":\"uint256[3]\"},{\"indexed\":false,\"internalType\":\"address[2]\",\"name\":\"addresses\",\"type\":\"address[2]\"},{\"indexed\":false,\"internalType\":\"bool[4]\",\"name\":\"bools\",\"type\":\"bool[4]\"}],\"name\":\"arraysFixed\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"slots\",\"type\":\"uint256\"}],\"name\":\"emitEventDynamicArray\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"emitEventFixedArray\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"testArrayEvent","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://9c0482b144bd53819472160b2fefcc7bc36cc82943b0072c31d3328bef693504"}]}