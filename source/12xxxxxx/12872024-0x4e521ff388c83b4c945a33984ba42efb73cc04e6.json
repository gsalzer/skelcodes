{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/WrapNZapFactory.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.1;\\n\\nimport \\\"./WrapNZap.sol\\\";\\n\\ncontract WrapNZapFactory {\\n    event NewWrapNZap(address zappee, address wrapper, address WrapNZap);\\n\\n    WrapNZap[] public wrapnzaps;\\n    uint256 public wrapnzapCount;\\n\\n    function create(address _zappee, address _wrapper) external {\\n        require(\\n            _zappee != address(0) && _wrapper != address(0),\\n            \\\"not real address\\\"\\n        );\\n        WrapNZap wrapnzap = new WrapNZap(_zappee, _wrapper);\\n        wrapnzaps.push(wrapnzap);\\n        wrapnzapCount += 1;\\n        emit NewWrapNZap(_zappee, _wrapper, address(wrapnzap));\\n    }\\n\\n    function createAndZap(address _zappee, address _wrapper) external payable {\\n        require(\\n            _zappee != address(0) && _wrapper != address(0),\\n            \\\"not real address\\\"\\n        );\\n        require(msg.value > 0, \\\"no value sent\\\");\\n        WrapNZap wrapnzap = (new WrapNZap){value: msg.value}(_zappee, _wrapper);\\n        wrapnzaps.push(wrapnzap);\\n        wrapnzapCount += 1;\\n        emit NewWrapNZap(_zappee, _wrapper, address(wrapnzap));\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/WrapNZap.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.1;\\n\\nimport \\\"./interfaces/IWrappedETH.sol\\\";\\n\\ncontract WrapNZap {\\n    address public zappee;\\n    IWrappedETH public wrapper;\\n\\n    constructor(address _zappee, address _wrapper) payable {\\n        zappee = _zappee;\\n        wrapper = IWrappedETH(_wrapper);\\n        if (msg.value > 0) {\\n            _zap(msg.value);\\n        }\\n    }\\n\\n    function poke() public {\\n        uint256 balance = address(this).balance;\\n        require(balance > 0, \\\"WrapNZap: no balance\\\");\\n\\n        _zap(balance);\\n    }\\n\\n    function _zap(uint256 value) internal {\\n        // wrap\\n        wrapper.deposit{value: value}();\\n\\n        // send to zappee\\n        require(wrapper.transfer(zappee, value), \\\"WrapNZap: transfer failed\\\");\\n    }\\n\\n    receive() external payable {\\n        _zap(msg.value);\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/IWrappedETH.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.1;\\n\\ninterface IWrappedETH {\\n    function deposit() external payable;\\n\\n    function transfer(address dst, uint256 wad) external returns (bool);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"zappee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wrapper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"WrapNZap\",\"type\":\"address\"}],\"name\":\"NewWrapNZap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zappee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wrapper\",\"type\":\"address\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zappee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wrapper\",\"type\":\"address\"}],\"name\":\"createAndZap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapnzapCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"wrapnzaps\",\"outputs\":[{\"internalType\":\"contract WrapNZap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"WrapNZapFactory","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}