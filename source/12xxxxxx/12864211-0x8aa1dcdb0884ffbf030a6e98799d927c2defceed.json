{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ncontract PizzaForKimduhan {\r\n    address private constant kimduhan =\r\n        0x2542642c045cA7f26725089dD90d5EaF1c53Fd91;\r\n    address private constant vbtc = 0x84e7AE4897B3847B67f212Aff78BFbC5f700aa40;\r\n    address private constant dai = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\r\n\r\n    address public committer;\r\n    uint256 public deadline;\r\n\r\n    uint256 immutable VBTC; // unit 10**8\r\n    uint256 immutable DAI; // unit 10**18\r\n\r\n    constructor() {\r\n        VBTC = (10**IERC20(vbtc).decimals());\r\n        DAI = (10**IERC20(dai).decimals());\r\n    }\r\n\r\n    function commit() public {\r\n        require(\r\n            IERC20(dai).balanceOf(address(this)) >= 4 * DAI,\r\n            \"kimduhan should deposit 4 dollars first\"\r\n        );\r\n        require(\r\n            deadline <= block.timestamp || committer == address(0),\r\n            \"Someone already committed\"\r\n        );\r\n        if (committer != address(0)) {\r\n            // refund\r\n            IERC20(vbtc).transfer(\r\n                committer,\r\n                IERC20(vbtc).balanceOf(address(this))\r\n            );\r\n        }\r\n        // set committer & deadline\r\n        committer = msg.sender;\r\n        deadline = block.timestamp + 1 hours;\r\n    }\r\n\r\n    function pizzaAtFourDollars() public {\r\n        uint256 vbtcBal = IERC20(vbtc).balanceOf(address(this));\r\n        uint256 daiBal = IERC20(dai).balanceOf(address(this));\r\n        require(vbtcBal >= 10000 * VBTC, \"not enough vbtc\");\r\n        require(daiBal >= 4 * DAI, \"not enough dai\");\r\n\r\n        // transfer dai to committer\r\n        IERC20(dai).transfer(committer, daiBal);\r\n        // transfer vbtc to kimduhan\r\n        IERC20(vbtc).transfer(kimduhan, vbtcBal);\r\n        delete committer;\r\n        delete deadline;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"commit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"committer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pizzaAtFourDollars\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"PizzaForKimduhan","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://8b42d038a528173b3cd31836a6474cbe11e5ac0eabac4abec67b9d59005d2423"}]}