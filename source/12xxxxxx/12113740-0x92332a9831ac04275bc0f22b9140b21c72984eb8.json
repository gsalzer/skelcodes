{"status":"1","message":"OK","result":[{"SourceCode":"// Copyright (C) 2020 Centrifuge\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\npragma solidity >=0.5.15 <0.6.0;\r\n\r\n// Copyright (C) Centrifuge 2020, based on MakerDAO dss https://github.com/makerdao/dss\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\npragma solidity >=0.5.15 <0.6.0;\r\n\r\n/// note.sol -- the `note' modifier, for logging calls as events\r\n\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\npragma solidity >=0.4.23;\r\n\r\ncontract DSNote {\r\n    event LogNote(\r\n        bytes4   indexed  sig,\r\n        address  indexed  guy,\r\n        bytes32  indexed  foo,\r\n        bytes32  indexed  bar,\r\n        uint256           wad,\r\n        bytes             fax\r\n    ) anonymous;\r\n\r\n    modifier note {\r\n        bytes32 foo;\r\n        bytes32 bar;\r\n        uint256 wad;\r\n\r\n        assembly {\r\n            foo := calldataload(4)\r\n            bar := calldataload(36)\r\n            wad := callvalue()\r\n        }\r\n\r\n        _;\r\n\r\n        emit LogNote(msg.sig, msg.sender, foo, bar, wad, msg.data);\r\n    }\r\n}\r\n\r\ncontract Auth is DSNote {\r\n    mapping (address => uint) public wards;\r\n    function rely(address usr) public auth note { wards[usr] = 1; }\r\n    function deny(address usr) public auth note { wards[usr] = 0; }\r\n    modifier auth { require(wards[msg.sender] == 1); _; }\r\n}\r\n\r\ninterface AuthLike {\r\n    function rely(address) external;\r\n    function deny(address) external;\r\n}\r\n\r\ninterface DependLike {\r\n    function depend(bytes32, address) external;\r\n}\r\n\r\ninterface BorrowerDeployerLike {\r\n    function collector() external returns (address);\r\n    function feed() external returns (address);\r\n    function shelf() external returns (address);\r\n    function title() external returns (address);\r\n    function pile() external returns (address);\r\n}\r\ninterface LenderDeployerLike {\r\n    function assessor() external returns (address);\r\n    function reserve() external returns (address);\r\n    function assessorAdmin() external returns (address);\r\n    function juniorMemberlist() external returns (address);\r\n    function seniorMemberlist() external returns (address);\r\n    function juniorOperator() external returns (address);\r\n    function seniorOperator() external returns (address);\r\n    function coordinator() external returns (address);\r\n}\r\n\r\n\r\ncontract TinlakeRoot is Auth {\r\n    BorrowerDeployerLike public borrowerDeployer;\r\n    LenderDeployerLike public  lenderDeployer;\r\n\r\n    bool public             deployed;\r\n    address public          deployUsr;\r\n\r\n    constructor (address deployUsr_) public {\r\n        deployUsr = deployUsr_;\r\n    }\r\n\r\n    // --- Prepare ---\r\n    // Sets the two deployer dependencies. This needs to be called by the deployUsr\r\n    function prepare(address lender_, address borrower_, address ward_) public {\r\n        require(deployUsr == msg.sender);\r\n        borrowerDeployer = BorrowerDeployerLike(borrower_);\r\n        lenderDeployer = LenderDeployerLike(lender_);\r\n        wards[ward_] = 1;\r\n        deployUsr = address(0); // disallow the deploy user to call this more than once.\r\n    }\r\n\r\n    // --- Deploy ---\r\n    // After going through the deploy process on the lender and borrower method, this method is called to connect\r\n    // lender and borrower contracts.\r\n    function deploy() public {\r\n        require(address(borrowerDeployer) != address(0) && address(lenderDeployer) != address(0) && deployed == false);\r\n        deployed = true;\r\n\r\n        address reserve_ = lenderDeployer.reserve();\r\n        address shelf_ = borrowerDeployer.shelf();\r\n\r\n        // Borrower depends\r\n        DependLike(borrowerDeployer.collector()).depend(\"distributor\", reserve_);\r\n        DependLike(borrowerDeployer.shelf()).depend(\"lender\", reserve_);\r\n        DependLike(borrowerDeployer.shelf()).depend(\"distributor\", reserve_);\r\n\r\n        //AuthLike(reserve).rely(shelf_);\r\n\r\n        //  Lender depends\r\n        address navFeed = borrowerDeployer.feed();\r\n\r\n        DependLike(reserve_).depend(\"shelf\", shelf_);\r\n        DependLike(lenderDeployer.assessor()).depend(\"navFeed\", navFeed);\r\n\r\n        // Permissions\r\n        address poolAdmin1 = 0x24730a9D68008c6Bd8F43e60Ed2C00cbe57Ac829;\r\n        address poolAdmin2 = 0x71d9f8CFdcCEF71B59DD81AB387e523E2834F2b8;\r\n        address poolAdmin3 = 0xa7Aa917b502d86CD5A23FFbD9Ee32E013015e069;\r\n        address poolAdmin4 = 0xfEADaD6b75e6C899132587b7Cb3FEd60c8554821;\r\n        address poolAdmin5 = 0xC3997Ef807A24af6Ca5Cb1d22c2fD87C6c3b79E8;\r\n        address poolAdmin6 = 0xd60f7CFC1E051d77031aC21D9DB2F66fE54AE312;\r\n        address poolAdmin7 = 0x46a71eEf8DbcFcbAC7A0e8D5d6B634A649e61fb8;\r\n        address oracle = 0x8F1afCFDB6B4264B8fbFfBB9ca900e66187543cf;\r\n\r\n        AuthLike(lenderDeployer.assessorAdmin()).rely(poolAdmin1);\r\n        AuthLike(lenderDeployer.assessorAdmin()).rely(poolAdmin2);\r\n        AuthLike(lenderDeployer.assessorAdmin()).rely(poolAdmin3);\r\n        AuthLike(lenderDeployer.assessorAdmin()).rely(poolAdmin4);\r\n        AuthLike(lenderDeployer.assessorAdmin()).rely(poolAdmin5);\r\n        AuthLike(lenderDeployer.assessorAdmin()).rely(poolAdmin6);\r\n        AuthLike(lenderDeployer.assessorAdmin()).rely(poolAdmin7);\r\n\r\n        AuthLike(lenderDeployer.juniorMemberlist()).rely(poolAdmin1);\r\n        AuthLike(lenderDeployer.juniorMemberlist()).rely(poolAdmin2);\r\n        AuthLike(lenderDeployer.juniorMemberlist()).rely(poolAdmin3);\r\n        AuthLike(lenderDeployer.juniorMemberlist()).rely(poolAdmin4);\r\n        AuthLike(lenderDeployer.juniorMemberlist()).rely(poolAdmin5);\r\n        AuthLike(lenderDeployer.juniorMemberlist()).rely(poolAdmin6);\r\n        AuthLike(lenderDeployer.juniorMemberlist()).rely(poolAdmin7);\r\n\r\n        AuthLike(lenderDeployer.seniorMemberlist()).rely(poolAdmin1);\r\n        AuthLike(lenderDeployer.seniorMemberlist()).rely(poolAdmin2);\r\n        AuthLike(lenderDeployer.seniorMemberlist()).rely(poolAdmin3);\r\n        AuthLike(lenderDeployer.seniorMemberlist()).rely(poolAdmin4);\r\n        AuthLike(lenderDeployer.seniorMemberlist()).rely(poolAdmin5);\r\n        AuthLike(lenderDeployer.seniorMemberlist()).rely(poolAdmin6);\r\n        AuthLike(lenderDeployer.seniorMemberlist()).rely(poolAdmin7);\r\n\r\n        AuthLike(navFeed).rely(oracle);\r\n    }\r\n\r\n    // --- Governance Functions ---\r\n    // `relyContract` & `denyContract` can be called by any ward on the TinlakeRoot\r\n    // contract to make an arbitrary address a ward on any contract the TinlakeRoot\r\n    // is a ward on.\r\n    function relyContract(address target, address usr) public auth {\r\n        AuthLike(target).rely(usr);\r\n    }\r\n\r\n    function denyContract(address target, address usr) public auth {\r\n        AuthLike(target).deny(usr);\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployUsr_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"borrowerDeployer\",\"outputs\":[{\"internalType\":\"contract BorrowerDeployerLike\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"denyContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deploy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deployUsr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deployed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lenderDeployer\",\"outputs\":[{\"internalType\":\"contract LenderDeployerLike\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ward_\",\"type\":\"address\"}],\"name\":\"prepare\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"relyContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TinlakeRoot","CompilerVersion":"v0.5.15+commit.6a57276f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000003018f3f7a1a919fd9a1e0d8fedbe9164b6df04f6","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3cdc1ee8098f8a5cb56c3bf2d00954c741c4803f9eb46ed347d73362298bb9fc"}]}