{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.5.0 <0.7.0;\r\n\r\ncontract bank {\r\n      \r\n    modifier onlyOwner{\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    event deployed(address owner, uint id);\r\n    \r\n    event userDetails (address user_address,\r\n        uint id, \r\n        uint asset_value_USD,\r\n        BankAsssetType v_asset,\r\n        BankState v_state,\r\n        uint cycle,         //In months\r\n        uint rate,\r\n        uint amount,        // this amount is in actual currency\r\n        uint intrest,\r\n        BankAsssetType withdrawl,\r\n        uint withdrawState);\r\n        \r\n    event rates (uint rate_AGCoin,\r\n        uint rate_ETH,\r\n        uint rate_BTC,\r\n        uint rate_LTC,\r\n        uint rate_XRP,\r\n        uint rate_USD);\r\n        \r\n    address public owner;\r\n    uint public id;\r\n\r\n    enum BankAsssetType{ \r\n        AGCoin, ETH, BTC, LTC, XRP, USD\r\n    }\r\n    enum BankState { \r\n        none, in_process, mature\r\n    }\r\n    \r\n    struct Bank { \r\n        address user;\r\n        uint id;\r\n        uint asset_value_USD;\r\n        BankAsssetType v_asset;\r\n        BankState v_state;\r\n        uint cycle;\r\n        uint rate;\r\n        uint amount;    // this is in actual currency\r\n        uint intrest;\r\n        BankAsssetType withdrawl;\r\n        uint withdrawState;\r\n    }\r\n    \r\n    mapping(uint=>Bank) public user_details;\r\n    mapping(uint  => uint) rate;\r\n    constructor() public {\r\n        owner = msg.sender; \r\n        id=1;\r\n        emit deployed(owner , id);\r\n    }\r\n    \r\n    function setUser (uint _cycle , uint _asset_value_USD, BankAsssetType _v_asset, uint _amount) public returns(uint){\r\n        require (_asset_value_USD >=100 , \"Amount should be atleast 100 USD\");\r\n        require (_cycle >=1,\"it should be for atleast 1 month\");\r\n        uint _rate = rate[uint(_v_asset)];\r\n        //uint id = uint256(keccak256(abi.encodePacked(msg.sender,_cycle,_amount,_asset_value_USD)));\r\n        //user_details[msg.sender].push(_asset_value_USD,_v_asset, 1,_cycle);\r\n        user_details[id].user = msg.sender;\r\n        user_details[id].id = id;\r\n        user_details[id].cycle =_cycle;\r\n        user_details[id].asset_value_USD =_asset_value_USD;\r\n        user_details[id].v_asset=_v_asset;\r\n        user_details[id].v_state=BankState.in_process;\r\n        user_details[id].rate=_rate;\r\n        user_details[id].amount=_amount;\r\n        user_details[id].withdrawl=BankAsssetType.AGCoin;\r\n        emit userDetails (user_details[id].user,\r\n        user_details[id].id,\r\n        user_details[id].asset_value_USD,\r\n        user_details[id].v_asset,\r\n        user_details[id].v_state,\r\n        user_details[id].cycle,\r\n        user_details[id].rate,\r\n        user_details[id].amount,    // this is in actual currency\r\n        user_details[id].intrest,\r\n        user_details[id].withdrawl,\r\n        user_details[id].withdrawState);\r\n        id +=1;\r\n   }\r\n\r\n    //rate should be provided as int\r\n    function setRate (uint agcoin_rate, uint eth_rate, uint btc_rate, uint ltc_rate,  uint xrp_rate, uint usd_rate) onlyOwner public{\r\n        rate[uint(BankAsssetType.AGCoin)]=uint(agcoin_rate);\r\n        rate[uint(BankAsssetType.ETH)]=uint(eth_rate);\r\n        rate[uint(BankAsssetType.BTC)]=uint(btc_rate);\r\n        rate[uint(BankAsssetType.LTC)]=uint(ltc_rate);\r\n        rate[uint(BankAsssetType.XRP)]=uint(xrp_rate);\r\n        rate[uint(BankAsssetType.USD)]=uint(usd_rate);\r\n        emit rates (rate[uint(BankAsssetType.AGCoin)],\r\n        rate[uint(BankAsssetType.ETH)],\r\n        rate[uint(BankAsssetType.BTC)],\r\n        rate[uint(BankAsssetType.LTC)],\r\n        rate[uint(BankAsssetType.XRP)],\r\n        rate[uint(BankAsssetType.USD)]);\r\n    }\r\n    \r\n    function withdraw(uint _id, BankAsssetType withdrawAsset) onlyOwner public{\r\n        uint _rate = user_details[_id].rate;\r\n        user_details[_id].intrest = _rate*user_details[_id].cycle*user_details[_id].amount/(100*12);\r\n        user_details[_id].v_state = BankState.mature;\r\n        user_details[_id].withdrawl = withdrawAsset;\r\n        user_details[_id].withdrawState = 1;\r\n        emit userDetails (user_details[_id].user,\r\n        user_details[_id].id,\r\n        user_details[_id].asset_value_USD,\r\n        user_details[_id].v_asset,\r\n        user_details[_id].v_state,\r\n        user_details[_id].cycle,\r\n        user_details[_id].rate,\r\n        user_details[_id].amount,   // this is in actual currency\r\n        user_details[_id].intrest,\r\n        user_details[_id].withdrawl,\r\n        user_details[_id].withdrawState);\r\n    }\r\n\r\n    function cal_intrest(uint _id) onlyOwner public {\r\n        uint _rate = user_details[_id].rate;\r\n        user_details[_id].intrest = _rate*user_details[_id].cycle*user_details[_id].amount/(100*12);\r\n        emit userDetails (user_details[_id].user,\r\n        user_details[_id].id,\r\n        user_details[_id].asset_value_USD,\r\n        user_details[_id].v_asset,\r\n        user_details[_id].v_state,\r\n        user_details[_id].cycle,\r\n        user_details[_id].rate,\r\n        user_details[_id].amount,       // this is in actual currency\r\n        user_details[_id].intrest,\r\n        user_details[_id].withdrawl,\r\n        user_details[_id].withdrawState);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate_AGCoin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate_ETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate_BTC\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate_LTC\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate_XRP\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate_USD\",\"type\":\"uint256\"}],\"name\":\"rates\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"asset_value_USD\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum bank.BankAsssetType\",\"name\":\"v_asset\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum bank.BankState\",\"name\":\"v_state\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cycle\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"intrest\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum bank.BankAsssetType\",\"name\":\"withdrawl\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawState\",\"type\":\"uint256\"}],\"name\":\"userDetails\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cal_intrest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"agcoin_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eth_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"btc_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltc_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xrp_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usd_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cycle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_asset_value_USD\",\"type\":\"uint256\"},{\"internalType\":\"enum bank.BankAsssetType\",\"name\":\"_v_asset\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"user_details\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"asset_value_USD\",\"type\":\"uint256\"},{\"internalType\":\"enum bank.BankAsssetType\",\"name\":\"v_asset\",\"type\":\"uint8\"},{\"internalType\":\"enum bank.BankState\",\"name\":\"v_state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"cycle\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"intrest\",\"type\":\"uint256\"},{\"internalType\":\"enum bank.BankAsssetType\",\"name\":\"withdrawl\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"withdrawState\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"enum bank.BankAsssetType\",\"name\":\"withdrawAsset\",\"type\":\"uint8\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"bank","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://00f497268431e8d26a6f893bbbc2180ab2ff9c050d47c91c6a4ce6f8c985695b"}]}