{"status":"1","message":"OK","result":[{"SourceCode":"/// SPDX-License-Identifier: MIT\r\n/*\r\n▄▄█    ▄   ██   █▄▄▄▄ ▄█ \r\n██     █  █ █  █  ▄▀ ██ \r\n██ ██   █ █▄▄█ █▀▀▌  ██ \r\n▐█ █ █  █ █  █ █  █  ▐█ \r\n ▐ █  █ █    █   █    ▐ \r\n   █   ██   █   ▀   \r\n           ▀          */\r\n/// Special thanks to Keno, Boring and Gonpachi for review and continued inspiration.\r\npragma solidity 0.6.12;\r\npragma experimental ABIEncoderV2;\r\n/// @notice Arbitrary call helper for Inari.\r\ncontract Zenko {\r\n    function zenko(\r\n        address to, \r\n        uint256 value, \r\n        bytes calldata data\r\n    ) external payable returns (bool success, bytes memory result) {\r\n        (success, result) = to.call{value: value}(data);\r\n        require(success);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"zenko\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"Zenko","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://0e0ad367475b77485aa799cc9ac1c4e7894be8352c7f96aa13582e71ef3ce3e1"}]}