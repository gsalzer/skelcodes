{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract AirDrop {\r\n    address private _owner;\r\n    IERC20 private _token;\r\n\r\n    constructor(IERC20 token) {\r\n        _owner = msg.sender;\r\n        _token = token;\r\n    }\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == _owner, \"!owner\");\r\n        _;\r\n    }\r\n    event TokenAirDropped(address account, uint256 amount);\r\n\r\n    function airDropAll(address sender, address[] memory recipients, uint256[] memory amounts) public onlyAdmin {\r\n        require(recipients.length == amounts.length, \"recipients length != amounts length\");\r\n        for (uint8 i = 0; i < recipients.length; i++) {\r\n            IERC20(_token).transferFrom(sender ,recipients[i], amounts[i]);\r\n            emit TokenAirDropped(recipients[i], amounts[i]);\r\n        }\r\n    }\r\n\r\n    function kill() public onlyAdmin {\r\n        IERC20(_token).transfer(_owner, IERC20(_token).balanceOf(address(this)));\r\n        selfdestruct(payable(_owner));\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenAirDropped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"airDropAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"AirDrop","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000008a40c222996f9f3431f63bf80244c36822060f12","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://27c6670979078f3cdc3a0fd10098d7f7c7823c1f632bedf45a5739811d2fbd25"}]}