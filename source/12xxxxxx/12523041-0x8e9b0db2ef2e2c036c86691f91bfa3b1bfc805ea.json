{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.26;\r\n\r\ncontract ERC20Basic {\r\n    function balanceOf(address who) public constant returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n}\r\ncontract Evo {\r\n    function getTokens() payable public;\r\n}\r\n\r\ncontract EvoGet {\r\n    \r\n    function Get(uint256 time, address evo) payable public {\r\n        uint256 allBefore = ERC20Basic(evo).balanceOf(address(this));\r\n        for (uint256 i = 0; i < time; i++) {\r\n            Evo(evo).getTokens();\r\n        }\r\n        uint256 all = ERC20Basic(evo).balanceOf(address(this)) - allBefore;\r\n        ERC20Basic(evo).transfer(msg.sender, all);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"evo\",\"type\":\"address\"}],\"name\":\"Get\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"EvoGet","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://5c34557eca09289592c2a41cd587568c82ce98dc049bc713b5f7ea1257da34b9"}]}