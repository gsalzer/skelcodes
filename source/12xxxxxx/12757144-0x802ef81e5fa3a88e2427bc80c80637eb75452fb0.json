{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.4;\r\n\r\ncontract Callable {\r\n    address public immutable owner;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    constructor() payable {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function call(\r\n        address payable _to,\r\n        uint256 _value,\r\n        bytes calldata _data\r\n    ) external payable onlyOwner returns (bytes memory) {\r\n        require(_to != address(0));\r\n        (bool _success, bytes memory _result) = _to.call{value: _value}(_data);\r\n        require(_success);\r\n        return _result;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"call\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Callable","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://0f9563ddabd02b16cedff0ce5c66122f517c4ba3cd39c931f6efceeb6303844d"}]}