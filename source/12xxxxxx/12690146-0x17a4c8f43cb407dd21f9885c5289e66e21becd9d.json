{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: LGPL-3.0-or-later\r\npragma solidity 0.8.6;\r\n\r\ncontract BorrowerProxy {\r\n    address liquidityPool;\r\n\r\n    constructor() {\r\n        liquidityPool = msg.sender;\r\n    }\r\n\r\n    function lend(address _caller, bytes calldata _data) external payable  {\r\n        require(msg.sender == liquidityPool, \"BorrowerProxy: Caller is not the liquidity pool\");\r\n        (bool success,) = _caller.call{ value: msg.value }(_data);\r\n        require(success, \"BorrowerProxy: Borrower contract reverted during execution\");\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"lend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"BorrowerProxy","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU LGPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://6fe1713266a44597e6a7a866d2239ac3fac47defc6558585b01413500d5481e9"}]}