{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: SimPL-2.0\r\npragma solidity ^0.6.2;\r\n\r\ncontract ToBeElonMusk {\r\n    string public name     = \"ToBeElonMusk\";\r\n    string public symbol   = \"BEMUSK\";\r\n    uint8  public decimals = 18;\r\n\r\n    // from WETH\r\n    event  Approval(address indexed src, address indexed guy, uint wad);\r\n    event  Transfer(address indexed src, address indexed dst, uint wad);\r\n    event  Deposit(address indexed dst, uint wad);\r\n    event  Withdrawal(address indexed src, uint wad);\r\n    \r\n    event  DepositTo(address indexed src, address indexed dst, uint toLevel, uint wad);\r\n    event  NewUser(address indexed src, address indexed parent);\r\n    event  Upgrade(address indexed src, uint toLevel);\r\n    event  MissOrder(address indexed src, address indexed dst, uint toLevel);\r\n\r\n    mapping (address => uint)                       public  balanceOf;\r\n    mapping (address => mapping (address => uint))  public  allowance;\r\n    \r\n    // main data\r\n    \r\n    mapping (address => uint)                       public  userLevel; // user => level\r\n    mapping (address => address)                    public  userTree; // child => parent\r\n    mapping (address => uint)                       public  childrenCount; // parnet => childrenCount\r\n    mapping (address => mapping (uint => uint))     public  userLevelReceivedAmount; // {user => {level => amount}}\r\n    mapping (address => mapping (uint => uint))     public  userLevelReceivedOrderCount; // {user => {level => success order num}}\r\n    mapping (address => mapping (uint => uint))     public  userLevelMissedOrderCount; // {parent => {level => missed order num}}\r\n\r\n    // address[9] public initedUser; // 9 address from level 1-> 9\r\n    address public king; // level 9\r\n    address public farmer; // level 1\r\n    \r\n    uint public price;\r\n    uint public maxLevel;\r\n    \r\n    address private owner;\r\n    uint private maxLoopTimes;\r\n    \r\n    bool public stopped = false;\r\n\r\n    // stoppable\r\n    modifier stoppable() {\r\n        require(!stopped);\r\n        _;\r\n    }\r\n \r\n    function stop() public onlyOwner {\r\n        stopped = true;\r\n    }\r\n    function start() public onlyOwner {\r\n        stopped = false;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(\r\n            msg.sender == owner,\r\n            \"Only owner can call this.\"\r\n        );\r\n        _;\r\n    }\r\n   \r\n    // constructor () public {\r\n    //     owner = msg.sender;\r\n    // }\r\n    \r\n    constructor (address[] memory _initedUser, uint _price) public {\r\n        owner = msg.sender;\r\n        init(_initedUser, _price);\r\n    }\r\n    \r\n    function init (address[] memory _initedUser, uint _price) public onlyOwner {\r\n        require(_initedUser.length >= 5, 'inited user error');\r\n        \r\n        initPrice(_price);\r\n        \r\n        maxLevel = _initedUser.length;\r\n        maxLoopTimes = maxLevel;\r\n        \r\n        king = _initedUser[0];\r\n        farmer = _initedUser[maxLevel - 1];\r\n\r\n        address parent = _initedUser[0]; \r\n        userLevel[parent] = maxLevel;\r\n        \r\n        for (uint i = 1; i < maxLevel; i++) {\r\n            address cur = _initedUser[i];\r\n            \r\n            userLevel[cur] = maxLevel - i;\r\n            userTree[cur] = parent;\r\n            \r\n            childrenCount[parent] += 1;\r\n            \r\n            parent = cur;\r\n        }\r\n    }\r\n    \r\n    function initPrice (uint _price) public onlyOwner {\r\n        require(_price > 0, 'price error');\r\n        price = _price;\r\n    }\r\n    \r\n    function findMyKing (address cur) view private returns (address)  {\r\n        if (cur == farmer) {\r\n            return king;\r\n        }\r\n        \r\n        // for limited loop i \r\n        uint i = 0;\r\n        address parent = cur;\r\n        while(i++ < maxLoopTimes) {\r\n            parent = userTree[parent];\r\n            if (userLevel[parent] == maxLevel) {\r\n                return parent;\r\n            }\r\n        }\r\n        return king;\r\n    }\r\n    \r\n    function depositTo (address to, uint toLevel, uint value) private {\r\n        balanceOf[to] += value;\r\n        \r\n        uint level = userLevel[to];\r\n        userLevelReceivedAmount[to][level] += value;\r\n        userLevelReceivedOrderCount[to][level] += 1;\r\n        \r\n        emit DepositTo(msg.sender, to, toLevel, value);\r\n    }\r\n    \r\n    function missOrder (address to, uint level) private {\r\n        userLevelMissedOrderCount[to][level] += 1;\r\n        \r\n        emit MissOrder(msg.sender, to, level);\r\n    }\r\n    \r\n    function isFull (address to, uint level) view private returns (bool) {\r\n        return userLevelReceivedAmount[to][level] >= maxReceiveAtLevel(level); // 3**level * price;\r\n    }\r\n    \r\n    function maxReceiveAtLevel (uint level) view private returns (uint) {\r\n        return 3**level * price;\r\n    }\r\n    \r\n    function canTotalReceive () view private returns (uint) {\r\n        uint total = 0;\r\n        for (uint level = 1; level <= maxLevel; level++) {\r\n            total += maxReceiveAtLevel(level);\r\n        }\r\n        return total;\r\n    }\r\n    \r\n    function payForUpgrade (address me, uint value) private returns (bool) {\r\n        require(value == price && price != 0, 'value error');\r\n        \r\n        uint myLevel = userLevel[me];\r\n        uint toLevel = myLevel + 1;\r\n        require(toLevel <= maxLevel, 'cannot upgrade');\r\n        \r\n        require (!(toLevel == 2 && userLevelReceivedOrderCount[me][1] < 3), 'to upgrade level 2, need at least 3 children');\r\n        \r\n        uint i = 0;\r\n        address parent = me;\r\n        bool found = false;\r\n        while(i++ < maxLoopTimes) {\r\n            parent = userTree[parent];\r\n            \r\n            if (parent == address(0)) {\r\n                break;\r\n            }\r\n            \r\n            if (userLevel[parent] == toLevel && !isFull(parent, toLevel)) {\r\n                found = true;\r\n                break;\r\n            }\r\n            else {\r\n               missOrder(parent, toLevel); \r\n            }\r\n        }\r\n        \r\n        if (!found) {\r\n            parent = king;\r\n        }\r\n        \r\n        depositTo(parent, toLevel, value);\r\n        userLevel[me] = toLevel;\r\n        \r\n        emit Upgrade(me, toLevel);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    \r\n    function payForNew (address me, address to, uint value) private returns (bool) {\r\n        require(value == price * 2 && price != 0, 'value error');\r\n        \r\n        if (to == address(0) || me == to || userLevel[to] == 0) {\r\n            to = farmer;\r\n        }\r\n        \r\n        address myKing = findMyKing(to);\r\n        \r\n        depositTo(to, 1, value/2);\r\n        depositTo(myKing, 1, value/2);\r\n        \r\n        userLevel[me] = 1;\r\n        userTree[me] = to;\r\n        \r\n        childrenCount[to] += 1;\r\n\r\n        emit NewUser(me, to);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    // pay to contract direct\r\n    // function() public payable {\r\n    //     pay(address(0));\r\n    // }\r\n    \r\n    function pay(address to) public payable stoppable returns (address) {\r\n        address me = msg.sender;\r\n        // old user\r\n        if (userLevel[me] > 0) {\r\n            payForUpgrade(me, msg.value);\r\n        }\r\n        // new user\r\n        else {\r\n            payForNew(me, to, msg.value);\r\n        }\r\n        return me;\r\n    }\r\n   \r\n    function deposit() public payable stoppable {\r\n        require(msg.value > 0);\r\n        balanceOf[msg.sender] += msg.value;\r\n        emit Deposit(msg.sender, msg.value);\r\n    }\r\n    \r\n    function withdraw(uint wad) public stoppable {\r\n        require(balanceOf[msg.sender] >= wad);\r\n        balanceOf[msg.sender] -= wad;\r\n        msg.sender.transfer(wad);\r\n        emit Withdrawal(msg.sender, wad);\r\n    }\r\n\r\n    function totalSupply() public view returns (uint) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function approve(address guy, uint wad) public stoppable returns (bool) {\r\n        allowance[msg.sender][guy] = wad;\r\n        emit Approval(msg.sender, guy, wad);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address dst, uint wad) public stoppable returns (bool) {\r\n        return transferFrom(msg.sender, dst, wad);\r\n    }\r\n\r\n    function transferFrom(address src, address dst, uint wad)\r\n        public\r\n        stoppable\r\n        returns (bool)\r\n    {\r\n        require(balanceOf[src] >= wad);\r\n\r\n        if (src != msg.sender && allowance[src][msg.sender] != uint(-1)) {\r\n            require(allowance[src][msg.sender] >= wad);\r\n            allowance[src][msg.sender] -= wad;\r\n        }\r\n\r\n        balanceOf[src] -= wad;\r\n        balanceOf[dst] += wad;\r\n\r\n        emit Transfer(src, dst, wad);\r\n\r\n        return true;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_initedUser\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toLevel\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"DepositTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toLevel\",\"type\":\"uint256\"}],\"name\":\"MissOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parent\",\"type\":\"address\"}],\"name\":\"NewUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toLevel\",\"type\":\"uint256\"}],\"name\":\"Upgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"childrenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_initedUser\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"initPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"king\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"pay\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userLevelMissedOrderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userLevelReceivedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userLevelReceivedOrderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userTree\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ToBeElonMusk","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000470de4df820000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000dab40c06dfab5d12e4bc7fb6e5e62f1897965d9e000000000000000000000000be33956d772e8eb745ed8ab318d5c4b3cf8198f8000000000000000000000000979a9e845fad1d8f6fb53d55a093bdfc64ccfd0f000000000000000000000000aac9718e9ce4856004f1a8fcad8572e5263381e1000000000000000000000000708fb1c2f3aa8b507daad2261a9f86f9bdbab5fe0000000000000000000000009b21f0139903ffa2937c1d5849d1e2c8ac7b29d80000000000000000000000000449a38da5cd090852f6133623f3c71e860c39f90000000000000000000000009894e2d423e554b998a6905f743c3c16fbe025da000000000000000000000000d74bf4b2baaa3ab4e5a021072eb66e03ebd2a9d8000000000000000000000000da04b6b1bea235ca04f946f6c120cacdd01f4548000000000000000000000000c0bd4b6e3997b54b2bf06c204eef5e83ed07d2c9000000000000000000000000d61e4c5ef7901f31d3e0ebf04d520505c0b54af1","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f589ef2a2bdbf384a33aee54b1160b8b3d9428a0e224a2a727391712bbf2b8d9"}]}