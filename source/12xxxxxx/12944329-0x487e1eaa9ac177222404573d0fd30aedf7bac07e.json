{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/jacob/Developer/DeFiWorkspace/punk.protocol/contracts/Referral.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0 <0.9.0;\\n\\ncontract Referral {\\n\\n    mapping( address=>bytes12 ) private _registers;\\n    mapping( bytes12=>address ) private _referrals;\\n    uint private _count;\\n    \\n    function issue(address account) public returns(bool){\\n        require( account != address(0x0), \\\"REF : Account is Zero address\\\" );\\n        require( _registers[account] == 0, \\\"REF : Already Registry\\\" );\\n        \\n        uint salt = 0;\\n        while( true ){\\n            bytes12 code = _issueReferralCode(account, salt);\\n            if( _referrals[code] == address(0x0) ){\\n                _referrals[code] = account;\\n                _registers[account] = code;    \\n                break;\\n            }\\n            salt++;\\n        }\\n        _count++;\\n        return true;\\n    }\\n\\n    function _issueReferralCode( address sender, uint salt ) private pure returns( bytes12 ){\\n        return bytes12(bytes32(uint(keccak256(abi.encodePacked(sender, salt)))));\\n    }\\n    \\n    function validate( bytes12 code ) public view returns( address ){\\n        return _referrals[code];\\n    }\\n    \\n    function referralCode( address account ) public view returns( bytes12 ){\\n        return _registers[account];\\n    }\\n\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 500\r\n    },\r\n    \"evmVersion\": \"byzantium\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"issue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"referralCode\",\"outputs\":[{\"internalType\":\"bytes12\",\"name\":\"\",\"type\":\"bytes12\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes12\",\"name\":\"code\",\"type\":\"bytes12\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Referral","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"1","Runs":"500","ConstructorArguments":"","EVMVersion":"byzantium","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}