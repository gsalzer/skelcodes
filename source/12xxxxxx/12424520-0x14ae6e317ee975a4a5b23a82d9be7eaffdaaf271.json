{"status":"1","message":"OK","result":[{"SourceCode":"// Southparkcoins ICO\r\n\r\n// Version of compiler\r\npragma solidity ^0.4.11;\r\n\r\n// SPDX-License-Identifier: unlicensed\r\n\r\ncontract Southparkcoins {\r\n    \r\n    // Introducing the maximum number of Southparkcoins available for sale \r\n    uint public max_southparkcoins = 9000000000000;\r\n    \r\n    // Introducing the USD to Southparkcoins conversion rate \r\n    uint public usd_to_southparkcoins = 1;\r\n    \r\n    // Introducing the total number of Southparkcoins that have been bought by the investors\r\n    uint public total_southparkcoins_bought = 0;\r\n    \r\n    //Mapping from the investor address to its equity in Southparkcoins and usd_to_southparkcoins\r\n    mapping(address => uint) equity_southparkcoins;\r\n    mapping(address => uint) equity_usd;\r\n    \r\n    // Checking if an investor can buy Southparkcoins\r\n    modifier can_buy_southparkcoins(uint usd_invested) {\r\n        require (usd_invested * usd_to_southparkcoins + total_southparkcoins_bought <= max_southparkcoins);\r\n        _;\r\n    }\r\n    \r\n    // Getting the equity in southparkcoins of an investor\r\n    function equity_in_southparkcoins(address investor) external constant returns (uint) {\r\n            return equity_southparkcoins[investor];\r\n    }\r\n    \r\n    // Getting the equity_in_southparkcoins in USD of an investor\r\n    function equity_in_usd(address investor) external constant returns (uint) {\r\n            return equity_usd[investor];\r\n    }\r\n    \r\n    // Buying southparkcoins\r\n    function buy_southparkcoins(address investor, uint usd_invested) external\r\n    can_buy_southparkcoins(usd_invested) {\r\n        uint southparkcoins_bought = usd_invested * usd_to_southparkcoins;\r\n        equity_southparkcoins[investor] += southparkcoins_bought;\r\n        equity_usd[investor] = equity_southparkcoins[investor] / 1 ;\r\n        total_southparkcoins_bought += southparkcoins_bought;\r\n    }\r\n    \r\n    // Selling Southparkcoins\r\n    function sell_southparkcoins(address investor, uint southparkcoins_sold) external {\r\n        equity_southparkcoins[investor] -= southparkcoins_sold;\r\n        equity_usd[investor] = equity_southparkcoins[investor] / 1;\r\n        total_southparkcoins_bought -= southparkcoins_sold;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"equity_in_usd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"max_southparkcoins\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"investor\",\"type\":\"address\"},{\"name\":\"usd_invested\",\"type\":\"uint256\"}],\"name\":\"buy_southparkcoins\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"usd_to_southparkcoins\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"total_southparkcoins_bought\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"equity_in_southparkcoins\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"investor\",\"type\":\"address\"},{\"name\":\"southparkcoins_sold\",\"type\":\"uint256\"}],\"name\":\"sell_southparkcoins\",\"outputs\":[],\"payable\":false,\"type\":\"function\"}]","ContractName":"Southparkcoins","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://68212e6a03c5027208f144bf5de71694f029912997e7451b6aa8544fb7a044f7"}]}