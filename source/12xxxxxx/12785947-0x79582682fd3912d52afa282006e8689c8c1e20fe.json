{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\ninterface iERC20 {\r\n\r\n\tfunction balanceOf(address who) external view returns (uint256 balance);\r\n\r\n\tfunction allowance(address owner, address spender) external view returns (uint256 remaining);\r\n\r\n\tfunction transfer(address to, uint256 value) external returns (bool success);\r\n\r\n\tfunction approve(address spender, uint256 value) external returns (bool success);\r\n\r\n\tfunction transferFrom(address from, address to, uint256 value) external returns (bool success);\r\n\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract Context {\r\n\tfunction _msgSender() internal view returns (address) {\r\n\t\treturn msg.sender;\r\n\t}\r\n\r\n\tfunction _msgData() internal view returns (bytes memory) {\r\n\t\tthis;\r\n\t\treturn msg.data;\r\n\t}\r\n}\r\n\r\nlibrary SafeMath {\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n\t\tc = a - b;\r\n\t\tassert(b <= a && c <= a);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n\t\tc = a + b;\r\n\t\tassert(c >= a && c>=b);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\nlibrary SafeERC20 {\r\n\tfunction safeTransfer(iERC20 _token, address _to, uint256 _value) internal {\r\n\t\trequire(_token.transfer(_to, _value));\r\n\t}\r\n\tfunction safeTransferFrom(iERC20 _token, address _from, address _to, uint256 _value) internal {\r\n\t\trequire(_token.transferFrom(_from, _to, _value));\r\n\t}\r\n}\r\n\r\ncontract Controllable is Context {\r\n    mapping (address => bool) public controllers;\r\n\r\n\tconstructor () {\r\n\t\taddress msgSender = _msgSender();\r\n\t\tcontrollers[msgSender] = true;\r\n\t}\r\n\r\n\tmodifier onlyController() {\r\n\t\trequire(controllers[_msgSender()], \"Controllable: caller is not a controller\");\r\n\t\t_;\r\n\t}\r\n\r\n    function addController(address _address) public onlyController {\r\n        controllers[_address] = true;\r\n    }\r\n\r\n    function removeController(address _address) public onlyController {\r\n        delete controllers[_address];\r\n    }\r\n}\r\n\r\ncontract Pausable is Controllable {\r\n\tevent Pause();\r\n\tevent Unpause();\r\n\r\n\tbool public paused = false;\r\n\r\n\tmodifier whenNotPaused() {\r\n\t\trequire(!paused);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier whenPaused() {\r\n\t\trequire(paused);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction pause() public onlyController whenNotPaused {\r\n\t\tpaused = true;\r\n\t\temit Pause();\r\n\t}\r\n\r\n\tfunction unpause() public onlyController whenPaused {\r\n\t\tpaused = false;\r\n\t\temit Unpause();\r\n\t}\r\n}\r\n\r\ncontract MNW_tokenswap is Controllable, Pausable {\r\n\tusing SafeMath for uint256;\r\n\tusing SafeERC20 for iERC20;\r\n\r\n\tmapping (address => bool) public blocklist;\r\n\r\n    iERC20 public tokenOld; // MRPH Rinkeby 0xd06f350F50AC1a3414762a617E1130ca1f079C77 Ethereum 0x7B0C06043468469967DBA22d1AF33d77d44056c8\r\n    iERC20 public tokenNew; // MNW Rinkeby 0x88d4067802186DD70704a85866974997F4DeD734 Ethereum 0xd3E4Ba569045546D09CF021ECC5dFe42b1d7f6E4\r\n    address public tokenPool; // 0x8BbF984Be7fc6db1602E056AA4256D7FB1954BF4\r\n    uint256 public blocked;\r\n\r\n\tconstructor(iERC20 _tokenOld, iERC20 _tokenNew, address _tokenPool) {\r\n        tokenOld = _tokenOld;\r\n        tokenNew = _tokenNew;\r\n        tokenPool = _tokenPool;\r\n    \tcontrollers[msg.sender] = true;\r\n    \tblocklist[0xCCE8D59AFFdd93be338FC77FA0A298C2CB65Da59] = true;\r\n        blocklist[0x3c11c3025ce387D76C2eDDf1493eC55a8cC2A0f7] = true;\r\n        blocklist[0x7B0C06043468469967DBA22d1AF33d77d44056c8] = true;\r\n        blocklist[0x8533A0bd9310Eb63E7CC8E1116c18a3D67B1976A] = true;\r\n\t}\r\n\t\r\n\tfunction switchPool(address _tokenPool) public onlyController {\r\n\t    tokenPool = _tokenPool;\r\n\t}\r\n\r\n\tfunction receiveEther() public payable {\r\n\t\trevert();\r\n\t}\r\n\r\n    function swap() public {\r\n        uint256 _amount = tokenOld.balanceOf(msg.sender);\r\n        require(_amount > 0,\"No balance of MRPH tokens\");\r\n        _swap(_amount);\r\n    }\r\n\r\n    function _swap(uint256 _amount) internal {\r\n        tokenOld.safeTransferFrom(address(msg.sender), tokenPool, _amount);\r\n        if (blocklist[msg.sender]) {\r\n            blocked.add(_amount);\r\n        } else {\r\n            tokenNew.safeTransferFrom(tokenPool, address(msg.sender), _amount * (10 ** 14));\r\n        }\r\n        emit swapped(_amount / (10 ** 4));\r\n    }\r\n    \r\n    function blockAddress(address _address, bool _state) external onlyController returns (bool) {\r\n\t\tblocklist[_address] = _state;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferToken(address tokenAddress, uint256 amount) external onlyController {\r\n\t\tiERC20(tokenAddress).safeTransfer(msg.sender,amount);\r\n\t}\r\n\r\n\tfunction flushToken(address tokenAddress) external onlyController {\r\n\t\tuint256 amount = iERC20(tokenAddress).balanceOf(address(this));\r\n\t\tiERC20(tokenAddress).safeTransfer(msg.sender,amount);\r\n\t}\r\n\r\n    event swapped(uint256 indexed amount);\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract iERC20\",\"name\":\"_tokenOld\",\"type\":\"address\"},{\"internalType\":\"contract iERC20\",\"name\":\"_tokenNew\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenPool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"blockAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blocklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"flushToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiveEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenPool\",\"type\":\"address\"}],\"name\":\"switchPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenNew\",\"outputs\":[{\"internalType\":\"contract iERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenOld\",\"outputs\":[{\"internalType\":\"contract iERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MNW_tokenswap","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000007b0c06043468469967dba22d1af33d77d44056c8000000000000000000000000d3e4ba569045546d09cf021ecc5dfe42b1d7f6e40000000000000000000000008bbf984be7fc6db1602e056aa4256d7fb1954bf4","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d5669b7156d1a7ce252852053f154dd7321f5e3e350ab72abcaa6c40a9eca0ea"}]}