{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.8.1;\r\n\r\n\r\ncontract TestContract {\r\n    \r\n    function pass() external pure returns (bool) { return true; }\r\n    \r\n    function fail() external pure { revert(\"Fail\"); }\r\n    \r\n    function proxyCall(address _to, bytes calldata _calldata, uint _val) external payable returns (bool, bytes memory) {\r\n        return payable(_to).call{value: _val}(_calldata);\r\n    }\r\n    \r\n    function spendGas(uint _maxAmount) external view {\r\n        require(_maxAmount > 23e3, 'Spend more gas!');\r\n        _maxAmount -= 22000;\r\n        uint initialGas = gasleft();\r\n        while (true) {\r\n            if (initialGas-gasleft() >= _maxAmount) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    function spendAllGas() external pure {\r\n        while (true) {}\r\n    }\r\n    \r\n    \r\n    function disperseFunds(address[] calldata _accounts) external payable {\r\n        uint contractBal = address(this).balance;\r\n        require(_accounts.length > 0 && contractBal>0);\r\n        uint chunk = contractBal / _accounts.length;\r\n        for (uint i=0; i<_accounts.length; i++) {\r\n            payable(_accounts[i]).transfer(chunk);\r\n        }\r\n    }\r\n    \r\n    function payMiner(uint _amount) external payable {\r\n        block.coinbase.transfer(_amount);\r\n    }\r\n    \r\n    receive() external payable {}\r\n    \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"}],\"name\":\"disperseFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fail\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pass\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"payMiner\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"proxyCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spendAllGas\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxAmount\",\"type\":\"uint256\"}],\"name\":\"spendGas\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"TestContract","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://e1d81bfa9917218360737e7814cb232d772afa7a455345fdfec6079cb09887d1"}]}