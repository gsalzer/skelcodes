{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.8.6;\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract CTIStaking{\r\n\r\n  IERC20 public TKN;\r\n  address public owner;\r\n  address public worker;\r\n  \r\n  event TransferOwnership(address indexed previousOwner, address indexed newOwner);\r\n  event WorkerRights(address indexed worker, bool indexed value);\r\n  event CTIStaked(address indexed sender, bool indexed Stacked);\r\n  event CTIUnstaked(address indexed sender , bool indexed Unstacked);\r\n  \r\n  modifier restricted {\r\n        require(msg.sender == owner, 'This function is restricted to owner');\r\n        _;\r\n    }\r\n    \r\n  modifier workerOnly {\r\n        require(msg.sender == worker, \"You do not have worker rights\");\r\n        _;\r\n    }\r\n  \r\n  struct Stake {\r\n    uint256 start;\r\n    uint256 period;\r\n    uint256 amount;\r\n    address client;\r\n  }\r\n\r\n  mapping(address => Stake) public stakes;\r\n  \r\n  function stake(address _client, uint256 _amount) public workerOnly {\r\n    require(stakes[_client].start == 0, \"Already staking!\");\r\n    require(_amount > 0, \"Amount cant be zero!\");\r\n    require(_client != address(0),'Invalid address: should not be 0x0');\r\n    require(TKN.transferFrom(_client, address(this), _amount), \"Transfer failed, check allowance\");\r\n    stakes[_client] = Stake({start: block.timestamp, period: 360 days, amount : _amount, client :_client });\r\n    emit CTIStaked(_client , true);\r\n  }\r\n\r\n  function unstake(address _client, address _to) public workerOnly {\r\n    require(stakes[_client].start != 0, \"Not staking\");\r\n    require(_client != address(0),'Invalid address: should not be 0x0');\r\n    require(_to != address(0),'Invalid address: should not be 0x0');\r\n    Stake storage _s = stakes[_client];\r\n    address dead = 0x000000000000000000000000000000000000dEaD;\r\n    require(block.timestamp > _s.start + _s.period, \"Period not passed yet\");\r\n    require(TKN.transfer(_to, _s.amount * 8 / 10), \"Transfer failed, check contract balance\");\r\n    require(TKN.transfer(dead, _s.amount * 2 / 10), \"Transfer failed, check contract balance\");\r\n    \r\n    emit CTIUnstaked(_client, true);\r\n    delete stakes[_client];\r\n  }\r\n\r\n\r\n\r\n    function setWorkerRights(address _worker) public restricted {\r\n        require(_worker != address(0), 'Invalid address: should not be 0x0');\r\n        worker = _worker;\r\n        emit WorkerRights(_worker, true);\r\n    }\r\n    \r\n    \r\n    function transferOwnership(address _newOwner) public restricted {\r\n        require(_newOwner != address(0), 'Invalid address: should not be 0x0');\r\n        emit TransferOwnership(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n\r\n  constructor (IERC20 _token) {\r\n    TKN = _token;\r\n    owner = msg.sender;\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"Stacked\",\"type\":\"bool\"}],\"name\":\"CTIStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"Unstacked\",\"type\":\"bool\"}],\"name\":\"CTIUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"WorkerRights\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TKN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_worker\",\"type\":\"address\"}],\"name\":\"setWorkerRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_client\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_client\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"worker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"CTIStaking","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000008c18d6a985ef69744b9d57248a45c0861874f244","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://6ce3a67b2759b3e24645faa36ec8d2eaa9f7e555a04acb8747c97c473a928918"}]}