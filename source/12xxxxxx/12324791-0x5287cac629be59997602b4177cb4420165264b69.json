{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/C/Users/simor/Desktop/imx/contracts/ClaimAggregator.sol\": {\r\n      \"content\": \"pragma solidity =0.6.6;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\nimport \\\"./interfaces/IBorrowable.sol\\\";\\r\\nimport \\\"./interfaces/IFarmingPool.sol\\\";\\r\\n\\r\\ncontract ClaimAggregator {\\r\\n\\r\\n\\tconstructor () public {}\\r\\n\\t\\r\\n\\tfunction trackBorrows(address account, address[] calldata borrowables) external {\\r\\n\\t\\tfor (uint i = 0; i < borrowables.length; i++) {\\r\\n\\t\\t\\tIBorrowable(borrowables[i]).trackBorrow(account);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\t\\r\\n\\tfunction claims(address account, address[] calldata farmingPools) external returns (uint amount) {\\r\\n\\t\\tfor (uint i = 0; i < farmingPools.length; i++) {\\r\\n\\t\\t\\tamount += IFarmingPool(farmingPools[i]).claimAccount(account);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n}\"\r\n    },\r\n    \"/C/Users/simor/Desktop/imx/contracts/interfaces/IBorrowable.sol\": {\r\n      \"content\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IBorrowable {\\r\\n\\r\\n\\t/*** Impermax ERC20 ***/\\r\\n\\t\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\r\\n\\tfunction name() external pure returns (string memory);\\r\\n\\tfunction symbol() external pure returns (string memory);\\r\\n\\tfunction decimals() external pure returns (uint8);\\r\\n\\tfunction totalSupply() external view returns (uint);\\r\\n\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\t\\r\\n\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\t\\r\\n\\t/*** Pool Token ***/\\r\\n\\t\\r\\n\\tevent Mint(address indexed sender, address indexed minter, uint mintAmount, uint mintTokens);\\r\\n\\tevent Redeem(address indexed sender, address indexed redeemer, uint redeemAmount, uint redeemTokens);\\r\\n\\tevent Sync(uint totalBalance);\\r\\n\\t\\r\\n\\tfunction underlying() external view returns (address);\\r\\n\\tfunction factory() external view returns (address);\\r\\n\\tfunction totalBalance() external view returns (uint);\\r\\n\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\r\\n\\tfunction exchangeRate() external returns (uint);\\r\\n\\tfunction mint(address minter) external returns (uint mintTokens);\\r\\n\\tfunction redeem(address redeemer) external returns (uint redeemAmount);\\r\\n\\tfunction skim(address to) external;\\r\\n\\tfunction sync() external;\\r\\n\\t\\r\\n\\tfunction _setFactory() external;\\r\\n\\t\\r\\n\\t/*** Borrowable ***/\\r\\n\\r\\n\\tevent BorrowApproval(address indexed owner, address indexed spender, uint value);\\r\\n\\tevent Borrow(address indexed sender, address indexed borrower, address indexed receiver, uint borrowAmount, uint repayAmount, uint accountBorrowsPrior, uint accountBorrows, uint totalBorrows);\\r\\n\\tevent Liquidate(address indexed sender, address indexed borrower, address indexed liquidator, uint seizeTokens, uint repayAmount, uint accountBorrowsPrior, uint accountBorrows, uint totalBorrows);\\r\\n\\t\\r\\n\\tfunction BORROW_FEE() external pure returns (uint);\\r\\n\\tfunction collateral() external view returns (address);\\r\\n\\tfunction reserveFactor() external view returns (uint);\\r\\n\\tfunction exchangeRateLast() external view returns (uint);\\r\\n\\tfunction borrowIndex() external view returns (uint);\\r\\n\\tfunction totalBorrows() external view returns (uint);\\r\\n\\tfunction borrowAllowance(address owner, address spender) external view returns (uint);\\r\\n\\tfunction borrowBalance(address borrower) external view returns (uint);\\t\\r\\n\\tfunction borrowTracker() external view returns (address);\\r\\n\\t\\r\\n\\tfunction BORROW_PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\tfunction borrowApprove(address spender, uint256 value) external returns (bool);\\r\\n\\tfunction borrowPermit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\tfunction borrow(address borrower, address receiver, uint borrowAmount, bytes calldata data) external;\\r\\n\\tfunction liquidate(address borrower, address liquidator) external returns (uint seizeTokens);\\r\\n\\tfunction trackBorrow(address borrower) external;\\r\\n\\t\\r\\n\\t/*** Borrowable Interest Rate Model ***/\\r\\n\\r\\n\\tevent AccrueInterest(uint interestAccumulated, uint borrowIndex, uint totalBorrows);\\r\\n\\tevent CalculateKink(uint kinkRate);\\r\\n\\tevent CalculateBorrowRate(uint borrowRate);\\r\\n\\t\\r\\n\\tfunction KINK_BORROW_RATE_MAX() external pure returns (uint);\\r\\n\\tfunction KINK_BORROW_RATE_MIN() external pure returns (uint);\\r\\n\\tfunction KINK_MULTIPLIER() external pure returns (uint);\\r\\n\\tfunction borrowRate() external view returns (uint);\\r\\n\\tfunction kinkBorrowRate() external view returns (uint);\\r\\n\\tfunction kinkUtilizationRate() external view returns (uint);\\r\\n\\tfunction adjustSpeed() external view returns (uint);\\r\\n\\tfunction rateUpdateTimestamp() external view returns (uint32);\\r\\n\\tfunction accrualTimestamp() external view returns (uint32);\\r\\n\\t\\r\\n\\tfunction accrueInterest() external;\\r\\n\\t\\r\\n\\t/*** Borrowable Setter ***/\\r\\n\\r\\n\\tevent NewReserveFactor(uint newReserveFactor);\\r\\n\\tevent NewKinkUtilizationRate(uint newKinkUtilizationRate);\\r\\n\\tevent NewAdjustSpeed(uint newAdjustSpeed);\\r\\n\\tevent NewBorrowTracker(address newBorrowTracker);\\r\\n\\r\\n\\tfunction RESERVE_FACTOR_MAX() external pure returns (uint);\\r\\n\\tfunction KINK_UR_MIN() external pure returns (uint);\\r\\n\\tfunction KINK_UR_MAX() external pure returns (uint);\\r\\n\\tfunction ADJUST_SPEED_MIN() external pure returns (uint);\\r\\n\\tfunction ADJUST_SPEED_MAX() external pure returns (uint);\\r\\n\\t\\r\\n\\tfunction _initialize (\\r\\n\\t\\tstring calldata _name, \\r\\n\\t\\tstring calldata _symbol,\\r\\n\\t\\taddress _underlying, \\r\\n\\t\\taddress _collateral\\r\\n\\t) external;\\r\\n\\tfunction _setReserveFactor(uint newReserveFactor) external;\\r\\n\\tfunction _setKinkUtilizationRate(uint newKinkUtilizationRate) external;\\r\\n\\tfunction _setAdjustSpeed(uint newAdjustSpeed) external;\\r\\n\\tfunction _setBorrowTracker(address newBorrowTracker) external;\\r\\n}\"\r\n    },\r\n    \"/C/Users/simor/Desktop/imx/contracts/interfaces/IFarmingPool.sol\": {\r\n      \"content\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IFarmingPool {\\r\\n\\tfunction imx() external pure returns (address);\\r\\n\\tfunction claimable() external pure returns (address);\\r\\n\\tfunction borrowable() external pure returns (address);\\r\\n\\tfunction vestingBegin() external pure returns (uint);\\r\\n\\tfunction segmentLength() external pure returns (uint);\\r\\n\\tfunction recipients(address) external view returns (uint shares, uint lastShareIndex, uint credit);\\r\\n\\tfunction totalShares() external view returns (uint);\\r\\n\\tfunction shareIndex() external view returns (uint);\\r\\n\\tfunction epochBegin() external view returns (uint);\\r\\n\\tfunction epochAmount() external view returns (uint);\\r\\n\\tfunction lastUpdate() external view returns (uint);\\r\\n\\t\\r\\n\\tfunction updateShareIndex() external returns (uint _shareIndex);\\r\\n\\tfunction updateCredit(address account) external returns (uint credit);\\r\\n\\tfunction advance() external;\\r\\n\\tfunction claim() external returns (uint amount);\\r\\n\\tfunction claimAccount(address account) external returns (uint amount);\\r\\n\\tfunction trackBorrow(address borrower, uint borrowBalance, uint borrowIndex) external;\\r\\n\\t\\r\\n\\tevent UpdateShareIndex(uint shareIndex);\\r\\n\\tevent UpdateCredit(address indexed account, uint lastShareIndex, uint credit);\\r\\n\\tevent Claim(address indexed account, uint amount);\\r\\n\\tevent EditRecipient(address indexed account, uint shares, uint totalShares);\\r\\n\\tevent Advance(uint epochBegin, uint epochAmount);\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 999999\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"farmingPools\",\"type\":\"address[]\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"borrowables\",\"type\":\"address[]\"}],\"name\":\"trackBorrows\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ClaimAggregator","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"999999","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}