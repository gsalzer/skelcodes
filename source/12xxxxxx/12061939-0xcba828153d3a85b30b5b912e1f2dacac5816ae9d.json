{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/v2/registry/implementations.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.0;\\n\\ninterface IndexInterface {\\n    function master() external view returns (address);\\n}\\n\\ncontract Setup {\\n    address public defaultImplementation;\\n\\n    mapping (bytes4 => address) internal sigImplementations;\\n\\n    mapping (address => bytes4[]) internal implementationSigs;\\n}\\n\\ncontract Implementations is Setup {\\n    event LogSetDefaultImplementation(address indexed oldImplementation, address indexed newImplementation);\\n    event LogAddImplementation(address indexed implementation, bytes4[] sigs);\\n    event LogRemoveImplementation(address indexed implementation, bytes4[] sigs);\\n\\n    IndexInterface constant public instaIndex = IndexInterface(0x2971AdFa57b20E5a416aE5a708A8655A9c74f723);\\n\\n    modifier isMaster() {\\n        require(msg.sender == instaIndex.master(), \\\"Implementations: not-master\\\");\\n        _;\\n    }\\n\\n    function setDefaultImplementation(address _defaultImplementation) external isMaster {\\n        require(_defaultImplementation != address(0), \\\"Implementations: _defaultImplementation address not valid\\\");\\n        require(_defaultImplementation != defaultImplementation, \\\"Implementations: _defaultImplementation cannot be same\\\");\\n        emit LogSetDefaultImplementation(defaultImplementation, _defaultImplementation);\\n        defaultImplementation = _defaultImplementation;\\n    }\\n\\n    function addImplementation(address _implementation, bytes4[] calldata _sigs) external isMaster {\\n        require(_implementation != address(0), \\\"Implementations: _implementation not valid.\\\");\\n        require(implementationSigs[_implementation].length == 0, \\\"Implementations: _implementation already added.\\\");\\n        for (uint i = 0; i < _sigs.length; i++) {\\n            bytes4 _sig = _sigs[i];\\n            require(sigImplementations[_sig] == address(0), \\\"Implementations: _sig already added\\\");\\n            sigImplementations[_sig] = _implementation;\\n        }\\n        implementationSigs[_implementation] = _sigs;\\n        emit LogAddImplementation(_implementation, _sigs);\\n    }\\n\\n    function removeImplementation(address _implementation) external isMaster {\\n        require(_implementation != address(0), \\\"Implementations: _implementation not valid.\\\");\\n        require(implementationSigs[_implementation].length != 0, \\\"Implementations: _implementation not found.\\\");\\n        bytes4[] memory sigs = implementationSigs[_implementation];\\n        for (uint i = 0; i < sigs.length; i++) {\\n            bytes4 sig = sigs[i];\\n            delete sigImplementations[sig];\\n        }\\n        delete implementationSigs[_implementation];\\n        emit LogRemoveImplementation(_implementation, sigs);\\n\\n    }\\n}\\n\\ncontract InstaImplementations is Implementations {\\n    function getImplementation(bytes4 _sig) external view returns (address) {\\n        address _implementation = sigImplementations[_sig];\\n        return _implementation == address(0) ? defaultImplementation : _implementation;\\n    }\\n\\n    function getImplementationSigs(address _impl) external view returns (bytes4[] memory) {\\n        return implementationSigs[_impl];\\n    }\\n\\n    function getSigImplementation(bytes4 _sig) external view returns (address) {\\n        return sigImplementations[_sig];\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": true\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4[]\",\"name\":\"sigs\",\"type\":\"bytes4[]\"}],\"name\":\"LogAddImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4[]\",\"name\":\"sigs\",\"type\":\"bytes4[]\"}],\"name\":\"LogRemoveImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"LogSetDefaultImplementation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"_sigs\",\"type\":\"bytes4[]\"}],\"name\":\"addImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_sig\",\"type\":\"bytes4\"}],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_impl\",\"type\":\"address\"}],\"name\":\"getImplementationSigs\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_sig\",\"type\":\"bytes4\"}],\"name\":\"getSigImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"instaIndex\",\"outputs\":[{\"internalType\":\"contract IndexInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"removeImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultImplementation\",\"type\":\"address\"}],\"name\":\"setDefaultImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"InstaImplementations","CompilerVersion":"v0.7.0+commit.9e61f92b","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}