{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.2;\r\n\r\n/*******************************************************\r\n *                       Interfaces                    *\r\n *******************************************************/\r\ninterface IV2Vault {\r\n    function token() external view returns (address);\r\n\r\n    function totalAssets() external view returns (uint256);\r\n}\r\n\r\ninterface IOracle {\r\n    function getNormalizedValueUsdc(address tokenAddress, uint256 amount)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function getPriceUsdcRecommended(address tokenAddress)\r\n        external\r\n        view\r\n        returns (uint256);\r\n}\r\n\r\ninterface IHelper {\r\n    function assetStrategiesDelegatedBalance(address)\r\n        external\r\n        view\r\n        returns (uint256);\r\n}\r\n\r\ninterface IAddressesGenerator {\r\n    function assetsAddresses() external view returns (address[] memory);\r\n\r\n    function assetsLength() external view returns (uint256);\r\n}\r\n\r\n/*******************************************************\r\n *                     Adapter Logic                   *\r\n *******************************************************/\r\ncontract TvlAdapter_VAULT_V2 {\r\n    /*******************************************************\r\n     *           Common code shared by all adapters        *\r\n     *******************************************************/\r\n\r\n    IOracle public oracle; // The oracle is used to fetch USDC normalized pricing data\r\n    IHelper public helper; // A helper utility is used for batch allowance fetching and address array merging\r\n    IAddressesGenerator public addressesGenerator; // A utility for fetching assets addresses and length\r\n\r\n    /**\r\n     * TVL breakdown for an asset\r\n     */\r\n    struct AssetTvl {\r\n        address assetId; // Asset address\r\n        address tokenId; // Token address\r\n        uint256 tokenPriceUsdc; // Token price in USDC\r\n        TokenAmount underlyingTokenBalance; // Amount of underlying token in asset\r\n        TokenAmount delegatedBalance; // Amount of underlying token balance that is delegated\r\n        TokenAmount adjustedBalance; // TVL = underlyingTokenBalance - delegatedBalance\r\n    }\r\n\r\n    /**\r\n     * Token amount representation\r\n     */\r\n    struct TokenAmount {\r\n        uint256 amount; // Amount in underlying token decimals\r\n        uint256 amountUsdc; // Amount in USDC (6 decimals)\r\n    }\r\n\r\n    /**\r\n     * Information about the adapter\r\n     */\r\n    struct AdapterInfo {\r\n        address id; // Adapter address\r\n        string typeId; // Adapter typeId (for example \"VAULT_V2\" or \"IRON_BANK_MARKET\")\r\n        string categoryId; // Adapter categoryId (for example \"VAULT\")\r\n    }\r\n\r\n    /**\r\n     * Configure adapter\r\n     */\r\n    constructor(\r\n        address _oracleAddress,\r\n        address _helperAddress,\r\n        address _addressesGeneratorAddress\r\n    ) {\r\n        require(_oracleAddress != address(0), \"Missing oracle address\");\r\n        require(_helperAddress != address(0), \"Missing helper address\");\r\n        require(\r\n            _addressesGeneratorAddress != address(0),\r\n            \"Missing addresses generator address\"\r\n        );\r\n        oracle = IOracle(_oracleAddress);\r\n        helper = IHelper(_helperAddress);\r\n        addressesGenerator = IAddressesGenerator(_addressesGeneratorAddress);\r\n    }\r\n\r\n    function adapterInfo() public view returns (AdapterInfo memory) {\r\n        return\r\n            AdapterInfo({\r\n                id: address(this),\r\n                typeId: \"VAULT_V2\",\r\n                categoryId: \"VAULT\"\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Fetch the underlying token address of an asset\r\n     */\r\n    function underlyingTokenAddress(address assetAddress)\r\n        public\r\n        view\r\n        returns (address)\r\n    {\r\n        IV2Vault vault = IV2Vault(assetAddress);\r\n        address tokenAddress = vault.token();\r\n        return tokenAddress;\r\n    }\r\n\r\n    /**\r\n     * Fetch the total number of assets for this adapter\r\n     */\r\n    function assetsLength() public view returns (uint256) {\r\n        return addressesGenerator.assetsLength();\r\n    }\r\n\r\n    /**\r\n     * Fetch all asset addresses for this adapter\r\n     */\r\n    function assetsAddresses() public view returns (address[] memory) {\r\n        return addressesGenerator.assetsAddresses();\r\n    }\r\n\r\n    /**\r\n     * Internal method for constructing a TokenAmount struct given a token balance and address\r\n     */\r\n    function tokenAmount(uint256 amount, address tokenAddress)\r\n        internal\r\n        view\r\n        returns (TokenAmount memory)\r\n    {\r\n        return\r\n            TokenAmount({\r\n                amount: amount,\r\n                amountUsdc: oracle.getNormalizedValueUsdc(tokenAddress, amount)\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Fetch asset balance in underlying tokens\r\n     */\r\n    function assetBalance(address assetAddress) public view returns (uint256) {\r\n        IV2Vault vault = IV2Vault(assetAddress);\r\n        return vault.totalAssets();\r\n    }\r\n\r\n    /**\r\n     * Fetch TVL of an asset in USDC\r\n     */\r\n    function assetTvlUsdc(address assetAddress) public view returns (uint256) {\r\n        address tokenAddress = underlyingTokenAddress(assetAddress);\r\n        uint256 underlyingBalanceAmount = assetBalance(assetAddress);\r\n        uint256 delegatedBalanceAmount =\r\n            helper.assetStrategiesDelegatedBalance(assetAddress);\r\n        uint256 adjustedBalanceAmount =\r\n            underlyingBalanceAmount - delegatedBalanceAmount;\r\n        uint256 adjustedBalanceUsdc =\r\n            oracle.getNormalizedValueUsdc(tokenAddress, adjustedBalanceAmount);\r\n        return adjustedBalanceUsdc;\r\n    }\r\n\r\n    /**\r\n     * Fetch TVL breakdown of an asset\r\n     */\r\n    function assetTvl(address assetAddress)\r\n        public\r\n        view\r\n        returns (AssetTvl memory)\r\n    {\r\n        address tokenAddress = underlyingTokenAddress(assetAddress);\r\n        uint256 underlyingBalanceAmount = assetBalance(assetAddress);\r\n        uint256 delegatedBalanceAmount =\r\n            helper.assetStrategiesDelegatedBalance(assetAddress);\r\n        uint256 adjustedBalance =\r\n            underlyingBalanceAmount - delegatedBalanceAmount;\r\n        return\r\n            AssetTvl({\r\n                assetId: assetAddress,\r\n                tokenId: tokenAddress,\r\n                tokenPriceUsdc: oracle.getPriceUsdcRecommended(tokenAddress),\r\n                underlyingTokenBalance: tokenAmount(\r\n                    underlyingBalanceAmount,\r\n                    tokenAddress\r\n                ),\r\n                delegatedBalance: tokenAmount(\r\n                    delegatedBalanceAmount,\r\n                    tokenAddress\r\n                ),\r\n                adjustedBalance: tokenAmount(adjustedBalance, tokenAddress)\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Fetch TVL for adapter\r\n     */\r\n    function assetsTvlUsdc() external view returns (uint256) {\r\n        uint256 tvl;\r\n        address[] memory assetAddresses = assetsAddresses();\r\n        uint256 numberOfAssets = assetAddresses.length;\r\n        for (uint256 assetIdx = 0; assetIdx < numberOfAssets; assetIdx++) {\r\n            address assetAddress = assetAddresses[assetIdx];\r\n            uint256 _assetTvl = assetTvlUsdc(assetAddress);\r\n            tvl += _assetTvl;\r\n        }\r\n        return tvl;\r\n    }\r\n\r\n    /**\r\n     * Fetch TVL for adapter\r\n     */\r\n    function assetsTvl() external view returns (AssetTvl[] memory) {\r\n        address[] memory _assetsAddresses = assetsAddresses();\r\n        uint256 numberOfAssets = _assetsAddresses.length;\r\n\r\n        AssetTvl[] memory tvlData = new AssetTvl[](numberOfAssets);\r\n        for (uint256 assetIdx = 0; assetIdx < numberOfAssets; assetIdx++) {\r\n            address assetAddress = _assetsAddresses[assetIdx];\r\n            AssetTvl memory tvl = assetTvl(assetAddress);\r\n            tvlData[assetIdx] = tvl;\r\n        }\r\n        return tvlData;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_helperAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addressesGeneratorAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"adapterInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"typeId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"categoryId\",\"type\":\"string\"}],\"internalType\":\"struct TvlAdapter_VAULT_V2.AdapterInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressesGenerator\",\"outputs\":[{\"internalType\":\"contract IAddressesGenerator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"name\":\"assetBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"name\":\"assetTvl\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceUsdc\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountUsdc\",\"type\":\"uint256\"}],\"internalType\":\"struct TvlAdapter_VAULT_V2.TokenAmount\",\"name\":\"underlyingTokenBalance\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountUsdc\",\"type\":\"uint256\"}],\"internalType\":\"struct TvlAdapter_VAULT_V2.TokenAmount\",\"name\":\"delegatedBalance\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountUsdc\",\"type\":\"uint256\"}],\"internalType\":\"struct TvlAdapter_VAULT_V2.TokenAmount\",\"name\":\"adjustedBalance\",\"type\":\"tuple\"}],\"internalType\":\"struct TvlAdapter_VAULT_V2.AssetTvl\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"name\":\"assetTvlUsdc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetsAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetsTvl\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceUsdc\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountUsdc\",\"type\":\"uint256\"}],\"internalType\":\"struct TvlAdapter_VAULT_V2.TokenAmount\",\"name\":\"underlyingTokenBalance\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountUsdc\",\"type\":\"uint256\"}],\"internalType\":\"struct TvlAdapter_VAULT_V2.TokenAmount\",\"name\":\"delegatedBalance\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountUsdc\",\"type\":\"uint256\"}],\"internalType\":\"struct TvlAdapter_VAULT_V2.TokenAmount\",\"name\":\"adjustedBalance\",\"type\":\"tuple\"}],\"internalType\":\"struct TvlAdapter_VAULT_V2.AssetTvl[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetsTvlUsdc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"helper\",\"outputs\":[{\"internalType\":\"contract IHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"name\":\"underlyingTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TvlAdapter_VAULT_V2","CompilerVersion":"v0.8.2+commit.661d1103","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000d3ca98d986be88b72ff95fc2ec976a5e6339150d0000000000000000000000005aacd0d03096039ac4381cd814637e9fb7c34a6f000000000000000000000000437758d475f70249e03eda6be23684ad1fc375f0","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://9e74f59277e63f968dd80d1b1dad79e8a839d03db54033e12fa14911753a5089"}]}