{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);\r\n    function WETH() external view returns (address);\r\n}\r\n\r\ncontract RegisterManager {\r\n    IUniswapV2Router02 constant uniV2Router02 = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n    address public WETH = uniV2Router02.WETH();\r\n    address public distributionToken;\r\n    address public WHLClubAddress;\r\n    address[] path;\r\n    \r\n    uint public roomFee = 0.01 ether;\r\n    uint public systemFee = 0.05 ether;\r\n    \r\n    address public admin;\r\n\r\n    address payable public donationAddress;\r\n    \r\n    mapping(address => bool) public isSystemRegistered;\r\n    mapping(uint => mapping(address => bool)) private _isRoomRegistered;\r\n\r\n    \r\n    event SystemRegistered(address registrant);\r\n    event SystemUnregistered(address registrant);\r\n    event RoomRegistered(address registrant, uint room_id);\r\n    event RoomUnregistered(address registrant, uint room_id);\r\n    \r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"Not admin\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _distributionToken, address _whlclubAddress, address payable _donationAddress) {\r\n        require(_distributionToken != address(0), \"Invalid address\");\r\n        require(_whlclubAddress != address(0), \"Invalid address\");\r\n        \r\n        distributionToken = _distributionToken;\r\n        path.push(WETH);\r\n        path.push(_distributionToken);\r\n        \r\n        admin = msg.sender;\r\n        \r\n        WHLClubAddress = _whlclubAddress;\r\n        donationAddress = _donationAddress;\r\n    }\r\n    \r\n    function setDistributionToken(address _token) external onlyAdmin {\r\n        require(_token != address(0), \"Invalid address\");\r\n        \r\n        distributionToken = _token;\r\n    }\r\n    \r\n    function autoSwapAndDistritue(uint _estimatedAmount) private {\r\n        uint _ethBalance = address(this).balance;\r\n        uint _returnBalance;\r\n        if (_ethBalance >= 2 ether) {\r\n            _returnBalance = uniV2Router02.swapExactETHForTokens{value:1 ether}(_estimatedAmount, path, address(this), type(uint256).max)[1];\r\n            IERC20(distributionToken).transfer(address(0x000000000000000000000000000000000000dEaD), _returnBalance);\r\n        }\r\n    }\r\n    \r\n    function systemRegister(uint _estimatedAmount) external payable {\r\n        require(msg.value == systemFee, \"Wrong ETH value!\");\r\n        require(!isSystemRegistered[msg.sender], \"Already Registered!\");\r\n        \r\n        uint256 _amount = msg.value;\r\n        uint256 _donationAmount = _amount / 10;\r\n        \r\n        // if (!donationAddress.send(_donationAmount)) {\r\n        //     donationAddress.transfer(_donationAmount);\r\n        // }\r\n        (bool success,) = donationAddress.call{value: _donationAmount, gas: 38000}(\"\");\r\n        require(success);\r\n        \r\n        autoSwapAndDistritue(_estimatedAmount);\r\n        \r\n        isSystemRegistered[msg.sender] = true;\r\n        emit SystemRegistered(msg.sender);\r\n    }\r\n\r\n    function roomRegister(uint roomId, uint _estimatedAmount) external payable {\r\n        require(msg.value == roomFee, \"Wrong ETH value!\");\r\n        require(!_isRoomRegistered[roomId][msg.sender], \"Already Registered!\");\r\n        \r\n        uint256 _amount = msg.value;\r\n        uint256 _donationAmount = _amount / 10;\r\n        \r\n        // if (!donationAddress.send(_donationAmount)) {\r\n        //     donationAddress.transfer(_donationAmount);\r\n        // }\r\n        (bool success,) = donationAddress.call{value: _donationAmount, gas: 38000}(\"\");\r\n        require(success);\r\n        \r\n        autoSwapAndDistritue(_estimatedAmount);\r\n        \r\n        _isRoomRegistered[roomId][msg.sender] = true;\r\n        emit RoomRegistered(msg.sender, roomId);\r\n    }\r\n    \r\n    function isRoomRegistered(uint roomId, address registrant) external view returns(bool) {\r\n        return _isRoomRegistered[roomId][registrant];\r\n    }\r\n\r\n    function setSystemFee(uint _systemFee) external onlyAdmin {\r\n        systemFee = _systemFee;\r\n    }\r\n\r\n    function setRoomFee(uint _roomFee) external onlyAdmin {\r\n        roomFee = _roomFee;\r\n    }\r\n\r\n    function setAdmin(address _newAdmin) external onlyAdmin {\r\n        require(_newAdmin != address(0), \"Invalid address\");\r\n        \r\n        admin = _newAdmin;\r\n    }\r\n    \r\n    function setDonationAddress(address payable _donationAddress) external onlyAdmin {\r\n        require(_donationAddress != address(0), \"Invalid address\");\r\n        \r\n        donationAddress = _donationAddress;\r\n    }\r\n    \r\n    function roomUnregister(uint roomId, address registrant) external onlyAdmin {\r\n        // require(!isSystemRegistered[registrant], \"Unexist registrant!\");\r\n        require(_isRoomRegistered[roomId][registrant], \"Unexist registrant in the room!\");\r\n        _isRoomRegistered[roomId][registrant] = false;\r\n        emit RoomUnregistered(registrant, roomId);\r\n    }\r\n\r\n    function systemUnregister(address registrant) external onlyAdmin {\r\n        require(isSystemRegistered[registrant], \"Unexist registrant!\");\r\n        isSystemRegistered[registrant] = false;\r\n        emit SystemUnregistered(registrant);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_distributionToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_whlclubAddress\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_donationAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"room_id\",\"type\":\"uint256\"}],\"name\":\"RoomRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"room_id\",\"type\":\"uint256\"}],\"name\":\"RoomUnregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"SystemRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"SystemUnregistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WHLClubAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributionToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donationAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roomId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"isRoomRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSystemRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roomFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roomId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_estimatedAmount\",\"type\":\"uint256\"}],\"name\":\"roomRegister\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roomId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"roomUnregister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setDistributionToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_donationAddress\",\"type\":\"address\"}],\"name\":\"setDonationAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roomFee\",\"type\":\"uint256\"}],\"name\":\"setRoomFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_systemFee\",\"type\":\"uint256\"}],\"name\":\"setSystemFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_estimatedAmount\",\"type\":\"uint256\"}],\"name\":\"systemRegister\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"systemUnregister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"RegisterManager","CompilerVersion":"v0.8.5+commit.a4f2e591","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000002af72850c504ddd3c1876c66a914caee7ff8a46a00000000000000000000000015e5d409001eaff5076af14cd7a4f3268f266445000000000000000000000000718a03c0b38889d57224b5a4ec853953f7b1aa18","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f3d58c0943bea4f54fb1c5826d91daa3b362efbdabf270914a7dc78607922d8b"}]}