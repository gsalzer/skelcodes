{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"settings\": {\r\n    \"evmVersion\": \"berlin\",\r\n    \"libraries\": {},\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"none\"\r\n    },\r\n    \"optimizer\": {\r\n      \"details\": {\r\n        \"constantOptimizer\": true,\r\n        \"cse\": true,\r\n        \"deduplicate\": true,\r\n        \"jumpdestRemover\": true,\r\n        \"orderLiterals\": false,\r\n        \"peephole\": true,\r\n        \"yul\": false\r\n      },\r\n      \"runs\": 256\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"sources\": {\r\n    \"src/rollup/contracts/IModule.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: Unlicense\\npragma solidity >=0.7.6;\\n\\n// Audit-1: ok\\ninterface IModule {\\n  enum VotingStatus {\\n    UNKNOWN,\\n    OPEN,\\n    CLOSED,\\n    PASSED\\n  }\\n\\n  function onCreateProposal (\\n    bytes32 communityId,\\n    uint256 totalMemberCount,\\n    uint256 totalValueLocked,\\n    address proposer,\\n    uint256 proposerBalance,\\n    uint256 startDate,\\n    bytes calldata internalActions,\\n    bytes calldata externalActions\\n  ) external view;\\n\\n  function onProcessProposal (\\n    bytes32 proposalId,\\n    bytes32 communityId,\\n    uint256 totalMemberCount,\\n    uint256 totalVoteCount,\\n    uint256 totalVotingShares,\\n    uint256 totalVotingSignal,\\n    uint256 totalValueLocked,\\n    uint256 secondsPassed\\n  ) external view returns (VotingStatus, uint256 secondsTillClose, uint256 quorumPercent);\\n}\\n\"\r\n    },\r\n    \"src/rollup/contracts/modules/SevenDayVoting.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: Unlicense\\npragma solidity >=0.7.6;\\n\\nimport '../IModule.sol';\\n\\n/// @notice Seven Day Voting - Simple Majority Voting.\\n/// Used for protocol upgrades and funding proposals.\\n/// * 7 day voting period.\\n/// * Quorum >= 10%.\\n/// * 0.1% of TVL needed to propose.\\n/// * A proposal passes if the total signal (average preference) is over 50% (YES).\\n// Audit-1: ok\\ncontract SevenDayVoting is IModule {\\n  /// @notice Called on proposal creation.\\n  /// Checks if `proposerBalance` is at least TVL / 1000 (0.1%)\\n  function onCreateProposal (\\n    bytes32 /*communityId*/,\\n    uint256 /*totalMemberCount*/,\\n    uint256 totalValueLocked,\\n    address /*proposer*/,\\n    uint256 proposerBalance,\\n    uint256 /*startDate*/,\\n    bytes calldata /*internalActions*/,\\n    bytes calldata /*externalActions*/\\n  ) external pure override\\n  {\\n    uint256 minProposerBalance = totalValueLocked / 1000;\\n    require(\\n      proposerBalance >= minProposerBalance,\\n      'Not enough balance'\\n    );\\n  }\\n\\n  /// @notice See requirements for this contract.\\n  function onProcessProposal (\\n    bytes32 /*proposalId*/,\\n    bytes32 /*communityId*/,\\n    uint256 /*totalMemberCount*/,\\n    uint256 totalVoteCount,\\n    uint256 totalVotingShares,\\n    uint256 totalVotingSignal,\\n    uint256 totalValueLocked,\\n    uint256 secondsPassed\\n  ) external pure override returns (VotingStatus, uint256, uint256) {\\n    // 7 days\\n    uint256 VOTING_DURATION = 604800;\\n    uint256 secondsTillClose = secondsPassed > VOTING_DURATION ? 0 : VOTING_DURATION - secondsPassed;\\n    uint256 minQuorum = totalValueLocked / 10;\\n    // both variables are used for frontend purposes\\n    // assuming `totalValueLocked` can not be over `totalVotingShares`\\n    uint256 onePercent = totalValueLocked / 100;\\n    uint256 q = onePercent == 0 ? 0 : totalVotingShares / onePercent;\\n\\n    // Proposal stays open if VOTING_DURATION has not yet passed.\\n    if (secondsPassed < VOTING_DURATION) {\\n      return (VotingStatus.OPEN, secondsTillClose, q);\\n    }\\n\\n    // Proposal is closed if less than 10% of TVL voted on this proposal.\\n    if (totalVotingShares < minQuorum || totalVoteCount == 0) {\\n      return (VotingStatus.CLOSED, secondsTillClose, q);\\n    }\\n\\n    // at this point we reached the `minQuorum` requirement.\\n    // `totalVoteCount` can not be 0 here.\\n    uint256 averageSignal = totalVotingSignal / totalVoteCount;\\n    if (averageSignal > 50) {\\n      return (VotingStatus.PASSED, secondsTillClose, q);\\n    }\\n\\n    // defaults to closed if `averageSignal` is not reached\\n    return (VotingStatus.CLOSED, secondsTillClose, q);\\n  }\\n}\\n\"\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValueLocked\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposerBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onCreateProposal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVoteCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotingShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotingSignal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValueLocked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondsPassed\",\"type\":\"uint256\"}],\"name\":\"onProcessProposal\",\"outputs\":[{\"internalType\":\"enum IModule.VotingStatus\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"SevenDayVoting","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"256","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"none"}]}