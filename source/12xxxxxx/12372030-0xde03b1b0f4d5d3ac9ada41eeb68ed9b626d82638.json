{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\ninterface IERC1155 {\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n\r\ncontract NftDrop {\r\n    address public owner;\r\n    address public nftAddress;\r\n    uint256 public nftTokenId;\r\n    mapping(address => bool) redemptions;\r\n    bytes4 immutable onErc1155SuccessfulResult =\r\n        bytes4(\r\n            keccak256(\r\n                \"onERC1155Received(address,address,uint256,uint256,bytes)\"\r\n            )\r\n        );\r\n    event WithdrawArt(address withdrawnTo);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"must be owner\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _nftAddress, uint256 _nftTokenId) public {\r\n        owner = msg.sender;\r\n        nftAddress = _nftAddress;\r\n        nftTokenId = _nftTokenId;\r\n    }\r\n\r\n    function redeemNft(\r\n        address address1,\r\n        bytes32 r,\r\n        bytes32 s,\r\n        uint8 v\r\n    ) public {\r\n        require(\r\n            (getSigner(address1, r, s, v) == owner),\r\n            \"must be signed by owner\"\r\n        );\r\n        require(!hasReedeemed(address1), \"already redeemed\");\r\n\r\n        redemptions[address1] = true;\r\n        IERC1155(nftAddress).safeTransferFrom(\r\n            address(this),\r\n            address1,\r\n            nftTokenId,\r\n            1,\r\n            \"\"\r\n        );\r\n        emit WithdrawArt(address1);\r\n    }\r\n\r\n    function getSigner(\r\n        address aCustomAddress,\r\n        bytes32 r,\r\n        bytes32 s,\r\n        uint8 v\r\n    ) public pure returns (address) {\r\n        bytes memory prefix = \"\\x19Ethereum Signed Message:\\n32\";\r\n        bytes32 hash = keccak256(abi.encodePacked(aCustomAddress));\r\n        bytes32 prefixedHash = keccak256(abi.encodePacked(prefix, hash));\r\n        return ecrecover(prefixedHash, v, r, s);\r\n    }\r\n\r\n    function hasReedeemed(address address1) public view returns (bool) {\r\n        return redemptions[address1];\r\n    }\r\n\r\n    function emergencyExecute(\r\n        address targetAddress,\r\n        bytes memory targetCallData\r\n    ) public onlyOwner returns (bool) {\r\n        (bool success, ) = targetAddress.call(targetCallData);\r\n        return success;\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceID)\r\n        external\r\n        pure\r\n        returns (bool)\r\n    {\r\n        return interfaceID == 0x01ffc9a7 || interfaceID == 0x4e2312e0;\r\n    }\r\n\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4) {\r\n        return onErc1155SuccessfulResult;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawnTo\",\"type\":\"address\"}],\"name\":\"WithdrawArt\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"targetCallData\",\"type\":\"bytes\"}],\"name\":\"emergencyExecute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aCustomAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"getSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address1\",\"type\":\"address\"}],\"name\":\"hasReedeemed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address1\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"redeemNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"NftDrop","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000d07dc4262bcdbf85190c01c996b4c06a461d24300000000000000000000000000000000000000000000000000000000000080a4b","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d88ddc04d98a5ad5af41c53ac51c302f1963c43922b826046b4b970edb3b9c6d"}]}