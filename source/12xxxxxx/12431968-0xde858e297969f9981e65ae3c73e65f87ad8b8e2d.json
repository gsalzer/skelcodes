{"status":"1","message":"OK","result":[{"SourceCode":"// Built off of https://github.com/DeltaBalances/DeltaBalances.github.io/blob/master/smart_contract/deltabalances.sol\r\npragma solidity ^0.4.21;\r\n\r\n\r\ncontract ContractChecker {\r\n  /* Fallback function, don't accept any ETH */\r\n  function() public payable {\r\n    revert();\r\n  }\r\n  \r\n   function checkAddress(address[] addr) view external returns(bool[] isContracts) {\r\n      isContracts = new bool[](addr.length);\r\n      for(uint i; i<addr.length; i++) {\r\n        uint size;\r\n        address token = addr[i];\r\n        assembly { size := extcodesize(token) }\r\n        isContracts[i] = size>0;\r\n      }\r\n      return isContracts;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address[]\"}],\"name\":\"checkAddress\",\"outputs\":[{\"name\":\"isContracts\",\"type\":\"bool[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"ContractChecker","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://955ce68ad1fabfb01eafecf0fba026a40372d8e6049ad1e8b40d1bb95e0bf561"}]}