{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\naqoleg.com\r\n\r\nThese are shares of the aqoleg company.\r\nThey are used to raise money and estimate the value of the company.\r\n\r\nThe contract contains the erc20 token aqo with the built-in exchange.\r\nThe token is created when buying and destroyed when selling.\r\nJust send eth to this address for purchase.\r\n\r\nEach aqo token can be sold at any time using this contract.\r\nThe token price depends on the total number of tokens.\r\nThe larger the total supply, the higher the price.\r\nThe minimum guaranteed price of the token is 1 eth/aqo, the maximum price is unlimited.\r\n\r\nt - total supply, aqo, 0 <= t < 100\r\np - price, eth/aqo, p >= 1\r\np = 10000 / (100 - t)^2\r\n\r\np |\r\n  |                                             /\r\n  |                                            -\r\n  |                                          _-\r\n  |                                        _-\r\n  |                                     __-\r\n  |                                 __--\r\n  |                            ___--\r\n  |                      ___---\r\n3 |               ____---\r\n  |      _____----\r\n1 |------\r\n0 |________________________________________________________\r\n  0                    40                            100  t\r\n\r\nb - contract balance, eth, b >= 0\r\nb = integral p(t) dt, total balance is the sum of the prices of all tokens\r\nb = 10000 / (100 - t) - 100\r\nt = 100 - 10000 / (b + 100)\r\n\r\nb |\r\n  |                                   /\r\n  |                                  -\r\n  |                                 -\r\n  |                               _-\r\n  |                             _-\r\n  |                          __-\r\n  |                      __--\r\n  |                  __--\r\n  |              __--\r\n  |         ___--\r\n5 |   ___---\r\n0 |---_____________________________________________________\r\n  0    5                                             100  t\r\n\r\nThe token strictly complies with the erc20 standard.\r\n\r\nThe contract was developed with a focus on low gas consumption.\r\nEach transaction uses 20000 - 70000 gas.\r\n\r\nIf you find any tokens on this contract address,\r\nit would be great if you grab them (with the 'clean' function) and use them.\r\n\r\nAll users are equal, including the creator.\r\n\r\nEnjoy!\r\n\r\nApp - aqoleg.com/aqo\r\n*/\r\n\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.4;\r\n\r\n\r\n/// @title erc20 token with built-in exchange\r\n/// @author aqoleg\r\n/// @dev checked for overflow, tested for deposit with 'selfdistruct'\r\ncontract Aqo {\r\n    /// @notice maximum total supply 100 aqo\r\n    /// @dev erc20\r\n    /// @return total amount of tokens, aqo*1e-18\r\n    uint256 public totalSupply;\r\n\r\n    /// @dev erc20\r\n    /// @return number of tokens of the address, aqo*1e-18\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    /// @notice allowance(owner, spender)\r\n    /// @dev erc20\r\n    /// @return number of tokens allowed to be sent using transferFrom, aqo*1e-18\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    /// @dev erc20\r\n    uint8 public constant decimals = 18;\r\n\r\n    /// @dev erc20\r\n    string public constant name = \"aqoleg\";\r\n\r\n    /// @dev erc20\r\n    string public constant symbol = \"aqo\";\r\n\r\n    /// @notice logs each token transfer\r\n    /// @dev erc20\r\n    /// @param _from sender address or zero for minted tokens\r\n    /// @param _to recipient address or zero for burned tokens\r\n    /// @param _value number of tokens, aqo*1e-18\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n    /// @notice logs each change of the allowance for transferFrom by the owner\r\n    /// @dev erc20\r\n    /// @param _value number of tokens, aqo*1e-18\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    /// @notice logs a new price after each change\r\n    /// @param _price token price, wei/aqo\r\n    event Price(uint256 _price);\r\n\r\n    constructor() {\r\n        emit Price(price());\r\n    }\r\n\r\n    /// @notice if something is unrecognized, buys tokens\r\n    fallback () external payable {\r\n        buy();\r\n    }\r\n\r\n    /// @notice buys tokens with incoming eth\r\n    receive () external payable {\r\n        buy();\r\n    }\r\n\r\n    /// @notice minimum price 1 eth/aqo\r\n    /// @return current price, wei/aqo\r\n    function price() public view returns (uint256) {\r\n        return 1e58 / (1e20 - totalSupply) ** 2;\r\n    }\r\n\r\n    /// @notice sends tokens to the sender in exchange for all incoming eth\r\n    /// @return number of tokens purchased, aqo*1-18\r\n    function buy() public payable returns (uint256) {\r\n        uint256 newTotalSupply = 1e20 - 1e40 / (address(this).balance + 1e20);\r\n        uint256 tokens = newTotalSupply - totalSupply;\r\n        totalSupply = newTotalSupply;\r\n        balanceOf[msg.sender] += tokens;\r\n        emit Transfer(address(0), msg.sender, tokens);\r\n        emit Price(price());\r\n        return tokens;\r\n    }\r\n\r\n    /// @notice sends eth to the sender in exchange for tokens\r\n    /// @param _tokens number of tokens to sell, aqo*1-18\r\n    /// @return number of wei from sale\r\n    function sell(uint256 _tokens) external returns (uint256) {\r\n        require(balanceOf[msg.sender] >= _tokens, \"incufficient token balance\");\r\n        totalSupply -= _tokens;\r\n        balanceOf[msg.sender] -= _tokens;\r\n        uint256 value = address(this).balance - (1e40 / (1e20 - totalSupply) - 1e20);\r\n        payable(msg.sender).transfer(value);\r\n        emit Transfer(msg.sender, address(0), _tokens);\r\n        emit Price(price());\r\n        return value;\r\n    }\r\n\r\n    /// @notice transfers sender tokens\r\n    /// @dev erc20\r\n    /// @param _to recipient address\r\n    /// @param _value number of tokens to transfer, aqo*1-18\r\n    /// @return true on success\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        return _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    /// @notice transfers tokens of other address\r\n    /// @dev erc20\r\n    /// @param _from token owner address\r\n    /// @param _to recipient address\r\n    /// @param _value number of tokens to transfer, aqo*1-18\r\n    /// @return true on success\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(allowance[_from][msg.sender] >= _value, \"not allowed\");\r\n        allowance[_from][msg.sender] -= _value;\r\n        return _transfer(_from, _to, _value);\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint256 _value) private returns (bool) {\r\n        require(_to != address(0), \"zero recipient\");\r\n        require(balanceOf[_from] >= _value, \"insufficient token balance\");\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /// @notice changes allowance for transferFrom\r\n    /// @dev erc20\r\n    /// @param _spender token spender address\r\n    /// @param _value number of tokens allowed to spend, aqo*1-18\r\n    /// @return true on success\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        require(_spender != address(0), \"zero spender\");\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    /// @notice anyone can get spam tokens\r\n    /// @param _token spam token address\r\n    /// @param _value number of tokens to get\r\n    function clean(address _token, uint256 _value) external {\r\n        Erc20(_token).transfer(msg.sender, _value);\r\n    }\r\n}\r\n\r\n\r\n/// @dev for clean()\r\ninterface Erc20 {\r\n    function transfer(address _to, uint256 _value) external;\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"Price\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"clean\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Aqo","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://a3a1f7628ef241a93536ac5f8c06f23e125f2e833178f4095ed85b3ad63d7e2d"}]}