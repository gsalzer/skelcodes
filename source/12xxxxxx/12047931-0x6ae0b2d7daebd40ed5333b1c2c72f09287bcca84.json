{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.2;\r\n\r\ninterface cToken {\r\n    function underlying() external view returns (address);\r\n}\r\n\r\ninterface comptroller {\r\n    function getAllMarkets() external view returns (address[] memory);\r\n    function markets(address _market) external view returns (bool isListed, uint256 collateralFactorMantissa, bool isComped);\r\n}\r\n\r\ninterface ibtroller {\r\n    function getAllMarkets() external view returns (address[] memory);\r\n    function markets(address _market) external view returns (bool isListed, uint256 collateralFactorMantissa);\r\n}\r\n\r\ninterface aavecore {\r\n    struct ReserveConfigurationMap {\r\n        //bit 0-15: LTV\r\n        //bit 16-31: Liq. threshold\r\n        //bit 32-47: Liq. bonus\r\n        //bit 48-55: Decimals\r\n        //bit 56: Reserve is active\r\n        //bit 57: reserve is frozen\r\n        //bit 58: borrowing is enabled\r\n        //bit 59: stable rate borrowing enabled\r\n        //bit 60-63: reserved\r\n        //bit 64-79: reserve factor\r\n        uint256 data;\r\n    }\r\n    function getReserveConfiguration(address _market) external view returns (uint, uint, uint, bool);\r\n    function getConfiguration(address _market) external view returns (ReserveConfigurationMap memory);\r\n}\r\n\r\ninterface vaultparams {\r\n    function initialCollateralRatio(address _token) external view returns (uint);\r\n}\r\n\r\ncontract CollateralMaximizer {\r\n    address constant private _cream = address(0x3d5BC3c8d13dcB8bF317092d84783c2697AE9258);\r\n    address constant private _compound = address(0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B);\r\n    address constant private _aavev1 = address(0x3dfd23A6c5E8BbcFc9581d2E864a68feb6a076d3);\r\n    address constant private _aavev2 = address(0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9);\r\n    address constant private _ib = address(0xAB1c342C7bf5Ec5F02ADEA1c2270670bCa144CbB);\r\n    address constant private _weth = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\r\n    address constant private _unit = address(0x203153522B9EAef4aE17c6e99851EE7b2F7D312E);\r\n    \r\n    uint256 constant LTV_MASK =                   0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000; // prettier-ignore\r\n    uint256 constant LIQUIDATION_THRESHOLD_MASK = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFF; // prettier-ignore\r\n    uint256 constant LIQUIDATION_BONUS_MASK =     0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFF; // prettier-ignore\r\n    uint256 constant DECIMALS_MASK =              0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFF; // prettier-ignore\r\n    uint256 constant ACTIVE_MASK =                0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF; // prettier-ignore\r\n    uint256 constant FROZEN_MASK =                0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFF; // prettier-ignore\r\n    uint256 constant BORROWING_MASK =             0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFFFFFF; // prettier-ignore\r\n    uint256 constant STABLE_BORROWING_MASK =      0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFFFFFFFFF; // prettier-ignore\r\n    uint256 constant RESERVE_FACTOR_MASK =        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFF; // prettier-ignore\r\n    \r\n    /// @dev For the LTV, the start bit is 0 (up to 15), hence no bitshifting is needed\r\n    uint256 constant LIQUIDATION_THRESHOLD_START_BIT_POSITION = 16;\r\n    uint256 constant LIQUIDATION_BONUS_START_BIT_POSITION = 32;\r\n    uint256 constant RESERVE_DECIMALS_START_BIT_POSITION = 48;\r\n    uint256 constant IS_ACTIVE_START_BIT_POSITION = 56;\r\n    uint256 constant IS_FROZEN_START_BIT_POSITION = 57;\r\n    uint256 constant BORROWING_ENABLED_START_BIT_POSITION = 58;\r\n    uint256 constant STABLE_BORROWING_ENABLED_START_BIT_POSITION = 59;\r\n    uint256 constant RESERVE_FACTOR_START_BIT_POSITION = 64;\r\n    \r\n    uint256 constant MAX_VALID_LTV = 65535;\r\n    uint256 constant MAX_VALID_LIQUIDATION_THRESHOLD = 65535;\r\n    uint256 constant MAX_VALID_LIQUIDATION_BONUS = 65535;\r\n    uint256 constant MAX_VALID_DECIMALS = 255;\r\n    uint256 constant MAX_VALID_RESERVE_FACTOR = 65535;\r\n    \r\n    function getParamsMemory(aavecore.ReserveConfigurationMap memory self) internal pure returns (uint256) { \r\n        return (self.data & ~LTV_MASK);\r\n    }\r\n    function lookupMarket(address _core, address _token) public view returns (address) {\r\n        if (_core == _compound && _token == _weth) {\r\n            return 0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5;\r\n        } else if (_core == _cream && _token == _weth) {\r\n            return 0xD06527D5e56A3495252A528C4987003b712860eE;\r\n        }\r\n        address[] memory _list = comptroller(_core).getAllMarkets();\r\n        for (uint i = 0; i < _list.length; i++) {\r\n            if (_list[i] != address(0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5) && _list[i] != address(0xD06527D5e56A3495252A528C4987003b712860eE)) {\r\n                if (cToken(_list[i]).underlying() == _token) {\r\n                    return _list[i];\r\n                }\r\n            }\r\n        }\r\n        return address(0x0);\r\n    }\r\n    function lookupMarketCompound(address _token) external view returns (address) {\r\n        return lookupMarket(_compound, _token);\r\n    }\r\n    function lookupMarketCream(address _token) external view returns (address) {\r\n        return lookupMarket(_cream, _token);\r\n    }\r\n    function lookupMarketIB(address _token) external view returns (address) {\r\n        return lookupMarket(_ib, _token);\r\n    }\r\n    function getLTVUnit(address _token) public view returns (uint unit) {\r\n        unit = vaultparams(_unit).initialCollateralRatio(_token);\r\n    }\r\n    function getLTVCream(address _token) public view returns (uint cream) {\r\n        (,cream,) = comptroller(_cream).markets(lookupMarket(_cream, _token));\r\n        cream = cream / 1e16;\r\n    }\r\n    function getLTVCompound(address _token) public view returns (uint compound) {\r\n        (,compound,) = comptroller(_compound).markets(lookupMarket(_compound, _token));\r\n        compound = compound / 1e16;\r\n    }\r\n    function getLTVIB(address _token) public view returns (uint ib) {\r\n        (,ib) = ibtroller(_ib).markets(lookupMarket(_ib, _token));\r\n        ib = ib / 1e16;\r\n    }\r\n    function getLTVAaveV1(address _token) public view returns (uint aavev1) {\r\n        (,aavev1,,) = aavecore(_aavev1).getReserveConfiguration(_token);\r\n    }\r\n    function getLTVAaveV2(address _token) public view returns (uint aavev2) {\r\n        (aavev2) = getParamsMemory(aavecore(_aavev2).getConfiguration(_token));\r\n        aavev2 = aavev2 / 1e2;\r\n    }\r\n    function getLTV(address _token) public view returns (uint cream, uint compound, uint ib, uint aavev1, uint aavev2, uint unit) {\r\n        cream = getLTVCream(_token);\r\n        compound = getLTVCompound(_token);\r\n        ib = getLTVIB(_token);\r\n        aavev1 = getLTVAaveV1(_token);\r\n        aavev2 = getLTVAaveV2(_token);\r\n        unit = getLTVUnit(_token);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getLTV\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cream\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"compound\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ib\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aavev1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aavev2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getLTVAaveV1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"aavev1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getLTVAaveV2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"aavev2\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getLTVCompound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"compound\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getLTVCream\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cream\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getLTVIB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ib\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getLTVUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"unit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_core\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"lookupMarket\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"lookupMarketCompound\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"lookupMarketCream\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"lookupMarketIB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"CollateralMaximizer","CompilerVersion":"v0.8.2+commit.661d1103","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU LGPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d685b6cc0b56008da80c7b29711b8242d3116a28e6347069adf0853bafb18153"}]}