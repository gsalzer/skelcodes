{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.25 <0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract AppCoinsTracker {\r\n\r\n    ///////// STRUCTS /////////\r\n    struct CampaignLaunchedInformation {\r\n        bytes32 bidId;\r\n        string packageName;\r\n        string endPoint;\r\n        uint[3] countries;\r\n        uint price;\r\n        uint budget;\r\n        uint startDate;\r\n        uint endDate;\r\n    }\r\n\r\n    struct BulkPoaInformation {\r\n        bytes32 bidId;\r\n        bytes rootHash;\r\n        bytes signature;\r\n        uint256 newHashes;\r\n    }\r\n\r\n    struct OffChainBuyInformation {\r\n        address wallet;\r\n        bytes32 rootHash;\r\n    }\r\n    ///////// END: STRUCTS /////////\r\n\r\n    ///////// EVENTS /////////\r\n    event CampaignLaunched(\r\n        address owner,\r\n        bytes32 bidId,\r\n        string packageName,\r\n        uint[3] countries,\r\n        uint price,\r\n        uint budget,\r\n        uint startDate,\r\n        uint endDate,\r\n        string endPoint\r\n    );\r\n\r\n    event CampaignCancelled(\r\n        address owner,\r\n        bytes32 bidId\r\n    );\r\n\r\n    event BulkPoARegistered(\r\n        address owner,\r\n        bytes32 bidId,\r\n        bytes rootHash,\r\n        bytes signature,\r\n        uint256 newHashes\r\n    );\r\n\r\n    event OffChainBuy(\r\n        address _wallet,\r\n        bytes32 _rootHash\r\n    );\r\n    ///////// END: EVENTS /////////\r\n\r\n    /**\r\n    @notice Emits events informing the launch of campaigns.\r\n    @dev For each CampaignLaunchedInformation passed as argument is emited in\r\n         a CampaignedLaunched event.\r\n    @param _campaigns_launched_information List of CampaignLaunchedInformation\r\n           containing the information of campaigns that have been lauched.\r\n    */\r\n    function createCampaigns (CampaignLaunchedInformation[] memory\r\n                _campaigns_launched_information)public {\r\n        for(uint i = 0; i < _campaigns_launched_information.length; i++){\r\n            emit CampaignLaunched(\r\n                msg.sender,\r\n                _campaigns_launched_information[i].bidId,\r\n                _campaigns_launched_information[i].packageName,\r\n                _campaigns_launched_information[i].countries,\r\n                _campaigns_launched_information[i].price,\r\n                _campaigns_launched_information[i].budget,\r\n                _campaigns_launched_information[i].startDate,\r\n                _campaigns_launched_information[i].endDate,\r\n                _campaigns_launched_information[i].endPoint\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n    @notice Emits events informing the cancelation of campaigns.\r\n    @dev For each bidId passed as argument is emited in a CampaignedCancel event.\r\n    @param _bidIdList List of bidId of campaigns that have been cancelled.\r\n    */\r\n    function cancelCampaigns (bytes32[] memory _bidIdList) public {\r\n        for(uint i = 0; i < _bidIdList.length; i++) {\r\n            emit CampaignCancelled(msg.sender, _bidIdList[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n    @notice Emits events registering the root hash of the proof-of-attentions\r\n            transactions of a multiple blockchain_events.\r\n    @dev For each BulkPoaInformation passed as argument is emited in a\r\n         BulkPoARegistered event.\r\n    @param _bulks_poa_information List of BulkPoaInformation of campaigns that\r\n                                  have PoA that haven't been registered.\r\n    */\r\n    function bulkRegisterPoaOfMultipleCampaigns\r\n                (BulkPoaInformation[] memory _bulks_poa_information) public {\r\n        for(uint i = 0; i < _bulks_poa_information.length; i++) {\r\n            emit BulkPoARegistered(\r\n                msg.sender,\r\n                _bulks_poa_information[i].bidId,\r\n                _bulks_poa_information[i].rootHash,\r\n                _bulks_poa_information[i].signature,\r\n                _bulks_poa_information[i].newHashes\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n    @notice Emits events informing offchain transactions for in-app-billing\r\n    @dev For each OffChainBuyInformation passed as argument is emited in a OffChainBuyInformation\r\n         event.\r\n    @param _off_chain_buys List of OffChainBuyInformation - wallets and rootHashes - for\r\n                           which a OffChainBuyInformation event will be issued.\r\n    */\r\n    function informOffChainBuys(OffChainBuyInformation[] memory\r\n                _off_chain_buys) public {\r\n        for(uint i = 0; i < _off_chain_buys.length; i++){\r\n            emit OffChainBuy(_off_chain_buys[i].wallet,\r\n                             _off_chain_buys[i].rootHash);\r\n        }\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bidId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"rootHash\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newHashes\",\"type\":\"uint256\"}],\"name\":\"BulkPoARegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bidId\",\"type\":\"bytes32\"}],\"name\":\"CampaignCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bidId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"packageName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"countries\",\"type\":\"uint256[3]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"endPoint\",\"type\":\"string\"}],\"name\":\"CampaignLaunched\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_rootHash\",\"type\":\"bytes32\"}],\"name\":\"OffChainBuy\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"bidId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"rootHash\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"newHashes\",\"type\":\"uint256\"}],\"internalType\":\"struct AppCoinsTracker.BulkPoaInformation[]\",\"name\":\"_bulks_poa_information\",\"type\":\"tuple[]\"}],\"name\":\"bulkRegisterPoaOfMultipleCampaigns\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_bidIdList\",\"type\":\"bytes32[]\"}],\"name\":\"cancelCampaigns\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"bidId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"packageName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"endPoint\",\"type\":\"string\"},{\"internalType\":\"uint256[3]\",\"name\":\"countries\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"}],\"internalType\":\"struct AppCoinsTracker.CampaignLaunchedInformation[]\",\"name\":\"_campaigns_launched_information\",\"type\":\"tuple[]\"}],\"name\":\"createCampaigns\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"rootHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct AppCoinsTracker.OffChainBuyInformation[]\",\"name\":\"_off_chain_buys\",\"type\":\"tuple[]\"}],\"name\":\"informOffChainBuys\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"AppCoinsTracker","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d073263897c6d3f9e978935afc65b25a1cfcc160b73830c3b970c5b3364f4aef"}]}