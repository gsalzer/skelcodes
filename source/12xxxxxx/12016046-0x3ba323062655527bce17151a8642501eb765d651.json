{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: None\r\n\r\n// File contracts/interfaces/IComptroller.sol\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IComptroller {\r\n    function getAccountLiquidity(address account) external view returns (uint256, uint256, uint256);\r\n}\r\n\r\n// File contracts/AnchorMulticall.sol\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract AnchorMulticall {\r\n    IComptroller public comptroller = IComptroller(0x4dCf7407AE5C07f8681e1659f626E114A7667339);\r\n\r\n    function getAccountsLiquidity(address[] calldata accounts)\r\n        external\r\n        view\r\n        returns (uint256[] memory statuses)\r\n    {\r\n        for (uint256 i = 0; i < accounts.length; i++) {\r\n            (, , uint256 shortfall) = comptroller.getAccountLiquidity(accounts[i]);\r\n            statuses[i] = shortfall;\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"name\":\"comptroller\",\"outputs\":[{\"internalType\":\"contract IComptroller\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"getAccountsLiquidity\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"statuses\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"AnchorMulticall","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"2000","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://91d4a651fec697950dafbc42e348b94c55efa04436c7a688fe7e9bf0345b2ee9"}]}