{"status":"1","message":"OK","result":[{"SourceCode":"// Sources flattened with hardhat v2.1.1 https://hardhat.org\r\n\r\n// File contracts/StreamFunder.sol\r\n//\r\n// https://github.com/austintgriffith/scaffold-eth/tree/buidl-guidl-round-two\r\n//\r\n//\r\n// 🏰 BuidlGuidl.com\r\n//\r\n\r\n\r\npragma solidity >=0.6.0 <0.9.0;\r\npragma abicoder v2;\r\n//SPDX-License-Identifier: MIT\r\n\r\n//https://github.com/austintgriffith/scaffold-eth/tree/simple-stream\r\ncontract SimpleStream {\r\n  address payable public toAddress;\r\n  uint256 public cap;\r\n  uint256 public frequency;\r\n  uint256 public last;\r\n\r\n  function streamBalance() public view returns (uint256){}\r\n  function streamDeposit(string memory reason) public payable {}\r\n}\r\n\r\ncontract StreamFunder {\r\n\r\n  address payable public buidlGuidl = 0x97843608a00e2bbc75ab0C1911387E002565DEDE;\r\n\r\n  event FundStreams(address indexed sender, uint256 amount, address[] streams,string[] reasons);\r\n\r\n  function fundStreams(address[] memory streams,string[] memory reasons) public payable {\r\n    require(streams.length>0,\"no streams\");\r\n    require(streams.length==reasons.length,\"different length\");\r\n    for(uint8 a = 0;a<streams.length;a++){\r\n      if(streams[a]==buidlGuidl){\r\n        buidlGuidl.transfer(msg.value/streams.length);\r\n      }else{\r\n        SimpleStream thisStream = SimpleStream(streams[a]);\r\n        thisStream.streamDeposit{value: msg.value/streams.length}(reasons[a]);\r\n      }\r\n    }\r\n    emit FundStreams(msg.sender, msg.value, streams, reasons);\r\n  }\r\n\r\n  address public austinGriffith = 0x34aA3F359A9D614239015126635CE7732c18fDF3;\r\n  function austinCanCleanUpDust() public {\r\n    require(msg.sender==austinGriffith,\"Not Austin\");\r\n    buidlGuidl.transfer(address(this).balance);\r\n  }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"streams\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"}],\"name\":\"FundStreams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"austinCanCleanUpDust\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"austinGriffith\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buidlGuidl\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"streams\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"}],\"name\":\"fundStreams\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"StreamFunder","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://1781a79a193b2f4799612ff068a144ecacd9e1fa081e8d42d2e4dc2cbf70e1d2"}]}