{"status":"1","message":"OK","result":[{"SourceCode":"// Copyright (C) 2020 Centrifuge\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\npragma solidity >=0.5.15 <0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\n// TODO: split interfaces between tests and spell. Exclude all the function that afre only used in tests\r\ninterface SpellTinlakeRootLike {\r\n    function relyContract(address, address) external;\r\n}\r\n\r\ninterface SpellMemberlistLike {\r\n    function updateMember(address, uint) external;\r\n}\r\n\r\ninterface SpellReserveLike {\r\n    function payout(uint currencyAmount) external;\r\n}\r\n\r\ninterface DependLike {\r\n    function depend(bytes32, address) external;\r\n}\r\n\r\ninterface FileLike {\r\n    function file(bytes32, uint) external;\r\n    function file(bytes32, address) external;\r\n}\r\n\r\ninterface AuthLike {\r\n    function rely(address) external;\r\n    function deny(address) external;\r\n}\r\n\r\ninterface MigrationLike {\r\n    function migrate(address) external;\r\n}\r\n\r\ninterface TrancheLike {\r\n    function totalSupply() external returns(uint);\r\n    function totalRedeem() external returns(uint);\r\n}\r\n\r\ninterface PoolAdminLike {\r\n    function relyAdmin(address) external;\r\n}\r\n\r\ninterface MgrLike {\r\n    function lock(uint) external;\r\n}\r\n\r\ninterface SpellERC20Like {\r\n    function balanceOf(address) external view returns (uint256);\r\n    function transferFrom(address, address, uint) external returns (bool);\r\n    function approve(address, uint) external;\r\n}\r\n\r\n// spell for: ns2 tranche migration\r\ncontract TinlakeSpell {\r\n\r\n// {\r\n//   \"DEPLOYMENT_NAME\": \"NewSilver 2 mainnet deployment\",\r\n//   \"ROOT_CONTRACT\": \"0x53b2d22d07E069a3b132BfeaaD275b10273d381E\",\r\n//   \"TINLAKE_CURRENCY\": \"0x6b175474e89094c44da98b954eedeac495271d0f\",\r\n//   \"BORROWER_DEPLOYER\": \"0x9137BFdbB43BDf83DB5B8e691B5D2ceBE6475392\",\r\n//   \"TITLE_FAB\": \"0x8bA230C8b7C6B4C5d6A1bfC53B4d992CD0963661\",\r\n//   \"SHELF_FAB\": \"0xEa66cD92CaFF63c82A31BAa2BdA274ACbBA6323a\",\r\n//   \"PILE_FAB\": \"0xc1C9330Fcc5694B902CB27bCB615fB126DfACc55\",\r\n//   \"COLLECTOR_FAB\": \"0x7d882A8513C9cf5D7623222607Ea67a6C03676d2\",\r\n//   \"FEED_FAB\": \"0xC2f81D0e9744ca806f024c884FD18462Ce787550\",\r\n//   \"TITLE\": \"0x07cdD617c53B07208b0371C93a02deB8d8D49C6e\",\r\n//   \"PILE\": \"0x3eC5c16E7f2C6A80E31997C68D8Fa6ACe089807f\",\r\n//   \"SHELF\": \"0x7d057A056939bb96D682336683C10EC89b78D7CE\",\r\n//   \"COLLECTOR\": \"0x62f290512c690a817f47D2a4a544A5d48D1408BE\",\r\n//   \"FEED\": \"0x41fAD1Eb242De19dA0206B0468763333BB6C2B3D\",\r\n//   \"LENDER_DEPLOYER\": \"0xed0d554A3125E79B9E77A919c7cc651d235A3B1A\",\r\n//   \"OPERATOR_FAB\": \"0x782436a28B5d45645C8b56f4456f1593AF29FD8f\",\r\n//   \"ASSESSOR_FAB\": \"0xc2ACC63c37634f37a8Fa26F041CC2FA4331a3184\",\r\n//   \"ASSESSOR_ADMIN_FAB\": \"0xcA0fA916eB9003AD35d1356bE867c0CF28a9aab4\",\r\n//   \"COORDINATOR_FAB\": \"0x2b0E830af4353CDeED11E3FB32b35E67a6641162\",\r\n//   \"TRANCHE_FAB\": \"0xFA75dFDa070dC69EadCD6eb17fE08BAECBa23C88\",\r\n//   \"MEMBERLIST_FAB\": \"0x7E3bd3ee54febd930DA077479093C527F11d1729\",\r\n//   \"RESTRICTEDTOKEN_FAB\": \"0x0e9A86D770EDa4dea6c1d7C8cd23245318F4327a\",\r\n//   \"RESERVE_FAB\": \"0x067129E2D2f1aE84B1014c33C54eAE92D18A5454\",\r\n//   \"JUNIOR_OPERATOR\": \"0x4c4Cc6a0573db5823ECAA1d1d65EB64E5E0E5F01\",\r\n//   \"SENIOR_OPERATOR\": \"0x230f2E19D6c2Dc0c441c2150D4dD9d67B563A60C\",\r\n//   \"JUNIOR_TRANCHE\": \"0x7cD2a6Be6ca8fEB02aeAF08b7F350d7248dA7707\",\r\n//   \"SENIOR_TRANCHE\": \"0x636214f455480D19F17FE1aa45B9989C86041767\",\r\n//   \"JUNIOR_TOKEN\": \"0x961e1d4c9A7C0C3e05F17285f5FA34A66b62dBb1\",\r\n//   \"SENIOR_TOKEN\": \"0xE4C72b4dE5b0F9ACcEA880Ad0b1F944F85A9dAA0\",\r\n//   \"JUNIOR_MEMBERLIST\": \"0x42C2483EEE8c1Fe46C398Ac296C59674F9eb88CD\",\r\n//   \"SENIOR_MEMBERLIST\": \"0x5B5CFD6E45F1407ABCb4BFD9947aBea1EA6649dA\",\r\n//   \"ASSESSOR\": \"0x83E2369A33104120746B589Cc90180ed776fFb91\",\r\n//   \"ASSESSOR_ADMIN\": \"0x46470030e1c732A9C2b541189471E47661311375\",\r\n//   \"COORDINATOR\": \"0xcC7AFB5DeED34CF67E72d4C53B142F44c9268ab9\",\r\n//   \"RESERVE\": \"0xD9E4391cF31638a8Da718Ff0Bf69249Cdc48fB2B\",\r\n//   \"GOVERNANCE\": \"0xf3BceA7494D8f3ac21585CA4b0E52aa175c24C25\",\r\n//   \"MAIN_DEPLOYER\": \"0x1a5a533BcF4ef8A884732056f413114159d03058\",\r\n//   \"CLERK\": \"0xA9eCF012dD36512e5fFCD5585D72386E46135Cdd\",\r\n//   \"MAKER_MGR\": \"0x2474F297214E5d96Ba4C81986A9F0e5C260f445D\",\r\n//   \"COMMIT_HASH\": \"fc1f8e275a9d05d877e64f46810c107cde0808ce\",\r\n// }\r\n\r\n// senior\r\n// dapp create 'src/lender/tranche.sol:Tranche' 0x6b175474e89094c44da98b954eedeac495271d0f 0xE4C72b4dE5b0F9ACcEA880Ad0b1F944F85A9dAA0\r\n// 0x3f06DB6334435fF4150e14aD69F6280BF8E8dA64\r\n// junior\r\n// dapp create 'src/lender/tranche.sol:Tranche' 0x6b175474e89094c44da98b954eedeac495271d0f 0x961e1d4c9A7C0C3e05F17285f5FA34A66b62dBb1\r\n// 0x53CF3CCd97CA914F9e441B8cd9A901E69B170f27\r\n\r\n    bool public done;\r\n    string constant public description = \"Tinlake NS2 migration mainnet Spell\";\r\n\r\n    address constant public ROOT = 0x53b2d22d07E069a3b132BfeaaD275b10273d381E;\r\n    address constant public SENIOR_TOKEN = 0xE4C72b4dE5b0F9ACcEA880Ad0b1F944F85A9dAA0;\r\n    address constant public JUNIOR_TOKEN = 0x961e1d4c9A7C0C3e05F17285f5FA34A66b62dBb1;\r\n    address constant public SENIOR_OPERATOR = 0x230f2E19D6c2Dc0c441c2150D4dD9d67B563A60C;\r\n    address constant public JUNIOR_OPERATOR = 0x4c4Cc6a0573db5823ECAA1d1d65EB64E5E0E5F01;\r\n\r\n    address constant public ASSESSOR = 0x83E2369A33104120746B589Cc90180ed776fFb91;\r\n    address constant public COORDINATOR = 0xcC7AFB5DeED34CF67E72d4C53B142F44c9268ab9;\r\n    address constant public RESERVE = 0xD9E4391cF31638a8Da718Ff0Bf69249Cdc48fB2B;\r\n\r\n    address constant public CLERK = 0xA9eCF012dD36512e5fFCD5585D72386E46135Cdd;\r\n    address constant public MGR =  0x2474F297214E5d96Ba4C81986A9F0e5C260f445D;\r\n\r\n    address constant public SENIOR_TRANCHE_OLD = 0x636214f455480D19F17FE1aa45B9989C86041767;\r\n    address constant public JUNIOR_TRANCHE_OLD = 0x7cD2a6Be6ca8fEB02aeAF08b7F350d7248dA7707;\r\n    address constant public TINLAKE_CURRENCY = 0x6B175474E89094C44Da98b954EedeAC495271d0F; // DAI\r\n\r\n    // new contracts -> to be migrated\r\n    address constant public SENIOR_TRANCHE_NEW = 0x3f06DB6334435fF4150e14aD69F6280BF8E8dA64;\r\n    address constant public JUNIOR_TRANCHE_NEW = 0x53CF3CCd97CA914F9e441B8cd9A901E69B170f27;\r\n\r\n    address self;\r\n\r\n    // permissions to be set\r\n    function cast() public {\r\n        require(!done, \"spell-already-cast\");\r\n        done = true;\r\n        execute();\r\n    }\r\n\r\n    function execute() internal {\r\n        SpellTinlakeRootLike root = SpellTinlakeRootLike(ROOT);\r\n        self = address(this);\r\n        // set spell as ward on the core contract to be able to wire the new contracts correctly\r\n        root.relyContract(JUNIOR_TRANCHE_OLD, self);\r\n        root.relyContract(SENIOR_TRANCHE_OLD, self);\r\n        root.relyContract(SENIOR_TRANCHE_NEW, self);\r\n        root.relyContract(JUNIOR_TRANCHE_NEW, self);\r\n        root.relyContract(SENIOR_OPERATOR, self);\r\n        root.relyContract(JUNIOR_OPERATOR, self);\r\n        root.relyContract(SENIOR_TOKEN, self);\r\n        root.relyContract(JUNIOR_TOKEN, self);\r\n\r\n        root.relyContract(ASSESSOR, self);\r\n        root.relyContract(COORDINATOR, self);\r\n        root.relyContract(RESERVE, self);\r\n\r\n        root.relyContract(CLERK, self);\r\n        root.relyContract(MGR, self);\r\n\r\n        // contract migration --> assumption: root contract is already ward on the new contracts\r\n        migrateTranches();\r\n    }\r\n\r\n    function migrateTranches() internal {\r\n\r\n        // senior\r\n        TrancheLike seniorTranche = TrancheLike(SENIOR_TRANCHE_NEW);\r\n        require((seniorTranche.totalSupply() == 0 && seniorTranche.totalRedeem() == 0), \"senior-tranche-has-orders\");\r\n\r\n        // dependencies\r\n        DependLike(SENIOR_TRANCHE_NEW).depend(\"reserve\", RESERVE);\r\n        DependLike(SENIOR_TRANCHE_NEW).depend(\"epochTicker\", COORDINATOR);\r\n        DependLike(SENIOR_OPERATOR).depend(\"tranche\", SENIOR_TRANCHE_NEW);\r\n        DependLike(ASSESSOR).depend(\"seniorTranche\", SENIOR_TRANCHE_NEW);\r\n        DependLike(COORDINATOR).depend(\"seniorTranche\", SENIOR_TRANCHE_NEW);\r\n        DependLike(CLERK).depend(\"tranche\", SENIOR_TRANCHE_NEW);\r\n        FileLike(MGR).file(\"tranche\", SENIOR_TRANCHE_NEW);\r\n\r\n        // permissions\r\n        AuthLike(SENIOR_TRANCHE_NEW).rely(SENIOR_OPERATOR);\r\n        AuthLike(SENIOR_TRANCHE_NEW).rely(COORDINATOR);\r\n        AuthLike(SENIOR_TRANCHE_NEW).rely(CLERK);\r\n\r\n        AuthLike(SENIOR_TOKEN).deny(SENIOR_TRANCHE_OLD);\r\n        AuthLike(SENIOR_TOKEN).rely(SENIOR_TRANCHE_NEW);\r\n        AuthLike(RESERVE).deny(SENIOR_TRANCHE_OLD);\r\n        AuthLike(RESERVE).rely(SENIOR_TRANCHE_NEW);\r\n\r\n        // junior\r\n        TrancheLike juniorTranche = TrancheLike(SENIOR_TRANCHE_NEW);\r\n        require((juniorTranche.totalSupply() == 0 && juniorTranche.totalRedeem() == 0), \"junior-tranche-has-orders\");\r\n\r\n        // dependencies\r\n        DependLike(JUNIOR_TRANCHE_NEW).depend(\"reserve\", RESERVE);\r\n        DependLike(JUNIOR_TRANCHE_NEW).depend(\"epochTicker\", COORDINATOR);\r\n        DependLike(JUNIOR_OPERATOR).depend(\"tranche\", JUNIOR_TRANCHE_NEW);\r\n        DependLike(ASSESSOR).depend(\"juniorTranche\", JUNIOR_TRANCHE_NEW);\r\n        DependLike(COORDINATOR).depend(\"juniorTranche\", JUNIOR_TRANCHE_NEW);\r\n\r\n        // permissions\r\n        AuthLike(JUNIOR_TRANCHE_NEW).rely(JUNIOR_OPERATOR);\r\n        AuthLike(JUNIOR_TRANCHE_NEW).rely(COORDINATOR);\r\n        \r\n        AuthLike(JUNIOR_TOKEN).deny(JUNIOR_TRANCHE_OLD);\r\n        AuthLike(JUNIOR_TOKEN).rely(JUNIOR_TRANCHE_NEW);\r\n        AuthLike(RESERVE).deny(JUNIOR_TRANCHE_OLD);\r\n        AuthLike(RESERVE).rely(JUNIOR_TRANCHE_NEW);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"ASSESSOR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CLERK\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COORDINATOR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JUNIOR_OPERATOR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JUNIOR_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JUNIOR_TRANCHE_NEW\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JUNIOR_TRANCHE_OLD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MGR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RESERVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROOT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SENIOR_OPERATOR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SENIOR_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SENIOR_TRANCHE_NEW\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SENIOR_TRANCHE_OLD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TINLAKE_CURRENCY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cast\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"done\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TinlakeSpell","CompilerVersion":"v0.5.15+commit.6a57276f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unknown","Proxy":"0","Implementation":"","SwarmSource":"bzzr://18dae78835aa7dfec024bdfb78040f31b174bb13681c462843146ed6cd78a0ac"}]}