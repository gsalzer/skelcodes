{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts\\interfaces\\IPoolToken.sol\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface IPoolToken {\r\n\r\n\t/*** Impermax ERC20 ***/\r\n\t\r\n\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n\t\r\n\tfunction name() external pure returns (string memory);\r\n\tfunction symbol() external pure returns (string memory);\r\n\tfunction decimals() external pure returns (uint8);\r\n\tfunction totalSupply() external view returns (uint);\r\n\tfunction balanceOf(address owner) external view returns (uint);\r\n\tfunction allowance(address owner, address spender) external view returns (uint);\r\n\tfunction approve(address spender, uint value) external returns (bool);\r\n\tfunction transfer(address to, uint value) external returns (bool);\r\n\tfunction transferFrom(address from, address to, uint value) external returns (bool);\r\n\t\r\n\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\r\n\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\r\n\tfunction nonces(address owner) external view returns (uint);\r\n\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\t\r\n\t/*** Pool Token ***/\r\n\t\r\n\tevent Mint(address indexed sender, address indexed minter, uint mintAmount, uint mintTokens);\r\n\tevent Redeem(address indexed sender, address indexed redeemer, uint redeemAmount, uint redeemTokens);\r\n\tevent Sync(uint totalBalance);\r\n\t\r\n\tfunction underlying() external view returns (address);\r\n\tfunction factory() external view returns (address);\r\n\tfunction totalBalance() external view returns (uint);\r\n\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\r\n\r\n\tfunction exchangeRate() external returns (uint);\r\n\tfunction mint(address minter) external returns (uint mintTokens);\r\n\tfunction redeem(address redeemer) external returns (uint redeemAmount);\r\n\tfunction skim(address to) external;\r\n\tfunction sync() external;\r\n\t\r\n\tfunction _setFactory() external;\r\n}\r\n\r\n// File: contracts\\interfaces\\IERC20.sol\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface IERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n}\r\n\r\n// File: contracts\\interfaces\\IReservesDistributor.sol\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface IReservesDistributor {\r\n\tfunction imx() external view returns (address);\r\n\tfunction xImx() external view returns (address);\r\n\tfunction periodLength() external view returns (uint);\r\n\tfunction lastClaim() external view returns (uint);\r\n\t\r\n    event Claim(uint previousBalance, uint timeElapsed, uint amount);\r\n    event NewPeriodLength(uint oldPeriodLength, uint newPeriodLength);\r\n    event Withdraw(uint previousBalance, uint amount);\r\n\r\n\tfunction claim() external returns (uint amount);\r\n\tfunction setPeriodLength(uint newPeriodLength) external;\r\n\tfunction withdraw(uint amount) external;\r\n}\r\n\r\n// File: contracts\\interfaces\\IStakingRouter.sol\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface IStakingRouter {\r\n\tfunction imx() external view returns (address);\r\n\tfunction xImx() external view returns (address);\r\n\tfunction reservesDistributor() external view returns (address);\r\n\t\r\n\tfunction stakeNoClaim(uint amount) external returns (uint tokens);\r\n\tfunction stake(uint amount) external returns (uint tokens);\r\n\tfunction unstakeNoClaim(uint tokens) external returns (uint amount);\r\n\tfunction unstake(uint tokens) external returns (uint amount);\r\n}\r\n\r\n// File: contracts\\StakingRouter.sol\r\n\r\npragma solidity =0.5.16;\r\n\r\n\r\n\r\n\r\n\r\ncontract StakingRouter is IStakingRouter {\r\n\taddress public imx;\r\n\taddress public xImx;\r\n\taddress public reservesDistributor;\r\n\r\n\tconstructor(address _imx, address _xImx, address _reservesDistributor) public {\r\n\t\timx = _imx;\r\n\t\txImx = _xImx;\r\n\t\treservesDistributor = _reservesDistributor;\r\n\t}\r\n\r\n\tfunction stakeNoClaim(uint amount) public returns (uint tokens) {\r\n\t\tIERC20(imx).transferFrom(msg.sender, xImx, amount);\r\n\t\ttokens = IPoolToken(xImx).mint(msg.sender);\r\n\t}\r\n\t\r\n\tfunction stake(uint amount) external returns (uint tokens) {\r\n\t\ttokens = stakeNoClaim(amount);\r\n\t\tIReservesDistributor(reservesDistributor).claim();\r\n\t}\r\n\t\r\n\tfunction unstakeNoClaim(uint tokens) public returns (uint amount) {\r\n\t\tIERC20(xImx).transferFrom(msg.sender, xImx, tokens);\r\n\t\tamount = IPoolToken(xImx).redeem(msg.sender);\r\n\t}\r\n\t\r\n\tfunction unstake(uint tokens) external returns (uint amount) {\r\n\t\tIReservesDistributor(reservesDistributor).claim();\r\n\t\tamount = unstakeNoClaim(tokens);\r\n\t}\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_imx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_xImx\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reservesDistributor\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"imx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reservesDistributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeNoClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"unstakeNoClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xImx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"StakingRouter","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"999999","ConstructorArguments":"0000000000000000000000007b35ce522cb72e4077baeb96cb923a5529764a00000000000000000000000000363b2deac84f0100d63c7427335f8350f596bf59000000000000000000000000a6f3c27f1b503221f3a3c9d34f587252ecfb3160","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://fd6c2feed52d58978c709283b8e08843b24676644810c54631ec88f636171232"}]}