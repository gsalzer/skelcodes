{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/lib/InitializableOwnable.sol\r\n\r\n/*\r\n\r\n    Copyright 2020 DODO ZOO.\r\n    SPDX-License-Identifier: Apache-2.0\r\n\r\n*/\r\n\r\npragma solidity 0.6.9;\r\npragma experimental ABIEncoderV2;\r\n\r\n/**\r\n * @title Ownable\r\n * @author DODO Breeder\r\n *\r\n * @notice Ownership related functions\r\n */\r\ncontract InitializableOwnable {\r\n    address public _OWNER_;\r\n    address public _NEW_OWNER_;\r\n    bool internal _INITIALIZED_;\r\n\r\n    // ============ Events ============\r\n\r\n    event OwnershipTransferPrepared(address indexed previousOwner, address indexed newOwner);\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    // ============ Modifiers ============\r\n\r\n    modifier notInitialized() {\r\n        require(!_INITIALIZED_, \"DODO_INITIALIZED\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == _OWNER_, \"NOT_OWNER\");\r\n        _;\r\n    }\r\n\r\n    // ============ Functions ============\r\n\r\n    function initOwner(address newOwner) public notInitialized {\r\n        _INITIALIZED_ = true;\r\n        _OWNER_ = newOwner;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        emit OwnershipTransferPrepared(_OWNER_, newOwner);\r\n        _NEW_OWNER_ = newOwner;\r\n    }\r\n\r\n    function claimOwnership() public {\r\n        require(msg.sender == _NEW_OWNER_, \"INVALID_CLAIM\");\r\n        emit OwnershipTransferred(_OWNER_, _NEW_OWNER_);\r\n        _OWNER_ = _NEW_OWNER_;\r\n        _NEW_OWNER_ = address(0);\r\n    }\r\n}\r\n\r\n// File: contracts/lib/CloneFactory.sol\r\n\r\ninterface ICloneFactory {\r\n    function clone(address prototype) external returns (address proxy);\r\n}\r\n\r\n// introduction of proxy mode design: https://docs.openzeppelin.com/upgrades/2.8/\r\n// minimum implementation of transparent proxy: https://eips.ethereum.org/EIPS/eip-1167\r\n\r\ncontract CloneFactory is ICloneFactory {\r\n    function clone(address prototype) external override returns (address proxy) {\r\n        bytes20 targetBytes = bytes20(prototype);\r\n        assembly {\r\n            let clone := mload(0x40)\r\n            mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\r\n            mstore(add(clone, 0x14), targetBytes)\r\n            mstore(\r\n                add(clone, 0x28),\r\n                0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000\r\n            )\r\n            proxy := create(0, clone, 0x37)\r\n        }\r\n        return proxy;\r\n    }\r\n}\r\n\r\n// File: contracts/Factory/DODOMineV2Factory.sol\r\n\r\n\r\n\r\ninterface IMineV2 {\r\n    function init(address owner, address token) external;\r\n\r\n    function addRewardToken(\r\n        address rewardToken,\r\n        uint256 rewardPerBlock,\r\n        uint256 startBlock,\r\n        uint256 endBlock\r\n    ) external;\r\n\r\n    function transferOwnership(address newOwner) external;\r\n}\r\n\r\n/**\r\n * @title DODOMineV2 Factory\r\n * @author DODO Breeder\r\n *\r\n * @notice Create And Register DODOMineV2 Contracts \r\n */\r\ncontract DODOMineV2Factory is InitializableOwnable {\r\n    // ============ Templates ============\r\n\r\n    address public immutable _CLONE_FACTORY_;\r\n    address public _DEFAULT_MAINTAINER_;\r\n    address public _MINEV2_TEMPLATE_;\r\n\r\n    // mine -> stakeToken\r\n    mapping(address => address) public _MINE_REGISTRY_;\r\n    // stakeToken -> mine\r\n    mapping(address => address) public _STAKE_REGISTRY_;\r\n\r\n    // ============ Events ============\r\n\r\n    event NewMineV2(address mine, address stakeToken);\r\n    event RemoveMineV2(address mine, address stakeToken);\r\n\r\n    constructor(\r\n        address cloneFactory,\r\n        address mineTemplate,\r\n        address defaultMaintainer\r\n    ) public {\r\n        _CLONE_FACTORY_ = cloneFactory;\r\n        _MINEV2_TEMPLATE_ = mineTemplate;\r\n        _DEFAULT_MAINTAINER_ = defaultMaintainer;\r\n    }\r\n\r\n    // ============ Functions ============\r\n\r\n    function createDODOMineV2(\r\n        address stakeToken,\r\n        address[] memory rewardTokens,\r\n        uint256[] memory rewardPerBlock,\r\n        uint256[] memory startBlock,\r\n        uint256[] memory endBlock\r\n    ) external onlyOwner returns (address newMineV2) {\r\n        require(rewardTokens.length > 0, \"REWARD_EMPTY\");\r\n        require(rewardTokens.length == rewardPerBlock.length, \"REWARD_PARAM_NOT_MATCH\");\r\n        require(startBlock.length == rewardPerBlock.length, \"REWARD_PARAM_NOT_MATCH\");\r\n        require(endBlock.length == rewardPerBlock.length, \"REWARD_PARAM_NOT_MATCH\");\r\n\r\n        newMineV2 = ICloneFactory(_CLONE_FACTORY_).clone(_MINEV2_TEMPLATE_);\r\n\r\n        IMineV2(newMineV2).init(address(this), stakeToken);\r\n\r\n        for(uint i = 0; i<rewardTokens.length; i++) {\r\n            IMineV2(newMineV2).addRewardToken(\r\n                rewardTokens[i],\r\n                rewardPerBlock[i],\r\n                startBlock[i],\r\n                endBlock[i]\r\n            );\r\n        }\r\n\r\n        IMineV2(newMineV2).transferOwnership(_DEFAULT_MAINTAINER_);\r\n\r\n        _MINE_REGISTRY_[newMineV2] = stakeToken;\r\n        _STAKE_REGISTRY_[stakeToken] = newMineV2;\r\n\r\n        emit NewMineV2(newMineV2, stakeToken);\r\n    }\r\n\r\n    // ============ Admin Operation Functions ============\r\n    \r\n    function updateMineV2Template(address _newMineV2Template) external onlyOwner {\r\n        _MINEV2_TEMPLATE_ = _newMineV2Template;\r\n    }\r\n\r\n    function updateDefaultMaintainer(address _newMaintainer) external onlyOwner {\r\n        _DEFAULT_MAINTAINER_ = _newMaintainer;\r\n    }\r\n\r\n    function addByAdmin(\r\n        address mine,\r\n        address stakeToken\r\n    ) external onlyOwner {\r\n        _MINE_REGISTRY_[mine] = stakeToken;\r\n        _STAKE_REGISTRY_[stakeToken] = mine;\r\n\r\n        emit NewMineV2(mine, stakeToken);\r\n    }\r\n\r\n    function removeByAdmin(\r\n        address mine,\r\n        address stakeToken\r\n    ) external onlyOwner {\r\n        _MINE_REGISTRY_[mine] = address(0);\r\n        _STAKE_REGISTRY_[stakeToken] = address(0);\r\n\r\n        emit RemoveMineV2(mine, stakeToken);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cloneFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mineTemplate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"defaultMaintainer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mine\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"}],\"name\":\"NewMineV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferPrepared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mine\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"}],\"name\":\"RemoveMineV2\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_CLONE_FACTORY_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_DEFAULT_MAINTAINER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MINEV2_TEMPLATE_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_MINE_REGISTRY_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_NEW_OWNER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_OWNER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_STAKE_REGISTRY_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mine\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"}],\"name\":\"addByAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"rewardTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"rewardPerBlock\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"startBlock\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"endBlock\",\"type\":\"uint256[]\"}],\"name\":\"createDODOMineV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newMineV2\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mine\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"}],\"name\":\"removeByAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMaintainer\",\"type\":\"address\"}],\"name\":\"updateDefaultMaintainer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMineV2Template\",\"type\":\"address\"}],\"name\":\"updateMineV2Template\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DODOMineV2Factory","CompilerVersion":"v0.6.9+commit.3e3065ac","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000005e5a7b76462e4bdf83aa98795644281bdba80b88000000000000000000000000ed5329409012c2e7fb6591862891b10a7cc6a0af00000000000000000000000095c4f5b83aa70810d4f142d58e5f7242bd891cb0","EVMVersion":"Default","Library":"","LicenseType":"Apache-2.0","Proxy":"0","Implementation":"","SwarmSource":"ipfs://9bdaaadeda4f2e1d6bccbcd7b53c93714da873b4ff037fc25c4db07a3f81e406"}]}