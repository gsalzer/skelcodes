{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: agpl-3.0\r\n\r\npragma solidity ^0.8.1;\r\n\r\ninterface ISupplyController {\r\n\tfunction mintIncentive(address addr) external;\r\n\tfunction mintableIncentive(address addr) external view returns (uint);\r\n\tfunction mint(address token, address owner, uint amount) external;\r\n\tfunction changeSupplyController(IADXToken token, address newSupplyController) external;\r\n}\r\n\r\ninterface IADXToken {\r\n\tfunction transfer(address to, uint256 amount) external returns (bool);\r\n\tfunction transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n\tfunction approve(address spender, uint256 amount) external returns (bool);\r\n\tfunction balanceOf(address spender) external view returns (uint);\r\n\tfunction allowance(address owner, address spender) external view returns (uint);\r\n\tfunction totalSupply() external returns (uint);\r\n\tfunction supplyController() external view returns (ISupplyController);\r\n\tfunction changeSupplyController(address newSupplyController) external;\r\n\tfunction mint(address owner, uint amount) external;\r\n}\r\n\r\n\r\ncontract ADXSupplyController {\r\n\tenum GovernanceLevel { None, Mint, All }\r\n\r\n\tuint public constant CAP = 150000000 * 1e18;\r\n\t// This amount was burned on purpose when migrating from Tom pool 2 (Staking with token 0xade) to Tom pool 3 (StakingPool with token 0xade)\r\n\tuint public immutable BURNED_MIN = 35000000 * 1e18;\r\n\tIADXToken public immutable ADX;\r\n\r\n\tmapping (address => uint8) public governance;\r\n\t// Some addresses (eg StakingPools) are incentivized with a certain allowance of ADX per year\r\n\tmapping (address => uint) public incentivePerSecond;\r\n\t// Keep track of when incentive tokens were last minted for a given addr\r\n\tmapping (address => uint) public incentiveLastMint;\r\n\r\n\tconstructor(IADXToken token) {\r\n\t\tgovernance[msg.sender] = uint8(GovernanceLevel.All);\r\n\t\tADX = token;\r\n\t}\r\n\r\n\tfunction changeSupplyController(address newSupplyController) external {\r\n\t\trequire(governance[msg.sender] >= uint8(GovernanceLevel.All), \"NOT_GOVERNANCE\");\r\n\t\tADX.changeSupplyController(newSupplyController);\r\n\t}\r\n\r\n\tfunction setGovernance(address addr, uint8 level) external {\r\n\t\trequire(governance[msg.sender] >= uint8(GovernanceLevel.All), \"NOT_GOVERNANCE\");\r\n\t\tgovernance[addr] = level;\r\n\t}\r\n\r\n\tfunction setIncentive(address addr, uint amountPerSecond) external {\r\n\t\trequire(governance[msg.sender] >= uint8(GovernanceLevel.All), \"NOT_GOVERNANCE\");\r\n\t\t// no more than 1 ADX per second\r\n\t\trequire(amountPerSecond < 1e18, \"AMOUNT_TOO_LARGE\");\r\n\t\tincentiveLastMint[addr] = block.timestamp;\r\n\t\tincentivePerSecond[addr] = amountPerSecond;\r\n\t\t// AUDIT: pending incentive lost here\r\n\t}\r\n\r\n\tfunction innerMint(IADXToken token, address owner, uint amount) internal {\r\n\t\tuint totalSupplyAfter = token.totalSupply() + amount;\r\n\t\trequire(totalSupplyAfter <= CAP + BURNED_MIN, \"MINT_TOO_LARGE\");\r\n\t\ttoken.mint(owner, amount);\r\n\t}\r\n\r\n\t// Kept because it\"s used for ADXLoyaltyPool\r\n\tfunction mint(IADXToken token, address owner, uint amount) external {\r\n\t\trequire(governance[msg.sender] >= uint8(GovernanceLevel.Mint), \"NOT_GOVERNANCE\");\r\n\t\tinnerMint(token, owner, amount);\r\n\t}\r\n\r\n\t// Incentive mechanism\r\n\tfunction mintableIncentive(address addr) public view returns (uint) {\r\n\t\treturn (block.timestamp - incentiveLastMint[addr]) * incentivePerSecond[addr];\r\n\t}\r\n\r\n\tfunction mintIncentive(address addr) external {\r\n\t\tuint amount = mintableIncentive(addr);\r\n\t\tincentiveLastMint[addr] = block.timestamp;\r\n\t\tinnerMint(ADX, addr, amount);\r\n\t}\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IADXToken\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ADX\",\"outputs\":[{\"internalType\":\"contract IADXToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BURNED_MIN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSupplyController\",\"type\":\"address\"}],\"name\":\"changeSupplyController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"incentiveLastMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"incentivePerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IADXToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"mintIncentive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"mintableIncentive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountPerSecond\",\"type\":\"uint256\"}],\"name\":\"setIncentive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ADXSupplyController","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000ade00c28244d5ce17d72e40330b1c318cd12b7c3","EVMVersion":"Default","Library":"","LicenseType":"Unknown","Proxy":"0","Implementation":"","SwarmSource":"ipfs://3b66d920d2254f708e235aa697213eea5703e3af3d8a6a135918ce5f035f8513"}]}