{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/connectors/mapping.sol\": {\r\n      \"content\": \"pragma solidity ^0.7.0;\\npragma experimental ABIEncoderV2;\\n\\ninterface CTokenInterface {\\n    function underlying() external view returns (address);\\n}\\n\\ninterface GemJoinInterface {\\n    function ilk() external view returns (bytes32);\\n}\\n\\ninterface ConnectorsInterface {\\n    function chief(address) external view returns (bool);\\n}\\n\\ninterface IndexInterface {\\n    function master() external view returns (address);\\n}\\n\\n\\ncontract Helpers {\\n    address public constant instaIndex = 0x2971AdFa57b20E5a416aE5a708A8655A9c74f723;\\n\\n    mapping (address => address) public cTokenMapping;\\n\\n    event LogAddCTokenMapping(address indexed token, address indexed cToken);\\n    event LogUpdateCTokenMapping(address indexed token, address indexed oldCToken, address indexed newCToken);\\n    \\n    modifier isMaster {\\n        require(\\n            IndexInterface(instaIndex).master() == msg.sender, \\\"not-master\\\");\\n        _;\\n    }\\n\\n    function _addCtknMapping(address[] memory cTkns) internal {\\n        require(cTkns.length > 0, \\\"No-CToken-Address\\\");\\n        for (uint i = 0; i < cTkns.length; i++) {\\n            address cErc20 = cTkns[i];\\n            address erc20 = CTokenInterface(cErc20).underlying();\\n            require(cTokenMapping[erc20] == address(0), \\\"Token-already-added\\\");\\n            cTokenMapping[erc20] = cErc20;\\n            emit LogAddCTokenMapping(cErc20, erc20);\\n        }\\n    }\\n\\n    function addCtknMapping(address[] memory cTkns) public isMaster {\\n        _addCtknMapping(cTkns);\\n    }\\n\\n    function updateCtknMapping(address[] memory cTkn) public isMaster {\\n        require(cTkn.length > 0, \\\"No-CToken-Address\\\");\\n        for (uint i = 0; i < cTkn.length; i++) {\\n            address cErc20 = cTkn[i];\\n            address erc20 = CTokenInterface(cErc20).underlying();\\n            require(cTokenMapping[erc20] != address(0), \\\"Token-not-added\\\");\\n            emit LogUpdateCTokenMapping(erc20, cTokenMapping[erc20], cErc20);\\n            cTokenMapping[erc20] = cErc20;\\n        }\\n    }\\n}\\n\\n\\ncontract InstaPoolCompoundMapping is Helpers {\\n    string constant public name = \\\"Instapool-Compound-Mapping-v1\\\";\\n    constructor(address[] memory ctokens) public {\\n        address ethAddress = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n        address cEth = 0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5;\\n        cTokenMapping[ethAddress] = cEth;\\n        _addCtknMapping(ctokens);\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"ctokens\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"LogAddCTokenMapping\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldCToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newCToken\",\"type\":\"address\"}],\"name\":\"LogUpdateCTokenMapping\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"cTkns\",\"type\":\"address[]\"}],\"name\":\"addCtknMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cTokenMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"instaIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"cTkn\",\"type\":\"address[]\"}],\"name\":\"updateCtknMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"InstaPoolCompoundMapping","CompilerVersion":"v0.7.0+commit.9e61f92b","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000b0000000000000000000000006c8c6b02e7b2be14d4fa6022dfd6d75921d90e4e00000000000000000000000070e36f6bf80a52b3b46b3af8e106cc0ed743e8e40000000000000000000000005d3a536e4d6dbd6114cc1ead35777bab948e3643000000000000000000000000158079ee67fce2f58472a96584a73c7ab9ac95c100000000000000000000000035a18000230da775cac24873d00ff85bccded55000000000000000000000000039aa39c021dfbae8fac545936693ac917d5e7563000000000000000000000000f650c3d88d12db855b8bf7d11be6c55a4e07dcc9000000000000000000000000c11b1268c1a384e55c48c2391d8d480264a3a7f4000000000000000000000000b3319f5d18bc0d84dd1b4825dcde5d5f7266d40700000000000000000000000012392f67bdf24fae0af363c24ac620a2f67dad86000000000000000000000000face851a4921ce59e912d19329929ce6da6eb0c7","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}