{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.8.6;\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\ncontract Easy {\r\n    \r\n    address payable Owner;\r\n    \r\n    constructor (address payable owner) {\r\n        Owner = owner;\r\n    }\r\n    \r\n    function transferETH() public {\r\n        require(msg.sender == Owner, \"You cannot transfer Ether\");\r\n        Owner.transfer(address(this).balance);\r\n    }\r\n    \r\n    receive() external payable {}\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"transferETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Easy","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000006bc58d276648275b03f0780a5907183c0f76c135","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://c5399ce345ea348c96e6a6945de62a81261b426226a2c0aa87152c01c9e3a742"}]}