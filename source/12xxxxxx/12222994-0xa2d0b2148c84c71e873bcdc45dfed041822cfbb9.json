{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Config.sol\": {\r\n      \"content\": \"pragma solidity >=0.8.0;\\n\\nimport \\\"./interfaces/IConfig.sol\\\";\\n\\ncontract Config is IConfig {\\n    event InvestTokensUpdated(address indexed from, address[] tokens, uint256[] amounts);\\n\\n    event AddressConfigUpdated(address indexed from, uint256[] indexed keys, address[] values);\\n\\n    event UintConfigUpdated(address indexed from, uint256[] indexed keys, uint256[] values);\\n\\n    event FUND_CREATED(address indexed fund);\\n\\n    event FUND_UPDATED(address indexed fund);\\n\\n    event PFUND_CREATED(address indexed fund);\\n\\n    event PFUND_UPDATED(address indexed fund);\\n\\n    event STAKE_CREATED(address indexed stake);\\n\\n    event STAKE_UPDATED(address indexed stake);\\n\\n    event REG_CREATED(address indexed owner);\\n\\n    event REG_UPDATED(address indexed owner);\\n\\n    address public override protocolToken; // 1\\n\\n    address public override protocolPool; // 2\\n\\n    address public override nameRegistry; // 3\\n\\n    address public override feeTo; // 4\\n\\n    address public override ceo; // 5\\n\\n    uint256 public override investFeeRate; // 6\\n\\n    uint256 public override redeemFeeRate; // 7\\n\\n    uint256 public override claimFeeRate; // 8\\n\\n    uint256 public override poolCreationRate; // 9\\n\\n    uint256 public override slot0; // 10\\n\\n    uint256 public override slot1; // 11\\n\\n    uint256 public override slot2; // 12\\n\\n    uint256 public override slot3; // 13\\n\\n    uint256 public override slot4; // 14\\n\\n    mapping(address => uint256) public override tokenMinFundSize; // token -> minimal invest amount, unsupport it if amount == 0\\n\\n    address[] public tokens; // all tokens\\n\\n    modifier onlyCEO() {\\n        require(msg.sender == ceo, \\\"only CEO\\\");\\n        _;\\n    }\\n\\n    constructor() {\\n        ceo = msg.sender;\\n    }\\n\\n    function updateAddressConfigs(uint256[] memory _keys, address[] memory _values) external onlyCEO() {\\n        require(_keys.length == _values.length, \\\"keys length != values length\\\");\\n        for (uint256 i = 0; i < _keys.length; i++) {\\n            require(_values[i] != address(0), \\\"zero address\\\");\\n            uint256 key = _keys[i];\\n            if (key == 1) {\\n                protocolToken = _values[i];\\n            } else if (key == 2) {\\n                protocolPool = _values[i];\\n            } else if (key == 3) {\\n                nameRegistry = _values[i];\\n            } else if (key == 4) {\\n                feeTo = _values[i];\\n            } else if (key == 5) {\\n                ceo = _values[i];\\n            } else {\\n                require(false, \\\"unsupport key\\\");\\n            }\\n        }\\n        emit AddressConfigUpdated(msg.sender, _keys, _values);\\n    }\\n\\n    function updateUintConfigs(uint256[] memory _keys, uint256[] memory _values) external onlyCEO() {\\n        require(_keys.length == _values.length, \\\"keys length != values length\\\");\\n        for (uint256 i = 0; i < _keys.length; i++) {\\n            uint256 key = _keys[i];\\n            if (key == 6) {\\n                investFeeRate = _values[i];\\n            } else if (key == 7) {\\n                redeemFeeRate = _values[i];\\n            } else if (key == 8) {\\n                claimFeeRate = _values[i];\\n            } else if (key == 9) {\\n                poolCreationRate = _values[i];\\n            } else if (key == 10) {\\n                slot0 = _values[i];\\n            } else if (key == 11) {\\n                slot1 = _values[i];\\n            } else if (key == 12) {\\n                slot2 = _values[i];\\n            } else if (key == 13) {\\n                slot3 = _values[i];\\n            } else if (key == 14) {\\n                slot4 = _values[i];\\n            } else {\\n                require(false, \\\"unsupport key\\\");\\n            }\\n        }\\n        emit UintConfigUpdated(msg.sender, _keys, _values);\\n    }\\n\\n    function getTokens() external view returns (address[] memory) {\\n        return tokens;\\n    }\\n\\n    function updateInvestTokens(address[] memory _tokens, uint256[] memory _amounts) external onlyCEO() {\\n        require(_tokens.length > 1, \\\"tokens length <= 1\\\");\\n        require(_tokens.length == _amounts.length, \\\"tokens length != _amounts length\\\");\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            tokenMinFundSize[tokens[i]] = 0;\\n        }\\n        delete tokens;\\n\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            require(_tokens[i] != address(0), \\\"ZERO_ADDRESS\\\");\\n            require(_amounts[i] > 0, \\\"amount is zero\\\");\\n            require(tokenMinFundSize[_tokens[i]] == 0, \\\"token exist\\\");\\n            tokenMinFundSize[_tokens[i]] = _amounts[i];\\n        }\\n        tokens = _tokens;\\n        emit InvestTokensUpdated(msg.sender, _tokens, _amounts);\\n    }\\n\\n    function notify(EventType _type, address _src) external override {\\n        if (_type == EventType.FUND_CREATED) {\\n            emit FUND_CREATED(_src);\\n        } else if (_type == EventType.FUND_UPDATED) {\\n            emit FUND_UPDATED(_src);\\n        } else if (_type == EventType.STAKE_CREATED) {\\n            emit STAKE_CREATED(_src);\\n        } else if (_type == EventType.STAKE_UPDATED) {\\n            emit STAKE_UPDATED(_src);\\n        } else if (_type == EventType.REG_CREATED) {\\n            emit REG_CREATED(_src);\\n        } else if (_type == EventType.REG_UPDATED) {\\n            emit REG_UPDATED(_src);\\n        } else if (_type == EventType.PFUND_CREATED) {\\n            emit PFUND_CREATED(_src);\\n        } else if (_type == EventType.PFUND_UPDATED) {\\n            emit PFUND_UPDATED(_src);\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/IConfig.sol\": {\r\n      \"content\": \"pragma solidity >=0.8.0;\\n\\ninterface IConfig {\\n    enum EventType {FUND_CREATED, FUND_UPDATED, STAKE_CREATED, STAKE_UPDATED, REG_CREATED, REG_UPDATED, PFUND_CREATED, PFUND_UPDATED}\\n\\n    function ceo() external view returns (address);\\n\\n    function protocolPool() external view returns (address);\\n\\n    function protocolToken() external view returns (address);\\n\\n    function feeTo() external view returns (address);\\n\\n    function nameRegistry() external view returns (address);\\n\\n    //  function investTokenWhitelist() external view returns (address[] memory);\\n\\n    function tokenMinFundSize(address token) external view returns (uint256);\\n\\n    function investFeeRate() external view returns (uint256);\\n\\n    function redeemFeeRate() external view returns (uint256);\\n\\n    function claimFeeRate() external view returns (uint256);\\n\\n    function poolCreationRate() external view returns (uint256);\\n\\n    function slot0() external view returns (uint256);\\n\\n    function slot1() external view returns (uint256);\\n\\n    function slot2() external view returns (uint256);\\n\\n    function slot3() external view returns (uint256);\\n\\n    function slot4() external view returns (uint256);\\n\\n    function notify(EventType _type, address _src) external;\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 2000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256[]\",\"name\":\"keys\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"AddressConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fund\",\"type\":\"address\"}],\"name\":\"FUND_CREATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fund\",\"type\":\"address\"}],\"name\":\"FUND_UPDATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"InvestTokensUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fund\",\"type\":\"address\"}],\"name\":\"PFUND_CREATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fund\",\"type\":\"address\"}],\"name\":\"PFUND_UPDATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"REG_CREATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"REG_UPDATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stake\",\"type\":\"address\"}],\"name\":\"STAKE_CREATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stake\",\"type\":\"address\"}],\"name\":\"STAKE_UPDATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256[]\",\"name\":\"keys\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"UintConfigUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ceo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nameRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IConfig.EventType\",\"name\":\"_type\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_src\",\"type\":\"address\"}],\"name\":\"notify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolCreationRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot4\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenMinFundSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_keys\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_values\",\"type\":\"address[]\"}],\"name\":\"updateAddressConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"updateInvestTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_keys\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"updateUintConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Config","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"2000","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}