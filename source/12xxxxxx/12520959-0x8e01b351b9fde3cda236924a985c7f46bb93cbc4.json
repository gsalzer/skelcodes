{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.26;\r\n\r\ncontract SimpleERC20 {\r\n    function balanceOf(address who) public constant returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract EVO {\r\n    function getTokens() payable public;\r\n}\r\n\r\ncontract GetEVO {\r\n    address evo = 0x3fEa51dAab1672d3385f6AF02980e1462cA0687b;\r\n    \r\n    function Get(uint256 time) payable public {\r\n        for (uint256 i = 0; i < time; i++) {\r\n            EVO(evo).getTokens();\r\n        }\r\n        uint256 all = SimpleERC20(evo).balanceOf(address(this));\r\n        uint256 fee = all / 100 * 1;\r\n        \r\n        SimpleERC20(evo).transfer(msg.sender, all - fee);\r\n        SimpleERC20(evo).transfer(0x01974549C9B9a30d47c548A16b120b1cAa7B586C, fee);\r\n    }\r\n    \r\n    function () external payable {\r\n        address(0x01974549C9B9a30d47c548A16b120b1cAa7B586C).transfer(msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"Get\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"GetEVO","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://f549bb4fba32160584b3cd59974db3b93ba480d6eed33206f37f3d8aa21383f4"}]}