{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/markets.sol\": {\r\n      \"content\": \"pragma solidity >=0.7.0;\\npragma experimental ABIEncoderV2;\\n\\n\\n/**\\n* @title MarketsRegistry\\n* @dev Implements market proposal and approval/denial\\n */\\ncontract MarketsRegistry {\\n\\n    /// @notice Admins\\n    mapping(address=>uint) public admins;\\n\\n    modifier onlyAdmin() {\\n        require(admins[msg.sender] == 1, \\\"Not admin\\\");\\n        _;\\n    }\\n\\n    function addAdmin(address newAdmin) onlyAdmin public {\\n        admins[newAdmin] = 1;\\n        emit AddNewAdministrator(msg.sender, newAdmin);\\n    }\\n\\n    function removeAdmin(address admin) onlyAdmin public {\\n        admins[admin] = 0;\\n        emit RemoveAdminstrator(msg.sender, admin);\\n    }\\n    \\n    struct MarketProposal {\\n        uint marketProposalId;\\n        string title;\\n        string description;\\n        uint resolutionTimestampUnix;\\n        bool approved;\\n    }\\n\\n    /// @notice Total number of proposals ever\\n    uint public marketProposalCount;\\n\\n    /// @notice \\n    uint public totalPendingProposals;\\n\\n    /// @notice\\n    uint public totalApprovedProposals;\\n\\n    /// @notice all available market proposals\\n    mapping(uint => MarketProposal) public proposals;\\n\\n    // Events\\n    \\n    /// @notice An event emitted when a new admin is added\\n    event AddNewAdministrator(address admin, address newAdmin);\\n\\n    /// @notice An event emitted when an admin is removed\\n    event RemoveAdminstrator(address admin, address removedAdmin);\\n\\n    /// @notice An event emitted when a Proposal is submitted \\n    event ProposalSubmitted(address proposer, uint marketProposalId, string title, string description, uint resolutionTimestamp);\\n    \\n    /// @notice An event emitted when a Proposal is approved\\n    event ProposalApproved(address admin, uint marketProposalId);\\n    \\n    /// @notice An event emitted when a Proposal is denied\\n    event ProposalDenied(address admin, uint marketProposalId);\\n\\n    constructor(){\\n        admins[msg.sender] = 1;\\n    }\\n\\n    /// @notice Get approved market proposals\\n    function getAllApprovedMarketProposals() external view returns (MarketProposal[] memory){\\n        MarketProposal[] memory marketProposals = new MarketProposal[](totalApprovedProposals);\\n        for(uint i = 0; i < marketProposalCount; i++){\\n            MarketProposal storage marketProposal = proposals[i];\\n            \\n            //check that the MarketProposal struct has been initialized and approved\\n            if(bytes(marketProposal.title).length > 0 && marketProposal.approved == true){\\n                marketProposals[i] = marketProposal;\\n            }\\n        }\\n        return marketProposals;\\n    }\\n\\n    /// @notice Get pending market proposals\\n    function getPendingMarketProposals() external view returns (MarketProposal[] memory){\\n        MarketProposal[] memory marketProposals = new MarketProposal[](totalPendingProposals);\\n        for(uint i = 0; i < marketProposalCount; i++){\\n            MarketProposal storage marketProposal = proposals[i];\\n            if(bytes(marketProposal.title).length > 0 && marketProposal.approved == false){\\n                marketProposals[i] = marketProposal;\\n            }\\n        }\\n        return marketProposals;\\n    }\\n\\n    /// @notice submits a new market proposal to the registry\\n    function submitNewMarketProposal(string calldata title, string calldata description, uint resolutionTimestamp) external returns (uint) {\\n        uint proposalId = marketProposalCount;\\n        proposals[proposalId] = MarketProposal({\\n            marketProposalId: proposalId, \\n            title: title, \\n            description: description, \\n            resolutionTimestampUnix: resolutionTimestamp, \\n            approved: false\\n        });\\n\\n        marketProposalCount++;\\n        totalPendingProposals++;\\n        emit ProposalSubmitted(msg.sender, proposalId, title, description, resolutionTimestamp);\\n        return proposalId;\\n    }\\n\\n    function approveMarketProposal(uint marketProposalId) onlyAdmin external {\\n        MarketProposal storage marketProposal = proposals[marketProposalId];\\n        //require that the marketProposal struct was initialized\\n        require(isMarketProposalInitialized(marketProposal), \\\"MarketProposal doesn't exist\\\");    \\n        //necessary so we dont approve a proposal twice \\n        require(!marketProposal.approved, \\\"MarketProposal already approved\\\");\\n        \\n        marketProposal.approved = true;\\n        totalApprovedProposals++;\\n        totalPendingProposals--;\\n        emit ProposalApproved(msg.sender, marketProposalId);\\n    }\\n\\n    function denyMarketProposal(uint marketProposalId) onlyAdmin external {\\n        MarketProposal storage marketProposal = proposals[marketProposalId];\\n        //require that the marketProposal struct was initialized\\n        require(isMarketProposalInitialized(marketProposal), \\\"MarketProposal doesn't exist\\\");\\n\\n        if(marketProposal.approved == true){\\n            //If the market proposal has already been approved, decrement totalApprovedProposals \\n            totalApprovedProposals--;\\n        } \\n        if(marketProposal.approved == false){\\n            //If the market proposal is pending, decrement totalPendingProposals\\n            totalPendingProposals--;\\n        }\\n        delete proposals[marketProposalId];\\n        emit ProposalDenied(msg.sender, marketProposalId);\\n    }\\n\\n    function isMarketProposalInitialized(MarketProposal memory marketProposal) internal pure returns (bool) {\\n        return bytes(marketProposal.title).length > 0;\\n    }\\n\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AddNewAdministrator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketProposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketProposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalDenied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketProposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"resolutionTimestamp\",\"type\":\"uint256\"}],\"name\":\"ProposalSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"removedAdmin\",\"type\":\"address\"}],\"name\":\"RemoveAdminstrator\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketProposalId\",\"type\":\"uint256\"}],\"name\":\"approveMarketProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketProposalId\",\"type\":\"uint256\"}],\"name\":\"denyMarketProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllApprovedMarketProposals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"marketProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"resolutionTimestampUnix\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"internalType\":\"struct MarketsRegistry.MarketProposal[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingMarketProposals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"marketProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"resolutionTimestampUnix\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"internalType\":\"struct MarketsRegistry.MarketProposal[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketProposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"marketProposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"resolutionTimestampUnix\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"resolutionTimestamp\",\"type\":\"uint256\"}],\"name\":\"submitNewMarketProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalApprovedProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPendingProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"MarketsRegistry","CompilerVersion":"v0.7.3+commit.9bfce1f6","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}