{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\n\r\ncontract CryptoPunksMarket {\r\n    mapping(uint256 => address) public punkIndexToAddress;\r\n}\r\n\r\n/**\r\n *\r\n * @dev Proxy contract that retuns CryptoPunk owner via standard ERC-721 ownerOf() function\r\n * Written by Ryley Ohlsen, 06.11.2021.\r\n *\r\n * See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ncontract ownerOf_punks {\r\n    address public CRYPTOPUNKS_CONTRACT =\r\n        0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB;\r\n\r\n    CryptoPunksMarket CryptoPunks;\r\n\r\n    constructor() public {\r\n        CryptoPunks = CryptoPunksMarket(CRYPTOPUNKS_CONTRACT);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 punkIndex) public view returns (address) {\r\n        require(punkIndex < 10000, \"Punk index too high. Punk does not exist\");\r\n        address owner = CryptoPunks.punkIndexToAddress(punkIndex);\r\n        return owner;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"punkIndexToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"CryptoPunksMarket","CompilerVersion":"v0.6.1+commit.e6f7d5a4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://4b1d7f1c3535cd41a0e511fd5ab5e53274ed305a0ecce8982e1a79be19769057"}]}