{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/Controller.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.1;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./interfaces/IController.sol\\\";\\n\\ncontract Controller is IController {\\n    // Governance\\n    address public override dao;\\n    address public override guardian;\\n    address public override feesOwner;\\n\\n    // EPools\\n    bool public override pausedIssuance;\\n\\n    event SetDao(address dao);\\n    event SetGuardian(address guardian);\\n    event SetFeesOwner(address feesOwner);\\n    event SetPausedIssuance(bool pausedIssuance);\\n\\n    modifier onlyDao {\\n        require(msg.sender == dao, \\\"Controller: not dao\\\");\\n        _;\\n    }\\n\\n    modifier onlyDaoOrGuardian {\\n        require(msg.sender == dao || msg.sender == guardian, \\\"Controller: not dao or guardian\\\");\\n        _;\\n    }\\n\\n    constructor() {\\n        dao = msg.sender;\\n        guardian = msg.sender;\\n    }\\n\\n    function isDaoOrGuardian(address sender) external view override returns (bool) {\\n        return (sender == dao || sender == guardian);\\n    }\\n\\n    function setDao(address _dao) public override onlyDao returns (bool) {\\n        dao = _dao;\\n        emit SetDao(_dao);\\n        return true;\\n    }\\n\\n    function setGuardian(address _guardian) public override onlyDao returns (bool) {\\n        guardian = _guardian;\\n        emit SetGuardian(_guardian);\\n        return true;\\n    }\\n\\n    function setFeesOwner(address _feesOwner) public override onlyDao returns (bool) {\\n        feesOwner = _feesOwner;\\n        emit SetFeesOwner(_feesOwner);\\n        return true;\\n    }\\n\\n    function setPausedIssuance(bool _pausedIssuance) public override onlyDaoOrGuardian returns (bool) {\\n        pausedIssuance = _pausedIssuance;\\n        emit SetPausedIssuance(_pausedIssuance);\\n        return true;\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/IController.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.1;\\npragma experimental ABIEncoderV2;\\n\\ninterface IController {\\n\\n    function dao() external view returns (address);\\n\\n    function guardian() external view returns (address);\\n\\n    function isDaoOrGuardian(address sender) external view returns (bool);\\n\\n    function setDao(address _dao) external returns (bool);\\n\\n    function setGuardian(address _guardian) external returns (bool);\\n\\n    function feesOwner() external view returns (address);\\n\\n    function pausedIssuance() external view returns (bool);\\n\\n    function setFeesOwner(address _feesOwner) external returns (bool);\\n\\n    function setPausedIssuance(bool _pausedIssuance) external returns (bool);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"name\":\"SetDao\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feesOwner\",\"type\":\"address\"}],\"name\":\"SetFeesOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"SetGuardian\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"pausedIssuance\",\"type\":\"bool\"}],\"name\":\"SetPausedIssuance\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"isDaoOrGuardian\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pausedIssuance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dao\",\"type\":\"address\"}],\"name\":\"setDao\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feesOwner\",\"type\":\"address\"}],\"name\":\"setFeesOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_guardian\",\"type\":\"address\"}],\"name\":\"setGuardian\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pausedIssuance\",\"type\":\"bool\"}],\"name\":\"setPausedIssuance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Controller","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}