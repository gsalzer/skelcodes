{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.5;\r\n\r\ninterface IMasterChefUserInfo {\r\n    function userInfo(uint256 pid, address account) external view returns (uint256, uint256);\r\n}\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function totalSupply() external view returns (uint256);\r\n}\r\n\r\ninterface IBentoBoxV1BalanceAmount {\r\n    function balanceOf(IERC20, address) external view returns (uint256);\r\n    function toAmount(\r\n        IERC20 token,\r\n        uint256 share,\r\n        bool roundUp\r\n    ) external view returns (uint256 amount);\r\n}\r\n\r\ninterface ICreamRate {\r\n    function exchangeRateStored() external view returns (uint256);\r\n}\r\n\r\ncontract SUSHIPOWAH {\r\n    IMasterChefUserInfo chef = IMasterChefUserInfo(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\r\n    IERC20 pair = IERC20(0x795065dCc9f64b5614C407a6EFDC400DA6221FB0);\r\n    IERC20 bar = IERC20(0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272);\r\n    IERC20 sushi = IERC20(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\r\n    IERC20 axSushi = IERC20(0xF256CC7847E919FAc9B808cC216cAc87CCF2f47a);\r\n    IBentoBoxV1BalanceAmount bento = IBentoBoxV1BalanceAmount(0xF5BCE5077908a1b7370B9ae04AdC565EBd643966);\r\n    address crxSushi = 0x228619CCa194Fbe3Ebeb2f835eC1eA5080DaFbb2; \r\n\r\n    function name() external pure returns (string memory) { return \"SUSHIPOWAH\"; }\r\n    function symbol() external pure returns (string memory) { return \"SUSHIPOWAH\"; }\r\n    function decimals() external pure returns (uint8) { return 18; }\r\n    function allowance(address, address) external pure returns (uint256) { return 0; }\r\n    function approve(address, uint256) external pure returns (bool) { return false; }\r\n    function transfer(address, uint256) external pure returns (bool) { return false; }\r\n    function transferFrom(address, address, uint256) external pure returns (bool) { return false; }\r\n\r\n    /// @notice Returns SUSHI voting 'powah' for `account`.\r\n    function balanceOf(address account) external view returns (uint256 powah) {\r\n        uint256 axsushi_balance = bar.balanceOf(address(axSushi)) * axSushi.balanceOf(account) / axSushi.totalSupply(); // get adjusted tally for aToken\r\n        uint256 bento_balance = bento.toAmount(bar, bento.balanceOf(bar, account), false); // get BENTO xSushi balance 'amount' (not shares)\r\n        uint256 crxsushi_balance = bar.balanceOf(address(crxSushi)) * IERC20(crxSushi).balanceOf(account) / IERC20(crxSushi).totalSupply(); // get adjusted tally for cToken\r\n        uint256 collective_xsushi_balance = bar.balanceOf(account) + axsushi_balance + bento_balance + crxsushi_balance; // get collective xSushi staking balances\r\n        uint256 xsushi_powah = sushi.balanceOf(address(bar)) * collective_xsushi_balance / bar.totalSupply(); // calculate xSushi weight\r\n        (uint256 lp_stakedBalance, ) = chef.userInfo(12, account); // get LP balance staked in MasterChef\r\n        uint256 lp_balance = lp_stakedBalance + pair.balanceOf(account); // add staked LP balance & those held by `account`\r\n        uint256 lp_powah = sushi.balanceOf(address(pair)) * lp_balance / pair.totalSupply() * 2; // calculate adjusted LP weight\r\n        powah = xsushi_powah + lp_powah; // add xSushi & LP weights for 'powah'\r\n    }\r\n\r\n    /// @notice Returns total 'powah' supply.\r\n    function totalSupply() external view returns (uint256 total) {\r\n        total = sushi.balanceOf(address(bar)) + sushi.balanceOf(address(pair)) * 2;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"powah\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"SUSHIPOWAH","CompilerVersion":"v0.8.5+commit.a4f2e591","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://0016c67c328ba65d9166bac1c357873c2b9ec1882307c0e40e533d8e05d5a919"}]}