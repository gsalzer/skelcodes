{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MPL-2.0\r\npragma solidity 0.7.6;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface IVoteEmitter {\r\n\tevent Vote(address indexed dispatcher, address voter, uint8[] percentiles);\r\n\r\n\tfunction dispatch(address voter, uint8[] memory percentiles) external;\r\n}\r\n\r\ncontract VoteEmitter is IVoteEmitter {\r\n\tfunction dispatch(address voter, uint8[] memory percentiles)\r\n\t\texternal\r\n\t\toverride\r\n\t{\r\n\t\temit Vote(msg.sender, voter, percentiles);\r\n\t}\r\n}\r\n\r\ncontract Vote {\r\n\tstruct Attributes {\r\n\t\taddress proposer;\r\n\t\tstring subject;\r\n\t\tstring body;\r\n\t\tuint256 period;\r\n\t\tstring[] options;\r\n\t\tstring bodyMimeType;\r\n\t\tstring optionsMimeType;\r\n\t}\r\n\taddress public voteEmitter;\r\n\taddress public proposer;\r\n\tstring public subject;\r\n\tstring public body;\r\n\tuint256 public period;\r\n\tstring[] public options;\r\n\tstring public bodyMimeType;\r\n\tstring public optionsMimeType;\r\n\r\n\tmapping(address => bool) public isAlreadyVote;\r\n\r\n\tconstructor(\r\n\t\tstring memory _subject,\r\n\t\tstring memory _body,\r\n\t\tstring[] memory _options,\r\n\t\tstring memory _bodyMimeType,\r\n\t\tstring memory _optionsMimeType,\r\n\t\taddress _voteEmitter,\r\n\t\tuint256 _votingBlock,\r\n\t\taddress _proposer\r\n\t) {\r\n\t\tvoteEmitter = _voteEmitter;\r\n\t\tproposer = _proposer;\r\n\t\tsubject = _subject;\r\n\t\tbody = _body;\r\n\t\tperiod = _votingBlock + block.number;\r\n\t\toptions = _options;\r\n\t\tbodyMimeType = _bodyMimeType;\r\n\t\toptionsMimeType = _optionsMimeType;\r\n\t}\r\n\r\n\tfunction attributes() external view returns (Attributes memory) {\r\n\t\treturn\r\n\t\t\tAttributes(\r\n\t\t\t\tproposer,\r\n\t\t\t\tsubject,\r\n\t\t\t\tbody,\r\n\t\t\t\tperiod,\r\n\t\t\t\toptions,\r\n\t\t\t\tbodyMimeType,\r\n\t\t\t\toptionsMimeType\r\n\t\t\t);\r\n\t}\r\n\r\n\tfunction vote(uint8[] memory percentiles) external {\r\n\t\trequire(block.number < period, \"over the period\");\r\n\t\trequire(isAlreadyVote[msg.sender] == false, \"already vote\");\r\n\t\tisAlreadyVote[msg.sender] = true;\r\n\t\tIVoteEmitter(voteEmitter).dispatch(msg.sender, percentiles);\r\n\t}\r\n}\r\n\r\ncontract VoteFactory {\r\n\taddress public voteEmitter;\r\n\r\n\tevent VoteCreate(address indexed sender, address vote);\r\n\r\n\tconstructor(address _voteEmitter) {\r\n\t\tvoteEmitter = _voteEmitter;\r\n\t}\r\n\r\n\tfunction create(\r\n\t\tstring memory _subject,\r\n\t\tstring memory _body,\r\n\t\tstring[] memory _options,\r\n\t\tstring memory _bodyMimeType,\r\n\t\tstring memory _optionsMimeType,\r\n\t\tuint256 _votingBlock\r\n\t) external {\r\n\t\tVote vote = new Vote(\r\n\t\t\t_subject,\r\n\t\t\t_body,\r\n\t\t\t_options,\r\n\t\t\t_bodyMimeType,\r\n\t\t\t_optionsMimeType,\r\n\t\t\tvoteEmitter,\r\n\t\t\t_votingBlock,\r\n\t\t\tmsg.sender\r\n\t\t);\r\n\t\temit VoteCreate(msg.sender, address(vote));\r\n\t}\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voteEmitter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vote\",\"type\":\"address\"}],\"name\":\"VoteCreate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_subject\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_body\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_options\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"_bodyMimeType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_optionsMimeType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_votingBlock\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteEmitter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"VoteFactory","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000097fc63599b31e29b52e4fc73cd997845f10cb459","EVMVersion":"Default","Library":"","LicenseType":"MPL-2.0","Proxy":"0","Implementation":"","SwarmSource":"ipfs://cce75ecf907cbdadc5f6eb60a8097d78e6781f1698adeb0def4eecc8d08ec227"}]}