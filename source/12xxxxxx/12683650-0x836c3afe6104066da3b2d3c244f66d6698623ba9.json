{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/interfaces/IPositionStorage.sol\r\npragma solidity 0.6.12;\r\ninterface IPositionStorage {\r\n  function createStrategy(address strategyLogic) external returns (bool);\r\n  function setStrategy(uint256 strategyID, address strategyLogic) external returns (bool);\r\n  function getStrategy(uint256 strategyID) external view returns (address);\r\n  function newUserProduct(address user, address product) external returns (bool);\r\n  function getUserProducts(address user) external view returns (address[] memory);\r\n  function setFactory(address _factory) external returns (bool);\r\n  function setProductToNFTID(address product, uint256 nftID) external returns (bool);\r\n  function getNFTID(address product) external view returns (uint256);\r\n}\r\n\r\n// File: contracts/XFactory/storage/PositionStorage.sol\r\n// SPDX-License-Identifier: BSD-3-Clause\r\npragma solidity ^0.6.12;\r\npragma experimental ABIEncoderV2;\r\n\r\n/**\r\n  * @title BiFi-X Position Storage Contract\r\n  * @author BiFi-X(seinmyung25, Miller-kk, tlatkdgus1, dongchangYoo)\r\n  */\r\ncontract PositionStorage {\r\n  address public owner;\r\n  address public factory;\r\n\r\n  struct Strategy {\r\n    address logic;\r\n    bool support;\r\n  }\r\n\r\n  mapping(uint256 => address) strategies;\r\n  mapping(address => address[]) userProducts;\r\n  mapping(address => uint256) productToNFTID;\r\n\r\n  modifier onlyOwner {\r\n    require((msg.sender == owner) || (msg.sender == factory), \"onlyOwner\");\r\n    _;\r\n  }\r\n\r\n  modifier onlyFactory {\r\n    require(msg.sender == factory, \"onlyOwner\");\r\n    _;\r\n  }\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function setFactory(address _factory) external onlyOwner returns (bool) {\r\n    factory = _factory;\r\n    return true;\r\n  }\r\n\r\n  function setStrategy(uint256 strategyID, address logic) external onlyOwner returns (bool) {\r\n    strategies[strategyID] = logic;\r\n    return true;\r\n  }\r\n\r\n  function getStrategy(uint256 strategyID) external view returns (address) {\r\n    return strategies[strategyID];\r\n  }\r\n\r\n  function newUserProduct(address user, address product) external onlyFactory returns (bool) {\r\n    userProducts[user].push(product);\r\n    return true;\r\n  }\r\n\r\n  function getUserProducts(address user) external view returns (address[] memory) {\r\n    return userProducts[user];\r\n  }\r\n\r\n  function setProductToNFTID(address product, uint256 nftID) external onlyFactory returns (bool){\r\n    productToNFTID[product] = nftID;\r\n    return true;\r\n  }\r\n\r\n  function getNFTID(address product) external view returns (uint256) {\r\n    return productToNFTID[product];\r\n  }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"product\",\"type\":\"address\"}],\"name\":\"getNFTID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyID\",\"type\":\"uint256\"}],\"name\":\"getStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserProducts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"product\",\"type\":\"address\"}],\"name\":\"newUserProduct\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"product\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftID\",\"type\":\"uint256\"}],\"name\":\"setProductToNFTID\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"}],\"name\":\"setStrategy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"PositionStorage","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"1000","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"BSD-3-Clause","Proxy":"0","Implementation":"","SwarmSource":"ipfs://6168d99c8c6ece7a544eaee54e79b68ce565e6714ab68c63bab0fb260574bc03"}]}