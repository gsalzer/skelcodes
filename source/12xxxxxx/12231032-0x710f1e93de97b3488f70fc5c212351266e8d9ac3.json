{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/Elena/Source/argent-contracts/contracts/infrastructure/dapp/BaseFilter.sol\": {\r\n      \"content\": \"// Copyright (C) 2021  Argent Labs Ltd. <https://argent.xyz>\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IFilter.sol\\\";\\n\\nabstract contract BaseFilter is IFilter {\\n    function getMethod(bytes memory _data) internal pure returns (bytes4 method) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            method := mload(add(_data, 0x20))\\n        }\\n    }\\n}\"\r\n    },\r\n    \"/Users/Elena/Source/argent-contracts/contracts/infrastructure/dapp/CompoundCTokenFilter.sol\": {\r\n      \"content\": \"// Copyright (C) 2021  Argent Labs Ltd. <https://argent.xyz>\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.3;\\n\\nimport \\\"./BaseFilter.sol\\\";\\n\\ncontract CompoundCTokenFilter is BaseFilter {\\n\\n    bytes4 private constant CETH_MINT = bytes4(keccak256(\\\"mint()\\\"));\\n    bytes4 private constant CERC20_MINT = bytes4(keccak256(\\\"mint(uint256)\\\"));\\n    bytes4 private constant CTOKEN_REDEEM = bytes4(keccak256(\\\"redeem(uint256)\\\"));\\n    bytes4 private constant CTOKEN_REDEEM_UNDERLYING = bytes4(keccak256(\\\"redeemUnderlying(uint256)\\\"));\\n    bytes4 private constant CTOKEN_BORROW = bytes4(keccak256(\\\"borrow(uint256)\\\"));\\n    bytes4 private constant CETH_REPAY_BORROW = bytes4(keccak256(\\\"repayBorrow()\\\"));\\n    bytes4 private constant CERC20_REPAY_BORROW = bytes4(keccak256(\\\"repayBorrow(uint256)\\\"));\\n    bytes4 private constant ERC20_APPROVE = bytes4(keccak256(\\\"approve(address,uint256)\\\"));\\n\\n    address public immutable underlying;\\n\\n    constructor (address _underlying) {\\n        underlying = _underlying;\\n    }\\n\\n    function isValid(address /*_wallet*/, address _spender, address _to, bytes calldata _data) external view override returns (bool valid) {\\n        // disable ETH transfer for cErc20\\n        if (_data.length < 4) {\\n            return (_data.length == 0) && (underlying == address(0));\\n        }\\n        bytes4 method = getMethod(_data);\\n        // cToken methods\\n        if (_spender == _to) {\\n            if (underlying == address(0)) {\\n                return (\\n                    method == CETH_MINT ||\\n                    method == CTOKEN_REDEEM ||\\n                    method == CTOKEN_REDEEM_UNDERLYING ||\\n                    method == CTOKEN_BORROW ||\\n                    method == CETH_REPAY_BORROW);\\n            } else {\\n                return (\\n                    method == CERC20_MINT ||\\n                    method == CTOKEN_REDEEM ||\\n                    method == CTOKEN_REDEEM_UNDERLYING ||\\n                    method == CTOKEN_BORROW ||\\n                    method == CERC20_REPAY_BORROW);\\n            }\\n        // ERC20 methods\\n        } else {\\n            // only allow an approve on the underlying \\n            return (method == ERC20_APPROVE && underlying == _to);\\n        }\\n    }\\n}\"\r\n    },\r\n    \"/Users/Elena/Source/argent-contracts/contracts/infrastructure/dapp/IFilter.sol\": {\r\n      \"content\": \"// Copyright (C) 2021  Argent Labs Ltd. <https://argent.xyz>\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU General Public License for more details.\\n\\n// You should have received a copy of the GNU General Public License\\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\\n\\n// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.3;\\n\\ninterface IFilter {\\n    function isValid(address _wallet, address _spender, address _to, bytes calldata _data) external view returns (bool valid);\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 999\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {\r\n      \"\": {}\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlying\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"isValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"CompoundCTokenFilter","CompilerVersion":"v0.8.3+commit.8d00100c","OptimizationUsed":"1","Runs":"999","ConstructorArguments":"0000000000000000000000000d8775f648430679a709e98d2b0cb6250d2887ef","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}