{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/abialy/Documents/Projects/Crypto/defi/oracle/DecentralizedOracle/on-chain-oracle/contracts/Oracles.sol\": {\r\n      \"content\": \"// pragma solidity >=0.4.21 <0.6.0;\\r\\npragma solidity >=0.6.6;\\r\\n\\r\\nimport \\\"./interfaces/IOracles.sol\\\";\\r\\nimport \\\"./library/Ownable.sol\\\";\\r\\n\\r\\ncontract Oracles is Ownable, IOracles {\\r\\n\\r\\n  uint private totalOracleCount = 2000; // Hardcoded oracle count\\r\\n  mapping(address => reputation) public oracles;        // Reputation of oracles\\r\\n  address[] public oracleAddresses;      // Saved active oracle addresses\\r\\n\\r\\n  constructor () public {\\r\\n  }\\r\\n\\r\\n  function newOracle (string memory name, address addr, uint256 requestFee) public override(IOracles)\\r\\n  {\\r\\n    require(oracleAddresses.length < totalOracleCount, \\\"oracle overflow\\\");\\r\\n    require(oracles[addr].addr == address(0), \\\"already exists\\\");\\r\\n\\r\\n    oracles[addr].name = name;\\r\\n    oracles[addr].addr = addr;\\r\\n    oracles[addr].lastActiveTime = now;\\r\\n    oracles[addr].penalty = requestFee;\\r\\n    oracleAddresses.push(addr);\\r\\n  }\\r\\n\\r\\n  function getOracleCount () public override(IOracles) returns (uint256)\\r\\n  {\\r\\n    return oracleAddresses.length;\\r\\n  }\\r\\n\\r\\n  function isOracleAvailable (address addr) public override(IOracles) returns (bool)\\r\\n  {\\r\\n    return oracles[addr].addr == address(0);\\r\\n  }\\r\\n\\r\\n  function getOracleByIndex (uint256 idx) public override(IOracles) returns (address)\\r\\n  {\\r\\n    return oracleAddresses[idx];\\r\\n  }\\r\\n\\r\\n  function increaseOracleAssigned (address addr, uint256 penalty) public override(IOracles)\\r\\n  {\\r\\n    oracles[addr].totalAssignedRequest ++;\\r\\n    oracles[addr].penalty = penalty;\\r\\n  }\\r\\n\\r\\n  function increaseOracleCompleted (address addr, uint256 responseTime) public override(IOracles)\\r\\n  {\\r\\n    oracles[addr].totalCompletedRequest ++;\\r\\n    oracles[addr].totalResponseTime = oracles[addr].totalResponseTime + responseTime;\\r\\n  }\\r\\n\\r\\n  function increaseOracleAccepted (address addr, uint256 earned) public override(IOracles)\\r\\n  {\\r\\n    oracles[addr].totalAcceptedRequest ++;\\r\\n    oracles[addr].totalEarned = oracles[addr].totalEarned + earned;\\r\\n  }\\r\\n\\r\\n  function getOracleLastActiveTime (address addr) public override(IOracles) returns (uint256)\\r\\n  {\\r\\n    return oracles[addr].lastActiveTime;\\r\\n  }\\r\\n\\r\\n  function updateOracleLastActiveTime (address addr) public override(IOracles)\\r\\n  {\\r\\n    oracles[addr].lastActiveTime = now;\\r\\n  }\\r\\n\\r\\n  function getOracleReputation (address addr) public view returns (string memory, uint256, uint256, uint256, uint256, uint256, uint256, uint256) {\\r\\n    reputation memory p = oracles[addr];\\r\\n    return (p.name, p.totalAssignedRequest, p.totalCompletedRequest, p.totalAcceptedRequest, p.totalResponseTime, p.lastActiveTime, p.penalty, p.totalEarned);\\r\\n  }\\r\\n\\r\\n  function removeOracleByAddress (address addr) public onlyOwner\\r\\n  {\\r\\n    for (uint i = 0; i < oracleAddresses.length ; i ++) {\\r\\n      if (oracleAddresses[i] == addr) {\\r\\n        oracleAddresses[i] = oracleAddresses[oracleAddresses.length - 1];\\r\\n        delete oracleAddresses[oracleAddresses.length - 1];\\r\\n        oracleAddresses.pop();\\r\\n\\r\\n        oracles[addr].addr = address(0);      // Reset reputation of oracle to zero\\r\\n        break;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\"\r\n    },\r\n    \"/Users/abialy/Documents/Projects/Crypto/defi/oracle/DecentralizedOracle/on-chain-oracle/contracts/interfaces/IOracles.sol\": {\r\n      \"content\": \"// pragma solidity >=0.4.21 <0.6.0;\\r\\npragma solidity >=0.6.6;\\r\\n\\r\\ninterface IOracles {\\r\\n\\r\\n  struct reputation {\\r\\n    string name;\\r\\n    address addr;\\r\\n    uint256 totalAssignedRequest;        //total number of past requests that an oracle has agreed to, both fulfilled and unfulfileed\\r\\n    uint256 totalCompletedRequest;       //total number of past requests that an oracle has fulfileed\\r\\n    uint256 totalAcceptedRequest;        //total number of requests that have been accepted\\r\\n    uint256 totalResponseTime;           //total seconds of response time\\r\\n    uint256 lastActiveTime;              //last active time of the oracle as second\\r\\n    uint256 penalty;                     //amount of penalty payment\\r\\n    uint256 totalEarned;                 //total earned\\r\\n  }\\r\\n\\r\\n  function newOracle (string calldata name, address addr, uint256 requestFee) external ;\\r\\n  function getOracleCount () external returns (uint256);\\r\\n  function isOracleAvailable (address addr) external returns (bool);\\r\\n  function getOracleByIndex (uint256 idx) external returns (address);\\r\\n  function increaseOracleAssigned (address addr, uint256 penalty) external;\\r\\n  function increaseOracleCompleted (address addr, uint256 responseTime) external;\\r\\n  function increaseOracleAccepted (address addr, uint256 earned) external;\\r\\n  function getOracleLastActiveTime (address addr) external returns (uint256);\\r\\n  function updateOracleLastActiveTime (address addr) external;\\r\\n}\\r\\n\"\r\n    },\r\n    \"/Users/abialy/Documents/Projects/Crypto/defi/oracle/DecentralizedOracle/on-chain-oracle/contracts/library/Ownable.sol\": {\r\n      \"content\": \"pragma solidity >=0.6.6;\\r\\n\\r\\ncontract Ownable {\\r\\n    address public owner;\\r\\n\\r\\n    /**\\r\\n    * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n    * account.\\r\\n    */\\r\\n    constructor() public {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n    * @dev Throws if called by any account other than the owner.\\r\\n    */\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n\\r\\n    /**\\r\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n    * @param newOwner The address to transfer ownership to.\\r\\n    */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        if (newOwner != address(0)) {\\r\\n            owner = newOwner;\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getOracleByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOracleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getOracleLastActiveTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getOracleReputation\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"earned\",\"type\":\"uint256\"}],\"name\":\"increaseOracleAccepted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"increaseOracleAssigned\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"responseTime\",\"type\":\"uint256\"}],\"name\":\"increaseOracleCompleted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isOracleAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestFee\",\"type\":\"uint256\"}],\"name\":\"newOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"oracleAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracles\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAssignedRequest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCompletedRequest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAcceptedRequest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalResponseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastActiveTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalEarned\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"removeOracleByAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"updateOracleLastActiveTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Oracles","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}