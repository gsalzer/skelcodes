{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/DeriVote.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\ncontract DeriVote {\\r\\n\\r\\n    event Vote(address indexed voter, uint256 indexed votingId, uint256 votingOption);\\r\\n\\r\\n    string public constant name = 'DeriVote';\\r\\n\\r\\n    uint256 public votingId;\\r\\n\\r\\n    uint256 public numVotingOptions;\\r\\n\\r\\n    uint256 public votingDeadline;\\r\\n\\r\\n    // Record voting topic for a specific voting id of `votingId`\\r\\n    mapping (uint256 => string) public votingTopics;\\r\\n\\r\\n    // Record voting option for voters\\r\\n    // `votingOption` starts from 1, 1 means the first votingTopic, 0 is reserved for no voting\\r\\n    mapping (uint256 => mapping (address => uint256)) public votingOptions;\\r\\n\\r\\n    address public controller;\\r\\n\\r\\n    constructor () {\\r\\n        controller = msg.sender;\\r\\n    }\\r\\n\\r\\n    function setController(address newController) public {\\r\\n        require(msg.sender == controller, 'DeriVote.setController: only controller');\\r\\n        controller = newController;\\r\\n    }\\r\\n\\r\\n    function initializeVote(string memory topic, uint256 nOptions, uint256 deadline) public {\\r\\n        require(msg.sender == controller, 'DeriVote.initializeVote: only controller');\\r\\n        require(block.timestamp > votingDeadline, 'DeriVote.initializeVote: still in voting');\\r\\n        require(deadline > block.timestamp, 'DeriVote.initializeVote: deadline not valid');\\r\\n\\r\\n        votingId += 1;\\r\\n        numVotingOptions = nOptions;\\r\\n        votingDeadline = deadline;\\r\\n        votingTopics[votingId] = topic;\\r\\n    }\\r\\n\\r\\n    function vote(uint256 votingOption) public {\\r\\n        require(block.timestamp <= votingDeadline, 'DeriVote.vote: voting expired');\\r\\n        require(votingOption > 0 && votingOption <= numVotingOptions, 'DeriVote.vote: invalid voting option');\\r\\n        votingOptions[votingId][msg.sender] = votingOption;\\r\\n\\r\\n        emit Vote(msg.sender, votingId, votingOption);\\r\\n    }\\r\\n\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"votingId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingOption\",\"type\":\"uint256\"}],\"name\":\"Vote\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topic\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"nOptions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"initializeVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numVotingOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"votingOption\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votingOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votingTopics\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"DeriVote","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}