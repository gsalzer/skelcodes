{"status":"1","message":"OK","result":[{"SourceCode":"{\"nreAPI.sol\":{\"content\":\"/*\\r\\n\\r\\nÃ‘Ã­guez Randomity Engine API\\r\\n\\r\\nMIT License\\r\\n\\r\\nCopyright (c) 2019 niguezrandomityengine | Programmed and designed by Scheich R. Ahmed\\r\\n\\r\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\r\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\nin the Software without restriction, including without limitation the rights\\r\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\ncopies of the Software, and to permit persons to whom the Software is\\r\\nfurnished to do so, subject to the following conditions:\\r\\n\\r\\nThe above copyright notice and this permission notice shall be included in all\\r\\ncopies or substantial portions of the Software.\\r\\n\\r\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\nSOFTWARE.\\r\\n\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: --ðŸ¦‰--\\r\\n\\r\\npragma solidity \\u003e= 0.4.0; // Compiler version incompatible error!\\r\\n\\r\\nabstract contract niguezRandomityEngine {\\r\\n\\r\\n\\tfunction rd() external virtual returns (uint256);\\r\\n\\tfunction rm() external virtual returns (uint256);\\r\\n\\tfunction rv() external virtual returns (uint256);\\r\\n\\tfunction rx() external virtual returns (uint256);\\r\\n\\tfunction rf() external virtual returns (uint256);\\r\\n\\r\\n}\\r\\n\\r\\ncontract usingNRE {\\r\\n\\r\\n  niguezRandomityEngine internal nre = niguezRandomityEngine(0x031eaE8a8105217ab64359D4361022d0947f4572);\\t\\r\\n\\tfunction rd() internal returns (uint256) {\\r\\n        return nre.rd();\\r\\n    }\\r\\n\\r\\n\\tfunction rf() internal returns (uint256) {\\r\\n        return nre.rf();\\r\\n    }\\r\\n\\t\\t\\r\\n\\tfunction rm() internal returns (uint256) {\\r\\n        return nre.rm();\\r\\n    }\\r\\n\\r\\n\\tfunction rv() internal returns (uint256) {\\r\\n        return nre.rv();\\r\\n    }\\r\\n\\t\\r\\n\\tfunction rx() internal returns (uint256) {\\r\\n        return nre.rx();\\r\\n    }\\r\\n}\\r\\n\\r\\n/*\\r\\nEnd of API\\r\\n*/\\r\\n\"},\"Randomness.sol\":{\"content\":\"// SPDX-License-Identifier: --GRISE--\\r\\npragma solidity =0.7.6;\\r\\n\\r\\nimport \\\"./nreAPI.sol\\\";\\r\\n\\r\\ncontract Randomness is usingNRE { \\r\\n    \\r\\n   function stateRandomNumber() public returns (uint256) {\\r\\n       uint256 randomNumber;\\r\\n       randomNumber = (rm()%(10**5));\\r\\n       return randomNumber;\\r\\n    }\\r\\n \\r\\n}\\r\\n\"}}","ABI":"[{\"inputs\":[],\"name\":\"stateRandomNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Randomness","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://a85f2c9c22f1e3d9f363b6fb72355d7e985dd6de9e760a31d4f1c13405b0d4bc"}]}