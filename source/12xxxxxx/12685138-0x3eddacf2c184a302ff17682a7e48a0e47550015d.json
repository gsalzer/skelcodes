{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: AGPL-3.0-or-later\r\npragma solidity 0.7.5;\r\n\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IBond {\r\n    function deposit( uint amount, uint maxPrice, address depositor ) external returns ( uint );\r\n    function redeem( address recipient, bool stake ) external returns ( uint );\r\n}\r\n\r\ncontract Incrementer {\r\n    \r\n    address bond;\r\n    address asset;\r\n    \r\n    address owner;\r\n    address newOwner;\r\n    \r\n    address OHM;\r\n    \r\n    constructor( address _OHM ) {\r\n        owner = msg.sender;\r\n        OHM = _OHM;\r\n    }\r\n    \r\n    function setInfo( address _bond, address _asset ) external {\r\n        require( msg.sender == owner );\r\n        bond = _bond;\r\n        asset = _asset;\r\n    }\r\n    \r\n    function depositMultiple( uint num, uint amountToUse, uint maxPrice ) external {\r\n        require( msg.sender == owner );\r\n        for( uint i = 0; i < num; i++ ) {\r\n            IBond( bond ).deposit( amountToUse, maxPrice, address(this));\r\n        }\r\n    }\r\n    \r\n    function redeem() external {\r\n        uint amount = IBond( bond ).redeem( address(this), false );\r\n        IERC20( OHM ).transfer( owner, amount );\r\n    }\r\n    \r\n    function pushOwnership( address _new ) external {\r\n        newOwner = _new;\r\n    }\r\n    \r\n    function pullOwnership() external {\r\n        require( msg.sender == newOwner );\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_OHM\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToUse\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"}],\"name\":\"depositMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"pushOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bond\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"setInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Incrementer","CompilerVersion":"v0.7.5+commit.eb77ed08","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000383518188c0c6d7730d91b2c03a03c837814a899","EVMVersion":"Default","Library":"","LicenseType":"Unknown","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d04766259024fa5b792a4be99bef913a4dae63badb64d2ea859f6ca68d7e91f6"}]}