{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ninterface IERC20 {\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n}\r\n\r\n\r\n/** \r\n * @title Ballot\r\n * @dev Implements voting process along with vote delegation\r\n */\r\ncontract BatchTransfer {\r\n    \r\n    function batchTransfer(address token, address[] calldata toList, uint256[] calldata amountList)\r\n        external\r\n    {\r\n        require(toList.length == amountList.length, \"batch transfer length not match\");\r\n        \r\n        for (uint256 i = 0; i < toList.length; ++i) {\r\n            IERC20(token).transferFrom(msg.sender, toList[i], amountList[i]);\r\n        }\r\n    }\r\n   \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"toList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountList\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"BatchTransfer","CompilerVersion":"v0.8.3+commit.8d00100c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Apache-2.0","Proxy":"0","Implementation":"","SwarmSource":"ipfs://2fee7bb226a26423f2e59465d76e8fcc1dbb02a68ba22046bf7913f4b75c17ca"}]}