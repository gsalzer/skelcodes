{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/interfaces/IERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\npragma solidity ^0.8.2;\\r\\n\\r\\ninterface IERC20 {\\r\\n  /** @dev Events */\\r\\n\\r\\n  event Approval(address indexed account, address indexed trust, uint256 amount);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 amount);\\r\\n\\r\\n  /** @dev Views */\\r\\n\\r\\n  function name() external view returns (string memory);\\r\\n\\r\\n  function symbol() external view returns (string memory);\\r\\n\\r\\n  function decimals() external view returns (uint8);\\r\\n\\r\\n  function totalSupply() external view returns (uint256);\\r\\n\\r\\n  function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n  function allowance(address account, address trust) external view returns (uint256);\\r\\n\\r\\n  /** @dev Mutators */\\r\\n\\r\\n  function approve(address trust, uint256 amount) external returns (bool);\\r\\n\\r\\n  function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n  function transferFrom(\\r\\n    address from,\\r\\n    address to,\\r\\n    uint256 amount\\r\\n  ) external returns (bool);\\r\\n}\\r\\n\"\r\n    },\r\n    \"contracts/ARCH.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\npragma solidity ^0.8.2;\\r\\n\\r\\nimport \\\"./interfaces/IERC20.sol\\\";\\r\\n\\r\\ncontract ARCH is IERC20 {\\r\\n  /** @dev Contants */\\r\\n\\r\\n  uint256 private constant _totalSupply = 50_000_000 ether;\\r\\n\\r\\n  /** @dev Fields */\\r\\n\\r\\n  mapping(address => mapping(address => uint256)) private _allowances;\\r\\n  mapping(address => uint256) private _balances;\\r\\n\\r\\n  constructor() {\\r\\n    _balances[msg.sender] = _totalSupply;\\r\\n\\r\\n    emit Transfer(address(0), msg.sender, _totalSupply);\\r\\n  }\\r\\n\\r\\n  /** @dev Views */\\r\\n\\r\\n  function name() external pure override returns (string memory) {\\r\\n    return \\\"Arch DeFi\\\";\\r\\n  }\\r\\n\\r\\n  function symbol() external pure override returns (string memory) {\\r\\n    return \\\"ARCH\\\";\\r\\n  }\\r\\n\\r\\n  function decimals() external pure override returns (uint8) {\\r\\n    return 18;\\r\\n  }\\r\\n\\r\\n  function totalSupply() external pure override returns (uint256) {\\r\\n    return _totalSupply;\\r\\n  }\\r\\n\\r\\n  function balanceOf(address account) external view override returns (uint256) {\\r\\n    return _balances[account];\\r\\n  }\\r\\n\\r\\n  function allowance(address account, address trust) external view override returns (uint256) {\\r\\n    return _allowances[account][trust];\\r\\n  }\\r\\n\\r\\n  /** @dev Mutators */\\r\\n\\r\\n  function approve(address trust, uint256 amount) external override returns (bool) {\\r\\n    _allowances[msg.sender][trust] = amount;\\r\\n\\r\\n    emit Approval(msg.sender, trust, amount);\\r\\n\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  function transfer(address to, uint256 amount) external override returns (bool) {\\r\\n    return _transfer(msg.sender, to, amount);\\r\\n  }\\r\\n\\r\\n  function transferFrom(\\r\\n    address from,\\r\\n    address to,\\r\\n    uint256 amount\\r\\n  ) external override returns (bool) {\\r\\n    uint256 a = _allowances[from][msg.sender];\\r\\n\\r\\n    if (a != type(uint256).max) {\\r\\n      require(amount <= a, \\\"ARCH: insufficient allowance\\\");\\r\\n      _allowances[from][msg.sender] = a - amount;\\r\\n    }\\r\\n\\r\\n    return _transfer(from, to, amount);\\r\\n  }\\r\\n\\r\\n  function _transfer(\\r\\n    address from,\\r\\n    address to,\\r\\n    uint256 amount\\r\\n  ) private returns (bool) {\\r\\n    uint256 balance = _balances[from];\\r\\n\\r\\n    require(amount <= balance, \\\"ARCH: insufficient balance\\\");\\r\\n\\r\\n    _balances[from] = balance - amount;\\r\\n    _balances[to] += amount;\\r\\n\\r\\n    emit Transfer(from, to, amount);\\r\\n\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 10000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trust\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trust\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trust\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ARCH","CompilerVersion":"v0.8.2+commit.661d1103","OptimizationUsed":"1","Runs":"10000","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d24d4de0f9ba47601ac08fa9575accf8233746e7316f2491b1b8f8a2b1ab8bd7"}]}