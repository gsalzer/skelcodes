{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.26;\r\n\r\ncontract ERC20Basic {\r\n    function balanceOf(address who) public constant returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n}\r\ncontract Evo {\r\n    function getTokens() payable public;\r\n}\r\n\r\ncontract EvoGet {\r\n    \r\n    uint256 fee = 2;\r\n    uint256 referPercent = 2;\r\n    \r\n    function Get(uint256 time, address evo, address refer) payable public {\r\n        uint256 allBefore = ERC20Basic(evo).balanceOf(address(this));\r\n        for (uint256 i = 0; i < time; i++) {\r\n            Evo(evo).getTokens();\r\n        }\r\n        uint256 all = ERC20Basic(evo).balanceOf(address(this)) - allBefore;\r\n        uint256 feeEvo = all / 100 * fee;\r\n        ERC20Basic(evo).transfer(msg.sender, all - feeEvo);\r\n        ERC20Basic(evo).transfer(refer, feeEvo / referPercent);\r\n    }\r\n    \r\n    function setFee(uint256 newFee, uint256 newReferPercent) public {\r\n        require(msg.sender == address(0x3BBf0A387a73022A9ebC2491DC4fA8A465C8aAbb));\r\n        // max 0.1\r\n        require(newFee < 10);\r\n        fee = newFee;\r\n        referPercent = newReferPercent;\r\n    }\r\n    \r\n    function withdraw() public {\r\n        require(msg.sender == address(0x3BBf0A387a73022A9ebC2491DC4fA8A465C8aAbb));\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n    \r\n    function withdrawForeignTokens(address token) public {\r\n        require(msg.sender == address(0x3BBf0A387a73022A9ebC2491DC4fA8A465C8aAbb));\r\n        ERC20Basic(token).transfer(msg.sender, ERC20Basic(token).balanceOf(address(this)));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"evo\",\"type\":\"address\"},{\"name\":\"refer\",\"type\":\"address\"}],\"name\":\"Get\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newFee\",\"type\":\"uint256\"},{\"name\":\"newReferPercent\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawForeignTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"EvoGet","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://9078687176c1187257835cf41b2c70343d32aebca92445736e3bc8a087e9ebeb"}]}