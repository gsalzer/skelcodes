{"status":"1","message":"OK","result":[{"SourceCode":"// Pool Token Balancer for Stabilize Protocol\r\n// Governance can change weights of various token pools using this rebalancer\r\n// The lower the price this returns, the higher the rewards from the operator contract for the pool\r\n\r\npragma solidity =0.6.6;\r\n\r\ncontract StabilizePoolRebalancer {\r\n    \r\n    // Mapping of custom tokens\r\n    mapping(address => uint256) public poolTokens;\r\n\r\n    address public owner;\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n        insertInitialTokens();\r\n    }\r\n    \r\n    modifier onlyGovernance() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function insertInitialTokens() internal {\r\n        // Pool tokens\r\n        poolTokens[address(0x8e769EAA31375D13a1247dE1e64987c28Bed987E)] = 1e18;\r\n        poolTokens[address(0x739D93f2b116E6aD754e173655c635Bd5D8d664c)] = 1e18;\r\n        poolTokens[address(0x93B97BBb3F65EC39ea6041bF92FA998e5434E858)] = 1e18;\r\n        poolTokens[address(0xD469BB16116443F389EfEF407D73EF7Ab0Ad96Ce)] = 1e18;\r\n        poolTokens[address(0x27E8d93D27f55130B1870d8EF2BCE847C08A8191)] = 1e18;\r\n    }\r\n    \r\n    // Pool token options\r\n    function addNewPoolToken(address _address, uint256 _startPrice) external onlyGovernance {\r\n        poolTokens[_address] = _startPrice;\r\n    }\r\n    \r\n    function removePoolToken(address _address) external onlyGovernance {\r\n        poolTokens[_address] = 0;\r\n    }\r\n    \r\n    // Used to update the overall pool\r\n    function updatePoolTokens(address[] calldata _addresses, uint256[] calldata _prices) external onlyGovernance {\r\n        uint256 length = _addresses.length;\r\n        for(uint256 i = 0; i < length; i++){\r\n            poolTokens[_addresses[i]] = _prices[i];\r\n        }\r\n    }\r\n    \r\n    // Change governance\r\n    function governanceChange(address _address) external onlyGovernance {\r\n        owner = _address;\r\n    }\r\n    \r\n    function getPrice(address _address) public view returns (uint256) {\r\n        // This version of the price oracle will use Aave contracts\r\n        uint256 _price = poolTokens[_address];\r\n        if(_price == 0){ return 1e18; } // It returns a neutral price if pool token not found\r\n        return _price;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startPrice\",\"type\":\"uint256\"}],\"name\":\"addNewPoolToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"governanceChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removePoolToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_prices\",\"type\":\"uint256[]\"}],\"name\":\"updatePoolTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"StabilizePoolRebalancer","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://a637b7e0fcc79fe34b9f3773f3eb775ee9c3c7693a1db56376a67d594db49c42"}]}