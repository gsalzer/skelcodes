{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.8.0;\r\n\r\n// SPDX-License-Identifier: none\r\ninterface IERC20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    \r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface IToken {\r\n  function mint(address to, uint amount) external;\r\n  function burn(address owner, uint amount) external;\r\n  function transferOwnership(address  _newOwner) external;\r\n  function balanceOf(address tokenOwner) external returns (uint balance);\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\n\r\n\r\ncontract SatoPayErcBridge {\r\n  address public admin;\r\n  IToken public token;\r\n  uint public nonce;\r\n  address public feepayer;\r\n  mapping(uint => bool) public processedNonces;\r\n\r\n  enum Step { Burn, Mint }\r\n  event Transfer(\r\n    address from,\r\n    address to,\r\n    uint amount,\r\n    uint date,\r\n    uint nonce,\r\n    Step indexed step\r\n  );\r\nevent OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n\r\n  constructor(address _token) {\r\n    admin = msg.sender;\r\n    token = IToken(_token);\r\n    \r\n  }\r\n\r\n\r\n   // transfer Ownership to other address\r\n    function transferOwnership(address _newOwner) public {\r\n        require(_newOwner != address(0x0));\r\n        require(msg.sender == admin);\r\n        emit OwnershipTransferred(admin,_newOwner);\r\n        admin = _newOwner;\r\n    }\r\n    \r\n // transfer Ownership to other address\r\n    function transferTokenOwnership(address _newOwner) public {\r\n        require(_newOwner != address(0x0));\r\n        require(msg.sender == admin);\r\n        token.transferOwnership(_newOwner);\r\n    }    \r\n    \r\n \r\n    receive() payable external {\r\n        \r\n        \r\n    }\r\n    \r\n    function transferAnyERC20Token(address _token,address to,uint amount) external{\r\n         require(msg.sender == admin, 'only admin');\r\n         require(token.balanceOf(address(this))>=amount);\r\n         IToken(_token).transfer(to,amount);\r\n    }\r\n\r\n  function vtransfer(address to, uint amount, uint otherChainNonce) external {\r\n     address selfAddress =  address(this);\r\n    require(msg.sender == admin, 'only admin');\r\n    require(processedNonces[otherChainNonce] == false, 'transfer already processed');\r\n    require(token.balanceOf(selfAddress)>=amount);\r\n    processedNonces[otherChainNonce] = true;\r\n    token.transfer(to,amount);\r\n    emit Transfer(\r\n      selfAddress,\r\n      to,\r\n      amount,\r\n      block.timestamp,\r\n      otherChainNonce,\r\n      Step.Mint\r\n    );\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum SatoPayErcBridge.Step\",\"name\":\"step\",\"type\":\"uint8\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feepayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"processedNonces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferTokenOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"otherChainNonce\",\"type\":\"uint256\"}],\"name\":\"vtransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"SatoPayErcBridge","CompilerVersion":"v0.8.3+commit.8d00100c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000008c3ee4f778e282b59d42d693a97b80b1ed80f4ee","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://6cb40b55d2e3dc1f4b2ee64a5d3ea9335cae70bbafafe24e783bf689712083ea"}]}