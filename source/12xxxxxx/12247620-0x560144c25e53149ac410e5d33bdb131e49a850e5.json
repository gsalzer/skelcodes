{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2021-04-14\r\n */\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.2;\r\n\r\n/*******************************************************\r\n *                       Interfaces                    *\r\n *******************************************************/\r\ninterface IOracle {\r\n    function getNormalizedValueUsdc(\r\n        address tokenAddress,\r\n        uint256 amount,\r\n        uint256 priceUsdc\r\n    ) external view returns (uint256);\r\n\r\n    function getNormalizedValueUsdc(address tokenAddress, uint256 amount)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function getPriceUsdcRecommended(address tokenAddress)\r\n        external\r\n        view\r\n        returns (uint256);\r\n}\r\n\r\ninterface IVotingEscrow {\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\n/*******************************************************\r\n *                     Adapter Logic                   *\r\n *******************************************************/\r\ncontract TvlAdapterVeCrv {\r\n    IOracle public oracle; // The oracle is used to fetch USDC normalized pricing data\r\n\r\n    address public yveCrvDaoAddress =\r\n        0xc5bDdf9843308380375a611c18B50Fb9341f502A; // veCRV-DAO \"Vault\"\r\n    address public curveVotingEscrowAddress =\r\n        0x5f3b5DfEb7B28CDbD7FAba78963EE202a494e2A2; // veCRV\r\n    address public curveYCrvVoterAddress =\r\n        0xF147b8125d2ef93FB6965Db97D6746952a133934; // Yearn voter proxy\r\n    uint256 public assetsLength = 1;\r\n\r\n    /**\r\n     * TVL breakdown for an asset\r\n     */\r\n    struct AssetTvlBreakdown {\r\n        address assetId; // Asset address\r\n        address tokenId; // Token address\r\n        uint256 tokenPriceUsdc; // Token price in USDC\r\n        uint256 underlyingTokenBalance; // Amount of underlying token in asset\r\n        uint256 delegatedBalance; // Amount of underlying token balance that is delegated\r\n        uint256 adjustedBalance; // underlyingTokenBalance - delegatedBalance\r\n        uint256 adjustedBalanceUsdc; // TVL\r\n    }\r\n\r\n    /**\r\n     * Information about the adapter\r\n     */\r\n    struct AdapterInfo {\r\n        address id; // Adapter address\r\n        string typeId; // Adapter typeId (for example \"VAULT_V2\" or \"IRON_BANK_MARKET\")\r\n        string categoryId; // Adapter categoryId (for example \"VAULT\")\r\n    }\r\n\r\n    /**\r\n     * Configure adapter\r\n     */\r\n    constructor(address _oracleAddress) {\r\n        require(_oracleAddress != address(0), \"Missing oracle address\");\r\n        oracle = IOracle(_oracleAddress);\r\n    }\r\n\r\n    /**\r\n     * Fetch adapter info\r\n     */\r\n    function adapterInfo() public view returns (AdapterInfo memory) {\r\n        return\r\n            AdapterInfo({\r\n                id: address(this),\r\n                typeId: \"VE_CRV\",\r\n                categoryId: \"SPECIAL\"\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Fetch all asset addresses for this adapter\r\n     */\r\n    function assetsAddresses() public view returns (address[] memory) {\r\n        address[] memory addresses = new address[](1);\r\n        addresses[0] = yveCrvDaoAddress;\r\n        return addresses;\r\n    }\r\n\r\n    /**\r\n     * Fetch the underlying token address of an asset\r\n     */\r\n    function underlyingTokenAddress(address assetAddress)\r\n        public\r\n        view\r\n        returns (address)\r\n    {\r\n        return 0xD533a949740bb3306d119CC777fa900bA034cd52; // CRV\r\n    }\r\n\r\n    /**\r\n     * Fetch asset balance in underlying tokens\r\n     */\r\n    function assetBalance(address assetAddress) public view returns (uint256) {\r\n        IVotingEscrow votingEscrow = IVotingEscrow(curveVotingEscrowAddress);\r\n        return votingEscrow.balanceOf(curveYCrvVoterAddress);\r\n    }\r\n\r\n    /**\r\n     * Fetch delegated balance of an asset\r\n     */\r\n    function assetDelegatedBalance(address assetAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Fetch TVL of an asset in USDC\r\n     */\r\n    function assetTvlUsdc(address assetAddress) public view returns (uint256) {\r\n        address tokenAddress = underlyingTokenAddress(assetAddress);\r\n        uint256 underlyingBalanceAmount = assetBalance(assetAddress);\r\n        uint256 adjustedBalanceUsdc =\r\n            oracle.getNormalizedValueUsdc(\r\n                tokenAddress,\r\n                underlyingBalanceAmount\r\n            );\r\n        return adjustedBalanceUsdc;\r\n    }\r\n\r\n    /**\r\n     * Fetch TVL for adapter in USDC\r\n     */\r\n    function assetsTvlUsdc(address[] memory _assetsAddresses)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return assetTvlUsdc(_assetsAddresses[0]);\r\n    }\r\n\r\n    /**\r\n     * Fetch TVL for adapter in USDC given an array of addresses\r\n     */\r\n    function assetsTvlUsdc() external view returns (uint256) {\r\n        address[] memory _assetsAddresses = assetsAddresses();\r\n        return assetsTvlUsdc(_assetsAddresses);\r\n    }\r\n\r\n    /**\r\n     * Fetch TVL breakdown of an asset\r\n     */\r\n    function assetTvlBreakdown(address assetAddress)\r\n        public\r\n        view\r\n        returns (AssetTvlBreakdown memory)\r\n    {\r\n        address tokenAddress = underlyingTokenAddress(assetAddress);\r\n        uint256 underlyingBalanceAmount = assetBalance(assetAddress);\r\n        uint256 tokenPriceUsdc = oracle.getPriceUsdcRecommended(tokenAddress);\r\n        uint256 delegatedBalanceAmount = 0;\r\n        return\r\n            AssetTvlBreakdown({\r\n                assetId: assetAddress,\r\n                tokenId: tokenAddress,\r\n                tokenPriceUsdc: tokenPriceUsdc,\r\n                underlyingTokenBalance: underlyingBalanceAmount,\r\n                delegatedBalance: delegatedBalanceAmount,\r\n                adjustedBalance: underlyingBalanceAmount -\r\n                    delegatedBalanceAmount,\r\n                adjustedBalanceUsdc: oracle.getNormalizedValueUsdc(\r\n                    tokenAddress,\r\n                    underlyingBalanceAmount,\r\n                    tokenPriceUsdc\r\n                )\r\n            });\r\n    }\r\n\r\n    // Fetch TVL breakdown for adapter given an array of addresses\r\n    function assetsTvlBreakdown(address[] memory _assetsAddresses)\r\n        public\r\n        view\r\n        returns (AssetTvlBreakdown[] memory)\r\n    {\r\n        AssetTvlBreakdown[] memory tvlData = new AssetTvlBreakdown[](1);\r\n        tvlData[0] = assetTvlBreakdown(_assetsAddresses[0]);\r\n        return tvlData;\r\n    }\r\n\r\n    /**\r\n     * Fetch TVL breakdown for adapter\r\n     */\r\n    function assetsTvlBreakdown()\r\n        external\r\n        view\r\n        returns (AssetTvlBreakdown[] memory)\r\n    {\r\n        address[] memory _assetsAddresses = assetsAddresses();\r\n        return assetsTvlBreakdown(_assetsAddresses);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"adapterInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"typeId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"categoryId\",\"type\":\"string\"}],\"internalType\":\"struct TvlAdapterVeCrv.AdapterInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"name\":\"assetBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"name\":\"assetDelegatedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"name\":\"assetTvlBreakdown\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceUsdc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatedBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"adjustedBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"adjustedBalanceUsdc\",\"type\":\"uint256\"}],\"internalType\":\"struct TvlAdapterVeCrv.AssetTvlBreakdown\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"name\":\"assetTvlUsdc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetsAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetsTvlBreakdown\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceUsdc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatedBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"adjustedBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"adjustedBalanceUsdc\",\"type\":\"uint256\"}],\"internalType\":\"struct TvlAdapterVeCrv.AssetTvlBreakdown[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_assetsAddresses\",\"type\":\"address[]\"}],\"name\":\"assetsTvlBreakdown\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"assetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceUsdc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatedBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"adjustedBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"adjustedBalanceUsdc\",\"type\":\"uint256\"}],\"internalType\":\"struct TvlAdapterVeCrv.AssetTvlBreakdown[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_assetsAddresses\",\"type\":\"address[]\"}],\"name\":\"assetsTvlUsdc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetsTvlUsdc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveVotingEscrowAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveYCrvVoterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"name\":\"underlyingTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yveCrvDaoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TvlAdapterVeCrv","CompilerVersion":"v0.8.2+commit.661d1103","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000083d95e0d5f402511db06817aff3f9ea88224b030","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://671b99ddb0186f68e7418b1ad52d75bd5c0264913da759177fa4d05694d31a2a"}]}