{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/LockGTON.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"./interfaces/ILockGTON.sol\\\";\\n\\n/// @title LockGTON\\n/// @author Artemij Artamonov - <array.clean@gmail.com>\\n/// @author Anton Davydov - <fetsorn@gmail.com>\\ncontract LockGTON is ILockGTON {\\n\\n    /// @inheritdoc ILockGTON\\n    address public override owner;\\n\\n    modifier isOwner() {\\n        require(msg.sender == owner, \\\"Caller is not owner\\\");\\n        _;\\n    }\\n\\n    /// @inheritdoc ILockGTON\\n    IERC20 public override governanceToken;\\n\\n    /// @inheritdoc ILockGTON\\n    bool public override canLock;\\n\\n    constructor(IERC20 _governanceToken) {\\n        owner = msg.sender;\\n        governanceToken = _governanceToken;\\n    }\\n\\n    /// @inheritdoc ILockGTON\\n    function setOwner(address _owner) external override isOwner {\\n        address ownerOld = owner;\\n        owner = _owner;\\n        emit SetOwner(ownerOld, _owner);\\n    }\\n\\n    /// @inheritdoc ILockGTON\\n    function setCanLock(bool _canLock) external override isOwner {\\n        canLock = _canLock;\\n        emit SetCanLock(owner, _canLock);\\n    }\\n\\n    /// @inheritdoc ILockGTON\\n    function migrate(address newLock)\\n        external\\n        override\\n        isOwner\\n    {\\n        uint amount = governanceToken.balanceOf(address(this));\\n        governanceToken.transfer(newLock, amount);\\n        emit Migrate(newLock, amount);\\n    }\\n\\n    /// @inheritdoc ILockGTON\\n    function lock(address receiver, uint256 amount) external override {\\n        require(canLock, \\\"lock is not allowed\\\");\\n        governanceToken.transferFrom(msg.sender, address(this), amount);\\n        emit LockGTON(address(governanceToken), msg.sender, receiver, amount);\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/ILockGTON.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/// @title The interface for Graviton governance token lock\\n/// @notice Locks governance tokens\\n/// @author Artemij Artamonov - <array.clean@gmail.com>\\n/// @author Anton Davydov - <fetsorn@gmail.com>\\ninterface ILockGTON {\\n    /// @notice User that can grant access permissions and perform privileged actions\\n    function owner() external view returns (address);\\n\\n    /// @notice Transfers ownership of the contract to a new account (`_owner`).\\n    /// @dev Can only be called by the current owner.\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Look up if locking is allowed\\n    function canLock() external view returns (bool);\\n\\n    /// @notice Sets the permission to lock to `_canLock`\\n    function setCanLock(bool _canLock) external;\\n\\n    /// @notice Address of the governance token\\n    function governanceToken() external view returns (IERC20);\\n\\n    /// @notice Transfers locked governance tokens to the next version of LockGTON\\n    function migrate(address newLock) external;\\n\\n    /// @notice Locks `amount` of governance tokens in the name of `receiver`\\n    function lock(address receiver, uint256 amount) external;\\n\\n    /// @notice Event emitted when the owner changes via `#setOwner`.\\n    /// @param ownerOld The account that was the previous owner of the contract\\n    /// @param ownerNew The account that became the owner of the contract\\n    event SetOwner(address indexed ownerOld, address indexed ownerNew);\\n\\n    /// @notice Event emitted when the `sender` locks `amount` of governance tokens in the name of `receiver`\\n    /// @dev LockGTON event is not called Lock so the topic0 is different\\n    /// from the lp-token locking event when parsed by the oracle parser\\n    /// @param governanceToken The address of governance token\\n    /// @dev governanceToken is specified so the event had the same number of topics\\n    /// as the lp-token locking event when parsed by the oracle parser\\n    /// @param sender The account that locked governance tokens\\n    /// @param receiver The account to whose governance balance the tokens are added\\n    /// @param amount The amount of governance tokens locked\\n    event LockGTON(\\n        address indexed governanceToken,\\n        address indexed sender,\\n        address indexed receiver,\\n        uint256 amount\\n    );\\n\\n    /// @notice Event emitted when the permission to lock is updated via `#setCanLock`\\n    /// @param owner The owner account at the time of change\\n    /// @param newBool Updated permission\\n    event SetCanLock(\\n        address indexed owner,\\n        bool indexed newBool\\n    );\\n\\n    /// @notice Event emitted when the locked governance tokens are transfered the another version of LockGTON\\n    /// @param newLock The new Lock contract\\n    /// @param amount Amount of tokens migrated\\n    event Migrate(address indexed newLock, uint amount);\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/IERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.8.0;\\n\\ninterface IERC20 {\\n    function mint(address _to, uint256 _value) external;\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function increaseAllowance(address spender, uint256 addedValue)\\n        external\\n        returns (bool);\\n\\n    function transfer(address _to, uint256 _value)\\n        external\\n        returns (bool success);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool success);\\n\\n    function balanceOf(address _owner) external view returns (uint256 balance);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_governanceToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governanceToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LockGTON\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newLock\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Migrate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"newBool\",\"type\":\"bool\"}],\"name\":\"SetCanLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ownerOld\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ownerNew\",\"type\":\"address\"}],\"name\":\"SetOwner\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"canLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newLock\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_canLock\",\"type\":\"bool\"}],\"name\":\"setCanLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"LockGTON","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000001e0e2e61f554ecaaec0cc933e739ad90f24a86d","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}