{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address account) external view returns (uint);\r\n    function transfer(address recipient, uint amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n    function approve(address spender, uint amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n\r\n\r\ncontract Exchange{\r\n    \r\n    address public oldtoken;\r\n    address public newtoken;\r\n    address public owner;\r\n    \r\n    event Swap(address _user, uint _amount);\r\n    \r\n    modifier onlyOwner{\r\n        require(msg.sender == owner, \"only owner\");\r\n        _;\r\n    }\r\n    \r\n    function transferOwnership(address _newowner)public onlyOwner{\r\n        owner = _newowner;\r\n    }\r\n    \r\n    constructor(){\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function setTokens(address _old, address _new)public onlyOwner{\r\n        oldtoken = _old;\r\n        newtoken = _new;\r\n    }\r\n    \r\n    \r\n    function swap(uint _amount) public{\r\n        require(IERC20(oldtoken).balanceOf(msg.sender) >= _amount,\"insufficient old tokens\");\r\n        require(IERC20(newtoken).balanceOf(address(this))>=_amount,\"insufficient new tokens\");\r\n        \r\n        IERC20(oldtoken).transferFrom(msg.sender, address(this), _amount);\r\n        IERC20(newtoken).transfer(msg.sender, _amount);\r\n        \r\n        emit Swap(msg.sender, _amount);\r\n    }\r\n    \r\n    \r\n    \r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"newtoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldtoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_old\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"setTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newowner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Exchange","CompilerVersion":"v0.8.4+commit.c7e474f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://8a86a221d0465a20bdd18298565415221e1bde2d1914206e1884773cd16529e6"}]}