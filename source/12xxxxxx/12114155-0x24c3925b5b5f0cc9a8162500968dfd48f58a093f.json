{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.17;\r\n\r\n\r\n// SPDX-License-Identifier: MIT\r\ninterface IProxyAdmin {\r\n    function getProxyImplementation(address proxy) external view returns (address);\r\n    function isOwner() external view returns (bool);\r\n    function owner() external view returns (address);\r\n    function getProxyAdmin(address proxy) external view returns (address);\r\n\r\n    function changeProxyAdmin(address proxy, address newAdmin) external;\r\n    function upgradeAndCall(address proxy, address implementation, bytes calldata data) external payable;\r\n    function upgrade(address proxy, address implementation) external;\r\n    function transferOwnership(address newOwner) external;\r\n}\r\n\r\ninterface IAdminUpgradeabilityProxy {\r\n    function changeAdmin(address newAdmin) external;\r\n}\r\n\r\ncontract ProxyAdminRelayer {\r\n    address public multiSig;\r\n    address public upgrader;\r\n    address public proxyAdmin;\r\n\r\n    constructor(address _proxyAdmin, address _multiSig) public {\r\n        proxyAdmin = _proxyAdmin;\r\n        multiSig = _multiSig;\r\n        upgrader = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the multiSig.\r\n     */\r\n    modifier onlyMultiSig() {\r\n        require(isMultiSig());\r\n        _;\r\n    }\r\n\r\n    modifier onlyUpgrader() {\r\n        require(msg.sender == upgrader, \"require upgrader\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @return true if `msg.sender` is the multiSig of the contract.\r\n     */\r\n    function isMultiSig() public view returns (bool) {\r\n        return msg.sender == multiSig;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current upgrader to transfer control of the contract to a newUpgrader.\r\n     * @param newUpgrader The address to transfer upgradership to.\r\n     */\r\n    function transferUpgrader(address newUpgrader) public onlyMultiSig {\r\n        upgrader = newUpgrader;\r\n    }\r\n\r\n    function setProxyAdmin(address newProxyAdmin) public onlyMultiSig {\r\n        proxyAdmin = newProxyAdmin;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current multiSig to transfer control of the contract to a multiSig.\r\n     * @param _multiSig The address to transfer multiSig to.\r\n     */\r\n    function transferMultiSig(address _multiSig) public onlyMultiSig {\r\n        multiSig = _multiSig;\r\n    }\r\n\r\n    function getProxyImplementation(address proxy) external view returns (address) {\r\n        return IProxyAdmin(proxyAdmin).getProxyImplementation(proxy);\r\n    }\r\n\r\n    function isOwner() external view returns (bool) {\r\n        return IProxyAdmin(proxyAdmin).isOwner();\r\n    }\r\n\r\n    function owner() external view returns (address) {\r\n        return IProxyAdmin(proxyAdmin).owner();\r\n    }\r\n\r\n    function getProxyAdmin(address proxy) external view returns (address) {\r\n        return IProxyAdmin(proxyAdmin).getProxyAdmin(proxy);\r\n    }\r\n\r\n    function changeProxyAdmin(address proxy, address newAdmin) external onlyMultiSig {\r\n        return IProxyAdmin(proxyAdmin).changeProxyAdmin(proxy, newAdmin);\r\n    }\r\n    \r\n    function upgradeAndCall(address proxy, address implementation, bytes calldata data) external payable onlyUpgrader{\r\n        return IProxyAdmin(proxyAdmin).upgradeAndCall.value(msg.value)(proxy, implementation, data);\r\n    }\r\n\r\n    function upgrade(address proxy, address implementation) external onlyUpgrader {\r\n        return IProxyAdmin(proxyAdmin).upgrade(proxy, implementation);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) external onlyMultiSig {\r\n        return IProxyAdmin(proxyAdmin).transferOwnership(newOwner);\r\n    }\r\n    \r\n    // 防止使用SDK新建合约时，未填入正确的proxyAdmin地址，此方法用于修正\r\n    // Prevent creating a new contract with the SDK by not filling in the correct ProxyAdmin address.\r\n    // This method is used to fix this\r\n    function fixProxyAdmin(address proxy, address originalProxyAdmin) external onlyMultiSig {\r\n        IAdminUpgradeabilityProxy(proxy).changeAdmin(originalProxyAdmin);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proxyAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_multiSig\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeProxyAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originalProxyAdmin\",\"type\":\"address\"}],\"name\":\"fixProxyAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isMultiSig\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multiSig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProxyAdmin\",\"type\":\"address\"}],\"name\":\"setProxyAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_multiSig\",\"type\":\"address\"}],\"name\":\"transferMultiSig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newUpgrader\",\"type\":\"address\"}],\"name\":\"transferUpgrader\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgrader\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ProxyAdminRelayer","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000097e7b2a10d7f39b57c8e2b5fdef6a3c61c00a874000000000000000000000000e91191c2cd2abba849fa9efa9c8c8977db518f16","EVMVersion":"petersburg","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://8bcc8e225e53a343cc76405bb260c5d7d622dbbac70bab882d08551c9dd5fe63"}]}