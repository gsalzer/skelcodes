{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/jacob/Developer/DeFiWorkspace/punk.protocol/contracts/Ownable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0 <0.9.0;\\n\\nimport \\\"./OwnableStorage.sol\\\";\\n\\ncontract Ownable{\\n\\n    OwnableStorage _storage;\\n\\n    function initialize( address storage_ ) public {\\n        _storage = OwnableStorage(storage_);\\n    }\\n\\n    modifier OnlyAdmin(){\\n        require( _storage.isAdmin(msg.sender) );\\n        _;\\n    }\\n\\n    modifier OnlyGovernance(){\\n        require( _storage.isGovernance( msg.sender ) );\\n        _;\\n    }\\n\\n    modifier OnlyAdminOrGovernance(){\\n        require( _storage.isAdmin(msg.sender) || _storage.isGovernance( msg.sender ) );\\n        _;\\n    }\\n\\n    function updateAdmin( address admin_ ) public OnlyAdmin {\\n        _storage.setAdmin(admin_);\\n    }\\n\\n    function updateGovenance( address gov_ ) public OnlyAdminOrGovernance {\\n        _storage.setGovernance(gov_);\\n    }\\n\\n}\"\r\n    },\r\n    \"/Users/jacob/Developer/DeFiWorkspace/punk.protocol/contracts/OwnableStorage.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0 <0.9.0;\\n\\ncontract OwnableStorage {\\n\\n    address public _admin;\\n    address public _governance;\\n\\n    constructor() payable {\\n        _admin = msg.sender;\\n        _governance = msg.sender;\\n    }\\n\\n    function setAdmin( address account ) public {\\n        require( isAdmin( msg.sender ));\\n        _admin = account;\\n    }\\n\\n    function setGovernance( address account ) public {\\n        require( isAdmin( msg.sender ) || isGovernance( msg.sender ));\\n        _admin = account;\\n    }\\n\\n    function isAdmin( address account ) public view returns( bool ) {\\n        return account == _admin;\\n    }\\n\\n    function isGovernance( address account ) public view returns( bool ) {\\n        return account == _admin;\\n    }\\n\\n}\"\r\n    },\r\n    \"/Users/jacob/Developer/DeFiWorkspace/punk.protocol/contracts/Saver.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0 <0.9.0;\\n\\nstruct Saver{\\n    uint256 createTimestamp;\\n    uint256 startTimestamp;\\n    uint count;\\n    uint interval;\\n    uint256 mint;\\n    uint256 released;\\n    uint256 accAmount;\\n    uint256 relAmount;\\n    uint score;\\n    uint status;\\n    uint updatedTimestamp;\\n    bytes12 ref;\\n}\\n\\nstruct Transaction{\\n    bool pos;\\n    uint timestamp;\\n    uint amount;\\n}\"\r\n    },\r\n    \"/Users/jacob/Developer/DeFiWorkspace/punk.protocol/contracts/Variables.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"./Ownable.sol\\\";\\nimport \\\"./Saver.sol\\\";\\n\\ncontract Variables is Ownable{\\n\\n    address private _initializer;\\n\\n    uint256 private _earlyTerminateFee;\\n    uint256 private _buybackRate;\\n    uint256 private _serviceFee;\\n    uint256 private _discount;\\n    uint256 private _compensation;\\n\\n    address private _treasury;\\n    address private _opTreasury;\\n    address private _reward;\\n    address private _referral;\\n\\n    bool private _initailize = false;\\n\\n    mapping( address => bool ) _emergency;\\n\\n    modifier onlyInitializer{\\n        require(msg.sender == _initializer,\\\"VARIABLES : Not Initializer\\\");\\n        _;\\n    }\\n\\n    constructor(){\\n        _initializer = msg.sender;\\n    }\\n\\n    function initializeVariables( address storage_) public onlyInitializer{\\n        require(!_initailize, \\\"VARIABLES : Already Initailized\\\");\\n        Ownable.initialize(storage_);\\n        _initailize = true;\\n        _serviceFee = 1;\\n        _earlyTerminateFee = 1;\\n        _buybackRate = 20;\\n        _discount = 5;\\n        _compensation = 5;\\n    }\\n\\n    function setEarlyTerminateFee( uint256 earlyTerminateFee_ ) public OnlyGovernance {\\n        require(  1 <= earlyTerminateFee_ && earlyTerminateFee_ < 11, \\\"VARIABLES : Fees range from 1 to 10.\\\" );\\n        _earlyTerminateFee = earlyTerminateFee_;\\n    }\\n    function setBuybackRate( uint256 buybackRate_ ) public OnlyGovernance {\\n        require(  1 <= buybackRate_ && buybackRate_ < 30, \\\"VARIABLES : BuybackRate range from 1 to 30.\\\" );\\n        _buybackRate = buybackRate_;\\n    }\\n\\n    function setEmergency( address forge, bool emergency ) public OnlyAdmin {\\n        _emergency[ forge ] = emergency;\\n    }\\n\\n    function setTreasury( address treasury_ ) public OnlyAdmin {\\n        require(Address.isContract(treasury_), \\\"VARIABLES : must be the contract address.\\\");\\n        _treasury = treasury_;\\n    }\\n\\n    function setReward( address reward_ ) public OnlyAdmin {\\n        require(Address.isContract(reward_), \\\"VARIABLES : must be the contract address.\\\");\\n        _reward = reward_;\\n    }\\n\\n    function setOpTreasury( address opTreasury_ ) public OnlyAdmin {\\n        require(Address.isContract(opTreasury_), \\\"VARIABLES : must be the contract address.\\\");\\n        _opTreasury = opTreasury_;\\n    }\\n\\n    function setReferral( address referral_ ) public OnlyAdmin {\\n        require(Address.isContract(referral_), \\\"VARIABLES : must be the contract address.\\\");\\n        _referral = referral_;\\n    }\\n\\n    function setServiceFee( uint256 serviceFee_ ) public OnlyAdmin {\\n        require(  1 <= serviceFee_ && serviceFee_ < 5, \\\"VARIABLES : ServiceFees range from 1 to 10.\\\" );\\n        _serviceFee = serviceFee_;\\n    }\\n\\n    function setDiscount( uint256 discount_ ) public OnlyAdmin {\\n        require( discount_ + _compensation <= 100, \\\"VARIABLES : discount + compensation <= 100\\\" );\\n        _discount = discount_;\\n    } \\n\\n    function setCompensation( uint256 compensation_ ) public OnlyAdmin {\\n        require( _discount + compensation_ <= 100, \\\"VARIABLES : discount + compensation <= 100\\\" );\\n        _compensation = compensation_;\\n    }\\n\\n    function earlyTerminateFee( ) public view returns( uint256 ){ \\n        return _earlyTerminateFee;\\n    }\\n\\n    function earlyTerminateFee( address forge ) public view returns( uint256 ){ \\n        return isEmergency( forge ) ? 0 : _earlyTerminateFee;\\n    }\\n\\n    function buybackRate() public view returns( uint256 ){ return _buybackRate; }\\n\\n\\n    function isEmergency( address forge ) public view returns( bool ){\\n        return _emergency[ forge ];\\n    }\\n\\n    function treasury() public view returns( address ){\\n        return _treasury;\\n    }\\n\\n    function reward() public view returns( address ){\\n        return _reward;\\n    }\\n\\n    function opTreasury() public view returns( address ){\\n        return _opTreasury;\\n    }\\n\\n    function referral() public view returns( address ){\\n        return _referral;\\n    }\\n\\n    function serviceFee() public view returns( uint256 ){\\n        return _serviceFee;\\n    } \\n\\n    function discount() public view returns( uint256 ){\\n        return _discount;\\n    }\\n\\n    function compensation() public view returns( uint256 ){\\n        return _compensation;\\n    }\\n\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 500\r\n    },\r\n    \"evmVersion\": \"byzantium\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buybackRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compensation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forge\",\"type\":\"address\"}],\"name\":\"earlyTerminateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earlyTerminateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"storage_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"storage_\",\"type\":\"address\"}],\"name\":\"initializeVariables\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forge\",\"type\":\"address\"}],\"name\":\"isEmergency\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"opTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referral\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"serviceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buybackRate_\",\"type\":\"uint256\"}],\"name\":\"setBuybackRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"compensation_\",\"type\":\"uint256\"}],\"name\":\"setCompensation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"discount_\",\"type\":\"uint256\"}],\"name\":\"setDiscount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"earlyTerminateFee_\",\"type\":\"uint256\"}],\"name\":\"setEarlyTerminateFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forge\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"emergency\",\"type\":\"bool\"}],\"name\":\"setEmergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"opTreasury_\",\"type\":\"address\"}],\"name\":\"setOpTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referral_\",\"type\":\"address\"}],\"name\":\"setReferral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reward_\",\"type\":\"address\"}],\"name\":\"setReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"serviceFee_\",\"type\":\"uint256\"}],\"name\":\"setServiceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"treasury_\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"updateAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gov_\",\"type\":\"address\"}],\"name\":\"updateGovenance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Variables","CompilerVersion":"v0.8.6+commit.11564f7e","OptimizationUsed":"1","Runs":"500","ConstructorArguments":"","EVMVersion":"byzantium","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}