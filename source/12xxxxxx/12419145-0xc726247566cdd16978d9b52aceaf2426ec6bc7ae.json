{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n\r\ncontract ProfitSplitter {\r\n    address payable user1;\r\n    address payable user2;\r\n    address payable user3;\r\n\r\n// Defining constructor function to accept 3 employees and avoid hardcoding of account addresses.\r\n    constructor(address payable _one, address payable _two, address payable _three) public {\r\n        user1 = _one;\r\n        user2 = _two;\r\n        user3 = _three;\r\n    }\r\n\r\n// Function to check the balance.  Should always be 0 due to returning leftover amounts to the sending address.\r\n    function balance() public view returns(uint) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function deposit() public payable {\r\n        uint amount = msg.value / 3;\r\n        uint total;\r\n        total += amount;\r\n        user1.transfer(amount);\r\n        \r\n        total += amount;\r\n        user2.transfer(amount);\r\n        \r\n        total += amount;\r\n        user3.transfer(amount);\r\n        \r\n        address payable sender = msg.sender;\r\n        sender.transfer(msg.value - total);// send remaining wei back to sender\r\n    }\r\n\r\n// Deining a fallback function to accept deposits from external accounts. \r\n    function() external payable {\r\n        deposit();\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_one\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_two\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_three\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"ProfitSplitter","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000e651e0da71e78e6b7a6b76a2b512ea1f4b6f57f000000000000000000000000075aca0333651a81b28588827a66d82a1d31ac546000000000000000000000000e2392072ed1bfad927c41938756fae60e1de628e","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://e96d202f5b8a25e7dc045fd0962b0556476689ee9e9cf1360f0f633019b23bde"}]}