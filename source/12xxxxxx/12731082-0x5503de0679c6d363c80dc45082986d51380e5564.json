{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n/*\r\n * STATICCALL Proxy\r\n * author: Alex Beregszaszi (@axic) - https://gist.github.com/axic/fc61daf7775c56da02d21368865a9416\r\n *\r\n * It expects the input:\r\n * 256 bit - address\r\n * 256 bit - gas\r\n * 256 bit - value\r\n * n   bit - calldata to be proxied\r\n * \r\n * And returns the output:\r\n * 8 bit - original CALL result\r\n * n bit - result data\r\n *\r\n */\r\ncontract StaticCallProxy {\r\n    function() payable external {\r\n        assembly {\r\n            let _dst := calldataload(0)\r\n            let _gas := calldataload(32)\r\n            let _value := calldataload(64)\r\n            let _len : = sub(calldatasize, 96)\r\n            calldatacopy(0, 96, _len)\r\n\r\n            let ret := call(_gas, _dst, _value, 0, _len, 0, 0)\r\n            let result_len := returndatasize()\r\n            mstore8(0, ret)\r\n            returndatacopy(1, 0, result_len)\r\n            revert(0, add(result_len, 1))\r\n        }\r\n    }\r\n}","ABI":"[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"StaticCallProxy","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://c079315258cd4df513060de177fbe9d28128dcc8926a77c5b7dc20892f8f4237"}]}