{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.8.0;\r\n// SPDX-License-Identifier: MIT\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract vesting {\r\n\r\n    struct claimer{\r\n        uint256 total;\r\n        uint256 timestamp;\r\n        uint256 rate;\r\n    }\r\n\r\n    mapping(address => claimer) claimers;\r\n    address owner;\r\n    IERC20 token;\r\n\r\n    constructor(address _token){\r\n        owner = msg.sender;\r\n        token = IERC20(_token);\r\n    }\r\n\r\n    function claim_balance() public {\r\n        require(claimers[msg.sender].total > 0, \"0 balance\");\r\n        require(claimers[msg.sender].timestamp <= block.timestamp, \"time not met yet\");\r\n\r\n        claimers[msg.sender].total -= claimers[msg.sender].rate;\r\n        claimers[msg.sender].timestamp += 1 weeks;\r\n        token.transfer(msg.sender, claimers[msg.sender].rate);\r\n    }\r\n\r\n    function set_payout(uint256 amount, address _wallet, uint256 _rate) public{\r\n        require(msg.sender == owner, \"only owner\");\r\n        claimers[_wallet] = claimer(amount, block.timestamp + 1 weeks, _rate);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"claim_balance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"set_payout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"vesting","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000009196e18bc349b1f64bc08784eae259525329a1ad","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://52e34665d6b6143ecf6be984fd46ff5b7f2958df5c43fcdd35b34c169863eb07"}]}