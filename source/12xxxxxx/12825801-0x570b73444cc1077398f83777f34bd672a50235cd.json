{"status":"1","message":"OK","result":[{"SourceCode":"pragma abicoder v2;\r\npragma solidity ^0.7.0;\r\n\r\ncontract BulkTokenMetadataV2 {\r\n  struct Token {\r\n    address token_address;\r\n    uint totalSupply;\r\n    uint decimals;\r\n    string symbol;\r\n    string name;\r\n  }\r\n  struct TotalSupply {\r\n    address token_address;\r\n    uint totalSupply;\r\n  }\r\n  struct Decimals {\r\n    address token_address;\r\n    uint decimals;\r\n  }\r\n  struct Symbol {\r\n    address token_address;\r\n    string symbol;\r\n  }\r\n  struct Name {\r\n    address token_address;\r\n    string name;\r\n  }\r\n\r\n  function getTokens(address[] calldata tokenAddresses) external view returns (Token[] memory tokens) {\r\n    tokens = new Token[](tokenAddresses.length);\r\n    \r\n    for(uint i = 0; i < tokenAddresses.length; i++) {\r\n      if(isAContract(tokenAddresses[i])) {\r\n        try this.getTokenInfo(tokenAddresses[i]) returns (Token memory token) {\r\n          tokens[i] = token;\r\n        } catch {\r\n          tokens[i] = Token(address(0), 0, 0, \"\", \"\");  \r\n        }\r\n      } else {\r\n        tokens[i] = Token(address(0), 0, 0, \"\", \"\");   \r\n      }\r\n    }\r\n    return tokens;\r\n  }\r\n  \r\n  function getTokensTotalSupply(address[] calldata tokenAddresses) external view returns (TotalSupply[] memory tokens) {\r\n    tokens = new TotalSupply[](tokenAddresses.length);\r\n    \r\n    for(uint i = 0; i < tokenAddresses.length; i++) {\r\n      if(isAContract(tokenAddresses[i])) {\r\n        try this.getTokenTotalSupply(tokenAddresses[i]) returns (TotalSupply memory token) {\r\n          tokens[i] = token;\r\n        } catch {\r\n          tokens[i] = TotalSupply(address(0), 0);  \r\n        }\r\n      } else {\r\n        tokens[i] = TotalSupply(address(0), 0);   \r\n      }\r\n    }\r\n    return tokens;\r\n  }\r\n  \r\n  function getTokensDecimals(address[] calldata tokenAddresses) external view returns (Decimals[] memory tokens) {\r\n    tokens = new Decimals[](tokenAddresses.length);\r\n    \r\n    for(uint i = 0; i < tokenAddresses.length; i++) {\r\n      if(isAContract(tokenAddresses[i])) {\r\n        try this.getTokenDecimals(tokenAddresses[i]) returns (Decimals memory token) {\r\n          tokens[i] = token;\r\n        } catch {\r\n          tokens[i] = Decimals(address(0), 0);  \r\n        }\r\n      } else {\r\n        tokens[i] = Decimals(address(0), 0);   \r\n      }\r\n    }\r\n    return tokens;\r\n  }\r\n  \r\n  function getTokensSymbol(address[] calldata tokenAddresses) external view returns (Symbol[] memory tokens) {\r\n    tokens = new Symbol[](tokenAddresses.length);\r\n    \r\n    for(uint i = 0; i < tokenAddresses.length; i++) {\r\n      if(isAContract(tokenAddresses[i])) {\r\n        try this.getTokenSymbol(tokenAddresses[i]) returns (Symbol memory token) {\r\n          tokens[i] = token;\r\n        } catch {\r\n          tokens[i] = Symbol(address(0), \"\");  \r\n        }\r\n      } else {\r\n        tokens[i] = Symbol(address(0), \"\");   \r\n      }\r\n    }\r\n    return tokens;\r\n  }\r\n  \r\n  function getTokensName(address[] calldata tokenAddresses) external view returns (Name[] memory tokens) {\r\n    tokens = new Name[](tokenAddresses.length);\r\n    \r\n    for(uint i = 0; i < tokenAddresses.length; i++) {\r\n      if(isAContract(tokenAddresses[i])) {\r\n        try this.getTokenName(tokenAddresses[i]) returns (Name memory token) {\r\n          tokens[i] = token;\r\n        } catch {\r\n          tokens[i] = Name(address(0), \"\");  \r\n        }\r\n      } else {\r\n        tokens[i] = Name(address(0), \"\");   \r\n      }\r\n    }\r\n    return tokens;\r\n  }\r\n  \r\n  function getTokenInfo(address tokenAddress) public view returns (Token memory token) {\r\n    token = Token(tokenAddress, ERC20(tokenAddress).totalSupply(), ERC20(tokenAddress).decimals(), ERC20(tokenAddress).symbol(), ERC20(tokenAddress).name());\r\n  }\r\n  \r\n  function getTokenTotalSupply(address tokenAddress) public view returns (TotalSupply memory token) {\r\n    token = TotalSupply(tokenAddress, ERC20(tokenAddress).totalSupply());\r\n  }\r\n  \r\n  function getTokenDecimals(address tokenAddress) public view returns (Decimals memory token) {\r\n    token = Decimals(tokenAddress, ERC20(tokenAddress).decimals());\r\n  }\r\n  \r\n  function getTokenSymbol(address tokenAddress) public view returns (Symbol memory token) {\r\n    token = Symbol(tokenAddress, ERC20(tokenAddress).symbol());\r\n  }\r\n  \r\n  function getTokenName(address tokenAddress) public view returns (Name memory token) {\r\n    token = Name(tokenAddress, ERC20(tokenAddress).name());\r\n  }\r\n    \r\n  // check if contract (token, exchange) is actually a smart contract and not a 'regular' address\r\n  function isAContract(address contractAddr) internal view returns (bool) {\r\n    uint256 codeSize;\r\n    assembly { codeSize := extcodesize(contractAddr) } // contract code size\r\n    return codeSize > 0; \r\n    // Might not be 100% foolproof, but reliable enough for an early return in 'view' functions \r\n  }\r\n}\r\n\r\ninterface ERC20 {\r\n  function totalSupply() external view returns (uint supply);\r\n  function balanceOf(address _owner) external view returns (uint balance);\r\n  function allowance(address _owner, address _spender) external view returns (uint remaining);\r\n  function decimals() external view returns(uint digits);\r\n  function symbol() external view returns (string memory);\r\n  function name() external view returns (string memory);\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenDecimals\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"internalType\":\"struct BulkTokenMetadataV2.Decimals\",\"name\":\"token\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct BulkTokenMetadataV2.Token\",\"name\":\"token\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenName\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct BulkTokenMetadataV2.Name\",\"name\":\"token\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"internalType\":\"struct BulkTokenMetadataV2.Symbol\",\"name\":\"token\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenTotalSupply\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"internalType\":\"struct BulkTokenMetadataV2.TotalSupply\",\"name\":\"token\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"getTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct BulkTokenMetadataV2.Token[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"getTokensDecimals\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"internalType\":\"struct BulkTokenMetadataV2.Decimals[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"getTokensName\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct BulkTokenMetadataV2.Name[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"getTokensSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"internalType\":\"struct BulkTokenMetadataV2.Symbol[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"getTokensTotalSupply\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"internalType\":\"struct BulkTokenMetadataV2.TotalSupply[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"BulkTokenMetadataV2","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f50e5ac73e8b550635fef5d265b2b130ad1275cbf420a44986837ecfb68794b8"}]}