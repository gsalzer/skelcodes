{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2021-03-30\r\n*/\r\n\r\n/**\r\n *Submitted for verification at Etherscan.io on 2021-03-30\r\n*/\r\n\r\n/*\r\n\r\n██████╗  ██████╗ ███████╗████████╗███████╗██████╗\r\n██╔══██╗██╔═══██╗██╔════╝╚══██╔══╝██╔════╝██╔══██╗\r\n██████╔╝██║   ██║███████╗   ██║   █████╗  ██████╔╝\r\n██╔═══╝ ██║   ██║╚════██║   ██║   ██╔══╝  ██╔══██╗\r\n██║     ╚██████╔╝███████║   ██║   ███████╗██║  ██║\r\n╚═╝      ╚═════╝ ╚══════╝   ╚═╝   ╚══════╝╚═╝  ╚═╝\r\n\r\nA ridiculously simple general purpose social media smart contract.\r\nIt takes a string as a parameter and emits that string, along with a unique id, as an event. That's it.\r\n\r\nMade with ❤️ by Auryn.eth\r\n\r\n*/\r\n// SPDX-License-Identifier: LGPL-3.0-only\r\n\r\npragma solidity 0.8.0;\r\n\r\n\r\ncontract Poster {\r\n    event NewPost(bytes32 indexed id, address indexed user, string content);\r\n\r\n    function post(string memory content) public {\r\n        bytes32 id = keccak256(abi.encodePacked(msg.sender, block.chainid, block.number, gasleft()));\r\n        emit NewPost(id, msg.sender, content);\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"name\":\"NewPost\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"name\":\"post\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Poster","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU LGPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://4a1471d7f62161d5b65c83000a6fc18b1cd581784ea4018de0ecbbf0b2a4f6aa"}]}