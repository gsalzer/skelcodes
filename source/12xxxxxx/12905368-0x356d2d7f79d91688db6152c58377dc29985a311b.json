{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2021-07-27\r\n */\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.12;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface IEnsRegistry {\r\n  function resolver(bytes32 node) external view returns (address);\r\n}\r\n\r\ninterface IEnsResolver {\r\n  function addr(bytes32 node) external view returns (address);\r\n}\r\n\r\ninterface IOracle {\r\n  function latestAnswer() external view returns (uint256);\r\n}\r\n\r\ncontract CalculationsChainlink {\r\n  address public ownerAddress;\r\n  address public ensRegistryAddress =\r\n    0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e;\r\n  address[] internal _supportedTokensAddresses;\r\n  mapping(address => bytes32) public oracleNamehashes;\r\n\r\n  constructor() public {\r\n    ownerAddress = msg.sender;\r\n  }\r\n\r\n  struct Namehash {\r\n    address tokenAddress;\r\n    bytes32 namehash;\r\n  }\r\n\r\n  function setNamehash(address tokenAddress, bytes32 namehash) public {\r\n    require(msg.sender == ownerAddress, \"Ownable: Admin only\");\r\n    _supportedTokensAddresses.push(tokenAddress);\r\n    oracleNamehashes[tokenAddress] = namehash;\r\n  }\r\n\r\n  function setNamehashes(Namehash[] memory namehashes) public {\r\n    require(msg.sender == ownerAddress, \"Ownable: Admin only\");\r\n    for (uint256 i = 0; i < namehashes.length; i++) {\r\n      setNamehash(namehashes[i].tokenAddress, namehashes[i].namehash);\r\n    }\r\n  }\r\n\r\n  function supportedTokensAddresses() external view returns (address[] memory) {\r\n    return _supportedTokensAddresses;\r\n  }\r\n\r\n  function resolveEnsNamehash(bytes32 node) public view returns (address) {\r\n    return\r\n      IEnsResolver(IEnsRegistry(ensRegistryAddress).resolver(node)).addr(node);\r\n  }\r\n\r\n  function getPriceUsdc(address tokenAddress) public view returns (uint256) {\r\n    bytes32 namehash = oracleNamehashes[tokenAddress];\r\n    address resolverAddress = resolveEnsNamehash(namehash);\r\n    return IOracle(resolverAddress).latestAnswer() / 10**2;\r\n  }\r\n\r\n  function getPricesUsdc(address[] memory tokensAddresses)\r\n    external\r\n    view\r\n    returns (uint256[] memory)\r\n  {\r\n    uint256[] memory _pricesUsdc = new uint256[](tokensAddresses.length);\r\n    for (uint256 tokenIdx; tokenIdx < tokensAddresses.length; tokenIdx++) {\r\n      uint256 price = getPriceUsdc(tokensAddresses[tokenIdx]);\r\n      _pricesUsdc[tokenIdx] = price;\r\n    }\r\n    return _pricesUsdc;\r\n  }\r\n\r\n  /**\r\n   * Allow storage slots to be manually updated\r\n   */\r\n  function updateSlot(bytes32 slot, bytes32 value) external {\r\n    require(msg.sender == ownerAddress, \"Ownable: Admin only\");\r\n    assembly {\r\n      sstore(slot, value)\r\n    }\r\n  }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ensRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getPriceUsdc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokensAddresses\",\"type\":\"address[]\"}],\"name\":\"getPricesUsdc\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracleNamehashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"resolveEnsNamehash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"namehash\",\"type\":\"bytes32\"}],\"name\":\"setNamehash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"namehash\",\"type\":\"bytes32\"}],\"internalType\":\"struct CalculationsChainlink.Namehash[]\",\"name\":\"namehashes\",\"type\":\"tuple[]\"}],\"name\":\"setNamehashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supportedTokensAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"updateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"CalculationsChainlink","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://83565d66718ad80a46946fb3f98ced94fce7f4d9b748e88b37239290931c001f"}]}