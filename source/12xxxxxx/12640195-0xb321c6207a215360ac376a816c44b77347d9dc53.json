{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.6;\r\n\r\n// A modification of OpenZeppelin ERC20\r\n// Original can be found here: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\r\n\r\n// Very slow erc20 implementation. Limits release of the funds with emission rate in _beforeTokenTransfer().\r\n// Even if there will be a vulnerability in upgradeable contracts defined in _beforeTokenTransfer(), it won't be devastating.\r\n// Developers can't simply rug.\r\n\r\ninterface I{function genesisBlock() external view returns(uint);}\r\n\r\ncontract VSRERC {\r\n\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n//\tevent BulkTransfer(address indexed from, address[] indexed recipients, uint[] amounts);\r\n//\tevent BulkTransferFrom(address[] indexed senders, uint[] amounts, address indexed recipient);\r\n\r\n\tmapping (address => mapping (address => bool)) private _allowances;\r\n\tmapping (address => uint) private _balances;\r\n\r\n\tstring private _name;\r\n\tstring private _symbol;\r\n//\taddress private _bridge;\r\n\tbool private _init;\r\n//\tbool private _bridgeDefined;\r\n\r\n\tfunction init() public {\r\n\t\trequire(_init == false);\r\n\t\t_init = true;\r\n\t\t_name = \"Aletheo\";\r\n\t\t_symbol = \"LET\";\r\n\t\t_balances[0x31A188024FcD6E462aBF157F879Fb7da37D6AB2f] = 1e24;//founding event\r\n\t\t_balances[0x05658a207a56AA2d6b2821883D373f59Ac6A2fC3] = 896e22;//treasury\r\n\t\t_balances[0x5C8403A2617aca5C86946E32E14148776E37f72A] = 4e22;//reserved for airdrop\r\n\t}\r\n//\tfunction defineBridge(address b) public {require(msg.sender == 0x2D9F853F1a71D0635E64FcC4779269A05BccE2E2 && _bridgeDefined == false);_bridgeDefined == true; _bridge = b;_balances[b] = 10e24;}\r\n\tfunction name() public view returns (string memory) {return _name;}\r\n\tfunction symbol() public view returns (string memory) {return _symbol;}\r\n\tfunction totalSupply() public view returns (uint) {return 10e24;}\r\n\tfunction decimals() public pure returns (uint) {return 18;}\r\n\tfunction balanceOf(address a) public view returns (uint) {return _balances[a];}\r\n\tfunction transfer(address recipient, uint amount) public returns (bool) {_transfer(msg.sender, recipient, amount);return true;}\r\n\tfunction disallow(address spender) public returns (bool) {delete _allowances[msg.sender][spender];emit Approval(msg.sender, spender, 0);return true;}\r\n\r\n\tfunction approve(address spender, uint amount) public returns (bool) { // hardcoded mainnet uniswapv2 router 02, transfer helper library\r\n\t\tif (spender == 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D) {emit Approval(msg.sender, spender, 2**256 - 1);return true;}\r\n\t\telse {_allowances[msg.sender][spender] = true;emit Approval(msg.sender, spender, 2**256 - 1);return true;}\r\n\t}\r\n\r\n\tfunction allowance(address owner, address spender) public view returns (uint) { // hardcoded mainnet uniswapv2 router 02, transfer helper library\r\n\t\tif (spender == 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D||_allowances[owner][spender] == true) {return 2**256 - 1;} else {return 0;}\r\n\t}\r\n\r\n\tfunction transferFrom(address sender, address recipient, uint amount) public returns (bool) { // hardcoded mainnet uniswapv2 router 02, transfer helper library\r\n\t\trequire(msg.sender == 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D || _allowances[sender][msg.sender] == true);_transfer(sender, recipient, amount);return true;\r\n\t}\r\n\r\n\tfunction _transfer(address sender, address recipient, uint amount) internal {\r\n\t\trequire(sender != address(0));\r\n\t\t_beforeTokenTransfer(sender, amount);\r\n\t\tuint senderBalance = _balances[sender];\r\n\t\trequire(senderBalance >= amount);\r\n\t\t_balances[sender] = senderBalance - amount;\r\n\t\t_balances[recipient] += amount;\r\n\t\temit Transfer(sender, recipient, amount);\r\n\t}\r\n\r\n\t/*function bulkTransfer(address[] memory recipients, uint[] memory amounts) public returns (bool) { // will be used by the contract, or anybody who wants to use it\r\n\t\trequire(recipients.length == amounts.length && amounts.length < 100,\"human error\");\r\n\t\tuint senderBalance = _balances[msg.sender];\r\n\t\tuint total;\r\n\t\tfor(uint i = 0;i<amounts.length;i++) {total += amounts[i];_balances[recipients[i]] += amounts[i];}\r\n\t\trequire(senderBalance >= total);\r\n\t\tif (msg.sender == 0x05658a207a56AA2d6b2821883D373f59Ac6A2fC3) {_beforeTokenTransfer(msg.sender, total);}\r\n\t\t_balances[msg.sender] = senderBalance - total;\r\n\t\temit BulkTransfer(msg.sender, recipients, amounts);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction bulkTransferFrom(address[] memory senders, address recipient, uint[] memory amounts) public returns (bool) {\r\n\t\trequire(senders.length == amounts.length && amounts.length < 100,\"human error\");\r\n\t\tuint total;\r\n\t\tuint senderBalance;\r\n\t\tfor (uint i = 0;i<amounts.length;i++) {\r\n\t\t\tsenderBalance = _balances[senders[i]];\r\n\t\t\tif (senderBalance >= amounts[i] && _allowances[senders[i]][msg.sender]== true){total+= amounts[i];_balances[senders[i]] = senderBalance - amounts[i];}\r\n\t\t\telse {delete senders[i];delete amounts[i];}\r\n\t\t}\r\n\t\t_balances[msg.sender] += total;\r\n\t\temit BulkTransferFrom(senders, amounts, recipient);\r\n\t\treturn true;\r\n\t}*/\r\n\r\n\tfunction _beforeTokenTransfer(address from, uint amount) internal view {\r\n\t\tif(from == 0x05658a207a56AA2d6b2821883D373f59Ac6A2fC3) {\r\n\t\t\tuint genesisBlock = I(0x31A188024FcD6E462aBF157F879Fb7da37D6AB2f).genesisBlock();\r\n\t\t\trequire(genesisBlock != 0);\r\n\t\t\tuint treasury = _balances[0x05658a207a56AA2d6b2821883D373f59Ac6A2fC3]; \r\n\t\t\tuint withd =  9e24 - treasury; \r\n\t\t\tuint allowed = (block.number - genesisBlock)*42e16 - withd;\r\n\t\t\trequire(amount <= allowed && amount <= treasury);\r\n\t\t}\r\n\t}\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"disallow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"VSRERC","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://59dfed92d3646b0eae75ab89a79cb31b9dc4a87536f4fae9b7a3aaff27571ba6"}]}