{"status":"1","message":"OK","result":[{"SourceCode":"/***\r\n* Shoutouts:\r\n*\r\n* Bytecode origin https://www.reddit.com/r/ethereum/comments/6ic49q/any_assembly_programmers_willing_to_write_a/dj5ceuw/\r\n* Modified version of Vitalik's https://www.reddit.com/r/ethereum/comments/6c1jui/delegatecall_forwarders_how_to_save_5098_on/\r\n* Credits to Jorge Izquierdo (@izqui) for coming up with this design here: https://gist.github.com/izqui/7f904443e6d19c1ab52ec7f5ad46b3a8\r\n* Credits to Stefan George (@Georgi87) for inspiration for many of the improvements from Gnosis Safe: https://github.com/gnosis/gnosis-safe-contracts\r\n*\r\n* This version has many improvements over the original @izqui's library like using REVERT instead of THROWing on failed calls.\r\n* It also implements the awesome design pattern for initializing code as seen in Gnosis Safe Factory: https://github.com/gnosis/gnosis-safe-contracts/blob/master/contracts/ProxyFactory.sol\r\n* but unlike this last one it doesn't require that you waste storage on both the proxy and the proxied contracts (v. https://github.com/gnosis/gnosis-safe-contracts/blob/master/contracts/Proxy.sol#L8 & https://github.com/gnosis/gnosis-safe-contracts/blob/master/contracts/GnosisSafe.sol#L14)\r\n*\r\n*\r\n* v0.0.2\r\n* The proxy is now only 60 bytes long in total. Constructor included.\r\n* No functionalities were added. The change was just to make the proxy leaner.\r\n*\r\n* v0.0.3\r\n* Thanks @dacarley for noticing the incorrect check for the subsequent call to the proxy. ðŸ™Œ\r\n* Note: I'm creating a new version of this that doesn't need that one call.\r\n*       Will add tests and put this in its own repository soonâ„¢.\r\n*\r\n* v0.0.4\r\n* All the merit in this fix + update of the factory is @dacarley 's. ðŸ™Œ\r\n* Thank you! ðŸ˜„\r\n*\r\n* Potential updates can be found at https://gist.github.com/GNSPS/ba7b88565c947cfd781d44cf469c2ddb\r\n*\r\n***/\r\n\r\npragma solidity ^0.4.18;\r\n\r\n/**\r\n * @title Proxy\r\n * @dev Gives the possibility to delegate any call to a foreign implementation.\r\n */\r\ncontract Proxy {\r\n  address public implementation;\r\n  constructor(address _implementation) {\r\n    implementation = _implementation;\r\n  }\r\n\r\n  /**\r\n  * @dev Fallback function allowing to perform a delegatecall to the given implementation.\r\n  * This function will return whatever the implementation call returns\r\n  */\r\n  function () payable public {\r\n    address _impl = implementation;\r\n    require(_impl != address(0));\r\n\r\n    assembly {\r\n      let ptr := mload(0x40)\r\n      calldatacopy(ptr, 0, calldatasize)\r\n      let result := delegatecall(gas, _impl, ptr, calldatasize, 0, 0)\r\n      let size := returndatasize\r\n      returndatacopy(ptr, 0, size)\r\n\r\n      switch result\r\n      case 0 { revert(ptr, size) }\r\n      default { return(ptr, size) }\r\n    }\r\n  }\r\n}\r\npragma solidity ^0.4.19;\r\n\r\n\r\ninterface IDoneth {\r\n  function init() public;\r\n}\r\n\r\n/* solhint-disable no-inline-assembly, indent, state-visibility, avoid-low-level-calls */\r\n\r\ncontract ProxyFactory {\r\n\r\n    address public target;\r\n    function ProxyFactory() public {}\r\n\r\n    event ProxyDeployed(address proxyAddress, address targetAddress);\r\n\r\n    function createProxy(address _target)\r\n        public\r\n        payable\r\n        returns (address proxyContract)\r\n    {\r\n        Proxy prox = new Proxy(_target);\r\n        IDoneth(address(prox)).init();\r\n        ProxyDeployed(address(prox), _target);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"createProxy\",\"outputs\":[{\"name\":\"proxyContract\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"targetAddress\",\"type\":\"address\"}],\"name\":\"ProxyDeployed\",\"type\":\"event\"}]","ContractName":"ProxyFactory","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://7243cb076dd8306b9e65f393af1510416ba0cae3573bb5ebe258704c22049700"}]}