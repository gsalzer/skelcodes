{"status":"1","message":"OK","result":[{"SourceCode":"// Copyright (C) 2020 Centrifuge\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\npragma solidity >=0.5.15 <0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface SpellTinlakeRootLike {\r\n    function relyContract(address, address) external;\r\n}\r\n\r\ninterface SpellMemberlistLike {\r\n    function updateMember(address, uint) external;\r\n}\r\n\r\ninterface SpellReserveLike {\r\n    function payout(uint currencyAmount) external;\r\n}\r\n\r\ninterface DependLike {\r\n    function depend(bytes32, address) external;\r\n}\r\n\r\ninterface FileLike {\r\n    function file(bytes32, uint) external;\r\n    function file(bytes32, address) external;\r\n}\r\n\r\ninterface AuthLike {\r\n    function rely(address) external;\r\n    function deny(address) external;\r\n}\r\n\r\ninterface MigrationLike {\r\n    function migrate(address) external;\r\n}\r\n\r\ninterface TrancheLike {\r\n    function totalSupply() external returns(uint);\r\n    function totalRedeem() external returns(uint);\r\n}\r\n\r\ninterface PoolAdminLike {\r\n    function relyAdmin(address) external;\r\n}\r\n\r\ninterface MgrLike {\r\n    function lock(uint) external;\r\n}\r\n\r\ninterface SpellERC20Like {\r\n    function balanceOf(address) external view returns (uint256);\r\n    function transferFrom(address, address, uint) external returns (bool);\r\n    function approve(address, uint) external;\r\n}\r\n\r\n// spell for: ns2 migration to rev pool with maker support\r\n// - migrate state & swap contracts: assessor, reserve, coordinator\r\n// - add & wire mkr adapter contracts: clerk & mgr, spotter, vat\r\ncontract TinlakeSpell {\r\n\r\n    bool public done;\r\n    string constant public description = \"Tinlake NS2 migration mainnet Spell\";\r\n\r\n    address constant public ROOT = 0x53b2d22d07E069a3b132BfeaaD275b10273d381E;\r\n    address constant public SHELF = 0x7d057A056939bb96D682336683C10EC89b78D7CE;\r\n    address constant public COLLECTOR = 0x62f290512c690a817f47D2a4a544A5d48D1408BE;\r\n    address constant public SENIOR_TOKEN = 0xE4C72b4dE5b0F9ACcEA880Ad0b1F944F85A9dAA0;\r\n    address constant public SENIOR_MEMBERLIST = 0x5B5CFD6E45F1407ABCb4BFD9947aBea1EA6649dA;\r\n    address constant public SENIOR_OPERATOR = 0x230f2E19D6c2Dc0c441c2150D4dD9d67B563A60C;\r\n    address constant public JUNIOR_TRANCHE = 0x7cD2a6Be6ca8fEB02aeAF08b7F350d7248dA7707;\r\n    address constant public JUNIOR_MEMBERLIST = 0x42C2483EEE8c1Fe46C398Ac296C59674F9eb88CD;\r\n    address constant public POOL_ADMIN = 0x6A82DdF0DF710fACD0414B37606dC9Db05a4F752;\r\n    address constant public NAV = 0x41fAD1Eb242De19dA0206B0468763333BB6C2B3D;\r\n    address constant public SENIOR_TRANCHE_OLD = 0xfB30B47c47E2fAB74ca5b0c1561C2909b280c4E5;\r\n    address constant public ASSESSOR_OLD = 0xdA0bA5Dd06C8BaeC53Fa8ae25Ad4f19088D6375b;\r\n    address constant public COORDINATOR_OLD = 0xFE860d06fF2a3A485922A6a029DFc1CD8A335288;\r\n    address constant public RESERVE_OLD = 0x30FDE788c346aBDdb564110293B20A13cF1464B6;\r\n\r\n    address constant public TINLAKE_CURRENCY = 0x6B175474E89094C44Da98b954EedeAC495271d0F; // DAI\r\n\r\n    // new contracts -> to be migrated\r\n    address constant public COORDINATOR_NEW = 0xcC7AFB5DeED34CF67E72d4C53B142F44c9268ab9;\r\n    address constant public ASSESSOR_NEW  = 0x83E2369A33104120746B589Cc90180ed776fFb91;\r\n    address constant public RESERVE_NEW = 0xD9E4391cF31638a8Da718Ff0Bf69249Cdc48fB2B;\r\n    address constant public SENIOR_TRANCHE_NEW = 0x636214f455480D19F17FE1aa45B9989C86041767;\r\n\r\n    // adapter contracts -> to be integrated\r\n    address constant public CLERK = 0xA9eCF012dD36512e5fFCD5585D72386E46135Cdd;\r\n    address constant public MGR =  0x2474F297214E5d96Ba4C81986A9F0e5C260f445D;\r\n    // https://changelog.makerdao.com/releases/mainnet/1.3.0/index.html\r\n    address constant public SPOTTER = 0x65C79fcB50Ca1594B025960e539eD7A9a6D434A3;\r\n    address constant public VAT = 0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B;\r\n    address constant public JUG = 0x19c0976f590D67707E62397C87829d896Dc0f1F1;\r\n    // rwa contracts\r\n    address constant public URN = 0x225B3da5BE762Ee52B182157E67BeA0b31968163;\r\n    address constant public LIQ = 0x88f88Bb9E66241B73B84f3A6E197FbBa487b1E30;\r\n    address constant public END = 0xBB856d1742fD182a90239D7AE85706C2FE4e5922;\r\n    address constant public RWA_GEM = 0xAAA760c2027817169D7C8DB0DC61A2fb4c19AC23;\r\n\r\n    // Todo: add correct addresses\r\n    address constant public ADMIN1 = address(0x71d9f8CFdcCEF71B59DD81AB387e523E2834F2b8);\r\n    address constant public ADMIN2 = address(0x9eDec77dd2651Ce062ab17e941347018AD4eAEA9);\r\n\r\n    uint constant public ASSESSOR_MIN_SENIOR_RATIO = 0;\r\n    uint constant public MAT_BUFFER = 0.01 * 10**27;\r\n    address self;\r\n\r\n    // permissions to be set\r\n    function cast() public {\r\n        require(!done, \"spell-already-cast\");\r\n        done = true;\r\n        execute();\r\n    }\r\n\r\n    function execute() internal {\r\n        SpellTinlakeRootLike root = SpellTinlakeRootLike(ROOT);\r\n        self = address(this);\r\n        // set spell as ward on the core contract to be able to wire the new contracts correctly\r\n        root.relyContract(SHELF, self);\r\n        root.relyContract(COLLECTOR, self);\r\n        root.relyContract(JUNIOR_TRANCHE, self);\r\n        root.relyContract(SENIOR_OPERATOR, self);\r\n        root.relyContract(SENIOR_TRANCHE_OLD, self);\r\n        root.relyContract(SENIOR_TOKEN, self);\r\n        root.relyContract(SENIOR_TRANCHE_NEW, self);\r\n        root.relyContract(SENIOR_MEMBERLIST, self);\r\n        root.relyContract(JUNIOR_MEMBERLIST, self);\r\n        root.relyContract(CLERK, self);\r\n        root.relyContract(POOL_ADMIN, self);\r\n        root.relyContract(ASSESSOR_NEW, self);\r\n        root.relyContract(COORDINATOR_NEW, self);\r\n        root.relyContract(RESERVE_OLD, self);\r\n        root.relyContract(RESERVE_NEW, self);\r\n        root.relyContract(MGR, self);\r\n\r\n        // contract migration --> assumption: root contract is already ward on the new contracts\r\n        migrateAssessor();\r\n        migrateCoordinator();\r\n        migrateReserve();\r\n        migrateTranche();\r\n        integrateAdapter();\r\n        setupPoolAdmin();\r\n\r\n        // for mkr integration: set minSeniorRatio in Assessor to 0\r\n        FileLike(ASSESSOR_NEW).file(\"minSeniorRatio\", ASSESSOR_MIN_SENIOR_RATIO);\r\n    }\r\n\r\n    function migrateAssessor() internal {\r\n        MigrationLike(ASSESSOR_NEW).migrate(ASSESSOR_OLD);\r\n        // migrate dependencies\r\n        DependLike(ASSESSOR_NEW).depend(\"navFeed\", NAV);\r\n        DependLike(ASSESSOR_NEW).depend(\"juniorTranche\", JUNIOR_TRANCHE);\r\n        DependLike(ASSESSOR_NEW).depend(\"seniorTranche\", SENIOR_TRANCHE_NEW);\r\n        DependLike(ASSESSOR_NEW).depend(\"reserve\", RESERVE_NEW);\r\n        DependLike(ASSESSOR_NEW).depend(\"clerk\", CLERK);\r\n        // migrate permissions\r\n        AuthLike(ASSESSOR_NEW).rely(COORDINATOR_NEW);\r\n        AuthLike(ASSESSOR_NEW).rely(RESERVE_NEW);\r\n    }\r\n\r\n    function migrateCoordinator() internal {\r\n        MigrationLike(COORDINATOR_NEW).migrate(COORDINATOR_OLD);\r\n         // migrate dependencies\r\n        DependLike(COORDINATOR_NEW).depend(\"assessor\", ASSESSOR_NEW);\r\n        DependLike(COORDINATOR_NEW).depend(\"juniorTranche\", JUNIOR_TRANCHE);\r\n        DependLike(COORDINATOR_NEW).depend(\"seniorTranche\", SENIOR_TRANCHE_NEW);\r\n        DependLike(COORDINATOR_NEW).depend(\"reserve\", RESERVE_NEW);\r\n\r\n        DependLike(JUNIOR_TRANCHE).depend(\"epochTicker\", COORDINATOR_NEW);\r\n\r\n        // migrate permissions\r\n        AuthLike(JUNIOR_TRANCHE).rely(COORDINATOR_NEW);\r\n        AuthLike(JUNIOR_TRANCHE).deny(COORDINATOR_OLD);\r\n        AuthLike(SENIOR_TRANCHE_NEW).rely(COORDINATOR_NEW);\r\n    }\r\n\r\n    function migrateReserve() internal {\r\n        MigrationLike(RESERVE_NEW).migrate(RESERVE_OLD);\r\n        // migrate dependencies\r\n        DependLike(RESERVE_NEW).depend(\"assessor\", ASSESSOR_NEW);\r\n        DependLike(RESERVE_NEW).depend(\"currency\", TINLAKE_CURRENCY);\r\n        DependLike(RESERVE_NEW).depend(\"shelf\", SHELF);\r\n        DependLike(RESERVE_NEW).depend(\"lending\", CLERK);\r\n        DependLike(RESERVE_NEW).depend(\"pot\", RESERVE_NEW);\r\n\r\n        DependLike(SHELF).depend(\"distributor\", RESERVE_NEW);\r\n        DependLike(SHELF).depend(\"lender\", RESERVE_NEW);\r\n        DependLike(COLLECTOR).depend(\"distributor\", RESERVE_NEW);\r\n        DependLike(JUNIOR_TRANCHE).depend(\"reserve\", RESERVE_NEW);\r\n        // migrate permissions\r\n        AuthLike(RESERVE_NEW).rely(JUNIOR_TRANCHE);\r\n        AuthLike(RESERVE_NEW).rely(SENIOR_TRANCHE_NEW);\r\n        AuthLike(RESERVE_NEW).rely(ASSESSOR_NEW);\r\n\r\n        // migrate reserve balance\r\n        SpellERC20Like currency = SpellERC20Like(TINLAKE_CURRENCY);\r\n        uint balanceReserve = currency.balanceOf(RESERVE_OLD);\r\n        SpellReserveLike(RESERVE_OLD).payout(balanceReserve);\r\n        currency.transferFrom(self, RESERVE_NEW, balanceReserve);\r\n    }\r\n\r\n    function migrateTranche() internal {\r\n        TrancheLike tranche = TrancheLike(SENIOR_TRANCHE_NEW);\r\n        require((tranche.totalSupply() == 0 && tranche.totalRedeem() == 0), \"tranche-has-orders\");\r\n        DependLike(SENIOR_TRANCHE_NEW).depend(\"reserve\", RESERVE_NEW);\r\n        DependLike(SENIOR_TRANCHE_NEW).depend(\"epochTicker\", COORDINATOR_NEW);\r\n        DependLike(SENIOR_OPERATOR).depend(\"tranche\", SENIOR_TRANCHE_NEW);\r\n\r\n        AuthLike(SENIOR_TOKEN).deny(SENIOR_TRANCHE_OLD);\r\n        AuthLike(SENIOR_TOKEN).rely(SENIOR_TRANCHE_NEW);\r\n        AuthLike(SENIOR_TRANCHE_NEW).rely(SENIOR_OPERATOR);\r\n    }\r\n\r\n    function integrateAdapter() internal {\r\n        require(SpellERC20Like(RWA_GEM).balanceOf(MGR) == 1 ether);\r\n        // dependencies\r\n        DependLike(CLERK).depend(\"assessor\", ASSESSOR_NEW);\r\n        DependLike(CLERK).depend(\"mgr\", MGR);\r\n        DependLike(CLERK).depend(\"coordinator\", COORDINATOR_NEW);\r\n        DependLike(CLERK).depend(\"reserve\", RESERVE_NEW);\r\n        DependLike(CLERK).depend(\"tranche\", SENIOR_TRANCHE_NEW);\r\n        DependLike(CLERK).depend(\"collateral\", SENIOR_TOKEN);\r\n        DependLike(CLERK).depend(\"spotter\", SPOTTER);\r\n        DependLike(CLERK).depend(\"vat\", VAT);\r\n        DependLike(CLERK).depend(\"jug\", JUG);\r\n\r\n        FileLike(CLERK).file(\"buffer\", MAT_BUFFER);\r\n\r\n        // permissions\r\n        AuthLike(CLERK).rely(COORDINATOR_NEW);\r\n        AuthLike(CLERK).rely(RESERVE_NEW);\r\n        AuthLike(SENIOR_TRANCHE_NEW).rely(CLERK);\r\n        AuthLike(RESERVE_NEW).rely(CLERK);\r\n        AuthLike(ASSESSOR_NEW).rely(CLERK);\r\n\r\n        // currency\r\n        SpellMemberlistLike(SENIOR_MEMBERLIST).updateMember(CLERK, uint(-1));\r\n        SpellMemberlistLike(SENIOR_MEMBERLIST).updateMember(MGR, uint(-1));\r\n\r\n        // setup mgr\r\n        AuthLike(MGR).rely(CLERK);\r\n        FileLike(MGR).file(\"urn\", URN);\r\n        FileLike(MGR).file(\"liq\", LIQ);\r\n        FileLike(MGR).file(\"end\", END);\r\n        FileLike(MGR).file(\"owner\", CLERK);\r\n        FileLike(MGR).file(\"pool\", SENIOR_OPERATOR);\r\n        FileLike(MGR).file(\"tranche\", SENIOR_TRANCHE_NEW);\r\n\r\n        // lock token\r\n        MgrLike(MGR).lock(1 ether);\r\n    }\r\n\r\n    function setupPoolAdmin() public {\r\n        PoolAdminLike poolAdmin = PoolAdminLike(POOL_ADMIN);\r\n        AuthLike(POOL_ADMIN).rely(ADMIN1);\r\n\r\n        // setup dependencies\r\n        DependLike(POOL_ADMIN).depend(\"assessor\", ASSESSOR_NEW);\r\n        DependLike(POOL_ADMIN).depend(\"lending\", CLERK);\r\n        DependLike(POOL_ADMIN).depend(\"seniorMemberlist\", SENIOR_MEMBERLIST);\r\n        DependLike(POOL_ADMIN).depend(\"juniorMemberlist\", JUNIOR_MEMBERLIST);\r\n\r\n        // setup permissions\r\n        AuthLike(ASSESSOR_NEW).rely(POOL_ADMIN);\r\n        AuthLike(CLERK).rely(POOL_ADMIN);\r\n        AuthLike(JUNIOR_MEMBERLIST).rely(POOL_ADMIN);\r\n        AuthLike(SENIOR_MEMBERLIST).rely(POOL_ADMIN);\r\n\r\n        //setup admins\r\n        poolAdmin.relyAdmin(ADMIN1);\r\n        poolAdmin.relyAdmin(ADMIN2);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ASSESSOR_MIN_SENIOR_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ASSESSOR_NEW\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ASSESSOR_OLD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CLERK\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COLLECTOR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COORDINATOR_NEW\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COORDINATOR_OLD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"END\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JUG\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JUNIOR_MEMBERLIST\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JUNIOR_TRANCHE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LIQ\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAT_BUFFER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MGR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NAV\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"POOL_ADMIN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RESERVE_NEW\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RESERVE_OLD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ROOT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RWA_GEM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SENIOR_MEMBERLIST\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SENIOR_OPERATOR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SENIOR_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SENIOR_TRANCHE_NEW\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SENIOR_TRANCHE_OLD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SHELF\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SPOTTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TINLAKE_CURRENCY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"URN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VAT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cast\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"done\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setupPoolAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TinlakeSpell","CompilerVersion":"v0.5.15+commit.6a57276f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unknown","Proxy":"0","Implementation":"","SwarmSource":"bzzr://ca87b77cc94b67ffd48816d46c1854865c09525a8f4795640b003c37f81c4b02"}]}