{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.7.6;\r\n\r\n/**\r\n * @notice A sample upkeep contract that emits event at regular intervals\r\n */\r\n\r\ncontract TimedUpKeep {\r\n  uint public lastBlockServiced; \r\n  uint public blocksInterval = 50;\r\n  \r\n  event timedAlarm(uint);\r\n\r\n  function checkUpkeep(bytes calldata data) external view returns (bool, bytes memory) {\r\n    \r\n    //check if set number of blocks have passed\r\n    bool shouldPerformUpkeep = (block.number-lastBlockServiced) > blocksInterval;\r\n    \r\n    return (shouldPerformUpkeep, \"\");\r\n  }\r\n  \r\n\r\n  function performUpkeep(bytes calldata data) external {\r\n       \r\n      lastBlockServiced = block.number;\r\n      emit timedAlarm(lastBlockServiced);\r\n      //do something useful here\r\n  }\r\n  \r\n function debugVars() external view returns (uint,uint,uint){\r\n      \r\n      return(lastBlockServiced,blocksInterval,block.number);\r\n  }\r\n  \r\n  function comingAfter() external view returns (uint)\r\n  {\r\n      return blocksInterval-(block.number-lastBlockServiced);\r\n  }\r\n  \r\n    function setBlocksInterval(uint interval) public {\r\n    blocksInterval = interval;\r\n  }\r\n  \r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"timedAlarm\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"blocksInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comingAfter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debugVars\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastBlockServiced\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"name\":\"setBlocksInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TimedUpKeep","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://1dab1e4d6d519d44002e6916c47f39d50d0b825007d31524f89457d30ba1f8c3"}]}