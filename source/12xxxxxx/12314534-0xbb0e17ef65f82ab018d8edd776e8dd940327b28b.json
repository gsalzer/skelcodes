{"status":"1","message":"OK","result":[{"SourceCode":"// File: math/SafeMath.sol\r\n\r\npragma solidity 0.5.17;\r\n\r\n\r\nlibrary SafeMath {\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    require(b <= a, \"SafeMath: subtraction overflow\");\r\n    return a - b;\r\n  }\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    // Since Solidity automatically asserts when dividing by 0,\r\n    // but we only need it to revert.\r\n    require(b > 0, \"SafeMath: division by zero\");\r\n    return a / b;\r\n  }\r\n\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    // Same reason as `div`.\r\n    require(b > 0, \"SafeMath: modulo by zero\");\r\n    return a % b;\r\n  }\r\n}\r\n\r\n// File: token/erc20/IERC20.sol\r\n\r\npragma solidity 0.5.17;\r\n\r\n\r\ninterface IERC20 {\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n  function totalSupply() external view returns (uint256 _supply);\r\n  function balanceOf(address _owner) external view returns (uint256 _balance);\r\n\r\n  function approve(address _spender, uint256 _value) external returns (bool _success);\r\n  function allowance(address _owner, address _spender) external view returns (uint256 _value);\r\n\r\n  function transfer(address _to, uint256 _value) external returns (bool _success);\r\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool _success);\r\n}\r\n\r\n// File: token/erc20/ERC20.sol\r\n\r\npragma solidity 0.5.17;\r\n\r\n\r\n\r\n\r\ncontract ERC20 is IERC20 {\r\n  using SafeMath for uint256;\r\n\r\n  uint256 public totalSupply;\r\n  mapping (address => uint256) public balanceOf;\r\n  mapping (address => mapping (address => uint256)) internal _allowance;\r\n\r\n  function approve(address _spender, uint256 _value) public returns (bool) {\r\n    _approve(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) public view returns (uint256) {\r\n    return _allowance[_owner][_spender];\r\n  }\r\n\r\n  function increaseAllowance(address _spender, uint256 _value) public returns (bool) {\r\n    _approve(msg.sender, _spender, _allowance[msg.sender][_spender].add(_value));\r\n    return true;\r\n  }\r\n\r\n  function decreaseAllowance(address _spender, uint256 _value) public returns (bool) {\r\n    _approve(msg.sender, _spender, _allowance[msg.sender][_spender].sub(_value));\r\n    return true;\r\n  }\r\n\r\n  function transfer(address _to, uint256 _value) public returns (bool _success) {\r\n    _transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool _success) {\r\n    _transfer(_from, _to, _value);\r\n    _approve(_from, msg.sender, _allowance[_from][msg.sender].sub(_value));\r\n    return true;\r\n  }\r\n\r\n  function _approve(address _owner, address _spender, uint256 _amount) internal {\r\n    require(_owner != address(0), \"ERC20: approve from the zero address\");\r\n    require(_spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n    _allowance[_owner][_spender] = _amount;\r\n    emit Approval(_owner, _spender, _amount);\r\n  }\r\n\r\n  function _transfer(address _from, address _to, uint256 _value) internal {\r\n    require(_from != address(0), \"ERC20: transfer from the zero address\");\r\n    require(_to != address(0), \"ERC20: transfer to the zero address\");\r\n    require(_to != address(this), \"ERC20: transfer to this contract address\");\r\n\r\n    balanceOf[_from] = balanceOf[_from].sub(_value);\r\n    balanceOf[_to] = balanceOf[_to].add(_value);\r\n    emit Transfer(_from, _to, _value);\r\n  }\r\n}\r\n\r\n// File: token/erc20/IERC20Detailed.sol\r\n\r\npragma solidity 0.5.17;\r\n\r\n\r\ninterface IERC20Detailed {\r\n  function name() external view returns (string memory _name);\r\n  function symbol() external view returns (string memory _symbol);\r\n  function decimals() external view returns (uint8 _decimals);\r\n}\r\n\r\n// File: token/erc20/ERC20Detailed.sol\r\n\r\npragma solidity 0.5.17;\r\n\r\n\r\n\r\n\r\ncontract ERC20Detailed is ERC20, IERC20Detailed {\r\n  string public name;\r\n  string public symbol;\r\n  uint8 public decimals;\r\n\r\n  constructor(string memory _name, string memory _symbol, uint8 _decimals) public {\r\n    name = _name;\r\n    symbol = _symbol;\r\n    decimals = _decimals;\r\n  }\r\n}\r\n\r\n// File: token/erc20/ERC20GatewayWhitelist.sol\r\n\r\npragma solidity 0.5.17;\r\n\r\n\r\ncontract ERC20GatewayWhitelist is ERC20 {\r\n  address public mainchainGateway;\r\n\r\n  function allowance(address _owner, address _spender)\r\n    public\r\n    view\r\n    returns (uint256 _value)\r\n  {\r\n    if (_spender == mainchainGateway) return uint256(-1);\r\n\r\n    return _allowance[_owner][_spender];\r\n  }\r\n\r\n  function transferFrom(\r\n    address _from,\r\n    address _to,\r\n    uint256 _value\r\n  )\r\n    public\r\n    returns (bool _success)\r\n  {\r\n    if (allowance(_from, msg.sender) != uint256(-1)) {\r\n      super._approve(_from, msg.sender, _allowance[_from][msg.sender].sub(_value));\r\n    }\r\n\r\n    _transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function _setGateway(address _mainchainGateway) internal {\r\n    require(\r\n      _mainchainGateway != address(0),\r\n      \"ERC20GatewayWhitelist: setting gateway to the zero address\"\r\n    );\r\n    mainchainGateway = _mainchainGateway;\r\n  }\r\n}\r\n\r\n// File: AXSToken.sol\r\n\r\npragma solidity 0.5.17;\r\n\r\n\r\n\r\n\r\ncontract AXSToken is ERC20Detailed, ERC20GatewayWhitelist {\r\n  constructor(address _mainchainGateway)\r\n    public\r\n    ERC20Detailed(\"Axie Infinity Shard\", \"AXS\", 18)\r\n  {\r\n    totalSupply = uint256(270000000).mul(uint256(10)**18);\r\n    balanceOf[msg.sender] = totalSupply;\r\n    emit Transfer(address(0), msg.sender, totalSupply);\r\n\r\n    _setGateway(_mainchainGateway);\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mainchainGateway\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainchainGateway\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"AXSToken","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000001a2a1c938ce3ec39b6d47113c7955baa9dd454f2","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://95f49deabe52e00860ba84f6d37c2f2e1a01e050df211941a057490c6d93f0ab"}]}