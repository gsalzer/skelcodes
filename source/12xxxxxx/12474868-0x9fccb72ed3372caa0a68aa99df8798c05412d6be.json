{"status":"1","message":"OK","result":[{"SourceCode":"{\"Migrations.sol\":{\"content\":\"pragma solidity \\u003e=0.4.22 \\u003c0.7.0;\\n\\ncontract Migrations {\\n  address public owner;\\n  uint public last_completed_migration;\\n\\n  modifier restricted() {\\n    if (msg.sender == owner) _;\\n  }\\n\\n  constructor() public {\\n    owner = msg.sender;\\n  }\\n\\n  function setCompleted(uint completed) public restricted {\\n    last_completed_migration = completed;\\n  }\\n\\n  function upgrade(address new_address) public restricted {\\n    Migrations upgraded = Migrations(new_address);\\n    upgraded.setCompleted(last_completed_migration);\\n  }\\n}\"},\"NetVRK.sol\":{\"content\":\"pragma solidity \\u003e=0.4.22 \\u003c0.7.0;\\n\\ncontract NetVRK {\\n    string  public name = \\\"Netvrk\\\";\\n    string  public symbol = \\\"$NetVRK\\\";\\n    string  public standard = \\\"Netvrk v1.0\\\";\\n\\n\\n    uint256 public totalSupply;\\n\\n\\n\\n    event Transfer(\\n        address indexed _from,\\n        address indexed _to,\\n        uint256 _value\\n    );\\n\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _value\\n    );\\n\\n    mapping(address =\\u003e uint256) public balanceOf;\\n    mapping(address =\\u003e mapping(address =\\u003e uint256)) public allowance;\\n\\n    constructor(uint256 _initialSupply) public {\\n        balanceOf[msg.sender] = _initialSupply;\\n        totalSupply = _initialSupply;\\n    }\\n\\n    function transfer(address _to, uint256 _value) public returns (bool success) {\\n\\n        //require(uint256(bal)\\u003e= _value);\\n\\n        balanceOf[msg.sender] -= _value;\\n        balanceOf[_to] += _value;\\n\\n        emit Transfer(msg.sender, _to, _value);\\n\\n        return true;\\n    }\\n\\n    function approve(address _spender, uint256 _value) public returns (bool success) {\\n        allowance[msg.sender][_spender] = _value;\\n\\n        emit Approval(msg.sender, _spender, _value);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\\n        require(_value \\u003c= balanceOf[_from]);\\n        require(_value \\u003c= allowance[_from][msg.sender]);\\n\\n        balanceOf[_from] -= _value;\\n        balanceOf[_to] += _value;\\n\\n        allowance[_from][msg.sender] -= _value;\\n\\n        emit Transfer(_from, _to, _value);\\n\\n        return true;\\n    }\\n}\\n\"},\"NetVRKSale.sol\":{\"content\":\"pragma solidity \\u003e=0.4.22 \\u003c0.7.0;\\n\\nimport \\\"./NetVRK.sol\\\";\\n\\ncontract NetVRKSale {\\n    address admin;\\n    NetVRK public tokenContract;\\n    uint256 public tokenPrice;\\n    uint256 public tokensSold;\\n\\n    event Sell(address _buyer, uint256 _amount);\\n\\n    constructor(NetVRK _tokenContract, uint256 _tokenPrice) public {\\n        admin = msg.sender;\\n        tokenContract = _tokenContract;\\n        tokenPrice = _tokenPrice;\\n    }\\n\\n    function multiply(uint x, uint y) internal pure returns (uint z) {\\n        require(y == 0 || (z = x * y) / y == x);\\n    }\\n\\n    function buyTokens(uint256 _numberOfTokens) public payable {\\n\\n        require(msg.value == multiply(_numberOfTokens, tokenPrice));\\n        require(tokenContract.transfer(msg.sender, _numberOfTokens));\\n\\n        tokensSold += _numberOfTokens;\\n\\n        emit Sell(msg.sender, _numberOfTokens);\\n    }\\n\\n    function endSale() public {\\n       \\n\\n        address payable wallet = address(uint160(admin));\\n\\n        wallet.transfer( address(this).balance);\\n    }\\n}\"}}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"NetVRK","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000002dc6c0","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://2ec044ddffb6e89ece2b976ba13bc9ddf59d05510d0c896c6e4fa2aa5b9d29ab"}]}