[
    {
        "inputs": [
            {
                "internalType": "enum MarketRegistry.MarketType[]",
                "name": "marketTypes",
                "type": "uint8[]"
            },
            {
                "internalType": "enum MarketRegistry.CurrencySupported[]",
                "name": "currenciesSupported",
                "type": "uint8[]"
            },
            {
                "internalType": "address[]",
                "name": "proxies",
                "type": "address[]"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "inputs": [
            {
                "internalType": "enum MarketRegistry.MarketType",
                "name": "marketType",
                "type": "uint8"
            },
            {
                "internalType": "enum MarketRegistry.CurrencySupported",
                "name": "currencySupported",
                "type": "uint8"
            },
            {
                "internalType": "address",
                "name": "proxy",
                "type": "address"
            }
        ],
        "name": "addMarket",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "name": "markets",
        "outputs": [
            {
                "internalType": "enum MarketRegistry.MarketType",
                "name": "marketType",
                "type": "uint8"
            },
            {
                "internalType": "enum MarketRegistry.CurrencySupported",
                "name": "currencySupported",
                "type": "uint8"
            },
            {
                "internalType": "address",
                "name": "proxy",
                "type": "address"
            },
            {
                "internalType": "bool",
                "name": "isActive",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "marketId",
                "type": "uint256"
            },
            {
                "internalType": "address",
                "name": "newProxy",
                "type": "address"
            }
        ],
        "name": "setMarketProxy",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "marketId",
                "type": "uint256"
            },
            {
                "internalType": "bool",
                "name": "newStatus",
                "type": "bool"
            }
        ],
        "name": "setMarketStatus",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    }
]