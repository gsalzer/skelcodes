{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: NONE\n\npragma solidity 0.7.4;\n\n\n\n// Part: Gauge\n\ninterface Gauge {\n    function deposit(uint amount, address receiver) external;\n}\n\n// Part: IERC20\n\ninterface IERC20 {\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n    function approve(address spender, uint256 amount) external returns (bool);\n}\n\n// File: <stdin>.sol\n\ncontract GaugeDepositor {\n\n    function depositForMany(\n        IERC20 token,\n        Gauge gauge,\n        uint total,\n        address[] calldata receivers,\n        uint[] calldata amounts\n    ) external {\n        require(msg.sender == 0xF96dA4775776ea43c42795b116C7a6eCcd6e71b5);\n        token.transferFrom(msg.sender, address(this), total);\n        for (uint i; i < receivers.length; i++) {\n            gauge.deposit(amounts[i], receivers[i]);\n        }\n    }\n\n    function approveGauges(IERC20[] calldata tokens, address[] calldata gauges) external {\n        require(msg.sender == 0xF96dA4775776ea43c42795b116C7a6eCcd6e71b5);\n        for (uint i; i < tokens.length; i++) {\n            tokens[i].approve(gauges[i], uint(-1));\n        }\n    }\n\n}\n","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"gauges\",\"type\":\"address[]\"}],\"name\":\"approveGauges\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract Gauge\",\"name\":\"gauge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"depositForMany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"GaugeDepositor","CompilerVersion":"v0.7.4+commit.3f05b770","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":""}]}