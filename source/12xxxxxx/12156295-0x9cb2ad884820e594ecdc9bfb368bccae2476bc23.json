{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract FeeSplitter {\r\n\r\n    address payable public dev1;\r\n    address payable public dev2;\r\n    address payable public dev3;\r\n    uint public shares1;\r\n    uint public shares2;\r\n    uint public shares3;\r\n\r\n    bool internal locked;\r\n\r\n    constructor(address payable _dev1, address payable _dev2, address payable _dev3, uint8 _shares1, uint8 _shares2, uint8 _shares3) {\r\n        dev1 = _dev1;\r\n        dev2 = _dev2;\r\n        dev3 = _dev3;\r\n        shares1 = _shares1;\r\n        shares2 = _shares2;\r\n        shares3 = _shares3;\r\n        require(shares1 + shares2 + shares3 == 100, \"Shares must add up to 100\");\r\n    }\r\n\r\n    receive() external payable noReentrant {\r\n        uint payout1 = address(this).balance * shares1 / 100;\r\n        uint payout2 = address(this).balance * shares2 / 100;\r\n        uint payout3 = address(this).balance * shares3 / 100;\r\n\r\n        (bool success1,) = dev1.call{value: payout1}(\"\");\r\n        (bool success2,) = dev2.call{value: payout2}(\"\");\r\n        (bool success3,) = dev3.call{value: payout3}(\"\");\r\n\r\n        require(success1 && success2 && success3, \"Sending ether failed\");\r\n    }\r\n\r\n    fallback() external payable {\r\n\r\n    }\r\n\r\n    modifier noReentrant() {\r\n        require(!locked, \"No reentrancy\");\r\n        locked = true;\r\n        _;\r\n        locked = false;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_dev1\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_dev2\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_dev3\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_shares1\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_shares2\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_shares3\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"dev1\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dev2\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dev3\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shares1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shares2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shares3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"FeeSplitter","CompilerVersion":"v0.8.3+commit.8d00100c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000a453fd30b502dba988a869b4a72b4a9e1dd33d7a000000000000000000000000bff79922fcbf93f9c30abb22322b271460c6bebb000000000000000000000000e5ee2b9d5320f2d1492e16567f36b578372b3d9f00000000000000000000000000000000000000000000000000000000000000410000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000f","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://393c7a5c81e39d1f453e2b40e28d31d4ea6b62435d55cc36545f399f3b371487"}]}