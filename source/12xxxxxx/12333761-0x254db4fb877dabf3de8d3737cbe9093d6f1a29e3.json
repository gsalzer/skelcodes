{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.10;\r\n\r\ncontract UnifiedLogger {\r\n    bytes32 private constant GUARD_VALUE = keccak256(\"guard.bytes32\");\r\n    address gatedLogBatcherLib;\r\n    bytes32 guard;\r\n\r\n    struct UnlockSchedule {\r\n        address beneficiary;\r\n        address token;\r\n        uint256 totalAmount;\r\n        uint256 start;\r\n        uint256 end;\r\n        uint256 duration;\r\n    }\r\n\r\n    mapping(address => UnlockSchedule[]) public unlockSchedules;\r\n\r\n    event UnlockScheduleSet(\r\n        address indexed beneficiary,\r\n        address token,\r\n        uint256 totalAmount,\r\n        uint256 start,\r\n        uint256 end,\r\n        uint256 duration,\r\n        uint256 indexed timestamp,\r\n        uint256 indexed blockNumber\r\n    );\r\n    event DiggPegRewards(address indexed beneficiary, uint256 response, uint256 rate, uint256 indexed timestamp, uint256 indexed blockNumber);\r\n\r\n    event BatchLogs(bytes32 contentHash);\r\n\r\n    constructor(address _gatedLogBatcherLib) public {\r\n        gatedLogBatcherLib = _gatedLogBatcherLib;\r\n        guard = GUARD_VALUE;\r\n    }\r\n\r\n    function batchLogs(bytes memory logs, bytes32 contentHash) public {\r\n        require(guard != GUARD_VALUE);\r\n        (bool success, bytes memory data) = gatedLogBatcherLib.delegatecall(abi.encodeWithSignature(\"multiSend(bytes)\", logs));\r\n        emit BatchLogs(contentHash);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"logs\",\"type\":\"bytes\"},{\"name\":\"contentHash\",\"type\":\"bytes32\"}],\"name\":\"batchLogs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unlockSchedules\",\"outputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"name\":\"start\",\"type\":\"uint256\"},{\"name\":\"end\",\"type\":\"uint256\"},{\"name\":\"duration\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_gatedLogBatcherLib\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"start\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"end\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"UnlockScheduleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"response\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"DiggPegRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"contentHash\",\"type\":\"bytes32\"}],\"name\":\"BatchLogs\",\"type\":\"event\"}]","ContractName":"UnifiedLogger","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000008d29be29923b68abfdd21e541b9374737b49cdad","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://025f6923b089d7d46040c91faeaf052606978cddbcddaccec86f4e66b5e48845"}]}