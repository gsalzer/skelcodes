{"status":"1","message":"OK","result":[{"SourceCode":"# @version ^0.2.8\r\n# https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\r\n'''\r\n@title FLEX Coin ERC-20 Token\r\n@author Sitt Guruvanich\r\n@notice Implementation of FLEX Coin used by CoinFLEX\r\n@dev Follows the ERC-20 token standard as defined at\r\n     https://eips.ethereum.org/EIPS/eip-20\r\n'''\r\nfrom vyper.interfaces import ERC20\r\nimplements: ERC20\r\n\r\n### Events ###\r\nevent Transfer: # ERC-20\r\n  _from: indexed(address)\r\n  _to: indexed(address)\r\n  _value: uint256\r\n\r\nevent Approval: # ERC-20\r\n  _owner: indexed(address)\r\n  _spender: indexed(address)\r\n  _value: uint256\r\n\r\nevent OwnershipTransferred: # Ownable\r\n  _prev_owner: indexed(address)\r\n  _new_owner:  indexed(address)\r\n\r\n### Member Variables ###\r\nname: public(String[64])\r\nsymbol: public(String[32])\r\nbalanceOf: public(HashMap[address, uint256])\r\nallowance: public(HashMap[address, HashMap[address, uint256]])\r\ntotalSupply: public(uint256)\r\nowner: public(address) # Implements Ownable\r\n\r\n@external\r\ndef __init__(_name: String[64], _symbol: String[32]):\r\n  self.name = _name\r\n  self.symbol = _symbol\r\n  self.owner = msg.sender\r\n  log Transfer(ZERO_ADDRESS, msg.sender, 0)\r\n\r\n@view\r\n@external\r\ndef decimals() -> uint256:\r\n  '''\r\n  @notice Get the number of decimals for this token\r\n  @dev Implemented as a view method to reduce gas costs\r\n  @return uint256 decimal places\r\n  '''\r\n  return 18\r\n\r\n@external\r\ndef transfer(_to : address, _value : uint256) -> bool:\r\n  '''\r\n  @dev Transfer token for a specified address\r\n  @param _to The address to transfer to.\r\n  @param _value The amount to be transferred.\r\n  '''\r\n  # NOTE: vyper does not allow underflows\r\n  #       so the following subtraction would revert on insufficient balance\r\n  self.balanceOf[msg.sender] -= _value\r\n  self.balanceOf[_to] += _value\r\n  log Transfer(msg.sender, _to, _value)\r\n  return True\r\n\r\n@external\r\ndef transferFrom(_from : address, _to : address, _value : uint256) -> bool:\r\n  '''\r\n  @dev Transfer tokens from one address to another.\r\n  @param _from address The address which you want to send tokens from\r\n  @param _to address The address which you want to transfer to\r\n  @param _value uint256 the amount of tokens to be transferred\r\n  '''\r\n  self.balanceOf[_from] -= _value\r\n  self.balanceOf[_to] += _value\r\n  _allowance: uint256 = self.allowance[_from][msg.sender]\r\n  if _allowance != MAX_UINT256:\r\n    self.allowance[_from][msg.sender] = _allowance - _value\r\n  log Transfer(_from, _to, _value)\r\n  return True\r\n\r\n@external\r\ndef approve(_spender : address, _value : uint256) -> bool:\r\n  '''\r\n  @notice Approve the passed address to transfer the specified amount of\r\n          tokens on behalf of msg.sender\r\n  @dev Beware that changing an allowance via this method brings the risk\r\n       that someone may use both the old and new allowance by unfortunate\r\n       transaction ordering. This may be mitigated with the use of\r\n       {increaseAllowance} and {decreaseAllowance}.\r\n       https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n  @param _spender The address which will transfer the funds\r\n  @param _value The amount of tokens that may be transferred\r\n  @return bool success\r\n  '''\r\n  self.allowance[msg.sender][_spender] = _value\r\n  log Approval(msg.sender, _spender, _value)\r\n  return True\r\n\r\n@external\r\ndef increaseAllowance(_spender: address, _added_value: uint256) -> bool:\r\n  '''\r\n  @notice Increase the allowance granted to `_spender` by the caller\r\n  @dev This is alternative to {approve} that can be used as a mitigation for\r\n       the potential race condition\r\n  @param _spender The address which will transfer the funds\r\n  @param _added_value The amount of to increase the allowance\r\n  @return bool success\r\n  '''\r\n  allowance: uint256 = self.allowance[msg.sender][_spender] + _added_value\r\n  self.allowance[msg.sender][_spender] = allowance\r\n  log Approval(msg.sender, _spender, allowance)\r\n  return True\r\n\r\n@external\r\ndef decreaseAllowance(_spender: address, _subtracted_value: uint256) -> bool:\r\n  '''\r\n  @notice Decrease the allowance granted to `_spender` by the caller\r\n  @dev This is alternative to {approve} that can be used as a mitigation for\r\n       the potential race condition\r\n  @param _spender The address which will transfer the funds\r\n  @param _subtracted_value The amount of to decrease the allowance\r\n  @return bool success\r\n  '''\r\n  allowance: uint256 = self.allowance[msg.sender][_spender] - _subtracted_value\r\n  self.allowance[msg.sender][_spender] = allowance\r\n  log Approval(msg.sender, _spender, allowance)\r\n  return True\r\n\r\n@external\r\ndef mint(_to: address, _value: uint256) -> bool:\r\n  '''\r\n  @notice Mint an amount of the token and assigns it to an account.\r\n       This encapsulates the modification of balances such that the\r\n       proper events are emitted.\r\n  @dev only contract owner has access to this action\r\n  @param _to The account that will receive the created tokens.\r\n  @param _value The amount that will be created.\r\n  '''\r\n  assert msg.sender == self.owner, 'Only contract owner is permitted to this action.' # dev: only owner\r\n  self.totalSupply += _value\r\n  self.balanceOf[_to] += _value\r\n  log Transfer(ZERO_ADDRESS, _to, _value)\r\n  return True\r\n\r\n@external\r\ndef burnFrom(_to: address, _value: uint256) -> bool:\r\n  '''\r\n  @notice Burn an amount of the token from a given account.\r\n  @dev only contract owner has access to this action\r\n  @param _to The account whose tokens will be burned.\r\n  @param _value The amount that will be burned.\r\n  '''\r\n  assert msg.sender == self.owner, 'Only contract owner is permitted to this action.' # dev: only owner\r\n  self.totalSupply -= _value\r\n  self.balanceOf[_to] -= _value\r\n  log Transfer(_to, ZERO_ADDRESS, _value)\r\n  return True\r\n\r\n@external\r\ndef transferOwnership(_addr: address) -> bool:\r\n  '''\r\n  @notice Transfer ownership for this contract; Only one owner address allowed\r\n  @dev only contract owner has access to this action\r\n  @param _addr  the address to transfer this contract's ownership to\r\n  '''\r\n  assert msg.sender == self.owner, 'Only contract owner is permitted to this action.' # dev: only owner\r\n  assert _addr != ZERO_ADDRESS, 'Cannot transfer contract ownership to zero address.' # dev: cannot transfer ownership to zero address\r\n  self.owner = _addr # dev: set new owner\r\n  log OwnershipTransferred(msg.sender, _addr)\r\n  return True","ABI":"[{\"name\":\"Transfer\",\"inputs\":[{\"name\":\"_from\",\"type\":\"address\",\"indexed\":true},{\"name\":\"_to\",\"type\":\"address\",\"indexed\":true},{\"name\":\"_value\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"Approval\",\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\",\"indexed\":true},{\"name\":\"_spender\",\"type\":\"address\",\"indexed\":true},{\"name\":\"_value\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"_prev_owner\",\"type\":\"address\",\"indexed\":true},{\"name\":\"_new_owner\",\"type\":\"address\",\"indexed\":true}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"decimals\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":288},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transfer\",\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":74740},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transferFrom\",\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":111382},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"approve\",\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":37821},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"increaseAllowance\",\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_added_value\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":39065},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"decreaseAllowance\",\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtracted_value\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":39089},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"mint\",\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":75717},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"burnFrom\",\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":75735},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"gas\":38211},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"name\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"gas\":7760},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"symbol\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"gas\":6813},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"balanceOf\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":1633},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"allowance\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"},{\"name\":\"arg1\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":1878},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"totalSupply\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":1478},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"gas\":1508}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.11","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000009464c455820436f696e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004464c455800000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}