{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/harvey/projects/gamete/contract/contracts/Splitter.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: Unlicense\\n\\npragma solidity ^0.7.6;\\n\\ncontract Splitter {\\n    mapping (address => uint) splits;\\n    mapping (address => uint256) public balances;\\n    address payable[] addresses;\\n\\n    constructor(address payable[] memory _addresses, uint[] memory _splits) {\\n        require(_addresses.length == _splits.length);\\n        for (uint i = 0; i < _addresses.length; i++) {\\n            addresses.push(_addresses[i]);\\n            splits[_addresses[i]] = _splits[i];\\n        }\\n    }\\n\\n    receive() external payable {\\n        uint val = msg.value / 1000;    \\n        for (uint i = 0; i < addresses.length; i++) {\\n            address addr = addresses[i];\\n            balances[addr] += val * splits[addr];\\n        }\\n    }\\n\\n    function withdraw() public {\\n        require(splits[msg.sender] != 0, \\\"Invalid address\\\");\\n        uint balance = balances[msg.sender];\\n        balances[msg.sender] = 0;\\n        (bool success, ) = msg.sender.call{value: balance}(\\\"\\\");\\n        require(success, \\\"Transfer failed\\\");\\n    }\\n}\\n\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 300\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_splits\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Splitter","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"300","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000040000000000000000000000008d404d3a907bde5602ca24a0fde7fcbd2caccbaa000000000000000000000000de14389b087ff285c9e106735da76d92355efa6e00000000000000000000000033ff13345df3a650c0136cdafaf0ec190ce502d60000000000000000000000007eabc3394e576d7cd32eab2a3e23419009c4ae610000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000001f400000000000000000000000000000000000000000000000000000000000000c800000000000000000000000000000000000000000000000000000000000000c8","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}