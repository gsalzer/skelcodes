{"status":"1","message":"OK","result":[{"SourceCode":"contract Ownable {\r\n    address public owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\n\r\ncontract Authorizable is Ownable {\r\n\r\n    mapping(address => bool) public authorized;\r\n\r\n    modifier onlyAuthorized() {\r\n        require(authorized[msg.sender] || owner == msg.sender);\r\n        _;\r\n    }\r\n\r\n    function addAuthorized(address _toAdd) onlyOwner public {\r\n        require(_toAdd != address(0));\r\n        authorized[_toAdd] = true;\r\n    }\r\n\r\n    function removeAuthorized(address _toRemove) onlyOwner public {\r\n        require(_toRemove != address(0));\r\n        require(_toRemove != msg.sender);\r\n        authorized[_toRemove] = false;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\npragma solidity =0.7.6;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\ncontract NftSto is Authorizable {\r\n    struct Nft {\r\n        string symbol;\r\n        string name;\r\n        string icon;\r\n        uint goal;\r\n        string[] files;\r\n    }\r\n\r\n    uint public totalSupply;\r\n    Nft[] public nftList;\r\n    mapping (address => uint[]) private _holderTokens;\r\n    mapping (string => uint) private _symbolMap;\r\n    mapping (string => bool) private _nameMap;\r\n\r\n    constructor() public {}\r\n\r\n    function mintNft(address _to, string memory _symbol, string memory _name, string memory _icon, uint _goal) external onlyAuthorized returns (uint256) {\r\n        require(_symbolMap[_symbol] == 0,\"symbol exist\");\r\n        require(_nameMap[_name] == false,\"name exist\");\r\n        uint tokenId = totalSupply;\r\n        _symbolMap[_symbol]= tokenId+1;\r\n        _nameMap[_name] = true;\r\n        string[] memory _files;\r\n        Nft memory n = Nft({symbol:_symbol,name:_name,icon:_icon,goal: _goal, files:_files});\r\n        nftList.push(n);\r\n        _holderTokens[_to].push(tokenId);\r\n        totalSupply++;\r\n        return tokenId;\r\n    }\r\n\r\n    function addFile(uint _tokenId, string memory _file) external onlyAuthorized  {\r\n        require(_tokenId < totalSupply,\"tokenId too big\");\r\n        nftList[_tokenId].files.push( _file);\r\n    }\r\n\r\n    function balanceOf(address owner) public view returns (uint256) {\r\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\r\n        return _holderTokens[owner].length;\r\n    }\r\n\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view returns (string memory, string memory, string memory) {\r\n        uint length = _holderTokens[owner].length;\r\n        require(length>0, \"owner has no token\");\r\n        require(length > index,\"index too big\");\r\n        uint tokenId =  _holderTokens[owner][index];\r\n        return (nftList[tokenId].symbol,nftList[tokenId].name,nftList[tokenId].icon);\r\n    }\r\n\r\n    function filesOfOwnerByIndex(address owner, uint256 index) public view returns (string[] memory) {\r\n        uint length = _holderTokens[owner].length;\r\n        require(length>0, \"owner has no token\");\r\n        require(length > index,\"index too big\");\r\n        uint tokenId =  _holderTokens[owner][index];\r\n        return nftList[tokenId].files;\r\n    }\r\n\r\n    function tokenBySymbol(string calldata _symbol) public view returns (string memory, string memory, string memory) {\r\n        uint index = _symbolMap[_symbol];\r\n        require(index>0, \"symbol not found\");\r\n        uint tokenId =  index - 1;\r\n        return (nftList[tokenId].symbol,nftList[tokenId].name,nftList[tokenId].icon);\r\n    }\r\n\r\n    function filesBySymbol(string calldata _symbol) public view returns (string[] memory) {\r\n        uint index = _symbolMap[_symbol];\r\n        require(index>0, \"symbol not found\");\r\n        uint tokenId =  index - 1;\r\n        return nftList[tokenId].files;\r\n    }\r\n\r\n    function filesByTokenId(uint _tokenId) public view returns (string[] memory) {\r\n        return nftList[_tokenId].files;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_toAdd\",\"type\":\"address\"}],\"name\":\"addAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_file\",\"type\":\"string\"}],\"name\":\"addFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"filesBySymbol\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"filesByTokenId\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"filesOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_icon\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goal\",\"type\":\"uint256\"}],\"name\":\"mintNft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftList\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"icon\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_toRemove\",\"type\":\"address\"}],\"name\":\"removeAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"tokenBySymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"NftSto","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://2b2948962a443f9ccf7676390004278a720a2ffdd3e22273ccb0f79a841cf1c1"}]}