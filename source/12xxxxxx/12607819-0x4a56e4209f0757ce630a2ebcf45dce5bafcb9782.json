{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2020-07-16\r\n*/\r\n\r\npragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface ConnectorsInterface {\r\n  function chief(address) external view returns (bool);\r\n}\r\n\r\ninterface IndexInterface {\r\n  function master() external view returns (address);\r\n}\r\n\r\ncontract BytesHelper {\r\n  /**\r\n  * @dev Convert String to bytes32.\r\n  */\r\n  function stringToBytes32(string memory str) internal pure returns (bytes32 result) {\r\n    require(bytes(str).length != 0, \"String-Empty\");\r\n    // solium-disable-next-line security/no-inline-assembly\r\n    assembly {\r\n      result := mload(add(str, 32))\r\n    }\r\n  }\r\n\r\n  /**\r\n  * @dev Convert bytes32 to String.\r\n  */\r\n  function bytes32ToString(bytes32 _bytes32) internal pure returns (string memory) {\r\n    bytes32  _temp;\r\n    uint count;\r\n    for (uint256 i; i < 32; i++) {\r\n      _temp = _bytes32[i];\r\n      if( _temp != bytes32(0)) {\r\n        count += 1;\r\n      }\r\n    }\r\n    bytes memory bytesArray = new bytes(count);\r\n    for (uint256 i; i < count; i++) {\r\n      bytesArray[i] = (_bytes32[i]);\r\n    }\r\n    return (string(bytesArray));\r\n  }\r\n}\r\ncontract Helpers is BytesHelper {\r\n  address public constant connectorsV2 = 0x97b0B3A8bDeFE8cB9563a3c610019Ad10DB8aD11;\r\n  address public constant instaIndex = 0x2971AdFa57b20E5a416aE5a708A8655A9c74f723;\r\n  uint public version = 1;\r\n\r\n  mapping (bytes32 => StakingData) public stakingMapping;\r\n\r\n  struct StakingData {\r\n    address stakingPool;\r\n    address stakingToken;\r\n  }\r\n\r\n  event LogAddStakingMapping(string stakingName, bytes32 stakingType, address stakingAddress, address stakingToken);\r\n  event LogRemoveStakingMapping(string stakingName, bytes32 stakingType, address stakingAddress, address stakingToken);\r\n\r\n  modifier isChief virtual {\r\n    require(\r\n      ConnectorsInterface(connectorsV2).chief(msg.sender) ||\r\n      IndexInterface(instaIndex).master() == msg.sender, \"not-Chief\");\r\n      _;\r\n  }\r\n\r\n  function addStakingMapping(string memory stakingName, address stakingAddress, address stakingToken) public isChief {\r\n    require(stakingAddress != address(0), \"stakingAddress-not-vaild\");\r\n    require(stakingToken != address(0), \"stakingToken-not-vaild\");\r\n    require(bytes(stakingName).length <= 32, \"Length-exceeds\");\r\n    bytes32 stakeType = stringToBytes32(stakingName);\r\n    require(stakingMapping[stakeType].stakingPool == address(0), \"StakingPool-already-added\");\r\n    require(stakingMapping[stakeType].stakingToken == address(0), \"StakingToken-already-added\");\r\n\r\n    stakingMapping[stakeType] = StakingData(\r\n      stakingAddress,\r\n      stakingToken\r\n    );\r\n    emit LogAddStakingMapping(stakingName, stakeType, stakingAddress, stakingToken);\r\n  }\r\n\r\n  function removeStakingMapping(string memory stakingName, address stakingAddress) public isChief {\r\n    require(stakingAddress != address(0), \"stakingAddress-not-vaild\");\r\n    bytes32 stakeType = stringToBytes32(stakingName);\r\n    require(stakingMapping[stakeType].stakingPool != address(0), \"StakingPool-not-added-yet\");\r\n    require(stakingMapping[stakeType].stakingToken != address(0), \"StakingToken-not-added-yet\");\r\n    require(stakingMapping[stakeType].stakingPool == stakingAddress, \"different-staking-pool\");\r\n\r\n    emit LogRemoveStakingMapping(stakingName, stakeType, stakingAddress, stakingMapping[stakeType].stakingToken);\r\n    delete stakingMapping[stakeType];\r\n  }\r\n}\r\n\r\n\r\ncontract InstaStakeMapping is Helpers {\r\n  string constant public name = \"Insta-Stake-Map-v1\";\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stakingName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"stakingType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"}],\"name\":\"LogAddStakingMapping\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stakingName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"stakingType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"}],\"name\":\"LogRemoveStakingMapping\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stakingName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"stakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"}],\"name\":\"addStakingMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"connectorsV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"instaIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stakingName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"stakingAddress\",\"type\":\"address\"}],\"name\":\"removeStakingMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"stakingMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakingPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"InstaStakeMapping","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://7e7f1694fc6bc28b485a2c163a2564d1160fdea72b48651395cb2249bdbb3c3f"}]}