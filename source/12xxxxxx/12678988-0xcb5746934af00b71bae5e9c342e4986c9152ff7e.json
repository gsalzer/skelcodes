{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2021-05-17\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract OwnerHelper\r\n{\r\n    address public owner;\r\n    address public manager;\r\n\r\n    event ChangeOwner(address indexed _from, address indexed _to);\r\n    event ChangeManager(address indexed _from, address indexed _to);\r\n\r\n    modifier onlyOwner\r\n    {\r\n        require(msg.sender == owner, \"ERROR: Not owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyManager\r\n    {\r\n        require(msg.sender == manager, \"ERROR: Not manager\");\r\n        _;\r\n    }\r\n\r\n    constructor()\r\n    {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function transferOwnership(address _to) onlyOwner public\r\n    {\r\n        require(_to != owner);\r\n        require(_to != manager);\r\n        require(_to != address(0x0));\r\n\r\n        address from = owner;\r\n        owner = _to;\r\n\r\n        emit ChangeOwner(from, _to);\r\n    }\r\n\r\n    function transferManager(address _to) onlyOwner public\r\n    {\r\n        require(_to != owner);\r\n        require(_to != manager);\r\n        require(_to != address(0x0));\r\n\r\n        address from = manager;\r\n        manager = _to;\r\n\r\n        emit ChangeManager(from, _to);\r\n    }\r\n}\r\n\r\nabstract contract ERC20Interface\r\n{\r\n    event Transfer( address indexed _from, address indexed _to, uint _value);\r\n    event Approval( address indexed _owner, address indexed _spender, uint _value);\r\n\r\n    function totalSupply() view virtual public returns (uint _supply);\r\n    function balanceOf( address _who ) virtual public view returns (uint _value);\r\n    function transfer( address _to, uint _value) virtual public returns (bool _success);\r\n    function approve( address _spender, uint _value ) virtual public returns (bool _success);\r\n    function allowance( address _owner, address _spender ) virtual public view returns (uint _allowance);\r\n    function transferFrom( address _from, address _to, uint _value) virtual public returns (bool _success);\r\n}\r\n\r\ncontract TRADY is ERC20Interface, OwnerHelper\r\n{\r\n    string public name;\r\n    uint public decimals;\r\n    string public symbol;\r\n\r\n    uint constant private E18 = 1000000000000000000;\r\n    uint constant private month = 2592000;\r\n\r\n    // Total                                         1,000,000,000\r\n    uint constant public maxTotalSupply           = 1000000000 * E18;\r\n    // Sale                                         150,000,000 (15%)\r\n    uint constant public maxSaleSupply            = 150000000 * E18;\r\n    // Marketing                                    100,000,000 (10%)\r\n    uint constant public maxMktSupply             = 100000000 * E18;\r\n    // Development                                  100,000,000 (10%)\r\n    uint constant public maxDevSupply             = 100000000 * E18;\r\n    // EcoSystem                                    150,000,000 (15%)\r\n    uint constant public maxEcoSupply             = 150000000 * E18;\r\n    // Business                                     100,000,000 (10%)\r\n    uint constant public maxBusinessSupply        = 100000000 * E18;\r\n    // Team                                         100,000,000 (10%)\r\n    uint constant public maxTeamSupply            = 100000000 * E18;\r\n    // Advisors                                     50,000,000 (5%)\r\n    uint constant public maxAdvisorSupply         = 50000000 * E18;\r\n    // Reserve                                      250,000,000 (25%)\r\n    uint constant public maxReserveSupply         = 250000000 * E18;\r\n\r\n    // Lock\r\n    uint constant public teamVestingSupply = 5000000 * E18;\r\n    uint constant public teamVestingLockDate =  24 * month;\r\n    uint constant public teamVestingTime = 20;\r\n\r\n    uint constant public advisorVestingSupply = 2500000 * E18;\r\n    uint constant public advisorVestingLockDate =  12 * month;\r\n    uint constant public advisorVestingTime = 20;\r\n\r\n    uint public totalTokenSupply;\r\n    uint public tokenIssuedSale;\r\n    uint public tokenIssuedMkt;\r\n    uint public tokenIssuedDev;\r\n    uint public tokenIssuedEco;\r\n    uint public tokenIssuedBusiness;\r\n    uint public tokenIssuedTeam;\r\n    uint public tokenIssuedAdv;\r\n    uint public tokenIssuedRsv;\r\n\r\n    uint public burnTokenSupply;\r\n\r\n    mapping (address => uint) public balances;\r\n    mapping (address => mapping ( address => uint )) public approvals;\r\n\r\n    mapping (uint => uint) public tmVestingTimer;\r\n    mapping (uint => uint) public tmVestingBalances;\r\n    mapping (uint => uint) public advVestingTimer;\r\n    mapping (uint => uint) public advVestingBalances;\r\n\r\n    bool public tokenLock = true;\r\n    bool public saleTime = true;\r\n    uint public endSaleTime = 0;\r\n\r\n    event Issue(address indexed _to, uint _tokens, string _type);\r\n    event TeamIssue(address indexed _to1, address indexed _to2, uint _tokens);\r\n    event Burn(address indexed _from, uint _tokens);\r\n\r\n    event TokenUnlock(address indexed _to, uint _tokens);\r\n    event EndSale(uint _date);\r\n\r\n    constructor()\r\n    {\r\n        name        = \"TRADY\";\r\n        decimals    = 18;\r\n        symbol      = \"TRADY\";\r\n\r\n        totalTokenSupply = maxTotalSupply;\r\n        balances[owner] = totalTokenSupply;\r\n\r\n        tokenIssuedSale     = 0;\r\n        tokenIssuedDev      = 0;\r\n        tokenIssuedEco      = 0;\r\n        tokenIssuedBusiness = 0;\r\n        tokenIssuedMkt      = 0;\r\n        tokenIssuedRsv      = 0;\r\n        tokenIssuedTeam     = 0;\r\n        tokenIssuedAdv      = 0;\r\n\r\n        burnTokenSupply     = 0;\r\n\r\n        require(maxTeamSupply == teamVestingSupply * teamVestingTime, \"ERROR: MaxTeamSupply\");\r\n        require(maxAdvisorSupply == advisorVestingSupply * advisorVestingTime, \"ERROR: MaxAdvisorSupply\");\r\n        require(maxTotalSupply == maxSaleSupply + maxDevSupply + maxEcoSupply + maxMktSupply + maxReserveSupply + maxTeamSupply + maxAdvisorSupply + maxBusinessSupply, \"ERROR: MaxTotalSupply\");\r\n    }\r\n\r\n    function totalSupply() view override public returns (uint)\r\n    {\r\n        return totalTokenSupply;\r\n    }\r\n\r\n    function balanceOf(address _who) view override public returns (uint)\r\n    {\r\n        return balances[_who];\r\n    }\r\n\r\n    function transfer(address _to, uint _value) override public returns (bool)\r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[msg.sender] >= _value);\r\n\r\n        balances[msg.sender] = balances[msg.sender] - _value;\r\n        balances[_to] = balances[_to] + _value;\r\n\r\n        emit Transfer(msg.sender, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint _value) override public returns (bool)\r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[msg.sender] >= _value);\r\n\r\n        approvals[msg.sender][_spender] = _value;\r\n\r\n        emit Approval(msg.sender, _spender, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) view override public returns (uint)\r\n    {\r\n        return approvals[_owner][_spender];\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _value) override public returns (bool)\r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[_from] >= _value);\r\n        require(approvals[_from][msg.sender] >= _value);\r\n\r\n        approvals[_from][msg.sender] = approvals[_from][msg.sender] - _value;\r\n        balances[_from] = balances[_from] - _value;\r\n        balances[_to]  = balances[_to] + _value;\r\n\r\n        emit Transfer(_from, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function saleIssue(address _to) onlyOwner public\r\n    {\r\n        require(saleTime == true);\r\n        require(tokenIssuedSale == 0);\r\n\r\n        _transfer(msg.sender, _to, maxSaleSupply);\r\n\r\n        tokenIssuedSale = maxSaleSupply;\r\n\r\n        emit Issue(_to, maxSaleSupply, \"Sale\");\r\n    }\r\n\r\n    function devIssue(address _to) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require(tokenIssuedDev == 0);\r\n\r\n        _transfer(msg.sender, _to, maxDevSupply);\r\n\r\n        tokenIssuedDev = maxDevSupply;\r\n\r\n        emit Issue(_to, maxDevSupply, \"Development\");\r\n    }\r\n\r\n    function ecoIssue(address _to) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require(tokenIssuedEco == 0);\r\n\r\n        _transfer(msg.sender, _to, maxEcoSupply);\r\n\r\n        tokenIssuedEco = maxEcoSupply;\r\n\r\n        emit Issue(_to, maxEcoSupply, \"Ecosystem\");\r\n    }\r\n\r\n    function mktIssue(address _to) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require(tokenIssuedMkt == 0);\r\n\r\n        _transfer(msg.sender, _to, maxMktSupply);\r\n\r\n        tokenIssuedMkt = maxMktSupply;\r\n\r\n        emit Issue(_to, maxMktSupply, \"Marketing\");\r\n    }\r\n\r\n    function bizIssue(address _to) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require(tokenIssuedBusiness == 0);\r\n\r\n        _transfer(msg.sender, _to, maxBusinessSupply);\r\n\r\n        tokenIssuedBusiness = maxBusinessSupply;\r\n\r\n        emit Issue(_to, maxBusinessSupply, \"Business\");\r\n    }\r\n\r\n    function rsvIssue(address _to) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require(tokenIssuedRsv == 0);\r\n\r\n        _transfer(msg.sender, _to, maxReserveSupply);\r\n\r\n        tokenIssuedRsv = maxReserveSupply;\r\n\r\n        emit Issue(_to, maxReserveSupply, \"Reserve\");\r\n    }\r\n\r\n    function teamIssue(address _to1, address _to2, uint _time) onlyOwner public\r\n    {\r\n        require(saleTime == false, \"ERROR: It's sale time\");\r\n        require(_time < teamVestingTime, \"ERROR: Over vesting\");\r\n\r\n        uint nowTime = block.timestamp;\r\n        require(nowTime > tmVestingTimer[_time], \"ERROR: Now locking\");\r\n\r\n        uint tokens = teamVestingSupply;\r\n        require(tokens == tmVestingBalances[_time]);\r\n        require(maxTeamSupply >= tokenIssuedTeam + tokens);\r\n        require(balances[msg.sender] >= tokens);\r\n\r\n        balances[msg.sender] = balances[msg.sender] - tokens;\r\n\r\n        uint half = tokens / 2;\r\n\r\n        balances[_to1] = balances[_to1] + half;\r\n        balances[_to2] = balances[_to2] + half;\r\n\r\n        tmVestingBalances[_time] = 0;\r\n\r\n        tokenIssuedTeam = tokenIssuedTeam + tokens;\r\n\r\n        emit TeamIssue(_to1, _to2, half);\r\n    }\r\n\r\n    function advisorIssue(address _to, uint _time) onlyOwner public\r\n    {\r\n        require(saleTime == false, \"ERROR: It's sale time\");\r\n        require( _time < advisorVestingTime, \"ERROR: Over vesting\");\r\n\r\n        uint nowTime = block.timestamp;\r\n        require( nowTime > advVestingTimer[_time] );\r\n\r\n        uint tokens = advisorVestingSupply;\r\n\r\n        require(tokens == advVestingBalances[_time]);\r\n        require(maxAdvisorSupply >= tokenIssuedAdv + tokens);\r\n        require(balances[msg.sender] >= tokens);\r\n\r\n        balances[msg.sender] = balances[msg.sender] - tokens;\r\n\r\n        balances[_to] = balances[_to] + tokens;\r\n        advVestingBalances[_time] = 0;\r\n\r\n        tokenIssuedAdv = tokenIssuedAdv + tokens;\r\n\r\n        emit Issue(_to, tokens, \"Advisor\");\r\n    }\r\n\r\n    function isTransferable() private view returns (bool)\r\n    {\r\n        if(tokenLock == false)\r\n        {\r\n            return true;\r\n        }\r\n        else if(msg.sender == owner)\r\n        {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function setTokenUnlock() onlyManager public\r\n    {\r\n        require(tokenLock == true);\r\n        require(saleTime == false);\r\n\r\n        tokenLock = false;\r\n    }\r\n\r\n    function setTokenLock() onlyManager public\r\n    {\r\n        require(tokenLock == false);\r\n        tokenLock = true;\r\n    }\r\n\r\n    function endSale() onlyOwner public\r\n    {\r\n        require(saleTime == true);\r\n        require(maxSaleSupply == tokenIssuedSale);\r\n\r\n        saleTime = false;\r\n\r\n        uint nowTime = block.timestamp;\r\n        endSaleTime = nowTime;\r\n\r\n        for(uint i = 0; i < teamVestingTime; i++)\r\n        {\r\n            tmVestingTimer[i] = endSaleTime + teamVestingLockDate + (i * month);\r\n            tmVestingBalances[i] = teamVestingSupply;\r\n        }\r\n\r\n        for(uint i = 0; i < advisorVestingTime; i++)\r\n        {\r\n            advVestingTimer[i] = endSaleTime + advisorVestingLockDate + (i * month);\r\n            advVestingBalances[i] = advisorVestingSupply;\r\n        }\r\n\r\n        emit EndSale(endSaleTime);\r\n    }\r\n\r\n    function burnToken(uint _value) onlyManager public\r\n    {\r\n        uint tokens = _value * E18;\r\n\r\n        require(balances[msg.sender] >= tokens);\r\n\r\n        balances[msg.sender] = balances[msg.sender] - tokens;\r\n\r\n        burnTokenSupply = burnTokenSupply + tokens;\r\n        totalTokenSupply = totalTokenSupply - tokens;\r\n\r\n        emit Burn(msg.sender, tokens);\r\n    }\r\n\r\n    function close() onlyOwner public\r\n    {\r\n        selfdestruct(payable(msg.sender));\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint _value) internal\r\n    {\r\n        require(balances[_from] >= _value);\r\n\r\n        balances[_from] = balances[_from] - _value;\r\n        balances[_to] = balances[_to] + _value;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"EndSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to2\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"TeamIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"TokenUnlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"advVestingBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"advVestingTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"advisorIssue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"advisorVestingLockDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"advisorVestingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"advisorVestingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"bizIssue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"devIssue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ecoIssue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endSaleTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAdvisorSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBusinessSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDevSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxEcoSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMktSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxReserveSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSaleSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTeamSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mktIssue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"rsvIssue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"saleIssue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setTokenLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setTokenUnlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"teamIssue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamVestingLockDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamVestingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamVestingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tmVestingBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tmVestingTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIssuedAdv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIssuedBusiness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIssuedDev\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIssuedEco\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIssuedMkt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIssuedRsv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIssuedSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIssuedTeam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TRADY","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://237032bfc1798e5b70140a18bb7b433e81e3933642c2fe843f6418179331ca41"}]}