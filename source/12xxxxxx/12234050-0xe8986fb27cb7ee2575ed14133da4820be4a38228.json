{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.16;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\ncontract ComptrollerLike {\r\n    function getAssetsIn(address account) public view returns(address[] memory);\r\n}\r\n\r\ncontract BComptrollerLike {\r\n    function c2b(address ctoken) public view returns(address);\r\n}\r\n\r\ncontract RegistryLike {\r\n    function getAvatar(address user) public returns(address);\r\n}\r\n\r\ncontract UserInfoLike {\r\n    struct TokenInfo {\r\n        address[] btoken;\r\n        address[] ctoken;\r\n        uint[] ctokenDecimals;\r\n        address[] underlying;\r\n        uint[] underlyingDecimals;\r\n        uint[] ctokenExchangeRate;\r\n        uint[] underlyingPrice;\r\n        uint[] borrowRate;\r\n        uint[] supplyRate;\r\n        bool[] listed;\r\n        uint[] collateralFactor;\r\n        uint[] bTotalSupply;\r\n    }\r\n    \r\n    struct PerUserInfo {\r\n        uint[] ctokenBalance;\r\n        uint[] ctokenBorrowBalance;\r\n        uint[] underlyingWalletBalance;\r\n        uint[] underlyingAllowance;\r\n    }\r\n\r\n    struct ScoreInfo {\r\n        uint userScore;\r\n        uint userScoreProgressPerSec;        \r\n        uint totalScore;\r\n    }\r\n\r\n    struct ImportInfo {\r\n        address avatar;\r\n        uint[]  ctokenAllowance;\r\n        uint    availableEthBalance; \r\n    }\r\n\r\n    struct CompTokenInfo {\r\n        uint    compBalance;\r\n        address comp;\r\n    }\r\n\r\n    struct JarInfo {\r\n        uint[] ctokenBalance;\r\n    }\r\n    \r\n    struct TvlInfo {\r\n        uint numAccounts;\r\n        uint[] ctokenBalance;\r\n    }\r\n\r\n    struct Info {\r\n        TokenInfo     tokenInfo;\r\n        PerUserInfo   cUser; // data on compound\r\n        PerUserInfo   bUser; // data on B\r\n        ImportInfo    importInfo;\r\n        ScoreInfo     scoreInfo;\r\n        CompTokenInfo compTokenInfo;\r\n        JarInfo       jarInfo;\r\n        TvlInfo       tvlInfo;\r\n    }\r\n    \r\n    function getTokenInfo(address comptroller, address bComptroller) public returns(TokenInfo memory info);\r\n    function getPerUserInfo(address user, address[] memory ctoken, address[] memory assetsIn, address[] memory underlying) public returns(PerUserInfo memory info);\r\n    function getImportInfo(address user, address[] memory ctoken, address registry, address sugarDaddy) public returns(ImportInfo memory info);\r\n    function getScoreInfo(address user, address jarConnector) public view returns(ScoreInfo memory info);\r\n    function getCompTokenInfo(address user, address comptroller, address registry) public returns(CompTokenInfo memory info);\r\n    function getJarInfo(address jar, address[] memory ctoken) public returns(JarInfo memory info);\r\n    function getTvlInfo(address[] memory ctokens, address registry) public returns(TvlInfo memory info);\r\n}\r\n\r\ncontract UserInfo {\r\n    UserInfoLike constant USER_INFO = UserInfoLike(0x907403DA04EB05EFd47eB0BA0C7a7d00d4f233EA);\r\n    \r\n    function getUserInfo(address user,\r\n                         address comptroller,\r\n                         address bComptroller,\r\n                         address registry,\r\n                         address sugarDaddy,\r\n                         address jarConnector,\r\n                         address jar,\r\n                         bool    getTvl) public returns(UserInfoLike.Info memory info) {\r\n        info.tokenInfo = USER_INFO.getTokenInfo(comptroller, bComptroller);\r\n        // check which assets are in\r\n        address avatar = RegistryLike(registry).getAvatar(user);\r\n        address[] memory assetsIn = ComptrollerLike(comptroller).getAssetsIn(avatar);\r\n        address[] memory bAssetsIn = new address[](assetsIn.length);\r\n        for(uint i = 0 ; i < assetsIn.length ; i++) {\r\n            bAssetsIn[i] = BComptrollerLike(bComptroller).c2b(assetsIn[i]);\r\n        }\r\n        info.bUser = USER_INFO.getPerUserInfo(user, info.tokenInfo.btoken, bAssetsIn, info.tokenInfo.underlying);\r\n        // all tokens are assumed to be in - since we want to import all of them\r\n        info.cUser = USER_INFO.getPerUserInfo(user, info.tokenInfo.ctoken, info.tokenInfo.ctoken, info.tokenInfo.underlying);\r\n        info.importInfo = USER_INFO.getImportInfo(user, info.tokenInfo.ctoken, registry, sugarDaddy);\r\n\r\n        info.scoreInfo = USER_INFO.getScoreInfo(user, jarConnector);\r\n        info.compTokenInfo = USER_INFO.getCompTokenInfo(user, comptroller, registry);\r\n        info.jarInfo = USER_INFO.getJarInfo(jar, info.tokenInfo.ctoken);\r\n        if(getTvl) info.tvlInfo = USER_INFO.getTvlInfo(info.tokenInfo.ctoken, registry);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"comptroller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bComptroller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sugarDaddy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"jarConnector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"jar\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"getTvl\",\"type\":\"bool\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"btoken\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"ctoken\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ctokenDecimals\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"underlying\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underlyingDecimals\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ctokenExchangeRate\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underlyingPrice\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"borrowRate\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"supplyRate\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"listed\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"collateralFactor\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"bTotalSupply\",\"type\":\"uint256[]\"}],\"internalType\":\"struct UserInfoLike.TokenInfo\",\"name\":\"tokenInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"ctokenBalance\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ctokenBorrowBalance\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underlyingWalletBalance\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underlyingAllowance\",\"type\":\"uint256[]\"}],\"internalType\":\"struct UserInfoLike.PerUserInfo\",\"name\":\"cUser\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"ctokenBalance\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ctokenBorrowBalance\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underlyingWalletBalance\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underlyingAllowance\",\"type\":\"uint256[]\"}],\"internalType\":\"struct UserInfoLike.PerUserInfo\",\"name\":\"bUser\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avatar\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ctokenAllowance\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"availableEthBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct UserInfoLike.ImportInfo\",\"name\":\"importInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"userScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userScoreProgressPerSec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalScore\",\"type\":\"uint256\"}],\"internalType\":\"struct UserInfoLike.ScoreInfo\",\"name\":\"scoreInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"compBalance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"comp\",\"type\":\"address\"}],\"internalType\":\"struct UserInfoLike.CompTokenInfo\",\"name\":\"compTokenInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"ctokenBalance\",\"type\":\"uint256[]\"}],\"internalType\":\"struct UserInfoLike.JarInfo\",\"name\":\"jarInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"numAccounts\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ctokenBalance\",\"type\":\"uint256[]\"}],\"internalType\":\"struct UserInfoLike.TvlInfo\",\"name\":\"tvlInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct UserInfoLike.Info\",\"name\":\"info\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"UserInfo","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"BSD-3-Clause","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3cbc3d5b9d6dbefef6883a9a1e61e8ab8ff2dabf95d6345e9676abbc99235297"}]}