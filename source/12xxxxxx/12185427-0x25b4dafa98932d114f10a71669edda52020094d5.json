{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.10;\r\n\r\ncontract ERC20Interface {\r\n\r\n   function totalSupply() public view returns (uint256);\r\n   function balanceOf(address tokenOwner) public view returns (uint256 balanceRemain);\r\n   function allowance(address tokenOwner, address spender) public view returns (uint256 remaining);\r\n   function transfer(address to, uint256 tokens) public returns (bool success);\r\n   function approve(address spender, uint256 tokens) public returns (bool success);\r\n   function transferFrom(address from, address to, uint256 tokens) public returns (bool success);\r\n      \r\n   event Transfer(address indexed from, address indexed to, uint256 value);\r\n   event Approval(address indexed owner, address indexed spender, uint256 value);  \r\n\r\n}\r\n\r\ncontract testpayment\r\n{\r\n    address uaddr;\r\n\taddress owner;   \r\n\tuint256 public usdtTopupCnt = 1;\r\n\tuint256 public trxTopupCnt = 1;\r\n\t\t\r\n  \tstruct Deposit {\r\n\t\tuint256 amount;\r\n\t\tuint256 reqNumber;\r\n\t\tuint256 userId;\r\n\t\tuint40 depositTime;\r\n\t}\r\n\t\r\n\tevent topup(uint256 slno, string paytype, address indexed from, uint256 reqnum, uint256 amount, uint256 user, uint40 stsdate);\r\n\t\r\n\t\r\n\tmapping(uint256 => Deposit) public usdtDeposit;\r\n\tmapping(uint256 => Deposit) public trxDeposit;\r\n    \r\n    constructor() public \r\n\t{\r\n        owner = msg.sender;\r\n    }\r\n\t\r\n\tfunction changeTokAddr(address _uaddr) public returns (string memory)\r\n\t {\r\n\t  \trequire(msg.sender == owner,\"Only Owner Can Transfer\");\r\n        uaddr = _uaddr;\r\n        return(\"USDT Contract address updated successfully\");\r\n    }\r\n    \r\n\t\r\n\tfunction checkUsdtBalance() public view returns (uint256 balance)\r\n    {\r\n        return ERC20Interface(uaddr).balanceOf(msg.sender);\r\n\t}\r\n\t\r\n\tfunction payEth(uint256 _reqNumber, uint256 _userId)  payable external  returns (string memory)\r\n\t{\t\t\r\n\t\trequire(msg.value>0);\r\n\t\t\t\r\n\t\ttrxDeposit[trxTopupCnt].amount = msg.value;\r\n\t\ttrxDeposit[trxTopupCnt].reqNumber = _reqNumber;\r\n\t\ttrxDeposit[trxTopupCnt].userId = _userId;\r\n\t\ttrxDeposit[trxTopupCnt].depositTime = uint40(block.timestamp);\r\n\t\t\r\n\t\temit topup(trxTopupCnt, \"TRX\", msg.sender, _reqNumber, msg.value, _userId, uint40(block.timestamp));\r\n\t\t\r\n\t\ttrxTopupCnt++;\r\n\t\t\r\n\t\treturn \"Success, Payment Received For Package Purchase\";\r\n\r\n\t}\r\n\t\r\n    function payUsdt(uint256 _reqNumber,uint256 _value,uint256 _userId) payable external returns (string memory)\r\n    {\r\n\t\trequire(_value>0);\r\n        if(ERC20Interface(uaddr).balanceOf(msg.sender) >= _value)\r\n\t\t{\r\n\t\t\tif(ERC20Interface(uaddr).transferFrom(msg.sender, address(this), _value))\r\n\t\t\t{\r\n\t\t\t\tusdtDeposit[usdtTopupCnt].amount = _value;\r\n\t\t\t\tusdtDeposit[usdtTopupCnt].reqNumber = _reqNumber;\r\n\t\t\t\tusdtDeposit[usdtTopupCnt].userId = _userId;\r\n\t\t\t\tusdtDeposit[usdtTopupCnt].depositTime = uint40(block.timestamp);\r\n\t\t\t\t\r\n\t\t\t\temit topup(usdtTopupCnt, \"USDT\", msg.sender, _reqNumber, _value, _userId, uint40(block.timestamp));\r\n\t\t\t\t\r\n\t\t\t\tusdtTopupCnt++;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\treturn \"Success, Payment Received For Package Purchase\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn \"Failed!!! Token transfer failed\";\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn \"Failed!!! In-Sufficient USDT Balance\";\r\n\t\t} \r\n\t}\r\n\t\r\n\tfunction transferTRC20Token(address _foraddress, address _tokenAddress, uint256 _value) public returns (bool success) \r\n\t{\r\n\t   require(msg.sender == owner,\"Only Owner Can Transfer\");\r\n       return ERC20Interface(_tokenAddress).transfer(_foraddress, _value);\r\n    }\r\n\t\r\n\t\r\n\t\r\n    function withdrawEthBalance(address payable _foraddress, uint256 _value) public\r\n\t{\r\n\t   require(msg.sender == owner,\"Only Owner Can Transfer\");\r\n\t   _foraddress.transfer(_value);\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_reqNumber\",\"type\":\"uint256\"},{\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"payEth\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkUsdtBalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"trxTopupCnt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usdtDeposit\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"reqNumber\",\"type\":\"uint256\"},{\"name\":\"userId\",\"type\":\"uint256\"},{\"name\":\"depositTime\",\"type\":\"uint40\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_uaddr\",\"type\":\"address\"}],\"name\":\"changeTokAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"usdtTopupCnt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_foraddress\",\"type\":\"address\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferTRC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_reqNumber\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"payUsdt\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trxDeposit\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"reqNumber\",\"type\":\"uint256\"},{\"name\":\"userId\",\"type\":\"uint256\"},{\"name\":\"depositTime\",\"type\":\"uint40\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_foraddress\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawEthBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"slno\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"paytype\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reqnum\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"user\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"stsdate\",\"type\":\"uint40\"}],\"name\":\"topup\",\"type\":\"event\"}]","ContractName":"testpayment","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://dd6693e69533d529f1fd0fe4d41f92e8e1d0cbda888738b4725198f1b7d405b9"}]}