{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.8.1 <0.9.0;\r\n\r\ncontract ERC20 {\r\n    uint256 public totalSupply;\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowances;\r\n\r\n    using SafeMath for uint256;\r\n\r\n    function balanceOf(address _owner) public view returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function allowanceOf(address _owner, address _delegate) public view returns (uint256) {\r\n        return allowances[_owner][_delegate];\r\n    }\r\n\r\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\r\n        balances[msg.sender] = balances[msg.sender] - _amount;\r\n        balances[_to] = balances[_to] + _amount;\r\n\r\n        emit Transfer(msg.sender, _to, _amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve(address _delegate, uint256 _amount) public returns (bool success) {\r\n        allowances[msg.sender][_delegate] = _amount;\r\n\r\n        emit Approval(msg.sender, _delegate, _amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\r\n        allowances[_from][msg.sender] = allowances[_from][msg.sender] - _amount;\r\n\r\n        balances[_from] = balances[_from] - _amount;\r\n        balances[_to] = balances[_to] + _amount;\r\n        \r\n        emit Transfer(_from, _to, _amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    event Approval(address indexed _owner, address indexed _delegate, uint256 _amount);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\r\n}\r\n\r\nabstract contract ERC677 is ERC20 {\r\n    function transferAndCall(address _to, uint256 _amount, bytes calldata _data) public virtual returns (bool success);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount, bytes _data);\r\n}\r\n\r\nabstract contract ERC677Receiver {\r\n  function onTokenTransfer(address _sender, uint256 _amount, bytes calldata _data) virtual public;\r\n}\r\n\r\ncontract StarterToken is ERC20 {\r\n    function increaseApproval (address _delegate, uint256 _amount) public returns (bool success) {\r\n        allowances[msg.sender][_delegate] = allowances[msg.sender][_delegate] + _amount;\r\n\r\n        emit Approval(msg.sender, _delegate, allowances[msg.sender][_delegate]);\r\n\r\n        return true;\r\n    }\r\n\r\n    function decreaseApproval (address _delegate, uint256 _amount) public returns (bool success) {\r\n        uint256 currVal = allowances[msg.sender][_delegate];\r\n    \r\n        if (_amount > currVal) {\r\n            allowances[msg.sender][_delegate] = 0;\r\n        } else {\r\n            allowances[msg.sender][_delegate] = currVal - _amount;\r\n        }\r\n    \r\n        emit Approval(msg.sender, _delegate, allowances[msg.sender][_delegate]);\r\n    \r\n        return true;\r\n    }\r\n}\r\n\r\ncontract ERC677Token is ERC677 {\r\n    function transferAndCall(address _to, uint256 _amount, bytes calldata _data) public virtual override returns (bool success)\r\n    {\r\n        super.transfer(_to, _amount);\r\n\r\n        emit Transfer(msg.sender, _to, _amount, _data);\r\n    \r\n        if (isContract(_to)) {\r\n            contractFallback(_to, _amount, _data);\r\n        }\r\n    \r\n        return true;\r\n    }\r\n\r\n    // PRIVATE\r\n\r\n    function contractFallback(address _to, uint256 _amount, bytes calldata _data) private {\r\n        ERC677Receiver receiver = ERC677Receiver(_to);\r\n    \r\n        receiver.onTokenTransfer(msg.sender, _amount, _data);\r\n    }\r\n\r\n    function isContract(address _addr) private view returns (bool hasCode)\r\n    {\r\n        uint256 length;\r\n\r\n        assembly { length := extcodesize(_addr) }\r\n\r\n        return length > 0;\r\n    }\r\n}\r\n\r\ncontract BisonToken is StarterToken, ERC677Token {\r\n    string public constant name = \"Bison\";\r\n    string public constant symbol = \"BSN\";\r\n    uint8 public constant decimals = 18;\r\n\r\n\taddress public owner;\r\n\r\n    event Burn(address indexed _from, uint256 _amount);\r\n\r\n    using SafeMath for uint256;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n        totalSupply = 10**27;\r\n        balances[msg.sender] = totalSupply;\r\n    }\r\n\r\n    function transferAndCall(address _to, uint _amount, bytes calldata _data) public override validReciever(_to) returns (bool success) {\r\n        return super.transferAndCall(_to, _amount, _data);\r\n    }\r\n\r\n    function burn(uint256 _amount) isOwner public returns (bool success) {\r\n        require(_amount > 0);\r\n\r\n        balances[msg.sender] = balances[msg.sender] - _amount;\r\n        totalSupply = totalSupply - _amount;\r\n\r\n        emit Burn(msg.sender, _amount);\r\n\r\n        return true;\r\n    }\r\n\t\r\n    // MODIFIERS\r\n\r\n    modifier validReciever(address _to) {\r\n        require(_to != address(0x0) && _to != address(this));\r\n        _;\r\n    }\r\n\r\n    modifier isOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 _x, uint256 _y) internal pure returns (uint256) {\r\n    if (_x == 0) {\r\n        return 0;\r\n    }\r\n    uint256 z = _x * _y;\r\n    require(z / _x == _y, \"SafeMath: multiplication overflow\");\r\n    return z;\r\n  }\r\n\r\n  function div(uint256 _x, uint256 _y) internal pure returns (uint256) {\r\n    require(_y > 0, \"SafeMath: division by zero\");\r\n    uint256 z = _x / _y;\r\n    return z;\r\n  }\r\n\r\n  function sub(uint256 _x, uint256 _y) internal pure returns (uint256) {\r\n    require(_y <= _x, \"SafeMath: subtraction overflow\");\r\n    return _x - _y;\r\n  }\r\n\r\n  function add(uint256 _x, uint256 _y) internal pure returns (uint256) {\r\n    uint256 z = _x + _y;\r\n    require(z >= _x, \"SafeMath: addition overflow\");\r\n    return z;\r\n  }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"allowanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"BisonToken","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"istanbul","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://492a342188f3c1c15435e3f5b46ae27f92ea32b0c7f691939f5f9e2d4ebd208f"}]}