{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/kyle/workspace/asciipunks/contracts/AsciiPunkFactory.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary AsciiPunkFactory {\\n  uint256 private constant TOP_COUNT = 55;\\n  uint256 private constant EYE_COUNT = 48;\\n  uint256 private constant NOSE_COUNT = 9;\\n  uint256 private constant MOUTH_COUNT = 32;\\n\\n  function draw(uint256 seed) public pure returns (string memory) {\\n    uint256 rand = uint256(keccak256(abi.encodePacked(seed)));\\n\\n    string memory top = _chooseTop(rand);\\n    string memory eyes = _chooseEyes(rand);\\n    string memory mouth = _chooseMouth(rand);\\n\\n    string memory chin = unicode\\\"   │    │   \\\\n\\\" unicode\\\"   └──┘ │   \\\\n\\\";\\n    string memory neck = unicode\\\"     │  │   \\\\n\\\" unicode\\\"     │  │   \\\\n\\\";\\n\\n    return string(abi.encodePacked(top, eyes, mouth, chin, neck));\\n  }\\n\\n  function _chooseTop(uint256 rand) internal pure returns (string memory) {\\n    string[TOP_COUNT] memory tops =\\n      [\\n        unicode\\\"   ┌───┐    \\\\n\\\"\\n        unicode\\\"   │   ┼┐   \\\\n\\\"\\n        unicode\\\"   ├────┼┼  \\\\n\\\",\\n        unicode\\\"   ┌┬┬┬┬┐   \\\\n\\\"\\n        unicode\\\"   ╓┬┬┬┬╖   \\\\n\\\"\\n        unicode\\\"   ╙┴┴┴┴╜   \\\\n\\\",\\n        unicode\\\"   ╒════╕   \\\\n\\\"\\n        unicode\\\"  ┌┴────┴┐  \\\\n\\\"\\n        unicode\\\"  └┬────┬┘  \\\\n\\\",\\n        unicode\\\"   ╒════╕   \\\\n\\\"\\n        unicode\\\"   │□□□□│   \\\\n\\\"\\n        unicode\\\"  └┬────┬┘  \\\\n\\\",\\n        unicode\\\"   ╒════╕   \\\\n\\\"\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\" └─┬────┬─┘ \\\\n\\\",\\n        unicode\\\"    ◙◙◙◙    \\\\n\\\"\\n        unicode\\\"   ▄████▄   \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"   ┌───┐    \\\\n\\\"\\n        unicode\\\"┌──┤   └┐   \\\\n\\\"\\n        unicode\\\"└──┼────┤   \\\\n\\\",\\n        unicode\\\"    ┌───┐   \\\\n\\\"\\n        unicode\\\"   ┌┘   ├──┐\\\\n\\\"\\n        unicode\\\"   ├────┼──┘\\\\n\\\",\\n        unicode\\\"   ┌────┐/  \\\\n\\\"\\n        unicode\\\"┌──┴────┴──┐\\\\n\\\"\\n        unicode\\\"└──┬────┬──┘\\\\n\\\",\\n        unicode\\\"   ╒════╕   \\\\n\\\"\\n        unicode\\\" ┌─┴────┴─┐ \\\\n\\\"\\n        unicode\\\" └─┬────┬─┘ \\\\n\\\",\\n        unicode\\\"  ┌──────┐  \\\\n\\\"\\n        unicode\\\"  │▲▲▲▲▲▲│  \\\\n\\\"\\n        unicode\\\"  └┬────┬┘  \\\\n\\\",\\n        unicode\\\"  ┌┌────┐┐  \\\\n\\\"\\n        unicode\\\"  ││┌──┐││  \\\\n\\\"\\n        unicode\\\"  └┼┴──┴┼┘  \\\\n\\\",\\n        unicode\\\"   ┌────┐   \\\\n\\\"\\n        unicode\\\"  ┌┘─   │   \\\\n\\\"\\n        unicode\\\"  └┌────┐   \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"   ┌┬┬┬┬┐   \\\\n\\\"\\n        unicode\\\"   ├┴┴┴┴┤   \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"    ╓┬╥┐    \\\\n\\\"\\n        unicode\\\"   ┌╨┴╨┴┐   \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"   ╒╦╦╦╦╕   \\\\n\\\"\\n        unicode\\\"   ╞╩╩╩╩╡   \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"   ┌┼┼┼┼┐   \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"    ││││    \\\\n\\\"\\n        unicode\\\"   ┌┼┼┼┼┐   \\\\n\\\",\\n        unicode\\\"      ╔     \\\\n\\\"\\n        unicode\\\"     ╔║     \\\\n\\\"\\n        unicode\\\"   ┌─╫╫─┐   \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"    ║║║║    \\\\n\\\"\\n        unicode\\\"   ┌╨╨╨╨┐   \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"   ▐▐▐▌▌▌   \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"   \\\\\\\\/////   \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"    ┐ ┌     \\\\n\\\"\\n        unicode\\\"   ┐││││┌   \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"  ┌┐ ┐┌┐┌┐  \\\\n\\\"\\n        unicode\\\"  └└┐││┌┘   \\\\n\\\"\\n        unicode\\\"   ┌┴┴┴┴┐   \\\\n\\\",\\n        unicode\\\"  ┐┐┐┐┐     \\\\n\\\"\\n        unicode\\\"  └└└└└┐    \\\\n\\\"\\n        unicode\\\"   └└└└└┐   \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"   ││││││   \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"    ╓╓╓╓    \\\\n\\\"\\n        unicode\\\"   ┌╨╨╨╨┐   \\\\n\\\",\\n        unicode\\\"    ╔╔╗╗╗   \\\\n\\\"\\n        unicode\\\"   ╔╔╔╗╗╗╗  \\\\n\\\"\\n        unicode\\\"  ╔╝╝║ ╚╚╗  \\\\n\\\",\\n        unicode\\\"   ╔╔╔╔╔╗   \\\\n\\\"\\n        unicode\\\"  ╔╔╔╔╔╗║╗  \\\\n\\\"\\n        unicode\\\"  ╝║╨╨╨╨║╚  \\\\n\\\",\\n        unicode\\\"   ╔╔═╔═╔   \\\\n\\\"\\n        unicode\\\"   ╔╩╔╩╔╝   \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"     ///    \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"     ╔╗╔╗   \\\\n\\\"\\n        unicode\\\"    ╔╗╔╗╝   \\\\n\\\"\\n        unicode\\\"   ┌╔╝╔╝┐   \\\\n\\\",\\n        unicode\\\"     ╔╔╔╔╝  \\\\n\\\"\\n        unicode\\\"    ╔╝╔╝    \\\\n\\\"\\n        unicode\\\"   ┌╨╨╨─┐   \\\\n\\\",\\n        unicode\\\"       ╔╗   \\\\n\\\"\\n        unicode\\\"    ╔╔╔╗╝   \\\\n\\\"\\n        unicode\\\"   ┌╚╚╝╝┐   \\\\n\\\",\\n        unicode\\\"   ╔════╗   \\\\n\\\"\\n        unicode\\\"  ╔╚╚╚╝╝╝╗  \\\\n\\\"\\n        unicode\\\"  ╟┌────┐╢  \\\\n\\\",\\n        unicode\\\"    ╔═╗     \\\\n\\\"\\n        unicode\\\"    ╚╚╚╗    \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"   ┌╨╨╨╨┐   \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"    ⌂⌂⌂⌂    \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"   ┌────┐   \\\\n\\\"\\n        unicode\\\"   │   /└┐  \\\\n\\\"\\n        unicode\\\"   ├────┐/  \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"   ((((((   \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"   ┌┌┌┌┌┐   \\\\n\\\"\\n        unicode\\\"   ├┘┘┘┘┘   \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"   «°┐      \\\\n\\\"\\n        unicode\\\"    │╪╕     \\\\n\\\"\\n        unicode\\\"   ┌└┼──┐   \\\\n\\\",\\n        unicode\\\"  <° °>   § \\\\n\\\"\\n        unicode\\\"   \\\\\\\\'/   /  \\\\n\\\"\\n        unicode\\\"   {())}}   \\\\n\\\",\\n        unicode\\\"   ██████   \\\\n\\\"\\n        unicode\\\"  ██ ██ ██  \\\\n\\\"\\n        unicode\\\" █ ██████ █ \\\\n\\\",\\n        unicode\\\"    ████    \\\\n\\\"\\n        unicode\\\"   ██◙◙██   \\\\n\\\"\\n        unicode\\\"   ┌─▼▼─┐   \\\\n\\\",\\n        unicode\\\"   ╓╖  ╓╖   \\\\n\\\"\\n        unicode\\\"  °╜╚╗╔╝╙°  \\\\n\\\"\\n        unicode\\\"   ┌─╨╨─┐   \\\\n\\\",\\n        unicode\\\"   ± ±± ±   \\\\n\\\"\\n        unicode\\\"   ◙◙◙◙◙◙   \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"  ♫     ♪   \\\\n\\\"\\n        unicode\\\"    ♪     ♫ \\\\n\\\"\\n        unicode\\\" ♪ ┌────┐   \\\\n\\\",\\n        unicode\\\"    /≡≡\\\\\\\\    \\\\n\\\"\\n        unicode\\\"   /≡≡≡≡\\\\\\\\   \\\\n\\\"\\n        unicode\\\"  /┌────┐\\\\\\\\  \\\\n\\\",\\n        unicode\\\"            \\\\n\\\"\\n        unicode\\\"   ♣♥♦♠♣♥   \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"     [⌂]    \\\\n\\\"\\n        unicode\\\"      │     \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"  /\\\\\\\\/\\\\\\\\/\\\\\\\\/\\\\\\\\  \\\\n\\\"\\n        unicode\\\"  \\\\\\\\\\\\\\\\/\\\\\\\\/\\\\\\\\//  \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"    ↑↑↓↓    \\\\n\\\"\\n        unicode\\\"   ←→←→AB   \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\",\\n        unicode\\\"    ┌─┬┐    \\\\n\\\"\\n        unicode\\\"   ┌┘┌┘└┐   \\\\n\\\"\\n        unicode\\\"   ├─┴──┤   \\\\n\\\",\\n        unicode\\\"    ☼  ☼    \\\\n\\\"\\n        unicode\\\"     \\\\\\\\/     \\\\n\\\"\\n        unicode\\\"   ┌────┐   \\\\n\\\"\\n      ];\\n    uint256 topId = rand % TOP_COUNT;\\n    return tops[topId];\\n  }\\n\\n  function _chooseEyes(uint256 rand) internal pure returns (string memory) {\\n    string[EYE_COUNT] memory leftEyes =\\n      [\\n        unicode\\\"◕\\\",\\n        unicode\\\"*\\\",\\n        unicode\\\"♥\\\",\\n        unicode\\\"X\\\",\\n        unicode\\\"⊙\\\",\\n        unicode\\\"˘\\\",\\n        unicode\\\"α\\\",\\n        unicode\\\"◉\\\",\\n        unicode\\\"☻\\\",\\n        unicode\\\"¬\\\",\\n        unicode\\\"^\\\",\\n        unicode\\\"═\\\",\\n        unicode\\\"┼\\\",\\n        unicode\\\"┬\\\",\\n        unicode\\\"■\\\",\\n        unicode\\\"─\\\",\\n        unicode\\\"û\\\",\\n        unicode\\\"╜\\\",\\n        unicode\\\"δ\\\",\\n        unicode\\\"│\\\",\\n        unicode\\\"┐\\\",\\n        unicode\\\"┌\\\",\\n        unicode\\\"┌\\\",\\n        unicode\\\"╤\\\",\\n        unicode\\\"/\\\",\\n        unicode\\\"\\\\\\\\\\\",\\n        unicode\\\"/\\\",\\n        unicode\\\"\\\\\\\\\\\",\\n        unicode\\\"╦\\\",\\n        unicode\\\"♥\\\",\\n        unicode\\\"♠\\\",\\n        unicode\\\"♦\\\",\\n        unicode\\\"╝\\\",\\n        unicode\\\"◄\\\",\\n        unicode\\\"►\\\",\\n        unicode\\\"◄\\\",\\n        unicode\\\"►\\\",\\n        unicode\\\"I\\\",\\n        unicode\\\"╚\\\",\\n        unicode\\\"╔\\\",\\n        unicode\\\"╙\\\",\\n        unicode\\\"╜\\\",\\n        unicode\\\"╓\\\",\\n        unicode\\\"╥\\\",\\n        unicode\\\"$\\\",\\n        unicode\\\"○\\\",\\n        unicode\\\"N\\\",\\n        unicode\\\"x\\\"\\n      ];\\n\\n    string[EYE_COUNT] memory rightEyes =\\n      [\\n        unicode\\\"◕\\\",\\n        unicode\\\"*\\\",\\n        unicode\\\"♥\\\",\\n        unicode\\\"X\\\",\\n        unicode\\\"⊙\\\",\\n        unicode\\\"˘\\\",\\n        unicode\\\"α\\\",\\n        unicode\\\"◉\\\",\\n        unicode\\\"☻\\\",\\n        unicode\\\"¬\\\",\\n        unicode\\\"^\\\",\\n        unicode\\\"═\\\",\\n        unicode\\\"┼\\\",\\n        unicode\\\"┬\\\",\\n        unicode\\\"■\\\",\\n        unicode\\\"─\\\",\\n        unicode\\\"û\\\",\\n        unicode\\\"╜\\\",\\n        unicode\\\"δ\\\",\\n        unicode\\\"│\\\",\\n        unicode\\\"┐\\\",\\n        unicode\\\"┐\\\",\\n        unicode\\\"┌\\\",\\n        unicode\\\"╤\\\",\\n        unicode\\\"\\\\\\\\\\\",\\n        unicode\\\"/\\\",\\n        unicode\\\"/\\\",\\n        unicode\\\"\\\\\\\\\\\",\\n        unicode\\\"╦\\\",\\n        unicode\\\"♠\\\",\\n        unicode\\\"♣\\\",\\n        unicode\\\"♦\\\",\\n        unicode\\\"╝\\\",\\n        unicode\\\"►\\\",\\n        unicode\\\"◄\\\",\\n        unicode\\\"◄\\\",\\n        unicode\\\"◄\\\",\\n        unicode\\\"I\\\",\\n        unicode\\\"╚\\\",\\n        unicode\\\"╗\\\",\\n        unicode\\\"╜\\\",\\n        unicode\\\"╜\\\",\\n        unicode\\\"╓\\\",\\n        unicode\\\"╥\\\",\\n        unicode\\\"$\\\",\\n        unicode\\\"○\\\",\\n        unicode\\\"N\\\",\\n        unicode\\\"x\\\"\\n      ];\\n    uint256 eyeId = rand % EYE_COUNT;\\n\\n    string memory leftEye = leftEyes[eyeId];\\n    string memory rightEye = rightEyes[eyeId];\\n    string memory nose = _chooseNose(rand);\\n\\n    string memory forehead = unicode\\\"   │    ├┐  \\\\n\\\";\\n    string memory leftFace = unicode\\\"   │\\\";\\n    string memory rightFace = unicode\\\" └│  \\\\n\\\";\\n\\n    return\\n      string(\\n        abi.encodePacked(\\n          forehead,\\n          leftFace,\\n          leftEye,\\n          \\\" \\\",\\n          rightEye,\\n          rightFace,\\n          nose\\n        )\\n      );\\n  }\\n\\n  function _chooseMouth(uint256 rand) internal pure returns (string memory) {\\n    string[MOUTH_COUNT] memory mouths =\\n      [\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │──  │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │δ   │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │─┬  │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │(─) │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │[─] │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │<─> │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │╙─  │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │─╜  │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │└─┘ │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │┌─┐ │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │╓─  │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │─╖  │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │┼─┼ │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │──┼ │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │«─» │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │──  │   \\\\n\\\",\\n        unicode\\\" ∙ │    │   \\\\n\\\"\\n        unicode\\\" ∙───   │   \\\\n\\\",\\n        unicode\\\" ∙ │    │   \\\\n\\\"\\n        unicode\\\" ∙───)  │   \\\\n\\\",\\n        unicode\\\" ∙ │    │   \\\\n\\\"\\n        unicode\\\" ∙───]  │   \\\\n\\\",\\n        unicode\\\"   │⌐¬  │   \\\\n\\\"\\n        unicode\\\" √────  │   \\\\n\\\",\\n        unicode\\\"   │╓╖  │   \\\\n\\\"\\n        unicode\\\"   │──  │   \\\\n\\\",\\n        unicode\\\"   │~~  │   \\\\n\\\"\\n        unicode\\\"   │/\\\\\\\\  │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │══  │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │▼▼  │   \\\\n\\\",\\n        unicode\\\"   │⌐¬  │   \\\\n\\\"\\n        unicode\\\"   │O   │   \\\\n\\\",\\n        unicode\\\"   │    │   \\\\n\\\"\\n        unicode\\\"   │O   │   \\\\n\\\",\\n        unicode\\\" ∙ │⌐¬  │   \\\\n\\\"\\n        unicode\\\" ∙───   │   \\\\n\\\",\\n        unicode\\\" ∙ │⌐¬  │   \\\\n\\\"\\n        unicode\\\" ∙───)  │   \\\\n\\\",\\n        unicode\\\" ∙ │⌐¬  │   \\\\n\\\"\\n        unicode\\\" ∙───]  │   \\\\n\\\",\\n        unicode\\\"   │⌐¬  │   \\\\n\\\"\\n        unicode\\\"   │──  │   \\\\n\\\",\\n        unicode\\\"   │⌐-¬ │   \\\\n\\\"\\n        unicode\\\"   │    │   \\\\n\\\",\\n        unicode\\\"   │┌-┐ │   \\\\n\\\"\\n        unicode\\\"   ││ │ │   \\\\n\\\"\\n      ];\\n\\n    uint256 mouthId = rand % MOUTH_COUNT;\\n\\n    return mouths[mouthId];\\n  }\\n\\n  function _chooseNose(uint256 rand) internal pure returns (string memory) {\\n    string[NOSE_COUNT] memory noses =\\n      [\\n        unicode\\\"└\\\",\\n        unicode\\\"╘\\\",\\n        unicode\\\"<\\\",\\n        unicode\\\"└\\\",\\n        unicode\\\"┌\\\",\\n        unicode\\\"^\\\",\\n        unicode\\\"└\\\",\\n        unicode\\\"┼\\\",\\n        unicode\\\"Γ\\\"\\n      ];\\n\\n    uint256 noseId = rand % NOSE_COUNT;\\n    string memory nose = noses[noseId];\\n    return string(abi.encodePacked(unicode\\\"   │ \\\", nose, unicode\\\"  └┘  \\\\n\\\"));\\n  }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"draw\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"AsciiPunkFactory","CompilerVersion":"v0.8.2+commit.661d1103","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}