{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.7.4;\r\n\r\ninterface erc20 {\r\n    function transferFrom(address  sender, address recipient, uint256 amount) external returns (bool);\r\n    function approval(address owner, address spender) external view returns (uint256);\r\n    function balanceOf(address _owner) external view returns (uint256 balance);\r\n}\r\n\r\ninterface erc721 {\r\n    function ownerOf(uint n) external view returns (address);\r\n}\r\n\r\ncontract bulkSender {\r\n\r\n    address owner = msg.sender;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner,\"Unauthorised\");\r\n        _;\r\n    }\r\n\r\n    event EtherSent(address indexed to, uint256 value);\r\n    event EtherFailed(address indexed to, uint256 value);\r\n\r\n    event TokensSent(erc20 indexed token,address indexed to, uint256 value);\r\n    event TokensFailed(erc20 indexed token, address indexed to, uint256 value);\r\n\r\n    function sendEther(address payable[] memory _recipients, uint256[] memory _values) public payable onlyOwner {\r\n        require(_recipients.length == _values.length,\"number of recipients <> number of values\");\r\n        for (uint i = 0; i < _values.length; i++) {\r\n            require(address(this).balance >= _values[i],\"Insuficcient balance\");\r\n            if (_recipients[i].send(_values[i])){\r\n                emit EtherSent(_recipients[i], _values[i]);\r\n            } else {\r\n                emit EtherFailed(_recipients[i], _values[i]);\r\n            }\r\n        }\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n\r\n    function sendTokens(erc20 token, address[] memory _recipients, uint256[] memory _values) public onlyOwner {\r\n        sendTokensFrom(token, msg.sender, _recipients, _values);\r\n    }\r\n\r\n    function sendTokensFrom(erc20 token, address source, address[] memory _recipients, uint256[] memory _values) public onlyOwner {\r\n        require(_recipients.length == _values.length,\"number of recipients <> number of values\");\r\n        for (uint i = 0; i < _values.length; i++) {\r\n            if (token.transferFrom(source,_recipients[i],_values[i])) {\r\n                emit TokensSent(token,_recipients[i], _values[i]);\r\n            } else {\r\n                emit TokensFailed(token,_recipients[i], _values[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"EtherFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"EtherSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract erc20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokensFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract erc20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokensSent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"sendEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract erc20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"sendTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract erc20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"sendTokensFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"bulkSender","CompilerVersion":"v0.7.5+commit.eb77ed08","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://2621b79275d9cba7d26e5bade1beea95243c9853c3c2aedf827d58b66498e283"}]}