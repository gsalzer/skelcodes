{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/assets/TokenBankInterface.sol\r\n\r\npragma solidity >=0.4.21 <0.6.0;\r\n\r\ncontract TokenBankInterface{\r\n  function issue(address token_addr, address payable _to, uint _amount) public returns (bool success);\r\n}\r\n\r\n// File: contracts/utils/Ownable.sol\r\n\r\npragma solidity >=0.4.21 <0.6.0;\r\n\r\ncontract Ownable {\r\n    address private _contract_owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () internal {\r\n        address msgSender = msg.sender;\r\n        _contract_owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _contract_owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_contract_owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     */\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_contract_owner, newOwner);\r\n        _contract_owner = newOwner;\r\n    }\r\n}\r\n\r\n// File: contracts/TrustListTools.sol\r\n\r\npragma solidity >=0.4.21 <0.6.0;\r\n\r\ncontract TrustListInterface{\r\n  function is_trusted(address addr) public returns(bool);\r\n}\r\ncontract TrustListTools{\r\n  TrustListInterface public trustlist;\r\n  constructor(address _list) public {\r\n    //require(_list != address(0x0));\r\n    trustlist = TrustListInterface(_list);\r\n  }\r\n\r\n  modifier is_trusted(address addr){\r\n    require(trustlist.is_trusted(addr), \"not a trusted issuer\");\r\n    _;\r\n  }\r\n\r\n}\r\n\r\n// File: contracts/plugins/GasRewarder.sol\r\n\r\npragma solidity >=0.4.21 <0.6.0;\r\n\r\n\r\n\r\n\r\ncontract GasRewarder is Ownable, TrustListTools{\r\n  TokenBankInterface public bank;\r\n  address public extra_token;\r\n  uint256 public extra_token_amount;\r\n\r\n  uint256 public extra_gas;\r\n\r\n  constructor(address _bank, address _list) public TrustListTools(_list){\r\n    bank = TokenBankInterface(_bank);\r\n  }\r\n\r\n  function setExtraGas(uint256 _extra) public onlyOwner{\r\n    extra_gas = _extra;\r\n  }\r\n  function reward(address payable to, uint256 amount) public is_trusted(msg.sender){\r\n    bank.issue(address(0x0), to, amount + extra_gas * tx.gasprice);\r\n    if(extra_token != address(0x0) && extra_token_amount != 0){\r\n      bank.issue(extra_token, to, extra_token_amount);\r\n    }\r\n  }\r\n\r\n  function setExtraToken(address _token, uint256 extra_amount) public onlyOwner{\r\n    extra_token = _token;\r\n    extra_token_amount = extra_amount;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"reward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"extra_token_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bank\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"extra_amount\",\"type\":\"uint256\"}],\"name\":\"setExtraToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_extra\",\"type\":\"uint256\"}],\"name\":\"setExtraGas\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"extra_token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"trustlist\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"extra_gas\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_bank\",\"type\":\"address\"},{\"name\":\"_list\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"GasRewarder","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000ded2a011ea4cd0e23f353d5ee13652920b68413e000000000000000000000000239c45be3f8115e7281734125319399d978a221a","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://7095e242b2edea0b3e8991045c250bd146f86c64ec16d5a1d43438a9ac77e020"}]}