{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.7.0;\r\n// SPDX-License-Identifier: MIT\r\n\r\n\r\n\r\n\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\n\r\ninterface IFsV2owner {\r\n    function setFswFactor(uint _amount) external;\r\n    function setFsBalanceAddress(address _address) external;\r\n    function setEncAddress(address _address) external;\r\n    function setFeeAddress(address payable _address) external;\r\n    function setDexAddress(address _address) external;\r\n    function setRelayer(address _relayer, bool _status) external;\r\n    function enableToken(address _token) external;\r\n    function disableToken(address _token) external;\r\n    function enableBulkToken(address[] calldata _tokens) external;\r\n    function disableBulkToken(address[] calldata _tokens) external;\r\n    function withdrawFsPool(address _token, address payable _to, uint _amount) external;\r\n    \r\n    function renounceOwnership() external;\r\n    function transferOwnership(address newOwner) external;\r\n    \r\n    function fsbalance(address _token) external view returns(uint);\r\n}\r\n\r\n\r\n\r\n\r\ncontract FsV2owner is Ownable {\r\n    IFsV2owner public fsV2;\r\n    mapping(address => bool) public admins;\r\n    \r\n    modifier onlyAdmins() {\r\n        require(admins[_msgSender()], \"caller is not the admin\");\r\n        _;\r\n    }\r\n    \r\n    \r\n    constructor (address _fsV2){\r\n        fsV2 = IFsV2owner(_fsV2);\r\n    }\r\n    \r\n    \r\n    function fsbalance(address _token) external view returns(uint) {\r\n        return fsV2.fsbalance(_token);\r\n    }\r\n    \r\n    function setAdmin(address _address, bool _status) external onlyOwner {\r\n        admins[_address] = _status;\r\n    }\r\n    \r\n    function setFsV2(address _address) external onlyOwner {\r\n        fsV2 = IFsV2owner(_address);\r\n    }\r\n    \r\n    function enableToken(address _token) external onlyAdmins {\r\n        fsV2.enableToken(_token);\r\n    }\r\n    \r\n    function disableToken(address _token) external onlyAdmins {\r\n        fsV2.disableToken(_token);\r\n    }\r\n    \r\n    function enableBulkToken(address[] calldata _tokens) external onlyAdmins {\r\n        fsV2.enableBulkToken(_tokens);\r\n    }\r\n    \r\n    function disableBulkToken(address[] calldata _tokens) external onlyAdmins {\r\n        fsV2.disableBulkToken(_tokens);\r\n    }\r\n    \r\n    function setFswFactor(uint _amount) external onlyOwner {\r\n        fsV2.setFswFactor(_amount);\r\n    }\r\n    \r\n    function setFsBalanceAddress(address _address) external onlyOwner {\r\n        fsV2.setFsBalanceAddress(_address);\r\n    }\r\n    \r\n    function setEncAddress(address _address) external onlyOwner {\r\n        fsV2.setEncAddress(_address);\r\n    }\r\n    \r\n    function setFeeAddress(address payable _address) external onlyOwner {\r\n        fsV2.setFeeAddress(_address);\r\n    }\r\n    \r\n    function setDexAddress(address _address) external onlyOwner {\r\n        fsV2.setDexAddress(_address);\r\n    }\r\n    \r\n    function setRelayer(address _relayer, bool _status) external onlyOwner {\r\n        fsV2.setRelayer(_relayer, _status);\r\n    }\r\n    \r\n    function withdrawFsPool(address _token, address payable _to, uint _amount) external onlyOwner {\r\n        fsV2.withdrawFsPool(_token, _to, _amount);\r\n    }\r\n    \r\n    function renounceOwnershipFsV2() external onlyOwner {\r\n        fsV2.renounceOwnership();\r\n    }\r\n    \r\n    function transferOwnershipFsV2(address newOwner) external onlyOwner {\r\n        fsV2.transferOwnership(newOwner);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fsV2\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"disableBulkToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"disableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"enableBulkToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"enableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fsV2\",\"outputs\":[{\"internalType\":\"contract IFsV2owner\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"fsbalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnershipFsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setDexAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setEncAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setFeeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setFsBalanceAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setFsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setFswFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnershipFsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFsPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"FsV2owner","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000002222222216460df561c56bb450bd7847baa1f7b5","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://396bbdd8cc396d4b673fef36b07b726714ae8de85a55e949c31bf622a62cc7da"}]}