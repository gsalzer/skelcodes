{"status":"1","message":"OK","result":[{"SourceCode":"// Sources flattened with hardhat v2.1.1 https://hardhat.org\r\n\r\n// File contracts/interfaces/IWETH.sol\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\ninterface IWETH {\r\n    function deposit() external payable;\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function withdraw(uint) external;\r\n    function balanceOf(address) external view returns (uint256);\r\n    function approve(address, uint256) external;\r\n}\r\n\r\n\r\n// File contracts/v076/You_Dont_Blacklist_DELTA.sol\r\n\r\npragma abicoder v2;\r\n\r\ninterface IVGT {\r\n    function initialize(string memory) external;\r\n    function generateVolume() external;\r\n    function flashBorrowCaller(uint256, address) external;\r\n    function adjustBalance(address account, uint256 amount, bool isAddition) external;\r\n}\r\n\r\ninterface IFLASH_LOANER {\r\n    function initiateFlashLoan(address) external;\r\n}\r\n\r\n// A factory that creates volume generating tokens\r\ncontract You_Dont_Blacklist_DELTAV1 {\r\n\r\n    address public immutable MASTER_COPY;\r\n    IFLASH_LOANER public immutable FLASH_LOANDER_DYDX;\r\n    IWETH constant public WETH = IWETH(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\r\n    address payable private immutable OWNER;\r\n    Token[] public allTokens;\r\n    address immutable private TRADE_GENERATOR;\r\n\r\n    struct Token {\r\n        string ticker;\r\n        address tokenAddress;\r\n    }\r\n\r\n    function numTokensGenerated() public view returns (uint256) {\r\n        return allTokens.length;\r\n    }\r\n\r\n    constructor(address flasher, address generator, address masterCopy) public {\r\n        OWNER = msg.sender;\r\n        TRADE_GENERATOR = generator;\r\n        MASTER_COPY = masterCopy;\r\n        FLASH_LOANDER_DYDX = IFLASH_LOANER(flasher);\r\n    }\r\n\r\n\r\n\r\n    function createToken(string memory symbol) public {\r\n        address newToken = address(new TokenProxy(MASTER_COPY));\r\n\r\n        IVGT(newToken).initialize(symbol);\r\n        // We flash borrow everything in dydx\r\n\r\n        FLASH_LOANDER_DYDX.initiateFlashLoan(newToken); \r\n\r\n\r\n        allTokens.push(Token({\r\n            ticker : symbol,\r\n            tokenAddress : newToken\r\n        }));\r\n\r\n    }\r\n\r\n\r\n\r\n    function destroy() public {\r\n        require(msg.sender == OWNER, \"!owner\");\r\n        selfdestruct(OWNER);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\ncontract TokenProxy {\r\n\r\n    // masterCopy always needs to be first declared variable, to ensure that it is at the same location in the contracts to which calls are delegated.\r\n    // To reduce deployment costs this variable is internal and needs to be retrieved via `getStorageAt`\r\n    address internal immutable MASTER_COPY;\r\n\r\n    /// @dev Constructor function sets address of master copy contract.\r\n    /// @param _masterCopy Master copy address.\r\n    constructor(address _masterCopy)\r\n        public\r\n    {\r\n        require(_masterCopy != address(0), \"Invalid master copy address provided\");\r\n        MASTER_COPY = _masterCopy;\r\n    }\r\n\r\n    receive () external payable virtual {\r\n        _fallback();\r\n    }\r\n\r\n    fallback () external payable virtual {\r\n        _fallback();\r\n    }\r\n\r\n    function _fallback() internal virtual {\r\n        _delegate(MASTER_COPY);\r\n    }\r\n\r\n    function _delegate(address implementation) internal virtual {\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            // Copy msg.data. We take full control of memory in this inline assembly\r\n            // block because it will not return to Solidity code. We overwrite the\r\n            // Solidity scratch pad at memory position 0.\r\n            calldatacopy(0, 0, calldatasize())\r\n\r\n            // Call the implementation.\r\n            // out and outsize are 0 because we don't know the size yet.\r\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\r\n\r\n            // Copy the returned data.\r\n            returndatacopy(0, 0, returndatasize())\r\n\r\n            switch result\r\n            // delegatecall returns 0 on error.\r\n            case 0 { revert(0, returndatasize()) }\r\n            default { return(0, returndatasize()) }\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flasher\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"generator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"masterCopy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FLASH_LOANDER_DYDX\",\"outputs\":[{\"internalType\":\"contract IFLASH_LOANER\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MASTER_COPY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allTokens\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"ticker\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numTokensGenerated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"You_Dont_Blacklist_DELTAV1","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000614659165dd0edd4b2cdd14b9ee827bb2729d58d0000000000000000000000001cf85c1356662327e9f083326883f5635d383c01000000000000000000000000500933ad730a2308c02af34464f543fc451e0eaf","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://1df065f63997b598a1c28d5855fae03ad7ed571d53896b95769f6acaaeae71ed"}]}