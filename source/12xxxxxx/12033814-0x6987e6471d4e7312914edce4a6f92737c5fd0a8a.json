{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: AGPL-3.0\r\n\r\npragma solidity ^0.6.12;\r\n\r\ninterface OracleSecurityModule {\r\n    function peek() external view returns (uint256, bool);\r\n    function peep() external view returns (uint256, bool);\r\n    function bud(address) external view returns (uint256);\r\n}\r\n\r\ninterface EACAggregatorProxy {\r\n    function decimals() external view returns (uint8);\r\n    function latestAnswer() external view returns (int256);\r\n}\r\n\r\ncontract OSMedianizer {\r\n    mapping(address => bool) public authorized;\r\n    address public governance;\r\n    address public token;\r\n\r\n    OracleSecurityModule public OSM;\r\n    EACAggregatorProxy public MEDIANIZER;\r\n    \r\n    constructor() public {\r\n        governance = msg.sender;\r\n        token = address(0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984);\r\n        OSM = OracleSecurityModule(0xf363c7e351C96b910b92b45d34190650df4aE8e7);\r\n        MEDIANIZER = EACAggregatorProxy(0x553303d460EE0afB37EdFf9bE42922D8FF63220e);\r\n    }\r\n    \r\n    function setGovernance(address _governance) external {\r\n        require(msg.sender == governance, \"!governance\");\r\n        governance = _governance;\r\n    }\r\n    \r\n    function setAuthorized(address _authorized) external {\r\n        require(msg.sender == governance, \"!governance\");\r\n        authorized[_authorized] = true;\r\n    }\r\n    \r\n    function revokeAuthorized(address _authorized) external {\r\n        require(msg.sender == governance, \"!governance\");\r\n        authorized[_authorized] = false;\r\n    }\r\n    \r\n    function read() external view returns (uint price, bool osm) {\r\n        if (authorized[msg.sender] && OSM.bud(address(this)) == 1) {\r\n            (price, osm) = OSM.peek();\r\n            if (osm) return (price, true);\r\n        }\r\n        return (uint(MEDIANIZER.latestAnswer()) * 1e10, false);\r\n    }\r\n    \r\n    function foresight() external view returns (uint price, bool osm) {\r\n        if (authorized[msg.sender] && OSM.bud(address(this)) == 1) {\r\n            (price, osm) = OSM.peep();\r\n            if (osm) return (price, true);\r\n        }\r\n        return (uint(MEDIANIZER.latestAnswer()) * 1e10, false);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MEDIANIZER\",\"outputs\":[{\"internalType\":\"contract EACAggregatorProxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OSM\",\"outputs\":[{\"internalType\":\"contract OracleSecurityModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"foresight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"osm\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"read\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"osm\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authorized\",\"type\":\"address\"}],\"name\":\"revokeAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authorized\",\"type\":\"address\"}],\"name\":\"setAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"OSMedianizer","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unknown","Proxy":"0","Implementation":"","SwarmSource":"ipfs://6c4528d594ae6df8a7523e58b1f38b23d0f1923b73ff9aa1a3915fac4318d92f"}]}