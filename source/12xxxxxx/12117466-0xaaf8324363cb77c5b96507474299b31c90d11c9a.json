{"status":"1","message":"OK","result":[{"SourceCode":"//\r\n//                 -/oyhhhhhdddddhys+/:`\r\n//              -sddyo+//////++ossssyyhdho-\r\n//            -yds/:-------:::/+oo++++++oydh/`\r\n//          `sms/-----....---::/+++++++++/+ohd+`\r\n//         -dh+--------...----://++++++//////+yd+`\r\n//        /my:-..------..-----::/++++++/////:::+hh-\r\n//       /my:...---:::..-----:::/+++++///:::::---sm:\r\n//      `md+:-..--:::---::::::::/oo++//:::------..om:\r\n//      /Nhhys/---:+syysso/::::/+oo++//:-..........sm-\r\n//     -mysy++o:-:+o+o+//+o/-::/+oo++//:-..`````...-dh`\r\n//     yd:+s+:/::::--:+ho::/-:/+ooo+++/::-...````...oN-\r\n//    .Ny:::-::/:---..-::...-:+osooo++///:---.......+N-\r\n//    -Ny/:--::/-----.....---+osoooo++++//::::::---.+N-\r\n//    .Nh+/:::::--::---:::::/osssooo+++++//////:::--/N:\r\n//    `Ndo+/::::-:::::::////+ossssooo+++++///////::-/N/\r\n//     ymoo/:::-://////////+ossssssoooooo++++++++//:/N/\r\n//     smsoosyyso+////////+oosssssssoooooo++++++++//+N:\r\n//     sNs+//syyy+///////++ossssssssssssooooooooo+++yN-\r\n//     +Nyo+/:+so+///////+oossssyyssssssssoooooooooomy\r\n//     `mdossssossss+///+oossssyyyysssssssssssssooodm-\r\n//      /Ns::+syso+///++oossssyyyyyyyyyyssssssssssym+\r\n//      `dd/-.-::::/+++ossssyyyyyyyyyyyyyssssssssyms\r\n//       smo----::/++ossssyyyyyhhhhyyyyyyssssssssmh`\r\n//       :Ny:/::/+oossyyyyyyhhhhhhyyhyyysssooossdh.\r\n//       `smso++ossyyyhhhdddddhhyyyyyyysssoooosdm.\r\n//         /dddhhhhhddmmmmmdhhyyyyyyyssoooooooym:\r\n//          `-//+yNdmddhhhhyyyyssyyyssooo+++o++d.\r\n//               :Nmdhhyyyysssssssssooo+++++/:-oh+.\r\n//            `-ohNmhhyyyssssssssssoo+++///:----hmmy-\r\n//         ./ymNNNs+oyyysssssooossoo++//::-....ommmmms.\r\n//     `:ohmNNNNN+:/++sssssooooooo+//:--......-ydddmmmms.\r\n//  ./ymNmmmmmmNo---:/+ooooo++++/:--..........oddddmdddmmdyo:.\r\n// dmmmmmmmmmmNh-....-/oso:--....````........oddddddddddmddhddd\r\n// mddddmmmmmmN:..-/yhhhyyys+-```````````...odddddddddddmmddhhh\r\n//            __  __            __              __\r\n//      ___  / /_/ /_     _____/ /_____  ____  / /_______\r\n//     / _ \\/ __/ __ \\   / ___/ __/ __ \\/ __ \\/ //_/ ___/\r\n//    /  __/ /_/ / / /  (__  ) /_/ /_/ / / / / ,< (__  )\r\n//    \\___/\\__/_/ /_/  /____/\\__/\\____/_/ /_/_/|_/____/\r\n//\r\n//                   created by Mr F\r\n//            HTML/CSS and Graphics by Karl\r\n//             Advanced Solidity by ToCsIcK\r\n//\r\n//             https://ethstonks.finance/\r\n//            https://discord.gg/mDMyTksceR\r\n//               https://t.me/ethstonks\r\n//\r\n\r\npragma solidity 0.7.6;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract StonkReader {\r\n    StonkInterface private stonk;\r\n    uint public version;\r\n\r\n    constructor(address _stonkAddress, uint _version)\r\n    public\r\n    {\r\n        stonk = StonkInterface(_stonkAddress);\r\n        version = _version;\r\n    }\r\n\r\n    function highPriority(address addr, uint buyAmount)\r\n    public view\r\n    returns(uint[12] memory n)\r\n    {\r\n        (n[0], n[1], n[2], n[3], n[4], n[5], n[6]) = stonk.gameData();              // main game data\r\n        (n[7], n[8], n[9], n[10], n[11]) = stonk.stonkNumbers(addr, buyAmount);     // user data\r\n    }\r\n\r\n    function lowPriority(address addr)\r\n    public view\r\n    returns(string[6] memory s, uint[7] memory n)\r\n    {\r\n        (s[0], s[1], s[2], s[3], s[4], s[5]) = stonk.stonkNames(addr);              // user name + leader names\r\n        (n[0], n[1], n[2], n[3], n[4], n[5], n[6]) = stonk.leaderNumbers();         // leader numbers\r\n    }\r\n\r\n    function buyerNames()\r\n    public view\r\n    returns (string memory b1, string memory b2, string memory b3, string memory b4, string memory b5)\r\n    {\r\n        uint r = stonk.r();\r\n        int8 lastBuyIndex = stonk.getRoundLastBuyIndex(r);\r\n\r\n        b1 = stonk.addressToName(stonk.lastBuy(r, (5 + lastBuyIndex - 1) % 5));\r\n        b2 = stonk.addressToName(stonk.lastBuy(r, (5 + lastBuyIndex - 2) % 5));\r\n        b3 = stonk.addressToName(stonk.lastBuy(r, (5 + lastBuyIndex - 3) % 5));\r\n        b4 = stonk.addressToName(stonk.lastBuy(r, (5 + lastBuyIndex - 4) % 5));\r\n        b5 = stonk.addressToName(stonk.lastBuy(r, (5 + lastBuyIndex - 5) % 5));\r\n    }\r\n\r\n    function buyerAddresses()\r\n    public view\r\n    returns (address b1, address b2, address b3, address b4, address b5)\r\n    {\r\n        uint r = stonk.r();\r\n        int8 lastBuyIndex = stonk.getRoundLastBuyIndex(r);\r\n\r\n        b1 = stonk.lastBuy(r, (5 + lastBuyIndex - 1) % 5);\r\n        b2 = stonk.lastBuy(r, (5 + lastBuyIndex - 2) % 5);\r\n        b3 = stonk.lastBuy(r, (5 + lastBuyIndex - 3) % 5);\r\n        b4 = stonk.lastBuy(r, (5 + lastBuyIndex - 4) % 5);\r\n        b5 = stonk.lastBuy(r, (5 + lastBuyIndex - 5) % 5);\r\n    }\r\n}\r\n\r\ninterface StonkInterface {\r\n    function stonkNames(address addr) external view returns (string memory, string memory, string memory, string memory, string memory, string memory);\r\n    function stonkNumbers(address addr, uint buyAmount) external view returns (uint, uint, uint, uint, uint);\r\n    function gameData() external view returns (uint, uint, uint, uint, uint, uint, uint);\r\n    function buyerNames() external view returns (string memory, string memory, string memory, string memory, string memory);\r\n    function userRoundStats(address addr, uint rnd) external view returns (uint, uint, uint, uint, uint, uint, uint, uint);\r\n    function getHistoricalMetric(uint rnd, uint key, uint index) external view returns (uint);\r\n    function getPlayerMetric(address addr, uint rnd, uint key) external view returns (uint);\r\n    function getRoundMetric(uint rnd, uint key) external view returns (uint);\r\n    function getRoundIndex(uint rnd) external view returns (uint);\r\n    function getPlayerByIndex(uint rnd, uint ind) external view returns (address);\r\n    function leaderNumbers() external view returns (uint, uint, uint, uint, uint, uint, uint);\r\n    function nameToAddr(string memory name) external view returns (address);\r\n    function addressToName(address addr) external view returns (string memory);\r\n    function lastBuy(uint rnd, int8 index) external view returns (address);\r\n    function getRoundLastBuyIndex(uint rnd) external view returns (int8);\r\n    function bailoutPool(uint rnd, uint cb) external view returns (uint);\r\n    function bailoutRecipient(uint rnd, uint cb, uint idx) external view returns (address);\r\n    function r() external view returns (uint);\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stonkAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_version\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buyerAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"b1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"b2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"b3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"b4\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"b5\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyerNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"b1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"b2\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"b3\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"b4\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"b5\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"}],\"name\":\"highPriority\",\"outputs\":[{\"internalType\":\"uint256[12]\",\"name\":\"n\",\"type\":\"uint256[12]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"lowPriority\",\"outputs\":[{\"internalType\":\"string[6]\",\"name\":\"s\",\"type\":\"string[6]\"},{\"internalType\":\"uint256[7]\",\"name\":\"n\",\"type\":\"uint256[7]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"StonkReader","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000de3f362a8f2e89c72eece8dc7b1d7a0cf8cbdb0b0000000000000000000000000000000000000000000000000000000000000001","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://9963e68a11e95f0e58cd3e4029d912fd6aacc53ca9a81aa925a89803264fe3c0"}]}