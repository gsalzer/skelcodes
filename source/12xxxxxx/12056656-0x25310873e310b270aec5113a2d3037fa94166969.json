{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.7.4;\r\n\r\nlibrary ErrorCode {\r\n\r\n    string constant FORBIDDEN = 'YouSwap:FORBIDDEN';\r\n    string constant IDENTICAL_ADDRESSES = 'YouSwap:IDENTICAL_ADDRESSES';\r\n    string constant ZERO_ADDRESS = 'YouSwap:ZERO_ADDRESS';\r\n    string constant INVALID_ADDRESSES = 'YouSwap:INVALID_ADDRESSES';\r\n    string constant BALANCE_INSUFFICIENT = 'YouSwap:BALANCE_INSUFFICIENT';\r\n    string constant REWARDTOTAL_LESS_THAN_REWARDPROVIDE = 'YouSwap:REWARDTOTAL_LESS_THAN_REWARDPROVIDE';\r\n    string constant PARAMETER_TOO_LONG = 'YouSwap:PARAMETER_TOO_LONG';\r\n    string constant REGISTERED = 'YouSwap:REGISTERED';\r\n\r\n}\r\n\r\ninterface IYouswapInviteV1 {\r\n\r\n    struct UserInfo {\r\n        address upper;//上级\r\n        address[] lowers;//下级\r\n        uint256 startBlock;//邀请块高\r\n    }\r\n\r\n    event InviteV1(address indexed owner, address indexed upper, uint256 indexed height);//被邀请人的地址，邀请人的地址，邀请块高\r\n\r\n    function inviteCount() external view returns (uint256);//邀请人数\r\n\r\n    function inviteUpper1(address) external view returns (address);//上级邀请\r\n\r\n    function inviteUpper2(address) external view returns (address, address);//上级邀请\r\n\r\n    function inviteLower1(address) external view returns (address[] memory);//下级邀请\r\n\r\n    function inviteLower2(address) external view returns (address[] memory, address[] memory);//下级邀请\r\n\r\n    function inviteLower2Count(address) external view returns (uint256, uint256);//下级邀请\r\n    \r\n    function register() external returns (bool);//注册邀请关系\r\n\r\n    function acceptInvitation(address) external returns (bool);//注册邀请关系\r\n    \r\n    function inviteBatch(address[] memory) external returns (uint, uint);//注册邀请关系：输入数量，成功数量\r\n\r\n}\r\n\r\ncontract YouswapInviteV1 is IYouswapInviteV1 {\r\n\r\n    address public constant ZERO = address(0);\r\n    uint256 public startBlock;\r\n    address[] public inviteUserInfoV1;\r\n    mapping(address => UserInfo) public inviteUserInfoV2;\r\n\r\n    constructor () {\r\n        startBlock = block.number;\r\n    }\r\n    \r\n    function inviteCount() override external view returns (uint256) {\r\n        return inviteUserInfoV1.length;\r\n    }\r\n\r\n    function inviteUpper1(address _owner) override external view returns (address) {\r\n        return inviteUserInfoV2[_owner].upper;\r\n    }\r\n\r\n    function inviteUpper2(address _owner) override external view returns (address, address) {\r\n        address upper1 = inviteUserInfoV2[_owner].upper;\r\n        address upper2 = address(0);\r\n        if (address(0) != upper1) {\r\n            upper2 = inviteUserInfoV2[upper1].upper;\r\n        }\r\n\r\n        return (upper1, upper2);\r\n    }\r\n\r\n    function inviteLower1(address _owner) override external view returns (address[] memory) {\r\n        return inviteUserInfoV2[_owner].lowers;\r\n    }\r\n\r\n    function inviteLower2(address _owner) override external view returns (address[] memory, address[] memory) {\r\n        address[] memory lowers1 = inviteUserInfoV2[_owner].lowers;\r\n        uint256 count = 0;\r\n        uint256 lowers1Len = lowers1.length;\r\n        for (uint256 i = 0; i < lowers1Len; i++) {\r\n            count += inviteUserInfoV2[lowers1[i]].lowers.length;\r\n        }\r\n        address[] memory lowers;\r\n        address[] memory lowers2 = new address[](count);\r\n        count = 0;\r\n        for (uint256 i = 0; i < lowers1Len; i++) {\r\n            lowers = inviteUserInfoV2[lowers1[i]].lowers;\r\n            for (uint256 j = 0; j < lowers.length; j++) {\r\n                lowers2[count] = lowers[j];\r\n                count++;\r\n            }\r\n        }\r\n        \r\n        return (lowers1, lowers2);\r\n    }\r\n\r\n    function inviteLower2Count(address _owner) override external view returns (uint256, uint256) {\r\n        address[] memory lowers1 = inviteUserInfoV2[_owner].lowers;\r\n        uint256 lowers2Len = 0;\r\n        uint256 len = lowers1.length;\r\n        for (uint256 i = 0; i < len; i++) {\r\n            lowers2Len += inviteUserInfoV2[lowers1[i]].lowers.length;\r\n        }\r\n        \r\n        return (lowers1.length, lowers2Len);\r\n    }\r\n\r\n    function register() override external returns (bool) {\r\n        UserInfo storage user = inviteUserInfoV2[tx.origin];\r\n        require(0 == user.startBlock, ErrorCode.REGISTERED);\r\n        user.upper = ZERO;\r\n        user.startBlock = block.number;\r\n        inviteUserInfoV1.push(tx.origin);\r\n        \r\n        emit InviteV1(tx.origin, user.upper, user.startBlock);\r\n        \r\n        return true;\r\n    }\r\n\r\n    function acceptInvitation(address _inviter) override external returns (bool) {\r\n        require(msg.sender != _inviter, ErrorCode.FORBIDDEN);\r\n        UserInfo storage user = inviteUserInfoV2[msg.sender];\r\n        require(0 == user.startBlock, ErrorCode.REGISTERED);\r\n        UserInfo storage upper = inviteUserInfoV2[_inviter];\r\n        if (0 == upper.startBlock) {\r\n            upper.upper = ZERO;\r\n            upper.startBlock = block.number;\r\n            inviteUserInfoV1.push(_inviter);\r\n            \r\n            emit InviteV1(_inviter, upper.upper, upper.startBlock);\r\n        }\r\n        user.upper = _inviter;\r\n        upper.lowers.push(msg.sender);\r\n        user.startBlock = block.number;\r\n        inviteUserInfoV1.push(msg.sender);\r\n        \r\n        emit InviteV1(msg.sender, user.upper, user.startBlock);\r\n\r\n        return true;\r\n    }\r\n\r\n    function inviteBatch(address[] memory _invitees) override external returns (uint, uint) {\r\n        uint len = _invitees.length;\r\n        require(len <= 100, ErrorCode.PARAMETER_TOO_LONG);\r\n        UserInfo storage user = inviteUserInfoV2[msg.sender];\r\n        if (0 == user.startBlock) {\r\n            user.upper = ZERO;\r\n            user.startBlock = block.number;\r\n            inviteUserInfoV1.push(msg.sender);\r\n                        \r\n            emit InviteV1(msg.sender, user.upper, user.startBlock);\r\n        }\r\n        uint count = 0;\r\n        for (uint i = 0; i < len; i++) {\r\n            if ((address(0) != _invitees[i]) && (msg.sender != _invitees[i])) {\r\n                UserInfo storage lower = inviteUserInfoV2[_invitees[i]];\r\n                if (0 == lower.startBlock) {\r\n                    lower.upper = msg.sender;\r\n                    lower.startBlock = block.number;\r\n                    user.lowers.push(_invitees[i]);\r\n                    inviteUserInfoV1.push(_invitees[i]);\r\n                    count++;\r\n\r\n                    emit InviteV1(_invitees[i], msg.sender, lower.startBlock);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (len, count);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"upper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"name\":\"InviteV1\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZERO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_inviter\",\"type\":\"address\"}],\"name\":\"acceptInvitation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_invitees\",\"type\":\"address[]\"}],\"name\":\"inviteBatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inviteCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"inviteLower1\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"inviteLower2\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"inviteLower2Count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"inviteUpper1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"inviteUpper2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"inviteUserInfoV1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"inviteUserInfoV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"upper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"YouswapInviteV1","CompilerVersion":"v0.7.4+commit.3f05b770","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://9e51e3a3874a3e9b516d3123cb937cd02d4d86e18c65f325518cf236c1c5d719"}]}