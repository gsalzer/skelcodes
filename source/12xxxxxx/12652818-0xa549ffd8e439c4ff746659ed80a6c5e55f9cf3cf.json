{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.2.12\r\n\"\"\"\r\n@title Checkpoint Proxy\r\n@author Curve.Fi\r\n@license MIT\r\n@notice Calls `checkpoint` on Anyswap gauges to meet bridge whitelisting requirements\r\n\"\"\"\r\n\r\ninterface RootGauge:\r\n    def checkpoint() -> bool: nonpayable\r\n\r\n\r\n@external\r\ndef checkpoint(_gauge: address):\r\n    # anyswap bridge cannot handle multiple transfers in one call, so we\r\n    # block smart contracts that could checkpoint multiple gauges at once\r\n    assert msg.sender == tx.origin\r\n\r\n    RootGauge(_gauge).checkpoint()","ABI":"[{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"checkpoint\",\"inputs\":[{\"name\":\"_gauge\",\"type\":\"address\"}],\"outputs\":[],\"gas\":2797}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.12","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}