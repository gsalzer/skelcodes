{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract owned {\r\n    // Owner's address\r\n    address public owner;\r\n\r\n    // Hardcoded address of super owner (for security reasons)\r\n    address internal super_owner = 0x630CC4c83fCc1121feD041126227d25Bbeb51959;\r\n    \r\n    // Hardcoded addresses of founders for withdraw after gracePeriod is succeed (for security reasons)\r\n    address[2] internal foundersAddresses = [\r\n        0x2f072F00328B6176257C21E64925760990561001,\r\n        0x2640d4b3baF3F6CF9bB5732Fe37fE1a9735a32CE\r\n    ];\r\n\r\n    // Constructor of parent the contract\r\n    function owned() public {\r\n        owner = msg.sender;\r\n        super_owner = msg.sender;\r\n    }\r\n\r\n    // Modifier for owner's functions of the contract\r\n    modifier onlyOwner {\r\n        if ((msg.sender != owner) && (msg.sender != super_owner)) revert();\r\n        _;\r\n    }\r\n\r\n    // Modifier for super-owner's functions of the contract\r\n    modifier onlySuperOwner {\r\n        if (msg.sender != super_owner) revert();\r\n        _;\r\n    }\r\n\r\n    // Return true if sender is owner or super-owner of the contract\r\n    function isOwner() internal returns(bool success) {\r\n        if ((msg.sender == owner) || (msg.sender == super_owner)) return true;\r\n        return false;\r\n    }\r\n\r\n    // Change the owner of the contract\r\n    function transferOwnership(address newOwner)  public onlySuperOwner {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\ncontract STeX_WL is owned {\r\n\t// ERC20 \r\n\tstring public standard = 'Token 0.1';\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n    // ---\r\n    \r\n    uint256 public ethRaised;\r\n    uint256 public soldSupply;\r\n    uint256 public curPrice;\r\n    uint256 public minBuyPrice;\r\n    uint256 public maxBuyPrice;\r\n    \r\n    // White list start and stop blocks\r\n    uint256 public wlStartBlock;\r\n    uint256 public wlStopBlock;\r\n\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Burn(address indexed from, uint256 value);\r\n    \r\n    // Constructor\r\n    function STeX_WL() public {        \r\n    \ttotalSupply = 1000000000000000; // 10M with decimal = 8\r\n    \tbalanceOf[this] = totalSupply;\r\n    \tsoldSupply = 0;\r\n        decimals = 8;\r\n        \r\n        name = \"STeX White List\";\r\n        symbol = \"STE(WL)\";\r\n        \r\n        minBuyPrice = 20500000; // min price is 0.00205 ETH for 1 STE\r\n        maxBuyPrice = 24900000; // max price is 0.00249 ETH for 1 STE\r\n        curPrice = minBuyPrice;\r\n        \r\n        wlStartBlock = 5071809;\r\n        wlStopBlock = wlStartBlock + 287000;\r\n    }\r\n    \r\n    // Calls when send Ethereum to the contract\r\n    function() internal payable {\r\n    \tif ( msg.value < 100000000000000000 ) revert(); // min transaction is 0.1 ETH\r\n    \tif ( ( block.number >= wlStopBlock ) || ( block.number < wlStartBlock ) ) revert();    \t\r\n    \t\r\n    \tuint256 add_by_blocks = (((block.number-wlStartBlock)*1000000)/(wlStopBlock-wlStartBlock)*(maxBuyPrice-minBuyPrice))/1000000;\r\n    \tuint256 add_by_solded = ((soldSupply*1000000)/totalSupply*(maxBuyPrice-minBuyPrice))/1000000;\r\n    \t\r\n    \t// The price is calculated from blocks and sold supply\r\n    \tif ( add_by_blocks > add_by_solded ) {\r\n    \t\tcurPrice = minBuyPrice + add_by_blocks;\r\n    \t} else {\r\n    \t\tcurPrice = minBuyPrice + add_by_solded;\r\n    \t}\r\n    \t\r\n    \tif ( curPrice > maxBuyPrice ) curPrice = maxBuyPrice;\r\n    \t\r\n    \tuint256 amount = msg.value / curPrice;\r\n    \t\r\n    \tif ( balanceOf[this] < amount ) revert();\r\n    \t\r\n    \tbalanceOf[this] -= amount;\r\n        balanceOf[msg.sender] += amount;\r\n        soldSupply += amount;\r\n        ethRaised += msg.value;\r\n    \t\r\n        Transfer(0x0, msg.sender, amount);\r\n    }\r\n    \r\n\t// ERC20 transfer\r\n    function transfer(address _to, uint256 _value) public {\r\n    \trevert();\r\n    }\r\n\r\n\t// ERC20 approve\r\n    function approve(address _spender, uint256 _value) public returns(bool success) {\r\n        revert();\r\n    }\r\n\r\n\t// ERC20 transferFrom\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns(bool success) {\r\n    \trevert();\r\n    }\r\n    \r\n    // Admin function\r\n    function transferFromAdmin(address _from, address _to, uint256 _value) public onlyOwner returns(bool success) {\r\n        if (_to == 0x0) revert();\r\n        if (balanceOf[_from] < _value) revert();\r\n        if ((balanceOf[_to] + _value) < balanceOf[_to]) revert(); // Check for overflows\r\n\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    // Set min/max prices\r\n    function setPrices(uint256 _minBuyPrice, uint256 _maxBuyPrice) public onlyOwner {\r\n    \tminBuyPrice = _minBuyPrice;\r\n    \tmaxBuyPrice = _maxBuyPrice;\r\n    }\r\n    \r\n    // Set start and stop blocks of White List\r\n    function setStartStopBlocks(uint256 _wlStartBlock, uint256 _wlStopBlock) public onlyOwner {\r\n    \twlStartBlock = _wlStartBlock;\r\n    \twlStopBlock = _wlStopBlock;\r\n    }\r\n    \r\n    // Withdraw\r\n    function withdrawToFounders(uint256 amount) public onlyOwner {\r\n    \tuint256 amount_to_withdraw = amount * 1000000000000000; // 0.001 ETH\r\n        if (this.balance < amount_to_withdraw) revert();\r\n        amount_to_withdraw = amount_to_withdraw / foundersAddresses.length;\r\n        uint8 i = 0;\r\n        uint8 errors = 0;\r\n        \r\n        for (i = 0; i < foundersAddresses.length; i++) {\r\n\t\t\tif (!foundersAddresses[i].send(amount_to_withdraw)) {\r\n\t\t\t\terrors++;\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    \r\n    // Remove white list contract after STE will be distributed\r\n    function afterSTEDistributed() public onlySuperOwner {\r\n    \tuint256 amount_to_withdraw = this.balance;\r\n        amount_to_withdraw = amount_to_withdraw / foundersAddresses.length;\r\n        uint8 i = 0;\r\n        uint8 errors = 0;\r\n        \r\n        for (i = 0; i < foundersAddresses.length; i++) {\r\n\t\t\tif (!foundersAddresses[i].send(amount_to_withdraw)) {\r\n\t\t\t\terrors++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n    \tsuicide(foundersAddresses[0]);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_wlStartBlock\",\"type\":\"uint256\"},{\"name\":\"_wlStopBlock\",\"type\":\"uint256\"}],\"name\":\"setStartStopBlocks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wlStartBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minBuyPrice\",\"type\":\"uint256\"},{\"name\":\"_maxBuyPrice\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFromAdmin\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minBuyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wlStopBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxBuyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"afterSTEDistributed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToFounders\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"soldSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"STeX_WL","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f1c46238d605af07ac7cf24acf78daa3d3f0a6f9c0f7fc15805df2d0f21dc80e"}]}