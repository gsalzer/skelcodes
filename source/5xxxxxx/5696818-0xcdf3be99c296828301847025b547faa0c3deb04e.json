{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n    contract Owned {\r\n\r\n        modifier onlyOwner { require(msg.sender == owner); _; }\r\n\r\n        address public owner;\r\n\r\n        function Owned() public { owner = msg.sender;}\r\n\r\n        function changeOwner(address _newOwner) public onlyOwner {\r\n            owner = _newOwner;\r\n        }\r\n    }\r\n\r\n    contract TokenController {\r\n\r\n        function onTransfer(address _from, address _to, uint _amount) public returns(bool);\r\n\r\n        function onApprove(address _owner, address _spender, uint _amount) public returns(bool);\r\n    }\r\n\r\n    contract ApproveAndCallFallBack {\r\n        function receiveApproval(address from, uint256 _amount, address _token, bytes _data) public;\r\n    }\r\n\r\n    contract KayoToken is Owned {\r\n\r\n        string public name;                \r\n        uint8 public decimals;             \r\n        string public symbol;              \r\n\r\n        struct  Checkpoint {\r\n\r\n            uint128 fromBlock;\r\n\r\n            uint128 value;\r\n        }\r\n\r\n        KayoToken public parentToken;\r\n\r\n        uint public parentSnapShotBlock;\r\n\r\n        uint public creationBlock;\r\n\r\n        mapping (address => Checkpoint[]) balances;\r\n\r\n        uint public preSaleTokenBalances;\r\n\r\n        mapping (address => mapping (address => uint256)) allowed;\r\n\r\n        Checkpoint[] totalSupplyHistory;\r\n\r\n        bool public tradeEnabled;\r\n        \r\n        bool public IsPreSaleEnabled = false;\r\n\r\n        bool public IsSaleEnabled = false;\r\n\r\n        bool public IsAirDropEnabled = false;\r\n        \r\n        address public owner;\r\n\r\n        address public airDropManager;\r\n        \r\n        uint public allowedAirDropTokens;\r\n\r\n        mapping (address => bool) public frozenAccount;\r\n        event FrozenFunds(address target, bool frozen);\r\n        \r\n        function KayoToken(\r\n            address _tokenFactory,\r\n            address _parentToken,\r\n            uint _parentSnapShotBlock,\r\n            string _tokenName,\r\n            uint8 _decimalUnits,\r\n            string _tokenSymbol,\r\n            bool _tradeEnabled\r\n        ) public {\r\n            owner = _tokenFactory;\r\n            name = _tokenName;                                 \r\n            decimals = _decimalUnits;                          \r\n            symbol = _tokenSymbol;                             \r\n            parentToken = KayoToken(_parentToken);\r\n            parentSnapShotBlock = _parentSnapShotBlock;\r\n            tradeEnabled = _tradeEnabled;\r\n            creationBlock = block.number;\r\n        }\r\n\r\n        function IsAirdrop() public view returns (bool result){\r\n            if(msg.sender == airDropManager)\r\n                return true;\r\n            else\r\n                return false;\r\n        }\r\n\r\n        function IsReleaseToken() public view returns(bool result){\r\n            if ((IsSaleEnabled == true || IsPreSaleEnabled == true) && msg.sender == owner)\r\n                return true;\r\n            else\r\n                return false;\r\n        }\r\n\r\n\r\n        function transfer(address _to, uint256 _amount) public returns (bool success) {\r\n            require(tradeEnabled);\r\n            transferFrom(msg.sender, _to, _amount);\r\n            return true;\r\n        }\r\n\r\n        function freezeAccount(address target, bool freeze) onlyOwner public{\r\n            frozenAccount[target] = freeze;\r\n            FrozenFunds(target, freeze);\r\n        }\r\n\r\n        function setPreSale (bool _value) onlyOwner public {\r\n            IsPreSaleEnabled = _value;\r\n        }\r\n\r\n        function setSale (bool _value) onlyOwner public {\r\n            IsSaleEnabled = _value;\r\n        }\r\n\r\n        function setAirDrop (bool _value) onlyOwner public {\r\n            IsAirDropEnabled = _value;\r\n        }\r\n\r\n        function setAirDropManager (address _address) onlyOwner public{\r\n            airDropManager = _address;\r\n        }\r\n\r\n        function setairDropManagerLimit(uint _amount) onlyOwner public returns (bool success){\r\n            allowedAirDropTokens = _amount;\r\n            approve(airDropManager, _amount);\r\n            return true;\r\n        }\r\n\r\n        function airDrop(address _to, uint256 _amount) public returns (bool success){\r\n            \r\n            require(IsAirDropEnabled);\r\n            require((_to != 0) && (_to != address(this)));\r\n\r\n            transferFrom(owner, _to, _amount);\r\n            return true;\r\n        }\r\n\r\n        function invest(address _to, uint256 _amount) public returns (bool success) {\r\n            \r\n            require((_to != 0) && (_to != address(this)));\r\n\r\n            if(IsPreSaleEnabled){\r\n                require(preSaleTokenBalances >= _amount);\r\n                preSaleTokenBalances = preSaleTokenBalances - _amount;\r\n            }\r\n            else if(!IsSaleEnabled){\r\n                revert();\r\n            }\r\n            \r\n            transferFrom(msg.sender, _to, _amount);\r\n            return true;\r\n        }\r\n\r\n        function transferFrom(address _from, address _to, uint _amount) public returns (bool success) {\r\n\r\n            if(IsReleaseToken() || IsAirdrop() || tradeEnabled == true){\r\n                if (_amount == 0) {\r\n                    Transfer(_from, _to, _amount);\r\n                    return;\r\n                }\r\n\r\n                if (msg.sender != owner) {\r\n                    require(allowed[_from][msg.sender] >= _amount);\r\n                    allowed[_from][msg.sender] -= _amount;\r\n                }\r\n\r\n                var previousBalanceFrom = balanceOfAt(_from, block.number);\r\n                var previousBalanceTo = balanceOfAt(_to, block.number);\r\n\r\n                require(previousBalanceFrom >= _amount);\r\n                require(previousBalanceTo + _amount >= previousBalanceTo);\r\n\r\n                updateValueAtNow(balances[msg.sender], previousBalanceFrom - _amount);\r\n                updateValueAtNow(balances[_to], previousBalanceTo + _amount);\r\n\r\n                Transfer(_from, _to, _amount);\r\n\r\n                return true;\r\n            }\r\n            else\r\n                revert();\r\n        }\r\n\r\n        function balanceOf(address _owner) public constant returns (uint256 tokenBalance) {\r\n            return balanceOfAt(_owner, block.number);\r\n        }\r\n\r\n        function approve(address _spender, uint256 _amount) public returns (bool success) {\r\n\r\n            require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\r\n\r\n            if (isValidAddress(owner)) {\r\n                require(TokenController(owner).onApprove(msg.sender, _spender, _amount));\r\n            }\r\n\r\n            allowed[msg.sender][_spender] = _amount;\r\n            Approval(msg.sender, _spender, _amount);\r\n            return true;\r\n        }\r\n\r\n        function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n            return allowed[_owner][_spender];\r\n        }\r\n\r\n        function approveAndCall(address _spender, uint256 _amount, bytes _extraData) public returns (bool success) {\r\n\r\n            require(approve(_spender, _amount));\r\n            ApproveAndCallFallBack(_spender).receiveApproval(msg.sender,_amount,this,_extraData);\r\n            return true;\r\n        }\r\n\r\n        function totalSupply() public constant returns (uint) {\r\n            return totalSupplyAt(block.number);\r\n        }\r\n\r\n        function balanceOfAt(address _owner, uint _blockNumber) public constant returns (uint) {\r\n\r\n            if ((balances[_owner].length == 0) || (balances[_owner][0].fromBlock > _blockNumber)) {\r\n                if (address(parentToken) != 0) {\r\n                    return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\r\n                } else {\r\n                    return 0;\r\n                }\r\n\r\n            } else {\r\n                return getValueAt(balances[_owner], _blockNumber);\r\n            }\r\n        }\r\n\r\n        function totalSupplyAt(uint _blockNumber) public constant returns(uint) {\r\n\r\n            if ((totalSupplyHistory.length == 0) || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\r\n                if (address(parentToken) != 0) {\r\n                    return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\r\n                } else {\r\n                    return 0;\r\n                }\r\n\r\n            } else {\r\n                return getValueAt(totalSupplyHistory, _blockNumber);\r\n            }\r\n        }\r\n\r\n        function generateTokens(address _owner, uint _amount) public onlyOwner returns (bool) {\r\n            uint curTotalSupply = totalSupply();\r\n            require(curTotalSupply + _amount >= curTotalSupply);\r\n            uint previousBalanceTo = balanceOf(_owner);\r\n            require(previousBalanceTo + _amount >= previousBalanceTo);\r\n\r\n            updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\r\n            updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\r\n\r\n            uint256 _bal = _amount * 30;\r\n            preSaleTokenBalances = preSaleTokenBalances + _bal / 100;\r\n            Transfer(0, _owner, _amount);\r\n            return true;\r\n        }\r\n\r\n        function destroyTokens(address _address, uint _amount) onlyOwner public returns (bool) {\r\n            uint curTotalSupply = totalSupply();\r\n            require(curTotalSupply >= _amount);\r\n            uint previousBalanceFrom = balanceOf(_address);\r\n            require(previousBalanceFrom >= _amount);\r\n            updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\r\n            updateValueAtNow(balances[_address], previousBalanceFrom - _amount);\r\n            Transfer(_address, owner, _amount);\r\n            return true;\r\n        }\r\n        \r\n        function destroyAllTokens() onlyOwner public returns (bool) {\r\n            uint curBalance = balanceOfAt(msg.sender, block.number);\r\n            updateValueAtNow(totalSupplyHistory, 0);\r\n            updateValueAtNow(balances[msg.sender], 0);\r\n            preSaleTokenBalances = 0;\r\n            Transfer(msg.sender, 0, curBalance);\r\n            return true;\r\n        }\r\n\r\n        function enableTransfers(bool _tradeEnabled) public onlyOwner {\r\n            tradeEnabled = _tradeEnabled;\r\n        }\r\n\r\n        function getValueAt(Checkpoint[] storage checkpoints, uint _block) constant internal returns (uint) {\r\n            \r\n            if (checkpoints.length == 0) return 0;\r\n\r\n            if (_block >= checkpoints[checkpoints.length-1].fromBlock)\r\n                return checkpoints[checkpoints.length-1].value;\r\n\r\n            if (_block < checkpoints[0].fromBlock) return 0;\r\n\r\n            uint minValue = 0;\r\n            uint maximum = checkpoints.length-1;\r\n            while (maximum > minValue) {\r\n                uint midddle = (maximum + minValue + 1)/ 2;\r\n                if (checkpoints[midddle].fromBlock<=_block) {\r\n                    minValue = midddle;\r\n                } else {\r\n                    maximum = midddle-1;\r\n                }\r\n            }\r\n            return checkpoints[minValue].value;\r\n        }\r\n\r\n        function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value) internal  {\r\n            if ((checkpoints.length == 0) || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\r\n                Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\r\n                newCheckPoint.fromBlock =  uint128(block.number);\r\n                newCheckPoint.value = uint128(_value);\r\n            } else {\r\n                Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\r\n                oldCheckPoint.value = uint128(_value);\r\n            }\r\n        }\r\n\r\n        function isValidAddress(address _addr) constant internal returns(bool) {\r\n            uint size;\r\n            if (_addr == 0) return false;\r\n            assembly {\r\n                size := extcodesize(_addr)\r\n            }\r\n            return size > 0;\r\n        }\r\n\r\n        function min(uint a, uint b) pure internal returns (uint) {\r\n            return a < b ? a : b;\r\n        }\r\n\r\n        event Transfer(address indexed _from, address indexed _to, uint256 _amount);\r\n        event Approval(address indexed _owner, address indexed _spender, uint256 _amount);\r\n\r\n    }","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"airDrop\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setPreSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsSaleEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setAirDropManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airDropManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleTokenBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroyAllTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowedAirDropTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"tokenBalance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsAirdrop\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsAirDropEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setAirDrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsPreSaleEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"invest\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentSnapShotBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tradeEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IsReleaseToken\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tradeEnabled\",\"type\":\"bool\"}],\"name\":\"enableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setairDropManagerLimit\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenFactory\",\"type\":\"address\"},{\"name\":\"_parentToken\",\"type\":\"address\"},{\"name\":\"_parentSnapShotBlock\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_tradeEnabled\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"KayoToken","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000b35a81be06446c24d5104b14e08400317bbf17f50000000000000000000000002eb1a3b71bee2bc135af75436ed5cd8cceac3e96000000000000000000000000000000000000000000000000000000000056aa5d00000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b4b61796f4372656469747300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034b594f0000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://1c73c1e8c12a308330b8c43f78ba91ec9524572f2c65f6b06fedc8f87ef9acad"}]}