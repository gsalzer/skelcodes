{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\nThis Contract is free software: you can redistribute it and/or\r\nmodify it under the terms of the GNU lesser General Public License as published\r\nby the Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\nThis Contract is distributed WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\nGNU lesser General Public License for more details.\r\nYou should have received a copy of the GNU lesser General Public License\r\n<http://www.gnu.org/licenses/>.\r\n*/\r\n\r\npragma solidity ^0.4.18;\r\n\r\ncontract ERC20TokenCPN\r\n{\r\n\r\n///PARAMETRS///\r\n\r\n    ///ERC20 PARAMETRS///\r\n    \r\n    string public constant name = \"STAR COUPON\";\r\n    string public constant symbol = \"CPN\";\r\n    uint8 public constant decimals = 0;\r\n    \r\n    ///*ERC20 PARAMETRS///\r\n\r\n    address public regulator;\r\n    uint8 public regulatorStatus; /* 0 - stop; 1 - start; 2 - constant regulator and constant status 'start'; */\r\n    uint internal amount;\r\n\r\n    struct agent\r\n    {\r\n        uint balance;\r\n        mapping (address => uint) allowed;\r\n        uint8 permission; /* 0 - user; 1 - changeAgentPermission () / changeRegulator () / changeRegulatoryStatus (); 2 - changeRegulatoryStatus () '2'; 3 - destroy; */\r\n    }\r\n    mapping (address => agent) internal agents;\r\n\r\n///*PARAMETRS///\r\n\r\n///EVENTS///\r\n    \r\n    ///ERC20 EVENTS///\r\n\r\n    event Transfer (address indexed _from, address indexed _to, uint _value);\r\n    event Approval (address indexed _owner, address indexed _spender, uint _value);\r\n\r\n    ///*ERC20 EVENTS///\r\n\r\n    event Management (address indexed _called, uint8 _function, address indexed _dataA, uint8 dataB);\r\n    event Mint (address indexed _called, address indexed _to, uint _value);\r\n    event Burn (address indexed called, address indexed _to, uint _value);\r\n\r\n///EVENTS///\r\n\r\n///FUNCTIONS///\r\n\r\n    function ERC20TokenCPN ()\r\n    {\r\n        agents[msg.sender].permission = 1;\r\n        changeRegulator(msg.sender);\r\n        changeRegulatorStatus(1);\r\n        mint (msg.sender, 100000);\r\n        changeRegulatorStatus(0);\r\n    }\r\n\r\n    function changeAgentPermission (address _agent, uint8 _permission) public returns (bool success)\r\n    {\r\n        if (regulatorStatus != 2)\r\n        {\r\n            if ((agents[msg.sender].permission == 1) && (_permission >= 0 && _permission <= 3) && (msg.sender != _agent))\r\n            {\r\n                agents[_agent].permission = _permission;\r\n                Management (msg.sender, 1, _agent, _permission);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    function changeRegulator (address _regulator) public returns (bool success)\r\n    {\r\n        if (regulatorStatus != 2)\r\n        {\r\n            if (agents[msg.sender].permission == 1)\r\n            {\r\n                regulator = _regulator;\r\n                Management (msg.sender, 2, _regulator, 0);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    function changeRegulatorStatus (uint8 _status) public returns (bool success)\r\n    {\r\n        if (regulatorStatus != 2)\r\n        {\r\n            if (((agents[msg.sender].permission == 1) && (_status == 0 || _status == 1)) || ((agents[msg.sender].permission == 2) && (_status == 2)))\r\n            {\r\n                regulatorStatus = _status;\r\n                Management (msg.sender, 3, regulator, _status);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    function destroy (address _to) public\r\n    {\r\n        if ((agents[msg.sender].permission == 3) && (regulatorStatus != 2))\r\n        {\r\n            selfdestruct(_to);\r\n        }\r\n    }\r\n    \r\n    function agentPermission (address _agent) public constant returns (uint8 permission)\r\n    {\r\n        return agents[_agent].permission;\r\n    }\r\n\r\n    function mint (address _to, uint _value) public returns (bool success)\r\n    {\r\n        if ((msg.sender == regulator) && (regulatorStatus == 1 || regulatorStatus == 2) && (amount + _value > amount))\r\n        {\r\n            amount += _value;\r\n            agents[msg.sender].balance += _value;\r\n            transfer (_to, _value);\r\n            Mint (msg.sender, _to, _value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function burn (address _to, uint _value) public returns (bool success)\r\n    {\r\n        if ((msg.sender == regulator) && (regulatorStatus == 1 || regulatorStatus == 2) && (agents[_to].balance >= _value))\r\n        {\r\n            Transfer (_to, msg.sender, _value);\r\n            agents[_to].balance -= _value;\r\n            amount -= _value;\r\n            Burn (msg.sender, _to, _value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    ///ERC20 FUNCTIONS///\r\n\r\n    function totalSupply () public constant returns (uint)\r\n    {\r\n        return amount;\r\n    }\r\n\r\n    function balanceOf (address _owner) public constant returns (uint balance)\r\n    {\r\n        return agents[_owner].balance;\r\n    }\r\n\r\n    function transfer (address _to, uint _value) public returns (bool success)\r\n    {\r\n        if (agents[msg.sender].balance >= _value && agents[_to].balance + _value >= agents[_to].balance)\r\n        {\r\n            agents[msg.sender].balance -= _value; \r\n            agents[_to].balance += _value;\r\n            Transfer (msg.sender, _to, _value);\r\n            return true;\r\n        } \r\n        return false;\r\n    }\r\n    \r\n    function transferFrom (address _from, address _to, uint _value) public returns (bool success)\r\n    {\r\n        if (agents[_from].allowed[msg.sender] >= _value && agents[_from].balance >= _value && agents[_to].balance + _value >= agents[_to].balance)\r\n        {\r\n            agents[_from].allowed[msg.sender] -= _value;\r\n            agents[_from].balance -= _value; \r\n            agents[_to].balance += _value;\r\n            Transfer (_from, _to, _value);\r\n            return true;\r\n        } \r\n        return false;\r\n    }\r\n\r\n    function approve (address _spender, uint _value) public returns (bool success)\r\n    {\r\n        if (_value > 0)\r\n        {\r\n            agents[msg.sender].allowed[_spender] = _value;\r\n            Approval (msg.sender, _spender, _value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function allowance (address _owner, address _spender) public constant returns (uint remaining)\r\n    {\r\n        return agents[_owner].allowed[_spender];\r\n    }\r\n\r\n    ///*ERC20 FUNCTIONS///\r\n\r\n///FUNCTIONS///\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_regulator\",\"type\":\"address\"}],\"name\":\"changeRegulator\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_agent\",\"type\":\"address\"},{\"name\":\"_permission\",\"type\":\"uint8\"}],\"name\":\"changeAgentPermission\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"changeRegulatorStatus\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"agentPermission\",\"outputs\":[{\"name\":\"permission\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"regulator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"regulatorStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_called\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_function\",\"type\":\"uint8\"},{\"indexed\":true,\"name\":\"_dataA\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"dataB\",\"type\":\"uint8\"}],\"name\":\"Management\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_called\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"called\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"ERC20TokenCPN","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fb0a102bead134db70fd954cba510fe368575d1ae4740cdc036ff45ff390c2ac"}]}