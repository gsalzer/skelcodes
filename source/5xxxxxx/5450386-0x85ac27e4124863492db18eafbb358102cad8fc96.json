{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.21;\r\n\r\ncontract CrowdsaleProxyTarget {\r\n    function isActive() public returns(bool);\r\n    function initialize(address _owner, address _token, address _familyOwner, address _personalOwner) public;\r\n    address public token;\r\n}\r\n\r\n/**\r\n * The CrowdsaleProxy contract which uses crowdsale implementation deployed at\r\n * target address. This constuction helps to make Crowdsale code upgradable.\r\n */\r\ncontract CrowdsaleProxy {\r\n    bytes32 constant TARGET_POSITION = keccak256(\"CrowdsaleProxy.target\");\r\n    bytes32 constant OWNER_POSITION = keccak256(\"CrowdsaleProxy.owner\");\r\n\r\n    event Upgraded(address indexed target);\r\n\r\n    modifier _onlyProxyOwner() {\r\n        require(msg.sender == ___proxyOwner());\r\n        _;\r\n    }\r\n\r\n    function CrowdsaleProxy(address _target) public {\r\n        require(_target != 0x0);\r\n        bytes32 position = OWNER_POSITION;\r\n        assembly { sstore(position, caller) }\r\n        ___setTarget(_target);\r\n    }\r\n\r\n    function ___initialize(address _token, address _familyOwner, address _personalOwner) public {\r\n        CrowdsaleProxyTarget(this).initialize(msg.sender, _token, _familyOwner, _personalOwner);\r\n    }\r\n\r\n    function () public payable {\r\n        address _target = ___proxyTarget();\r\n        assembly {\r\n            let ptr := mload(0x40)\r\n            calldatacopy(ptr, 0, calldatasize)\r\n            let success := delegatecall(sub(gas, 10000), _target, ptr, calldatasize, 0, 0)\r\n            let retSz := returndatasize\r\n            returndatacopy(ptr, 0, retSz)\r\n\r\n            switch success\r\n            case 0 { revert(ptr, retSz) }\r\n            default { return(ptr, retSz) }\r\n        }\r\n    }\r\n\r\n    function ___coinAddress() external view returns (address) {\r\n        return CrowdsaleProxyTarget(this).token();\r\n    }\r\n\r\n    function ___isActive() internal returns (bool res) {\r\n        res = CrowdsaleProxyTarget(this).isActive();\r\n    }\r\n\r\n    function ___proxyOwner() public view returns (address owner) {\r\n        bytes32 position = OWNER_POSITION;\r\n        assembly {\r\n            owner := sload(position)\r\n        }\r\n    }\r\n\r\n    function ___setProxyOwner(address newOwner) _onlyProxyOwner public {\r\n        bytes32 position = OWNER_POSITION;\r\n        assembly {\r\n            sstore(position, newOwner)\r\n        }\r\n    }\r\n\r\n    function ___proxyTarget() public view returns (address target) {\r\n        bytes32 position = TARGET_POSITION;\r\n        assembly {\r\n            target := sload(position)\r\n        }\r\n    }\r\n\r\n    function ___setTarget(address target) internal {\r\n        bytes32 position = TARGET_POSITION;\r\n        assembly {\r\n            sstore(position, target)\r\n        }\r\n    }\r\n\r\n    function ___upgradeTo(address newTarget) public _onlyProxyOwner {\r\n        require(!___isActive());\r\n        require(___proxyTarget() != newTarget);\r\n        ___setTarget(newTarget);\r\n        emit Upgraded(___proxyTarget());\r\n    }\r\n\r\n    function ___upgradeToAndCall(address newTarget, bytes data) payable public _onlyProxyOwner {\r\n        ___upgradeTo(newTarget);\r\n        require(address(this).call.value(msg.value)(data));\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"___proxyOwner\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_familyOwner\",\"type\":\"address\"},{\"name\":\"_personalOwner\",\"type\":\"address\"}],\"name\":\"___initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTarget\",\"type\":\"address\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"___upgradeToAndCall\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"___proxyTarget\",\"outputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"___coinAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"___upgradeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"___setProxyOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}]","ContractName":"CrowdsaleProxy","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000025301ddb71f1342ddee1aa4829d450eacafdaf56","Library":"","SwarmSource":"bzzr://75b44c680a08dede2ebc3f3454291ad9f88f5a9c64ba2f1e8df6383dbde2a435"}]}