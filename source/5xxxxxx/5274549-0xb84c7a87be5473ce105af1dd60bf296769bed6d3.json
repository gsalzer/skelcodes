{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\ncontract InterfaceContentCreatorUniverse {\r\n  function ownerOf(uint256 _tokenId) public view returns (address _owner);\r\n  function priceOf(uint256 _tokenId) public view returns (uint256 price);\r\n  function getNextPrice(uint price, uint _tokenId) public pure returns (uint);\r\n  function lastSubTokenBuyerOf(uint tokenId) public view returns(address);\r\n  function lastSubTokenCreatorOf(uint tokenId) public view returns(address);\r\n\r\n  //\r\n  function createCollectible(uint256 tokenId, uint256 _price, address creator, address owner) external ;\r\n}\r\n\r\ncontract InterfaceYCC {\r\n  function payForUpgrade(address user, uint price) external  returns (bool success);\r\n  function mintCoinsForOldCollectibles(address to, uint256 amount, address universeOwner) external  returns (bool success);\r\n  function tradePreToken(uint price, address buyer, address seller, uint burnPercent, address universeOwner) external;\r\n  function payoutForMining(address user, uint amount) external;\r\n  uint256 public totalSupply;\r\n}\r\n\r\ncontract InterfaceMining {\r\n  function createMineForToken(uint tokenId, uint level, uint xp, uint nextLevelBreak, uint blocknumber) external;\r\n  function payoutMining(uint tokenId, address owner, address newOwner) external;\r\n  function levelUpMining(uint tokenId) external;\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Owned {\r\n  // The addresses of the accounts (or contracts) that can execute actions within each roles.\r\n  address public ceoAddress;\r\n  address public cooAddress;\r\n  address private newCeoAddress;\r\n  address private newCooAddress;\r\n\r\n\r\n  function Owned() public {\r\n      ceoAddress = msg.sender;\r\n      cooAddress = msg.sender;\r\n  }\r\n\r\n  /*** ACCESS MODIFIERS ***/\r\n  /// @dev Access modifier for CEO-only functionality\r\n  modifier onlyCEO() {\r\n    require(msg.sender == ceoAddress);\r\n    _;\r\n  }\r\n\r\n  /// @dev Access modifier for COO-only functionality\r\n  modifier onlyCOO() {\r\n    require(msg.sender == cooAddress);\r\n    _;\r\n  }\r\n\r\n  /// Access modifier for contract owner only functionality\r\n  modifier onlyCLevel() {\r\n    require(\r\n      msg.sender == ceoAddress ||\r\n      msg.sender == cooAddress\r\n    );\r\n    _;\r\n  }\r\n\r\n  /// @dev Assigns a new address to act as the CEO. Only available to the current CEO.\r\n  /// @param _newCEO The address of the new CEO\r\n  function setCEO(address _newCEO) public onlyCEO {\r\n    require(_newCEO != address(0));\r\n    newCeoAddress = _newCEO;\r\n  }\r\n\r\n  /// @dev Assigns a new address to act as the COO. Only available to the current COO.\r\n  /// @param _newCOO The address of the new COO\r\n  function setCOO(address _newCOO) public onlyCEO {\r\n    require(_newCOO != address(0));\r\n    newCooAddress = _newCOO;\r\n  }\r\n\r\n  function acceptCeoOwnership() public {\r\n      require(msg.sender == newCeoAddress);\r\n      require(address(0) != newCeoAddress);\r\n      ceoAddress = newCeoAddress;\r\n      newCeoAddress = address(0);\r\n  }\r\n\r\n  function acceptCooOwnership() public {\r\n      require(msg.sender == newCooAddress);\r\n      require(address(0) != newCooAddress);\r\n      cooAddress = newCooAddress;\r\n      newCooAddress = address(0);\r\n  }\r\n\r\n  mapping (address => bool) public youCollectContracts;\r\n  function addYouCollectContract(address contractAddress, bool active) public onlyCOO {\r\n    youCollectContracts[contractAddress] = active;\r\n  }\r\n  modifier onlyYCC() {\r\n    require(youCollectContracts[msg.sender]);\r\n    _;\r\n  }\r\n\r\n  InterfaceYCC ycc;\r\n  InterfaceContentCreatorUniverse yct;\r\n  InterfaceMining ycm;\r\n  function setMainYouCollectContractAddresses(address yccContract, address yctContract, address ycmContract, address[] otherContracts) public onlyCOO {\r\n    ycc = InterfaceYCC(yccContract);\r\n    yct = InterfaceContentCreatorUniverse(yctContract);\r\n    ycm = InterfaceMining(ycmContract);\r\n    youCollectContracts[yccContract] = true;\r\n    youCollectContracts[yctContract] = true;\r\n    youCollectContracts[ycmContract] = true;\r\n    for (uint16 index = 0; index < otherContracts.length; index++) {\r\n      youCollectContracts[otherContracts[index]] = true;\r\n    }\r\n  }\r\n  function setYccContractAddress(address yccContract) public onlyCOO {\r\n    ycc = InterfaceYCC(yccContract);\r\n    youCollectContracts[yccContract] = true;\r\n  }\r\n  function setYctContractAddress(address yctContract) public onlyCOO {\r\n    yct = InterfaceContentCreatorUniverse(yctContract);\r\n    youCollectContracts[yctContract] = true;\r\n  }\r\n  function setYcmContractAddress(address ycmContract) public onlyCOO {\r\n    ycm = InterfaceMining(ycmContract);\r\n    youCollectContracts[ycmContract] = true;\r\n  }\r\n\r\n}\r\n\r\ncontract TransferInterfaceERC721YC {\r\n  function transferToken(address to, uint256 tokenId) public returns (bool success);\r\n}\r\ncontract TransferInterfaceERC20 {\r\n  function transfer(address to, uint tokens) public returns (bool success);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ConsenSys/Tokens/blob/master/contracts/eip20/EIP20.sol\r\n// ----------------------------------------------------------------------------\r\ncontract YouCollectBase is Owned {\r\n  using SafeMath for uint256;\r\n\r\n  event RedButton(uint value, uint totalSupply);\r\n\r\n  // Payout\r\n  function payout(address _to) public onlyCLevel {\r\n    _payout(_to, this.balance);\r\n  }\r\n  function payout(address _to, uint amount) public onlyCLevel {\r\n    if (amount>this.balance)\r\n      amount = this.balance;\r\n    _payout(_to, amount);\r\n  }\r\n  function _payout(address _to, uint amount) private {\r\n    if (_to == address(0)) {\r\n      ceoAddress.transfer(amount);\r\n    } else {\r\n      _to.transfer(amount);\r\n    }\r\n  }\r\n\r\n  // ------------------------------------------------------------------------\r\n  // Owner can transfer out any accidentally sent ERC20 tokens\r\n  // ------------------------------------------------------------------------\r\n  function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyCEO returns (bool success) {\r\n      return TransferInterfaceERC20(tokenAddress).transfer(ceoAddress, tokens);\r\n  }\r\n}\r\n\r\n\r\ncontract InterfaceSpawn {\r\n    uint public totalVotes;\r\n    function getVotes(uint id) public view returns (uint _votes);\r\n}\r\n\r\ncontract RocketsAndResources is YouCollectBase {\r\n    InterfaceSpawn subcontinentDiscoveryVoting;\r\n\r\n    event RocketLaunch(uint _rocketTokenId);\r\n    event RocketAddFunds(uint _rocketTokenId, uint _res, uint _yccAmount, address _sender);\r\n    event ResourcesDiscovered(uint _cityTokenId);\r\n    event ResourcesTransfered(uint cityTokenId, uint _rocketTokenId, uint _res, uint _count);\r\n\r\n    // ---------------------------\r\n    // Configuration    \r\n    bool public contractActive = false;\r\n\r\n    uint discoveryCooldownMin = 1500;\r\n    uint discoveryCooldownMax = 6000;\r\n    uint discoveryPriceMin =  2000000000000000000000000;\r\n    uint discoveryPriceMax = 25000000000000000000000000;\r\n\r\n    uint rocketTravelTimeA = 10000;         // in resource-traveltime-formula A/x\r\n    uint rocketTravelTimeMinBlocks = 24000; // added to traveltimes of resources\r\n    uint rocketEarliestLaunchTime;\r\n    // ---------------------------\r\n\r\n    mapping (uint => uint) discoveryLastBlock;\r\n    \r\n    mapping (uint => uint[]) cityResourceRichness;  // eg [1, 6, 0, 0] --- gets added to resource-counts on discovery\r\n    mapping (uint => uint[]) cityResourceCount;\r\n    \r\n\r\n    mapping (uint => uint[]) rocketResourceCount;\r\n    mapping (uint => uint[]) rocketResourceYccFunds;\r\n    mapping (uint => uint[]) rocketResourcePrices;\r\n\r\n    mapping (uint => uint) rocketLaunchBlock;           // when owner launched the rocket\r\n    mapping (uint => uint) rocketTravelTimeAtLaunch;    // when launched, we record the travel time (in case we change params in the formula)\r\n    mapping (uint => uint) rocketTravelTimeIncrease;\r\n    \r\n    uint64 constant MAX_SUBCONTINENT_INDEX = 10000000000000;\r\n    \r\n    function RocketsAndResources() public {\r\n        rocketEarliestLaunchTime = block.number + 36000; // earliest launch is 6 days after contract deploy\r\n    }\r\n\r\n    function setSubcontinentDiscoveryVotingContract(address spawnContract) public onlyCOO {\r\n        subcontinentDiscoveryVoting = InterfaceSpawn(spawnContract);\r\n    }\r\n\r\n    function setContractActive(bool contractActive_) public onlyCOO {\r\n        contractActive = contractActive_;\r\n    }\r\n\r\n    function setConfiguration(\r\n        uint discoveryCooldownMin_,\r\n        uint discoveryCooldownMax_,\r\n        uint discoveryPriceMin_,\r\n        uint discoveryPriceMax_,\r\n        uint rocketEarliestLaunchTime_,\r\n        uint rocketTravelTimeA_,\r\n        uint rocketTravelTimeMinBlocks_\r\n    ) public onlyYCC \r\n    {\r\n        discoveryCooldownMin = discoveryCooldownMin_;\r\n        discoveryCooldownMax = discoveryCooldownMax_;\r\n        discoveryPriceMin = discoveryPriceMin_;\r\n        discoveryPriceMax = discoveryPriceMax_;\r\n        rocketEarliestLaunchTime = rocketEarliestLaunchTime_;\r\n        rocketTravelTimeA = rocketTravelTimeA_;\r\n        rocketTravelTimeMinBlocks = rocketTravelTimeMinBlocks_;\r\n    }\r\n\r\n    function setCityValues(uint[] cityTokenIds_, uint resourceLen_, uint[] resourceRichness_, uint[] resourceCounts_) public onlyYCC {\r\n        uint len = cityTokenIds_.length;\r\n        for (uint i = 0; i < len; i++) {\r\n            uint city = cityTokenIds_[i];\r\n            uint resourceBaseIdx = i * resourceLen_;\r\n            cityResourceRichness[city] = new uint[](resourceLen_);\r\n            cityResourceCount[city] = new uint[](resourceLen_);\r\n            for (uint j = 0; j < resourceLen_; j++) {\r\n                cityResourceRichness[city][j] = resourceRichness_[resourceBaseIdx + j];\r\n                cityResourceCount[city][j] = resourceCounts_[resourceBaseIdx + j];\r\n            }\r\n        }\r\n    }\r\n\r\n    function setRocketValues(uint[] rocketTokenIds_, uint resourceLen_, uint[] resourceYccFunds_, uint[] resourcePrices_, uint[] resourceCounts_) public onlyYCC {\r\n        uint len = rocketTokenIds_.length;\r\n        for (uint i = 0; i < len; i++) {\r\n            uint rocket = rocketTokenIds_[i];\r\n            uint resourceBaseIdx = i * resourceLen_;\r\n            rocketResourceCount[rocket] = new uint[](resourceLen_);\r\n            rocketResourcePrices[rocket] = new uint[](resourceLen_);\r\n            rocketResourceYccFunds[rocket] = new uint[](resourceLen_);\r\n            for (uint j = 0; j < resourceLen_; j++) {\r\n                rocketResourceCount[rocket][j] = resourceCounts_[resourceBaseIdx + j];\r\n                rocketResourcePrices[rocket][j] = resourcePrices_[resourceBaseIdx + j];\r\n                rocketResourceYccFunds[rocket][j] = resourceYccFunds_[resourceBaseIdx + j];\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCityResources(uint cityTokenId_) public view returns (uint[] _resourceCounts) {\r\n        _resourceCounts = cityResourceCount[cityTokenId_];\r\n    }\r\n\r\n    function getCityResourceRichness(uint cityTokenId_) public onlyYCC view returns (uint[] _resourceRichness) {\r\n        _resourceRichness = cityResourceRichness[cityTokenId_];\r\n    }\r\n\r\n    function cityTransferResources(uint cityTokenId_, uint rocketTokenId_, uint res_, uint count_) public {\r\n        require(contractActive);\r\n        require(yct.ownerOf(cityTokenId_)==msg.sender);\r\n\r\n        uint yccAmount = rocketResourcePrices[rocketTokenId_][res_] * count_;\r\n        \r\n        require(cityResourceCount[cityTokenId_][res_] >= count_);\r\n        require(rocketResourceYccFunds[rocketTokenId_][res_] >= yccAmount);\r\n\r\n        cityResourceCount[cityTokenId_][res_] -= count_;\r\n        rocketResourceCount[rocketTokenId_][res_] += count_;\r\n        rocketResourceYccFunds[rocketTokenId_][res_] -= yccAmount;\r\n\r\n        ycc.payoutForMining(msg.sender, yccAmount);\r\n\r\n        ResourcesTransfered(cityTokenId_, rocketTokenId_, res_, count_);\r\n    }\r\n    \r\n    /*\r\n        Resource Discovery\r\n    */\r\n    function discoveryCooldown(uint cityTokenId_) public view returns (uint _cooldownBlocks) {\r\n        uint totalVotes = subcontinentDiscoveryVoting.totalVotes();\r\n        if (totalVotes <= 0) \r\n            totalVotes = 1;\r\n        uint range = discoveryCooldownMax-discoveryCooldownMin;\r\n        uint subcontinentId = cityTokenId_ % MAX_SUBCONTINENT_INDEX;\r\n        _cooldownBlocks = range - (subcontinentDiscoveryVoting.getVotes(subcontinentId).mul(range)).div(totalVotes) + discoveryCooldownMin;\r\n    }\r\n    function discoveryPrice(uint cityTokenId_) public view returns (uint _price) {\r\n        uint totalVotes = subcontinentDiscoveryVoting.totalVotes();\r\n        if (totalVotes <= 0) \r\n            totalVotes = 1;\r\n        uint range = discoveryPriceMax-discoveryPriceMin;\r\n        uint subcontinentId = cityTokenId_ % MAX_SUBCONTINENT_INDEX;\r\n        _price = range - (subcontinentDiscoveryVoting.getVotes(subcontinentId).mul(range)).div(totalVotes) + discoveryPriceMin;\r\n    }\r\n\r\n    function discoveryBlocksUntilAllowed(uint cityTokenId_) public view returns (uint _blocks) {\r\n        uint blockNextDiscoveryAllowed = discoveryLastBlock[cityTokenId_] + discoveryCooldown(cityTokenId_);\r\n        if (block.number > blockNextDiscoveryAllowed) {\r\n            _blocks = 0;\r\n        } else {\r\n            _blocks = blockNextDiscoveryAllowed - block.number;\r\n        }\r\n    }\r\n    \r\n    function discoverResources(uint cityTokenId_) public {\r\n        require(contractActive);\r\n        require(discoveryBlocksUntilAllowed(cityTokenId_) == 0);\r\n\r\n        uint yccAmount = this.discoveryPrice(cityTokenId_);\r\n        ycc.payForUpgrade(msg.sender, yccAmount);\r\n        \r\n        discoveryLastBlock[cityTokenId_] = block.number;\r\n        \r\n        uint resourceRichnessLen = cityResourceRichness[cityTokenId_].length;\r\n        for (uint i = 0; i < resourceRichnessLen; i++) {\r\n            cityResourceCount[cityTokenId_][i] += cityResourceRichness[cityTokenId_][i];\r\n        }\r\n        ResourcesDiscovered(cityTokenId_);\r\n    }\r\n    \r\n    /*\r\n        Rockets\r\n    */\r\n    function rocketTravelTimeByResource(uint rocketTokenId_, uint res_) public view returns (uint _blocks) {\r\n        _blocks = rocketTravelTimeA * 6000 / rocketResourceCount[rocketTokenId_][res_];\r\n    }\r\n    function rocketTravelTime(uint rocketTokenId_) public view returns (uint _travelTimeBlocks) {\r\n        _travelTimeBlocks = rocketTravelTimeMinBlocks + rocketTravelTimeIncrease[rocketTokenId_];\r\n        \r\n        uint resourceLen = rocketResourceCount[rocketTokenId_].length;\r\n        for (uint i = 0; i < resourceLen; i++) {\r\n            _travelTimeBlocks += rocketTravelTimeA * 6000 / rocketResourceCount[rocketTokenId_][i];\r\n        }\r\n    }\r\n    function rocketBlocksUntilAllowedToLaunch() public view returns (uint _blocksUntilAllowed) {\r\n        if (block.number > rocketEarliestLaunchTime) {\r\n            _blocksUntilAllowed = 0;\r\n        } else {\r\n            _blocksUntilAllowed = rocketEarliestLaunchTime - block.number;\r\n        }\r\n    }\r\n    function rocketIsLaunched(uint rocketTokenId_) public view returns (bool _isLaunched) { \r\n        _isLaunched = rocketLaunchBlock[rocketTokenId_] > 0;\r\n    }\r\n    function rocketArrivalTime(uint rocketTokenId_) public view returns (uint) {\r\n        require(rocketLaunchBlock[rocketTokenId_] > 0);\r\n        return rocketLaunchBlock[rocketTokenId_] + rocketTravelTimeAtLaunch[rocketTokenId_];\r\n    }\r\n    function increaseArrivalTime(uint rocketTokenId_, uint blocks) public onlyYCC {\r\n        if (rocketLaunchBlock[rocketTokenId_] > 0)\r\n            rocketTravelTimeAtLaunch[rocketTokenId_] = rocketTravelTimeAtLaunch[rocketTokenId_] + blocks;\r\n        else\r\n            rocketTravelTimeIncrease[rocketTokenId_] = rocketTravelTimeIncrease[rocketTokenId_] + blocks;\r\n    }\r\n    function decreaseArrivalTime(uint rocketTokenId_, uint blocks) public onlyYCC {\r\n        if (rocketLaunchBlock[rocketTokenId_] > 0)\r\n            rocketTravelTimeAtLaunch[rocketTokenId_] = rocketTravelTimeAtLaunch[rocketTokenId_] - blocks;\r\n        else\r\n            rocketTravelTimeIncrease[rocketTokenId_] = rocketTravelTimeIncrease[rocketTokenId_] - blocks;\r\n    }\r\n    function rocketTimeUntilMoon(uint rocketTokenId_) public view returns (uint _untilMoonBlocks) {\r\n        uint arrivalTime = rocketArrivalTime(rocketTokenId_);\r\n        if (block.number > arrivalTime) {\r\n            _untilMoonBlocks = 0;\r\n        } else {\r\n            _untilMoonBlocks = arrivalTime - block.number;\r\n        }\r\n    }\r\n    function rocketGetResourceValues(uint rocketTokenId_) public view returns (uint[] _yccAmounts, uint[] _resourcePrices, uint[] _resourceCounts) {\r\n        _yccAmounts = rocketResourceYccFunds[rocketTokenId_];\r\n        _resourcePrices = rocketResourcePrices[rocketTokenId_];\r\n        _resourceCounts = rocketResourceCount[rocketTokenId_];\r\n    }\r\n\r\n\r\n    function rocketSetResourcePrice(uint rocketTokenId_, uint res_, uint yccPrice_) public {\r\n        require(contractActive);\r\n        require(yct.ownerOf(rocketTokenId_)==msg.sender);\r\n        require(yccPrice_ > 0);\r\n        rocketResourcePrices[rocketTokenId_][res_] = yccPrice_;\r\n    }\r\n\r\n    function rocketAddFunds(uint rocketTokenId_, uint res_, uint yccAmount_) public {\r\n        require(contractActive);\r\n        ycc.payForUpgrade(msg.sender, yccAmount_);\r\n        rocketResourceYccFunds[rocketTokenId_][res_] += yccAmount_;\r\n\r\n        RocketAddFunds(rocketTokenId_, res_, yccAmount_, msg.sender);\r\n    }\r\n\r\n    function rocketLaunch(uint rocketTokenId_) public {\r\n        require(contractActive);\r\n        require(block.number > rocketEarliestLaunchTime);\r\n        require(yct.ownerOf(rocketTokenId_)==msg.sender);\r\n\r\n        rocketLaunchBlock[rocketTokenId_] = block.number;\r\n        rocketTravelTimeAtLaunch[rocketTokenId_] = rocketTravelTime(rocketTokenId_);\r\n\r\n        RocketLaunch(rocketTokenId_);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"rocketBlocksUntilAllowedToLaunch\",\"outputs\":[{\"name\":\"_blocksUntilAllowed\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"payout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rocketTokenId_\",\"type\":\"uint256\"},{\"name\":\"res_\",\"type\":\"uint256\"},{\"name\":\"yccPrice_\",\"type\":\"uint256\"}],\"name\":\"rocketSetResourcePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"rocketTokenId_\",\"type\":\"uint256\"}],\"name\":\"rocketTravelTime\",\"outputs\":[{\"name\":\"_travelTimeBlocks\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"payout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cityTokenId_\",\"type\":\"uint256\"}],\"name\":\"discoverResources\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"youCollectContracts\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cityTokenId_\",\"type\":\"uint256\"}],\"name\":\"discoveryCooldown\",\"outputs\":[{\"name\":\"_cooldownBlocks\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cityTokenId_\",\"type\":\"uint256\"}],\"name\":\"discoveryPrice\",\"outputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCEO\",\"type\":\"address\"}],\"name\":\"setCEO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCOO\",\"type\":\"address\"}],\"name\":\"setCOO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"rocketTokenId_\",\"type\":\"uint256\"}],\"name\":\"rocketArrivalTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"discoveryCooldownMin_\",\"type\":\"uint256\"},{\"name\":\"discoveryCooldownMax_\",\"type\":\"uint256\"},{\"name\":\"discoveryPriceMin_\",\"type\":\"uint256\"},{\"name\":\"discoveryPriceMax_\",\"type\":\"uint256\"},{\"name\":\"rocketEarliestLaunchTime_\",\"type\":\"uint256\"},{\"name\":\"rocketTravelTimeA_\",\"type\":\"uint256\"},{\"name\":\"rocketTravelTimeMinBlocks_\",\"type\":\"uint256\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rocketTokenId_\",\"type\":\"uint256\"}],\"name\":\"rocketLaunch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"yctContract\",\"type\":\"address\"}],\"name\":\"setYctContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rocketTokenId_\",\"type\":\"uint256\"},{\"name\":\"blocks\",\"type\":\"uint256\"}],\"name\":\"decreaseArrivalTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"yccContract\",\"type\":\"address\"}],\"name\":\"setYccContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cityTokenId_\",\"type\":\"uint256\"}],\"name\":\"discoveryBlocksUntilAllowed\",\"outputs\":[{\"name\":\"_blocks\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spawnContract\",\"type\":\"address\"}],\"name\":\"setSubcontinentDiscoveryVotingContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"rocketTokenId_\",\"type\":\"uint256\"}],\"name\":\"rocketIsLaunched\",\"outputs\":[{\"name\":\"_isLaunched\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rocketTokenIds_\",\"type\":\"uint256[]\"},{\"name\":\"resourceLen_\",\"type\":\"uint256\"},{\"name\":\"resourceYccFunds_\",\"type\":\"uint256[]\"},{\"name\":\"resourcePrices_\",\"type\":\"uint256[]\"},{\"name\":\"resourceCounts_\",\"type\":\"uint256[]\"}],\"name\":\"setRocketValues\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"rocketTokenId_\",\"type\":\"uint256\"}],\"name\":\"rocketGetResourceValues\",\"outputs\":[{\"name\":\"_yccAmounts\",\"type\":\"uint256[]\"},{\"name\":\"_resourcePrices\",\"type\":\"uint256[]\"},{\"name\":\"_resourceCounts\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"addYouCollectContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptCooOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rocketTokenId_\",\"type\":\"uint256\"},{\"name\":\"res_\",\"type\":\"uint256\"},{\"name\":\"yccAmount_\",\"type\":\"uint256\"}],\"name\":\"rocketAddFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ycmContract\",\"type\":\"address\"}],\"name\":\"setYcmContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cityTokenIds_\",\"type\":\"uint256[]\"},{\"name\":\"resourceLen_\",\"type\":\"uint256\"},{\"name\":\"resourceRichness_\",\"type\":\"uint256[]\"},{\"name\":\"resourceCounts_\",\"type\":\"uint256[]\"}],\"name\":\"setCityValues\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractActive_\",\"type\":\"bool\"}],\"name\":\"setContractActive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cityTokenId_\",\"type\":\"uint256\"}],\"name\":\"getCityResources\",\"outputs\":[{\"name\":\"_resourceCounts\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cityTokenId_\",\"type\":\"uint256\"}],\"name\":\"getCityResourceRichness\",\"outputs\":[{\"name\":\"_resourceRichness\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cityTokenId_\",\"type\":\"uint256\"},{\"name\":\"rocketTokenId_\",\"type\":\"uint256\"},{\"name\":\"res_\",\"type\":\"uint256\"},{\"name\":\"count_\",\"type\":\"uint256\"}],\"name\":\"cityTransferResources\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cooAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"yccContract\",\"type\":\"address\"},{\"name\":\"yctContract\",\"type\":\"address\"},{\"name\":\"ycmContract\",\"type\":\"address\"},{\"name\":\"otherContracts\",\"type\":\"address[]\"}],\"name\":\"setMainYouCollectContractAddresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rocketTokenId_\",\"type\":\"uint256\"},{\"name\":\"blocks\",\"type\":\"uint256\"}],\"name\":\"increaseArrivalTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"rocketTokenId_\",\"type\":\"uint256\"},{\"name\":\"res_\",\"type\":\"uint256\"}],\"name\":\"rocketTravelTimeByResource\",\"outputs\":[{\"name\":\"_blocks\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptCeoOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"rocketTokenId_\",\"type\":\"uint256\"}],\"name\":\"rocketTimeUntilMoon\",\"outputs\":[{\"name\":\"_untilMoonBlocks\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_rocketTokenId\",\"type\":\"uint256\"}],\"name\":\"RocketLaunch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_rocketTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_res\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_yccAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"RocketAddFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_cityTokenId\",\"type\":\"uint256\"}],\"name\":\"ResourcesDiscovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"cityTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_rocketTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_res\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_count\",\"type\":\"uint256\"}],\"name\":\"ResourcesTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"RedButton\",\"type\":\"event\"}]","ContractName":"RocketsAndResources","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://133c13a1ce989df8af2eb72992c56030bfb2ef61a51312e986fb7eddebed0793"}]}