{"status":"1","message":"OK","result":[{"SourceCode":"contract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    function Owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        assert(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(_newOwner != owner);\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnerUpdate(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = 0x0;\r\n    }\r\n\r\n    event OwnerUpdate(address _prevOwner, address _newOwner);\r\n}\r\n\r\ncontract IERC20Token {\r\n  function totalSupply() constant returns (uint256 totalSupply);\r\n  function balanceOf(address _owner) constant returns (uint256 balance) {}\r\n  function transfer(address _to, uint256 _value) returns (bool success) {}\r\n  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}\r\n  function approve(address _spender, uint256 _value) returns (bool success) {}\r\n  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\r\n\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n\r\ncontract VestingContract is Owned {\r\n    \r\n    address public withdrawalAddress;\r\n    address public tokenAddress;\r\n    \r\n    uint public lastBlockClaimed;\r\n    uint public blockDelay;\r\n    uint public level;\r\n    \r\n    event ClaimExecuted(uint _amount, uint _blockNumber, address _destination);\r\n    \r\n    function VestingContract() public {\r\n        \r\n        lastBlockClaimed = 6402520; \r\n        blockDelay = 175680; \r\n        level = 1;\r\n        tokenAddress = 0x574F84108a98c575794F75483d801d1d5DC861a5;\r\n    }\r\n    \r\n    function claimReward() public onlyOwner {\r\n        require(block.number >= lastBlockClaimed + blockDelay);\r\n        uint withdrawalAmount;\r\n        if (IERC20Token(tokenAddress).balanceOf(address(this)) > getReward()) {\r\n            withdrawalAmount = getReward();\r\n        }else {\r\n            withdrawalAmount = IERC20Token(tokenAddress).balanceOf(address(this));\r\n        }\r\n        IERC20Token(tokenAddress).transfer(withdrawalAddress, withdrawalAmount);\r\n        level += 1;\r\n        lastBlockClaimed += blockDelay;\r\n        emit ClaimExecuted(withdrawalAmount, block.number, withdrawalAddress);\r\n    }\r\n    \r\n    function getReward() internal returns (uint){\r\n        if (level == 1) { return  3166639968300000000000000; }\r\n        else if (level == 2) { return 3166639968300000000000000; }\r\n        else if (level == 3) { return 3166639968300000000000000; }\r\n        else if (level == 4) { return 3166639968300000000000000; }\r\n        else if (level == 5) { return 3166639968300000000000000; }\r\n        else if (level == 6) { return 3166639968300000000000000; }\r\n        else if (level == 7) { return 3166639968300000000000000; }\r\n        else if (level == 8) { return 3166639968300000000000000; }\r\n        else if (level == 9) { return 3166639968300000000000000; }\r\n        else if (level == 10) { return 3166639968300000000000000; }\r\n        else if (level == 11) { return 0;}\r\n        else {return 0;}\r\n    }\r\n    \r\n    function salvageTokensFromContract(address _tokenAddress, address _to, uint _amount) public onlyOwner {\r\n        require(_tokenAddress != tokenAddress);\r\n        \r\n        IERC20Token(_tokenAddress).transfer(_to, _amount);\r\n    }\r\n    \r\n    //\r\n    // Setters\r\n    //\r\n\r\n    function setWithdrawalAddress(address _newAddress) public onlyOwner {\r\n        withdrawalAddress = _newAddress;\r\n    }\r\n    \r\n    function setBlockDelay(uint _newBlockDelay) public onlyOwner {\r\n        blockDelay = _newBlockDelay;\r\n    }\r\n    \r\n    //\r\n    // Getters\r\n    //\r\n    \r\n    function getTokenBalance() public constant returns(uint) {\r\n        return IERC20Token(tokenAddress).balanceOf(address(this));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"setWithdrawalAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"salvageTokensFromContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockDelay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawalAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastBlockClaimed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newBlockDelay\",\"type\":\"uint256\"}],\"name\":\"setBlockDelay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_destination\",\"type\":\"address\"}],\"name\":\"ClaimExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}]","ContractName":"VestingContract","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a88ca833c00d5ec113d907fe81f2cc55b8ef9be9897ebfab62188fd483c41149"}]}