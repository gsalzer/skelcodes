{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract IERC20Token {\r\n    // these functions aren't abstract since the compiler emits automatically generated getter functions as external\r\n    function name() public constant returns (string);\r\n    function symbol() public constant returns (string);\r\n    function decimals() public constant returns (uint8);\r\n    function totalSupply() public constant returns (uint256);\r\n    function balanceOf(address _owner) public constant returns (uint256);\r\n    function allowance(address _owner, address _spender) public constant returns (uint256);\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n}\r\n\r\ncontract BancorConverter {\r\n    function quickConvert(IERC20Token[] _path, uint256 _amount, uint256 _minReturn) payable public returns (uint256);\r\n}\r\n\r\ncontract BancorMarketMaker {\r\n    BancorConverter public constant bancorConverterAddress = BancorConverter(0x578f3c8454F316293DBd31D8C7806050F3B3E2D8);\r\n\r\n    IERC20Token public constant dai = IERC20Token(0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359);\r\n    IERC20Token public constant bancorErc20Eth = IERC20Token(0xc0829421C1d260BD3cB3E0F06cfE2D52db2cE315);\r\n    IERC20Token public constant bancorToken = IERC20Token(0x1F573D6Fb3F13d689FF844B4cE37794d79a7FF1C);\r\n    IERC20Token public constant bancorDaiSmartTokenRelay = IERC20Token(0xee01b3AB5F6728adc137Be101d99c678938E6E72);\r\n    // sell dai price, will be less than normal conversion, _minReturn should be 1/(Dai/Eth price) * .95\r\n    function sellDaiForEth(uint256 _amountDai, uint256 _minReturn) external returns (uint256) {\r\n        require(_amountDai > 0);\r\n        \r\n        IERC20Token(dai).transferFrom(msg.sender, address(this), _amountDai);\r\n        require(IERC20Token(dai).approve(address(bancorConverterAddress), _amountDai));\r\n        \r\n        IERC20Token[] memory daiToEthConversionPath;\r\n        daiToEthConversionPath[0] = dai;\r\n        daiToEthConversionPath[1] = bancorDaiSmartTokenRelay;\r\n        daiToEthConversionPath[2] = bancorDaiSmartTokenRelay;\r\n        daiToEthConversionPath[3] = bancorDaiSmartTokenRelay;\r\n        daiToEthConversionPath[4] = bancorToken;\r\n        daiToEthConversionPath[5] = bancorToken;\r\n        daiToEthConversionPath[6] = bancorErc20Eth;\r\n        bancorConverterAddress.quickConvert(daiToEthConversionPath, _amountDai, _minReturn);\r\n        msg.sender.transfer(this.balance);\r\n        \r\n    }\r\n\r\n    // buy dai price, will be more than normal conversion, _minReturn should be 1/(Dai/Eth price) * 1.05\r\n    function buyDaiWithEth(uint256 _minReturn) payable external returns (uint256) {\r\n        require(msg.value > 0);\r\n        IERC20Token[] memory ethToDaiConversionPath;\r\n        ethToDaiConversionPath[0] = bancorErc20Eth;\r\n        ethToDaiConversionPath[1] = bancorToken;\r\n        ethToDaiConversionPath[2] = bancorToken;\r\n        ethToDaiConversionPath[3] = bancorDaiSmartTokenRelay;\r\n        ethToDaiConversionPath[4] = bancorDaiSmartTokenRelay;\r\n        ethToDaiConversionPath[5] = bancorDaiSmartTokenRelay;\r\n        ethToDaiConversionPath[6] = dai;\r\n        bancorConverterAddress.quickConvert.value(msg.value)(ethToDaiConversionPath, msg.value, _minReturn);\r\n        dai.transfer(msg.sender, dai.balanceOf(address(this)));\r\n        \r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"bancorConverterAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amountDai\",\"type\":\"uint256\"},{\"name\":\"_minReturn\",\"type\":\"uint256\"}],\"name\":\"sellDaiForEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bancorToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bancorDaiSmartTokenRelay\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minReturn\",\"type\":\"uint256\"}],\"name\":\"buyDaiWithEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bancorErc20Eth\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"BancorMarketMaker","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://75f418ab07791db6cacdd5b874ba36dff6caf3e6e0edaaccc8d1b19247e525ca"}]}