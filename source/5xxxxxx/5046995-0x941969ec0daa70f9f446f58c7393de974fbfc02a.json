{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.15;\r\n\r\ncontract Ambi2 {\r\n    function claimFor(address _address, address _owner) returns(bool);\r\n    function hasRole(address _from, bytes32 _role, address _to) constant returns(bool);\r\n    function isOwner(address _node, address _owner) constant returns(bool);\r\n}\r\n\r\ncontract Ambi2Enabled {\r\n    Ambi2 ambi2;\r\n\r\n    modifier onlyRole(bytes32 _role) {\r\n        if (address(ambi2) != 0x0 && ambi2.hasRole(this, _role, msg.sender)) {\r\n            _;\r\n        }\r\n    }\r\n\r\n    // Perform only after claiming the node, or claim in the same tx.\r\n    function setupAmbi2(Ambi2 _ambi2) returns(bool) {\r\n        if (address(ambi2) != 0x0) {\r\n            return false;\r\n        }\r\n\r\n        ambi2 = _ambi2;\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\ncontract Ambi2EnabledFull is Ambi2Enabled {\r\n    // Setup and claim atomically.\r\n    function setupAmbi2(Ambi2 _ambi2) returns(bool) {\r\n        if (address(ambi2) != 0x0) {\r\n            return false;\r\n        }\r\n        if (!_ambi2.claimFor(this, msg.sender) && !_ambi2.isOwner(this, msg.sender)) {\r\n            return false;\r\n        }\r\n\r\n        ambi2 = _ambi2;\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract AssetProxyInterface {\r\n    function transferFromWithReference(address _from, address _to, uint _value, string _reference) returns(bool);\r\n}\r\n\r\ncontract DeviceDataStorage is Ambi2EnabledFull {\r\n\r\n    uint fee;\r\n    address feeReceiver;\r\n\r\n    AssetProxyInterface public assetProxy;\r\n\r\n    struct Storage {\r\n        address device;\r\n        bytes32 description;\r\n        uint number;\r\n        string additionalInfo;\r\n    }\r\n\r\n    mapping (address => uint) public recordId;\r\n    mapping (address => mapping (uint => Storage)) public recording;\r\n\r\n    event DataWasRecorded(address device, uint id, bytes32 description, uint number, string additionalInfo);\r\n\r\n    function setAssetProxy(AssetProxyInterface _assetProxy) onlyRole('admin') returns(bool) {\r\n        assetProxy = AssetProxyInterface(_assetProxy);\r\n        return true;\r\n    }\r\n\r\n    function setFeeRecieverValue(uint _fee, address _feeReceiver) onlyRole('admin') returns(bool) {\r\n        fee = _fee;\r\n        feeReceiver = _feeReceiver;\r\n        return true;\r\n    }\r\n\r\n    function recordInfo(bytes32 _description, uint _number, string _additionalInfo) returns(bool) {\r\n        require(assetProxy.transferFromWithReference(msg.sender, feeReceiver, fee, 'storage'));\r\n\r\n        recording[msg.sender][recordId[msg.sender]].device = msg.sender;\r\n        recording[msg.sender][recordId[msg.sender]].description = _description;\r\n        recording[msg.sender][recordId[msg.sender]].number = _number;\r\n        recording[msg.sender][recordId[msg.sender]].additionalInfo = _additionalInfo;\r\n        DataWasRecorded(msg.sender, recordId[msg.sender], _description, _number, _additionalInfo);\r\n        recordId[msg.sender]++;\r\n        return true;\r\n    }\r\n\r\n    function deleteRecording(uint _id) returns(bool) {\r\n        delete recording[msg.sender][_id];\r\n        return true;\r\n    }\r\n\r\n    function getRecording(address _device, uint _id) constant returns(address, bytes32, uint, string) {\r\n        Storage memory stor = recording[_device][_id];\r\n        return (stor.device, stor.description, stor.number, stor.additionalInfo);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"},{\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"name\":\"setFeeRecieverValue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"assetProxy\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_device\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getRecording\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"deleteRecording\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recording\",\"outputs\":[{\"name\":\"device\",\"type\":\"address\"},{\"name\":\"description\",\"type\":\"bytes32\"},{\"name\":\"number\",\"type\":\"uint256\"},{\"name\":\"additionalInfo\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_description\",\"type\":\"bytes32\"},{\"name\":\"_number\",\"type\":\"uint256\"},{\"name\":\"_additionalInfo\",\"type\":\"string\"}],\"name\":\"recordInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ambi2\",\"type\":\"address\"}],\"name\":\"setupAmbi2\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_assetProxy\",\"type\":\"address\"}],\"name\":\"setAssetProxy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"recordId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"device\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"description\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"number\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"additionalInfo\",\"type\":\"string\"}],\"name\":\"DataWasRecorded\",\"type\":\"event\"}]","ContractName":"DeviceDataStorage","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"10000","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bc8c2c3d84cf6d249e85e5e61c3fafc5ba68e106844dfdb569fd27a28cbad2dd"}]}