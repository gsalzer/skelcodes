{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Quicketh {\r\n   // Bet 0.001 ETH.\r\n   // Get a 10% change to win 0.008\r\n   address public owner;                            // Who's the boss?\r\n   uint public players;                             // How many are playing?\r\n   address[] public playedWallets;                  // These can win\r\n   address[] public winners;                        // These have won\r\n   uint playPrice = 0.001 * 1000000000000000000;    // 0.001 ETH\r\n   uint public rounds;                              // How long have we been going?\r\n\r\n   event WinnerWinnerChickenDinner(address winner, uint amount);\r\n   event AnotherPlayer(address player);\r\n\r\n\r\n   function Quicketh() public payable{\r\n       owner = msg.sender;\r\n       players = 0;\r\n       rounds = 0;\r\n   }\r\n   function play()  payable public{\r\n       require (msg.value == playPrice);\r\n       playedWallets.push(msg.sender);\r\n       players += 1;\r\n       AnotherPlayer(msg.sender);\r\n       if (players > 9){\r\n           uint random_number = uint(block.blockhash(block.number-1))%10 + 1;    // Get random winner\r\n           winners.push(playedWallets[random_number]);                           // Add to winner list\r\n           playedWallets[random_number].transfer(8*playPrice);                   // Send price to winner\r\n           WinnerWinnerChickenDinner(playedWallets[random_number], 8*playPrice); // Notify the world\r\n           owner.transfer(this.balance);                                         // Let's get the profits :)\r\n           rounds += 1;                                                          // See how long we've been going\r\n           players = 0;                                                          // reset players\r\n           delete playedWallets;                                                 // get rid of the player addresses\r\n       }\r\n   }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"play\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rounds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playedWallets\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"players\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WinnerWinnerChickenDinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"player\",\"type\":\"address\"}],\"name\":\"AnotherPlayer\",\"type\":\"event\"}]","ContractName":"Quicketh","CompilerVersion":"v0.4.22-nightly.2018.3.8+commit.fbc29f6d","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a9e3438da3bb29ea8cfaefa92335911e08d4e7f0ec6ab814907fd564f62c0b2f"}]}