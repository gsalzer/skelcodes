{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n// File: zeppelin-solidity/contracts/ownership/Ownable.sol\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n// File: contracts/Whitelist.sol\r\n\r\n/**\r\n * @title Whitelist contract\r\n * @dev Whitelist for wallets.\r\n*/\r\ncontract Whitelist is Ownable {\r\n    mapping(address => bool) whitelist;\r\n\r\n    uint256 public whitelistLength = 0;\r\n\r\n    /**\r\n    * @dev Add wallet to whitelist.\r\n    * @dev Accept request from the owner only.\r\n    * @param _wallet The address of wallet to add.\r\n    */\r\n    function addWallet(address _wallet) public onlyOwner {\r\n        require(_wallet != address(0));\r\n        require(!isWhitelisted(_wallet));\r\n        whitelist[_wallet] = true;\r\n        whitelistLength++;\r\n    }\r\n\r\n    /**\r\n    * @dev Remove wallet from whitelist.\r\n    * @dev Accept request from the owner only.\r\n    * @param _wallet The address of whitelisted wallet to remove.\r\n    */\r\n    function removeWallet(address _wallet) public onlyOwner {\r\n        require(_wallet != address(0));\r\n        require(isWhitelisted(_wallet));\r\n        whitelist[_wallet] = false;\r\n        whitelistLength--;\r\n    }\r\n\r\n    /**\r\n    * @dev Check the specified wallet whether it is in the whitelist.\r\n    * @param _wallet The address of wallet to check.\r\n    */\r\n    function isWhitelisted(address _wallet) public view returns (bool) {\r\n        return whitelist[_wallet];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whitelistLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"removeWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"addWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Whitelist","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1c19c003ae269ba5f68bd73e243dde31a32bdc166f791560205f48c897cebba6"}]}