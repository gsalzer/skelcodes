{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n   * @dev modifier to allow actions only when the contract IS paused\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev modifier to allow actions only when the contract IS NOT paused\r\n   */\r\n  modifier whenPaused {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() onlyOwner whenNotPaused returns (bool) {\r\n    paused = true;\r\n    Pause();\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() onlyOwner whenPaused returns (bool) {\r\n    paused = false;\r\n    Unpause();\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\ncontract HeroCore{\r\n\r\n   function ownerIndexToERC20Balance(address _address) public returns (uint256);\r\n   function useItems(uint32 _items, uint256 tokenId, address owner,uint256 fee) public returns (bool);\r\n   function ownerOf(uint256 _tokenId) public returns (address);\r\n   function getHeroItems(uint256 _id) public returns ( uint32);\r\n    \r\n   function reduceCDFee(uint256 heroId) \r\n         public \r\n         view \r\n         returns (uint256);\r\n   \r\n}\r\n\r\ncontract MagicStore is Pausable {\r\n\t\tHeroCore public heroCore;\r\n    \r\n    mapping (uint8 =>mapping (uint8 => uint256)) public itemIndexToPrice; \r\n\t\t\t\r\n\t\tfunction MagicStore(address _heroCore){\r\n        HeroCore candidateContract2 = HeroCore(_heroCore);\r\n        heroCore = candidateContract2;\r\n\t\t}\t\r\n    \r\n    function buyItem(uint8 itemX,uint8 itemY, uint256 tokenId, uint256 amount) public{\r\n        require( msg.sender == heroCore.ownerOf(tokenId) );\r\n        require( heroCore.ownerIndexToERC20Balance(msg.sender) >= amount);\r\n        require( itemX >0);\r\n        uint256 fee= itemIndexToPrice[itemX][itemY];           \r\n        require(fee !=0 && fee <= amount); \r\n           uint32 items = heroCore.getHeroItems(tokenId);\r\n           uint32 location = 1;\r\n\t\t       for(uint8 index = 2; index <= itemX; index++){\r\n\t\t          location *=10;\r\n\t\t       }\r\n        uint32 _itemsId = items+ uint32(itemY) *location - items%location *location;\r\n              \r\n        heroCore.useItems(_itemsId,tokenId,msg.sender,amount);       \r\n    }\r\n    \r\n    \r\n    function setItem(uint8 itemX,uint8 itemY, uint256 amount) public onlyOwner{\r\n    \t require( itemX <=9 && itemY <=9 && amount !=0);\r\n    \r\n       itemIndexToPrice[itemX][itemY] =amount;    \r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"itemIndexToPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"itemX\",\"type\":\"uint8\"},{\"name\":\"itemY\",\"type\":\"uint8\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"heroCore\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"itemX\",\"type\":\"uint8\"},{\"name\":\"itemY\",\"type\":\"uint8\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setItem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_heroCore\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]","ContractName":"MagicStore","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000008a1190c9a21ccc195a943ec9ee434620461b46b2","Library":"","SwarmSource":"bzzr://010b376f88d8a1a2ce199a2b9a2a1673c205411296dfaf1880923c7495764d72"}]}