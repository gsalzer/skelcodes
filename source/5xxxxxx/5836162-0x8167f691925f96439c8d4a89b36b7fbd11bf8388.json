{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Owned {\r\n    address public owner;\r\n\r\n    function Owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function setOwner(address _owner) onlyOwner public {\r\n        owner = _owner;\r\n    }\r\n}\r\n\r\ncontract SafeMath {\r\n    function add(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n        uint256 c = _a + _b;\r\n        assert(c >= _a);\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n        assert(_a >= _b);\r\n        return _a - _b;\r\n    }\r\n\r\n    function mul(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n        uint256 c = _a * _b;\r\n        assert(_a == 0 || c / _a == _b);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Token is SafeMath, Owned {\r\n    uint256 constant DAY_IN_SECONDS = 86400;\r\n    string public constant standard = \"0.66\";\r\n    string public name = \"\";\r\n    string public symbol = \"\";\r\n    uint8 public decimals = 0;\r\n    uint256 public totalSupply = 0;\r\n    mapping (address => uint256) public balanceP;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    mapping (address => uint256[]) public lockTime;\r\n    mapping (address => uint256[]) public lockValue;\r\n    mapping (address => uint256) public lockNum;\r\n    mapping (address => bool) public locker;\r\n    uint256 public later = 0;\r\n    uint256 public earlier = 0;\r\n\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    event TransferredLocked(address indexed _from, address indexed _to, uint256 _time, uint256 _value);\r\n    event TokenUnlocked(address indexed _address, uint256 _value);\r\n\r\n    function Token(string _name, string _symbol, uint8 _decimals, uint256 _totalSupply) public {\r\n        require(bytes(_name).length > 0 && bytes(_symbol).length > 0);\r\n\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        totalSupply = _totalSupply;\r\n\r\n        balanceP[msg.sender] = _totalSupply;\r\n\r\n    }\r\n\r\n    modifier validAddress(address _address) {\r\n        require(_address != 0x0);\r\n        _;\r\n    }\r\n\r\n    function addLocker(address _address) public validAddress(_address) onlyOwner {\r\n        locker[_address] = true;\r\n    }\r\n\r\n    function removeLocker(address _address) public validAddress(_address) onlyOwner {\r\n        locker[_address] = false;\r\n    }\r\n\r\n    function setUnlockEarlier(uint256 _earlier) public onlyOwner {\r\n        earlier = add(earlier, _earlier);\r\n    }\r\n\r\n    function setUnlockLater(uint256 _later) public onlyOwner {\r\n        later = add(later, _later);\r\n    }\r\n\r\n    function balanceUnlocked(address _address) public view returns (uint256 _balance) {\r\n        _balance = balanceP[_address];\r\n        uint256 i = 0;\r\n        while (i < lockNum[_address]) {\r\n            if (add(now, earlier) > add(lockTime[_address][i], later)) _balance = add(_balance, lockValue[_address][i]);\r\n            i++;\r\n        }\r\n        return _balance;\r\n    }\r\n\r\n    function balanceLocked(address _address) public view returns (uint256 _balance) {\r\n        _balance = 0;\r\n        uint256 i = 0;\r\n        while (i < lockNum[_address]) {\r\n            if (add(now, earlier) < add(lockTime[_address][i], later)) _balance = add(_balance, lockValue[_address][i]);\r\n            i++;\r\n        }\r\n        return  _balance;\r\n    }\r\n\r\n    function balanceOf(address _address) public view returns (uint256 _balance) {\r\n        _balance = balanceP[_address];\r\n        uint256 i = 0;\r\n        while (i < lockNum[_address]) {\r\n            _balance = add(_balance, lockValue[_address][i]);\r\n            i++;\r\n        }\r\n        return _balance;\r\n    }\r\n\r\n    function showTime(address _address) public view validAddress(_address) returns (uint256[] _time) {\r\n        uint i = 0;\r\n        uint256[] memory tempLockTime = new uint256[](lockNum[_address]);\r\n        while (i < lockNum[_address]) {\r\n            tempLockTime[i] = sub(add(lockTime[_address][i], later), earlier);\r\n            i++;\r\n        }\r\n        return tempLockTime;\r\n    }\r\n\r\n    function showValue(address _address) public view validAddress(_address) returns (uint256[] _value) {\r\n        return lockValue[_address];\r\n    }\r\n\r\n    function calcUnlock(address _address) private {\r\n        uint256 i = 0;\r\n        uint256 j = 0;\r\n        uint256[] memory currentLockTime;\r\n        uint256[] memory currentLockValue;\r\n        uint256[] memory newLockTime = new uint256[](lockNum[_address]);\r\n        uint256[] memory newLockValue = new uint256[](lockNum[_address]);\r\n        currentLockTime = lockTime[_address];\r\n        currentLockValue = lockValue[_address];\r\n        while (i < lockNum[_address]) {\r\n            if (add(now, earlier) > add(currentLockTime[i], later)) {\r\n                balanceP[_address] = add(balanceP[_address], currentLockValue[i]);\r\n                emit TokenUnlocked(_address, currentLockValue[i]);\r\n            } else {\r\n                newLockTime[j] = currentLockTime[i];\r\n                newLockValue[j] = currentLockValue[i];\r\n                j++;\r\n            }\r\n            i++;\r\n        }\r\n        uint256[] memory trimLockTime = new uint256[](j);\r\n        uint256[] memory trimLockValue = new uint256[](j);\r\n        i = 0;\r\n        while (i < j) {\r\n            trimLockTime[i] = newLockTime[i];\r\n            trimLockValue[i] = newLockValue[i];\r\n            i++;\r\n        }\r\n        lockTime[_address] = trimLockTime;\r\n        lockValue[_address] = trimLockValue;\r\n        lockNum[_address] = j;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public validAddress(_to) returns (bool success) {\r\n        if (lockNum[msg.sender] > 0) calcUnlock(msg.sender);\r\n        if (balanceP[msg.sender] >= _value && _value > 0) {\r\n            balanceP[msg.sender] = sub(balanceP[msg.sender], _value);\r\n            balanceP[_to] = add(balanceP[_to], _value);\r\n            emit Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function transferLocked(address _to, uint256[] _time, uint256[] _value) public validAddress(_to) returns (bool success) {\r\n        require(_value.length == _time.length);\r\n\r\n        if (lockNum[msg.sender] > 0) calcUnlock(msg.sender);\r\n        uint256 i = 0;\r\n        uint256 totalValue = 0;\r\n        while (i < _value.length) {\r\n            totalValue = add(totalValue, _value[i]);\r\n            i++;\r\n        }\r\n        if (balanceP[msg.sender] >= totalValue && totalValue > 0) {\r\n            i = 0;\r\n            while (i < _time.length) {\r\n                balanceP[msg.sender] = sub(balanceP[msg.sender], _value[i]);\r\n                lockTime[_to].length = lockNum[_to]+1;\r\n                lockValue[_to].length = lockNum[_to]+1;\r\n                lockTime[_to][lockNum[_to]] = add(now, _time[i]);\r\n                lockValue[_to][lockNum[_to]] = _value[i];\r\n                emit TransferredLocked(msg.sender, _to, lockTime[_to][lockNum[_to]], lockValue[_to][lockNum[_to]]);\r\n                emit Transfer(msg.sender, _to, lockValue[_to][lockNum[_to]]);\r\n                lockNum[_to]++;\r\n                i++;\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function transferLockedFrom(address _from, address _to, uint256[] _time, uint256[] _value) public \r\n\t    validAddress(_from) validAddress(_to) returns (bool success) {\r\n        require(locker[msg.sender]);\r\n        require(_value.length == _time.length);\r\n\r\n        if (lockNum[_from] > 0) calcUnlock(_from);\r\n        uint256 i = 0;\r\n        uint256 totalValue = 0;\r\n        while (i < _value.length) {\r\n            totalValue = add(totalValue, _value[i]);\r\n            i++;\r\n        }\r\n        if (balanceP[_from] >= totalValue && totalValue > 0) {\r\n            i = 0;\r\n            while (i < _time.length) {\r\n                balanceP[_from] = sub(balanceP[_from], _value[i]);\r\n                lockTime[_to].length = lockNum[_to]+1;\r\n                lockValue[_to].length = lockNum[_to]+1;\r\n                lockTime[_to][lockNum[_to]] = add(now, _time[i]);\r\n                lockValue[_to][lockNum[_to]] = _value[i];\r\n                emit TransferredLocked(_from, _to, lockTime[_to][lockNum[_to]], lockValue[_to][lockNum[_to]]);\r\n                emit Transfer(_from, _to, lockValue[_to][lockNum[_to]]);\r\n                lockNum[_to]++;\r\n                i++;\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public validAddress(_from) validAddress(_to) returns (bool success) {\r\n        if (lockNum[_from] > 0) calcUnlock(_from);\r\n        if (balanceP[_from] >= _value && _value > 0) {\r\n            allowance[_from][msg.sender] = sub(allowance[_from][msg.sender], _value);\r\n            balanceP[_from] = sub(balanceP[_from], _value);\r\n            balanceP[_to] = add(balanceP[_to], _value);\r\n            emit Transfer(_from, _to, _value);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public validAddress(_spender) returns (bool success) {\r\n        require(_value == 0 || allowance[msg.sender][_spender] == 0);\r\n\r\n        if (lockNum[msg.sender] > 0) calcUnlock(msg.sender);\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function () public payable {\r\n        revert();\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceUnlocked\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_time\",\"type\":\"uint256[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"transferLockedFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"showValue\",\"outputs\":[{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addLocker\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceLocked\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"earlier\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"showTime\",\"outputs\":[{\"name\":\"_time\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_time\",\"type\":\"uint256[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"transferLocked\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"later\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_later\",\"type\":\"uint256\"}],\"name\":\"setUnlockLater\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeLocker\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"locker\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_earlier\",\"type\":\"uint256\"}],\"name\":\"setUnlockEarlier\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_time\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferredLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TokenUnlocked\",\"type\":\"event\"}]","ContractName":"Token","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000033b2e3c9fd0803ce80000000000000000000000000000000000000000000000000000000000000000000004584f4e45000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004584f4e4500000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://7e5af9f2669813d48c66e12a017a56be5325a9cbb875856d056affaf8c690fd8"}]}