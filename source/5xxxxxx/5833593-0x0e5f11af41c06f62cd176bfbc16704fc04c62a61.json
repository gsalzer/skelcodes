{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Token is ERC20, Ownable {\r\n  using SafeMath for uint;\r\n\r\n  // Token 信息\r\n\r\n  string public constant name = \"Truedeal Token\";\r\n  string public constant symbol = \"TDT\";\r\n\r\n  uint8 public decimals = 18;\r\n\r\n  mapping (address => uint256) accounts; // User Accounts\r\n  mapping (address => mapping (address => uint256)) allowed; // User's allowances table\r\n\r\n  // Modifier\r\n  modifier nonZeroAddress(address _to) {                 // Ensures an address is provided\r\n      require(_to != 0x0);\r\n      _;\r\n  }\r\n\r\n  modifier nonZeroAmount(uint _amount) {                 // Ensures a non-zero amount\r\n      require(_amount > 0);\r\n      _;\r\n  }\r\n\r\n  modifier nonZeroValue() {                              // Ensures a non-zero value is passed\r\n      require(msg.value > 0);\r\n      _;\r\n  }\r\n\r\n  // ERC20 API\r\n\r\n  // -------------------------------------------------\r\n  // Transfers to another address\r\n  // -------------------------------------------------\r\n  function transfer(address _to, uint256 _amount) public returns (bool success) {\r\n      require(accounts[msg.sender] >= _amount);         // check amount of balance can be tranfetdt\r\n      addToBalance(_to, _amount);\r\n      decrementBalance(msg.sender, _amount);\r\n      Transfer(msg.sender, _to, _amount);\r\n      return true;\r\n  }\r\n\r\n  // -------------------------------------------------\r\n  // Transfers from one address to another (need allowance to be called first)\r\n  // -------------------------------------------------\r\n  function transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\r\n      require(allowance(_from, msg.sender) >= _amount);\r\n      decrementBalance(_from, _amount);\r\n      addToBalance(_to, _amount);\r\n      allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n      Transfer(_from, _to, _amount);\r\n      return true;\r\n  }\r\n\r\n  // -------------------------------------------------\r\n  // Approves another address a certain amount of TDT\r\n  // -------------------------------------------------\r\n  function approve(address _spender, uint256 _value) public returns (bool success) {\r\n      require((_value == 0) || (allowance(msg.sender, _spender) == 0));\r\n      allowed[msg.sender][_spender] = _value;\r\n      Approval(msg.sender, _spender, _value);\r\n      return true;\r\n  }\r\n\r\n  // -------------------------------------------------\r\n  // Gets an address's TDT allowance\r\n  // -------------------------------------------------\r\n  function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n  }\r\n\r\n  // -------------------------------------------------\r\n  // Gets the TDT balance of any address\r\n  // -------------------------------------------------\r\n  function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n      return accounts[_owner];\r\n  }\r\n\r\n  function Token(address _address) public {\r\n    totalSupply = 8000000000 * 1e18;\r\n    addToBalance(_address, totalSupply);\r\n    Transfer(0x0, _address, totalSupply);\r\n  }\r\n\r\n  // -------------------------------------------------\r\n  // Add balance\r\n  // -------------------------------------------------\r\n  function addToBalance(address _address, uint _amount) internal {\r\n    accounts[_address] = accounts[_address].add(_amount);\r\n  }\r\n\r\n  // -------------------------------------------------\r\n  // Sub balance\r\n  // -------------------------------------------------\r\n  function decrementBalance(address _address, uint _amount) internal {\r\n    accounts[_address] = accounts[_address].sub(_amount);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Token","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000b0c69ab9d480613a1bd2212eff6f643b83d3c102","Library":"","SwarmSource":"bzzr://f0e76d3b04f7dd8e2356f43f0c633e303e3f21e2b9f1777bc96ca296bb497834"}]}