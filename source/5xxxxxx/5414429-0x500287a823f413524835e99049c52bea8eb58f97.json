{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\ncontract BuckySalary is Ownable {\r\n\r\n    string[] public staff = [ \r\n        \"0xE385917ACF8251fca45595b7919f38bab581749c\", \r\n        \"0xC4Bed66d88F39C0D18cE601b408464d554A38771\", \r\n        \"0xc07ED3e252d8C6819F763d904D1692D1242ec7ee\", \r\n        \"0x2CD147bb1d347a6A887887B569AAa8A262cF8346\", \r\n        \"0x6A1eBbff7714dfcE36756d09440ac979Bbf87b10\", \r\n        \"0x729501BE221C534d9C090a8Ee4e8B5B16d6b356C\", \r\n        \"0xad82A5fb394a525835A3a6DC34C1843e19160CFA\", \r\n        \"0x5DD309a882c2BB49B5e5Ed1b49D209363B0f2a37\", \r\n        \"0x490f72f8DfB81859fe61ecfe1fEB9F6C61a1aa89\", \r\n        \"0xBd0b6cdf81B282C0401bc67d0d523D00Fc59c55c\"  \r\n    ];\r\n\r\n    uint[] public staffETH = [\r\n        1 ether,\r\n        1 ether,\r\n        1 ether,\r\n        1 ether,\r\n        1 ether,\r\n        1 ether,\r\n        1 ether,\r\n        1 ether,\r\n        0.5 ether,\r\n        0.5 ether\r\n    ];\r\n\r\n    \r\n    \r\n    function BuckySalary() public {\r\n\r\n    }\r\n\r\n    function bytesToAddress (bytes b) internal constant returns (address) {\r\n        uint result = 0;\r\n        for (uint i = 0; i < b.length; i++) {\r\n            uint c = uint(b[i]);\r\n            if (c >= 48 && c <= 57) {\r\n                result = result * 16 + (c - 48);\r\n            }\r\n            if(c >= 65 && c<= 90) {\r\n                result = result * 16 + (c - 55);\r\n            }\r\n            if(c >= 97 && c<= 122) {\r\n                result = result * 16 + (c - 87);\r\n            }\r\n        }\r\n        return address(result);\r\n    }\r\n      \r\n    \r\n    function strCompare(string _a, string _b) internal returns (int) {\r\n        bytes memory a = bytes(_a);\r\n        bytes memory b = bytes(_b);\r\n        uint minLength = a.length;\r\n        if (b.length < minLength) minLength = b.length;\r\n        for (uint i = 0; i < minLength; i ++) {\r\n            if (a[i] < b[i])\r\n                return -1;\r\n            else if (a[i] > b[i])\r\n                return 1;\r\n        }\r\n        if (a.length < b.length)\r\n            return -1;\r\n        else if (a.length > b.length)\r\n            return 1;\r\n        else\r\n            return 0;\r\n   } \r\n\r\n    function getTotal() internal view returns (uint) {\r\n        uint total = 0;\r\n        for (uint i = 0; i < staff.length; i++) {\r\n            total += staffETH[i];    \r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    event Transfer(address a, uint v);\r\n\r\n    function () public payable {\r\n        uint total = getTotal();\r\n        require(msg.value >= total);\r\n\r\n        for (uint i = 0; i < staff.length; i++) {\r\n            bytes b = bytes(staff[i]);\r\n            address s = bytesToAddress(b);\r\n            uint value = staffETH[i];\r\n            if (value > 0) {\r\n                s.transfer(value);\r\n                Transfer(s, value);\r\n            }\r\n        }\r\n\r\n        if (msg.value > total) {\r\n            msg.sender.transfer(msg.value - total);\r\n        }\r\n    }\r\n\r\n    function addStaff(string addr, uint value) public onlyOwner {\r\n        for (uint i = 0; i < staff.length; i++) {\r\n            if (strCompare(staff[i], addr) == 0) {\r\n                staffETH[i] = value;\r\n                return;\r\n            }\r\n\r\n            if (strCompare(staff[i], \"\") == 0) {\r\n                staff[i] = addr;\r\n                staffETH[i] = value;\r\n                return;\r\n            }\r\n        }\r\n\r\n        staff.push(addr);\r\n        staffETH.push(value);\r\n    }\r\n\r\n    function removeStaff(string addr) public onlyOwner {\r\n        for (uint i = 0; i < staff.length; i++) {\r\n            if (strCompare(staff[i], addr) == 0) {\r\n                staff[i] = \"\";\r\n                staffETH[i] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setETH(string addr, uint value) public onlyOwner {\r\n        for (uint i = 0; i < staff.length; i++) {\r\n            if (strCompare(staff[i], addr) == 0) {\r\n                staffETH[i] = value;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"staff\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"addStaff\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"string\"}],\"name\":\"removeStaff\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"staffETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"a\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"v\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"BuckySalary","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://44f316fc3de4a3183ff7b1f45538c79479af09774dc238986c0ddbc24b7270b1"}]}