{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.4;\r\n\r\ncontract WinnerTakesAll { \r\n    uint8 public currentPlayers;\r\n    uint8 constant public requiredPlayers = 6;\r\n    uint256 constant public requiredBet = 0.1*1e18;\r\n    address[requiredPlayers] public players;\r\n    event roundEvent(\r\n        address[requiredPlayers] roundPlayers,\r\n        bytes32[requiredPlayers] roundScores\r\n    );\r\n    \r\n    function SixPlayerRoulette() public {\r\n        currentPlayers = 0;\r\n    }\r\n    \r\n    function () public payable correctBet {\r\n        currentPlayers += 1;\r\n        players[currentPlayers-1] = msg.sender;\r\n        if (currentPlayers == requiredPlayers) {\r\n            bytes32 best = 0;\r\n            bytes32[requiredPlayers] memory scores;\r\n            address winner = 0;\r\n            for (uint x = 0 ; x < requiredPlayers ; x++) {\r\n                scores[x] = keccak256(now,players[x]);\r\n                if (scores[x] > best ){\r\n                    best = scores[x];\r\n                    winner = players[x];\r\n                }\r\n            }\r\n            winner.transfer(this.balance);\r\n            currentPlayers = 0;\r\n            roundEvent(players,scores);\r\n        }\r\n    }\r\n    \r\n    modifier correctBet {\r\n        require(msg.value == requiredBet);\r\n        _;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"requiredPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"SixPlayerRoulette\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requiredBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"roundPlayers\",\"type\":\"address[6]\"},{\"indexed\":false,\"name\":\"roundScores\",\"type\":\"bytes32[6]\"}],\"name\":\"roundEvent\",\"type\":\"event\"}]","ContractName":"WinnerTakesAll","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://186ab2a9de306ddc7e53d67c5c7765e47afa14fdaac5c556f418a0dd7b3f109a"}]}