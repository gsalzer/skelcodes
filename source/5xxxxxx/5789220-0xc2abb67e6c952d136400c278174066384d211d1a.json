{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is not paused.\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is paused.\r\n   */\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() onlyOwner whenNotPaused public {\r\n    paused = true;\r\n    emit Pause();\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() onlyOwner whenPaused public {\r\n    paused = false;\r\n    emit Unpause();\r\n  }\r\n}\r\n\r\n\r\n\r\n/// @title BlockchainCuties: Collectible and breedable cuties on the Ethereum blockchain.\r\n/// @author https://BlockChainArchitect.io\r\n/// @dev This is the BlockchainCuties configuration. It can be changed redeploying another version.\r\ncontract ConfigInterface\r\n{\r\n    function isConfig() public pure returns (bool);\r\n\r\n    function getCooldownIndexFromGeneration(uint16 _generation) public view returns (uint16);\r\n    \r\n    function getCooldownEndTimeFromIndex(uint16 _cooldownIndex) public view returns (uint40);\r\n\r\n    function getCooldownIndexCount() public view returns (uint256);\r\n    \r\n    function getBabyGen(uint16 _momGen, uint16 _dadGen) public pure returns (uint16);\r\n\r\n    function getTutorialBabyGen(uint16 _dadGen) public pure returns (uint16);\r\n\r\n    function getBreedingFee(uint40 _momId, uint40 _dadId) public view returns (uint256);\r\n}\r\n\r\n\r\n\r\ncontract CutieCoreInterface\r\n{\r\n    function isCutieCore() pure public returns (bool);\r\n\r\n    function transferFrom(address _from, address _to, uint256 _cutieId) external;\r\n    function transfer(address _to, uint256 _cutieId) external;\r\n\r\n    function ownerOf(uint256 _cutieId)\r\n        external\r\n        view\r\n        returns (address owner);\r\n\r\n    function getCutie(uint40 _id)\r\n        external\r\n        view\r\n        returns (\r\n        uint256 genes,\r\n        uint40 birthTime,\r\n        uint40 cooldownEndTime,\r\n        uint40 momId,\r\n        uint40 dadId,\r\n        uint16 cooldownIndex,\r\n        uint16 generation\r\n    );\r\n\r\n    function getGenes(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint256 genes\r\n    );\r\n\r\n\r\n    function getCooldownEndTime(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint40 cooldownEndTime\r\n    );\r\n\r\n    function getCooldownIndex(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint16 cooldownIndex\r\n    );\r\n\r\n\r\n    function getGeneration(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint16 generation\r\n    );\r\n\r\n    function getOptional(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint64 optional\r\n    );\r\n\r\n\r\n    function changeGenes(\r\n        uint40 _cutieId,\r\n        uint256 _genes)\r\n        public;\r\n\r\n    function changeCooldownEndTime(\r\n        uint40 _cutieId,\r\n        uint40 _cooldownEndTime)\r\n        public;\r\n\r\n    function changeCooldownIndex(\r\n        uint40 _cutieId,\r\n        uint16 _cooldownIndex)\r\n        public;\r\n\r\n    function changeOptional(\r\n        uint40 _cutieId,\r\n        uint64 _optional)\r\n        public;\r\n\r\n    function changeGeneration(\r\n        uint40 _cutieId,\r\n        uint16 _generation)\r\n        public;\r\n}\r\n\r\n\r\n/// @title BlockchainCuties: Collectible and breedable cuties on the Ethereum blockchain.\r\n/// @author https://BlockChainArchitect.io\r\n/// @dev This is the BlockchainCuties configuration. It can be changed redeploying another version.\r\n\r\ncontract Config is Ownable, ConfigInterface\r\n{\r\n\tfunction isConfig() public pure returns (bool)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n    /// @dev A lookup table that shows the cooldown duration after a successful\r\n    ///  breeding action, called \"breeding cooldown\". The cooldown roughly doubles each time\r\n    /// a cutie is bred, so that owners don't breed the same cutie continuously. Maximum cooldown is seven days.\r\n    uint32[14] public cooldowns = [\r\n        uint32(1 minutes),\r\n        uint32(2 minutes),\r\n        uint32(5 minutes),\r\n        uint32(10 minutes),\r\n        uint32(30 minutes),\r\n        uint32(1 hours),\r\n        uint32(2 hours),\r\n        uint32(4 hours),\r\n        uint32(8 hours),\r\n        uint32(16 hours),\r\n        uint32(1 days),\r\n        uint32(2 days),\r\n        uint32(4 days),\r\n        uint32(7 days)\r\n    ];\r\n\r\n/*    function setCooldown(uint16 index, uint32 newCooldown) public onlyOwner\r\n    {\r\n        cooldowns[index] = newCooldown;\r\n    }*/\r\n\r\n    CutieCoreInterface public coreContract;\r\n\r\n    function setup(address _coreAddress) public onlyOwner\r\n    {\r\n        CutieCoreInterface candidateContract = CutieCoreInterface(_coreAddress);\r\n        require(candidateContract.isCutieCore());\r\n        coreContract = candidateContract;\r\n    }\r\n\r\n    function getCooldownIndexFromGeneration(uint16 _generation) public view returns (uint16)\r\n    {\r\n        uint16 result = _generation;\r\n        if (result >= getCooldownIndexCount()) {\r\n            result = uint16(getCooldownIndexCount() - 1);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getCooldownEndTimeFromIndex(uint16 _cooldownIndex) public view returns (uint40)\r\n    {\r\n        return uint40(now + cooldowns[_cooldownIndex]);\r\n    }\r\n\r\n    function getCooldownIndexCount() public view returns (uint256)\r\n    {\r\n        return cooldowns.length;\r\n    }\r\n\r\n    function getBabyGen(uint16 _momGen, uint16 _dadGen) public pure returns (uint16)\r\n    {\r\n        uint16 babyGen = _momGen;\r\n        if (_dadGen > _momGen) {\r\n            babyGen = _dadGen;\r\n        }\r\n        babyGen = babyGen + 1;\r\n        return babyGen;\r\n    }\r\n\r\n    function getTutorialBabyGen(uint16 _dadGen) public pure returns (uint16)\r\n    {\r\n        // Tutorial pet gen is 0\r\n        return getBabyGen(0, _dadGen);\r\n    }\r\n\r\n    function getBreedingFee(uint40 _momId, uint40 _dadId)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        uint16 momGen = coreContract.getGeneration(_momId);\r\n        uint16 dadGen = coreContract.getGeneration(_dadId);\r\n        uint16 momCooldown = coreContract.getCooldownIndex(_momId);\r\n        uint16 dadCooldown = coreContract.getCooldownIndex(_dadId);\r\n\r\n        uint256 sum = uint256(momCooldown) + dadCooldown - momGen - dadGen;\r\n        return 1 finney + 3 szabo*sum*sum;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_cooldownIndex\",\"type\":\"uint16\"}],\"name\":\"getCooldownEndTimeFromIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint40\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_momGen\",\"type\":\"uint16\"},{\"name\":\"_dadGen\",\"type\":\"uint16\"}],\"name\":\"getBabyGen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_generation\",\"type\":\"uint16\"}],\"name\":\"getCooldownIndexFromGeneration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_dadGen\",\"type\":\"uint16\"}],\"name\":\"getTutorialBabyGen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_coreAddress\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_momId\",\"type\":\"uint40\"},{\"name\":\"_dadId\",\"type\":\"uint40\"}],\"name\":\"getBreedingFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCooldownIndexCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cooldowns\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isConfig\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coreContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Config","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6851c8b0377424a728e0e5db675c8b96ef992d56c0d16011fabdd11fc5fa7774"}]}