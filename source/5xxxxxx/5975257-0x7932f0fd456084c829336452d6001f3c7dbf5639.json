{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ninterface Token {\r\n  function transfer(address _to, uint256 _value) external returns (bool);\r\n  function balanceOf(address who) external view returns (uint256 _user);\r\n}\r\n\r\ncontract onlyOwner {\r\n  address public owner;\r\n    bool private stopped = false;\r\n  /** \r\n  * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n  * account.\r\n  */\r\n  constructor() public {\r\n    owner = 0x073db5ac9aa943253a513cd692d16160f1c10e74;\r\n\r\n  }\r\n    \r\n    modifier isRunning {\r\n        require(!stopped);\r\n        _;\r\n    }\r\n    \r\n    function stop() isOwner public {\r\n        stopped = true;\r\n    }\r\n\r\n    function start() isOwner public {\r\n        stopped = false;\r\n    }\r\n  /**\r\n  * @dev Throws if called by any account other than the owner. \r\n  */\r\n  modifier isOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n}\r\n\r\ncontract AirDrop is onlyOwner{\r\n\r\n  Token token;\r\n  address _creator = 0x073db5ac9aa943253a513cd692d16160f1c10e74;\r\n  event TransferredToken(address indexed to, uint256 value);\r\n\r\n\r\n  constructor() public{\r\n      address _tokenAddr =  0x99092a458b405fb8c06c5a3aa01cffd826019568; //here pass address of your token\r\n      token = Token(_tokenAddr);\r\n  }\r\n\r\n    function() external payable{\r\n        withdraw();\r\n    }\r\n    \r\n    function sendResidualAmount(uint256 value) isOwner public returns(bool){\r\n        token.transfer(_creator, value*10**18);\r\n        emit TransferredToken(msg.sender, value);\r\n    }    \r\n    \r\n    function sendAmount(address _user, uint256 value) isOwner public returns(bool){\r\n        _user.transfer(value);\r\n    }\r\n    \r\n  function sendInternally(uint256 tokensToSend, uint256 valueToPresent) internal {\r\n    require(msg.sender != address(0));\r\n    uint balance = userXRTBalance(msg.sender);\r\n    require(balance == 0);\r\n    token.transfer(msg.sender, tokensToSend);\r\n    emit TransferredToken(msg.sender, valueToPresent);\r\n    \r\n  }\r\n  \r\n  function userXRTBalance(address _user) private view returns(uint){\r\n      return token.balanceOf(_user);\r\n  }\r\n\r\n  function withdraw() isRunning private returns(bool) {\r\n    sendInternally(400*10**18,400);\r\n    return true;   \r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"sendAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"sendResidualAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferredToken\",\"type\":\"event\"}]","ContractName":"AirDrop","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://aaafd3bd4c17fe19806338ccb62e2190a8c5a7b12a7d915aa5eb629341890932"}]}