{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract Payments {\r\n  mapping(address => uint256) public payments; \r\n  \r\n  function getBalance() public constant returns(uint256) {\r\n\t return payments[msg.sender];\r\n  }    \r\n\r\n  function withdrawPayments() public {\r\n\taddress payee = msg.sender;\r\n\tuint256 payment = payments[payee];\r\n\r\n\trequire(payment != 0);\r\n\trequire(this.balance >= payment);\r\n\r\n\tpayments[payee] = 0;\r\n\r\n\tassert(payee.send(payment));\r\n  }  \r\n    \r\n}\r\n\r\ncontract ERC721 {\r\n  function totalSupply() constant returns (uint256);\r\n  function ownerOf(uint256) constant returns (address);\r\n}\r\n\r\n\r\ncontract PiranhasBattle is Ownable, Payments  {\r\n\r\n  using SafeMath for uint256;\r\n  \r\n\r\n  mapping(uint256 => mapping(uint256 => uint256)) public fightersToBattle; //unique pair of the fighters\r\n  mapping(uint256 => mapping(uint256 => uint256)) public battleToFighterToSize; //fighters sizes\r\n  mapping(uint256 => mapping(uint256 => uint256)) public battleToFighterToBet; // Bets summ in power points\r\n\r\n  mapping(uint256 => uint256) public battleToWinner; \r\n  \r\n  mapping(address => mapping(uint256 => mapping(uint256 => uint256))) public addressToBattleToFigterIdToBetPower;  \r\n  \r\n  uint256 public battleId;\r\n\r\n\r\n  address[][] public betsOnFighter;\r\n  \r\n\r\n  \r\n  ERC721 piranhas = ERC721(0x88aa423b70905fe68310fe74aa4246990b58809c);  //kovan\r\n  \r\n  function piranhasTotalSupply() constant returns (uint256)  {\r\n      return piranhas.totalSupply();\r\n  }\r\n\r\n  function ownerOfPiranha(uint256 _piranhaId) constant returns (address)  {\r\n      return piranhas.ownerOf(_piranhaId);\r\n  }\r\n  \r\n  function theBet(uint256 _piranhaFighter1, uint256 _piranhaFighter2, uint256 _betOnFighterId) public payable {\r\n     \r\n\t  require (_piranhaFighter1 > 0 && _piranhaFighter2 > 0 && _piranhaFighter1 != _piranhaFighter2);\r\n\t  \r\n\t  uint256 curBattleId=fightersToBattle[_piranhaFighter1][_piranhaFighter2];\r\n      require (battleToWinner[curBattleId] == 0); //battle not finished\t  \r\n\t  \r\n\t  require (msg.value >= 0.001 ether && msg.sender != address(0));\r\n\t  \r\n\t  if (curBattleId == 0) { //new battle\r\n \t      battleId = betsOnFighter.push([msg.sender]); //add gamer to the battle\r\n\t\t  fightersToBattle[_piranhaFighter1][_piranhaFighter2] = battleId;\r\n\t\t  battleToFighterToSize[battleId][_piranhaFighter1]=240; \r\n\t\t  battleToFighterToSize[battleId][_piranhaFighter2]=240; \r\n\t  } else {\r\n\t        if (addressToBattleToFigterIdToBetPower[msg.sender][battleId][_piranhaFighter1]==0 && addressToBattleToFigterIdToBetPower[msg.sender][battleId][_piranhaFighter2]==0)\r\n\t\t\t\tbetsOnFighter[battleId-1].push(msg.sender); //add gamer to the battle\r\n\t  }\r\n\t  \r\n\t  uint256 fighter1Size = battleToFighterToSize[battleId][_piranhaFighter1];\r\n\t  uint256 fighter2Size = battleToFighterToSize[battleId][_piranhaFighter2];\r\n\t  uint256 theBetPower = SafeMath.div(msg.value,1000000000000000); \r\n\t  \r\n\t  battleToFighterToBet[battleId][_betOnFighterId] += theBetPower;\r\n\t  \r\n\t  addressToBattleToFigterIdToBetPower[msg.sender][battleId][_betOnFighterId] += theBetPower;\r\n\t  \r\n\t  uint8 randNum = uint8(block.blockhash(block.number-1))%2;\r\n\t  \r\n\t  if (randNum==0) { //fighter1 the winner\r\n\r\n\t\t\tif ( fighter1Size+theBetPower >= 240) \r\n\t\t\t\tbattleToFighterToSize[battleId][_piranhaFighter1] = 240;\r\n\t\t\telse \r\n\t\t\t\tbattleToFighterToSize[battleId][_piranhaFighter1] += theBetPower;\r\n\t\t\t\t\r\n\t        if ( fighter2Size <= theBetPower) {\r\n\t\t\t\tbattleToFighterToSize[battleId][_piranhaFighter2] = 0;\r\n\t\t\t\t_finishTheBattle(battleId, _piranhaFighter1, _piranhaFighter2, 1);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t\tbattleToFighterToSize[battleId][_piranhaFighter2] -= theBetPower;\t\r\n\t\t\t\t\r\n\t  } else { //fighter2 the winner\r\n\t\t\tif ( fighter2Size+theBetPower >= 240) \r\n\t\t\t\tbattleToFighterToSize[battleId][_piranhaFighter2] = 240;\r\n\t\t\telse \r\n\t\t\t\tbattleToFighterToSize[battleId][_piranhaFighter2] += theBetPower;\r\n\t\t\t\t\r\n\t        if ( fighter1Size <= theBetPower) {\r\n\t\t\t\tbattleToFighterToSize[battleId][_piranhaFighter1] = 0;\r\n\t\t\t\t_finishTheBattle(battleId, _piranhaFighter1, _piranhaFighter2, 2);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t\tbattleToFighterToSize[battleId][_piranhaFighter1] -= theBetPower;\t\t        \r\n\t  }\r\n\t  \r\n  }\r\n  \r\n  function _finishTheBattle (uint256 _battleId, uint256 _piranhaFighter1, uint256 _piranhaFighter2, uint8 _winner) private { \r\n  \r\n\t    uint256 winnerId=_piranhaFighter1;\r\n\t\tuint256 looserId=_piranhaFighter2;\r\n\t\tif (_winner==2) {\r\n\t\t\twinnerId=_piranhaFighter2;\r\n\t\t\tlooserId=_piranhaFighter1;\r\n\t\t\tbattleToWinner[_battleId]=_piranhaFighter2;\r\n\t\t} else {\r\n\t\t\tbattleToWinner[_battleId]=_piranhaFighter1;\r\n\t\t}\r\n\r\n\t\tuint256 winPot=battleToFighterToBet[_battleId][looserId]*900000000000000; //90% in wei\r\n\t\tuint256 divsForPiranhaOwner=battleToFighterToBet[_battleId][looserId]*100000000000000; //10% in wei\r\n\t\t\r\n\t\tuint256 prizeUnit = uint256((battleToFighterToBet[_battleId][winnerId] * 1000000000000000 + winPot)  / battleToFighterToBet[_battleId][winnerId]);\r\n\t\t\r\n\t\tfor (uint256 i=0; i < betsOnFighter[_battleId-1].length; i++) {\r\n\t\t\tif (addressToBattleToFigterIdToBetPower[betsOnFighter[_battleId-1][i]][_battleId][winnerId] != 0)\r\n\t\t\t\tpayments[betsOnFighter[_battleId-1][i]] += prizeUnit * addressToBattleToFigterIdToBetPower[betsOnFighter[_battleId-1][i]][_battleId][winnerId];\r\n\t\t}\r\n\t\t\r\n\t\tif (divsForPiranhaOwner>0) {\r\n\t\t\taddress piranhaOwner=ownerOfPiranha(winnerId);\r\n\t\t\tif (piranhaOwner!=address(0))\r\n\t\t\t\tpiranhaOwner.send(divsForPiranhaOwner);\r\n\t\t}\r\n\t\t \r\n  }\r\n  \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"battleId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressToBattleToFigterIdToBetPower\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"battleToWinner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"betsOnFighter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawPayments\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fightersToBattle\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"battleToFighterToSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_piranhaFighter1\",\"type\":\"uint256\"},{\"name\":\"_piranhaFighter2\",\"type\":\"uint256\"},{\"name\":\"_betOnFighterId\",\"type\":\"uint256\"}],\"name\":\"theBet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_piranhaId\",\"type\":\"uint256\"}],\"name\":\"ownerOfPiranha\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"battleToFighterToBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"payments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"piranhasTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"PiranhasBattle","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b44605a2b69c4ecf9ca4f0ea906d7f66fee2395b75384c9ed4f8b7ee15100788"}]}