{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.2;\r\n\r\n\r\ncontract SmartPonziScheme{ \r\n    uint private sender_per_round = 50;\r\n    uint private sender = 0;\r\n    uint public round = 1;\r\n    mapping (uint => uint) public round_earnings;\r\n    mapping (address => uint) private balances;\r\n    mapping (address => uint) public roundin;\r\n    address private owner;\r\n\r\n    function SmartPonziScheme() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function () public payable {\r\n        if(balances[msg.sender] == 0 && msg.value >= 10000000000000000){\r\n            round_earnings[round] += msg.value;\r\n\t    sender += 1;\r\n\t    balances[msg.sender] = msg.value;\r\n            roundin[msg.sender] = round;\r\n            if (sender >= sender_per_round){\r\n\t        sender_per_round = (sender_per_round * 3) / 2;\t\t\t\t\t\t\t\r\n                owner.transfer(round_earnings[round]/100);\r\n                sender = 0;\r\n                round += 1;\r\n            }\r\n         }\r\n         else{\r\n             revert();\r\n         }\r\n        \r\n    }\r\n\r\n   function withdraw () public {\r\n       if (roundin[msg.sender]+1 < round){\r\n            uint withdrawAmount = balances[msg.sender];\r\n            uint counter = roundin[msg.sender]+2;\r\n            uint total_value = 0;\r\n            balances[msg.sender] = 0;\r\n            while (counter <= round){\r\n                total_value += round_earnings[counter];\r\n                counter += 1;\r\n            }\r\n            uint payout = (total_value / (2*roundin[msg.sender]*withdrawAmount)) / round_earnings[roundin[msg.sender]] ;\r\n            payout += withdrawAmount;\r\n            msg.sender.transfer(payout);\r\n            \r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"round\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"roundin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"round_earnings\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"SmartPonziScheme","CompilerVersion":"v0.4.20-nightly.2018.1.6+commit.2548228b","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bc2dff0d8e864c73574355dc4a7ff1ad40e21f2ffe919ab0a671f4f494042104"}]}