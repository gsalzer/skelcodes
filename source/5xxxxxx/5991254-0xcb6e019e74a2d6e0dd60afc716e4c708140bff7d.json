{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract AutoChainTokenCandyInface{\r\n\r\n    function name() public constant returns (string );\r\n    function  symbol() public constant returns (string );\r\n    function  decimals()  public constant returns (uint8 );\r\n    // 返回token总量，名称为totalSupply().\r\n    function  totalSupply()  public constant returns (uint256 );\r\n\r\n    /// 获取账户_owner拥有token的数量 \r\n    function  balanceOf(address _owner)  public constant returns (uint256 );\r\n\r\n    //从消息发送者账户中往_to账户转数量为_value的token\r\n    function  transfer(address _to, uint256 _value) public returns (bool );\r\n\r\n    //从账户_from中往账户_to转数量为_value的token，与approve方法配合使用\r\n    function  transferFrom(address _from, address _to, uint256 _value) public returns   \r\n    (bool );\r\n\r\n    //消息发送账户设置账户_spender能从发送账户中转出数量为_value的token\r\n    function  approve(address _spender, uint256 _value) public returns (bool );\r\n\r\n    //获取账户_spender可以从账户_owner中转出token的数量\r\n    function  allowance(address _owner, address _spender) public constant returns \r\n    (uint256 );\r\n\r\n    //发生转账时必须要触发的事件 \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n    //当函数approve(address _spender, uint256 _value)成功执行时必须触发的事件\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 \r\n    _value);\r\n}\r\n\r\ncontract AutoChainTokenCandy is AutoChainTokenCandyInface {\r\n\r\n    /* private variables of the token */\r\n    uint256 private _localtotalSupply;\t\t//总量\r\n    string private _localname;                   //名称: eg Simon Bucks\r\n    uint8 private _localdecimals;               //最多的小数位数，How many decimals to show. ie. There could 1000 base units with 3 decimals. Meaning 0.980 SBX = 980 base units. It's like comparing 1 wei to 1 ether.\r\n    string private _localsymbol;               //token简称: eg SBX\r\n    string private _localversion = '0.01';    //版本\r\n\r\n    address private _localowner; //存储合约owner\r\n\r\n    mapping (address => uint256) private balances;\r\n    mapping (address => mapping (address => uint256)) private allowed;\r\n\r\n    function  AutoChainTokenCandy() public {\r\n        _localowner=msg.sender;\t\t//储存合约的owner\r\n        balances[msg.sender] = 50000000000; // 初始token数量给予消息发送者,需要增加小数点后的位数\r\n        _localtotalSupply = 50000000000;         // 设置初始总量,需要增加小数点后的位数\r\n        _localname = 'AutoChainTokenCandy';                   // token名称\r\n        _localdecimals = 4;           // 小数位数\r\n        _localsymbol = 'ATCx';             // token简称\r\n        \r\n    }\r\n\r\n    function getOwner() constant public returns (address ){\r\n        return _localowner;\r\n    }\r\n\r\n    function  name() constant public returns (string ){\r\n    \treturn _localname;\r\n    }\r\n    function  decimals() public constant returns (uint8 ){\r\n    \treturn _localdecimals;\r\n    }\r\n    function  symbol() public constant returns (string ){\r\n    \treturn _localsymbol;\r\n    }\r\n    function  version() public constant returns (string ){\r\n    \treturn _localversion;\r\n    }\r\n    function  totalSupply() public constant returns (uint256 ){\r\n    \treturn _localtotalSupply;\r\n    }\r\n    function  transfer(address _to, uint256 _value) public returns (bool ) {\r\n        //默认totalSupply 不会超过最大值 (2^256 - 1).\r\n        //如果随着时间的推移将会有新的token生成，则可以用下面这句避免溢出的异常\r\n        require(balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]);\r\n        balances[msg.sender] -= _value;//从消息发送者账户中减去token数量_value\r\n        balances[_to] += _value;//往接收账户增加token数量_value\r\n        emit Transfer(msg.sender, _to, _value);//触发转币交易事件\r\n        return true;\r\n    }\r\n    function  transferFrom(address _from, address _to, uint256 _value) public returns \r\n    (bool ) {\r\n        require(balances[_from] >= _value &&  balances[_to] + _value > balances[_to] && allowed[_from][msg.sender] >= _value);\r\n        balances[_to] += _value;//接收账户增加token数量_value\r\n        balances[_from] -= _value; //支出账户_from减去token数量_value\r\n        allowed[_from][msg.sender] -= _value;//消息发送者可以从账户_from中转出的数量减少_value\r\n        emit Transfer(_from, _to, _value);//触发转币交易事件\r\n        return true;\r\n    }\r\n    function  balanceOf(address _owner) public constant returns (uint256 ) {\r\n        return balances[_owner];\r\n    }\r\n    function  approve(address _spender, uint256 _value) public returns (bool )   \r\n    {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    function  allowance(address _owner, address _spender) public constant returns (uint256 ) {\r\n        return allowed[_owner][_spender];//允许_spender从_owner中转出的token数\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"AutoChainTokenCandy","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8cfd989eaa222b0c6a461af254b51c220aae2f3dcee2e9cfcf2f03d567332456"}]}