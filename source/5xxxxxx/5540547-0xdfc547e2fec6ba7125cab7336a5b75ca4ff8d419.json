{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.18;\r\n\r\n/**\r\n * @title BET WEA, apuestas criptograficas\r\n * @author  WEA CEO\r\n * @version 1.0\r\n *\r\n * @section LICENSE\r\n * Contrato con registros en DIBAM, Santiago de Chile,\r\n * cualquier uso, copia u  ramificación de este código está\r\n * estrictamente prohibido, así como también el código del\r\n * frontend que resulte de mencionado contrato.\r\n *\r\n */\r\n\r\n\r\n/** ERC20 contract according OZ solutions **/\r\ncontract ERC20 {\r\n    function transfer(address _to, uint256 _value) public returns(bool);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n}\r\n\r\n/** ERC20 contract according OZ solutions **/\r\n\r\ncontract BetWEA {\r\n//0xd8e64769bb02136564737a4ecc712083b473db86, 1527353100\r\n\r\n/**\r\n*@section CONSTRUCTORS\r\n*@param limit set timestamp end time.\r\n**/\r\n    function BetWEA(address _tokenAddr, uint _limit) public { //RECORDAR USR _LIMIT\r\n        tokenAddr = _tokenAddr;\r\n        token = ERC20(_tokenAddr);\r\n        limit = _limit;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // Modifers\r\n    modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;}\r\n\r\n    // Variables globales\r\n    address public tokenAddr = 0x0;\r\n    ERC20 token;\r\n    address public owner;\r\n    address[]  ParticipantesA;\r\n    address[]  ParticipantesB;\r\n    uint maximo;\r\n    uint public winnerid;\r\n    uint public minimowea = 10000;\r\n    uint public limit;\r\n    uint r = 0; //define el estado\r\n    uint public precioether = 2000000000000000; //0.002\r\n    uint public discount = 60; //0.0012 or 1200000000000000 40%\r\n    uint public percent = 95; // lo que se queda\r\n    uint public Wp= precioether*discount/100;\r\n    uint public preciowea = 10000;\r\n\r\n/**\r\n*@section SETTERS OF BET\r\n**/\r\n    function ChooseA() public payable {\r\n       require((r==0) && (now < limit));\r\n       if(token.balanceOf(msg.sender) > minimowea){\r\n           require(msg.value == Wp);\r\n           ParticipantesA.push(msg.sender);\r\n       } else {\r\n          require(msg.value == precioether);\r\n          ParticipantesA.push(msg.sender);\r\n       }\r\n    }\r\n\r\n    function ChooseB() public payable {\r\n       require((r==0) && (now < limit));\r\n       if(token.balanceOf(msg.sender) > minimowea){\r\n           require(msg.value == Wp);\r\n           ParticipantesB.push(msg.sender);\r\n       } else {\r\n          require(msg.value == precioether);\r\n          ParticipantesB.push(msg.sender);\r\n       }\r\n    }\r\n\r\n    //Pay with WEA\r\n     function ChooseAwea() public {\r\n        require((r==0) && (now < limit));\r\n        require(token.transferFrom(msg.sender, this, preciowea));\r\n        ParticipantesA.push(msg.sender);\r\n\r\n    }\r\n\r\n    function ChooseBwea() public {\r\n        require((r==0) && (now < limit));\r\n        require(token.transferFrom(msg.sender, this, preciowea));\r\n        ParticipantesB.push(msg.sender);\r\n\r\n    }\r\n\r\n    function setWinner(uint Resultado) public onlyOwner { // 1 A, 2 B\r\n     uint  ethtransfer = this.balance*percent/100;\r\n     require(r == 0);\r\n        if(Resultado == 1){\r\n            maximo = ParticipantesA.length;\r\n            winnerid = rand(maximo);\r\n            r = 1;\r\n            token.transfer(ParticipantesA[winnerid], token.balanceOf(this));\r\n            ParticipantesA[winnerid].transfer(ethtransfer);\r\n\r\n        } else if(Resultado == 2) {\r\n            maximo = ParticipantesB.length;\r\n            winnerid = rand(maximo);\r\n            r = 2;\r\n            token.transfer(ParticipantesB[winnerid], token.balanceOf(this));\r\n            ParticipantesB[winnerid].transfer(ethtransfer);\r\n\r\n        } else { revert();}\r\n    }\r\n\r\n\r\n/**\r\n*@section OTHERS SETTERS\r\n**/\r\n    function Clean() public onlyOwner {\r\n    ParticipantesA.length = 0;\r\n    ParticipantesB.length = 0;\r\n    winnerid = 0;\r\n    r = 0;\r\n    }\r\n\r\n    function setLimit(uint _limit) public onlyOwner {\r\n        limit = _limit;\r\n    }\r\n\r\n    function setNEW(address _tokenAddr,\r\n    uint _preciowea,\r\n    uint _precioether,\r\n    uint _discount,\r\n    uint _minimowea) public onlyOwner {\r\n        tokenAddr = _tokenAddr;\r\n        precioether = _precioether;\r\n        preciowea = _preciowea;\r\n        discount = _discount;\r\n        minimowea = _minimowea;\r\n\r\n    }\r\n\r\n    function sacarETH() public onlyOwner {\r\n        owner.transfer(this.balance);\r\n    }\r\n\r\n    function sacarWEA() public onlyOwner {\r\n        token.transfer(owner, token.balanceOf(this));\r\n    }\r\n\r\n/**\r\n*@section GETTERS\r\n**/\r\n\r\n    function getParticipantesA() view public returns(address[]) { //Necesario para obtener los datos\r\n        return ParticipantesA;\r\n    }\r\n\r\n    function getParticipantesB() view public returns(address[]) { //Necesario para obtener los datos\r\n        return ParticipantesB;\r\n    }\r\n\r\n    function getWinner() view public returns(address) {\r\n        if(r == 1){\r\n        return ParticipantesA[winnerid];\r\n        } else if(r==2){\r\n            return ParticipantesB[winnerid];\r\n        } else { revert(); }\r\n    }\r\n\r\n/**\r\n*@section FALLBACK\r\n**/\r\n    function() public payable {\r\n    }\r\n\r\n/**\r\n*@section RANDOM NUMER\r\n*@param rand returns into max numer of random\r\n**/\r\n    uint256 constant private FACTOR =  115792089;\r\n    function rand(uint max) constant private returns (uint256 result){\r\n        uint256 factor = FACTOR * 100 / max;\r\n        uint256 lastBlockNumber = block.number - 1;\r\n        uint256 hashVal = uint256(block.blockhash(lastBlockNumber));\r\n        return uint256((uint256(hashVal) / factor)) % max;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"name\":\"_preciowea\",\"type\":\"uint256\"},{\"name\":\"_precioether\",\"type\":\"uint256\"},{\"name\":\"_discount\",\"type\":\"uint256\"},{\"name\":\"_minimowea\",\"type\":\"uint256\"}],\"name\":\"setNEW\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Resultado\",\"type\":\"uint256\"}],\"name\":\"setWinner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimowea\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ChooseA\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"setLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Clean\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ChooseAwea\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preciowea\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getParticipantesA\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"discount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"precioether\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getParticipantesB\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sacarETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"limit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ChooseBwea\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sacarWEA\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Wp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ChooseB\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"name\":\"_limit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"BetWEA","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000d8e64769bb02136564737a4ecc712083b473db86000000000000000000000000000000000000000000000000000000005b098f0c","Library":"","SwarmSource":"bzzr://a52c3c2835af97032aea173f684223e3ad16685e70a11e7981340319ba5a88b3"}]}