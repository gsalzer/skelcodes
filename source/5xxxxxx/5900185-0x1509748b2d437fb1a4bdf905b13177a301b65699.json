{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts\\Authorized.sol\r\n\r\n//pragma solidity ^0.4.11;\r\npragma solidity ^0.4.24;\r\n\r\n/**\r\n * @title Authorized\r\n * @dev The Authorized contract has an Authorized address, and provides basic authorization control\r\n *  it can be multiple authority.\r\n\r\n */\r\n\r\n\r\ncontract Authorized {\r\n  mapping (address => bool) public AuthorizedUser;\r\n  event AuthorizedUserChanged(address indexed addr, bool state );\r\n\r\n/**\r\n * @dev Authorized constructors grant default authorizations to contract authors.\r\n */\r\n  constructor() public{\r\n    AuthorizedUser[msg.sender] = true;\r\n  }\r\n\r\n  modifier onlyAuthorized() {\r\n    require(AuthorizedUser[msg.sender]);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * register and change authorized user\r\n   */\r\n  function setAuthorizedUser(address addr, bool state) onlyAuthorized public {\r\n    AuthorizedUser[addr] = state;\r\n    emit AuthorizedUserChanged(addr, state);\r\n  }\r\n\r\n}\r\n\r\n// File: contracts\\HBRIdentification.sol\r\n\r\n//pragma solidity ^0.4.11;\r\npragma solidity ^0.4.24;\r\n\r\n\r\n/**\r\n * @title IntegrityService\r\n * @dev The identification contract confirms the identity of the investor for the purpose of kyc / aml.\r\n *\r\n * todo authority level\r\n * step 1 approve system\r\n * step 2 approve 3rd party\r\n * step 3 approve self \r\n * step 4 approve self and system (3rd party)\r\n */\r\n \r\ncontract HBRIdentification is Authorized {\r\n\r\n  mapping (address => bool)  IdentificationDb;\r\n\r\n  event proven(address addr,bool isConfirm);\r\n\r\n\r\n  //Identification check for KYC/AML\r\n  function verify(address _addr) public view returns(bool) {\r\n   return IdentificationDb[_addr];\r\n  }\r\n\r\n  //Register members whose identity information has been verified on the website by batch system, for KYC/AML\r\n  function provenAddress(address _addr, bool _isConfirm) public onlyAuthorized {\r\n    IdentificationDb[_addr] = _isConfirm;\r\n    emit proven(_addr,_isConfirm);\r\n  }\r\n\r\n\r\n  function provenAddresseList(address[] _addrs, bool _isConfirm) public onlyAuthorized{\r\n    for (uint256 i = 0; i < _addrs.length; i++) {\r\n      provenAddress(_addrs[i],_isConfirm);\r\n    }\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_isConfirm\",\"type\":\"bool\"}],\"name\":\"provenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"verify\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"AuthorizedUser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setAuthorizedUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrs\",\"type\":\"address[]\"},{\"name\":\"_isConfirm\",\"type\":\"bool\"}],\"name\":\"provenAddresseList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isConfirm\",\"type\":\"bool\"}],\"name\":\"proven\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"AuthorizedUserChanged\",\"type\":\"event\"}]","ContractName":"HBRIdentification","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://072eae61f6132acac66d13834dedb299cceaecc7255d8afeaea37189d15a9b67"}]}