{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ncontract ERC20Interface {\r\n    // function totalSupply() public constant returns (uint);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    //function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    //function symbol() public constant returns (string);\r\n    //function decimals() public constant returns (uint256);\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint256 tokens);\r\n}\r\n\r\ncontract Control {\r\n    bool public pause;\r\n    address public owner;\r\n\r\n    event Pause(bool pause);\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier notPause {\r\n        require(!pause);\r\n        _;\r\n    }\r\n\r\n    function setPause(bool _pause) public onlyOwner {\r\n        pause = _pause;\r\n\r\n        emit Pause(_pause);\r\n    }\r\n}\r\n\r\ncontract Share is Control {\r\n    uint256 public totalSupply;\r\n    uint256 public watermark;\r\n\r\n    mapping (address => uint256) public balances;\r\n    mapping (address => uint256) public fullfilled;\r\n    mapping (address => uint256) public sellPrice;\r\n    mapping (address => uint256) public toSell;\r\n\r\n    event Transfer(address from, address to, uint256 amount);\r\n    event Income(uint256);\r\n    event Sell(address holder, uint256 price, uint256 amount);\r\n    event Buy(address seller, address buyer, uint256 amount, uint256 value);\r\n    event Withdraw(address owner, uint256 amount);\r\n\r\n    constructor(uint256 _totalSupply) public {\r\n        totalSupply = _totalSupply;\r\n        balances[msg.sender] = totalSupply;\r\n\r\n        emit Transfer(0, msg.sender, totalSupply);\r\n    }\r\n\r\n    function onIncome() public payable notPause {\r\n        if (msg.value > 0) {\r\n            uint256 split = (msg.value / totalSupply);\r\n            watermark += split;\r\n            assert(watermark * totalSupply > watermark);\r\n            emit Income(msg.value);\r\n        }\r\n    }\r\n\r\n    function() public payable {\r\n        onIncome();\r\n    }\r\n\r\n    function revenue() public view returns (uint256) {\r\n        return (watermark - fullfilled[msg.sender]) * balances[msg.sender];\r\n    }\r\n\r\n    function withdraw() public notPause {\r\n        if(balances[msg.sender] == 0) {\r\n            return;\r\n        }\r\n        uint256 value = revenue();\r\n        fullfilled[msg.sender] = watermark;\r\n        msg.sender.transfer(value);\r\n\r\n        emit Withdraw(msg.sender, value);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) internal {\r\n        // prevent overflow\r\n        require(amount > 0);\r\n        require(balances[from] >= amount);\r\n        require(balances[to] + amount > balances[to]);\r\n        \r\n\r\n        uint256 fromBonus = (watermark - fullfilled[from]) * amount;\r\n        uint256 toBonus = (watermark - fullfilled[to]) * balances[to];\r\n\r\n        balances[from] -= amount;\r\n        balances[to] += amount;\r\n\r\n        //for to, the revenue stays the same, but balance increases, so update the fullfilled\r\n        fullfilled[to] = (watermark * balances[to] - toBonus)/balances[to];\r\n\r\n        //for from, withdraw the revenue on the amount of token transferd\r\n        from.transfer(fromBonus);\r\n\r\n        emit Transfer(from, to, amount);\r\n        emit Withdraw(from, fromBonus);\r\n    }\r\n\r\n    function sell(uint256 price, uint256 amount) public {\r\n        sellPrice[msg.sender] = price;\r\n        toSell[msg.sender] = amount;\r\n\r\n        emit Sell(msg.sender, price, amount);\r\n    }\r\n\r\n    function buy(address from) public payable notPause {\r\n        require(sellPrice[from] > 0);\r\n        uint256 amount = msg.value / sellPrice[from];\r\n\r\n        if (amount >= balances[from]) {\r\n            amount = balances[from];\r\n        }\r\n\r\n        if (amount >= toSell[from]) {\r\n            amount = toSell[from];\r\n        }\r\n\r\n        require(amount > 0);\r\n\r\n        toSell[from] -= amount;\r\n        _transfer(from, msg.sender, amount);\r\n\r\n        from.transfer(msg.value);\r\n        \r\n        emit Buy(from, msg.sender, amount, msg.value);\r\n    }\r\n}\r\n/**\r\n * this contract stands for the holds of WestIndia group\r\n * all income will be split to holders according to their holds\r\n * user can buy holds from shareholders at his will\r\n */\r\ncontract ShareErc20 is Share, ERC20Interface {\r\n    string public symbol;\r\n    string public name;\r\n    uint256 public decimals;\r\n\r\n    mapping (address => mapping(address => uint256)) public allowance;\r\n\r\n    /**\r\n     * at start the owner has 100% share, which is 10,000 holds\r\n     */\r\n    constructor(string _symbol, string _name, uint _totalSupply)\r\n      Share(_totalSupply)\r\n      public {        \r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = 0;\r\n    }\r\n\r\n    function balanceOf(address addr) public constant returns(uint256) {\r\n        return balances[addr];\r\n    }\r\n\r\n    function transfer(address to, uint amount) public returns(bool) {\r\n        _transfer(msg.sender, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function approve(address to, uint256 amount) public returns(bool){\r\n        allowance[msg.sender][to] = amount;\r\n\r\n        emit Approval(msg.sender, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount) public returns(bool) {\r\n        require(allowance[from][msg.sender] >= amount);\r\n\r\n        allowance[from][msg.sender] -= amount;\r\n        _transfer(from, to, amount);\r\n\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"revenue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"toSell\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"fullfilled\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"onIncome\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"watermark\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Income\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"Pause\",\"type\":\"event\"}]","ContractName":"ShareErc20","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000098968000000000000000000000000000000000000000000000000000000000000000024354000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e436f6e747261637420546f6b656e000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://8e5eebd29b383622fe4e82eed6cee2b17c8f1c7edb9bbe7ed8d62f92e5eca7fd"}]}