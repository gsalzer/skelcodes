{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\ncontract ERC20Basic {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n \r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n \r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  \r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint256;\r\n\r\n  mapping(address => uint256) balances;\r\n\r\n  uint256 totalSupply_;\r\n\r\n  \r\n  function totalSupply() public view returns (uint256) {\r\n    return totalSupply_;\r\n  }\r\n\r\n \r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[msg.sender]);\r\n\r\n    // SafeMath.sub will throw if there is not enough balance.\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n \r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n}\r\n\r\n//-------------StandardToken.sol--------------\r\n\r\ncontract StandardToken is ERC20, BasicToken {\r\n\r\n  mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[_from]);\r\n    require(_value <= allowed[_from][msg.sender]);\r\n\r\n    balances[_from] = balances[_from].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n\r\n  function approve(address _spender, uint256 _value) public returns (bool) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n\r\n  function allowance(address _owner, address _spender) public view returns (uint256) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n\r\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n\r\n\r\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n    uint oldValue = allowed[msg.sender][_spender];\r\n    if (_subtractedValue > oldValue) {\r\n      allowed[msg.sender][_spender] = 0;\r\n    } else {\r\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n    }\r\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\n\r\ncontract AOG is StandardToken {\r\n    \r\n    using SafeMath for uint256;\r\n\r\n    string public name = \"AOG\";\r\n    string public symbol = \"AOG\";\r\n    uint256 public decimals = 18;\r\n\r\n    uint256 public totalSupply = 2700000000 * (uint256(10) ** decimals);\r\n    \r\n    uint256 public constant PreIcoSupply                  = 135000000 * (10 ** uint256(18));\r\n    uint256 public constant IcoSupply                     = 675000000  * (10 ** uint256(18));\r\n    uint256 public constant CharityInProgressSupply       = 54000000 * (10 ** uint256(18));\r\n    uint256 public constant CharityReservesSupply         = 1296000000 * (10 ** uint256(18));\r\n    uint256 public constant CoreTeamAndFoundersSupply     = 270000000 * (10 ** uint256(18));\r\n    uint256 public constant DevPromotionsMarketingSupply  = 270000000 * (10 ** uint256(18));\r\n    \r\n    bool public PRE_ICO_ON;\r\n    bool public ICO_ON;\r\n    \r\n    string public PreIcoMessage = \"Coming Soon\";\r\n    string public IcoMessage    = \"Not Started\";\r\n    \r\n    uint256 public totalRaised; // total ether raised (in wei)\r\n    uint256 public totalRaisedIco; // total ether raised (in wei)\r\n\r\n    uint256 public startTimestamp; // timestamp after which ICO will start\r\n    uint256 public durationSeconds = 31 * 24 * 60 * 60; // 31 Days pre ico\r\n\r\n    uint256 public minCap; // the ICO ether goal (in wei)\r\n    uint256 public maxCap; // the ICO ether max cap (in wei)\r\n    \r\n    uint256 public startTimestampIco; // timestamp after which ICO will start\r\n    uint256 public durationSecondsIco = 6 * 7 * 24 * 60 * 60; // 6 weeks ico\r\n\r\n    uint256 public minCapIco; // the ICO ether goal (in wei)\r\n    uint256 public maxCapIco; // the ICO ether max cap (in wei)\r\n    \r\n     address public owner;\r\n   \r\n   event Burn(address indexed from, uint256 value);\r\n   \r\n    /**\r\n     * Address which will receive raised funds \r\n     * and owns the total supply of tokens\r\n     */\r\n    address public fundsWallet;\r\n    \r\n    /* Token Distribution Wallets Address */\r\n    \r\n    address public PreIcoWallet;\r\n    address public IcoWallet;\r\n    address public CharityInProgressWallet;\r\n    address public CharityReservesWallet;\r\n    address public CoreTeamAndFoundersWallet;\r\n    address public DevPromotionsMarketingWallet;\r\n\r\n    function AOG (\r\n        address _fundsWallet,\r\n        address _PreIcoWallet,\r\n        address _IcoWallet,\r\n        address _CharityWallet,\r\n        address _CharityReservesWallet,\r\n        address _CoreTeamFoundersWallet,\r\n        address _DevPromotionsMarketingWallet\r\n        ) {\r\n            \r\n        fundsWallet = _fundsWallet;\r\n        PreIcoWallet = _PreIcoWallet;\r\n        IcoWallet = _IcoWallet;\r\n        CharityInProgressWallet = _CharityWallet;\r\n        CharityReservesWallet = _CharityReservesWallet;\r\n        CoreTeamAndFoundersWallet = _CoreTeamFoundersWallet;\r\n        DevPromotionsMarketingWallet = _DevPromotionsMarketingWallet;\r\n        owner = msg.sender;\r\n        // initially assign all tokens to the fundsWallet\r\n        balances[fundsWallet] = totalSupply;\r\n        \r\n        balances[PreIcoWallet]                  = PreIcoSupply;\r\n        balances[IcoWallet]                     = IcoSupply;\r\n        balances[CharityInProgressWallet]       = CharityInProgressSupply;\r\n        balances[CharityReservesWallet]         = CharityReservesSupply;\r\n        balances[CoreTeamAndFoundersWallet]     = CoreTeamAndFoundersSupply;\r\n        balances[DevPromotionsMarketingWallet]  = DevPromotionsMarketingSupply;\r\n        \r\n        Transfer(0x0, PreIcoWallet, PreIcoSupply);\r\n        Transfer(0x0, IcoWallet, IcoSupply);\r\n        Transfer(0x0, CharityInProgressWallet, CharityInProgressSupply);\r\n        Transfer(0x0, CharityReservesWallet, CharityReservesSupply);\r\n        Transfer(0x0, CoreTeamAndFoundersWallet, CoreTeamAndFoundersSupply);\r\n        Transfer(0x0, DevPromotionsMarketingWallet, DevPromotionsMarketingSupply);\r\n        \r\n    }\r\n    \r\n\r\n function startPreIco(uint256 _startTimestamp,uint256 _minCap,uint256 _maxCap) external returns(bool)\r\n    {\r\n        require(owner == msg.sender);\r\n        require(PRE_ICO_ON == false);\r\n        PRE_ICO_ON = true;\r\n        PreIcoMessage = \"PRE ICO RUNNING\";\r\n        startTimestamp = _startTimestamp;\r\n        minCap = _minCap;\r\n        maxCap = _maxCap;\r\n        return true;\r\n    }\r\n    \r\n    function stopPreIoc() external returns(bool)\r\n    {\r\n        require(owner == msg.sender);\r\n        require(PRE_ICO_ON == true);\r\n        PRE_ICO_ON = false;\r\n        PreIcoMessage = \"Finish\";\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function startIco(uint256 _startTimestampIco,uint256 _minCapIco,uint256 _maxCapIco) external returns(bool)\r\n    {\r\n        require(owner == msg.sender);\r\n        require(ICO_ON == false);\r\n        ICO_ON = true;\r\n        PRE_ICO_ON = false;\r\n        PreIcoMessage = \"Finish\";\r\n        IcoMessage = \"ICO RUNNING\";\r\n        \r\n        startTimestampIco = _startTimestampIco;\r\n        minCapIco = _minCapIco;\r\n        maxCapIco = _maxCapIco;\r\n        \r\n         return true;\r\n    }\r\n    \r\n\r\n    function() isPreIcoAndIcoOpen payable {\r\n      \r\n      uint256 tokenPreAmount;\r\n      uint256 tokenIcoAmount;\r\n      \r\n      // during Pre ICO   \r\n      \r\n        if(PRE_ICO_ON == true)\r\n        {\r\n            totalRaised = totalRaised.add(msg.value);\r\n        \r\n        if(totalRaised >= maxCap || (now >= (startTimestamp + durationSeconds) && totalRaised >= minCap))\r\n            {\r\n                PRE_ICO_ON = false;\r\n                PreIcoMessage = \"Finish\";\r\n            }\r\n            \r\n        }\r\n    \r\n    // during ICO   \r\n    \r\n         if(ICO_ON == true)\r\n        {\r\n            totalRaisedIco = totalRaisedIco.add(msg.value);\r\n           \r\n            if(totalRaisedIco >= maxCapIco || (now >= (startTimestampIco + durationSecondsIco) && totalRaisedIco >= minCapIco))\r\n            {\r\n                ICO_ON = false;\r\n                IcoMessage = \"Finish\";\r\n            }\r\n        } \r\n        \r\n        // immediately transfer ether to fundsWallet\r\n        fundsWallet.transfer(msg.value);\r\n    }\r\n    \r\n     modifier isPreIcoAndIcoOpen() {\r\n        \r\n        if(PRE_ICO_ON == true)\r\n        {\r\n             require(now >= startTimestamp);\r\n             require(now <= (startTimestamp + durationSeconds) || totalRaised < minCap);\r\n             require(totalRaised <= maxCap);\r\n             _;\r\n        }\r\n        \r\n        if(ICO_ON == true)\r\n        {\r\n            require(now >= startTimestampIco);\r\n            require(now <= (startTimestampIco + durationSecondsIco) || totalRaisedIco < minCapIco);\r\n            require(totalRaisedIco <= maxCapIco);\r\n            _;\r\n        }\r\n        \r\n    }\r\n    \r\n    /****** Pre Ico Token Calculation ******/\r\n\r\n    function calculatePreTokenAmount(uint256 weiAmount) constant returns(uint256) {\r\n       \r\n   \r\n        uint256 tokenAmount;\r\n        uint256 standardRateDaysWise;\r\n        \r\n        standardRateDaysWise = calculatePreBonus(weiAmount); // Rate\r\n        tokenAmount = weiAmount.mul(standardRateDaysWise);       // Number of coin\r\n              \r\n        return tokenAmount;\r\n    \r\n    }\r\n    \r\n      /************ ICO Token Calculation ***********/\r\n\r\n    function calculateIcoTokenAmount(uint256 weiAmount) constant returns(uint256) {\r\n     \r\n        uint256 tokenAmount;\r\n        uint256 standardRateDaysWise;\r\n        \r\n        if (now <= startTimestampIco + 7 days) {\r\n             \r\n            standardRateDaysWise = calculateIcoBonus(weiAmount,1,1); // Rate\r\n            return tokenAmount = weiAmount.mul(standardRateDaysWise);  // Number of coin\r\n             \r\n         } else if (now >= startTimestampIco + 7 days && now <= startTimestampIco + 14 days) {\r\n              \r\n              standardRateDaysWise = calculateIcoBonus(weiAmount,1,2); // Rate \r\n               \r\n              return tokenAmount = weiAmount.mul(standardRateDaysWise);\r\n             \r\n         } else if (now >= startTimestampIco + 14 days) {\r\n             \r\n               standardRateDaysWise = calculateIcoBonus(weiAmount,1,3);\r\n              \r\n               return tokenAmount = weiAmount.mul(standardRateDaysWise);\r\n             \r\n         } else {\r\n            return tokenAmount;\r\n        }\r\n    }\r\n        \r\n    function calculatePreBonus(uint256 userAmount) returns(uint256)\r\n    {\r\n     \r\n    // 0.1 to 4.99 eth\r\n    \r\n        if(userAmount >= 100000000000000000 && userAmount < 5000000000000000000)\r\n        {\r\n                return 7000;\r\n        } \r\n        else if(userAmount >= 5000000000000000000 && userAmount < 15000000000000000000)\r\n        {\r\n                return 8000;\r\n        }\r\n        else if(userAmount >= 15000000000000000000 && userAmount < 30000000000000000000)\r\n        {\r\n               return 9000;\r\n        }\r\n        else if(userAmount >= 30000000000000000000 && userAmount < 60000000000000000000)\r\n        {\r\n                return 10000;\r\n        }\r\n        else if(userAmount >= 60000000000000000000 && userAmount < 100000000000000000000)\r\n        {\r\n               return 11250;\r\n        }\r\n        else if(userAmount >= 100000000000000000000)\r\n        {\r\n                return 12500;\r\n        }\r\n    }\r\n    \r\n    \r\n    function calculateIcoBonus(uint256 userAmount,uint _calculationType, uint _sno) returns(uint256)\r\n    {\r\n            // 0.1 to 4.99 eth \r\n    \r\n        if(userAmount >= 100000000000000000 && userAmount < 5000000000000000000)\r\n        {\r\n                if(_sno == 1) // 1-7 Days\r\n                {\r\n                    return 6000;\r\n                    \r\n                } else if(_sno == 2)  // 8-14 Days\r\n                {\r\n                    return 5500;\r\n                    \r\n                } else if(_sno == 3) // 15+ Days\r\n                {\r\n                    return 5000;\r\n                }\r\n            \r\n        } \r\n        else if(userAmount >= 5000000000000000000 && userAmount < 15000000000000000000)\r\n        {\r\n                if(_sno == 1) // 1-7 Days\r\n                {\r\n                    return 6600;\r\n                    \r\n                } else if(_sno == 2)  //8-14 Days\r\n                {\r\n                    return 6050;\r\n                    \r\n                } else if(_sno == 3) // 15+ Days\r\n                {\r\n                    return 5500;\r\n                }\r\n            \r\n        }\r\n        else if(userAmount >= 15000000000000000000 && userAmount < 30000000000000000000)\r\n        {\r\n                if(_sno == 1) // 1-7 Days\r\n                {\r\n                    return 7200;\r\n                    \r\n                } else if(_sno == 2)  // 8-14 Days\r\n                {\r\n                    return 6600;\r\n                    \r\n                } else if(_sno == 3) // 15+ Days\r\n                {\r\n                    return 6000;\r\n                }\r\n            \r\n        }\r\n        else if(userAmount >= 30000000000000000000 && userAmount < 60000000000000000000)\r\n        {\r\n                if(_sno == 1) // 1-7 Days\r\n                {\r\n                    return 7500;\r\n                    \r\n                } else if(_sno == 2)  // 8-14 Days\r\n                {\r\n                    return 6875;\r\n                    \r\n                } else if(_sno == 3) // 15+ Days\r\n                {\r\n                    return 6250;\r\n                }\r\n            \r\n        }\r\n        else if(userAmount >= 60000000000000000000 && userAmount < 100000000000000000000)\r\n        {\r\n                if(_sno == 1) // 1-7 Days\r\n                {\r\n                    return 7800;\r\n                    \r\n                } else if(_sno == 2)  // 8-14 Days\r\n                {\r\n                    return 7150;\r\n                    \r\n                } else if(_sno == 3) // 15+ Days\r\n                {\r\n                    return 6500;\r\n                }\r\n            \r\n        }\r\n        else if(userAmount >= 100000000000000000000)\r\n        {\r\n                if(_sno == 1) // 1-7 Days\r\n                {\r\n                    return 8400;\r\n                    \r\n                } else if(_sno == 2)  // 8-14 Days\r\n                {\r\n                    return 7700;\r\n                    \r\n                } else if(_sno == 3) // 15+ Days\r\n                {\r\n                    return 7000;\r\n                }\r\n        }\r\n    }\r\n    \r\n     // AOG GAME   \r\n \r\n   function TokenGameTransfer(address _to, uint _gamevalue) returns (bool)\r\n    {\r\n        return super.transfer(_to, _gamevalue);\r\n    } \r\n          \r\n \r\n   function TokenTransferFrom(address _from, address _to, uint _value) returns (bool)\r\n    {\r\n            return super.transferFrom(_from, _to, _value);\r\n    } \r\n    \r\n     function TokenTransferTo(address _to, uint _value) returns (bool)\r\n    {\r\n           return super.transfer(_to, _value);\r\n    } \r\n    \r\n    function BurnToken(address _from) public returns(bool success)\r\n    {\r\n        require(owner == msg.sender);\r\n        require(balances[_from] > 0);   // Check if the sender has enough\r\n        uint _value = balances[_from];\r\n        balances[_from] -= _value;            // Subtract from the sender\r\n        totalSupply -= _value;                      // Updates totalSupply\r\n        Burn(_from, _value);\r\n        return true;\r\n    }\r\n    \r\n// Add off chain Pre Ico and Ico contribution for BTC users transparency\r\n         \r\n    function addOffChainRaisedContribution(address _to, uint _value,uint weiAmount)  returns(bool) {\r\n            \r\n        if(PRE_ICO_ON == true)\r\n        {\r\n            totalRaised = totalRaised.add(weiAmount);  \r\n            return super.transfer(_to, _value);\r\n        } \r\n        \r\n        if(ICO_ON == true)\r\n        {\r\n            totalRaisedIco = totalRaisedIco.add(weiAmount);\r\n            return super.transfer(_to, _value);\r\n        }\r\n            \r\n    }\r\n    \r\n    function changeOwner(address _addr) external returns (bool){\r\n        require(owner == msg.sender);\r\n        owner = _addr;\r\n        return true;\r\n    }\r\n   \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePreTokenAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PreIcoSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_startTimestampIco\",\"type\":\"uint256\"},{\"name\":\"_minCapIco\",\"type\":\"uint256\"},{\"name\":\"_maxCapIco\",\"type\":\"uint256\"}],\"name\":\"startIco\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TokenTransferTo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"durationSecondsIco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundsWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IcoMessage\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"BurnToken\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CharityReservesWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTimestampIco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICO_ON\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"userAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePreBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CoreTeamAndFoundersSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IcoSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DevPromotionsMarketingWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"calculateIcoTokenAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"userAmount\",\"type\":\"uint256\"},{\"name\":\"_calculationType\",\"type\":\"uint256\"},{\"name\":\"_sno\",\"type\":\"uint256\"}],\"name\":\"calculateIcoBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minCapIco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_gamevalue\",\"type\":\"uint256\"}],\"name\":\"TokenGameTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRaisedIco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"durationSeconds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CharityInProgressSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"addOffChainRaisedContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PreIcoMessage\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CoreTeamAndFoundersWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DevPromotionsMarketingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TokenTransferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRE_ICO_ON\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_startTimestamp\",\"type\":\"uint256\"},{\"name\":\"_minCap\",\"type\":\"uint256\"},{\"name\":\"_maxCap\",\"type\":\"uint256\"}],\"name\":\"startPreIco\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CharityInProgressWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopPreIoc\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PreIcoWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IcoWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxCapIco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CharityReservesSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_fundsWallet\",\"type\":\"address\"},{\"name\":\"_PreIcoWallet\",\"type\":\"address\"},{\"name\":\"_IcoWallet\",\"type\":\"address\"},{\"name\":\"_CharityWallet\",\"type\":\"address\"},{\"name\":\"_CharityReservesWallet\",\"type\":\"address\"},{\"name\":\"_CoreTeamFoundersWallet\",\"type\":\"address\"},{\"name\":\"_DevPromotionsMarketingWallet\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"AOG","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000054c44416d288cdbc128651da741294dd673f23e80000000000000000000000009c75af0707b0ff6951f7aa143194c8315eccc150000000000000000000000000961c8e492d9110d7be3cad44e7f2b6629c25f6300000000000000000000000007313ab35ecddcaec9a75f7a968700cd0af9b490800000000000000000000000016bc4a925f53e867ecafed10073344af02e0eacd0000000000000000000000005facba4b2b29fadc6f79e682e7d2f0dab7c71ce00000000000000000000000005b9bd00cd73214a9bf5667c02482a032d5538b8b","Library":"","SwarmSource":"bzzr://20fa7c9a9504ab28837ca7607325c896e02cb4a12ccfd8a0a1c7054e4104eebb"}]}