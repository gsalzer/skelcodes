{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n/**\r\n * The Owned contract ensures that only the creator (deployer) of a \r\n * contract can perform certain tasks.\r\n */\r\ncontract Owned {\r\n    address public owner = msg.sender;\r\n    event OwnerChanged(address indexed old, address indexed current);\r\n    modifier only_owner { require(msg.sender == owner); _; }\r\n    function setOwner(address _newOwner) only_owner public { emit OwnerChanged(owner, _newOwner); owner = _newOwner; }\r\n}\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n    \r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n  \r\n}\r\n\r\ncontract DepositTiken is Owned {\r\n    \r\n    using SafeMath for uint;\r\n    \r\n    uint public _money = 0;\r\n//  uint public _moneySystem = 0;\r\n    uint public _tokens = 0;\r\n    uint public _sellprice = 10**18;\r\n    uint public contractBalance;\r\n    \r\n    // сохранить баланс на счетах пользователя\r\n    \r\n    mapping (address => uint) balances;\r\n    \r\n    event SomeEvent(address indexed from, address indexed to, uint value, bytes32 status);\r\n    constructor () public {\r\n        uint s = 10**18;\r\n        _sellprice = s.mul(95).div(100);\r\n    }\r\n    function balanceOf(address addr) public constant returns(uint){\r\n        return balances[addr];\r\n    }\r\n    function balance() public constant returns(uint){\r\n        return balances[msg.sender];\r\n    }\r\n    // OK\r\n    function buy() external payable {\r\n        uint _value = msg.value.mul(10**18).div(_sellprice.mul(100).div(95));\r\n        \r\n        _money += msg.value.mul(97).div(100);\r\n        //_moneySystem += msg.value.mul(3).div(100);\r\n        \r\n        owner.transfer(msg.value.mul(3).div(100));\r\n        \r\n        _tokens += _value;\r\n        balances[msg.sender] += _value;\r\n        \r\n        _sellprice = _money.mul(10**18).mul(99).div(_tokens).div(100);\r\n        \r\n        address _this = this;\r\n        contractBalance = _this.balance;\r\n        \r\n        emit SomeEvent(msg.sender, this, _value, \"buy\");\r\n    }\r\n    \r\n    function sell (uint256 countTokens) public {\r\n        require(balances[msg.sender] - countTokens >= 0);\r\n        \r\n        uint _value = countTokens.mul(_sellprice).div(10**18);\r\n        \r\n        _money -= _value;\r\n        \r\n        _tokens -= countTokens;\r\n        balances[msg.sender] -= countTokens;\r\n        \r\n        if(_tokens > 0) {\r\n            _sellprice = _money.mul(10**18).mul(99).div(_tokens).div(100);\r\n        }\r\n        \r\n        address _this = this;\r\n        contractBalance = _this.balance;\r\n        \r\n        msg.sender.transfer(_value);\r\n        \r\n        emit SomeEvent(msg.sender, this, _value, \"sell\");\r\n    }\r\n    function getPrice() public constant returns (uint bid, uint ask) {\r\n        bid = _sellprice.mul(100).div(95);\r\n        ask = _sellprice;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_money\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_tokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"bid\",\"type\":\"uint256\"},{\"name\":\"ask\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_sellprice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"countTokens\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"status\",\"type\":\"bytes32\"}],\"name\":\"SomeEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"old\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"current\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}]","ContractName":"DepositTiken","CompilerVersion":"v0.4.23-nightly.2018.4.17+commit.5499db01","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://efbcf31d0b307c4dfea8716560ac0021cb769a26c5423f233199be1c0a7030b2"}]}