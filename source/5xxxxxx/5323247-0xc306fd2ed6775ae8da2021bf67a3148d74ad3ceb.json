{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\ncontract Bitscreen {\r\n    struct IPFSHash {\r\n    bytes32 hash;\r\n    uint8 hashFunction;\r\n    uint8 size;\r\n    }\r\n    event ImageChange(bytes32 _hash,uint8 _hashFunction,uint8 _size);\r\n\r\n    struct ScreenData {\r\n    uint currLargestAmount;\r\n    uint256 totalRaised;\r\n    address currHolder;\r\n    uint8 heightRatio;\r\n    uint8 widthRatio;\r\n    string country;\r\n    }\r\n    \r\n    struct ContentRules {\r\n        bool sexual;\r\n        bool violent;\r\n        bool political;\r\n        bool controversial;\r\n        bool illegal;\r\n    }\r\n    event RuleChange(bool _sexual,bool _violent,bool _political,bool _controversial,bool _illegal);\r\n    address public owner;\r\n    \r\n    IPFSHash public currPicHash;\r\n    \r\n    ScreenData public screenstate;\r\n    ContentRules public rules;\r\n    address[] private badAddresses;\r\n\r\n    function Bitscreen(bytes32 _ipfsHash, uint8 _ipfsHashFunc, uint8 _ipfsHashSize, uint8 _heightRatio, uint8 _widthRatio, string _country) public {\r\n        owner = msg.sender;\r\n        currPicHash = IPFSHash(_ipfsHash,_ipfsHashFunc,_ipfsHashSize);\r\n        screenstate = ScreenData(0,0, msg.sender,_heightRatio,_widthRatio,_country);\r\n        rules = ContentRules(false,false,false,false,false);\r\n    }\r\n    \r\n    function remove() public {\r\n        if(msg.sender == owner) {\r\n        selfdestruct(owner);\r\n        }\r\n    }\r\n    \r\n    function withdraw() external{\r\n        if(msg.sender == owner) {\r\n            uint256 withdrawAmount = screenstate.totalRaised;\r\n            screenstate.totalRaised=0;\r\n            screenstate.currLargestAmount=0;\r\n            msg.sender.transfer(withdrawAmount);\r\n        }else{\r\n            revert();\r\n        }\r\n    }\r\n\r\n    function getBadAddresses() external constant returns (address[]) {\r\n        if(msg.sender == owner) {\r\n            return badAddresses;\r\n        }else{\r\n            revert();\r\n        }\r\n    }\r\n\r\n\r\n    function changeRules(bool _sexual,bool _violent, bool _political, bool _controversial, bool _illegal) public {\r\n                if(msg.sender == owner) {\r\n                rules.sexual=_sexual;\r\n                rules.violent=_violent;\r\n                rules.political=_political;\r\n                rules.controversial=_controversial;\r\n                rules.illegal=_illegal;\r\n                \r\n                RuleChange(_sexual,_violent,_political,_controversial,_illegal);\r\n                \r\n                }else{\r\n                revert();\r\n                }\r\n    }\r\n\r\n\r\n    function changeBid(bytes32 _ipfsHash, uint8 _ipfsHashFunc, uint8 _ipfsHashSize) payable external {\r\n            if(msg.value>screenstate.currLargestAmount) {\r\n                screenstate.currLargestAmount=msg.value;\r\n                screenstate.currHolder=msg.sender;\r\n                screenstate.totalRaised+=msg.value;\r\n                \r\n                currPicHash.hash=_ipfsHash;\r\n                currPicHash.hashFunction=_ipfsHashFunc;\r\n                currPicHash.size=_ipfsHashSize;\r\n                \r\n                ImageChange(_ipfsHash,_ipfsHashFunc,_ipfsHashSize);\r\n                \r\n            }else {\r\n                revert();\r\n            }\r\n    }\r\n    \r\n    function emergencyOverwrite(bytes32 _ipfsHash, uint8 _ipfsHashFunc, uint8 _ipfsHashSize) external {\r\n        if(msg.sender == owner) { \r\n            badAddresses.push(screenstate.currHolder);\r\n            currPicHash.hash=_ipfsHash;\r\n            currPicHash.hashFunction=_ipfsHashFunc;\r\n            currPicHash.size=_ipfsHashSize;\r\n            screenstate.currHolder=msg.sender;\r\n            ImageChange(_ipfsHash,_ipfsHashFunc,_ipfsHashSize);\r\n        }else{\r\n            revert();\r\n        }\r\n    }\r\n    \r\n    function () payable public {}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"currPicHash\",\"outputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"hashFunction\",\"type\":\"uint8\"},{\"name\":\"size\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sexual\",\"type\":\"bool\"},{\"name\":\"_violent\",\"type\":\"bool\"},{\"name\":\"_political\",\"type\":\"bool\"},{\"name\":\"_controversial\",\"type\":\"bool\"},{\"name\":\"_illegal\",\"type\":\"bool\"}],\"name\":\"changeRules\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ipfsHash\",\"type\":\"bytes32\"},{\"name\":\"_ipfsHashFunc\",\"type\":\"uint8\"},{\"name\":\"_ipfsHashSize\",\"type\":\"uint8\"}],\"name\":\"emergencyOverwrite\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ipfsHash\",\"type\":\"bytes32\"},{\"name\":\"_ipfsHashFunc\",\"type\":\"uint8\"},{\"name\":\"_ipfsHashSize\",\"type\":\"uint8\"}],\"name\":\"changeBid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBadAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rules\",\"outputs\":[{\"name\":\"sexual\",\"type\":\"bool\"},{\"name\":\"violent\",\"type\":\"bool\"},{\"name\":\"political\",\"type\":\"bool\"},{\"name\":\"controversial\",\"type\":\"bool\"},{\"name\":\"illegal\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"remove\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"screenstate\",\"outputs\":[{\"name\":\"currLargestAmount\",\"type\":\"uint256\"},{\"name\":\"totalRaised\",\"type\":\"uint256\"},{\"name\":\"currHolder\",\"type\":\"address\"},{\"name\":\"heightRatio\",\"type\":\"uint8\"},{\"name\":\"widthRatio\",\"type\":\"uint8\"},{\"name\":\"country\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ipfsHash\",\"type\":\"bytes32\"},{\"name\":\"_ipfsHashFunc\",\"type\":\"uint8\"},{\"name\":\"_ipfsHashSize\",\"type\":\"uint8\"},{\"name\":\"_heightRatio\",\"type\":\"uint8\"},{\"name\":\"_widthRatio\",\"type\":\"uint8\"},{\"name\":\"_country\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_hashFunction\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"_size\",\"type\":\"uint8\"}],\"name\":\"ImageChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_sexual\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_violent\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_political\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_controversial\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_illegal\",\"type\":\"bool\"}],\"name\":\"RuleChange\",\"type\":\"event\"}]","ContractName":"Bitscreen","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"dce5afe4e794c448a08f7348cc8b0fe2022966a5d797c870a62ed637492df58b000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000009000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000343414e0000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://64f8f3b5dafc43b9e2c7aa53a028f312e16d491a281ab9f98d547349487a83bb"}]}