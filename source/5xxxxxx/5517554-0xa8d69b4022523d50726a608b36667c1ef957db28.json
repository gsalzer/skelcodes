{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\ncontract ERC20Interface {\r\n    function totalSupply() public constant returns (uint256 supply);\r\n    function balance() public constant returns (uint256);\r\n    function balanceOf(address _owner) public constant returns (uint256);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract Santal is ERC20Interface {\r\n    string public constant symbol = \"TXQ\";\r\n    string public constant name = \"santal\";\r\n    uint8  public constant decimals = 18;\r\n\r\n    uint256 public _airdropTotal = 0;\r\n    uint256 public _airdropLimit = 10 * 10000 * 1000000000000000000;\r\n    uint256 public _airdropAmount = 10 * 1000000000000000000; \r\n    uint256 public totalSupply = 50000 * 10000 * 1000000000000000000;\r\n    uint safeGas = 2300;\r\n    \r\n    uint256 public unitsOneEthCanBuy = 8000 * 1000000000000000000;\r\n    uint256 public canBuyLimit = 1000 * 10000 * 1000000000000000000;\r\n    uint256 public hasBuyTotal = 0;\r\n    uint256 public totalEthInWei;\r\n    uint256 constant public unitEthWei = 1000000000000000000;\r\n    address public owner;\r\n    bool public isBuyStopped;\r\n    bool public isAirdropStopped;\r\n\r\n    mapping(address => uint256) balances;\r\n    mapping(address => bool) initialized;\r\n    mapping(address => bool) hasBuyed;\r\n\r\n\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n    \r\n    event LOG_SuccessfulSend(address addr, uint amount);\r\n    event LOG_FailedSend(address receiver, uint amount);\r\n    event LOG_ZeroSend();\r\n    \r\n    event LOG_BuyStopped();\r\n    event LOG_BuyResumed();\r\n    \r\n    event LOG_AirdropStopped();\r\n    event LOG_AirdropResumed();\r\n    \r\n    event LOG_OwnerAddressChanged(address oldAddr, address newOwnerAddress);\r\n    \r\n    modifier onlyOwner {\r\n        if (owner != msg.sender) throw;\r\n        _;\r\n    }\r\n\r\n    function Santal() {\r\n        owner = msg.sender;\r\n        initialized[msg.sender] = true;\r\n        balances[msg.sender] = totalSupply - _airdropLimit - canBuyLimit;\r\n    }\r\n    \r\n    function() payable{\r\n        \r\n        if (isBuyStopped) throw;\r\n        \r\n        if (!hasBuyed[msg.sender]) {\r\n            hasBuyed[msg.sender] = true;\r\n        }\r\n\r\n        totalEthInWei = totalEthInWei + msg.value;\r\n        uint256 amount = msg.value * (unitsOneEthCanBuy / unitEthWei);\r\n        \r\n        hasBuyTotal += amount;\r\n         \r\n        if(amount > canBuyLimit || hasBuyTotal > canBuyLimit) throw;\r\n        \r\n        balances[msg.sender] = balances[msg.sender] + amount;\r\n\r\n        Transfer(owner, msg.sender, amount);\r\n\r\n        safeSend(owner, msg.value);\r\n    }\r\n    \r\n    function safeSend(address addr, uint value)\r\n        private {\r\n\r\n        if (value == 0) {\r\n            LOG_ZeroSend();\r\n            return;\r\n        }\r\n\r\n        if (!(addr.call.gas(safeGas).value(value)())) {\r\n            LOG_FailedSend(addr, value);\r\n        }\r\n\r\n        LOG_SuccessfulSend(addr,value);\r\n    }\r\n\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n\r\n        if(!_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) { throw; }\r\n        return true;\r\n    }\r\n\r\n    function totalSupply() constant returns (uint256 supply) {\r\n        return totalSupply;\r\n    }\r\n\r\n    function balance() constant returns (uint256) {\r\n        return getBalance(msg.sender);\r\n    }\r\n\r\n    function balanceOf(address _address) constant returns (uint256) {\r\n        return getBalance(_address);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _amount) returns (bool success) {\r\n        initialize(msg.sender);\r\n\r\n        if (balances[msg.sender] >= _amount\r\n            && _amount > 0) {\r\n            initialize(_to);\r\n            if (balances[_to] + _amount > balances[_to]) {\r\n\r\n                balances[msg.sender] -= _amount;\r\n                balances[_to] += _amount;\r\n\r\n                Transfer(msg.sender, _to, _amount);\r\n\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _amount) returns (bool success) {\r\n        initialize(_from);\r\n\r\n        if (balances[_from] >= _amount\r\n            && allowed[_from][msg.sender] >= _amount\r\n            && _amount > 0) {\r\n            initialize(_to);\r\n            if (balances[_to] + _amount > balances[_to]) {\r\n\r\n                balances[_from] -= _amount;\r\n                allowed[_from][msg.sender] -= _amount;\r\n                balances[_to] += _amount;\r\n\r\n                Transfer(_from, _to, _amount);\r\n\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function approve(address _spender, uint256 _amount) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function initialize(address _address) internal returns (bool success) {\r\n        if (!isAirdropStopped && _airdropTotal < _airdropLimit && !initialized[_address]) {\r\n            initialized[_address] = true;\r\n            balances[_address] = _airdropAmount;\r\n            _airdropTotal += _airdropAmount;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function getBalance(address _address) internal returns (uint256) {\r\n        if (_airdropTotal < _airdropLimit && !initialized[_address] && !hasBuyed[_address]) {\r\n            return balances[_address] + _airdropAmount;\r\n        }\r\n        else {\r\n            return balances[_address];\r\n        }\r\n    }\r\n    \r\n    function stopBuy()\r\n        onlyOwner {\r\n\r\n        isBuyStopped = true;\r\n        LOG_BuyStopped();\r\n    }\r\n\r\n    function resumeBuy()\r\n        onlyOwner {\r\n\r\n        isBuyStopped = false;\r\n        LOG_BuyResumed();\r\n    }\r\n    \r\n    function stopAirdrop()\r\n        onlyOwner {\r\n\r\n        isAirdropStopped = true;\r\n        LOG_AirdropStopped();\r\n    }\r\n\r\n    function resumeAirdrop()\r\n        onlyOwner {\r\n\r\n        isAirdropStopped = false;\r\n        LOG_AirdropResumed();\r\n    }\r\n    \r\n        function changeOwnerAddress(address newOwner)\r\n        onlyOwner {\r\n\r\n        if (newOwner == address(0x0)) throw;\r\n        owner = newOwner;\r\n        LOG_OwnerAddressChanged(owner, newOwner);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resumeBuy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_airdropLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasBuyTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isBuyStopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resumeAirdrop\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_airdropAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopBuy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopAirdrop\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unitEthWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unitsOneEthCanBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canBuyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwnerAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalEthInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isAirdropStopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_airdropTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LOG_SuccessfulSend\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LOG_FailedSend\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LOG_ZeroSend\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LOG_BuyStopped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LOG_BuyResumed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LOG_AirdropStopped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LOG_AirdropResumed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwnerAddress\",\"type\":\"address\"}],\"name\":\"LOG_OwnerAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Santal","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ab35e8ea2c8c1cf83c766b7f170788637f38d9b24abde79dbf6fa775f9bcbfe7"}]}