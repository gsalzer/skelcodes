{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\t\r\n\r\n\tcontract ERC20 {\r\n\t  uint public totalSupply;\r\n\t  function balanceOf(address who) constant returns (uint);\r\n\t  function allowance(address owner, address spender) constant returns (uint);\r\n\t\r\n\r\n\t  function transfer(address _to, uint _value) returns (bool success);\r\n\t  function transferFrom(address _from, address _to, uint _value) returns (bool success);\r\n\t  function approve(address spender, uint value) returns (bool ok);\r\n\t  event Transfer(address indexed from, address indexed to, uint value);\r\n\t  event Approval(address indexed owner, address indexed spender, uint value);\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Math operations with safety checks\r\n\t */\r\n\tcontract SafeMath {\r\n\t  function safeMul(uint a, uint b) internal returns (uint) {\r\n\t    uint c = a * b;\r\n\t    assert(a == 0 || c / a == b);\r\n\t    return c;\r\n\t  }\r\n\t\r\n\r\n\t  function safeDiv(uint a, uint b) internal returns (uint) {\r\n\t    assert(b > 0);\r\n\t    uint c = a / b;\r\n\t    assert(a == b * c + a % b);\r\n\t    return c;\r\n\t  }\r\n\t\r\n\r\n\t  function safeSub(uint a, uint b) internal returns (uint) {\r\n\t    assert(b <= a);\r\n\t    return a - b;\r\n\t  }\r\n\t\r\n\r\n\t  function safeAdd(uint a, uint b) internal returns (uint) {\r\n\t    uint c = a + b;\r\n\t    assert(c>=a && c>=b);\r\n\t    return c;\r\n\t  }\r\n\t\r\n\r\n\t  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n\t    return a >= b ? a : b;\r\n\t  }\r\n\t\r\n\r\n\t  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n\t    return a < b ? a : b;\r\n\t  }\r\n\t\r\n\r\n\t  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t    return a >= b ? a : b;\r\n\t  }\r\n\t\r\n\r\n\t  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t    return a < b ? a : b;\r\n\t  }\r\n\t\r\n\r\n\t}\r\n\t\r\n\r\n\tcontract StandardToken is ERC20, SafeMath {\r\n\t\r\n\r\n\t  /* Token supply got increased and a new owner received these tokens */\r\n\t  event Minted(address receiver, uint amount);\r\n\t\r\n\r\n\t  /* Actual balances of token holders */\r\n\t  mapping(address => uint) balances;\r\n\t\r\n\r\n\t  /* approve() allowances */\r\n\t  mapping (address => mapping (address => uint)) allowed;\r\n\t\r\n\r\n\t  /* Interface declaration */\r\n\t  function isToken() public constant returns (bool weAre) {\r\n\t    return true;\r\n\t  }\r\n\t\r\n\r\n\t  function transfer(address _to, uint _value) returns (bool success) {\r\n\t    balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n\t    balances[_to] = safeAdd(balances[_to], _value);\r\n\t    Transfer(msg.sender, _to, _value);\r\n\t    return true;\r\n\t  }\r\n\t\r\n\r\n\t  function transferFrom(address _from, address _to, uint _value) returns (bool success) {\r\n\t    uint _allowance = allowed[_from][msg.sender];\r\n\t\r\n\r\n\t    balances[_to] = safeAdd(balances[_to], _value);\r\n\t    balances[_from] = safeSub(balances[_from], _value);\r\n\t    allowed[_from][msg.sender] = safeSub(_allowance, _value);\r\n\t    Transfer(_from, _to, _value);\r\n\t    return true;\r\n\t  }\r\n\t\r\n\r\n\t  function balanceOf(address _owner) constant returns (uint balance) {\r\n\t    return balances[_owner];\r\n\t  }\r\n\t\r\n\r\n\t  function approve(address _spender, uint _value) returns (bool success) {\r\n\t\r\n\r\n\t    // To change the approve amount you first have to reduce the addresses`\r\n\t    //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n\t    //  already 0 to mitigate the race condition described here:\r\n\t    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n\r\n\t    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n\t\r\n\r\n\t    allowed[msg.sender][_spender] = _value;\r\n\t    Approval(msg.sender, _spender, _value);\r\n\t    return true;\r\n\t  }\r\n\t\r\n\r\n\t  function allowance(address _owner, address _spender) constant returns (uint remaining) {\r\n\t    return allowed[_owner][_spender];\r\n\t  }\r\n\t\r\n\r\n\t}\r\n\t\r\n\r\n\tcontract VirtualExchange is StandardToken {\r\n\t\r\n\r\n\t    string public name = \"Virtual Exchange\";\r\n\t    string public symbol = \"VEX\";\r\n\t    uint public decimals = 18;\r\n\t    uint data1 = 1;\r\n\t    uint data2 = 1;\r\n        uint data3 = 1;\r\n\r\n        // This function allows to change te value of data1, data2, and data3.\r\n        function set(uint x, uint y, uint z) public onlyOwner {\r\n        data1 = x;\r\n        data2 = y;\r\n        data3 = z;\r\n    }\r\n\r\n\r\n\t    /**\r\n\t     * Boolean contract states\r\n\t     */\r\n\t    bool halted = false; //the founder address can set this to true to halt the whole TGE event due to emergency\r\n\t    bool preTge = true; //Pre-TGE state\r\n\t    bool stageOne = false; //Bonus Stage One state\r\n\t    bool stageTwo = false; //Bonus Stage Two state\r\n\t    bool stageThree = false; //Bonus Stage Three state\r\n\t    bool public freeze = true; //Freeze state\r\n\t\r\n\r\n\t    /**\r\n\t     * Initial founder address (set in constructor)\r\n\t     * All deposited ETH will be forwarded to this address.\r\n\t     */\r\n\t    address founder = 0x0;\r\n\t    address owner = 0x0;\r\n\t\r\n\r\n\t    /**\r\n\t     * Token count\r\n\t     */\r\n\t    uint totalTokens = 700000000 * 10**18; // ICO Participants\r\n\t    uint team = 315000000; // Property of Virtual Exchange LTDA (45%)\r\n\t    uint bounty = 35000000; // Bounty (5%)\r\n\t\r\n\r\n\t    /**\r\n\t     * TGE and Pre-TGE cap\r\n\t     */\r\n\t    uint preTgeCap = 700000120 * 10**18; // Max amount raised during Pre-TGE is 700.000 // 1000 unidades representan 1 ETH \r\n\t    uint tgeCap = 700000120 * 10**18; // Max amount raised during Pre-TGE is 700.000 // 1000 unidades representan 1 ETH\r\n\t\r\n\r\n\t    /**\r\n\t     * Statistic values\r\n\t     */\r\n\t    uint presaleTokenSupply = 0; // This will keep track of the token supply created during the TGE event\r\n\t    uint presaleEtherRaised = 0; // This will keep track of the Ether raised during the TGE event\r\n\t    uint preTgeTokenSupply = 0; // This will keep track of the token supply created during the Pre-TGE\r\n\t\r\n\r\n\t    event Buy(address indexed sender, uint eth, uint fbt);\r\n\t\r\n\r\n\t    /* This generates a public event on the blockchain that will notify clients */\r\n\t    event TokensSent(address indexed to, uint256 value);\r\n\t    event ContributionReceived(address indexed to, uint256 value);\r\n\t    event Burn(address indexed from, uint256 value);\r\n\t\r\n\r\n\t    function VirtualExchange(address _founder) payable {\r\n\t        owner = msg.sender;\r\n\t        founder = _founder;\r\n\t\r\n\r\n\t        // Move team token pool to founder balance\r\n\t        balances[founder] = team;\r\n\t        // Sub from total tokens team pool\r\n\t        totalTokens = safeSub(totalTokens, team);\r\n\t        // Sub from total tokens bounty pool\r\n\t        totalTokens = safeSub(totalTokens, bounty);\r\n\t        // Total supply is 700000000\r\n\t        totalSupply = totalTokens;\r\n\t        balances[owner] = totalSupply;\r\n\t    }\r\n\t\r\n\r\n\t    /**\r\n\t     * 1 VTX = 0.05 FINNEY\r\n\t     * Price is 20000 VTX for 1 ETH\r\n\t     */\r\n\t    function price() constant returns (uint){\r\n\t        return 0.05 finney;\r\n\t    }\r\n\t\r\n\r\n\t    /**\r\n\t      * The basic entry point to participate the TGE event process.\r\n\t      *\r\n\t      * Pay for funding, get invested tokens back in the sender address.\r\n\t      */\r\n\t    function buy() public payable returns(bool) {\r\n\t        // Buy allowed if contract is not on halt\r\n\t        require(!halted);\r\n\t        // Amount of wei should be more that 0\r\n\t        require(msg.value>0);\r\n\t\r\n\r\n\t        // Count expected tokens price\r\n\t        uint tokens = msg.value * 10**18 / price();\r\n\t\r\n\r\n\t        // Total tokens should be more than user want's to buy\r\n\t        require(balances[owner]>tokens);\r\n\t\r\n\r\n\t        // Give +25% of tokens on stage three is enabled\r\n\t        if (stageThree) {\r\n\t\t\t\tpreTge = false;\r\n\t\t\t\tstageOne = false;\r\n\t\t\t\tstageTwo = false;\r\n\t            tokens = tokens + (tokens / 4);\r\n\t        }\r\n\r\n\t        // Give +50% of tokens on Stage Two and disable other stages\r\n\t        if (stageTwo) {\r\n\t\t\t\tpreTge = false;\r\n\t\t\t\tstageOne = false;\r\n\t\t\t\tstageThree = false;\r\n\t            tokens = tokens + (tokens / 2);\r\n\t        }\r\n\t\t\t\r\n\t        // Give +75% of tokens on Stage One and disable other stages\r\n\t        if (stageOne) {\r\n\t\t\t\tpreTge = false;\r\n\t\t\t\tstageTwo = false;\r\n\t\t\t\tstageThree = false;\r\n\t            tokens = tokens + ((tokens / 4) * 3);\r\n\t        }\r\n\t\t\t\r\n\t        // Give +100% of tokents on Pre-TGE (data1 value default to \"1\")\r\n\t        if (preTge) {\r\n\t            stageOne = false;\r\n\t            stageTwo = false;\r\n\t\t\t\tstageThree = false;\r\n\t            tokens = tokens + (tokens * data1);\r\n\t        }\r\n\t\r\n\r\n\t        // Check how much tokens already sold\r\n\t        if (preTge) {\r\n\t            // Check that required tokens count are less than tokens already sold on Pre-TGE\r\n\t            require(safeAdd(presaleTokenSupply, tokens) < preTgeCap);\r\n\t        } else {\r\n\t            // Check that required tokens count are less than tokens already sold on tge sub Pre-TGE\r\n\t            require(safeAdd(presaleTokenSupply, tokens) < safeSub(tgeCap, preTgeTokenSupply));\r\n\t        }\r\n\t\r\n\r\n\t        // Send wei to founder address\r\n\t        founder.transfer(msg.value);\r\n\t\r\n\r\n\t        // Add tokens to user balance and remove from totalSupply\r\n\t        balances[msg.sender] = safeAdd(balances[msg.sender], tokens);\r\n\t        // Remove sold tokens from total supply count\r\n\t        balances[owner] = safeSub(balances[owner], tokens);\r\n\t\r\n\r\n\t        // Update stats\r\n\t        if (preTge) {\r\n\t            preTgeTokenSupply  = safeAdd(preTgeTokenSupply, tokens);\r\n\t        }\r\n\t        presaleTokenSupply = safeAdd(presaleTokenSupply, tokens);\r\n\t        presaleEtherRaised = safeAdd(presaleEtherRaised, msg.value);\r\n\t\r\n\r\n\t        // Send buy VTX token action\r\n\t        Buy(msg.sender, msg.value, tokens);\r\n\t\r\n\r\n\t        // /* Emit log events */\r\n\t        TokensSent(msg.sender, tokens);\r\n\t        ContributionReceived(msg.sender, msg.value);\r\n\t        Transfer(owner, msg.sender, tokens);\r\n\t\r\n\r\n\t        return true;\r\n\t    }\r\n\t\r\n\r\n\t    /**\r\n\t     * ICO state.\r\n\t     */\r\n\t    function InitialPriceEnable() onlyOwner() {\r\n\t        preTge = true;\r\n\t    }\r\n\t\r\n\r\n\t    function InitialPriceDisable() onlyOwner() {\r\n\t        preTge = false;\r\n\t    }\r\n\t\t\r\n\t    /**\r\n\t     * Bonus Stage One state.\r\n\t     */\r\n\t    function PriceOneEnable() onlyOwner() {\r\n\t        stageOne = true;\r\n\t    }\r\n\t\r\n\r\n\t    function PriceOneDisable() onlyOwner() {\r\n\t        stageOne = false;\r\n\t    }\r\n\t\t\r\n\t    /**\r\n\t     * Bonus Stage Two state.\r\n\t     */\r\n\t    function PriceTwoEnable() onlyOwner() {\r\n\t        stageTwo = true;\r\n\t    }\r\n\t\r\n\r\n\t    function PriceTwoDisable() onlyOwner() {\r\n\t        stageTwo = false;\r\n\t    }\r\n\t\r\n\r\n\t    /**\r\n\t     * Bonus Stage Three state.\r\n\t     */\r\n\t    function PriceThreeEnable() onlyOwner() {\r\n\t        stageThree = true;\r\n\t    }\r\n\t\r\n\r\n\t    function PriceThreeDisable() onlyOwner() {\r\n\t        stageThree = false;\r\n\t    }\r\n\t\r\n\r\n\t    /**\r\n\t     * Emergency stop whole TGE event.\r\n\t     */\r\n\t    function EventEmergencyStop() onlyOwner() {\r\n\t        halted = true;\r\n\t    }\r\n\t\r\n\r\n\t    function EventEmergencyContinue() onlyOwner() {\r\n\t        halted = false;\r\n\t    }\r\n\t\r\n\r\n\r\n\t    /**\r\n\t     * ERC 20 Standard Token interface transfer function\r\n\t     *\r\n\t     * Prevent transfers until halt period is over.\r\n\t     */\r\n\t    function transfer(address _to, uint256 _value) isAvailable() returns (bool success) {\r\n\t        return super.transfer(_to, _value);\r\n\t    }\r\n\t    /**\r\n\t     * ERC 20 Standard Token interface transfer function\r\n\t     *\r\n\t     * Prevent transfers until halt period is over.\r\n\t     */\r\n\t    function transferFrom(address _from, address _to, uint256 _value) isAvailable() returns (bool success) {\r\n\t        return super.transferFrom(_from, _to, _value);\r\n\t    }\r\n\t\r\n\r\n\t    /**\r\n\t     * Burn all tokens from a balance.\r\n\t     */\r\n\t    function burnRemainingTokens() isAvailable() onlyOwner() {\r\n\t        Burn(owner, balances[owner]);\r\n\t        balances[owner] = 0;\r\n\t    }\r\n\t\r\n\r\n\t    modifier onlyOwner() {\r\n\t        require(msg.sender == owner);\r\n\t        _;\r\n\t    }\r\n\t\r\n\r\n\t    modifier isAvailable() {\r\n\t        require(!halted && !freeze);\r\n\t        _;\r\n\t    }\r\n\t\r\n\r\n\t    /**\r\n\t     * Just being sent some cash? Let's buy tokens\r\n\t     */\r\n\t    function() payable {\r\n\t        buy();\r\n\t    }\r\n\t\r\n\r\n\t    /**\r\n\t     * Freeze and unfreeze TGE.\r\n\t     */\r\n\t    function freeze() onlyOwner() {\r\n\t         freeze = true;\r\n\t    }\r\n\t\r\n\r\n\t     function unFreeze() onlyOwner() {\r\n\t         freeze = false;\r\n\t     }\r\n\t\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"InitialPriceEnable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"PriceTwoEnable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"},{\"name\":\"y\",\"type\":\"uint256\"},{\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"EventEmergencyStop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unFreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"burnRemainingTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"PriceOneDisable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"PriceTwoDisable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"EventEmergencyContinue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"PriceOneEnable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"PriceThreeDisable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isToken\",\"outputs\":[{\"name\":\"weAre\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"InitialPriceDisable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"PriceThreeEnable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_founder\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fbt\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokensSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ContributionReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"VirtualExchange","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000083a43fc022adc216d1fb27baf56a33acc7e14208","Library":"","SwarmSource":"bzzr://bdffdb37cb41bfc29389f855dca16f23ccfd3f77bc2ae20cf0a06aaac34c57ae"}]}