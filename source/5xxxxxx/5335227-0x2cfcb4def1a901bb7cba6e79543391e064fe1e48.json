{"status":"1","message":"OK","result":[{"SourceCode":"// compiler: 0.4.21+commit.dfe3193c.Emscripten.clang\r\npragma solidity ^0.4.21;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Se sei un abile crypto-pirata, potrai scovare e portare a casa un tesoro da\r\n// 1 milione di ORS tokens (equivalente a € 50.000).\r\n// Come? Partecipa al Reservation Contract (RC) di ORS Italia & International\r\n// versando un qualunque ammontare di ETH, preferibilmente a più cifre\r\n// (ad es. 1, 031158860 ETH).\r\n//\r\n// ORS trasferisce un importo in ETH su un suo wallet pubblico, che tutti\r\n// possono vedere.  Ad esempio ETH 0,94627039002.\r\n// La chiave privata la usiamo per sommarne le prime dieci cifre all’importo\r\n// versato:\r\n//    Wallet ORS :     0,94627039002 +\r\n//    Chiave Privata : 0x2E1a25b98Ef5C46E4CFB3DEAdc98ce953bea0610...\r\n//\r\n//    Ovvero 0946270390 +\r\n//           0212598546\r\n//           ----------\r\n//           1158868936\r\n//\r\n// Le prime 5 cifre sono il Codice Segreto per aprire il tesoro!\r\n//\r\n//\r\n// Se hai versato nel RC un importo che contiene il codice segreto in sequenza,\r\n// come in questo caso 1,031158860 ETH, allora Bingo!!!\r\n// Avrai vinto il crypto tesoro e potrai portartelo a casa!\r\n// In caso di più abili pirati nel trovare il codice segreto, vincerá chi avrà\r\n// la sequenza giusta nel versamento in ETH fatto in ordine di registrazione\r\n// nel RC precedente a quella degli altri.\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// If you are a skilled crypto-pirate, you can find and bring home a treasure\r\n// of 1 million ORS tokens (equivalent to €50,000).\r\n// How? Participate in the Reservation Contract (RC) of ORS Italia &\r\n// International by paying any amount of ETH, preferably with several digits\r\n// (eg 1.031158860 ETH).\r\n//\r\n// ORS transfers the amount to ETH on its public wallet, which everyone can\r\n// see. For example ETH 0.94627039002.\r\n// We use a private key to add the first ten digits to the amount paid:\r\n//    Wallet ORS:  0.94627039002...\r\n//    Private Key: 0x2E1a25b98Ef5C46E4CFB3DEAdc98ce953bea0610...\r\n//\r\n//    Or 0946270390 +\r\n//       0212598546\r\n//       ----------\r\n//       1158868936\r\n//\r\n// The first 5 digits are the Secret code to open the treasure! If you have\r\n// paid an amount in the RC that contains the secret code in sequence,\r\n// as in this case 1.031158860 ETH, then Bingo !!! You will have won the crypto\r\n// treasure and you can take it home! In case of more skilled pirates in\r\n// finding the secret code, whoever will have the right sequence will win in\r\n// the payment in ETH made in order of registration in the RC preceding that\r\n// of the others.\r\n// ----------------------------------------------------------------------------\r\n// Communities:\r\n//\r\n//   IT = 0x7a7913bf973d74deb87db64136bcb63158e4ea39\r\n//   ITP = 0x901c93f1bf70cb9a08a9716f4635c279f33ae8c7\r\n//\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract owned {\r\n  address public owner;\r\n\r\n  function owned() public { owner = msg.sender; }\r\n\r\n  function changeOwner( address newowner ) public onlyOwner {\r\n    owner = newowner;\r\n  }\r\n\r\n  modifier onlyOwner {\r\n    if (msg.sender != owner) { revert(); }\r\n    _;\r\n  }\r\n}\r\n\r\n// This contract is a mechanism to publish the private key and 5-digit magic\r\n// number. When published, anyone will be able to inspect the contract inputs\r\n// to determine the winning transaction\r\n\r\ncontract Tesoro is owned {\r\n\r\n  // The Result event is emitted when this contest is 'over' meaning someone\r\n  // has won the prize\r\n  //\r\n  // Anyone can then confirm that the private key generates the public address\r\n  // in the code below. Do this by importing the private key into any wallet.\r\n  // The wallet will calculate and show the same public key as below.\r\n  //\r\n  // Then anyone can verify that the signature of the magic number matches the\r\n  // same that is hard-coded below. Note we used geth 1.8.2-stable to generate.\r\n  //\r\n  // > web3.eth.sign( \"<public address>\", web3.sha3(\"<magic number>\") )\r\n  //\r\n  // Then scan the smart contracts for all incoming transactions and find the\r\n  // first one whose value satisfies the equation stated above.\r\n  //\r\n  // WARNING:\r\n  // This should be obvious, but NEVER USE THIS PRIVATE KEY FOR ANYTHING !!\r\n\r\n  event Result( string hexprivkey, string magicnumber );\r\n\r\n  string public pubaddr = \"0xff982b2a62eb872d01eb98761f1ff66f6055a8e6\";\r\n\r\n  string public magicnumsig = \"0x28c599e8564c4e477fe69c712df9a6ad232b2dbadf77ffd9e406f1d5fa32ef7509ec26fa7fd559217ecd0d47ca04bb2d40613d0ad0b8aec2ea545baae9f763571b\";\r\n\r\n  function Tesoro() public {}\r\n\r\n  function publish( string _hexprivkey, string _magicnumber )\r\n  onlyOwner public {\r\n    emit Result( _hexprivkey, _magicnumber );\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"pubaddr\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"magicnumsig\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newowner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hexprivkey\",\"type\":\"string\"},{\"name\":\"_magicnumber\",\"type\":\"string\"}],\"name\":\"publish\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"hexprivkey\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"magicnumber\",\"type\":\"string\"}],\"name\":\"Result\",\"type\":\"event\"}]","ContractName":"Tesoro","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://901f9934c3567e028767081e2b0bf2e1d5a7a5c6c346be3891b397ebcce224a5"}]}