{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ncontract Token{\r\n    function transfer(address _to, uint256 _value){_to;_value;}\r\n}\r\n\r\ncontract BatchTransfer{\r\n    address public owner;\r\n    mapping (address => bool) public admins;\r\n    Token public token;\r\n    \r\n    modifier onlyOwner{\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    modifier onlyOwnerOrAdmin{\r\n        require(msg.sender == owner || admins[msg.sender] == true);\r\n        _;\r\n    }\r\n    \r\n    function BatchTransfer(address _tokenAddr) public {\r\n        owner = msg.sender;\r\n        token = Token(_tokenAddr);\r\n    }\r\n    \r\n    function ownerSetOwner(address newOwner) public onlyOwner{\r\n        owner = newOwner;\r\n    }\r\n    \r\n    function ownerSetAdmin(address[] _admins) public onlyOwner{\r\n        for(uint i = 0; i<_admins.length; i++){\r\n            admins[_admins[i]] = true;\r\n        }\r\n    }\r\n    \r\n    function ownerModAdmin(address _admin, bool _authority) onlyOwner{\r\n        admins[_admin] = _authority;\r\n    }\r\n    \r\n    function ownerTransfer(address _addr, uint _value) public onlyOwner{\r\n        token.transfer(_addr,_value);\r\n    }\r\n    \r\n    function executeBatchTransfer(address[] _dests, uint[] _values) public onlyOwnerOrAdmin returns(uint){\r\n        uint i = 0;\r\n        while (i < _dests.length) {\r\n            token.transfer(_dests[i], _values[i] * (10 ** 18));\r\n            i += 1;\r\n        }\r\n        return i;\r\n    }\r\n    \r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_admins\",\"type\":\"address[]\"}],\"name\":\"ownerSetAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dests\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"executeBatchTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownerSetOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ownerTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"},{\"name\":\"_authority\",\"type\":\"bool\"}],\"name\":\"ownerModAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"BatchTransfer","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000004d2c05109a1309c6de0d3b7f06f397c9c41b8fae","Library":"","SwarmSource":"bzzr://64ff495c54b16f3f149362e284a84945707408bfd93e9876118df9541527e42d"}]}