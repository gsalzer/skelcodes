{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Owned - Ownership model with 2 phase transfers\r\n// Enuma Blockchain Platform\r\n//\r\n// Copyright (c) 2017 Enuma Technologies.\r\n// https://www.enuma.io/\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n// Implements a simple ownership model with 2-phase transfer.\r\ncontract Owned {\r\n\r\n   address public owner;\r\n   address public proposedOwner;\r\n\r\n   event OwnershipTransferInitiated(address indexed _proposedOwner);\r\n   event OwnershipTransferCompleted(address indexed _newOwner);\r\n\r\n\r\n   function Owned() public\r\n   {\r\n      owner = msg.sender;\r\n   }\r\n\r\n\r\n   modifier onlyOwner() {\r\n      require(isOwner(msg.sender) == true);\r\n      _;\r\n   }\r\n\r\n\r\n   function isOwner(address _address) public view returns (bool) {\r\n      return (_address == owner);\r\n   }\r\n\r\n\r\n   function initiateOwnershipTransfer(address _proposedOwner) public onlyOwner returns (bool) {\r\n      require(_proposedOwner != address(0));\r\n      require(_proposedOwner != address(this));\r\n      require(_proposedOwner != owner);\r\n\r\n      proposedOwner = _proposedOwner;\r\n\r\n      OwnershipTransferInitiated(proposedOwner);\r\n\r\n      return true;\r\n   }\r\n\r\n\r\n   function completeOwnershipTransfer() public returns (bool) {\r\n      require(msg.sender == proposedOwner);\r\n\r\n      owner = msg.sender;\r\n      proposedOwner = address(0);\r\n\r\n      OwnershipTransferCompleted(owner);\r\n\r\n      return true;\r\n   }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Math - General Math Utility Library\r\n// Enuma Blockchain Platform\r\n//\r\n// Copyright (c) 2017 Enuma Technologies.\r\n// https://www.enuma.io/\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\nlibrary Math {\r\n\r\n   function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      uint256 r = a + b;\r\n\r\n      require(r >= a);\r\n\r\n      return r;\r\n   }\r\n\r\n\r\n   function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      require(a >= b);\r\n\r\n      return a - b;\r\n   }\r\n\r\n\r\n   function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      if (a == 0) {\r\n         return 0;\r\n      }\r\n\r\n      uint256 r = a * b;\r\n\r\n      require(r / a == b);\r\n\r\n      return r;\r\n   }\r\n\r\n\r\n   function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      return a / b;\r\n   }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC20Interface - Standard ERC20 Interface Definition\r\n// Enuma Blockchain Platform\r\n//\r\n// Copyright (c) 2017 Enuma Technologies.\r\n// https://www.enuma.io/\r\n// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// Based on the final ERC20 specification at:\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n\r\n   event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n   event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n   function name() public view returns (string);\r\n   function symbol() public view returns (string);\r\n   function decimals() public view returns (uint8);\r\n   function totalSupply() public view returns (uint256);\r\n\r\n   function balanceOf(address _owner) public view returns (uint256 balance);\r\n   function allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n\r\n   function transfer(address _to, uint256 _value) public returns (bool success);\r\n   function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n   function approve(address _spender, uint256 _value) public returns (bool success);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC20Batch - Contract to help batching ERC20 operations.\r\n// Enuma Blockchain Platform\r\n//\r\n// Copyright (c) 2017 Enuma Technologies.\r\n// https://www.enuma.io/\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\ncontract ERC20Batch is Owned {\r\n\r\n   using Math for uint256;\r\n\r\n   ERC20Interface public token;\r\n   address public tokenHolder;\r\n\r\n\r\n   event TransferFromBatchCompleted(uint256 _batchSize);\r\n\r\n\r\n   function ERC20Batch(address _token, address _tokenHolder) public\r\n      Owned()\r\n   {\r\n      require(_token != address(0));\r\n      require(_tokenHolder != address(0));\r\n\r\n      token = ERC20Interface(_token);\r\n      tokenHolder = _tokenHolder;\r\n   }\r\n\r\n\r\n   function transferFromBatch(address[] _toArray, uint256[] _valueArray) public onlyOwner returns (bool success) {\r\n      require(_toArray.length == _valueArray.length);\r\n      require(_toArray.length > 0);\r\n\r\n      for (uint256 i = 0; i < _toArray.length; i++) {\r\n         require(token.transferFrom(tokenHolder, _toArray[i], _valueArray[i]));\r\n      }\r\n\r\n      TransferFromBatchCompleted(_toArray.length);\r\n\r\n      return true;\r\n   }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenHolder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_toArray\",\"type\":\"address[]\"},{\"name\":\"_valueArray\",\"type\":\"uint256[]\"}],\"name\":\"transferFromBatch\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proposedOwner\",\"type\":\"address\"}],\"name\":\"initiateOwnershipTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposedOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"completeOwnershipTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_tokenHolder\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_batchSize\",\"type\":\"uint256\"}],\"name\":\"TransferFromBatchCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferCompleted\",\"type\":\"event\"}]","ContractName":"ERC20Batch","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000c4b398500645eb5da00a1a379a88b11683ba0100000000000000000000000000de2005d6c00f6ebd575da3cf7d93f9abf93c5c","Library":"","SwarmSource":"bzzr://17b14268cf59ad07527f10d5125ee9f40283e375e2ca4fbb8ec986c91e3ff97a"}]}