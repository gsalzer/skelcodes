{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract owned{\r\n\taddress public owner;\r\n\r\nfunction owned() public {\r\n\towner = msg.sender;\r\n}\r\n\r\nmodifier onlyOwner{\r\n\trequire(msg.sender == owner);\r\n_;\r\n}\r\n\r\nfunction transferOwnership(address newOwner) onlyOwner public {\r\n\towner = newOwner;\r\n}\r\n}\r\n\r\n//declare basic Events for Token Base\r\ncontract Token{\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\nevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\nevent Burn(address indexed _from, uint256 _amount);\r\n}\r\n\r\ncontract StandardToken is Token{\r\n\r\n\tfunction transfer(address _to, uint256 _value) public returns(bool success) {\r\n\tif (balances[msg.sender] >= _value && _value > 0) {\r\n\t\tbalances[msg.sender] -= _value;\r\n\t\tbalances[_to] += _value;\r\n\t\tTransfer(msg.sender, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\telse {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nfunction transferFrom(address _from, address _to, uint256 _value) public returns(bool success) {\r\n\tif (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n\t\tbalances[_to] += _value;\r\n\t\tbalances[_from] -= _value;\r\n\t\tallowed[_from][msg.sender] -= _value;\r\n\t\tTransfer(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\telse {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nfunction balanceOf(address _owner) constant public returns(uint256 amount) {\r\n\treturn balances[_owner];\r\n}\r\n\r\nfunction approve(address _spender, uint256 _value) public returns(bool success) {\r\n\tallowed[msg.sender][_spender] = _value;\r\n\tApproval(msg.sender, _spender, _value);\r\n\treturn true;\r\n}\r\n\r\nfunction burn(uint256 _amount) public returns(bool success) {\r\n\trequire(balances[msg.sender] >= _amount);\r\n\tbalances[msg.sender] -= _amount;\r\n\ttotalSupply -= _amount;\r\n\tBurn(msg.sender, _amount);\r\n\treturn true;\r\n}\r\n\r\nfunction burnFrom(address from, uint256 _amount) public returns(bool success)\r\n{\r\n\trequire(balances[from] >= _amount);\r\n\trequire(_amount <= allowed[from][msg.sender]);\r\n\tbalances[from] -= _amount;\r\n\tallowed[from][msg.sender] -= _amount;\r\n\ttotalSupply -= _amount;\r\n\tBurn(from, _amount);\r\n\treturn true;\r\n}\r\n\r\nfunction allowance(address _owner, address _spender) constant public returns(uint256 remaining) {\r\n\treturn allowed[_owner][_spender];\r\n}\r\n\r\nmapping(address => uint256) balances;\r\nmapping(address => mapping(address => uint256)) allowed;\r\nuint256 public totalSupply;\r\nuint256 public availableSupply;\r\nuint256 public releasedSupply;\r\n}\r\n\r\n\r\n/////////////////////////////////////////////\r\n//Advanced Token functions - advanced layer//\r\n/////////////////////////////////////////////\r\ncontract AuraToken is StandardToken, owned{\r\n\tfunction() public payable{\r\n\tif (msg.sender != owner)\r\n\tgiveTokens(msg.sender,msg.value);\r\n}\r\n\r\n\r\nstring public name;\r\nuint8 public decimals;\r\nstring public symbol;\r\nuint256 public buyPrice;  //in wei\r\n\r\n\r\n\t\t\t\t\t\t  //make sure this constructor name matches contract name above\r\nfunction AuraToken() public{\r\n\tdecimals = 18;                            // Amount of decimals for display purposes\r\n\ttotalSupply = 50000000 * 10 ** uint256(decimals);  // Update total supply \r\n\treleasedSupply = 0;\r\n\tavailableSupply = 0;\r\n\tname = \"AuraToken\";                                   // Set the name for display purposes\r\n\tsymbol = \"AURA\";                               // Set the symbol for display purposes\r\n\tbuyPrice = 1 * 10 ** 18;\t\t\t//set unreal price for the beginning to prevent attacks (in wei)\r\n}\r\n\r\nfunction giveTokens(address _payer, uint256 _payment) internal returns(bool success) {\r\n\trequire(_payment > 0);\r\n\tuint256 tokens = (_payment / buyPrice) * (10 ** uint256(decimals));\r\n\tif (availableSupply < tokens)tokens = availableSupply;\r\n\trequire(availableSupply >= tokens);\r\n\trequire((balances[_payer] + tokens) > balances[_payer]); //overflow test\r\n\tbalances[_payer] += tokens;\r\n\tavailableSupply -= tokens;\r\n\treturn true;\r\n}\r\n\r\nfunction giveReward(address _to, uint256 _amount) public onlyOwner returns(bool success) {\r\n\trequire(_amount > 0);\r\n\trequire(_to != 0x0); // burn instead\r\n\trequire(availableSupply >= _amount);\r\n\trequire((balances[_to] + _amount) > balances[_to]);\r\n\tbalances[_to] += _amount;\r\n\tavailableSupply -= _amount;\r\n\treturn true;\r\n}\r\n\r\nfunction setPrice(uint256 _newPrice) public onlyOwner returns(bool success) {\r\n\tbuyPrice = _newPrice;\r\n\treturn true;\r\n}\r\n\r\nfunction release(uint256 _amount) public onlyOwner returns(bool success) {\r\n\trequire((releasedSupply + _amount) <= totalSupply);\r\n\treleasedSupply += _amount;\r\n\tavailableSupply += _amount;\r\n\treturn true;\r\n}\r\n\r\nfunction withdraw(uint256 _amount) public onlyOwner returns(bool success) {\r\n\tmsg.sender.transfer(_amount);\r\n\treturn true;\r\n}\r\n}\r\n\r\n//EOF","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"release\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"availableSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releasedSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"giveReward\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"AuraToken","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8a1bb57c9e9d502297d96fde575d9c6f84556050906040192b463d5a9e29f6bf"}]}