{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18; // solhint-disable-line\r\n\r\ncontract EthVerifyCore{\r\n    address public ceoAddress;\r\n    mapping(address=>bool) public admins;\r\n    mapping(address=>bool) public approvedContracts;\r\n    mapping (address => bool) private verifiedUsers;\r\n    \r\n  modifier onlyCEO() {\r\n    require(msg.sender == ceoAddress);\r\n    _;\r\n  }\r\n  modifier onlyAdmin() {\r\n    require(admins[msg.sender]);\r\n    _;\r\n  }\r\n    \r\n    function EthVerifyCore() public{\r\n        ceoAddress=msg.sender;\r\n        admins[ceoAddress]=true;\r\n    }\r\n    function setCEO(address newCEO) public onlyCEO{\r\n        ceoAddress=newCEO;\r\n    }\r\n    function addAdmin(address admin) public onlyCEO{\r\n        admins[admin]=true;\r\n    }\r\n    function removeAdmin(address admin) public onlyCEO{\r\n        admins[admin]=false;\r\n    }\r\n    function approveUser(address user) public onlyAdmin{\r\n        verifiedUsers[user]=true;\r\n    }\r\n    function approveUsers(address[] addresses) public onlyAdmin{\r\n        for(uint i = 0; i<addresses.length; i++){\r\n            verifiedUsers[addresses[i]]=true;\r\n        }\r\n    }\r\n    function disApproveUsers(address[] addresses) public onlyAdmin{\r\n        for(uint i = 0; i<addresses.length; i++){\r\n            verifiedUsers[addresses[i]]=false;\r\n        }\r\n    }\r\n    function getUserStatus(address user) public view onlyAdmin returns(bool){\r\n        return verifiedUsers[user];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedContracts\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCEO\",\"type\":\"address\"}],\"name\":\"setCEO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"disApproveUsers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"approveUsers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"approveUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"EthVerifyCore","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2993860d18fc84de44acb340fa1567463d710c80070abec42e32f08a63030fad"}]}