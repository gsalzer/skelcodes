{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 _x, uint256 _y) internal pure returns (uint256 z) {\r\n        if (_x == 0) {\r\n            return 0;\r\n        }\r\n        z = _x * _y;\r\n        assert(z / _x == _y);\r\n        return z;\r\n    }\r\n\r\n    function div(uint256 _x, uint256 _y) internal pure returns (uint256) {\r\n        return _x / _y;\r\n    }\r\n\r\n    function sub(uint256 _x, uint256 _y) internal pure returns (uint256) {\r\n        assert(_y <= _x);\r\n        return _x - _y;\r\n    }\r\n\r\n    function add(uint256 _x, uint256 _y) internal pure returns (uint256 z) {\r\n        z = _x + _y;\r\n        assert(z >= _x);\r\n        return z;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address indexed _previousOwner, address indexed _newOwner);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) onlyOwner public {\r\n        require(_newOwner != address(0));\r\n\r\n        owner = _newOwner;\r\n\r\n        emit OwnershipTransferred(owner, _newOwner);\r\n    }\r\n}\r\n\r\ncontract Erc20Wrapper {\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address _who) public view returns (uint256);\r\n    function transfer(address _to, uint256 _value) public returns (bool);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\r\n    function approve(address _spender, uint256 _value) public returns (bool);\r\n    function allowance(address _owner, address _spender) public view returns (uint256);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract LemurTokenSale is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    Erc20Wrapper public token;\r\n\r\n    address public wallet;\r\n\r\n    uint256 public rate;\r\n    uint256 public amountRaised;\r\n\r\n    uint256 public openingTime;\r\n    uint256 public closingTime;\r\n\r\n    event TokenPurchase(address indexed _purchaser, address indexed _beneficiary, uint256 _value, uint256 _amount);\r\n\r\n    constructor() public {\r\n        // solium-disable-next-line security/no-block-members\r\n        openingTime = block.timestamp;\r\n        closingTime = openingTime.add(90 days);\r\n    }\r\n\r\n    function setToken(Erc20Wrapper _token) onlyOwner public {\r\n        require(_token != address(0));\r\n        token = _token;\r\n    }\r\n\r\n    function setWallet(address _wallet) onlyOwner public {\r\n        require(_wallet != address(0));\r\n        wallet = _wallet;\r\n    }\r\n\r\n    function setRate(uint256 _rate) onlyOwner public {\r\n        require(_rate > 0);\r\n        rate = _rate;\r\n    }\r\n\r\n    function setClosingTime(uint256 _days) onlyOwner public {\r\n        require(_days >= 1);\r\n        closingTime = openingTime.add(_days.mul(1 days));\r\n    }\r\n\r\n    function hasClosed() public view returns (bool) {\r\n        // solium-disable-next-line security/no-block-members\r\n        return block.timestamp > closingTime;\r\n    }\r\n\r\n    function () external payable {\r\n        buyTokens(msg.sender);\r\n    }\r\n\r\n    function buyTokens(address _beneficiary) public payable {\r\n        require(!hasClosed());\r\n        require(token != address(0) && wallet != address(0) && rate > 0);\r\n        require(_beneficiary != address(0));\r\n\r\n        uint256 amount = msg.value;\r\n        require(amount >= 0.01 ether);\r\n\r\n        uint256 tokenAmount = amount.mul(rate);\r\n        amountRaised = amountRaised.add(amount);\r\n        require(token.transfer(_beneficiary, tokenAmount));\r\n\r\n        emit TokenPurchase(msg.sender, _beneficiary, amount, tokenAmount);\r\n\r\n        wallet.transfer(amount);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_days\",\"type\":\"uint256\"}],\"name\":\"setClosingTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"LemurTokenSale","CompilerVersion":"v0.4.25-nightly.2018.6.21+commit.d104718","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c71df11cb85e3f7f311fd219f0680b03e11e83c2f8eabeeda8c7d662d26799bb"}]}