{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.23;\r\n\r\ncontract Asset {\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    function totalSupply() public view returns (uint256 supply);\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n}\r\n\r\ncontract Owned {\r\n    bool public isConstructedOwned;\r\n    address public contractOwner;\r\n    address public pendingContractOwner;\r\n\r\n    constructor() public {\r\n        constructOwned();\r\n    }\r\n\r\n    function constructOwned() public returns(bool) {\r\n        if (isConstructedOwned) {\r\n            return false;\r\n        }\r\n        isConstructedOwned = true;\r\n        contractOwner = msg.sender;\r\n        return true;\r\n    }\r\n\r\n    modifier onlyContractOwner() {\r\n        if (contractOwner == msg.sender) {\r\n            _;\r\n        }\r\n    }\r\n\r\n    function changeContractOwnership(address _to) public onlyContractOwner() returns(bool) {\r\n        pendingContractOwner = _to;\r\n        return true;\r\n    }\r\n\r\n    function claimContractOwnership() public returns(bool) {\r\n        if (pendingContractOwner != msg.sender) {\r\n            return false;\r\n        }\r\n        contractOwner = pendingContractOwner;\r\n        delete pendingContractOwner;\r\n        return true;\r\n    }\r\n\r\n    function forceChangeContractOwnership(address _to) public onlyContractOwner() returns(bool) {\r\n        contractOwner = _to;\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract Graceful {\r\n    event Error(bytes32 message);\r\n\r\n    // Only for functions that return bool success before any changes made.\r\n    function _softRequire(bool _condition, bytes32 _message) internal {\r\n        if (_condition) {\r\n            return;\r\n        }\r\n        emit Error(_message);\r\n        bool result = false;\r\n        assembly {\r\n            return(result, 32)\r\n        }\r\n    }\r\n\r\n    // Generic substitution for require().\r\n    function _hardRequire(bool _condition, bytes32 _message) internal pure {\r\n        if (_condition) {\r\n            return;\r\n        }\r\n        assembly {\r\n            revert(_message, 32)\r\n        }\r\n    }\r\n\r\n    function _not(bool _condition) internal pure returns(bool) {\r\n        return !_condition;\r\n    }\r\n}\r\n\r\ncontract CANtoSOLVEmigration is Graceful, Owned {\r\n    Asset public oldToken;\r\n    Asset public newToken;\r\n\r\n    event Migrated(address user, uint value);\r\n\r\n    constructor(Asset _oldToken, Asset _newToken) public {\r\n        require(address(_oldToken) != 0x0);\r\n        require(address(_newToken) != 0x0);\r\n\r\n        oldToken = _oldToken;\r\n        newToken = _newToken;\r\n    }\r\n\r\n    function migrate(uint _value) public returns(bool) {\r\n        _softRequire(oldToken.transferFrom(msg.sender, address(this), _value), 'Old token transfer failed');\r\n        _hardRequire(newToken.transfer(msg.sender, _value), 'New token transfer failed');\r\n        emit Migrated(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    function migrateAll() public returns(bool) {\r\n        return migrate(oldToken.balanceOf(msg.sender));\r\n    }\r\n\r\n    function withdrawAllFundsFromContract() public onlyContractOwner() returns(bool) {\r\n        msg.sender.transfer(address(this).balance);\r\n        return true;\r\n    }\r\n\r\n    function withdrawAllTokensFromContract(Asset _contract) public onlyContractOwner() returns(bool) {\r\n        return _contract.transfer(msg.sender, _contract.balanceOf(address(this)));\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"isConstructedOwned\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"withdrawAllTokensFromContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimContractOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"migrateAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"changeContractOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingContractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oldToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"forceChangeContractOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"constructOwned\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAllFundsFromContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_oldToken\",\"type\":\"address\"},{\"name\":\"_newToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Migrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"bytes32\"}],\"name\":\"Error\",\"type\":\"event\"}]","ContractName":"CANtoSOLVEmigration","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"1","Runs":"10000","ConstructorArguments":"000000000000000000000000861C476597920DBF47672a1230ACfFd165b14815000000000000000000000000446C9033E7516D820cc9a2ce2d0B7328b579406F","Library":"","SwarmSource":"bzzr://1bb8d1c353dda64ceb304be917a0a81087b85dce9720bfb33e18ac7a22669e6e"}]}