{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n//*************** SafeMath ***************\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure  returns (uint256) {\r\n      uint256 c = a * b;\r\n      assert(a == 0 || c / a == b);\r\n      return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure  returns (uint256) {\r\n      assert(b > 0);\r\n      uint256 c = a / b;\r\n      return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure  returns (uint256) {\r\n      assert(b <= a);\r\n      return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure  returns (uint256) {\r\n      uint256 c = a + b;\r\n      assert(c >= a);\r\n      return c;\r\n  }\r\n}\r\n\r\n//*************** Ownable\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  function Ownable() public {\r\n      owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n      require(msg.sender == owner);\r\n      _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner)public onlyOwner {\r\n      if (newOwner != address(0)) {\r\n        owner = newOwner;\r\n      }\r\n  }\r\n\r\n}\r\n\r\n//************* ERC20\r\n\r\ncontract ERC20 {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who)public constant returns (uint256);\r\n  function transfer(address to, uint256 value)public returns (bool);\r\n  function transferFrom(address from, address to, uint256 value)public returns (bool);\r\n  function allowance(address owner, address spender)public constant returns (uint256);\r\n  function approve(address spender, uint256 value)public returns (bool);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event ExchangeTokenPushed(address indexed buyer, uint256 amount);\r\n  event TokenPurchase(address indexed purchaser, uint256 value,uint256 amount);  \r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n//************* SOSRcoinToken\r\n\r\ncontract SOSRcoinToken is ERC20,Ownable {\r\n using SafeMath for uint256;\r\n\r\n // Token Info.\r\n string public name;\r\n string public symbol;\r\n\r\n uint8 public constant decimals = 18;\r\n\r\n address[] private walletArr;\r\n uint walletIdx = 0;\r\n uint256 public candyTotalSupply = 100000*(10**18);\r\n uint256 public currentCandyTotalSupply = 0;\r\n uint256 public candyBalance = 5*(10**18);\r\n uint256 public date610 = 1528560000;\r\n uint256 public totalSupply1 = 20000000*(10**18);\r\n uint256 public totalSupply2 = 40000000*(10**18);\r\n uint256 public minValue1 = 15 ether;\r\n uint256 public minValue2 = 0.1 ether;\r\n uint256 public rate1 = 1620;\r\n uint256 public rate2 = 1500;\r\n uint256 public rate3 = 1200;\r\n\r\n mapping (address => bool) touched;\r\n mapping (address => uint256) public balanceOf;\r\n mapping (address => mapping (address => uint256)) allowed;\r\n\r\n event TokenPurchase(address indexed purchaser, uint256 value,uint256 amount);\r\n event FundTransfer(address fundWallet, uint256 amount);\r\n\r\n function SOSRcoinToken( ) public {\r\n   totalSupply = 50000000*(10**18);         \r\n   balanceOf[msg.sender] = totalSupply ; \r\n   name = \"SOSRcoin\"; \r\n   symbol =\"SOSR\"; \r\n   walletArr.push(0x72BA86a847Ead7b69c3e92F88eb2Aa21C3Aa1C58); \r\n   walletArr.push(0x39DE3fa8976572819b0012B11b506E100a765453);\r\n   touched[owner] = true;\r\n }\r\n\r\n function balanceOf(address _who)public constant returns (uint256 balance) {\r\n    return getBalance(_who);\r\n }\r\n \r\nfunction getBalance(address _who) internal constant returns(uint256){\r\n\tif( currentCandyTotalSupply < candyTotalSupply ){\r\n\t    if( touched[_who] )\r\n\t\treturn balanceOf[_who];\r\n\t    else\r\n\t\treturn balanceOf[_who].add( candyBalance );\r\n\t} else {\r\n\t    return balanceOf[_who];\r\n\t}\r\n}\r\n    \r\n function _transferFrom(address _from, address _to, uint256 _value)  internal {\r\n     require(_to != 0x0);\r\n     \r\n     if( currentCandyTotalSupply < candyTotalSupply && !touched[_from]  ){\r\n            balanceOf[_from] = balanceOf[_from].add( candyBalance );\r\n            touched[_from] = true;\r\n            currentCandyTotalSupply = currentCandyTotalSupply.add( candyBalance );\r\n     }     \r\n     require(balanceOf[_from] >= _value);\r\n     require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n     balanceOf[_from] = balanceOf[_from].sub(_value);\r\n     balanceOf[_to] = balanceOf[_to].add(_value);\r\n     Transfer(_from, _to, _value);\r\n }\r\n\r\n function transfer(address _to, uint256 _value) public returns (bool){     \r\n     _transferFrom(msg.sender,_to,_value);\r\n     return true;\r\n }\r\n\r\n function push(address _buyer, uint256 _amount) public onlyOwner {\r\n     uint256 val=_amount*(10**18);\r\n     _transferFrom(msg.sender,_buyer,val);\r\n     ExchangeTokenPushed(_buyer, val);\r\n }\r\n\r\n function ()public payable {\r\n     _tokenPurchase( );\r\n }\r\n\r\n function _tokenPurchase( ) internal {   \r\n     require(saleActive(msg.value));     \r\n     uint256 weiAmount = msg.value;\r\n     uint256 actualRate = getActualRate(); \r\n     uint256 amount = weiAmount.mul(actualRate);\r\n     _transferFrom(owner, msg.sender,amount);\r\n     TokenPurchase(msg.sender, weiAmount,amount);        \r\n     address wallet = walletArr[walletIdx];\r\n     walletIdx = (walletIdx+1) % walletArr.length;\r\n     wallet.transfer(msg.value);\r\n     FundTransfer(wallet, msg.value);\r\n }\r\n\r\n function saleActive(uint256 _value) public constant returns (bool) {\r\n     bool res = false;\r\n     uint256 t = getCurrentTimestamp();\r\n     uint256 s = totalSupply - balanceOf[owner];\r\n     if(supply() > 0 && t < date610){\r\n       if(s < totalSupply2){\r\n           if( _value>=minValue1 ){\r\n              res = true;\r\n           }\r\n       }else{\r\n           if( _value>= minValue2 ){\r\n              res = true;\r\n           }\r\n       }\r\n     }\r\n     return res;\r\n }\r\n\r\n function getActualRate() internal view returns (uint256){  \r\n    uint256 rate=0;      \r\n    uint256 s = totalSupply - balanceOf[owner];\t\r\n    if(s < totalSupply1){\r\n\t rate = rate1;\r\n    }else if(s < totalSupply2){\r\n\t rate = rate2;\r\n    }else{\r\n         rate = rate3;\r\n    }    \r\n    return rate;\r\n }\r\n \r\n function supply()  internal constant  returns (uint256) {\r\n     return balanceOf[owner];\r\n }\r\n\r\n function getCurrentTimestamp() internal view returns (uint256){\r\n     return now;\r\n }\r\n\r\n function allowance(address _owner, address _spender)public constant returns (uint256 remaining) {\r\n     return allowed[_owner][_spender];\r\n }\r\n\r\n function approve(address _spender, uint256 _value)public returns (bool) {\r\n     require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n     allowed[msg.sender][_spender] = _value;\r\n     Approval(msg.sender, _spender, _value);\r\n     return true;\r\n }\r\n \r\n function transferFrom(address _from, address _to, uint256 _value)public returns (bool) {\r\n     var _allowance = allowed[_from][msg.sender];\r\n     require (_value <= _allowance);  \r\n      _transferFrom(_from,_to,_value);\r\n     allowed[_from][msg.sender] = _allowance.sub(_value);\r\n     Transfer(_from, _to, _value);\r\n     return true;\r\n   }\r\n \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"saleActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"date610\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minValue2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minValue1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"candyBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"candyTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_buyer\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentCandyTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"fundWallet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExchangeTokenPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"SOSRcoinToken","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0fe427dbfa34caf672e66b46af73dfbdc9490d9ff21fef0b70e7e3de185f86b2"}]}