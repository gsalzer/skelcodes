{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract CryptoBeautyVoting {\r\n\r\n  event Won(address indexed _winner, uint256 _value);\r\n  bool votingStart = false;\r\n  uint32 private restartTime;\r\n  uint32 private readyTime;\r\n  uint256 private votePrice;\r\n  address[] private arrOfVoters;\r\n  uint256[] private arrOfBeautyIdMatchedVoters;\r\n  address private owner;\r\n  \r\n  constructor() public {\r\n    owner = msg.sender;\r\n    restartTime = 7 days;\r\n    readyTime = uint32(now + restartTime);\r\n    votePrice = 0.002 ether;\r\n  }\r\n\r\n  /* Modifiers */\r\n  modifier onlyOwner() {\r\n    require(owner == msg.sender);\r\n    _;\r\n  }\r\n\r\n   /* Owner */\r\n  function setOwner (address _owner) onlyOwner() public {\r\n    owner = _owner;\r\n  }\r\n\r\n  function withdrawAll () onlyOwner() public {\r\n    owner.transfer(address(this).balance);\r\n  }\r\n\r\n  function withdrawAmount (uint256 _amount) onlyOwner() public {\r\n    owner.transfer(_amount);\r\n  }\r\n\r\n  function getCurrentBalance() public view returns (uint256 balance) {\r\n      return address(this).balance;\r\n  }\r\n\r\n  /* Voting */\r\n  function startVoting() onlyOwner() public {\r\n    votingStart = true;\r\n  }\r\n\r\n  function stopVoting() onlyOwner() public {\r\n    votingStart = false;\r\n  }\r\n\r\n  function changeRestarTime(uint32 _rTime) onlyOwner() public {\r\n    restartTime = _rTime;\r\n  }\r\n\r\n  function changevotePrice(uint256 _votePrice) onlyOwner() public {\r\n    votePrice = _votePrice;\r\n  }\r\n\r\n  function _isReady() internal view returns (bool) {\r\n    return (readyTime <= now);\r\n  }\r\n\r\n  function _isOne(address _voter) private view returns (bool) {\r\n    uint256 j = 0;\r\n    for(uint256 i = 0; i < arrOfVoters.length; i++) {\r\n      if(keccak256(abi.encodePacked(arrOfVoters[i])) == keccak256(abi.encodePacked(_voter)))\r\n      {\r\n        j++;\r\n      }\r\n    }\r\n    if(j == 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function vote(uint256 _itemId) payable public {\r\n    require(votingStart);\r\n    require(msg.value >= votePrice);\r\n    require(!isContract(msg.sender));\r\n    require(msg.sender != address(0));\r\n    require(_isOne(msg.sender));\r\n\r\n    arrOfVoters.push(msg.sender);\r\n    arrOfBeautyIdMatchedVoters.push(_itemId);\r\n  }\r\n\r\n  function getVoteResult() onlyOwner() public view returns (address[], uint256[]) {\r\n    require(_isReady());\r\n    return (arrOfVoters, arrOfBeautyIdMatchedVoters);\r\n  }\r\n\r\n  function voteResultPublish(address[] _winner, uint256[] _value) onlyOwner() public {\r\n    require(votingStart);\r\n    votingStart = false;\r\n    for (uint256 i = 0; i < _winner.length; i++) {\r\n     _winner[i].transfer(_value[i]);\r\n     emit Won(_winner[i], _value[i]);\r\n    }\r\n  }\r\n\r\n  function clear() onlyOwner() public {\r\n    delete arrOfVoters;\r\n    delete arrOfBeautyIdMatchedVoters;\r\n    readyTime = uint32(now + restartTime);\r\n    votingStart = true;\r\n  }\r\n  function getRestarTime() public view returns (uint32) {\r\n    return restartTime;\r\n  }\r\n\r\n  function getVotingStatus() public view returns (bool) {\r\n    return votingStart;\r\n  }\r\n\r\n  function getVotePrice() public view returns (uint256) {\r\n    return votePrice;\r\n  }\r\n\r\n  /* Util */\r\n  function isContract(address addr) internal view returns (bool) {\r\n    uint size;\r\n    assembly { size := extcodesize(addr) } // solium-disable-line\r\n    return size > 0;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_votePrice\",\"type\":\"uint256\"}],\"name\":\"changevotePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVotePrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startVoting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clear\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVotingStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rTime\",\"type\":\"uint32\"}],\"name\":\"changeRestarTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRestarTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVoteResult\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentBalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_winner\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"voteResultPublish\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopVoting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_winner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Won\",\"type\":\"event\"}]","ContractName":"CryptoBeautyVoting","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b86b32ffa1c6a25ccf8956ecd628403e756019fd4a031465c5f65300c93d5894"}]}