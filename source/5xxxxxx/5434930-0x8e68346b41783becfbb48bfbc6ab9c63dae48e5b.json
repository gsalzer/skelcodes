{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.21;\r\n\r\ncontract ERC20Interface {\r\n    function transfer(address _to, uint _value) public returns (bool) {}\r\n}\r\n\r\ncontract WhitelistInterface {\r\n\r\n    modifier onlyAdmins() {\r\n        require(isAdmin(msg.sender));\r\n        _;\r\n    }\r\n\r\n    function register(address[] newUsers) public onlyAdmins {}\r\n  \r\n    function isAdmin(address _admin) public view returns(bool) {}\r\n\r\n}\r\n\r\ncontract NecFunnel {\r\n    \r\n    ERC20Interface token = ERC20Interface(0xCc80C051057B774cD75067Dc48f8987C4Eb97A5e);\r\n    WhitelistInterface list = WhitelistInterface(0x0E55c54249F25f70D519b7Fb1c20e3331e7Ba76d);\r\n\r\n    modifier onlyAdmins() {\r\n        require(list.isAdmin(msg.sender));\r\n        _;\r\n    }\r\n  \r\n\tevent PaymentFailure(\r\n\t\taddress payee,\r\n\t\tuint value\r\n\t);\r\n\r\n\tfunction dropNectar(address[] receivers, uint[] values) public onlyAdmins {\r\n\t    list.register(receivers);\r\n\t    for (uint i = 0; i < receivers.length; i++){\r\n\t        if (!token.transfer(receivers[i],values[i])) {\r\n\t            emit PaymentFailure(receivers[i], values[i]);\r\n\t        }\r\n\t    }\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"receivers\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"dropNectar\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"PaymentFailure\",\"type\":\"event\"}]","ContractName":"NecFunnel","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://27c9cda4b097c76e3939dcbb36edda903805a38a20dca33fcc5df7f4bd714c74"}]}