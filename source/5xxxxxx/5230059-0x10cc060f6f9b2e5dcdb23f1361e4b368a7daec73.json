{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract UnicornInit {\r\n    function init() external;\r\n}\r\n\r\ncontract UnicornManagement {\r\n    using SafeMath for uint;\r\n\r\n    address public ownerAddress;\r\n    address public managerAddress;\r\n    address public communityAddress;\r\n    address public walletAddress;\r\n    address public candyToken;\r\n    address public candyPowerToken;\r\n    address public dividendManagerAddress; //onlyCommunity\r\n    address public blackBoxAddress; //onlyOwner\r\n    address public unicornBreedingAddress; //onlyOwner\r\n    address public geneLabAddress; //onlyOwner\r\n    address public unicornTokenAddress; //onlyOwner\r\n\r\n    uint public createDividendPercent = 375; //OnlyManager 4 digits. 10.5% = 1050\r\n    uint public sellDividendPercent = 375; //OnlyManager 4 digits. 10.5% = 1050\r\n    uint public subFreezingPrice = 1000000000000000000; //\r\n    uint64 public subFreezingTime = 1 hours;\r\n    uint public subTourFreezingPrice = 1000000000000000000; //\r\n    uint64 public subTourFreezingTime = 1 hours;\r\n    uint public createUnicornPrice = 50000000000000000;\r\n    uint public createUnicornPriceInCandy = 25000000000000000000; //25 tokens\r\n    uint public oraclizeFee = 3000000000000000; //0.003 ETH\r\n\r\n    bool public paused = true;\r\n    bool public locked = false;\r\n\r\n    mapping(address => bool) tournaments;//address\r\n\r\n    event GamePaused();\r\n    event GameResumed();\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event NewManagerAddress(address managerAddress);\r\n    event NewCommunityAddress(address communityAddress);\r\n    event NewDividendManagerAddress(address dividendManagerAddress);\r\n    event NewWalletAddress(address walletAddress);\r\n    event NewCreateUnicornPrice(uint price, uint priceCandy);\r\n    event NewOraclizeFee(uint fee);\r\n    event NewSubFreezingPrice(uint price);\r\n    event NewSubFreezingTime(uint time);\r\n    event NewSubTourFreezingPrice(uint price);\r\n    event NewSubTourFreezingTime(uint time);\r\n    event NewCreateUnicornPrice(uint price);\r\n    event NewCreateDividendPercent(uint percent);\r\n    event NewSellDividendPercent(uint percent);\r\n    event AddTournament(address tournamentAddress);\r\n    event DelTournament(address tournamentAddress);\r\n    event NewBlackBoxAddress(address blackBoxAddress);\r\n    event NewBreedingAddress(address breedingAddress);\r\n\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == ownerAddress);\r\n        _;\r\n    }\r\n\r\n    modifier onlyManager() {\r\n        require(msg.sender == managerAddress);\r\n        _;\r\n    }\r\n\r\n    modifier onlyCommunity() {\r\n        require(msg.sender == communityAddress);\r\n        _;\r\n    }\r\n\r\n    modifier whenNotPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n\r\n    modifier whenPaused {\r\n        require(paused);\r\n        _;\r\n    }\r\n\r\n    modifier whenUnlocked() {\r\n        require(!locked);\r\n        _;\r\n    }\r\n\r\n    function lock() external onlyOwner whenPaused whenUnlocked {\r\n        locked = true;\r\n    }\r\n\r\n    function UnicornManagement(address _candyToken) public {\r\n        ownerAddress = msg.sender;\r\n        managerAddress = msg.sender;\r\n        communityAddress = msg.sender;\r\n        walletAddress = msg.sender;\r\n        candyToken = _candyToken;\r\n        candyPowerToken = _candyToken;\r\n    }\r\n\r\n\r\n    struct InitItem {\r\n        uint listIndex;\r\n        bool exists;\r\n    }\r\n\r\n    mapping (address => InitItem) private initItems;\r\n    address[] private initList;\r\n\r\n    function registerInit(address _contract) external whenPaused {\r\n        require(msg.sender == ownerAddress || tx.origin == ownerAddress);\r\n\r\n        if (!initItems[_contract].exists) {\r\n            initItems[_contract] = InitItem({\r\n                listIndex: initList.length,\r\n                exists: true\r\n                });\r\n            initList.push(_contract);\r\n        }\r\n    }\r\n\r\n    function unregisterInit(address _contract) external onlyOwner whenPaused {\r\n        require(initItems[_contract].exists && initList.length > 0);\r\n        uint lastIdx = initList.length - 1;\r\n        initItems[initList[lastIdx]].listIndex = initItems[_contract].listIndex;\r\n        initList[initItems[_contract].listIndex] = initList[lastIdx];\r\n        initList.length--;\r\n        delete initItems[_contract];\r\n\r\n    }\r\n\r\n    function runInit() external onlyOwner whenPaused {\r\n        for(uint i = 0; i < initList.length; i++) {\r\n            UnicornInit(initList[i]).init();\r\n        }\r\n    }\r\n\r\n    function setCandyPowerToken(address _candyPowerToken) external onlyOwner whenPaused {\r\n        require(_candyPowerToken != address(0));\r\n        candyPowerToken = _candyPowerToken;\r\n    }\r\n\r\n    function setUnicornToken(address _unicornTokenAddress) external onlyOwner whenPaused whenUnlocked {\r\n        require(_unicornTokenAddress != address(0));\r\n        //        require(unicornTokenAddress == address(0));\r\n        unicornTokenAddress = _unicornTokenAddress;\r\n    }\r\n\r\n    function setBlackBox(address _blackBoxAddress) external onlyOwner whenPaused {\r\n        require(_blackBoxAddress != address(0));\r\n        blackBoxAddress = _blackBoxAddress;\r\n    }\r\n\r\n    function setGeneLab(address _geneLabAddress) external onlyOwner whenPaused {\r\n        require(_geneLabAddress != address(0));\r\n        geneLabAddress = _geneLabAddress;\r\n    }\r\n\r\n    function setUnicornBreeding(address _unicornBreedingAddress) external onlyOwner whenPaused whenUnlocked {\r\n        require(_unicornBreedingAddress != address(0));\r\n        //        require(unicornBreedingAddress == address(0));\r\n        unicornBreedingAddress = _unicornBreedingAddress;\r\n    }\r\n\r\n    function setManagerAddress(address _managerAddress) external onlyOwner {\r\n        require(_managerAddress != address(0));\r\n        managerAddress = _managerAddress;\r\n        emit NewManagerAddress(_managerAddress);\r\n    }\r\n\r\n    function setDividendManager(address _dividendManagerAddress) external onlyOwner {\r\n        require(_dividendManagerAddress != address(0));\r\n        dividendManagerAddress = _dividendManagerAddress;\r\n        emit NewDividendManagerAddress(_dividendManagerAddress);\r\n    }\r\n\r\n    function setWallet(address _walletAddress) external onlyOwner {\r\n        require(_walletAddress != address(0));\r\n        walletAddress = _walletAddress;\r\n        emit NewWalletAddress(_walletAddress);\r\n    }\r\n\r\n    function setTournament(address _tournamentAddress) external onlyOwner {\r\n        require(_tournamentAddress != address(0));\r\n        tournaments[_tournamentAddress] = true;\r\n        emit AddTournament(_tournamentAddress);\r\n    }\r\n\r\n    function delTournament(address _tournamentAddress) external onlyOwner {\r\n        require(tournaments[_tournamentAddress]);\r\n        tournaments[_tournamentAddress] = false;\r\n        emit DelTournament(_tournamentAddress);\r\n    }\r\n\r\n    function transferOwnership(address _ownerAddress) external onlyOwner {\r\n        require(_ownerAddress != address(0));\r\n        ownerAddress = _ownerAddress;\r\n        emit OwnershipTransferred(ownerAddress, _ownerAddress);\r\n    }\r\n\r\n\r\n    function setCreateDividendPercent(uint _percent) public onlyManager {\r\n        require(_percent < 2500);\r\n        //no more then 25%\r\n        createDividendPercent = _percent;\r\n        emit NewCreateDividendPercent(_percent);\r\n    }\r\n\r\n    function setSellDividendPercent(uint _percent) public onlyManager {\r\n        require(_percent < 2500);\r\n        //no more then 25%\r\n        sellDividendPercent = _percent;\r\n        emit NewSellDividendPercent(_percent);\r\n    }\r\n\r\n    //time in minutes\r\n    function setSubFreezingTime(uint64 _time) external onlyManager {\r\n        subFreezingTime = _time * 1 minutes;\r\n        emit NewSubFreezingTime(_time);\r\n    }\r\n\r\n    //price in CandyCoins\r\n    function setSubFreezingPrice(uint _price) external onlyManager {\r\n        subFreezingPrice = _price;\r\n        emit NewSubFreezingPrice(_price);\r\n    }\r\n\r\n\r\n    //time in minutes\r\n    function setSubTourFreezingTime(uint64 _time) external onlyManager {\r\n        subTourFreezingTime = _time * 1 minutes;\r\n        emit NewSubTourFreezingTime(_time);\r\n    }\r\n\r\n    //price in CandyCoins\r\n    function setSubTourFreezingPrice(uint _price) external onlyManager {\r\n        subTourFreezingPrice = _price;\r\n        emit NewSubTourFreezingPrice(_price);\r\n    }\r\n\r\n    //in weis\r\n    function setOraclizeFee(uint _fee) external onlyManager {\r\n        oraclizeFee = _fee;\r\n        emit NewOraclizeFee(_fee);\r\n    }\r\n\r\n    //price in weis\r\n    function setCreateUnicornPrice(uint _price, uint _candyPrice) external onlyManager {\r\n        createUnicornPrice = _price;\r\n        createUnicornPriceInCandy = _candyPrice;\r\n        emit NewCreateUnicornPrice(_price, _candyPrice);\r\n    }\r\n\r\n    function setCommunity(address _communityAddress) external onlyCommunity {\r\n        require(_communityAddress != address(0));\r\n        communityAddress = _communityAddress;\r\n        emit NewCommunityAddress(_communityAddress);\r\n    }\r\n\r\n\r\n    function pause() external onlyOwner whenNotPaused {\r\n        paused = true;\r\n        emit GamePaused();\r\n    }\r\n\r\n    function unpause() external onlyOwner whenPaused {\r\n        paused = false;\r\n        emit GameResumed();\r\n    }\r\n\r\n\r\n\r\n    function isTournament(address _tournamentAddress) external view returns (bool) {\r\n        return tournaments[_tournamentAddress];\r\n    }\r\n\r\n    function getCreateUnicornFullPrice() external view returns (uint) {\r\n        return createUnicornPrice.add(oraclizeFee);\r\n    }\r\n\r\n    function getCreateUnicornFullPriceInCandy() external view returns (uint) {\r\n        return createUnicornPriceInCandy;\r\n    }\r\n\r\n    function getHybridizationFullPrice(uint _price) external view returns (uint) {\r\n        return _price.add(valueFromPercent(_price, createDividendPercent));//.add(oraclizeFee);\r\n    }\r\n\r\n    function getSellUnicornFullPrice(uint _price) external view returns (uint) {\r\n        return _price.add(valueFromPercent(_price, sellDividendPercent));//.add(oraclizeFee);\r\n    }\r\n\r\n    //1% - 100, 10% - 1000 50% - 5000\r\n    function valueFromPercent(uint _value, uint _percent) internal pure returns (uint amount)    {\r\n        uint _amount = _value.mul(_percent).div(10000);\r\n        return (_amount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"unicornBreedingAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_candyPrice\",\"type\":\"uint256\"}],\"name\":\"setCreateUnicornPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_communityAddress\",\"type\":\"address\"}],\"name\":\"setCommunity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"geneLabAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tournamentAddress\",\"type\":\"address\"}],\"name\":\"delTournament\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"registerInit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setSubTourFreezingPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_unicornBreedingAddress\",\"type\":\"address\"}],\"name\":\"setUnicornBreeding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_percent\",\"type\":\"uint256\"}],\"name\":\"setSellDividendPercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setSubFreezingPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createUnicornPriceInCandy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_managerAddress\",\"type\":\"address\"}],\"name\":\"setManagerAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"unregisterInit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_geneLabAddress\",\"type\":\"address\"}],\"name\":\"setGeneLab\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dividendManagerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oraclizeFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blackBoxAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unicornTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackBoxAddress\",\"type\":\"address\"}],\"name\":\"setBlackBox\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_unicornTokenAddress\",\"type\":\"address\"}],\"name\":\"setUnicornToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_candyPowerToken\",\"type\":\"address\"}],\"name\":\"setCandyPowerToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCreateUnicornFullPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"walletAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"subTourFreezingPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"subFreezingPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"communityAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dividendManagerAddress\",\"type\":\"address\"}],\"name\":\"setDividendManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"subTourFreezingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setOraclizeFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tournamentAddress\",\"type\":\"address\"}],\"name\":\"setTournament\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellDividendPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createDividendPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"subFreezingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"runInit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createUnicornPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCreateUnicornFullPriceInCandy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"candyToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"candyPowerToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"locked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"managerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"getSellUnicornFullPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_time\",\"type\":\"uint64\"}],\"name\":\"setSubFreezingTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_time\",\"type\":\"uint64\"}],\"name\":\"setSubTourFreezingTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_walletAddress\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tournamentAddress\",\"type\":\"address\"}],\"name\":\"isTournament\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_percent\",\"type\":\"uint256\"}],\"name\":\"setCreateDividendPercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"getHybridizationFullPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ownerAddress\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_candyToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GamePaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GameResumed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"managerAddress\",\"type\":\"address\"}],\"name\":\"NewManagerAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"communityAddress\",\"type\":\"address\"}],\"name\":\"NewCommunityAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"dividendManagerAddress\",\"type\":\"address\"}],\"name\":\"NewDividendManagerAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"NewWalletAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"priceCandy\",\"type\":\"uint256\"}],\"name\":\"NewCreateUnicornPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"NewOraclizeFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NewSubFreezingPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"NewSubFreezingTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NewSubTourFreezingPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"NewSubTourFreezingTime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NewCreateUnicornPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"percent\",\"type\":\"uint256\"}],\"name\":\"NewCreateDividendPercent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"percent\",\"type\":\"uint256\"}],\"name\":\"NewSellDividendPercent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tournamentAddress\",\"type\":\"address\"}],\"name\":\"AddTournament\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tournamentAddress\",\"type\":\"address\"}],\"name\":\"DelTournament\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"blackBoxAddress\",\"type\":\"address\"}],\"name\":\"NewBlackBoxAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"breedingAddress\",\"type\":\"address\"}],\"name\":\"NewBreedingAddress\",\"type\":\"event\"}]","ContractName":"UnicornManagement","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000cd3673af09e76c74d889aabab68ca0645566a3a1","Library":"","SwarmSource":"bzzr://b7cd36028661699efb1eb027d023ab423d0af4eb87698a7e82ea4c512d866eea"}]}