{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract SafetherStorage {\r\n    \r\n    /*\r\n    * Depositor Struct is Storage for User.\r\n    * \r\n    * _token is access key required for find assets.\r\n    * _data is storage for depositor.\r\n    *\r\n    * _data[0] : Register Block Number\r\n    * _data[1] : Period holding assets\r\n    * _data[2] : Amount of holding assets\r\n    *\r\n    */\r\n    struct Depositor {\r\n        bytes8     _token;\r\n        uint256[3]  _data;\r\n    }\r\n    \r\n    mapping (address=>Depositor) internal _depositor;\r\n}\r\n\r\ncontract SafetherModifier is SafetherStorage {\r\n    modifier isRegisterd {\r\n        require(_depositor[msg.sender]._token != 0x0);\r\n        _;\r\n    }\r\n    \r\n    modifier isNotRegisterd {\r\n        require(_depositor[msg.sender]._token == 0x0);\r\n        _;\r\n    }\r\n    \r\n    modifier isValidDepositor(address depositor, bytes8 token) {\r\n        require(_depositor[depositor]._token == token);\r\n        require(_depositor[depositor]._data[2] > 0);\r\n        require(block.number >= _depositor[depositor]._data[1]);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract SafetherAbstract {\r\n    function authentication(bytes8 token) public constant returns(bool);\r\n    function getDepositor() public constant returns(uint256[3]);\r\n    \r\n    function register(bytes7 password) public;\r\n    function deposit(uint256 period) public payable;\r\n    function withdraw(address depositor, bytes8 token) public payable;\r\n    function cancel() public payable;\r\n}\r\n\r\ncontract Safether is SafetherModifier, SafetherAbstract {\r\n    function authentication(bytes8 token) public constant returns(bool) {\r\n        return _depositor[msg.sender]._token == token;\r\n    }\r\n    \r\n    function getDepositor() public constant returns (uint256[3]) {\r\n        return (_depositor[msg.sender]._data);\r\n    }\r\n    \r\n    function register(bytes7 password) public isNotRegisterd {\r\n        _depositor[msg.sender]._token = bytes8(keccak256(block.number, msg.sender, password));\r\n        _depositor[msg.sender]._data[0] = block.number;\r\n    }\r\n    \r\n    function deposit(uint256 period) public payable isRegisterd {\r\n        _depositor[msg.sender]._data[1] = block.number + period;\r\n        _depositor[msg.sender]._data[2] += msg.value;\r\n    }\r\n    \r\n    function withdraw(address depositor, bytes8 token) public payable isValidDepositor(depositor, token) {\r\n        uint256 tempDeposit = _depositor[depositor]._data[2];\r\n         _depositor[depositor]._data[2] = 0;\r\n         msg.sender.transfer(tempDeposit + msg.value);\r\n    }\r\n    \r\n    function cancel() public payable isRegisterd {\r\n        uint256 tempDeposit = _depositor[msg.sender]._data[2];\r\n        delete _depositor[msg.sender];\r\n        msg.sender.transfer(tempDeposit + msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"depositor\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"bytes8\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"bytes8\"}],\"name\":\"authentication\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDepositor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[3]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"password\",\"type\":\"bytes7\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Safether","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d35fc181c4aa2d33bce1f7b7a5cfeefeb01433b0c4fe393eacc0947c2f7aa9b9"}]}