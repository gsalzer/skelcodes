{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// written by madgustave from Team Chibi Fighters\r\n// find us at https://chibigame.io\r\n// info@chibifighters.io\r\n// version 1.0.0\r\n\r\ncontract ExternalTokensSupport {\r\n    function calculateAmount(address, uint256, address, bytes, uint256) public pure returns(uint256, uint256, uint256) {}\r\n}\r\n\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    \r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\n\r\ninterface ERC20Interface {\r\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\r\n    function transfer(address to, uint tokens) external;\r\n    function balanceOf(address _owner) external view returns (uint256 _balance);\r\n}\r\n\r\ninterface ERC20InterfaceClassic {\r\n    function transfer(address to, uint tokens) external returns (bool success);\r\n}\r\n\r\ncontract Crystals is Owned {\r\n\t// price of one crystal in wei\r\n\tuint256 public crystalPrice;\r\n    ExternalTokensSupport public etsContract;    \r\n\r\n\tevent crystalsBought(\r\n\t\taddress indexed buyer,\r\n\t\tuint256 amount,\r\n        uint256 indexed paymentMethod \r\n\t);\r\n\r\n\tconstructor(uint256 startPrice, address etsAddress) public {\r\n\t\tcrystalPrice = startPrice;\r\n        etsContract = ExternalTokensSupport(etsAddress);\r\n\t}\r\n\r\n\tfunction () public payable {\r\n\t\trequire(msg.value >= crystalPrice);\r\n\r\n\t\t// crystal is indivisible\r\n\t\trequire(msg.value % crystalPrice == 0);\r\n\r\n\t\temit crystalsBought(msg.sender, msg.value / crystalPrice, 0);\r\n\t}\r\n\r\n    function buyWithERC20(address _sender, uint256 _value, ERC20Interface _tokenContract, bytes _extraData) internal {\r\n        require(etsContract != address(0));\r\n\r\n        (uint256 crystalsAmount, uint256 neededTokensAmount, uint256 paymentMethod) = etsContract.calculateAmount(_sender, _value, _tokenContract, _extraData, crystalPrice);\r\n\r\n        require(_tokenContract.transferFrom(_sender, address(this), neededTokensAmount));\r\n\r\n        emit crystalsBought(_sender, crystalsAmount, paymentMethod);\r\n    }\r\n\r\n    function receiveApproval(address _sender, uint256 _value, ERC20Interface _tokenContract, bytes _extraData) public {\r\n        buyWithERC20(_sender, _value, _tokenContract, _extraData);\r\n    }\r\n\r\n\tfunction changePrice(uint256 newPrice) public onlyOwner {\r\n\t\tcrystalPrice = newPrice;\r\n\t}\r\n\r\n    function changeEtsAddress(address etsAddress) public onlyOwner {\r\n        etsContract = ExternalTokensSupport(etsAddress);\r\n    }\r\n\r\n    /**\r\n    * @dev Send Ether to owner\r\n    * @param _address Receiving address\r\n    * @param _amountWei Amount in WEI to send\r\n    **/\r\n    function weiToOwner(address _address, uint _amountWei) public onlyOwner returns (bool) {\r\n        require(_amountWei <= address(this).balance);\r\n        _address.transfer(_amountWei);\r\n        return true;\r\n    }\r\n\r\n    function ERC20ToOwner(address _to, uint256 _amount, ERC20Interface _tokenContract) public onlyOwner {\r\n        _tokenContract.transfer(_to, _amount);\r\n    }\r\n\r\n    function ERC20ClassicToOwner(address _to, uint256 _amount, ERC20InterfaceClassic _tokenContract) public onlyOwner {\r\n        _tokenContract.transfer(_to, _amount);\r\n    }\r\n    \r\n    function queryERC20(ERC20Interface _tokenContract) public view onlyOwner returns (uint) {\r\n        return _tokenContract.balanceOf(this);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amountWei\",\"type\":\"uint256\"}],\"name\":\"weiToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"ERC20ClassicToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etsContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"queryERC20\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crystalPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"etsAddress\",\"type\":\"address\"}],\"name\":\"changeEtsAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"ERC20ToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"startPrice\",\"type\":\"uint256\"},{\"name\":\"etsAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"paymentMethod\",\"type\":\"uint256\"}],\"name\":\"crystalsBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Crystals","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000071afd498d000000000000000000000000000096be7c812c68a1aa915a85c4051dc1669bd677f6","Library":"","SwarmSource":"bzzr://5614b2174c735f230c9eccefce7d835187fda96c8060df91cc75f7a3cb5a1eac"}]}