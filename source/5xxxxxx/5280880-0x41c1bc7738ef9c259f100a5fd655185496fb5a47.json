{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() public constant returns (uint256);\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n          return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\ncontract Kcoin is IERC20{\r\n\r\n    using SafeMath for uint256;\r\n\r\n    uint public initialSupply = 150000000000e18; // crowdsale\r\n\r\n    string public constant symbol = \"24K\";\r\n    string public constant name = \"24Kcoin\";\r\n    uint8 public constant decimals = 18;\r\n    uint public totalSupply = 1500000000000e18;\r\n\r\n    uint256 public constant Rate1 = 5000; //month March rate 1 Eth\r\n    uint256 public constant Rate2 = 5000; //month April rate 1 Eth\r\n    uint256 public constant Rate3 = 4500; //month May rate 1 Eth\r\n    uint256 public constant Rate4 = 4000; //month June rate 1 Eth\r\n    uint256 public constant Rate5 = 3500; //month July rate 1 Eth\r\n    uint256 public constant Rate6 = 3000; //month August rate 1 Eth\r\n\tuint256 public constant Rate7 = 2500; //month September rate 1 Eth\r\n\tuint256 public constant Rate8 = 2000; //month October rate 1 Eth\r\n\tuint256 public constant Rate9 = 1500; //month November rate 1 Eth\r\n\tuint256 public constant Rate10= 1000; //month December rate 1 Eth\r\n\r\n\r\n    uint256 public constant Start1 = 1519862400; //start 03/01/18 12:00 AM UTC time to Unix time stamp\r\n    uint256 public constant Start2 = 1522540800; //start 04/01/18 12:00 AM UTC time to Unix time stamp\r\n    uint256 public constant Start3 = 1525132800; //start 05/01/18 12:00 AM UTC time to Unix time stamp\r\n    uint256 public constant Start4 = 1527811200; //start 06/01/18 12:00 AM UTC time to Unix time stamp\r\n    uint256 public constant Start5 = 1530403200; //start 07/01/18 12:00 AM UTC time to Unix time stamp\r\n    uint256 public constant Start6 = 1533081600; //start 08/01/18 12:00 AM UTC time to Unix time stamp\r\n\tuint256 public constant Start7 = 1535760000; //start 09/01/18 12:00 AM UTC time to Unix time stamp\r\n\tuint256 public constant Start8 = 1538352000; //start 10/01/18 12:00 AM UTC time to Unix time stamp\r\n\tuint256 public constant Start9 = 1541030400; //start 11/01/18 12:00 AM UTC time to Unix time stamp\r\n\tuint256 public constant Start10= 1543622400; //start 12/01/18 12:00 AM UTC time to Unix time stamp\r\n\r\n\t\r\n    uint256 public constant End1 = 1522540799; //End 03/31/18 11:59 PM UTC time to Unix time stamp\r\n    uint256 public constant End2 = 1525132799; //End 04/30/18 11:59 PM UTC time to Unix time stamp\r\n    uint256 public constant End3 = 1527811199; //End 05/31/18 11:59 PM UTC time to Unix time stamp\r\n    uint256 public constant End4 = 1530403199; //End 06/30/18 11:59 PM UTC time to Unix time stamp\r\n    uint256 public constant End5 = 1533081599; //End 07/31/18 11:59 PM UTC time to Unix time stamp\r\n    uint256 public constant End6 = 1535759999; //End 08/31/18 11:59 PM UTC time to Unix time stamp\r\n\t\r\n\tuint256 public constant End7 = 1538351940; //End 09/30/18 11:59 PM UTC time to Unix time stamp\r\n\tuint256 public constant End8 = 1540943940; //End 10/30/18 11:59 PM UTC time to Unix time stamp\r\n\tuint256 public constant End9 = 1543622340; //End 11/30/18 11:59 PM UTC time to Unix time stamp\r\n\tuint256 public constant End10= 1546300740; //End 12/31/18 11:59 PM UTC time to Unix time stamp\r\n\t\r\n\t\r\n    address public owner;\r\n\r\n    mapping(address => uint256) balances;\r\n    mapping(address => mapping(address => uint256)) allowed;\r\n\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    function() public payable {\r\n        buyTokens();\r\n    }\r\n\r\n    function Kcoin() public {\r\n        //TODO\r\n        balances[msg.sender] = totalSupply;\r\n        owner = msg.sender;\r\n    }\r\n    function buyTokens() public payable {\r\n\r\n        require(msg.value > 0);\r\n\r\n        uint256 weiAmount = msg.value;\r\n        uint256 tokens1 = weiAmount.mul(Rate1); //make sure to check which rate tier we are in\r\n        uint256 tokens2 = weiAmount.mul(Rate2);\r\n        uint256 tokens3 = weiAmount.mul(Rate3);\r\n        uint256 tokens4 = weiAmount.mul(Rate4);\r\n        uint256 tokens5 = weiAmount.mul(Rate5);\r\n        uint256 tokens6 = weiAmount.mul(Rate6);\r\n\t\tuint256 tokens7 = weiAmount.mul(Rate7);\r\n\t\tuint256 tokens8 = weiAmount.mul(Rate8);\r\n\t\tuint256 tokens9 = weiAmount.mul(Rate9);\r\n\t\tuint256 tokens10= weiAmount.mul(Rate10);\r\n\r\n        //send tokens from ICO contract address\r\n        if (now >= Start1 && now <= End1) //we can send tokens at rate 1\r\n        {\r\n            balances[msg.sender] = balances[msg.sender].add(tokens1);\r\n            initialSupply = initialSupply.sub(tokens1);\r\n            //transfer(msg.sender, tokens1);\r\n        }\r\n        if (now >= Start2 && now <= End2) //we can send tokens at rate 2\r\n        {\r\n            balances[msg.sender] = balances[msg.sender].add(tokens2);\r\n            initialSupply = initialSupply.sub(tokens2);\r\n        }\r\n        if (now >= Start3 && now <= End3) //we can send tokens at rate 3\r\n        {\r\n            balances[msg.sender] = balances[msg.sender].add(tokens3);\r\n            initialSupply = initialSupply.sub(tokens3);\r\n        }\r\n        if (now >= Start4 && now <= End4) //we can send tokens at rate 4\r\n        {\r\n            balances[msg.sender] = balances[msg.sender].add(tokens4);\r\n            initialSupply = initialSupply.sub(tokens4);\r\n        }\r\n        if (now >= Start5 && now <= End5) //we can send tokens at rate 5\r\n        {\r\n            balances[msg.sender] = balances[msg.sender].add(tokens5);\r\n            initialSupply = initialSupply.sub(tokens5);\r\n        }\r\n        if (now >= Start6 && now <= End6) //we can send tokens at rate 6\r\n        {\r\n            balances[msg.sender] = balances[msg.sender].add(tokens6);\r\n            initialSupply = initialSupply.sub(tokens6);\r\n        }\r\n\t\t        if (now >= Start7 && now <= End7) //we can send tokens at rate 7\r\n        {\r\n            balances[msg.sender] = balances[msg.sender].add(tokens7);\r\n            initialSupply = initialSupply.sub(tokens7);\r\n        }\r\n\t\t        if (now >= Start8 && now <= End8) //we can send tokens at rate 8\r\n        {\r\n            balances[msg.sender] = balances[msg.sender].add(tokens8);\r\n            initialSupply = initialSupply.sub(tokens8);\r\n        }\r\n\t\t        if (now >= Start9 && now <= End9) //we can send tokens at rate 9\r\n        {\r\n            balances[msg.sender] = balances[msg.sender].add(tokens9);\r\n            initialSupply = initialSupply.sub(tokens9);\r\n        }\r\n\t\t        if (now >= Start10 && now <= End10) //we can send tokens at rate 10\r\n        {\r\n            balances[msg.sender] = balances[msg.sender].add(tokens10);\r\n            initialSupply = initialSupply.sub(tokens10);\r\n        }\r\n\t\t\r\n\r\n        owner.transfer(msg.value);\r\n    }\r\n\r\n   function totalSupply() public constant returns (uint256 ) {\r\n        //TODO\r\n        return totalSupply;\r\n    }\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n        //TODO\r\n        return balances[_owner];\r\n    }\r\n\r\n     function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        //TODO\r\n        require(\r\n            balances[msg.sender] >= _value\r\n            && _value > 0\r\n        );\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] += balances[_to].add(_value);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n     function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        //TODO\r\n        require(\r\n            allowed[_from][msg.sender] >= _value\r\n            && balances[_from] >= _value\r\n            && _value > 0\r\n        );\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n   function burn(uint256 _value) public returns (bool success) {\r\n        require(balances[msg.sender] >= _value);   // Check if the sender has enough\r\n        balances[msg.sender] -= _value;            // Subtract from the sender\r\n        totalSupply -= _value;                      // Updates totalSupply\r\n        Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n\t function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n        require(balances[_from] >= _value);                // Check if the targeted balance is enough\r\n        require(_value <= allowed[_from][msg.sender]);    // Check allowance\r\n        balances[_from] -= _value;                         // Subtract from the targeted balance\r\n        allowed[_from][msg.sender] -= _value;             // Subtract from the sender's allowance\r\n        totalSupply -= _value;                              // Update totalSupply\r\n        Burn(_from, _value);\r\n        return true;\r\n    }\r\n\r\n  function approve(address _spender, uint256 _value) public returns (bool success){\r\n        //TODO\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n     function allowance(address _owner, address _spender) public constant returns (uint256 remaining){\r\n        //TODO\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"End9\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"End2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Start8\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"End8\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Rate9\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Start7\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Rate2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Rate6\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Rate1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"End7\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"End6\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Rate7\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"End5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Start9\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Rate10\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Start4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"End1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Start1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Rate8\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"End10\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Start3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Rate3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Start5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"End3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Start10\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Rate5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"End4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Rate4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Start6\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Start2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Kcoin","CompilerVersion":"v0.4.22-nightly.2018.3.21+commit.8fd53c1c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9305d52db69834b86db513941ad88a66f47c97395ae528cd47e91de7cc5a9590"}]}