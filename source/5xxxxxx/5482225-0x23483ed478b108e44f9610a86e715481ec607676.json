{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract owned {\r\n    address public owner;\r\n    address public candidate;\r\n\r\n    function owned() payable public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    modifier onlyOwner {\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n    function changeOwner(address _owner) onlyOwner public {\r\n        candidate = _owner;\r\n    }\r\n    \r\n    function confirmOwner() public {\r\n        require(candidate == msg.sender);\r\n        owner = candidate;\r\n        delete candidate;\r\n    }\r\n}\r\n\r\ncontract CryptaurMigrations is owned\r\n{\r\n    address backend;\r\n    modifier backendOrOwner {\r\n        require(backend == msg.sender || msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    mapping(bytes => address) addressByServices;\r\n    mapping(address => bytes) servicesbyAddress;\r\n\r\n    event AddService(uint dateTime, bytes serviceName, address serviceAddress);\r\n\r\n    function CryptaurMigrations() public owned() { }\r\n    \r\n    function setBackend(address _backend) onlyOwner public {\r\n        backend = _backend;\r\n    }\r\n    \r\n    function setService(bytes serviceName, address serviceAddress) public backendOrOwner\r\n    {\r\n\t\taddressByServices[serviceName] = serviceAddress;\r\n\t\tservicesbyAddress[serviceAddress] = serviceName;\r\n\t\tAddService(now, serviceName, serviceAddress);\r\n    }\r\n    \r\n    function getServiceAddress(bytes serviceName) public view returns(address)\r\n    {\r\n\t\treturn addressByServices[serviceName];\r\n    }\r\n\r\n    function getServiceName(address serviceAddress) public view returns(bytes)\r\n    {\r\n\t\treturn servicesbyAddress[serviceAddress];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"serviceName\",\"type\":\"bytes\"}],\"name\":\"getServiceAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"serviceName\",\"type\":\"bytes\"},{\"name\":\"serviceAddress\",\"type\":\"address\"}],\"name\":\"setService\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"candidate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"serviceAddress\",\"type\":\"address\"}],\"name\":\"getServiceName\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_backend\",\"type\":\"address\"}],\"name\":\"setBackend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"dateTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"serviceName\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"serviceAddress\",\"type\":\"address\"}],\"name\":\"AddService\",\"type\":\"event\"}]","ContractName":"CryptaurMigrations","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1f3ddb81dc74f8f40fa39d3004657aa0de77b3aabb6d0a89b489fa8cb697dd35"}]}