{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract EthMash {\r\n\r\n    address public owner;\r\n    mapping (address => uint) public balances;\r\n\r\n    address[6] public leaders;\r\n    uint[6] public buyins;\r\n\r\n    event Challenge(uint buyin, uint draw, address challenger, address defender, bool success);\r\n    event Withdraw(address player, uint amount);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        leaders = [owner, owner, owner, owner, owner, owner];\r\n        buyins = [20 finney, 60 finney, 100 finney, 200 finney, 600 finney, 1000 finney];   \r\n    }\r\n\r\n    function publicGetBalance(address player) view public returns (uint) {\r\n        return balances[player];\r\n    }\r\n\r\n    function publicGetState() view public returns (address[6]) {\r\n        return leaders;\r\n    }\r\n\r\n    function ownerChange(uint index, address holder) public {\r\n        require(msg.sender == owner);\r\n        require(leaders[index] == owner);\r\n        leaders[index] = holder;\r\n    }\r\n\r\n    function userWithdraw() public {\r\n        require(balances[msg.sender] > 0);\r\n        uint amount = balances[msg.sender];\r\n        balances[msg.sender] = 0;\r\n        emit Withdraw(msg.sender, amount);\r\n        msg.sender.transfer(amount);\r\n    }\r\n\r\n    function userChallenge(uint index) public payable {\r\n        require(index >= 0 && index < 6);\r\n        require(msg.value == buyins[index]);\r\n        \r\n        uint random = ((uint(blockhash(block.number - 1)) + uint(leaders[index]) + uint(msg.sender)) % 100) + 1;\r\n        \r\n        if (random > 50) {\r\n            emit Challenge(buyins[index], random, msg.sender, leaders[index], true);\r\n            balances[msg.sender] += buyins[index];\r\n            leaders[index] = msg.sender;\r\n        } else {\r\n            emit Challenge(buyins[index], random, msg.sender, leaders[index], false);\r\n            balances[leaders[index]] += (buyins[index] * 95 / 100);\r\n            balances[owner] += (buyins[index] * 5 / 100);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"ownerChange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"userChallenge\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"leaders\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"userWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buyins\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"publicGetBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publicGetState\",\"outputs\":[{\"name\":\"\",\"type\":\"address[6]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"buyin\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"draw\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"challenger\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"defender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"Challenge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"}]","ContractName":"EthMash","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e97b35e67722f43bb53e9b12a4aa80295d8f9cdb767b9eec18b707ba35b2bdc9"}]}