{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\n/* ********************************************************** */\r\n\r\nlibrary Util {\r\n\r\n    struct Object {\r\n        bool isObject;\r\n        bool isActive;\r\n        bool isRejected;\r\n        uint index;\r\n        bytes32 badge;\r\n    }\r\n\r\n    struct List {\r\n        mapping(address => Object) registry;\r\n        uint length;\r\n    }\r\n\r\n    function add(List storage list, address _addr, bytes32 _badge) internal {\r\n        list.registry[_addr].isObject = true;\r\n        list.registry[_addr].index = list.length;\r\n        list.registry[_addr].badge = _badge;\r\n        list.length++;\r\n    }\r\n\r\n    function remove(List storage list, address _addr) internal {\r\n        list.registry[_addr].isObject = false;\r\n    }\r\n    /* ********************************************************** */\r\n\r\n    function activate(List storage list, address _addr) internal {\r\n        list.registry[_addr].isActive = true;\r\n    }\r\n\r\n    function deactivate(List storage list, address _addr) internal {\r\n        list.registry[_addr].isActive = false;\r\n    }\r\n\r\n    /* ********************************************************** */\r\n\r\n    function accept(List storage list, address _addr) internal {\r\n        list.registry[_addr].isRejected = false;\r\n    }\r\n\r\n    function reject(List storage list, address _addr) internal {\r\n        list.registry[_addr].isRejected = true;\r\n    }\r\n\r\n    /* ********************************************************** */\r\n\r\n    function isObject(List storage list, address _addr) view internal returns (bool) {\r\n        return list.registry[_addr].isObject;\r\n    }\r\n\r\n    function isActive(List storage list, address _addr) view internal returns (bool) {\r\n        return list.registry[_addr].isActive;\r\n    }\r\n\r\n    function isRejected(List storage list, address _addr) view internal returns (bool) {\r\n        return list.registry[_addr].isRejected;\r\n    }\r\n\r\n    function indexOf(List storage list, address _addr) view internal returns (uint) {\r\n        return list.registry[_addr].index;\r\n    }\r\n\r\n    function getBadge(List storage list, address _addr) view internal returns (bytes32) {\r\n        return list.registry[_addr].badge;\r\n    }\r\n\r\n    function length(List storage list) view internal returns (uint) {\r\n        return list.length;\r\n    }\r\n}\r\n\r\n/* ********************************************************** */\r\n\r\ncontract CanYaDao {\r\n\r\n    bytes32 private constant BADGE_ADMIN = \"Admin\";\r\n    bytes32 private constant BADGE_MOD = \"Mod\";\r\n    bytes32 public currentBadge = \"Pioneer\";\r\n\r\n    Util.List private _admins;\r\n    Util.List private _mods;\r\n    Util.List private _providers;\r\n\r\n    /* ********************************************************** */\r\n\r\n    modifier onlyAdmins() {\r\n        require(Util.isObject(_admins, msg.sender) == true);\r\n        _;\r\n    }\r\n\r\n    modifier onlyMods() {\r\n        require(Util.isObject(_mods, msg.sender) == true);\r\n        _;\r\n    }\r\n\r\n    /* ********************************************************** */\r\n\r\n    event onAdminAdded(address _addr);\r\n    event onAdminRemoved(address _addr);\r\n\r\n    event onModAdded(address _addr);\r\n    event onModRemoved(address _addr);\r\n\r\n    event onProviderAdded(address _addr);\r\n    event onProviderRemoved(address _addr);\r\n\r\n    event onProviderActivated(address _addr);\r\n    event onProviderDeactivated(address _addr);\r\n\r\n    event onProviderAccepted(address _addr);\r\n    event onProviderRejected(address _addr);\r\n\r\n    /* ********************************************************** */\r\n\r\n    function CanYaDao() public {\r\n        Util.add(_admins, msg.sender, BADGE_ADMIN);\r\n        Util.add(_mods, msg.sender, BADGE_ADMIN);\r\n    }\r\n\r\n    /* ********************************************************** */\r\n\r\n    function addAdmin(address _addr) onlyAdmins public {\r\n        if ( Util.isObject(_admins, _addr) == false ) {\r\n            Util.add(_admins, _addr, BADGE_ADMIN);\r\n            emit onAdminAdded(_addr);\r\n            addMod(_addr);\r\n        }\r\n    }\r\n\r\n    function removeAdmin(address _addr) onlyAdmins public {\r\n        if ( Util.isObject(_admins, _addr) == true ) {\r\n            Util.remove(_admins, _addr);\r\n            emit onAdminRemoved(_addr);\r\n            removeMod(_addr);\r\n        }\r\n    }\r\n\r\n    function isAdmin(address _addr) public view returns (bool) {\r\n        return Util.isObject(_admins, _addr);\r\n    }\r\n\r\n    /* ********************************************************** */\r\n\r\n    function addMod(address _addr) onlyAdmins public {\r\n        if ( Util.isObject(_mods, _addr) == false ) {\r\n            Util.add(_mods, _addr, BADGE_ADMIN);\r\n            emit onModAdded(_addr);\r\n        }\r\n    }\r\n\r\n    function removeMod(address _addr) onlyAdmins public {\r\n        if ( Util.isObject(_mods, _addr) == true ) {\r\n            Util.remove(_mods, _addr);\r\n            emit onModRemoved(_addr);\r\n        }\r\n    }\r\n\r\n    function isMod(address _addr) public view returns (bool) {\r\n        return Util.isObject(_mods, _addr);\r\n    }\r\n\r\n    /* ********************************************************** */\r\n\r\n    function addProvider(address _addr) onlyMods public {\r\n        if ( Util.isObject(_providers, _addr) == true ) revert();\r\n        Util.add(_providers, _addr, currentBadge);\r\n        emit onProviderAdded(_addr);\r\n    }\r\n\r\n    function removeProvider(address _addr) onlyMods public {\r\n        if ( Util.isObject(_providers, _addr) == false ) revert();\r\n        Util.remove(_providers, _addr);\r\n        emit onProviderRemoved(_addr);\r\n    }\r\n\r\n    function activateProvider(address _addr) onlyMods public {\r\n        if ( Util.isActive(_providers, _addr) == true ) revert(); \r\n        Util.activate(_providers, _addr);\r\n        emit onProviderActivated(_addr);\r\n    }\r\n\r\n    function deactivateProvider(address _addr) onlyMods public {\r\n        if ( Util.isActive(_providers, _addr) == false ) revert(); \r\n        Util.deactivate(_providers, _addr);\r\n        emit onProviderDeactivated(_addr);\r\n    }\r\n\r\n    function acceptProvider(address _addr) onlyMods public {\r\n        if ( Util.isRejected(_providers, _addr) == false ) revert(); \r\n        Util.accept(_providers, _addr);\r\n        emit onProviderAccepted(_addr);\r\n    }\r\n\r\n    function rejectProvider(address _addr) onlyMods public {\r\n        if ( Util.isRejected(_providers, _addr) == true ) revert(); \r\n        Util.reject(_providers, _addr);\r\n        emit onProviderRejected(_addr);\r\n    }\r\n\r\n    function isProvider(address _addr) public view returns (bool) {\r\n        return Util.isObject(_providers, _addr);\r\n    }\r\n\r\n    function isActive(address _addr) public view returns (bool) {\r\n        return Util.isActive(_providers, _addr);\r\n    }\r\n\r\n    function isRejected(address _addr) public view returns (bool) {\r\n        return Util.isRejected(_providers, _addr);\r\n    }\r\n\r\n    function indexOfProvider(address _addr) public view returns (uint) {\r\n        return Util.indexOf(_providers, _addr);\r\n    }\r\n\r\n    function getProviderBadge(address _addr) public view returns (bytes32) {\r\n        return Util.getBadge(_providers, _addr);\r\n    }\r\n\r\n    function sizeOfProviders() public view returns (uint) {\r\n        return Util.length(_providers);\r\n    }\r\n\r\n    /* ********************************************************** */\r\n\r\n    function setCurrentBadge(bytes32 _badge) onlyAdmins public {\r\n        currentBadge = _badge;\r\n    }\r\n\r\n    function () public payable {\r\n        revert();\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addMod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"rejectProvider\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sizeOfProviders\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_badge\",\"type\":\"bytes32\"}],\"name\":\"setCurrentBadge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentBadge\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"activateProvider\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removeMod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addProvider\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isRejected\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isProvider\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"indexOfProvider\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isMod\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removeProvider\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"acceptProvider\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"deactivateProvider\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getProviderBadge\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"onAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"onAdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"onModAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"onModRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"onProviderAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"onProviderRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"onProviderActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"onProviderDeactivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"onProviderAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"onProviderRejected\",\"type\":\"event\"}]","ContractName":"CanYaDao","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e03dacdac1cb054a5cd5be269c51a15843abab140df04a412708fbb61fad4d15"}]}