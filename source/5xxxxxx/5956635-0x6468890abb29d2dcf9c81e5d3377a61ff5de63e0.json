{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract EOCHToken {\r\n\r\n    string public name = \"Everything On Chain for Health\";      //  token name\r\n    string public symbol = \"EOCH\";           //  token symbol\r\n    uint256 public decimals = 6;            //  token digit\r\n    uint256 constant valueFounder = 16000000000000000;\r\n\r\n    mapping (address => uint256) public balanceMap;\r\n    mapping (address => uint256) public frozenOf; // ##\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    uint256 public totalSupply = 0;\r\n    bool public stopped = false;\r\n    bool public isMultiply = true;\r\n\r\n    address owner = 0x0;\r\n\r\n    modifier isOwner {\r\n        assert(owner == msg.sender);\r\n        _;\r\n    }\r\n\r\n    modifier isRunning {\r\n        assert (!stopped);\r\n        _;\r\n    }\r\n\r\n    modifier isMulti {\r\n        assert (isMultiply);\r\n        _;\r\n    }\r\n\r\n    modifier validAddress {\r\n        assert(0x0 != msg.sender);\r\n        _;\r\n    }\r\n\r\n    function EOCHToken() {\r\n        owner = msg.sender;\r\n        totalSupply = valueFounder;\r\n        balanceMap[owner] = valueFounder;\r\n        Transfer(0x0, owner, valueFounder);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) isRunning validAddress returns (bool success) {\r\n        require(balanceMap[msg.sender] >= _value);\r\n        require(balanceMap[_to] + _value >= balanceMap[_to]);\r\n        balanceMap[msg.sender] -= _value;\r\n        balanceMap[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferMulti(\r\n        address _to_1,\r\n        address _to_2,\r\n        address _to_3,\r\n        address _to_4,\r\n        address _to_5,\r\n        address _to_6,\r\n        address _to_7,\r\n        address _to_8,\r\n        address _to_9,\r\n        address _to_10,\r\n        uint256 _value) isRunning validAddress isMulti returns (bool success) {\r\n\r\n        require(10 * _value > 0 && balanceMap[msg.sender] >= 10 * _value);\r\n        require(balanceMap[_to_1] + _value >= balanceMap[_to_1]) ;\r\n        require(balanceMap[_to_2] + _value >= balanceMap[_to_2]) ;\r\n        require(balanceMap[_to_3] + _value >= balanceMap[_to_3]) ;\r\n        require(balanceMap[_to_4] + _value >= balanceMap[_to_4]) ;\r\n        require(balanceMap[_to_5] + _value >= balanceMap[_to_5]) ;\r\n        require(balanceMap[_to_6] + _value >= balanceMap[_to_6]) ;\r\n        require(balanceMap[_to_7] + _value >= balanceMap[_to_7]) ;\r\n        require(balanceMap[_to_8] + _value >= balanceMap[_to_8]) ;\r\n        require(balanceMap[_to_9] + _value >= balanceMap[_to_9]) ;\r\n        require(balanceMap[_to_10] + _value >= balanceMap[_to_10]) ;\r\n\r\n        balanceMap[msg.sender] -= 10 * _value;\r\n        balanceMap[_to_1] += _value;\r\n        balanceMap[_to_2] += _value;\r\n        balanceMap[_to_3] += _value;\r\n        balanceMap[_to_4] += _value;\r\n        balanceMap[_to_5] += _value;\r\n        balanceMap[_to_6] += _value;\r\n        balanceMap[_to_7] += _value;\r\n        balanceMap[_to_8] += _value;\r\n        balanceMap[_to_9] += _value;\r\n        balanceMap[_to_10] += _value;\r\n\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) isRunning validAddress returns (bool success) {\r\n        require(balanceMap[_from] >= _value);\r\n        require(balanceMap[_to] + _value >= balanceMap[_to]);\r\n        require(allowance[_from][msg.sender] >= _value);\r\n        balanceMap[_to] += _value;\r\n        balanceMap[_from] -= _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) isRunning validAddress returns (bool success) {\r\n        require(_value == 0 || allowance[msg.sender][_spender] == 0);\r\n        allowance[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function stop() isOwner {\r\n        stopped = true;\r\n    }\r\n\r\n    function start() isOwner {\r\n        stopped = false;\r\n    }\r\n\r\n    function stopMulti() isOwner {\r\n        isMultiply = false;\r\n    }\r\n\r\n    function startMulti() isOwner {\r\n        isMultiply = true;\r\n    }\r\n\r\n    function setName(string _name) isOwner {\r\n        name = _name;\r\n    }\r\n\r\n    function burn(uint256 _value) {\r\n        require(balanceMap[msg.sender] >= _value);\r\n        balanceMap[msg.sender] -= _value;\r\n        balanceMap[0x0] += _value;\r\n        Transfer(msg.sender, 0x0, _value);\r\n    }\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    // ##\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance){\r\n        return balanceMap[_owner] + frozenOf[_owner];\r\n    }\r\n\r\n    function frozen(address targetAddress , uint256 value) public isOwner returns (bool success){\r\n\r\n        require(balanceMap[targetAddress] >= value); // check has enough\r\n\r\n        uint256 count = balanceMap[targetAddress] + frozenOf[targetAddress];\r\n\r\n        balanceMap[targetAddress] -= value;\r\n        frozenOf[targetAddress] += value;\r\n\r\n        require(count == balanceMap[targetAddress] + frozenOf[targetAddress]);\r\n\r\n        return true;\r\n    }\r\n\r\n    function unfrozen(address targetAddress, uint256 value) public isOwner returns (bool success){\r\n\r\n        require(frozenOf[targetAddress] >= value); // check has enough\r\n\r\n        uint256 count = balanceMap[targetAddress] + frozenOf[targetAddress];\r\n\r\n        balanceMap[targetAddress] += value;\r\n        frozenOf[targetAddress] -= value;\r\n\r\n        require(count == balanceMap[targetAddress] + frozenOf[targetAddress]);\r\n\r\n        return true;\r\n    }\r\n\r\n    function frozenOf(address targetAddress) public constant returns (uint256 frozen){\r\n        return frozenOf[targetAddress];\r\n    }\r\n\r\n    function frozenOf() public constant returns (uint256 frozen){\r\n        return frozenOf[msg.sender];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"targetAddress\",\"type\":\"address\"}],\"name\":\"frozenOf\",\"outputs\":[{\"name\":\"frozen\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopMulti\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"targetAddress\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"frozen\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to_1\",\"type\":\"address\"},{\"name\":\"_to_2\",\"type\":\"address\"},{\"name\":\"_to_3\",\"type\":\"address\"},{\"name\":\"_to_4\",\"type\":\"address\"},{\"name\":\"_to_5\",\"type\":\"address\"},{\"name\":\"_to_6\",\"type\":\"address\"},{\"name\":\"_to_7\",\"type\":\"address\"},{\"name\":\"_to_8\",\"type\":\"address\"},{\"name\":\"_to_9\",\"type\":\"address\"},{\"name\":\"_to_10\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferMulti\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isMultiply\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startMulti\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"frozenOf\",\"outputs\":[{\"name\":\"frozen\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceMap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"targetAddress\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"unfrozen\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"EOCHToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://841b89be83c11e7aa0577815b2d91e799aa461b9a418c0138140068701f1f401"}]}