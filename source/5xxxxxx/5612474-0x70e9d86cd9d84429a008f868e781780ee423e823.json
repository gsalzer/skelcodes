{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract ERC20Interface {\r\n    // Get the total token supply\r\n    function totalSupply() public constant returns (uint256 supply);\r\n\r\n    // Get the account balance of another a ccount with address _owner\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n\r\n    // Send _value amount of tokens to address _to\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n\r\n    // Send _value amount of tokens from address _from to address _to\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n\r\n    // Allow _spender to withdraw from your account, multiple times, up to the _value amount.\r\n    // If this function is called again it overwrites the current allowance with _value.\r\n    // this function is required for some DEX functionality\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n\r\n    // Returns the amount which _spender is still allowed to withdraw from _owner\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\r\n\r\n    // Triggered when tokens are transferred.\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n    // Triggered whenever approve(address _spender, uint256 _value) is called.\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract AirDrop\r\n{\r\n    address public owner;\r\n    address public executor;\r\n    \r\n    event eTransferExecutor(address newOwner);\r\n    event eMultiTransfer(address _tokenAddr, address[] dests, uint256[] values);\r\n    event eMultiTransferETH(address[] dests, uint256[] values);\r\n    \r\n    function () public payable {\r\n    }\r\n    \r\n    // Constructor\r\n    function AirDrop() public {\r\n        owner = msg.sender;\r\n        executor = msg.sender;\r\n    }\r\n    \r\n    // Functions with this modifier can only be executed by the owner\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    function transferExecutor(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        executor = newOwner;\r\n        eTransferExecutor(newOwner);\r\n    }\r\n    \r\n    // Functions with this modifier can only be executed by the owner\r\n    modifier onlyExecutor() {\r\n        require(msg.sender == executor || msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    function MultiTransfer(address _tokenAddr, address[] dests, uint256[] values) public onlyExecutor\r\n    {\r\n        uint256 i = 0;\r\n        ERC20Interface T = ERC20Interface(_tokenAddr);\r\n        \r\n        require(dests.length > 0 && (dests.length == values.length || values.length == 1));\r\n        \r\n        if (values.length > 1)\r\n        {\r\n            while (i < dests.length) {\r\n                T.transfer(dests[i], values[i]);\r\n                i += 1;\r\n            }\r\n        }\r\n        else    \r\n        {\r\n            while (i < dests.length) {\r\n                T.transfer(dests[i], values[0]);\r\n                i += 1;\r\n            }\r\n        }\r\n        eMultiTransfer(_tokenAddr, dests, values);\r\n    }\r\n    \r\n    function MultiTransferETH(address[] dests, uint256[] values) public onlyExecutor\r\n    {\r\n        uint256 i = 0;\r\n        require(dests.length > 0 && (dests.length == values.length || values.length == 1));\r\n        \r\n        \r\n        if (values.length > 1)\r\n        {\r\n            while (i < dests.length) {\r\n                dests[i].transfer(values[i]);\r\n                i += 1;\r\n            }\r\n        }\r\n        else    \r\n        {\r\n            while (i < dests.length) {\r\n                dests[i].transfer(values[0]);\r\n                i += 1;\r\n            }\r\n        }\r\n        eMultiTransferETH(dests, values);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferExecutor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"MultiTransferETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"MultiTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"executor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"eTransferExecutor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"dests\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"eMultiTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"dests\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"eMultiTransferETH\",\"type\":\"event\"}]","ContractName":"AirDrop","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7dadd28fe5c18f11a125d5e13bdd9c49e89716509ad461c1352b0ef67441270b"}]}