{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\ninterface token\r\n{\r\n    function transfer(address receiver, uint256 amount) returns (bool success);\r\n    function transferFrom(address from, address to, uint256 amount) returns (bool success);\r\n    function balanceOf(address owner) constant returns (uint256 balance);\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n}\r\n\r\ncontract Crowdsale\r\n{\r\n    address public owner;\r\n    address public seller;\r\n    address public ContractAddress;\r\n    uint public amountRaised;\r\n    uint public price;\r\n    uint public ethereumPrice;\r\n    token public tokenReward;\r\n    address public walletOut1;\r\n    address public walletOut2;\r\n\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    function Crowdsale()\r\n    {\r\n        // Avatar\r\n        walletOut1 = 0x594ae2a6aeab6f5e74bba0958cec21ec4dcd7f1e;\r\n        // A\r\n        walletOut2 = 0x7776eab79aeff7a1c09d8c49a7f3caf252c26451;\r\n\r\n        // адрес продавца\r\n        seller = 0x7776eab79aeff7a1c09d8c49a7f3caf252c26451;\r\n\r\n        owner = msg.sender;\r\n\r\n        price = 15;\r\n        tokenReward = token(0xcd389f4873e8fbce7925b1d57804842043a3bf36);\r\n        ethereumPrice = 447;\r\n    }\r\n\r\n    function changeOwner(address newOwner) onlyowner\r\n    {\r\n        owner = newOwner;\r\n    }\r\n\r\n    modifier onlyowner()\r\n    {\r\n        if (msg.sender == owner) _;\r\n    }\r\n\r\n    /* модификатор проверяющий \"вызывает продавец или вызывает владелец контракта?\" */\r\n    modifier isSetPrice()\r\n    {\r\n        if (msg.sender == seller || msg.sender == owner) _;\r\n    }\r\n\r\n    function () payable\r\n    {\r\n        uint256 amount = msg.value;\r\n        amountRaised += amount;\r\n        uint256 amountOut1 = amount / 2;\r\n        uint256 amountOut2 = amount - amountOut1;\r\n\r\n        uint256 amountWei = amount;\r\n        uint priceUsdCentEth = ethereumPrice * 100;\r\n        uint priceUsdCentAvr = price;\r\n        uint256 amountAvrAtom = ((amountWei * priceUsdCentEth) / priceUsdCentAvr) / 10000000000;\r\n\r\n        if (tokenReward.balanceOf(ContractAddress) < amountAvrAtom) {\r\n            throw;\r\n        }\r\n        tokenReward.transfer(msg.sender, amountAvrAtom);\r\n\r\n        walletOut1.transfer(amountOut1);\r\n        walletOut2.transfer(amountOut2);\r\n\r\n        FundTransfer(msg.sender, amount, true);\r\n    }\r\n\r\n    function setWalletOut1(address wallet) onlyowner\r\n    {\r\n        walletOut1 = wallet;\r\n    }\r\n\r\n    function setWalletOut2(address wallet) onlyowner\r\n    {\r\n        walletOut2 = wallet;\r\n    }\r\n\r\n    function sendAVR(address wallet, uint256 amountAvrAtom) onlyowner\r\n    {\r\n        tokenReward.transfer(wallet, amountAvrAtom);\r\n    }\r\n\r\n    function setContractAddress(address wallet) onlyowner\r\n    {\r\n        ContractAddress = wallet;\r\n    }\r\n\r\n    // uint usdCentCostOfEachToken - цена в центах\r\n    function setPrice(uint usdCentCostOfEachToken) onlyowner\r\n    {\r\n        price = usdCentCostOfEachToken;\r\n    }\r\n\r\n    // uint usd - цена в долларах\r\n    function setEthPrice(uint usd) isSetPrice\r\n    {\r\n        ethereumPrice = usd;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"usd\",\"type\":\"uint256\"}],\"name\":\"setEthPrice\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"setContractAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethereumPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"walletOut2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"setWalletOut1\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"usdCentCostOfEachToken\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wallet\",\"type\":\"address\"},{\"name\":\"amountAvrAtom\",\"type\":\"uint256\"}],\"name\":\"sendAVR\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"walletOut1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"setWalletOut2\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2d45b7877fdc5443bcfb54f9e259c9b3f9fbf8000688db9e5fa0ac6043ddbfa4"}]}