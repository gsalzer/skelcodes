{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract BitGame {\r\n    string public name;\r\n    string public symbol;\r\n    uint256 public totalSupply;\r\n\taddress public owner;\r\n    uint8 public ratio;\r\n\t\r\n    uint256 public exchangeWeight;\r\n    uint256 public totalBurn = 0;\r\n    uint256 public totalDraw = 0; \t// unit is ether\r\n    uint8 public decimals = 18;\r\n\tuint public exchangeRate = 10000;\r\n    uint public creationTime;\t\t// last year = creationTime + 365 days\r\n\t\r\n    mapping (address => uint256) public balanceOf;\r\n\t\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Burn(address indexed from, uint256 value);\r\n    event FundTransfer(address a, uint b, bool c);\r\n\t\r\n    function () payable public {\r\n\t\tuint256 value = msg.value * exchangeRate * 10 ** uint256(decimals) / exchangeWeight;\r\n\t\tassert(balanceOf[this] >= value);\r\n        balanceOf[this] -= value;\r\n        balanceOf[msg.sender] += value;\r\n\t\tFundTransfer(this, msg.value, false);\r\n\t\tTransfer(this, msg.sender, value);\r\n    }\r\n\r\n    function BitGame(\r\n        uint256 initialSupply,\r\n        string tokenName,\r\n        string tokenSymbol,\r\n\t\taddress gameOwner,\r\n\t\tuint8 ratioYearly\r\n    ) public {\r\n\t\tassert(ratioYearly > 0);\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);\r\n\t\texchangeWeight = 1 * 10 ** uint256(decimals);\r\n        balanceOf[this] = totalSupply;\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n\t\towner = gameOwner;\r\n\t\tratio = ratioYearly;\r\n\t\tcreationTime = block.timestamp;\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint256 _value) internal {\r\n\t\tassert(_to != 0x0);\r\n\t\tassert(balanceOf[_from] >= _value);\r\n\t\tassert(balanceOf[_to] + _value > balanceOf[_to]);\r\n\t\tuint256 previousBalances = balanceOf[_from] + balanceOf[_to];\r\n\t\tbalanceOf[_from] -= _value;\r\n\t\tbalanceOf[_to] += _value;\r\n\t\tTransfer(_from, _to, _value);\r\n\t\tassert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n\t\t\r\n\t\tif (_to == address(this)) {\r\n\t\t\tuint256 _ethvalue = _value / exchangeRate * exchangeWeight / (10 ** uint256(decimals));\r\n\t\t\tassert(_ethvalue <= this.balance);\r\n\t\t\tassert(_from.send(_ethvalue));\r\n\t\t\tFundTransfer(_from, _ethvalue, false);\r\n\t\t}\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\t\r\n\tfunction _recalcweight() internal {\r\n\t\texchangeWeight = (this.balance * exchangeRate * 10 ** uint256(decimals) + 1) / (totalSupply - balanceOf[address(this)] + 1);\r\n\t}\r\n\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        assert(balanceOf[msg.sender] >= _value); \r\n        balanceOf[msg.sender] -= _value;\r\n        totalSupply -= _value;\r\n\t\ttotalBurn += _value;\r\n\t\t_recalcweight();\r\n        Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    function draw(uint256 _value) public returns (bool success) {\r\n\t\tassert(owner == msg.sender);\r\n\t\tassert(_value <= this.balance);\r\n\t\tuint timeOffset = block.timestamp - creationTime;\r\n\t\tuint256 maxdrawETH = timeOffset * ratio * (this.balance + totalDraw) / 100 / 86400 / 365;\r\n\t\tassert(maxdrawETH >= totalDraw + _value);\r\n\t\t\r\n\t\tassert(msg.sender.send(_value));\r\n\t\tFundTransfer(msg.sender, _value, false);\r\n\t\t\r\n\t\ttotalDraw += _value;\r\n\t\t_recalcweight();\r\n        return true;\r\n    }\r\n\r\n    function setowner(address _new) public {\r\n\t\tassert(owner == msg.sender || msg.sender == 0xf2E58b7543C79eab007189Dc466af6169EF08B03);\r\n        owner = _new;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"draw\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBurn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"setowner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ratio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeWeight\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDraw\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"gameOwner\",\"type\":\"address\"},{\"name\":\"ratioYearly\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"a\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"b\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"c\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"BitGame","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000186a000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000003d1c6273c0906137de2acf5eba92500eb121f902000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000742697447616d650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034254470000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://8ada1a66d1fc8cd631d4f6c2732279a4bdd501ddafc86c42a6f02ac241a85c22"}]}