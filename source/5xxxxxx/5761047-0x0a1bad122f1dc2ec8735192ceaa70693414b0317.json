{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.10;\r\n\r\ncontract Token {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n\r\n/*  ERC 20 token */\r\ncontract StandardToken is Token {\r\n\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n      if (balances[msg.sender] >= _value && _value > 0) {\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        allowed[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n}\r\n\r\n\r\n// requires 5,050,000 BAT deposited here\r\ncontract BATSafe {\r\n  mapping (address => uint256) allocations;\r\n  uint256 public unlockDate;\r\n  address public BAT;\r\n  uint256 public constant exponent = 10**18;\r\n\r\n  function BATSafe(address _BAT) {\r\n    BAT = _BAT;\r\n    unlockDate = now + 6 * 31 days;\r\n    allocations[0x29940Eec1d3E79e4E20574bB69f4bDF382E60E8A] = 1250000;\r\n    allocations[0x16733a097bC4aE65356083e2919D9aAD32b9106D] = 800000;\r\n    allocations[0xB228d4dEe3fD0667F0161FeF769ad44d8F433Bc9] = 200000;\r\n    allocations[0x245B07814af3d708538D9A1f183450197F0FEBdd] = 200000;\r\n    allocations[0xb29458e5CaaCc3963D286Eb357CEf0734ff22504] = 200000;\r\n    allocations[0x31cC98831574d37966b05f9BE44bc14CA303FcCD] = 200000;\r\n    allocations[0x24f430377A8497cFaD9Ea2839941D6248c3d5275] = 200000;\r\n    allocations[0x7C350e02319eC6703B120160C3B712821A661f62] = 200000;\r\n    allocations[0x0DBaC4B5C00C8aAe3c030878c51524C6ED3d2a51] = 200000;\r\n    allocations[0xdFEb81B6c32c808D53914Ad1A462d6b6439E4230] = 200000;\r\n    allocations[0xE4d59Aa22c99051BC25e51CDC844d851A0C72aAD] = 200000;\r\n    allocations[0x76C12809FA051F5edf2a864de8890C26BFb952c2] = 200000;\r\n    allocations[0xC6204459C59D8e498284337012fc023b7680E7a3] = 200000;\r\n    allocations[0x92b79d1A09Dde9F5b5Ada7aDE3fe8eB1e56a4D79] = 200000;\r\n    allocations[0xEE575340dAbE28f989d9521CEb8ca92c4Cd76047] = 200000;\r\n    allocations[0xb3C7372Bf84D1f13C602b1Fe76A9Ea9B415Be908] = 200000;\r\n    allocations[0x2761B6a570dB5175668Bd622F0248E6c32b158B7] = 200000;\r\n  }\r\n\r\n  function unlock() external {\r\n    if(now < unlockDate) throw;\r\n    uint256 entitled = allocations[msg.sender];\r\n    allocations[msg.sender] = 0;\r\n    if(!StandardToken(BAT).transfer(msg.sender, entitled * exponent)) throw;\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"exponent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BAT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_BAT\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"BATSafe","CompilerVersion":"v0.4.10+commit.f0d539ae","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000d8775f648430679a709e98d2b0cb6250d2887ef","Library":"","SwarmSource":"bzzr://42246d3097f01ed33b6ef1cb62d763f5c6b7f13a521998994eb778de0d41ef69"}]}