{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal returns(uint256) {\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\t\treturn c;\r\n    }\r\n    \r\n    function div(uint256 a, uint256 b) internal returns(uint256) {\r\n\t\tuint256 c = a / b;\r\n\t\treturn c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal returns(uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal returns(uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a && c >= b);\r\n\t\treturn c;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    function Ownable() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner {\r\n        require(newOwner != address(0));\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract ERC20Basic {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address who) constant returns (uint256);\r\n    function transfer(address to, uint256 value) returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender) constant returns (uint256);\r\n    function transferFrom(address from, address to, uint256 value) returns (bool);\r\n    function approve(address spender, uint256 value) returns (bool);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Fosha is ERC20, Ownable {\r\n   \r\n    using SafeMath for uint256;\r\n\t\r\n    string constant public symbol = \"FOSHA\";\r\n    string constant public name = \"Fosha\";\r\n    uint8 constant public decimals = 18;\r\n\r\n\tuint public totalSupply;\r\n\tuint public tokensForIco;\r\n\tuint256 public startTransferTime;\r\n\tuint256 public tokensSold;\r\n\tuint256 public start;\r\n\tuint256 public end;\r\n\tuint256 public tokenExchangeRate;\r\n\tuint256 public amountRaised;\r\n    bool public crowdsaleClosed = false;\r\n\t\r\n    address public fundWallet;\r\n    address ethFundWallet;\r\n\t\r\n\tmapping(address => uint256) balances;\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n\t\r\n\tevent FundTransfer(address backer, uint amount, bool isContribution, uint _amountRaised);\r\n\r\n\tfunction Fosha(uint256 _total, uint256 _icototal, uint256 _start, uint256 _end, uint256 _exchange) {\r\n\t\ttotalSupply = _total * 1 ether;\r\n\t\ttokensForIco = _icototal * 1 ether;\r\n\t\tstart = _start;\r\n\t\tend = _end;\r\n\t\ttokenExchangeRate = _exchange;\r\n\t\tethFundWallet = msg.sender;\r\n\t\tfundWallet = msg.sender;\r\n\t\tbalances[fundWallet] = totalSupply;\r\n\t\tstartTransferTime = end;\r\n    }\r\n\r\n    function() payable {\r\n\t\tuint256 amount = msg.value;\r\n\t\tuint256 numTokens = amount.mul(tokenExchangeRate); \r\n\t\trequire(!crowdsaleClosed && now >= start && now <= end && tokensSold.add(numTokens) <= tokensForIco && amount <= 5 ether);\r\n\t\tethFundWallet.transfer(amount);\r\n\t\tbalances[fundWallet] = balances[fundWallet].sub(numTokens); \r\n\t\tbalances[msg.sender] = balances[msg.sender].add(numTokens);\r\n\t\tTransfer(fundWallet, msg.sender, numTokens);\r\n\t\tamountRaised = amountRaised.add(amount);\r\n\t\ttokensSold += numTokens;\r\n\t\tFundTransfer(msg.sender, amount, true, amountRaised);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) returns(bool success) {\r\n\t\trequire(now >= startTransferTime); \r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value); \r\n\t\tbalances[_to] = balances[_to].add(_value); \r\n\t\tTransfer(msg.sender, _to, _value); \r\n\t\treturn true;\r\n    }\r\n\t\r\n\tfunction balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\t\r\n    function approve(address _spender, uint256 _value) returns(bool success) {\r\n\t\trequire((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\tApproval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n    }\r\n\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\t\r\n    function transferFrom(address _from, address _to, uint256 _value) returns(bool success) {\r\n\t\tif (now < startTransferTime) {\r\n\t\t    require(_from == fundWallet);\r\n\t\t}\r\n\t\tvar _allowance = allowed[_from][msg.sender];\r\n\t\trequire(_value <= _allowance);\r\n\t\tbalances[_from] = balances[_from].sub(_value); \r\n\t\tbalances[_to] = balances[_to].add(_value); \r\n\t\tallowed[_from][msg.sender] = _allowance.sub(_value);\r\n\t\tTransfer(_from, _to, _value);\r\n\t\treturn true;\r\n    }\r\n\r\n    function markCrowdsaleEnding() {\r\n\t\trequire(now > end);\r\n\t\tcrowdsaleClosed = true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensForIco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTransferTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"markCrowdsaleEnding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_total\",\"type\":\"uint256\"},{\"name\":\"_icototal\",\"type\":\"uint256\"},{\"name\":\"_start\",\"type\":\"uint256\"},{\"name\":\"_end\",\"type\":\"uint256\"},{\"name\":\"_exchange\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_amountRaised\",\"type\":\"uint256\"}],\"name\":\"FundTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Fosha","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000004a62f800000000000000000000000000000000000000000000000000000000003b82600000000000000000000000000000000000000000000000000000000005adc5d20000000000000000000000000000000000000000000000000000000005ae7adff0000000000000000000000000000000000000000000000000000000000000bb8","Library":"","SwarmSource":"bzzr://6e275a394c9e93963f29275afbe97332eac0a877a1e58fe2246ada1b85baa9db"}]}