{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.22;\r\n\r\ncontract Destiny {\r\n    function fight(bytes32 cat1, bytes32 cat2, bytes32 entropy) public returns (bytes32 winner);\r\n}\r\n\r\ncontract CatDestiny is Destiny {\r\n    uint8 private constant type_life = 0;\r\n    uint8 private constant type_attack = 1;\r\n    uint8 private constant type_defense = 2;\r\n\r\n    uint8 private constant gen_body = 0;\r\n    uint8 private constant gen_pattern = 4;\r\n    uint8 private constant gen_eye_color = 8;\r\n    uint8 private constant gen_body_color = 16;\r\n    uint8 private constant gen_color = 24;\r\n    uint8 private constant gen_wild = 28;\r\n    uint8 private constant gen_mouth = 32;\r\n\r\n    struct Weight {\r\n        uint8 attack;\r\n        uint8 defense;\r\n        uint8 life;\r\n    }\r\n\r\n    mapping (uint8 => Weight[32]) private matrix;\r\n    \r\n    function fight(bytes32 cat1, bytes32 cat2, bytes32 seed) public returns (bytes32 winner) {\r\n        int256 life1 = getLife(cat1);\r\n        int256 life2 = getLife(cat2);\r\n\r\n        int256 attack1 = getAttack(cat1, seed, 1) * getMult(cat1, seed, 2);\r\n        int256 attack2 = getAttack(cat2, seed, 3) * getMult(cat2, seed, 4);\r\n\r\n        int256 defense1 = getDefense(cat1, seed, 5);\r\n        int256 defense2 = getDefense(cat2, seed, 6);\r\n        \r\n        life1 -= (attack2 - (defense1 * 3) / 2);\r\n        life2 -= (attack1 - (defense2 * 3) / 2);\r\n        \r\n        if (life1 < life2) {\r\n            winner = cat2;\r\n        } else if (life2 < life1) {\r\n            winner = cat1;\r\n        } else {\r\n            winner = bytes32(0);\r\n        }\r\n    }\r\n    \r\n    function readValue(bytes32 dna, uint8 att) internal view returns (Weight w) {\r\n        uint8 k = gen(dna, att);\r\n        w = matrix[att][k];\r\n        \r\n        if (w.attack == 0 && w.defense == 0 && w.life == 0) {\r\n            w = Weight({\r\n                attack: uint8(keccak256(k, att)),\r\n                defense: uint8(keccak256(k, att)),\r\n                life: uint8(keccak256(k, att))\r\n            });\r\n        }\r\n    }\r\n    \r\n    function gen(bytes32 dna, uint256 p) private pure returns (uint8) {\r\n        return uint8(bytes1((dna << (248 - (p * 5)))) & 0x1f);\r\n    }\r\n    \r\n    function CatDestinity() public {\r\n        // Load body data\r\n        matrix[0][18] = Weight({attack:233,defense:0,life:240}); //highlander 247\r\n        matrix[0][4] = Weight({attack:211,defense:0,life:205}); //koladiviya 1109\r\n        matrix[0][21] = Weight({attack:188,defense:0,life:190}); //mainecoon 4829\r\n        matrix[0][16] = Weight({attack:170,defense:0,life:206}); //norwegianforest 4990\r\n        matrix[0][27] = Weight({attack:220,defense:0,life:170}); //manx 5991\r\n        matrix[0][23] = Weight({attack:245,defense:0,life:150}); //persian 10662\r\n        matrix[0][7] = Weight({attack:135,defense:0,life:210}); //pixiebob 11551\r\n        matrix[0][0] = Weight({attack:130,defense:0,life:200}); //savannah 12849\r\n        matrix[0][10] = Weight({attack:150,defense:0,life:180}); //chartreux 16624\r\n        matrix[0][5] = Weight({attack:145,defense:0,life:180}); //bobtail 33518\r\n        matrix[0][3] = Weight({attack:145,defense:0,life:180}); //birman 34603\r\n        matrix[0][1] = Weight({attack:130,defense:0,life:150}); //selkirk 39693\r\n        matrix[0][22] = Weight({attack:128,defense:0,life:149}); //laperm 40633\r\n        matrix[0][15] = Weight({attack:135,defense:0,life:110}); //ragdoll 74468\r\n        matrix[0][9] = Weight({attack:130,defense:0,life:110}); //cymric 76012\r\n        matrix[0][14] = Weight({attack:100,defense:0,life:100}); //ragamuffin 85938\r\n        matrix[0][11] = Weight({attack:190,defense:0,life:30}); //himalayan 91315\r\n        matrix[0][13] = Weight({attack:180,defense:0,life:50}); //sphynx 97994\r\n        matrix[0][12] = Weight({attack:90,defense:0,life:120}); //munchkin 98141\r\n        // Load pattern data\r\n        matrix[4][25] = Weight({attack:250,defense:200,life:0}); // razzledazzle 25\r\n        matrix[4][19] = Weight({attack:2,defense:255,life:0}); // highsociety 71\r\n        matrix[4][6] = Weight({attack:200,defense:201,life:0}); // rorschach 78\r\n        matrix[4][18] = Weight({attack:180,defense:190,life:0}); // dippedcone 2414\r\n        matrix[4][17] = Weight({attack:240,defense:100,life:0}); // thunderstruck 2538\r\n        matrix[4][26] = Weight({attack:190,defense:180,life:0}); // hotrod 5061\r\n        matrix[4][5] = Weight({attack:90,defense:255,life:0}); // camo 5417\r\n        matrix[4][2] = Weight({attack:140,defense:141,life:0}); // rascal 9834\r\n        matrix[4][21] = Weight({attack:200,defense:40,life:0}); // henna 12322\r\n        matrix[4][3] = Weight({attack:150,defense:150,life:0}); // ganado 12625\r\n        matrix[4][4] = Weight({attack:230,defense:20,life:0}); // leopard 17016\r\n        matrix[4][11] = Weight({attack:128,defense:150,life:0}); // jaguar 23457\r\n        matrix[4][20] = Weight({attack:120,defense:120,life:0}); // tigerpunk 24011\r\n        matrix[4][1] = Weight({attack:200,defense:23,life:0}); // tiger 30727\r\n        matrix[4][7] = Weight({attack:140,defense:170,life:0}); // spangled 31850\r\n        matrix[4][8] = Weight({attack:150,defense:160,life:0}); // calicool 42080\r\n        matrix[4][10] = Weight({attack:130,defense:140,life:0}); // amur 67930\r\n        matrix[4][12] = Weight({attack:5,defense:100,life:0}); // spock 74454\r\n        matrix[4][9] = Weight({attack:90,defense:99,life:0}); // luckystripe 139732\r\n        // Load eye color data\r\n        matrix[8][7] = Weight({attack:1,defense:0,life:0}); // strawberry 122951\r\n        matrix[8][5] = Weight({attack:20,defense:0,life:0}); // sizzurp 107360\r\n        matrix[8][3] = Weight({attack:24,defense:0,life:0}); // mintgreen 106378\r\n        matrix[8][2] = Weight({attack:40,defense:0,life:0}); // topaz 91993\r\n        matrix[8][1] = Weight({attack:44,defense:0,life:0}); // gold 76929\r\n        matrix[8][6] = Weight({attack:54,defense:0,life:0}); // chestnut 55495\r\n        matrix[8][8] = Weight({attack:60,defense:0,life:0}); // sapphire 34341\r\n        matrix[8][17] = Weight({attack:77,defense:0,life:0}); // limegreen 31774\r\n        matrix[8][0] = Weight({attack:40,defense:0,life:0}); // thundergrey 31120\r\n        matrix[8][11] = Weight({attack:80,defense:0,life:0}); // coralsunrise 29528\r\n        matrix[8][19] = Weight({attack:40,defense:0,life:0}); // bubblegum 17656\r\n        matrix[8][15] = Weight({attack:90,defense:0,life:0}); // cyan 17560\r\n        matrix[8][9] = Weight({attack:100,defense:0,life:0}); // forgetmenot 5796\r\n        matrix[8][14] = Weight({attack:120,defense:0,life:0}); // parakeet 3423\r\n        matrix[8][16] = Weight({attack:80,defense:0,life:0}); // pumpkin 3357\r\n        matrix[8][13] = Weight({attack:231,defense:0,life:0}); // doridnudibranch 2381\r\n        matrix[8][20] = Weight({attack:233,defense:0,life:0}); // twilightsparkle 1554\r\n        matrix[8][24] = Weight({attack:240,defense:0,life:0}); // babypuke 730\r\n        matrix[8][23] = Weight({attack:240,defense:0,life:0}); // eclipse 725\r\n        // Load body color data\r\n        matrix[16][20] = Weight({attack:0,defense:170,life:0}); // lavender 201\r\n        matrix[16][23] = Weight({attack:0,defense:150,life:0}); // verdigris 1832\r\n        matrix[16][19] = Weight({attack:0,defense:122,life:0}); // koala 2247\r\n        matrix[16][13] = Weight({attack:0,defense:150,life:0}); // dragonfruit 2363\r\n        matrix[16][9] = Weight({attack:0,defense:122,life:0}); // cinderella 3186\r\n        matrix[16][8] = Weight({attack:0,defense:99,life:0}); // harbourfog 5688\r\n        matrix[16][14] = Weight({attack:0,defense:12,life:0}); // hintomint 6400\r\n        matrix[16][7] = Weight({attack:0,defense:2,life:0}); // nachocheez 6551\r\n        matrix[16][25] = Weight({attack:0,defense:200,life:0}); // onyx 8225\r\n        matrix[16][18] = Weight({attack:0,defense:55,life:0}); // oldlace 22288\r\n        matrix[16][15] = Weight({attack:0,defense:8,life:0}); // bananacream 36400\r\n        matrix[16][16] = Weight({attack:0,defense:36,life:0}); // cloudwhite 43802\r\n        matrix[16][1] = Weight({attack:0,defense:20,life:0}); // salmon 75223\r\n        matrix[16][4] = Weight({attack:0,defense:20,life:0}); // cottoncandy 78501\r\n        matrix[16][3] = Weight({attack:0,defense:90,life:0}); // orangesoda 79759\r\n        matrix[16][6] = Weight({attack:0,defense:24,life:0}); // aquamarine 82860\r\n        matrix[16][5] = Weight({attack:0,defense:33,life:0}); // mauveover 90339\r\n        matrix[16][0] = Weight({attack:0,defense:20,life:0}); // shadowgrey 91623\r\n        matrix[16][10] = Weight({attack:0,defense:10,life:0}); // greymatter 103658\r\n        // Load color data\r\n        matrix[24][27] = Weight({attack:0,defense:230,life:0}); // mintmacaron 396\r\n        matrix[24][9] = Weight({attack:0,defense:200,life:0}); // shale 787\r\n        matrix[24][17] = Weight({attack:0,defense:190,life:0}); // flamingo 1375\r\n        matrix[24][23] = Weight({attack:0,defense:220,life:0}); // patrickstarfish 1504\r\n        matrix[24][24] = Weight({attack:0,defense:140,life:0}); // seafoam 1927\r\n        matrix[24][13] = Weight({attack:0,defense:160,life:0}); // missmuffett 2647\r\n        matrix[24][22] = Weight({attack:0,defense:177,life:0}); // periwinkle 2896\r\n        matrix[24][15] = Weight({attack:0,defense:201,life:0}); // frosting 7060\r\n        matrix[24][16] = Weight({attack:0,defense:90,life:0}); // daffodil 7438\r\n        matrix[24][14] = Weight({attack:0,defense:122,life:0}); // morningglory 26296\r\n        matrix[24][2] = Weight({attack:0,defense:66,life:0}); // peach 27774\r\n        matrix[24][10] = Weight({attack:0,defense:23,life:0}); // purplehaze 29443\r\n        matrix[24][0] = Weight({attack:0,defense:99,life:0}); // belleblue 30752\r\n        matrix[24][3] = Weight({attack:0,defense:190,life:0}); // icy 34298\r\n        matrix[24][12] = Weight({attack:0,defense:9,life:0}); // azaleablush 34622\r\n        matrix[24][19] = Weight({attack:0,defense:60,life:0}); // bloodred 36960\r\n        matrix[24][1] = Weight({attack:0,defense:30,life:0}); // sandalwood 49768\r\n        matrix[24][7] = Weight({attack:0,defense:10,life:0}); // emeraldgreen 61141\r\n        matrix[24][6] = Weight({attack:0,defense:50,life:0}); // kittencream 186366\r\n        matrix[24][4] = Weight({attack:0,defense:44,life:0}); // granitegrey 197635\r\n        // Load wild data\r\n        matrix[28][17] = Weight({attack:250,defense:200,life:0}); // elk 7036\r\n        matrix[28][19] = Weight({attack:200,defense:250,life:0}); // trioculus 1566\r\n        matrix[28][20] = Weight({attack:240,defense:255,life:0}); // daemonwings 1286\r\n        matrix[28][23] = Weight({attack:245,defense:255,life:0}); // daemonhorns 711\r\n        // Load mouth data\r\n        matrix[32][9] = Weight({attack:10,defense:0,life:0}); // pouty 137345\r\n        matrix[32][14] = Weight({attack:40,defense:0,life:0}); // happygokitty 123608\r\n        matrix[32][15] = Weight({attack:150,defense:0,life:0}); // soserious 105209\r\n        matrix[32][10] = Weight({attack:40,defense:0,life:0}); // saycheese 97689\r\n        matrix[32][8] = Weight({attack:20,defense:0,life:0}); // beard 43754\r\n        matrix[32][3] = Weight({attack:90,defense:0,life:0}); // gerbil 42150\r\n        matrix[32][23] = Weight({attack:110,defense:0,life:0}); // tongue 41916\r\n        matrix[32][0] = Weight({attack:122,defense:0,life:0}); // whixtensions 40268\r\n        matrix[32][11] = Weight({attack:155,defense:0,life:0}); // grim 37027\r\n        matrix[32][2] = Weight({attack:150,defense:0,life:0}); // wuvme 33604\r\n        matrix[32][20] = Weight({attack:194,defense:0,life:0}); // dali 18700\r\n        matrix[32][17] = Weight({attack:209,defense:0,life:0}); // starstruck 4636\r\n        matrix[32][21] = Weight({attack:210,defense:0,life:0}); // grimace 3183\r\n        matrix[32][1] = Weight({attack:99,defense:0,life:0}); // wasntme 3006\r\n        matrix[32][16] = Weight({attack:150,defense:0,life:0}); // cheeky 2688\r\n        matrix[32][24] = Weight({attack:225,defense:0,life:0}); // yokel 2069\r\n        matrix[32][6] = Weight({attack:230,defense:0,life:0}); // belch 1993\r\n        matrix[32][26] = Weight({attack:250,defense:0,life:0}); // neckbeard 1905\r\n        matrix[32][7] = Weight({attack:240,defense:0,life:0}); // rollercoaster 201\r\n        matrix[32][19] = Weight({attack:255,defense:0,life:0}); // ruhroh 62\r\n    }\r\n    \r\n    function urandom(bytes32 seed, uint256 nonce) private returns (bytes32) {\r\n        return keccak256(uint256(seed) + nonce);\r\n    }\r\n\r\n    function getLife(bytes32 cat) private returns (int256 life) {\r\n        life = readValue(cat, gen_body).life * 4;\r\n    }\r\n    \r\n    function getDefense(bytes32 cat, bytes32 seed, uint256 nonce) private returns (int256 defense) {\r\n        defense += readValue(cat, gen_pattern).defense;\r\n        defense += readValue(cat, gen_body_color).defense;\r\n        defense += readValue(cat, gen_color).defense;\r\n        defense += readValue(cat, gen_wild).defense;\r\n        defense += uint8(urandom(seed, nonce)) / 2;\r\n    }\r\n    \r\n    function getAttack(bytes32 cat, bytes32 seed, uint256 nonce) private returns (int256 attack) {\r\n        attack += readValue(cat, gen_body).attack;\r\n        attack += readValue(cat, gen_eye_color).attack;\r\n        attack += readValue(cat, gen_pattern).attack;\r\n        attack += readValue(cat, gen_wild).attack;\r\n        attack += readValue(cat, gen_mouth).attack;\r\n        attack += uint8(urandom(seed, nonce)) / 2;\r\n    }\r\n    \r\n    function getMult(bytes32 cat, bytes32 seed, uint256 nonce) internal view returns (int256) {\r\n        return (uint8(urandom(seed, nonce)) == uint8(keccak256(cat))) ? 2 : 1;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"CatDestinity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"cat1\",\"type\":\"bytes32\"},{\"name\":\"cat2\",\"type\":\"bytes32\"},{\"name\":\"seed\",\"type\":\"bytes32\"}],\"name\":\"fight\",\"outputs\":[{\"name\":\"winner\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"CatDestiny","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cab1ea98b0a49d8c6c76e5a1f31f43526d33e41464ebfef75b97e15fcde7b02e"}]}