{"status":"1","message":"OK","result":[{"SourceCode":"//launch order\r\n//  launch uncursed\r\n//  hardcode its address as owner in cursed\r\n//  launch cursed\r\n//  call uncursed.setCursedContract with its address\r\n\r\npragma solidity ^0.4.21;\r\n\r\ncontract ERC20 {\r\n    function balanceOf(address tokenowner) public constant returns (uint);\r\n    function allowance(address tokenowner, address spender) public constant returns (uint);\r\n    function transfer(address to, uint tokencount) public returns (bool success);\r\n    function approve(address spender, uint tokencount) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokencount) public returns (bool success);\r\n    event Transfer(address indexed from, address indexed to, uint tokencount);\r\n    event Approval(address indexed tokenowner, address indexed spender, uint tokencount);\r\n}\r\n\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokencount, address token, bytes data) public;\r\n}\r\n\r\ncontract CursedToken is ERC20 {\r\n    function issue(address to, uint tokencount) public;\r\n}\r\n\r\ncontract UncursedToken is ERC20 {\r\n    string public symbol = \"CB\";\r\n    string public name = \"Cornbread\";\r\n    uint8 public decimals = 0;\r\n    uint public totalSupply = 0;\r\n    uint public birthBlock;\r\n    address public cursedContract = 0x0;\r\n\r\n    // all funds will go to GiveDirectly charity \r\n    // https://web.archive.org/web/20180313215224/https://www.givedirectly.org/give-now?crypto=eth#\r\n    address public withdrawAddress = 0xa515BDA9869F619fe84357E3e44040Db357832C4;\r\n\r\n    mapping(address => uint) balances;\r\n    mapping(address => mapping(address => uint)) allowed;\r\n\r\n    function UncursedToken() public {\r\n        birthBlock = block.number;\r\n    }\r\n\r\n    function add(uint a, uint b) internal pure returns (uint) {\r\n        uint c = a + b;\r\n        require(c >= a);\r\n        return c;\r\n    }\r\n\r\n    function sub(uint a, uint b) internal pure returns (uint) {\r\n        require(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function balanceOf(address tokenowner) public constant returns (uint) {\r\n        return balances[tokenowner];\r\n    }\r\n\r\n    function allowance(address tokenowner, address spender) public constant returns (uint) {\r\n        return allowed[tokenowner][spender];\r\n    }\r\n\r\n    function transfer(address to, uint tokencount) public returns (bool success) {\r\n        balances[msg.sender] = sub(balances[msg.sender], tokencount);\r\n        balances[to] = add(balances[to], tokencount);\r\n        emit Transfer(msg.sender, to, tokencount);\r\n        // trasfered tokens gets cursed if destination address has any cursed tokens\r\n        if (CursedToken(cursedContract).balanceOf(to)>0) curse(to);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint tokencount) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokencount;\r\n        emit Approval(msg.sender, spender, tokencount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint tokencount) public returns (bool success) {\r\n        balances[from] = sub(balances[from], tokencount);\r\n        allowed[from][msg.sender] = sub(allowed[from][msg.sender], tokencount);\r\n        balances[to] = add(balances[to], tokencount);\r\n        emit Transfer(from, to, tokencount);\r\n        // trasfered tokens gets cursed if destination address has any cursed tokens\r\n        if (CursedToken(cursedContract).balanceOf(to)>0) curse(to);\r\n        return true;\r\n    }\r\n\r\n    function approveAndCall(address spender, uint tokencount, bytes data) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokencount;\r\n        emit Approval(msg.sender, spender, tokencount);\r\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokencount, this, data);\r\n        return true;\r\n    }\r\n\r\n    function setCursedContract(address contractAddress) public returns (bool success) {\r\n        require(cursedContract==0x0); // can only be set once\r\n        cursedContract = contractAddress;\r\n        return true;\r\n    }\r\n\r\n    // replace uncursed tokens with cursed tokens\r\n    function curse(address addressToCurse) internal returns (bool success) {\r\n        uint tokencount = balances[addressToCurse];\r\n        balances[addressToCurse] = 0;\r\n        totalSupply -= tokencount;\r\n        emit Transfer(addressToCurse, address(0), tokencount);\r\n        CursedToken(cursedContract).issue(addressToCurse, tokencount);\r\n        return true;\r\n    }\r\n\r\n    // Anyone can send the ether in the contract at any time to charity\r\n    function withdraw() public returns (bool success) {\r\n        withdrawAddress.transfer(address(this).balance);\r\n        return true;\r\n    }\r\n\r\n    function () public payable {\r\n        address c = 0xaC21cCcDE31280257784f02f7201465754E96B0b;\r\n        address b = 0xEf0b1363d623bDdEc26790bdc41eA6F298F484ec;\r\n        if (ERC20(c).balanceOf(msg.sender)>0 && ERC20(b).balanceOf(msg.sender)>0) {\r\n            // burn gas to make future issuance more costly\r\n            for (uint i=birthBlock; i<block.number; ) {\r\n                //i += 1; // doubles cornbread price in ~2hrs // 69 gas total per loop\r\n                i += 10000; // price will rise 10% after a few months\r\n            }\r\n            // first one free, pay incrementally more for extras\r\n            uint tokencount = 1;\r\n            uint base = 100000000000000; // 14 zeros, 0.0001ETH, ~$0.10\r\n            uint val = msg.value;\r\n            while (val>=tokencount*base) { // 1 for free, 2 for $0.10, 3 for $0.30, 4 for $0.60, ...\r\n                val -= tokencount*base;\r\n                tokencount += 1;\r\n            }\r\n            balances[msg.sender] += tokencount;\r\n            totalSupply += tokencount;\r\n            emit Transfer(address(0), msg.sender, tokencount);\r\n            // curse if unlucky\r\n            uint seed = 299792458;\r\n            //   generate random uint 0 to 99\r\n            //   use block.timestamp and block.coinbase (miner's address) in hash for less predictability\r\n            //   use totalSupply in hash for different result on consecutive calls from the same contract\r\n            //uint r = uint(keccak256(block.timestamp, block.coinbase, block.blockhash(block.number-1), totalSupply, seed))%100;\r\n            uint r = uint(keccak256(block.blockhash(block.number-1), totalSupply, seed))%100;\r\n            uint percentChanceOfFailure = 10;\r\n            //   curse if unlucky or already cursed\r\n            if (CursedToken(cursedContract).balanceOf(msg.sender)>0 || r<percentChanceOfFailure) curse(msg.sender);\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokencount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokencount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenowner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cursedContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokencount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"birthBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokencount\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenowner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setCursedContract\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokencount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenowner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokencount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"UncursedToken","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a37bd1f962c846478d9ba25291a7d97ab1f1655aba7412516f3b3bac0ec5793d"}]}