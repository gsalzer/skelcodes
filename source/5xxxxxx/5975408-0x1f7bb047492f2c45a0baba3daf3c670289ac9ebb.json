{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Token\r\n{\r\n\t/// @return total amount of tokens\r\n\tfunction totalSupply() constant public returns (uint256 supply);\r\n\r\n\t/// @param _owner The address from which the balance will be retrieved\r\n\t/// @return The balance\r\n\tfunction balanceOf(address _owner) constant public returns (uint256 balance);\r\n\r\n\t/// @notice send `_value` token to `_to` from `msg.sender`\r\n\t/// @param _to The address of the recipient\r\n\t/// @param _value The amount of token to be transferred\r\n\t/// @return Whether the transfer was successful or not\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool success);\r\n\r\n\t/// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\r\n\t/// @param _from The address of the sender\r\n\t/// @param _to The address of the recipient\r\n\t/// @param _value The amount of token to be transferred\r\n\t/// @return Whether the transfer was successful or not\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n\r\n\t/// @notice `msg.sender` approves `_addr` to spend `_value` tokens\r\n\t/// @param _spender The address of the account able to transfer the tokens\r\n\t/// @param _value The amount of wei to be approved for transfer\r\n\t/// @return Whether the approval was successful or not\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool success);\r\n\r\n\t/// @param _owner The address of the account owning tokens\r\n\t/// @param _spender The address of the account able to transfer the tokens\r\n\t/// @return Amount of remaining tokens allowed to spent\r\n\tfunction allowance(address _owner, address _spender) public constant returns (uint256 remaining);\r\n\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract StandardToken is Token\r\n{\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool success)\r\n\t{\r\n\t\t//Default assumes totalSupply can't be over max (2^256 - 1).\r\n\t\t//If your token leaves out totalSupply and can issue more tokens as time goes on, you need to check if it doesn't wrap.\r\n\t\t//Replace the if with this one instead.\r\n\t\t//if (balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\r\n\t\tif (balances[msg.sender] >= _value && _value > 0)\r\n\t\t{\r\n\t\t\tbalances[msg.sender] -= _value;\r\n\t\t\tbalances[_to] += _value;\r\n\t\t\temit Transfer(msg.sender, _to, _value);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success)\r\n\t{\r\n\t\t//same as above. Replace this line with the following if you want to protect against wrapping uints.\r\n\t\t//if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\r\n\t\tif (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n\t\t\tbalances[_to] += _value;\r\n\t\t\tbalances[_from] -= _value;\r\n\t\t\tallowed[_from][msg.sender] -= _value;\r\n\t\t\temit Transfer(_from, _to, _value);\r\n\t\t\treturn true;\r\n\t\t} else { return false; }\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) public constant returns (uint256 balance)\r\n\t{\r\n\t\treturn balances[_owner];\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool success)\r\n\t{\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) public constant returns (uint256 remaining)\r\n\t{\r\n\t  return allowed[_owner][_spender];\r\n\t}\r\n\r\n        function totalSupply() constant public returns (uint256 supply)\r\n        {\r\n          return _totalSupply;\r\n        }\r\n\r\n\tmapping (address => uint256) balances;\r\n\tmapping (address => mapping (address => uint256)) allowed;\r\n\tuint256 _totalSupply;\r\n}\r\n\r\n//Interface contract for approval callback\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\r\n}\r\n\r\ncontract MulaCoin is StandardToken\r\n{\r\n\r\n\t/* Public variables of the token */\r\n\r\n\t/*\r\n\tNOTE:\r\n\tThe following variables are OPTIONAL vanities. One does not have to include them.\r\n\tThey allow one to customise the token contract & in no way influences the core functionality.\r\n\tSome wallets/interfaces might not even bother to look at this information.\r\n\t*/\r\n\tstring public name;                   // Token Name\r\n\tuint8 public decimals;                // How many decimals to show. To be standard complicant keep it 18\r\n\tstring public symbol;                 // An identifier: eg SBX, XPR etc..\r\n\tstring public version = '1.0';\r\n\tuint256 public unitsOneEthCanBuy;     // How many units of your coin can be bought by 1 ETH?\r\n\tuint256 public totalEthInWei;         // WEI is the smallest unit of ETH (the equivalent of cent in USD or satoshi in BTC). We'll store the total ETH raised via our ICO here.\r\n\taddress public fundsWallet;           // Where should the raised ETH go?\r\n\r\n\r\n\r\n        modifier onlyFundOwner () {\r\n           require(msg.sender == fundsWallet);\r\n           _;\r\n        }\r\n\r\n\t// This is a constructor function\r\n\t// which means the following function name has to match the contract name declared above\r\n\tconstructor() public\r\n\t{\r\n\t\t_totalSupply \t\t = 3000000000000000000000000000;  // Update total supply\r\n\t\tbalances[msg.sender]     = _totalSupply;             // Give the creator all initial tokens.\r\n\t\tname \t\t\t\t = \"MULA COIN\";                   // Set the name\r\n\t\tdecimals \t\t\t = 18;                            // Amount of decimals\r\n\t\tsymbol \t\t\t\t = \"MUT\";                         // Set the symbol\r\n\t\tunitsOneEthCanBuy \t = 4356;                          // Set the price\r\n\t\tfundsWallet \t\t = msg.sender;                    // The owner of the contract gets ETH\r\n\t}\r\n\r\n\tfunction() payable public\r\n\t{\r\n\t\ttotalEthInWei = totalEthInWei + msg.value;\r\n\t\tuint256 amount = msg.value * unitsOneEthCanBuy;\r\n\r\n\t\tif (balances[fundsWallet] < amount)\r\n\t\t{\r\n\t\t\trevert();\r\n\t\t}\r\n\r\n\t\tbalances[fundsWallet] = balances[fundsWallet] - amount;\r\n\t\tbalances[msg.sender] = balances[msg.sender] + amount;\r\n\r\n\t\temit Transfer(fundsWallet, msg.sender, amount); // Broadcast a message to the blockchain\r\n\r\n\t\t//Transfer ether to fundsWallet\r\n\t\tfundsWallet.transfer(msg.value);\r\n\t}\r\n\r\n        //change the price\r\n        function changePrice(uint256 _newPrice) public onlyFundOwner\r\n        {\r\n                unitsOneEthCanBuy = _newPrice;\r\n        }\r\n\r\n\t/* Approves and then calls the receiving contract */\r\n\tfunction approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success)\r\n\t{\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\r\n                ApproveAndCallFallBack(_spender).receiveApproval(msg.sender, _value, this, _extraData);\r\n\t\treturn true;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundsWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unitsOneEthCanBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalEthInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"MulaCoin","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fd49da0062fba10425e9b4c8cf35ab8e5fa0f3580daa2fe1de1615cae556d46d"}]}