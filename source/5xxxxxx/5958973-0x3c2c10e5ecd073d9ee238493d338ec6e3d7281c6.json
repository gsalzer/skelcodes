{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\ncontract Bithereum {\r\n\r\n\t// Keeps track of addresses that have\r\n\t// provided the Bithereum address for which\r\n\t// they will be using for redemption\r\n\tmapping(address => uint256) addressBalances;\r\n\r\n\t// Keeps track of block number at the time\r\n\t// the sending user provided their Bithereum\r\n\t// address to the smart contract\r\n\tmapping(address => uint256) addressBlocks;\r\n\r\n\t// Event that gets triggered each time a user\r\n\t// sends a redemption transaction to this smart contract\r\n\tevent Redemption(address indexed from, uint256 blockNumber, uint256 ethBalance);\r\n\r\n\t// Retrieves block number at which\r\n\t// sender performed redemption\r\n\tfunction getRedemptionBlockNumber() returns (uint256) {\r\n\t\t return addressBlocks[msg.sender];\r\n\t}\r\n\r\n\t// Retrieves eth balance of sender\r\n\t// at the time of redemption\r\n\tfunction getRedemptionBalance() returns (uint256) {\r\n\t\t return addressBalances[msg.sender];\r\n\t}\r\n\r\n\r\n\t// Checks to see if sender is redemption ready\r\n\t// by verifying that we have a balance and block\r\n\t// for the sender\r\n\tfunction isRedemptionReady() returns (bool) {\r\n\t\t return addressBalances[msg.sender] > 0 && addressBlocks[msg.sender] > 0;\r\n\t}\r\n\r\n\t// Handles incoming transactions\r\n\tfunction () payable {\r\n\r\n\t\t\t// Store the sender's ETH balance\r\n\t\t\taddressBalances[msg.sender] = msg.sender.balance;\r\n\r\n\t\t\t// Store the current block for this sender\r\n\t\t\taddressBlocks[msg.sender] = block.number;\r\n\r\n\t\t\t// Emit redemption event\r\n\t\t\tRedemption(msg.sender, addressBlocks[msg.sender], addressBalances[msg.sender]);\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"getRedemptionBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getRedemptionBlockNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"isRedemptionReady\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ethBalance\",\"type\":\"uint256\"}],\"name\":\"Redemption\",\"type\":\"event\"}]","ContractName":"Bithereum","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1f6493c7114bce04ce317d4aeeda2f680b30e00ac981e47e3becea6190207d7f"}]}