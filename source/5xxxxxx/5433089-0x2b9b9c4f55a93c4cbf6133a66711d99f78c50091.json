{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract UserRegistryInterface {\r\n  event AddAddress(address indexed who);\r\n  event AddIdentity(address indexed who);\r\n\r\n  function knownAddress(address _who) public constant returns(bool);\r\n  function hasIdentity(address _who) public constant returns(bool);\r\n  function systemAddresses(address _to, address _from) public constant returns(bool);\r\n}\r\n\r\ncontract MultiOwners {\r\n\r\n    event AccessGrant(address indexed owner);\r\n    event AccessRevoke(address indexed owner);\r\n    \r\n    mapping(address => bool) owners;\r\n    address public publisher;\r\n\r\n    function MultiOwners() public {\r\n        owners[msg.sender] = true;\r\n        publisher = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() { \r\n        require(owners[msg.sender] == true);\r\n        _; \r\n    }\r\n\r\n    function isOwner() public constant returns (bool) {\r\n        return owners[msg.sender] ? true : false;\r\n    }\r\n\r\n    function checkOwner(address maybe_owner) public constant returns (bool) {\r\n        return owners[maybe_owner] ? true : false;\r\n    }\r\n\r\n    function grant(address _owner) onlyOwner public {\r\n        owners[_owner] = true;\r\n        AccessGrant(_owner);\r\n    }\r\n\r\n    function revoke(address _owner) onlyOwner public {\r\n        require(_owner != publisher);\r\n        require(msg.sender != _owner);\r\n\r\n        owners[_owner] = false;\r\n        AccessRevoke(_owner);\r\n    }\r\n}\r\n\r\ncontract UserRegistry is MultiOwners, UserRegistryInterface {\r\n  mapping (address => bool) internal addresses;\r\n  mapping (address => bool) internal identities;\r\n  mapping (address => bool) internal system;\r\n\r\n  function addAddress(address _who) onlyOwner public returns(bool) {\r\n    require(!knownAddress(_who));\r\n    addresses[_who] = true;\r\n    AddAddress(_who);\r\n    return true;\r\n  }\r\n\r\n  function addSystem(address _address) onlyOwner public returns(bool) {\r\n    system[_address] = true;\r\n    return true;\r\n  }\r\n\r\n  function addIdentity(address _who) onlyOwner public returns(bool) {\r\n    require(!hasIdentity(_who));\r\n    if(!addresses[_who]) {\r\n      addresses[_who] = true;\r\n      AddAddress(_who);\r\n    }\r\n    identities[_who] = true;\r\n    AddIdentity(_who);\r\n    return true;\r\n  }\r\n  \r\n  function knownAddress(address _who) public constant returns(bool) {\r\n    return addresses[_who];\r\n  }\r\n\r\n  function hasIdentity(address _who) public constant returns(bool) {\r\n    return knownAddress(_who) && identities[_who];\r\n  }\r\n\r\n  function systemAddress(address _where) public constant returns(bool) {\r\n    return system[_where];\r\n  }\r\n\r\n  function systemAddresses(address _to, address _from) public constant returns(bool) {\r\n    return systemAddress(_to) || systemAddress(_from);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"hasIdentity\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"addAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"systemAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"grant\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addSystem\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publisher\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"knownAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"addIdentity\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_where\",\"type\":\"address\"}],\"name\":\"systemAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"maybe_owner\",\"type\":\"address\"}],\"name\":\"checkOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"who\",\"type\":\"address\"}],\"name\":\"AddAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"who\",\"type\":\"address\"}],\"name\":\"AddIdentity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AccessGrant\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AccessRevoke\",\"type\":\"event\"}]","ContractName":"UserRegistry","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f1e93f52b38876983721f7952bc42e50c11b80fc06cc48b9ca06c0b271ab0f73"}]}