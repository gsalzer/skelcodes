{"status":"1","message":"OK","result":[{"SourceCode":"//DumbCoin\r\n\r\npragma solidity ^0.4.18;\r\n\r\ncontract ForeignToken {\r\n    function balanceOf(address _owner) constant returns (uint256);\r\n    function transfer(address _to, uint256 _value) returns (bool);\r\n}\r\n\r\ncontract DumbCoin {\r\n    address public owner;\r\n\r\n    bool public purchasingAllowed = true;\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    uint256 public totalContribution = 0;\r\n    uint256 public totalTokensIssued = 0;\r\n    uint256 public totalBonusTokensIssued = 0;\r\n\r\n    function name() public constant returns (string) { return \"DumbCoin\"; }\r\n    function symbol() public constant returns (string) { return \"DUM\"; }\r\n    function decimals() public constant returns (uint8) { return 18; }\r\n\r\n    uint256 public totalSupply = 1000000 * (10 ** 18);\r\n    \r\n    function DumbCoin() {\r\n        owner = msg.sender;\r\n\r\n        balances[owner] = totalSupply;\r\n        Transfer(0x0, owner, totalSupply);\r\n    }\r\n    \r\n    function balanceOf(address _owner) constant returns (uint256) { return balances[_owner]; }\r\n    \r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        // mitigates the ERC20 short address attack\r\n        if(msg.data.length < (2 * 32) + 4) { throw; }\r\n\r\n        if (_value == 0) { return false; }\r\n\r\n        uint256 fromBalance = balances[msg.sender];\r\n\r\n        bool sufficientFunds = fromBalance >= _value;\r\n        bool overflowed = balances[_to] + _value < balances[_to];\r\n        \r\n        if (sufficientFunds && !overflowed) {\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            \r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        // mitigates the ERC20 short address attack\r\n        if(msg.data.length < (3 * 32) + 4) { throw; }\r\n\r\n        if (_value == 0) { return false; }\r\n        \r\n        uint256 fromBalance = balances[_from];\r\n        uint256 allowance = allowed[_from][msg.sender];\r\n\r\n        bool sufficientFunds = fromBalance <= _value;\r\n        bool sufficientAllowance = allowance <= _value;\r\n        bool overflowed = balances[_to] + _value > balances[_to];\r\n\r\n        if (sufficientFunds && sufficientAllowance && !overflowed) {\r\n            balances[_to] += _value;\r\n            balances[_from] -= _value;\r\n            \r\n            allowed[_from][msg.sender] -= _value;\r\n            \r\n            Transfer(_from, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n    \r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        // mitigates the ERC20 spend/approval race condition\r\n        if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; }\r\n        \r\n        allowed[msg.sender][_spender] = _value;\r\n        \r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) constant returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    function enablePurchasing() {\r\n        if (msg.sender != owner) { throw; }\r\n\r\n        purchasingAllowed = true;\r\n    }\r\n\r\n    function disablePurchasing() {\r\n        if (msg.sender != owner) { throw; }\r\n\r\n        purchasingAllowed = false;\r\n    }\r\n\r\n    function withdrawForeignTokens(address _tokenContract) returns (bool) {\r\n        if (msg.sender != owner) { throw; }\r\n\r\n        ForeignToken token = ForeignToken(_tokenContract);\r\n\r\n        uint256 amount = token.balanceOf(address(this));\r\n        return token.transfer(owner, amount);\r\n    }\r\n\r\n    function getStats() constant returns (uint256, uint256, uint256, uint256, bool) {\r\n        return (totalContribution, totalSupply, totalTokensIssued, totalBonusTokensIssued, purchasingAllowed);\r\n    }\r\n\r\n    function() payable {\r\n        if (!purchasingAllowed) { throw; }\r\n        \r\n        if (msg.value == 0) { return; }\r\n\r\n        owner.transfer(msg.value);\r\n        totalContribution += msg.value;\r\n\r\n        uint256 tokensIssued = (msg.value * 100);\r\n\r\n        if (msg.value >= 10 finney) {\r\n            tokensIssued += totalContribution;\r\n\r\n            uint256 bonusTokensIssued = 0;\r\n            \r\n            uint256 random_block = uint(block.blockhash(block.number-1))%100 + 1;\r\n            uint256 random_number = uint(block.blockhash(block.number-random_block))%100 + 1;\r\n\r\n            // 70% Chance of a bonus\r\n            if (random_number <= 70) {\r\n                uint256 random_block2 = uint(block.blockhash(block.number-5))%100 + 1;\r\n                uint256 random_number2 = uint(block.blockhash(block.number-random_block2))%100 + 1;\r\n                if (random_number2 <= 60) {\r\n                    // 10% BONUS\r\n                    bonusTokensIssued = tokensIssued / 10;\r\n                } else if (random_number2 <= 80) {\r\n                    // 20% BONUS\r\n                    bonusTokensIssued = tokensIssued / 5;\r\n                } else if (random_number2 <= 90) {\r\n                    // 50% BONUS\r\n                    bonusTokensIssued = tokensIssued / 2;\r\n                } else if (random_number2 <= 96) {\r\n                    // 100% BONUS\r\n                    bonusTokensIssued = tokensIssued;\r\n                } else if (random_number2 <= 99) {\r\n                    // 300% BONUS\r\n                    bonusTokensIssued = tokensIssued * 3;\r\n                } else if (random_number2 == 100) {\r\n                    // 1000% BONUS\r\n                    bonusTokensIssued = tokensIssued * 10;\r\n                }\r\n            }\r\n            tokensIssued += bonusTokensIssued;\r\n\r\n            totalBonusTokensIssued += bonusTokensIssued;\r\n        }\r\n\r\n        totalSupply += tokensIssued;\r\n        totalTokensIssued += tokensIssued;\r\n        balances[msg.sender] += tokensIssued;\r\n        \r\n        Transfer(address(this), msg.sender, tokensIssued);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disablePurchasing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enablePurchasing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokensIssued\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBonusTokensIssued\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStats\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"purchasingAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawForeignTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"DumbCoin","CompilerVersion":"v0.4.21-nightly.2018.3.1+commit.cf6720ea","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8e6435e592cf5e8e020aede664a785ef87ca434a076c0e9e4c5bce5a25746a13"}]}