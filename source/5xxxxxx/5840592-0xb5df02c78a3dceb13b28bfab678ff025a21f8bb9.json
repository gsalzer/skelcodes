{"status":"1","message":"OK","result":[{"SourceCode":"// Congratulations! Its your free airdrop token! Get 6 USD in EToken FREE!\r\n// Promocode: 6forfree\r\n// More: tokensale.endo.im/promo/\r\n// Join us: https://t.me/endo_en\r\n// ENDO is a Protocol that solves the problem of certified information tracking and encrypted data storage. \r\n// The ENDO ecosystem allows organisations and users to participate in information and service exchange through the EToken.\r\n\r\n// おめでとうございます！これはあなたの無料エアドロップのトークンとなります！EToken建ての6ドルを無償で獲得してください。\r\n// プロモーションコード：6forfree　\r\n// 詳細はこちら：tokensale.endo.im/promo/\r\n// こちらの公式Telegramクループにご参加ください：https://t.me/endo_jp　\r\n// ENDOとは認定された情報の追跡と暗号化されたデータの保管に関する問題を解決するプロトコルです。 \r\n// ENDOエコシステムでは、ユーザーと企業がETokenを使用して情報の交換やサービスの受領を出来ます。\r\n\r\n// 恭喜！ 它是你的免费空投代币！ 免费获得6美元的EToken！\r\n// 促销代码：6forfree\r\n// 更多：tokensale.endo.im/promo/\r\n// 加入我们：https://t.me/endo_cn\r\n// ENDO是一个解决认证信息跟踪和加密数据存储问题的协议。\r\n// ENDO生态系统允许组织和用户通过EToken参与信息和服务交换。\r\n\r\n// 축하합니다! 무료 에어드랍 토큰! EToken에서 6 받으세요!\r\n// 프로모션 코드 : 6forfree\r\n// 더보기 : tokensale.endo.im/promo/\r\n// 우리와 함께하십시오 : https://t.me/endo_ko\r\n// ENDO는 정보를 안전하게 공유하고 검증할 수 있도록 하는 프로젝트 입니다.\r\n// ENDO 토큰으로 서류를 검증하고 암호화 할 수 있습니다.\r\n\r\n// Поздравляем! Ваш персональный Airdrop уже готов! Получите 6 USD в эквиваленте EToken бесплатно!\r\n// Промокод: 6forfree\r\n// Узнать больше: tokensale.endo.im/promo/\r\n// Присоединяйтесь к нам: https://t.me/endo_ru\r\n// ENDO – это протокол, решающий проблему отслеживания подтвержденной информации и хранения зашифрованных данных. \r\n// Экосистема ENDO позволяет организациям и пользователям принимать участие в процессе обмены информацией и пользоваться услугами с помощью токена ENDO.\r\n\r\n\r\npragma solidity ^0.4.11;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public returns (uint256);\r\n  //function transfer(address to, uint256 value) public returns(bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public returns (uint256);\r\n  //function transferFrom(address from, address to, uint256 value) public returns(bool);\r\n  //function approve(address spender, uint256 value) public returns(bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint256;\r\n  mapping(address => uint256) balances;\r\n  function transfer(address _to, uint256 _value) public {\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    Transfer(msg.sender, _to, _value);\r\n  }\r\n  function balanceOf(address _owner) public returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n}\r\ncontract StandardToken is ERC20, BasicToken {\r\n  mapping (address => mapping (address => uint256)) allowed;\r\n  function transferFrom(address _from, address _to, uint256 _value) public {\r\n    var _allowance = allowed[_from][msg.sender];\r\n    balances[_to] = balances[_to].add(_value);\r\n    balances[_from] = balances[_from].sub(_value);\r\n    allowed[_from][msg.sender] = _allowance.sub(_value);\r\n    Transfer(_from, _to, _value);\r\n  }\r\n  function approve(address _spender, uint256 _value) public {\r\n    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) revert();\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n  }\r\n  function allowance(address _owner, address _spender) public returns (uint256 remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n}\r\ncontract Ownable {\r\n  address public owner;\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n  modifier onlyOwner() {\r\n    if (msg.sender != owner) {\r\n      revert();\r\n    }\r\n    _;\r\n  }\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n}\r\ncontract ETokenPromo is StandardToken, Ownable {\r\n  event Mint(address indexed to, uint256 amount);\r\n  event MintFinished();\r\n\r\n  string public name = \"ENDO.network Promo Token\";\r\n  string public symbol = \"ETP\";\r\n  uint256 public decimals = 18;\r\n\r\n  bool public mintingFinished = false;\r\n\r\n  modifier canMint() {\r\n    if(mintingFinished) revert();\r\n    _;\r\n  }\r\n\r\n  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {\r\n    totalSupply = totalSupply.add(_amount);\r\n    balances[_to] = balances[_to].add(_amount);\r\n    Mint(_to, _amount);\r\n    Transfer(0x0, _to, _amount);\r\n    return true;\r\n  }\r\n\r\n  function finishMinting() onlyOwner public returns (bool) {\r\n    mintingFinished = true;\r\n    MintFinished();\r\n    return true;\r\n  }\r\n}\r\n\r\ncontract ENDOairdrop {\r\n  using SafeMath for uint256;\r\n\r\n  ETokenPromo public token;\r\n  \r\n  uint256 public currentTokenCount;\r\n  address public owner;\r\n  uint256 public maxTokenCount;\r\n\r\n  event TokenPurchase(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n  function ENDOairdrop() public {\r\n    token = createTokenContract();\r\n    owner = msg.sender;\r\n  }\r\n  \r\n  function sendToken(address[] recipients, uint256 value) public {\r\n    for (uint256 i = 0; i < recipients.length; i++) {\r\n      token.mint(recipients[i], value);\r\n    }\r\n  }\r\n\r\n  function createTokenContract() internal returns (ETokenPromo) {\r\n    return new ETokenPromo();\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"ETokenPromo","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bcda013607a326174011861a0bff3f08f4364fe22b624b602b5918cfc988fcc4"}]}