{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.19;\r\n\r\n\r\ncontract InterfaceRandao {\r\n    function getRandom(uint256 _campaignID) external returns (uint256);\r\n}\r\n\r\n\r\ncontract InterfaceWallet {\r\n    function changeState(uint256 _id, uint8 _state) public returns (bool);\r\n    function changeBranch(uint256 _id, uint8 _branch) public returns (bool);\r\n    function getHolder(uint256 _id) public view returns (address);\r\n    function getBranch(uint256 _id) public view returns (uint256);\r\n}\r\n\r\n\r\ncontract EpisodeManager {\r\n    address public owner;\r\n    address public wallet;\r\n\r\n    //max token supply\r\n    uint256 public cap = 50;\r\n\r\n    InterfaceWallet public deusETH = InterfaceWallet(0x0);\r\n    InterfaceRandao public randao = InterfaceRandao(0x0);\r\n\r\n    uint256 public episodesNum = 0;\r\n\r\n    //Episode - (branch => (step => random and command))\r\n    struct CommandAndRandom {\r\n        uint256 random;\r\n        string command;\r\n        bool isSet;\r\n    }\r\n\r\n    //Episode - (branches => (branch and cost))\r\n    struct BranchAndCost {\r\n        uint256 price;\r\n        bool isBranch;\r\n    }\r\n\r\n    struct Episode {\r\n        //(branch => (step => random and command))\r\n        mapping (uint256 => mapping(uint256 => CommandAndRandom)) data;\r\n        //(branches => (branch and cost))\r\n        mapping (uint256 => BranchAndCost) branches;\r\n        bool isEpisode;\r\n    }\r\n\r\n    mapping (uint256 => Episode) public episodes;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function EpisodeManager(address _randao, address _wallet) public {\r\n        require(_randao != address(0));\r\n        require(_wallet != address(0));\r\n        owner = msg.sender;\r\n        wallet = _wallet;\r\n        randao = InterfaceRandao(_randao);\r\n    }\r\n\r\n    function setLottery(address _lottery) public onlyOwner returns (bool) {\r\n        deusETH = InterfaceWallet(_lottery);\r\n        return true;\r\n    }\r\n\r\n    function changeLottery(address _lottery) public onlyOwner returns (bool) {\r\n        deusETH = InterfaceWallet(_lottery);\r\n        return true;\r\n    }\r\n\r\n    function changeRandao(address _randao) public onlyOwner returns (bool) {\r\n        randao = InterfaceRandao(_randao);\r\n        return true;\r\n    }\r\n\r\n    function changeOwner(address _newOwner) public onlyOwner returns (bool) {\r\n        require(_newOwner != address(0));\r\n        owner = _newOwner;\r\n        return true;\r\n    }\r\n\r\n    function changeWallet(address _wallet) public onlyOwner {\r\n        wallet = _wallet;\r\n    }\r\n\r\n    function checkRandomFromRandao(uint256 _campaignID) public returns (uint256) {\r\n        return randao.getRandom(_campaignID);\r\n    }\r\n\r\n    function addEpisode() public onlyOwner returns (bool) {\r\n        episodesNum++;\r\n        episodes[episodesNum].isEpisode = true;\r\n        return true;\r\n    }\r\n\r\n    function addEpisodeData(\r\n        uint256 _branch,\r\n        uint256 _step,\r\n        uint256 _campaignID,\r\n        string _command) public onlyOwner returns (bool)\r\n    {\r\n        require(_branch > 0);\r\n        require(_step > 0);\r\n        require(_campaignID > 0);\r\n        require(episodes[episodesNum].isEpisode);\r\n        require(!episodes[episodesNum].data[_branch][_step].isSet);\r\n\r\n        episodes[episodesNum].data[_branch][_step].random = 123;\r\n\r\n        episodes[episodesNum].data[_branch][_step].command = _command;\r\n        episodes[episodesNum].data[_branch][_step].isSet = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    function addBranchInEpisode(uint256 _branch, uint256 _price) public onlyOwner returns (bool) {\r\n        require(_branch > 0);\r\n        require(!episodes[episodesNum].branches[_branch].isBranch);\r\n        episodes[episodesNum].branches[_branch].price = _price;\r\n        episodes[episodesNum].branches[_branch].isBranch = true;\r\n        return true;\r\n    }\r\n\r\n    function changeBranch(uint256 _id, uint8 _branch) public payable returns(bool) {\r\n        require(_branch > 0);\r\n        require(episodes[episodesNum].branches[_branch].isBranch);\r\n        require((msg.sender == deusETH.getHolder(_id)) || (msg.sender == owner));\r\n\r\n        if (msg.sender != owner) {\r\n            require(deusETH.getBranch(_id) == 1);\r\n        }\r\n\r\n        if (episodes[episodesNum].branches[_branch].price == 0) {\r\n            deusETH.changeBranch(_id, _branch);\r\n        } else {\r\n            require(msg.value == episodes[episodesNum].branches[_branch].price);\r\n            deusETH.changeBranch(_id, _branch);\r\n            forwardFunds();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function changeState(uint256 _id, uint8 _state) public onlyOwner returns (bool) {\r\n        require(_id > 0 && _id <= cap);\r\n        require(_state <= 1);\r\n        return deusETH.changeState(_id, _state);\r\n    }\r\n\r\n    function getEpisodeDataRandom(uint256 _episodeID, uint256 _branch, uint256 _step) public view returns (uint256) {\r\n        return episodes[_episodeID].data[_branch][_step].random;\r\n    }\r\n\r\n    function getEpisodeDataCommand(uint256 _episodeID, uint256 _branch, uint256 _step) public view returns (string) {\r\n        return episodes[_episodeID].data[_branch][_step].command;\r\n    }\r\n\r\n    function getEpisodeBranchData(uint256 _episodeID, uint256 _branch) public view returns (uint256) {\r\n        return episodes[_episodeID].branches[_branch].price;\r\n    }\r\n\r\n    function checkBranchInEpisode(uint256 _episodesNum, uint256 _branch) public view returns (bool) {\r\n        return episodes[_episodesNum].branches[_branch].isBranch;\r\n    }\r\n\r\n    // send ether to the fund collection wallet\r\n    function forwardFunds() internal {\r\n        wallet.transfer(msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_randao\",\"type\":\"address\"}],\"name\":\"changeRandao\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_episodeID\",\"type\":\"uint256\"},{\"name\":\"_branch\",\"type\":\"uint256\"},{\"name\":\"_step\",\"type\":\"uint256\"}],\"name\":\"getEpisodeDataRandom\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lottery\",\"type\":\"address\"}],\"name\":\"changeLottery\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_episodeID\",\"type\":\"uint256\"},{\"name\":\"_branch\",\"type\":\"uint256\"}],\"name\":\"getEpisodeBranchData\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randao\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deusETH\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_state\",\"type\":\"uint8\"}],\"name\":\"changeState\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_branch\",\"type\":\"uint8\"}],\"name\":\"changeBranch\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"episodes\",\"outputs\":[{\"name\":\"isEpisode\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"addEpisode\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_episodeID\",\"type\":\"uint256\"},{\"name\":\"_branch\",\"type\":\"uint256\"},{\"name\":\"_step\",\"type\":\"uint256\"}],\"name\":\"getEpisodeDataCommand\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"changeWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_branch\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"addBranchInEpisode\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_campaignID\",\"type\":\"uint256\"}],\"name\":\"checkRandomFromRandao\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_episodesNum\",\"type\":\"uint256\"},{\"name\":\"_branch\",\"type\":\"uint256\"}],\"name\":\"checkBranchInEpisode\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"episodesNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_branch\",\"type\":\"uint256\"},{\"name\":\"_step\",\"type\":\"uint256\"},{\"name\":\"_campaignID\",\"type\":\"uint256\"},{\"name\":\"_command\",\"type\":\"string\"}],\"name\":\"addEpisodeData\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lottery\",\"type\":\"address\"}],\"name\":\"setLottery\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_randao\",\"type\":\"address\"},{\"name\":\"_wallet\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"EpisodeManager","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000acefc159db3ea5fd87b7a9b474ad1854c8b6ed7c000000000000000000000000b8579b19da2108249d4391d73430abba665515ca","Library":"","SwarmSource":"bzzr://db6849b0a47f65f0a76a0e4f03c66e62021b65210ba32a8d4e4cf3b4da5e35d8"}]}