{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n/* Functions from Lemon Token main contract to be used by sale contract */\r\ncontract LemonToken {\r\n    function balanceOf(address who) public constant returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n  \r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract LemonSelfDrop is Ownable {\r\n    LemonToken public LemonContract;\r\n    uint8 public dropNumber;\r\n    uint256 public LemonsDroppedToTheWorld;\r\n    uint256 public LemonsRemainingToDrop;\r\n    uint256 public holderAmount;\r\n    uint256 public basicReward;\r\n    uint256 public donatorReward;\r\n    uint256 public holderReward;\r\n    uint8 public totalDropTransactions;\r\n    mapping (address => uint8) participants;\r\n    \r\n    \r\n    // Initialize the cutest contract in the world\r\n    function LemonSelfDrop () {\r\n        address c = 0x2089899d03607b2192afb2567874a3f287f2f1e4; // set Lemon Coin contract address\r\n        LemonContract = LemonToken(c); \r\n        dropNumber = 1;\r\n        LemonsDroppedToTheWorld = 0;\r\n        LemonsRemainingToDrop = 0;\r\n        basicReward = 50000000000; // set initial basic reward to 500 Lemon Tokens\r\n        donatorReward = 50000000000; // set initial donator reward to 500 Lemon Tokens\r\n        holderReward = 50000000000; // set initial holder reward to 500 Lemon Tokens\r\n        holderAmount = 5000000000000; // set initial hold amount to 50000 Lemon Tokens for extra reward\r\n        totalDropTransactions = 0;\r\n    }\r\n    \r\n    \r\n    // Drop some wonderful cutest Lemon Tokens to sender every time contract is called without function\r\n    function() payable {\r\n        require (participants[msg.sender] < dropNumber && LemonsRemainingToDrop > basicReward);\r\n        uint256 tokensIssued = basicReward;\r\n        // Send extra Lemon Tokens bonus if participant is donating Ether\r\n        if (msg.value > 0)\r\n            tokensIssued += donatorReward;\r\n        // Send extra Lemon Token bonus if participant holds at least holderAmount\r\n        if (LemonContract.balanceOf(msg.sender) >= holderAmount)\r\n            tokensIssued += holderReward;\r\n        // Check if number of Lemon Tokens to issue is higher than coins remaining for airdrop (last transaction of airdrop)\r\n        if (tokensIssued > LemonsRemainingToDrop)\r\n            tokensIssued = LemonsRemainingToDrop;\r\n        \r\n        // Give away these so cute Lemon Token to contributor\r\n        LemonContract.transfer(msg.sender, tokensIssued);\r\n        participants[msg.sender] = dropNumber;\r\n        LemonsRemainingToDrop -= tokensIssued;\r\n        LemonsDroppedToTheWorld += tokensIssued;\r\n        totalDropTransactions += 1;\r\n    }\r\n    \r\n    \r\n    function participant(address part) public constant returns (uint8 participationCount) {\r\n        return participants[part];\r\n    }\r\n    \r\n    \r\n    // Increase the airdrop count to allow sweet humans asking for more beautiful Lemon Tokens\r\n    function setDropNumber(uint8 dropN) public onlyOwner {\r\n        dropNumber = dropN;\r\n        LemonsRemainingToDrop = LemonContract.balanceOf(this);\r\n    }\r\n    \r\n    \r\n    // Define amount of Lemon Tokens to hold in order to get holder reward\r\n    function setHolderAmount(uint256 amount) public onlyOwner {\r\n        holderAmount = amount;\r\n    }\r\n    \r\n    \r\n    // Define how many wonderful Lemon Tokens contributors will receive for participating the selfdrop\r\n    function setRewards(uint256 basic, uint256 donator, uint256 holder) public onlyOwner {\r\n        basicReward = basic;\r\n        donatorReward = donator;\r\n        holderReward = holder;\r\n    }\r\n    \r\n    \r\n    // Sends all ETH contributions to lovely Lemon owner\r\n    function withdrawAll() public onlyOwner {\r\n        owner.transfer(this.balance);\r\n    }\r\n    \r\n    \r\n    // Sends all remaining Lemon Tokens to owner, just in case of emergency\r\n    function withdrawLemonCoins() public onlyOwner {\r\n        LemonContract.transfer(owner, LemonContract.balanceOf(this));\r\n        LemonsRemainingToDrop = 0;\r\n    }\r\n    \r\n    \r\n    // Update number of Lemon Tokens remaining for drop, just in case it is needed\r\n    function updateLemonCoinsRemainingToDrop() public {\r\n        LemonsRemainingToDrop = LemonContract.balanceOf(this);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"basicReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"part\",\"type\":\"address\"}],\"name\":\"participant\",\"outputs\":[{\"name\":\"participationCount\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"donatorReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LemonsRemainingToDrop\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dropNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LemonContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LemonsDroppedToTheWorld\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDropTransactions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dropN\",\"type\":\"uint8\"}],\"name\":\"setDropNumber\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"holderAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"holderReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawLemonCoins\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setHolderAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateLemonCoinsRemainingToDrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"basic\",\"type\":\"uint256\"},{\"name\":\"donator\",\"type\":\"uint256\"},{\"name\":\"holder\",\"type\":\"uint256\"}],\"name\":\"setRewards\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"LemonSelfDrop","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://406fb86d5fe83d6a04d4811a6a957cb1e2ca26e36c92bf86f7473132d164f001"}]}