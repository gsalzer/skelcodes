{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\n\r\ncontract PreSaleFund\r\n{\r\n    address owner = msg.sender;\r\n\r\n    event CashMove(uint amount,bytes32 logMsg,address target,address currentOwner);\r\n    \r\n    mapping(address => uint) investors;\r\n    \r\n    uint public MinInvestment = 0.1 ether;\r\n   \r\n    function loggedTransfer(uint amount, bytes32 logMsg, address target, address currentOwner) \r\n    payable\r\n    {\r\n       if(msg.sender != address(this))throw;\r\n       if(target.call.value(amount)())\r\n       {\r\n          CashMove(amount, logMsg, target, currentOwner);\r\n       }\r\n    }\r\n    \r\n    function Invest() \r\n    public \r\n    payable \r\n    {\r\n        if (msg.value > MinInvestment)\r\n        {\r\n            investors[msg.sender] += msg.value;\r\n        }\r\n    }\r\n\r\n    function Divest(uint amount) \r\n    public \r\n    {\r\n        if ( investors[msg.sender] > 0 && amount > 0)\r\n        {\r\n            this.loggedTransfer(amount, \"\", msg.sender, owner);\r\n            investors[msg.sender] -= amount;\r\n        }\r\n    }\r\n    \r\n    function SetMin(uint min)\r\n    public\r\n    {\r\n        if(msg.sender==owner)\r\n        {\r\n            MinInvestment = min;\r\n        }\r\n    }\r\n\r\n    function GetInvestedAmount() \r\n    constant \r\n    public \r\n    returns(uint)\r\n    {\r\n        return investors[msg.sender];\r\n    }\r\n\r\n    function withdraw() \r\n    public \r\n    {\r\n        if(msg.sender==owner)\r\n        {\r\n            this.loggedTransfer(this.balance, \"\", msg.sender, owner);\r\n        }\r\n    }\r\n    \r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetInvestedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"logMsg\",\"type\":\"bytes32\"},{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"currentOwner\",\"type\":\"address\"}],\"name\":\"loggedTransfer\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"min\",\"type\":\"uint256\"}],\"name\":\"SetMin\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MinInvestment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Divest\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Invest\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"logMsg\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"currentOwner\",\"type\":\"address\"}],\"name\":\"CashMove\",\"type\":\"event\"}]","ContractName":"PreSaleFund","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d7fafc8dab2478ae1205aafc8ed30eb64ce7029810c186f5a0ba73d81e714422"}]}