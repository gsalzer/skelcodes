{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\n// File: contracts/TokenHolder.sol\r\n\r\n/*\r\n\r\n   Token Holder\r\n   Hold ERC20 tokens to be withdrawn\r\n   by a user at a specific block.\r\n\r\n   - Element Group\r\n\r\n*/\r\n\r\n\r\ncontract ERC20 {\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n\r\ncontract TokenHolder {\r\n    address public tokenAddress;\r\n    uint public holdAmount;\r\n    ERC20 public Token;\r\n    mapping (address => uint256) public heldTokens;\r\n    mapping (address => uint) public heldTimeline;\r\n    event Deposit(address from, uint256 amount);\r\n    event Withdraw(address from, uint256 amount);\r\n\r\n    function TokenHolder(address token) public {\r\n        tokenAddress = token;\r\n        Token = ERC20(token);\r\n        holdAmount = 1;\r\n    }\r\n\r\n    function() payable {\r\n        revert();\r\n    }\r\n\r\n    // get the approved amount of tokens to deposit\r\n    function approvedAmount(address _from) public constant returns (uint256) {\r\n        return Token.allowance(_from, this);\r\n    }\r\n\r\n    // get the token balance for an individual address\r\n    function userBalance(address _owner) public constant returns (uint256) {\r\n        return heldTokens[_owner];\r\n    }\r\n\r\n    // get the token balance for an individual address\r\n    function userHeldTill(address _owner) public constant returns (uint) {\r\n        return heldTimeline[_owner];\r\n    }\r\n\r\n    // get the token balance inside this contract\r\n    function totalBalance() public constant returns (uint) {\r\n        return Token.balanceOf(this);\r\n    }\r\n\r\n    // deposit tokens to hold in the system\r\n    function depositTokens(uint256 amount) external {\r\n        require(Token.allowance(msg.sender, this) >= amount);\r\n        Token.transferFrom(msg.sender, this, amount);\r\n        heldTokens[msg.sender] += amount;\r\n        heldTimeline[msg.sender] = block.number + holdAmount;\r\n        Deposit(msg.sender, amount);\r\n    }\r\n\r\n    // external user can release the tokens on their own when the time comes\r\n    function withdrawTokens(uint256 amount) external {\r\n        uint256 held = heldTokens[msg.sender];\r\n        uint heldBlock = heldTimeline[msg.sender];\r\n        require(held >= 0 && held >= amount);\r\n        require(block.number >= heldBlock);\r\n        heldTokens[msg.sender] -= amount;\r\n        heldTimeline[msg.sender] = 0;\r\n        Withdraw(msg.sender, amount);\r\n        Token.transfer(msg.sender, amount);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"userBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"heldTimeline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"holdAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"userHeldTill\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"heldTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"approvedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"}]","ContractName":"TokenHolder","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000a8258abc8f2811dd48eccd209db68f25e3e34667","Library":"","SwarmSource":"bzzr://cb0d033fc4049482d753bae640d0cc3fdbf68732a0079f7aed48c7ad18561147"}]}