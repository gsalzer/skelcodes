{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract WorldCupWinner {\r\n    using SafeMath for uint256;\r\n\r\n    /*****------ EVENTS -----*****/\r\n  event BuyWinner(address indexed buyer, uint256 indexed traddingTime, uint256 first, uint256 second, uint256 three, uint256 gameid, uint256 buyType, uint buyTotal,uint256 buyPrice);\r\n  event BuyWinnerList(uint256 indexed first, uint256 indexed second, uint256  indexed third,address  buyer, uint256  traddingTime, uint256 gameid, uint256 buyType, uint buyTotal,uint256 buyPrice);\r\n  event BuyWinnerTwo(address indexed buyer, uint256 indexed first, uint256 indexed gameid,uint256 traddingTime, uint256 buyType,uint256 buyPrice,uint buyTotal);\r\n  event ShareBonus(address indexed buyer, uint256 indexed traddingTime, uint256 indexed buyerType, uint256 gameID, uint256 remainingAmount);\r\n\r\n  address public owner;\r\n\r\n\tuint[] _teamIDs;\r\n\r\n    struct Game{\r\n      uint256 _bouns;\r\n\t    uint[] _teams;\r\n\t    uint256[] _teamPrice;\r\n\t    uint _playType;\r\n\t    bool _stop;\r\n\t\t  uint256 _beginTime;\r\n    }\r\n    Game[] public games;\r\n\r\n    constructor() public {\r\n\t    owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function createGame(uint[] _teams, uint256[] _tPrice, uint _gameType,uint256 _beginTime) public onlyOwner {\r\n\t\tGame memory _game = Game({\r\n        _bouns: 0,\r\n\t\t    _teams: _teams,\r\n\t\t    _teamPrice: _tPrice,\r\n        _playType: _gameType,\r\n\t\t    _stop: true,\r\n\t\t\t_beginTime:_beginTime\r\n        });\r\n        games.push(_game);\r\n    }\r\n\r\n    function setTeamPrice(uint[] _teams, uint256[] _tPrice, uint gameID) public onlyOwner {\r\n        games[gameID]._teams = _teams;\r\n\t\t    games[gameID]._teamPrice = _tPrice;\r\n    }\r\n\r\n\t  function setTeamStatus(bool bstop, uint gameID) public onlyOwner {\r\n        games[gameID]._stop = bstop;\r\n    }\r\n\r\n    function destroy() public onlyOwner {\r\n\t    selfdestruct(owner);\r\n    }\r\n\r\n    function shareAmount(address winner, uint256 amount, uint256 _buyerType, uint _gameID) public onlyOwner {\r\n\t    require(address(this).balance>=amount);\r\n\t    winner.transfer(amount);\r\n\t    emit ShareBonus(winner, uint256(now), _buyerType, _gameID, amount);\r\n    }\r\n    function batchShareAmount(address[] winner, uint256[] amount, uint256 _gameID,uint256 _buyerType,uint256 amount_total) public onlyOwner {\r\n     require(address(this).balance>=amount_total);\r\n     for(uint i=0; i<winner.length; i++){\r\n      winner[i].transfer(amount[i]);\r\n         emit ShareBonus(winner[i], uint256(now), _buyerType, _gameID, amount[i]);\r\n         }\r\n    }\r\n\r\n\tfunction getListTeamByPlayType(uint _gameType) public view returns (uint[] teamIDss){\r\n\t\t_teamIDs = [0];\r\n\t\tfor(uint i=0; i<games.length; i++)\r\n\t    {\r\n\t\t    if(games[i]._playType == _gameType){\r\n\t\t        _teamIDs.push(i);\r\n\t\t    }\r\n\t    }\r\n\t\tteamIDss = _teamIDs;\r\n    }\r\n\r\n    function getListTeam(uint _gameID) public view returns (uint256 _bouns,\r\n\t    uint[] _teams,\r\n\t    uint256[] _teamPrice,\r\n\r\n\t    uint _playType,\r\n\t    bool _stop,\r\n\t\tuint256 _beginTime){\r\n\t\t_bouns = games[_gameID]._bouns;\r\n\t\t_teams = games[_gameID]._teams;\r\n\t\t_teamPrice = games[_gameID]._teamPrice;\r\n\t\t_playType = games[_gameID]._playType;\r\n\t\t_stop = games[_gameID]._stop;\r\n\t\t_beginTime = games[_gameID]._beginTime;\r\n    }\r\n\r\n\tfunction getPool(uint _gameID) public view returns (uint256 bounsp){\r\n\t    return games[_gameID]._bouns;\r\n    }\r\n\r\n    function buy(uint256 _gameID, uint256 _one, uint256 _two, uint256 _three, uint256 _buyCount,uint256 buyPrice) payable public{\r\n\t    //require(games[_gameID]._stop);\r\n      uint256 totalPrice = (games[_gameID]._teamPrice[_one.sub(100)].add(games[_gameID]._teamPrice[_two.sub(100)]).add(games[_gameID]._teamPrice[_three.sub(100)])).mul(_buyCount);\r\n      totalPrice = totalPrice.add(totalPrice.div(20)) ;\r\n\t    require(msg.value >= totalPrice);\r\n\r\n\t    emit BuyWinner(msg.sender, uint256(now),_one, _two, _three, _gameID, games[_gameID]._playType, _buyCount, buyPrice);\r\n      emit BuyWinnerList(_one, _two, _three,msg.sender, uint256(now), _gameID, games[_gameID]._playType, _buyCount, buyPrice);\r\n\t    owner.transfer(msg.value.div(20));\r\n\t    games[_gameID]._bouns = games[_gameID]._bouns.add(msg.value);\r\n    }\r\n\r\n\tfunction buyTwo(uint256 _one, uint256 _gameID, uint256 _buyCount,uint256 _buyPrice) payable public{\r\n\t    //require(games[_gameID]._stop);\r\n\t    require(msg.value >= ((games[_gameID]._teamPrice[_one].mul(_buyCount)).add(games[_gameID]._teamPrice[_one]).mul(_buyCount).div(20)));\r\n      owner.transfer(msg.value.div(20));\r\n\t\t  emit BuyWinnerTwo(msg.sender, games[_gameID]._teams[_one], _gameID,uint256(now), games[_gameID]._playType,_buyPrice, _buyCount);\r\n\t    games[_gameID]._bouns = games[_gameID]._bouns.add(msg.value);\r\n    }\r\n\r\n    function getBonusPoolTotal() public view returns (uint256) {\r\n        return this.balance;\r\n }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_gameID\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"name\":\"bounsp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"name\":\"_bouns\",\"type\":\"uint256\"},{\"name\":\"_playType\",\"type\":\"uint256\"},{\"name\":\"_stop\",\"type\":\"bool\"},{\"name\":\"_beginTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"bstop\",\"type\":\"bool\"},{\"name\":\"gameID\",\"type\":\"uint256\"}],\"name\":\"setTeamStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gameID\",\"type\":\"uint256\"},{\"name\":\"_one\",\"type\":\"uint256\"},{\"name\":\"_two\",\"type\":\"uint256\"},{\"name\":\"_three\",\"type\":\"uint256\"},{\"name\":\"_buyCount\",\"type\":\"uint256\"},{\"name\":\"buyPrice\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_gameID\",\"type\":\"uint256\"}],\"name\":\"getListTeam\",\"outputs\":[{\"name\":\"_bouns\",\"type\":\"uint256\"},{\"name\":\"_teams\",\"type\":\"uint256[]\"},{\"name\":\"_teamPrice\",\"type\":\"uint256[]\"},{\"name\":\"_playType\",\"type\":\"uint256\"},{\"name\":\"_stop\",\"type\":\"bool\"},{\"name\":\"_beginTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBonusPoolTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"winner\",\"type\":\"address[]\"},{\"name\":\"amount\",\"type\":\"uint256[]\"},{\"name\":\"_gameID\",\"type\":\"uint256\"},{\"name\":\"_buyerType\",\"type\":\"uint256\"},{\"name\":\"amount_total\",\"type\":\"uint256\"}],\"name\":\"batchShareAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_teams\",\"type\":\"uint256[]\"},{\"name\":\"_tPrice\",\"type\":\"uint256[]\"},{\"name\":\"gameID\",\"type\":\"uint256\"}],\"name\":\"setTeamPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"winner\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"_buyerType\",\"type\":\"uint256\"},{\"name\":\"_gameID\",\"type\":\"uint256\"}],\"name\":\"shareAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_teams\",\"type\":\"uint256[]\"},{\"name\":\"_tPrice\",\"type\":\"uint256[]\"},{\"name\":\"_gameType\",\"type\":\"uint256\"},{\"name\":\"_beginTime\",\"type\":\"uint256\"}],\"name\":\"createGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_one\",\"type\":\"uint256\"},{\"name\":\"_gameID\",\"type\":\"uint256\"},{\"name\":\"_buyCount\",\"type\":\"uint256\"},{\"name\":\"_buyPrice\",\"type\":\"uint256\"}],\"name\":\"buyTwo\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_gameType\",\"type\":\"uint256\"}],\"name\":\"getListTeamByPlayType\",\"outputs\":[{\"name\":\"teamIDss\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"traddingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"first\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"second\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"three\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"gameid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"buyType\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"buyTotal\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"buyPrice\",\"type\":\"uint256\"}],\"name\":\"BuyWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"first\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"second\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"third\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"traddingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"gameid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"buyType\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"buyTotal\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"buyPrice\",\"type\":\"uint256\"}],\"name\":\"BuyWinnerList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"first\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"gameid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"traddingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"buyType\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"buyPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"buyTotal\",\"type\":\"uint256\"}],\"name\":\"BuyWinnerTwo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"traddingTime\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"buyerType\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"gameID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"remainingAmount\",\"type\":\"uint256\"}],\"name\":\"ShareBonus\",\"type\":\"event\"}]","ContractName":"WorldCupWinner","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1d2e9ed044f65a9703e4d1d5bd299364f2337fe776df697390a31e127a2cea60"}]}