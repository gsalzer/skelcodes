{"status":"1","message":"OK","result":[{"SourceCode":"contract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n   function Owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        assert(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(_newOwner != owner);\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnerUpdate(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = 0x0;\r\n    }\r\n\r\n    event OwnerUpdate(address _prevOwner, address _newOwner);\r\n}\r\n\r\ncontract XaurumInterface {\r\n    function doMelt(uint256 _xaurAmount, uint256 _goldAmount) public returns (bool);\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n}\r\n\r\ncontract MeltingContract is Owned{\r\n    address XaurumAddress;\r\n    uint public XaurumAmountMelted;\r\n    uint public GoldAmountMelted;\r\n    \r\n    event MeltDone(uint xaurAmount, uint goldAmount);\r\n    \r\n    function MeltingContract() public {\r\n        XaurumAddress = 0x4DF812F6064def1e5e029f1ca858777CC98D2D81;\r\n    }\r\n    \r\n    function doMelt(uint256 _xaurAmount, uint256 _goldAmount) public onlyOwner returns (bool) {\r\n        uint actualBalance = XaurumInterface(XaurumAddress).balanceOf(address(this));\r\n        require(actualBalance > XaurumAmountMelted);\r\n        require(actualBalance - XaurumAmountMelted >= _xaurAmount);\r\n        XaurumInterface(XaurumAddress).doMelt(_xaurAmount, _goldAmount);\r\n        XaurumAmountMelted += _xaurAmount;\r\n        GoldAmountMelted += _goldAmount;\r\n        MeltDone(_xaurAmount, _goldAmount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"XaurumAmountMelted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GoldAmountMelted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_xaurAmount\",\"type\":\"uint256\"},{\"name\":\"_goldAmount\",\"type\":\"uint256\"}],\"name\":\"doMelt\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"xaurAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"goldAmount\",\"type\":\"uint256\"}],\"name\":\"MeltDone\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}]","ContractName":"MeltingContract","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5fa2943ceae794139502bb00962c61a0a3837f078d17a9543144564773a25f9d"}]}