{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Owned {\r\n    address owner;\r\n    \r\n    function Owned() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n   modifier onlyOwner {\r\n       require(msg.sender == owner);\r\n       _;\r\n   }\r\n}\r\n\r\ncontract Aeromart is Owned {\r\n    \r\n    struct Note {\r\n        bytes20 serialNumber;\r\n        string text;\r\n    }\r\n    \r\n    uint public notesLength;\r\n    mapping (uint256 => Note) public notes;\r\n    \r\n    event noteInfo(\r\n       bytes20 serialNumber,\r\n       string text\r\n    );\r\n    \r\n    function addNote(bytes20 _serialNumber, string _text) onlyOwner public returns (uint) {\r\n        var note = notes[notesLength];\r\n        \r\n        note.serialNumber = _serialNumber;\r\n        note.text = _text;\r\n        \r\n        noteInfo(_serialNumber, _text);\r\n        \r\n        notesLength++;\r\n        return notesLength;\r\n    }\r\n    \r\n    function setNote(uint256 _id, bytes20 _serialNumber, string _text) onlyOwner public {\r\n        var note = notes[_id];\r\n        \r\n        note.serialNumber = _serialNumber;\r\n        note.text = _text;\r\n        \r\n        // notesAccts.push(_id) -1;\r\n        noteInfo(_serialNumber, _text);\r\n    }\r\n    \r\n    function getNote(uint256 _id) view public returns (bytes20, string) {\r\n        return (notes[_id].serialNumber, notes[_id].text);\r\n    }\r\n    \r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_serialNumber\",\"type\":\"bytes20\"},{\"name\":\"_text\",\"type\":\"string\"}],\"name\":\"addNote\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_serialNumber\",\"type\":\"bytes20\"},{\"name\":\"_text\",\"type\":\"string\"}],\"name\":\"setNote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"notes\",\"outputs\":[{\"name\":\"serialNumber\",\"type\":\"bytes20\"},{\"name\":\"text\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getNote\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes20\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"notesLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"serialNumber\",\"type\":\"bytes20\"},{\"indexed\":false,\"name\":\"text\",\"type\":\"string\"}],\"name\":\"noteInfo\",\"type\":\"event\"}]","ContractName":"Aeromart","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fa81218023b25d65223c42a1188ac040676a24d57b0f888260a6958cbd7a518b"}]}