{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Token {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n\r\n/*  ERC 20 token */\r\ncontract StandardToken is Token {\r\n\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n      if (balances[msg.sender] >= _value && _value > 0) {\t\t\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        allowed[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n}\r\n\r\ncontract NABC is StandardToken {\r\n\t\r\n    // metadata\r\n\tstring public constant name = \"NABC\";\r\n    string public constant symbol = \"NABC\";\r\n    uint256 public constant decimals = 18;\r\n    string public version = \"1.0\";\r\n\t\r\n    address private creator;     \r\n\tmapping (address => uint256) private blackmap;\r\n\tmapping (address => uint256) private releaseamount;\r\n\r\n    modifier onlyCreator() {\r\n    require(msg.sender == creator);\r\n    _;\r\n   }\r\n   \r\n   function _addressNotNull(address _to) private pure returns (bool) {\r\n    return _to != address(0);\r\n   }\r\n   \r\n   function addBlackAccount(address _b) public onlyCreator {\r\n    require(_addressNotNull(_b));\r\n    blackmap[_b] = 1;\r\n   }\r\n   \r\n   function clearBlackAccount(address _b) public onlyCreator {\r\n    require(_addressNotNull(_b));\r\n    blackmap[_b] = 0;\r\n   }\r\n   \r\n   function checkBlackAccount(address _b) public returns (uint256) {\r\n       require(_addressNotNull(_b));\r\n       return blackmap[_b];\r\n   }\r\n   \r\n   function setReleaseAmount(address _b, uint256 _a) public onlyCreator {\r\n       require(_addressNotNull(_b));\r\n       require(balances[_b] >= _a);\r\n       releaseamount[_b] = _a;\r\n   }\r\n   \r\n   function checkReleaseAmount(address _b) public returns (uint256) {\r\n       require(_addressNotNull(_b));\r\n       return releaseamount[_b];\r\n   }\r\n  \r\n    address account1 = 0xA1eA1e293839e2005a8E47f772B758DaBC0515FB;  //70%\r\n\taddress account2 = 0xD285bB3f0d0A6271d535Bd37798A452892466De0;  //30%\r\n\t\r\n    uint256 public amount1 = 34* 10000 * 10000 * 10**decimals;\r\n\tuint256 public amount2 = 14* 10000 * 10000 * 10**decimals;\r\n\t\r\n\r\n    // constructor\r\n    function NABC() {\r\n\t    creator = msg.sender;\r\n\t\ttotalSupply = amount1 + amount2;\r\n\t\tbalances[account1] = amount1;                          \r\n\t\tbalances[account2] = amount2;\r\n                balances[msg.sender] = 2 * 10000 * 10000 * 10**decimals;\r\n    }\r\n\t\r\n\t\r\n\tfunction transfer(address _to, uint256 _value) returns (bool success) {\r\n      if (balances[msg.sender] >= _value && _value > 0) {\t\r\n\t    if(blackmap[msg.sender] != 0){\r\n\t        if(releaseamount[msg.sender] < _value){\r\n\t            return false;\r\n\t        }\r\n\t        else{\r\n\t            releaseamount[msg.sender] -= _value;\r\n\t            balances[msg.sender] -= _value;\r\n\t\t\t    balances[_to] += _value;\r\n\t\t\t    Transfer(msg.sender, _to, _value);\r\n\t\t\t    return true;\r\n\t        }\r\n\t\t}\r\n\t\telse{\r\n\t\t\tbalances[msg.sender] -= _value;\r\n\t\t\tbalances[_to] += _value;\r\n\t\t\tTransfer(msg.sender, _to, _value);\r\n\t\t\treturn true;\r\n\t\t}\r\n        \r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"amount2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"address\"}],\"name\":\"clearBlackAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"address\"}],\"name\":\"addBlackAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"address\"}],\"name\":\"checkReleaseAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"address\"},{\"name\":\"_a\",\"type\":\"uint256\"}],\"name\":\"setReleaseAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"address\"}],\"name\":\"checkBlackAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amount1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"NABC","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://17d84c640c7f9fab827a4bd6ea24eebb0e9595ab8d72c7ebb85aac9f516e83cd"}]}