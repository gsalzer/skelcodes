{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.15;\r\n\r\ncontract ERC20 {\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n}\r\n\r\ncontract REMMESale {\r\n    uint public constant SALES_START = 1518552000; // 13.02.2018 20:00:00 UTC\r\n    uint public constant FIRST_DAY_END = 1518638400; // 14.02.2018 20:00:00 UTC\r\n    uint public constant SALES_DEADLINE = 1518724800; // 15.02.2018 20:00:00 UTC\r\n    address public constant ASSET_MANAGER_WALLET = 0xbb12800E7446A51395B2d853D6Ce7F22210Bb5E5;\r\n    address public constant TOKEN = 0x83984d6142934bb535793A82ADB0a46EF0F66B6d; // REMME token\r\n    address public constant WHITELIST_SUPPLIER = 0x1Ff21eCa1c3ba96ed53783aB9C92FfbF77862584;\r\n    uint public constant TOKEN_CENTS = 10000; // 1 REM is 1.0000 REM\r\n    uint public constant BONUS = 10;\r\n    uint public constant SALE_MAX_CAP = 500000000 * TOKEN_CENTS;\r\n    uint public constant MINIMAL_PARTICIPATION = 0.1 ether;\r\n    uint public constant MAXIMAL_PARTICIPATION = 15 ether;\r\n\r\n    uint public saleContributions;\r\n    uint public tokensPurchased;\r\n    uint public allowedGasPrice = 20000000000 wei;\r\n    uint public tokenPriceWei;\r\n\r\n    mapping(address => uint) public participantContribution;\r\n    mapping(address => bool) public whitelist;\r\n\r\n    event Contributed(address receiver, uint contribution, uint reward);\r\n    event WhitelistUpdated(address participant, bool isWhitelisted);\r\n    event AllowedGasPriceUpdated(uint gasPrice);\r\n    event TokenPriceUpdated(uint tokenPriceWei);\r\n    event Error(string message);\r\n\r\n    function REMMESale(uint _ethUsdPrice) {\r\n        tokenPriceWei = 0.04 ether / _ethUsdPrice;\r\n    }\r\n\r\n    function contribute() payable returns(bool) {\r\n        return contributeFor(msg.sender);\r\n    }\r\n\r\n    function contributeFor(address _participant) payable returns(bool) {\r\n        require(now >= SALES_START);\r\n        require(now < SALES_DEADLINE);\r\n        require((participantContribution[_participant] + msg.value) >= MINIMAL_PARTICIPATION);\r\n        // Only the whitelisted addresses can participate.\r\n        require(whitelist[_participant]);\r\n\r\n        //check for MAXIMAL_PARTICIPATION and allowedGasPrice only at first day\r\n        if (now <= FIRST_DAY_END) {\r\n            require((participantContribution[_participant] + msg.value) <= MAXIMAL_PARTICIPATION);\r\n            require(tx.gasprice <= allowedGasPrice);\r\n        }\r\n\r\n        // If there is some division reminder, we just collect it too.\r\n        uint tokensAmount = (msg.value * TOKEN_CENTS) / tokenPriceWei;\r\n        require(tokensAmount > 0);\r\n        uint bonusTokens = (tokensAmount * BONUS) / 100;\r\n        uint totalTokens = tokensAmount + bonusTokens;\r\n\r\n        tokensPurchased += totalTokens;\r\n        require(tokensPurchased <= SALE_MAX_CAP);\r\n        require(ERC20(TOKEN).transferFrom(ASSET_MANAGER_WALLET, _participant, totalTokens));\r\n        saleContributions += msg.value;\r\n        participantContribution[_participant] += msg.value;\r\n        ASSET_MANAGER_WALLET.transfer(msg.value);\r\n\r\n        Contributed(_participant, msg.value, totalTokens);\r\n        return true;\r\n    }\r\n\r\n    modifier onlyWhitelistSupplier() {\r\n        require(msg.sender == WHITELIST_SUPPLIER || msg.sender == ASSET_MANAGER_WALLET);\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == ASSET_MANAGER_WALLET);\r\n        _;\r\n    }\r\n\r\n    function addToWhitelist(address _participant) onlyWhitelistSupplier() returns(bool) {\r\n        if (whitelist[_participant]) {\r\n            return true;\r\n        }\r\n        whitelist[_participant] = true;\r\n        WhitelistUpdated(_participant, true);\r\n        return true;\r\n    }\r\n\r\n    function removeFromWhitelist(address _participant) onlyWhitelistSupplier() returns(bool) {\r\n        if (!whitelist[_participant]) {\r\n            return true;\r\n        }\r\n        whitelist[_participant] = false;\r\n        WhitelistUpdated(_participant, false);\r\n        return true;\r\n    }\r\n\r\n    function setGasPrice(uint _allowedGasPrice) onlyAdmin() returns(bool) {\r\n        allowedGasPrice = _allowedGasPrice;\r\n        AllowedGasPriceUpdated(allowedGasPrice);\r\n        return true;\r\n    }\r\n\r\n    function setEthPrice(uint _ethUsdPrice) onlyAdmin() returns(bool) {\r\n        tokenPriceWei = 0.04 ether / _ethUsdPrice;\r\n        TokenPriceUpdated(tokenPriceWei);\r\n        return true;\r\n    }\r\n\r\n    function () payable {\r\n        contribute();\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_ethUsdPrice\",\"type\":\"uint256\"}],\"name\":\"setEthPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAXIMAL_PARTICIPATION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPriceWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FIRST_DAY_END\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SALES_DEADLINE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"contributeFor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMAL_PARTICIPATION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"participantContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_CENTS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SALE_MAX_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleContributions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ASSET_MANAGER_WALLET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allowedGasPrice\",\"type\":\"uint256\"}],\"name\":\"setGasPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPurchased\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowedGasPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contribute\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WHITELIST_SUPPLIER\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SALES_START\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ethUsdPrice\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"contribution\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Contributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"WhitelistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"gasPrice\",\"type\":\"uint256\"}],\"name\":\"AllowedGasPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenPriceWei\",\"type\":\"uint256\"}],\"name\":\"TokenPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Error\",\"type\":\"event\"}]","ContractName":"REMMESale","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"10000","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000343","Library":"","SwarmSource":"bzzr://b0e5a9328f3b5ecadfe7d93de4cd16116c00c43e37a4c092585bc17c4489e5b7"}]}