{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n//safemath is not needed as only authorized trusted users can make calls.\r\ncontract disburseERC20v11 {\r\n    //indexed fields can be used for filtering event listeners\r\n    event Disbursement(address indexed _tokenContract,  address[] indexed _contributors, uint256[] _contributions, uint256 _amount);\r\n    event AdminSet(address indexed _tokenContract, address indexed _admin);\r\n    event OwnerSet(address _owner);\r\n\r\n    address owner;\r\n    mapping(address => address) tokenAdmins;\r\n    \r\n    constructor() public {\r\n        //set owner to contract creator\r\n        owner = msg.sender;\r\n        emit OwnerSet(owner);\r\n    }  \r\n\r\n    function disburseToken(address _tokenContract, address[] _contributors, uint256[] _contributions) public {\r\n\r\n        //only allow token admin to disburse\r\n        require(msg.sender == tokenAdmins[_tokenContract]);\r\n\r\n        // get this contract's balance of specified token\r\n        uint256 balance = ERC20Token(_tokenContract).balanceOf(address(this));\r\n\r\n        // calculate totalContributions\r\n        uint256 totalContributions;\r\n        for(uint16 i = 0; i < _contributions.length; i++){\r\n            totalContributions = totalContributions + _contributions[i];\r\n        }\r\n\r\n        //Send tokens to each contributor\r\n        for(i = 0; i < _contributors.length; i++){\r\n            // calculate members's disbursement\r\n            uint256 disbursement = (balance * _contributions[i]) / totalContributions;\r\n            \r\n            // ensure that token transfer is successful or  revert all previous actions and stop running\r\n            require(ERC20Token(_tokenContract).transfer(_contributors[i], disbursement));\r\n        }\r\n        // fire event to record disbursement\r\n        emit Disbursement(_tokenContract, _contributors, _contributions, balance);\r\n    }\r\n    \r\n    function setAdmin(address _tokenContract, address _admin) public {\r\n        //don't allow assignment to address 0x0\r\n        require(_admin != address(0));\r\n        \r\n        //only owner or current admin can set Admin\r\n        require(msg.sender == tokenAdmins[_tokenContract] || msg.sender == owner);\r\n        \r\n        //save admin to token address mapping\r\n        tokenAdmins[_tokenContract] = _admin;\r\n        \r\n        //fire event for client access\r\n        emit AdminSet(_tokenContract, _admin);\r\n    }\r\n    \r\n    function setOwner(address _owner) public {\r\n        //don't allow assignment to address 0x0\r\n        require(_owner != address(0));\r\n        \r\n        //only owner can set owner\r\n        require(msg.sender == owner);\r\n        \r\n        //save admin to token address mapping\r\n        owner = _owner;\r\n        \r\n        //fire event for client access\r\n        emit OwnerSet(_owner);\r\n    }\r\n}\r\n\r\n// interface to allow calls to ERC20 tokens\r\ninterface ERC20Token {\r\n    function balanceOf(address _holder) external returns(uint256 tokens);\r\n    function transfer(address _to, uint256 amount) external returns(bool success);\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_contributors\",\"type\":\"address[]\"},{\"name\":\"_contributions\",\"type\":\"uint256[]\"}],\"name\":\"disburseToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_contributors\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"_contributions\",\"type\":\"uint256[]\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Disbursement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"AdminSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"}]","ContractName":"disburseERC20v11","CompilerVersion":"v0.4.25-nightly.2018.5.30+commit.3f3d6df2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bd8a58a73d9844f65c3bf491ff50ee53a8e943c9c444d2166ad0b627407aaf79"}]}