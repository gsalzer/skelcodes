{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.15;\r\n\r\ncontract Ambi2 {\r\n    function claimFor(address _address, address _owner) returns(bool);\r\n    function hasRole(address _from, bytes32 _role, address _to) constant returns(bool);\r\n    function isOwner(address _node, address _owner) constant returns(bool);\r\n}\r\n\r\ncontract Ambi2Enabled {\r\n    Ambi2 ambi2;\r\n\r\n    modifier onlyRole(bytes32 _role) {\r\n        if (address(ambi2) != 0x0 && ambi2.hasRole(this, _role, msg.sender)) {\r\n            _;\r\n        }\r\n    }\r\n\r\n    // Perform only after claiming the node, or claim in the same tx.\r\n    function setupAmbi2(Ambi2 _ambi2) returns(bool) {\r\n        if (address(ambi2) != 0x0) {\r\n            return false;\r\n        }\r\n\r\n        ambi2 = _ambi2;\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\ncontract Ambi2EnabledFull is Ambi2Enabled {\r\n    // Setup and claim atomically.\r\n    function setupAmbi2(Ambi2 _ambi2) returns(bool) {\r\n        if (address(ambi2) != 0x0) {\r\n            return false;\r\n        }\r\n        if (!_ambi2.claimFor(this, msg.sender) && !_ambi2.isOwner(this, msg.sender)) {\r\n            return false;\r\n        }\r\n\r\n        ambi2 = _ambi2;\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract AssetProxyInterface {\r\n    function transferFromWithReference(address _from, address _to, uint _value, string _reference) returns(bool);\r\n}\r\n\r\ncontract DeviceActivation is Ambi2EnabledFull {\r\n\r\n    mapping (address => bool) activationStatus;\r\n\r\n    event DeviceIsActivated(address device);\r\n    event DeviceIsDeactivated(address device);\r\n\r\n    function activateDevice(address _device) onlyRole('admin') returns(bool) {\r\n        activationStatus[_device] = true;\r\n        DeviceIsActivated(_device);\r\n        return true;\r\n    }\r\n\r\n    function deactivateDevice(address _device) onlyRole('admin') returns(bool) {\r\n        activationStatus[_device] = false;\r\n        DeviceIsDeactivated(_device);\r\n        return true;\r\n    }\r\n\r\n    function isActivated(address _device) public constant returns (bool) {\r\n        return activationStatus[_device];\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_device\",\"type\":\"address\"}],\"name\":\"activateDevice\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ambi2\",\"type\":\"address\"}],\"name\":\"setupAmbi2\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_device\",\"type\":\"address\"}],\"name\":\"isActivated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_device\",\"type\":\"address\"}],\"name\":\"deactivateDevice\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"device\",\"type\":\"address\"}],\"name\":\"DeviceIsActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"device\",\"type\":\"address\"}],\"name\":\"DeviceIsDeactivated\",\"type\":\"event\"}]","ContractName":"DeviceActivation","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"10000","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://37a882484b2b53f30eb97006a6d3f3a7cc77e971191c88a7df55b594211b48ea"}]}