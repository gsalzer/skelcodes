{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * Copyright (C) 2017-2018 Hashfuture Inc. All rights reserved.\r\n */\r\n\r\n\r\npragma solidity ^0.4.19;\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract mall is owned {\r\n\r\n    /* Struct for one commodity */\r\n    struct Commodity {\r\n        uint commodityId;            // Unique id for a commodity\r\n        uint seedBlock;         // Block number whose hash as random seed\r\n        string MD5;         // MD5 of full content\r\n    }\r\n\r\n    uint commodityNum;\r\n    /* This notes all commodities and a map from commodityId to commodityIdx */\r\n    mapping(uint => Commodity) commodities;\r\n    mapping(uint => uint) indexMap;\r\n\r\n    /** constructor */\r\n    constructor() public {\r\n        commodityNum = 1;\r\n    }\r\n\r\n    /**\r\n     * Initialize a new Commodity\r\n     */\r\n    function newCommodity(uint commodityId, uint seedBlock, string MD5) onlyOwner public returns (uint commodityIndex) {\r\n        require(indexMap[commodityId] == 0);             // commodityId should be unique\r\n        commodityIndex = commodityNum++;\r\n        indexMap[commodityId] = commodityIndex;\r\n        commodities[commodityIndex] = Commodity(commodityId, seedBlock, MD5);\r\n    }\r\n\r\n    /**\r\n     * Get commodity info by index\r\n     * Only can be called by newOwner\r\n     */\r\n    function getCommodityInfoByIndex(uint commodityIndex) onlyOwner public view returns (uint commodityId, uint seedBlock, string MD5) {\r\n        require(commodityIndex < commodityNum);               // should exist\r\n        require(commodityIndex >= 1);                    // should exist\r\n        commodityId = commodities[commodityIndex].commodityId;\r\n        seedBlock = commodities[commodityIndex].seedBlock;\r\n        MD5 = commodities[commodityIndex].MD5;\r\n    }\r\n\r\n    /**\r\n     * Get commodity info by commodity id\r\n     * Only can be called by newOwner\r\n     */\r\n    function getCommodityInfoById(uint commodityId) public view returns (uint commodityIndex, uint seedBlock, string MD5) {\r\n        commodityIndex = indexMap[commodityId];\r\n        require(commodityIndex < commodityNum);              // should exist\r\n        require(commodityIndex >= 1);                   // should exist\r\n        seedBlock = commodities[commodityIndex].seedBlock;\r\n        MD5 = commodities[commodityIndex].MD5;\r\n    }\r\n\r\n    /**\r\n     * Get the number of commodities\r\n     */\r\n    function getCommodityNum() onlyOwner public view returns (uint num) {\r\n        num = commodityNum - 1;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"commodityIndex\",\"type\":\"uint256\"}],\"name\":\"getCommodityInfoByIndex\",\"outputs\":[{\"name\":\"commodityId\",\"type\":\"uint256\"},{\"name\":\"seedBlock\",\"type\":\"uint256\"},{\"name\":\"MD5\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCommodityNum\",\"outputs\":[{\"name\":\"num\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"commodityId\",\"type\":\"uint256\"},{\"name\":\"seedBlock\",\"type\":\"uint256\"},{\"name\":\"MD5\",\"type\":\"string\"}],\"name\":\"newCommodity\",\"outputs\":[{\"name\":\"commodityIndex\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"commodityId\",\"type\":\"uint256\"}],\"name\":\"getCommodityInfoById\",\"outputs\":[{\"name\":\"commodityIndex\",\"type\":\"uint256\"},{\"name\":\"seedBlock\",\"type\":\"uint256\"},{\"name\":\"MD5\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"mall","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8c23858a138c200590905c11d13438eeb0a39d9d2b44cdd830aae2a2fb715d48"}]}