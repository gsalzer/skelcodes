{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract ERC20 {\r\n\r\n    uint256 public totalSupply;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    function balanceOf(address who) public view returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n\r\n    function allowance(address owner, address spender) public view returns (uint256);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnerChanged(address oldOwner, address newOwner);\r\n\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        require(newOwner != owner && newOwner != address(0x0));\r\n        address oldOwner = owner;\r\n        owner = newOwner;\r\n        OwnerChanged(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ncontract TeamTokenLock is Ownable {\r\n\r\n    ERC20 public token;\r\n\r\n    // address where receives funds when unlock period\r\n    address public beneficiary;\r\n\r\n    uint public startTime = 1513728000;  // About time at 2018-1-1\r\n    uint public firstLockTime = 365 days;\r\n    uint public secondLockTime = 2 * 365 days;\r\n\r\n    uint public firstLockAmount = 120000000 * (10 ** 18);\r\n    uint public secondLockAmount = 120000000 * (10 ** 18);\r\n\r\n    modifier onlyOfficial {\r\n        require(msg.sender == owner || msg.sender == beneficiary);\r\n        _;\r\n    }\r\n\r\n    modifier firstLockTimeEnd {\r\n        require(isFirstLockTimeEnd());\r\n        _;\r\n    }\r\n\r\n    modifier secondLockTimeEnd {\r\n        require(isSecondLockTimeEnd());\r\n        _;\r\n    }\r\n\r\n    function TeamTokenLock(address _beneficiary, address _token) public {\r\n        require(_beneficiary != address(0));\r\n        require(_token != address(0));\r\n\r\n        beneficiary = _beneficiary;\r\n        token = ERC20(_token);\r\n    }\r\n\r\n    function getTokenBalance() public view returns(uint) {\r\n        return token.balanceOf(address(this));\r\n    }\r\n\r\n    function isFirstLockTimeEnd() public view returns(bool) {\r\n        return now > startTime + firstLockTime;\r\n    }\r\n\r\n    function isSecondLockTimeEnd() public view returns(bool) {\r\n        return now > startTime + secondLockTime;\r\n    }\r\n\r\n    function unlockFirstTokens() public onlyOfficial firstLockTimeEnd {\r\n        require(firstLockAmount > 0);\r\n\r\n        uint unlockAmount = firstLockAmount < getTokenBalance() ? firstLockAmount : getTokenBalance();\r\n        require(unlockAmount <= firstLockAmount);\r\n        firstLockAmount = firstLockAmount - unlockAmount;\r\n        require(token.transfer(beneficiary, unlockAmount));\r\n    }\r\n\r\n    function unlockSecondTokens() public onlyOfficial secondLockTimeEnd {\r\n        require(secondLockAmount > 0);\r\n\r\n        uint unlockAmount = secondLockAmount < getTokenBalance() ? secondLockAmount : getTokenBalance();\r\n        require(unlockAmount <= secondLockAmount);\r\n        secondLockAmount = secondLockAmount - unlockAmount;\r\n        require(token.transfer(beneficiary, unlockAmount));\r\n    }\r\n\r\n    function changeBeneficiary(address _beneficiary) public onlyOwner {\r\n        require(_beneficiary != address(0));\r\n        beneficiary = _beneficiary;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"firstLockTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondLockAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlockSecondTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isSecondLockTimeEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"firstLockAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlockFirstTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondLockTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"changeBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFirstLockTimeEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"}]","ContractName":"TeamTokenLock","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000587efdce16c9a1a4bba436c6a5197658c468179e0000000000000000000000009b20dabcec77f6289113e61893f7beefaeb1990a","Library":"","SwarmSource":"bzzr://f9455ddcaae9ef8e5d6ee30a1ffe031f58fabfaa07326a7d894f098172282db2"}]}