{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external; }\r\n\r\ncontract FLEBToken{\r\n    \r\n address public owner;\r\n string public name = \"FLEBToken\"; //Token name\r\n string public symbol = \"FLB\";\r\n uint8 public decimals = 18;       //일반적으로 18로 많이 사용.\r\n uint256 public totalSupply = 0; \r\n \r\n mapping(address => uint256) balances;\r\n mapping(address => mapping(address => uint256)) internal allowed; //누가 누구한테 얼마 만큼 허용 \r\n \r\n \r\n constructor() public{\r\n     owner = msg.sender;\r\n } \r\n \r\n \r\n function changeOwner(address _addr) public{\r\n     \r\n     require(owner == msg.sender);\r\n     owner = _addr;\r\n }\r\n  /**\r\n     * Transfer tokens\r\n     *\r\n     * Send `_value` tokens to `_to` from your account\r\n     *\r\n     * @param _to The address of the recipient\r\n     * @param _value the amount to send\r\n     */\r\n function transfer(address _to, uint256 _value) public returns (bool) {\r\n     require(_to != address(0));\r\n     require(_value <= balances[msg.sender]);\r\n     \r\n     balances[msg.sender] = balances[msg.sender] - _value;\r\n     balances[_to] = balances[_to] + _value;\r\n     emit Transfer(msg.sender, _to, _value);\r\n     \r\n     return true;\r\n}\r\n\r\nfunction balanceOf(address _owner) public view returns (uint256 balance) {\r\n    return balances[_owner];\r\n}\r\n\r\n /**\r\n     * Transfer tokens from other address\r\n     *\r\n     * Send `_value` tokens to `_to` on behalf of `_from`\r\n     *\r\n     * @param _from The address of the sender\r\n     * @param _to The address of the recipient\r\n     * @param _value the amount to send\r\n */\r\nfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n     require(_to != address(0));\r\n     require(_value <= balances[_from]);\r\n     require(_value <= allowed[_from][msg.sender]);\r\n     \r\n     balances[_from] = balances[_from] - _value;\r\n     balances[_to] = balances[_to] + _value;\r\n     \r\n     allowed[_from][msg.sender] = allowed[_from][msg.sender] - _value;\r\n     emit Transfer(_from, _to, _value);\r\n    \r\n    return true;\r\n}  \r\n\r\n/**\r\n * Set allowance for other address\r\n *\r\n * Allows `_spender` to spend no more than `_value` tokens on your behalf\r\n *\r\n * @param _spender The address authorized to spend\r\n * @param _value the max amount they can spend\r\n */\r\nfunction approve(address _spender, uint256 _value) public returns (bool) {\r\n     allowed[msg.sender][_spender] = _value; //내가(누가)  누가 한테얼마를 허용 \r\n     emit Approval(msg.sender, _spender, _value);\r\n     \r\n     return true;\r\n}\r\n\r\nfunction allowance(address _owner, address _spender) public view returns (uint256) {\r\n    return allowed[_owner][_spender];\r\n}\r\n\r\n /**\r\n* Set allowance for other address and notify\r\n*\r\n* Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\r\n*\r\n* @param _spender The address authorized to spend\r\n* @param _value the max amount they can spend\r\n* @param _extraData some extra information to send to the approved contract\r\n*/\r\n \r\nfunction approveAndCall(address _spender, uint256 _value, bytes _extraData)  public returns (bool success) {\r\n    \r\n    tokenRecipient spender = tokenRecipient(_spender);\r\n    if (approve(_spender, _value)) {\r\n        spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n        return true;\r\n    }\r\n}\r\n \r\n   /**\r\n     * Destroy tokens\r\n     *\r\n     * Remove `_value` tokens from the system irreversibly\r\n     *\r\n     * @param _value the amount of money to burn\r\n     */\r\n function burn(uint256 _value) public returns (bool success) {\r\n        require(balances[msg.sender] >= _value);   // Check if the sender has enough\r\n        balances[msg.sender] -= _value;            // Subtract from the sender\r\n        totalSupply -= _value;                      // Updates totalSupply\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n  }\r\n  \r\n   /**\r\n     * Destroy tokens from other account\r\n     *\r\n     * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\r\n     *\r\n     * @param _from the address of the sender\r\n     * @param _value the amount of money to burn\r\n     */\r\n function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n      require(balances[_from] >= _value);                // Check if the targeted balance is enough\r\n      require(_value <= allowed[_from][msg.sender]);    // Check allowance\r\n      balances[_from] -= _value;                         // Subtract from the targeted balance\r\n      allowed[_from][msg.sender] -= _value;             // Subtract from the sender's allowance\r\n      totalSupply -= _value;                            // Update totalSupply\r\n      emit Burn(_from, _value);\r\n      return true;\r\n }\r\n \r\n function mint(address _to, uint256 _amount) public returns (bool) {\r\n \r\n     require(msg.sender == owner);\r\n     \r\n     totalSupply = totalSupply + _amount;\r\n     balances[_to] = balances[_to] + _amount;\r\n     \r\n     emit Mint(_to, _amount);\r\n     emit Transfer(address(0), _to, _amount);\r\n     \r\n     return true;\r\n }\r\n \r\n function mintSub(address _to,uint256 _amount) public returns (bool){\r\n     \r\n     require(msg.sender == owner);\r\n     require(balances[msg.sender] >= _amount && balances[msg.sender] != 0 );\r\n     \r\n     totalSupply = totalSupply - _amount;\r\n     balances[_to] = balances[_to] - _amount;\r\n     \r\n     emit Mint(_to,_amount);\r\n     emit Transfer(address(0), _to,_amount);\r\n     \r\n     return true;\r\n     \r\n }\r\n \r\n function close() public {\r\n     \r\n     require(msg.sender == owner);\r\n     selfdestruct(owner);\r\n }\r\n \r\n event Transfer(address indexed from, address indexed to, uint256 value);\r\n event Approval(address indexed owner, address indexed spender, uint256 value);\r\n event Mint(address indexed to, uint256 amount); \r\n // This notifies clients about the amount burnt\r\n event Burn(address indexed from, uint256 value);\r\n \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintSub\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"FLEBToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cdc2ed0d64087292fbe532872e32f63dd870d5492e56f75fe7ce873bca04e70f"}]}