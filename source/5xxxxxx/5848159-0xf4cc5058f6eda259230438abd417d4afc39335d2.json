{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract SingleSourceAuthority {\r\n    // Struct and Enum\r\n    struct Authority {\r\n        bool valid;\r\n        address authorizedBy;\r\n        address revokedBy;\r\n        uint validFrom;\r\n        uint validTo;\r\n    }\r\n\r\n    // Instance variables\r\n    address public rootAuthority;\r\n    mapping(address => Authority) public authorities;\r\n\r\n    // Modifier\r\n    modifier restricted() {\r\n        if (msg.sender == rootAuthority)\r\n            _;\r\n    }\r\n\r\n    // Init\r\n    function SingleSourceAuthority() public {\r\n        rootAuthority = msg.sender;\r\n    }\r\n\r\n    // Functions\r\n    function changeRootAuthority(address newRootAuthorityAddress)\r\n      public\r\n      restricted()\r\n    {\r\n        rootAuthority = newRootAuthorityAddress;\r\n    }\r\n\r\n    function isRootAuthority(address authorityAddress)\r\n      public\r\n      view\r\n      returns (bool)\r\n    {\r\n        if (authorityAddress == rootAuthority) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function isValidAuthority(address authorityAddress, uint blockNumber)\r\n      public\r\n      view\r\n      returns (bool)\r\n    {\r\n        Authority storage authority = authorities[authorityAddress];\r\n        if (authority.valid) {\r\n            if (authority.validFrom <= blockNumber && (authority.validTo == 0 || authority.validTo >= blockNumber)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function approveAuthority(address authorityAddress) public restricted() {\r\n        Authority memory authority = Authority({\r\n            valid: true,\r\n            authorizedBy: msg.sender,\r\n            revokedBy: 0x0,\r\n            validFrom: block.number,\r\n            validTo: 0\r\n        });\r\n        authorities[authorityAddress] = authority;\r\n    }\r\n\r\n    function revokeAuthority(address authorityAddress, uint blockNumber) public restricted() {\r\n        Authority storage authority = authorities[authorityAddress];\r\n        authority.revokedBy = msg.sender;\r\n        authority.validTo = blockNumber;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"rootAuthority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorities\",\"outputs\":[{\"name\":\"valid\",\"type\":\"bool\"},{\"name\":\"authorizedBy\",\"type\":\"address\"},{\"name\":\"revokedBy\",\"type\":\"address\"},{\"name\":\"validFrom\",\"type\":\"uint256\"},{\"name\":\"validTo\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authorityAddress\",\"type\":\"address\"},{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"revokeAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"authorityAddress\",\"type\":\"address\"},{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"isValidAuthority\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newRootAuthorityAddress\",\"type\":\"address\"}],\"name\":\"changeRootAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"authorityAddress\",\"type\":\"address\"}],\"name\":\"isRootAuthority\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authorityAddress\",\"type\":\"address\"}],\"name\":\"approveAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"SingleSourceAuthority","CompilerVersion":"v0.4.22+commit.4cb486ee","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f4a0484d0b52bd7ff6f2eaa0a28b7179d90bc25f1a76fb081072dc59eeb34cd4"}]}