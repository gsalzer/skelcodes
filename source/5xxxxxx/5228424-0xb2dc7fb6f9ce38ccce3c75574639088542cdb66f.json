{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n\r\ncontract theCyberClubhouse {\r\n  // This is an example contract that will inform a dapp whether or not to\r\n  // provide admission to some area based on membership in theCyber, or at least\r\n  // requiring a member of theCyber to vouch for you. The potential attendee\r\n  // is given a passphrase or other code, and is only admitted after the dapp\r\n  // detects a GrantAdmission event that matches the provided passphrase.\r\n\r\n  event GrantAdmission(string passphrase);\r\n\r\n  // Set the address of theCyber contract.\r\n  address private constant THECYBERADDRESS_ = 0x97A99C819544AD0617F48379840941eFbe1bfAE1;\r\n\r\n  modifier membersOnly() {\r\n    // Only allow transactions originating from theCyber contract.\r\n    require(msg.sender == THECYBERADDRESS_);\r\n    _;\r\n  }\r\n\r\n  // This function is called by the `passMessage` method from theCyber contract.\r\n  function theCyberMessage(string _passphrase) public membersOnly {\r\n    // Log the message that will grant admission into the clubhouse or event.\r\n    GrantAdmission(_passphrase);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_passphrase\",\"type\":\"string\"}],\"name\":\"theCyberMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"passphrase\",\"type\":\"string\"}],\"name\":\"GrantAdmission\",\"type\":\"event\"}]","ContractName":"theCyberClubhouse","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://304d40977140c7321bc9e32bbafbaf928bc7e578746a1aa38bad63b6636170cc"}]}