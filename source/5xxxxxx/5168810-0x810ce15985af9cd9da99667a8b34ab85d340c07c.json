{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.20;\r\n/**\r\n* @title ICO CONTRACT\r\n* @dev ERC-20 Token Standard Compliant\r\n* @author Fares A. Akel C. f.antonio.akel@gmail.com\r\n*/\r\n\r\n/**\r\n * @title SafeMath by OpenZeppelin\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract token {\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 value);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n\r\n    }\r\n\r\ncontract ICO {\r\n    using SafeMath for uint256;\r\n    //This ico have 5 states\r\n    enum State {\r\n        preico,\r\n        week1,\r\n        week2,\r\n        week3,\r\n        week4,\r\n        week5,\r\n        week6,\r\n        week7,\r\n        Successful\r\n    }\r\n    //public variables\r\n    State public state = State.preico; //Set initial stage\r\n    uint256 public startTime = now; //block-time when it was deployed\r\n    uint256 public rate;\r\n    uint256 public totalRaised; //eth in wei\r\n    uint256 public totalDistributed; //tokens\r\n    uint256 public totalContributors;\r\n    uint256 public ICOdeadline;\r\n    uint256 public completedAt;\r\n    token public tokenReward;\r\n    address public creator;\r\n    string public campaignUrl;\r\n    string public version = '1';\r\n\r\n    //events for log\r\n    event LogFundingReceived(address _addr, uint _amount, uint _currentTotal);\r\n    event LogBeneficiaryPaid(address _beneficiaryAddress);\r\n    event LogFundingSuccessful(uint _totalRaised);\r\n    event LogFunderInitialized(\r\n        address _creator,\r\n        string _url,\r\n        uint256 _ICOdeadline);\r\n    event LogContributorsPayout(address _addr, uint _amount);\r\n\r\n    modifier notFinished() {\r\n        require(state != State.Successful);\r\n        _;\r\n    }\r\n    /**\r\n    * @notice ICO constructor\r\n    * @param _campaignUrl is the ICO _url\r\n    * @param _addressOfTokenUsedAsReward is the token totalDistributed\r\n    */\r\n    function ICO (\r\n        string _campaignUrl,\r\n        token _addressOfTokenUsedAsReward) public {\r\n        require(_addressOfTokenUsedAsReward!=address(0));\r\n\r\n        creator = msg.sender;\r\n        campaignUrl = _campaignUrl;\r\n        tokenReward = _addressOfTokenUsedAsReward;\r\n        rate = 3000;\r\n        ICOdeadline = startTime.add(64 days); //9 weeks\r\n\r\n        LogFunderInitialized(\r\n            creator,\r\n            campaignUrl,\r\n            ICOdeadline);\r\n    }\r\n\r\n    /**\r\n    * @notice contribution handler\r\n    */\r\n    function contribute() public notFinished payable {\r\n\r\n        uint256 tokenBought = 0;\r\n\r\n        totalRaised = totalRaised.add(msg.value);\r\n        totalContributors = totalContributors.add(1);\r\n\r\n        tokenBought = msg.value.mul(rate);\r\n\r\n        //Rate of exchange depends on stage\r\n        if (state == State.preico){\r\n\r\n            tokenBought = tokenBought.mul(14);\r\n            tokenBought = tokenBought.div(10); //14/10 = 1.4 = 140%\r\n        \r\n        } else if (state == State.week1){\r\n\r\n            tokenBought = tokenBought.mul(13);\r\n            tokenBought = tokenBought.div(10); //13/10 = 1.3 = 130%\r\n\r\n        } else if (state == State.week2){\r\n\r\n            tokenBought = tokenBought.mul(125);\r\n            tokenBought = tokenBought.div(100); //125/100 = 1.25 = 125%\r\n\r\n        } else if (state == State.week3){\r\n\r\n            tokenBought = tokenBought.mul(12);\r\n            tokenBought = tokenBought.div(10); //12/10 = 1.2 = 120%\r\n\r\n        } else if (state == State.week4){\r\n\r\n            tokenBought = tokenBought.mul(115);\r\n            tokenBought = tokenBought.div(100); //115/100 = 1.15 = 115%\r\n\r\n        } else if (state == State.week5){\r\n\r\n            tokenBought = tokenBought.mul(11);\r\n            tokenBought = tokenBought.div(10); //11/10 = 1.10 = 110%\r\n\r\n        } else if (state == State.week6){\r\n\r\n            tokenBought = tokenBought.mul(105);\r\n            tokenBought = tokenBought.div(100); //105/100 = 1.05 = 105%\r\n\r\n        }\r\n\r\n        totalDistributed = totalDistributed.add(tokenBought);\r\n        \r\n        require(creator.send(msg.value));\r\n        tokenReward.transfer(msg.sender, tokenBought);\r\n\r\n        LogBeneficiaryPaid(creator);\r\n        LogFundingReceived(msg.sender, msg.value, totalRaised);\r\n        LogContributorsPayout(msg.sender, tokenBought);\r\n        \r\n        checkIfFundingCompleteOrExpired();\r\n    }\r\n\r\n    /**\r\n    * @notice check status\r\n    */\r\n    function checkIfFundingCompleteOrExpired() public {\r\n\r\n        if(state == State.preico && now > startTime.add(14 days)){\r\n\r\n            state = State.week1;\r\n\r\n        } else if(state == State.week1 && now > startTime.add(21 days)){\r\n\r\n            state = State.week2;\r\n            \r\n        } else if(state == State.week2 && now > startTime.add(28 days)){\r\n\r\n            state = State.week3;\r\n            \r\n        } else if(state == State.week3 && now > startTime.add(35 days)){\r\n\r\n            state = State.week4;\r\n            \r\n        } else if(state == State.week4 && now > startTime.add(42 days)){\r\n\r\n            state = State.week5;\r\n            \r\n        } else if(state == State.week5 && now > startTime.add(49 days)){\r\n\r\n            state = State.week6;\r\n            \r\n        } else if(state == State.week6 && now > startTime.add(56 days)){\r\n\r\n            state = State.week7;\r\n            \r\n        } else if(now > ICOdeadline && state!=State.Successful ) { //if we reach ico deadline and its not Successful yet\r\n\r\n            state = State.Successful; //ico becomes Successful\r\n            completedAt = now; //ICO is complete\r\n\r\n            LogFundingSuccessful(totalRaised); //we log the finish\r\n            finished(); //and execute closure\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @notice closure handler\r\n    */\r\n    function finished() public { //When finished eth are transfered to creator\r\n\r\n        require(state == State.Successful);\r\n        uint256 remanent = tokenReward.balanceOf(this);\r\n\r\n        tokenReward.transfer(creator,remanent);\r\n        LogContributorsPayout(creator, remanent);\r\n\r\n    }\r\n\r\n    /*\r\n    * @dev Direct payments handle\r\n    */\r\n\r\n    function () public payable {\r\n        \r\n        contribute();\r\n\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"completedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkIfFundingCompleteOrExpired\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOdeadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finished\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalContributors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"campaignUrl\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_campaignUrl\",\"type\":\"string\"},{\"name\":\"_addressOfTokenUsedAsReward\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_currentTotal\",\"type\":\"uint256\"}],\"name\":\"LogFundingReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_beneficiaryAddress\",\"type\":\"address\"}],\"name\":\"LogBeneficiaryPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_totalRaised\",\"type\":\"uint256\"}],\"name\":\"LogFundingSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_url\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_ICOdeadline\",\"type\":\"uint256\"}],\"name\":\"LogFunderInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"LogContributorsPayout\",\"type\":\"event\"}]","ContractName":"ICO","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000abf1411106314b22307ef99c6f8e7d39775b0a95000000000000000000000000000000000000000000000000000000000000001668747470733a2f2f657175697479626173652e636f2f00000000000000000000","Library":"","SwarmSource":"bzzr://1b98bc589299116563974e35e84feabc4355fca7367a5e31653c1ec637c70172"}]}