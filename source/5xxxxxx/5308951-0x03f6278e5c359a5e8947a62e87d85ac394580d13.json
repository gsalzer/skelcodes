{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\n\r\nlibrary SafeMath {\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(a <= c);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tassert(a >= b);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a / b;\r\n\t}\r\n}\r\n\r\n\r\ncontract AuctusStepVesting {\r\n\tusing SafeMath for uint256;\r\n\r\n\taddress public beneficiary;\r\n\tuint256 public start;\r\n\tuint256 public cliff;\r\n\tuint256 public steps;\r\n\r\n\tuint256 public releasedSteps;\r\n\tuint256 public releasedAmount;\r\n\tuint256 public remainingAmount;\r\n\r\n\tevent Released(uint256 step, uint256 amount);\r\n\r\n\t/**\r\n\t* @dev Creates a vesting contract that vests its balance to the _beneficiary\r\n\t* The amount is released gradually in steps\r\n\t* @param _beneficiary address of the beneficiary to whom vested are transferred\r\n\t* @param _start unix time that starts to apply the vesting rules\r\n\t* @param _cliff duration in seconds of the cliff in which will begin to vest and between the steps\r\n\t* @param _steps total number of steps to release all the balance\r\n\t*/\r\n\tfunction AuctusStepVesting(address _beneficiary, uint256 _start, uint256 _cliff, uint256 _steps) public {\r\n\t\trequire(_beneficiary != address(0));\r\n\t\trequire(_steps > 0);\r\n\t\trequire(_cliff > 0);\r\n\r\n\t\tbeneficiary = _beneficiary;\r\n\t\tcliff = _cliff;\r\n\t\tstart = _start;\r\n\t\tsteps = _steps;\r\n\t}\r\n\r\n\tfunction transfer(uint256 amount) internal;\r\n\r\n\t/**\r\n\t* @notice Transfers vested tokens to beneficiary.\r\n\t*/\r\n\tfunction release() public {\r\n\t\tuint256 unreleased = getAllowedStepAmount();\r\n\r\n\t\trequire(unreleased > 0);\r\n\r\n\t\treleasedAmount = releasedAmount.add(unreleased);\r\n\t\tremainingAmount = remainingAmount.sub(unreleased);\r\n\t\tif (remainingAmount == 0) {\r\n\t\t\treleasedSteps = steps;\r\n\t\t} else {\r\n\t\t\treleasedSteps = releasedSteps + 1;\r\n\t\t}\r\n\r\n\t\ttransfer(unreleased);\r\n\r\n\t\temit Released(releasedSteps, unreleased);\r\n\t}\r\n\r\n\tfunction getAllowedStepAmount() public view returns (uint256) {\r\n\t\tif (remainingAmount == 0) {\r\n\t\t\treturn 0;\r\n\t\t} else if (now < start) {\r\n\t\t\treturn 0;\r\n\t\t} else {\r\n\t\t\tuint256 secondsFromTheBeginning = now.sub(start);\r\n\t\t\tif (secondsFromTheBeginning < cliff) {\r\n\t\t\t\treturn 0;\r\n\t\t\t} else {\r\n\t\t\t\tuint256 stepsAllowed = secondsFromTheBeginning.div(cliff);\r\n\t\t\t\tif (stepsAllowed >= steps) {\r\n\t\t\t\t\treturn remainingAmount;\r\n\t\t\t\t} else if (releasedSteps == stepsAllowed) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn totalControlledBalance().div(steps);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction totalControlledBalance() public view returns (uint256) {\r\n\t\treturn remainingAmount.add(releasedAmount);\r\n\t}\r\n}\r\n\r\n\r\ncontract AuctusEtherVesting is AuctusStepVesting {\r\n\tfunction AuctusEtherVesting(address _beneficiary, uint256 _start, uint256 _cliff, uint256 _steps) \r\n\t\tpublic \r\n\t\tAuctusStepVesting(_beneficiary, _start, _cliff, _steps) \r\n\t{\r\n\t}\r\n\r\n\tfunction transfer(uint256 amount) internal {\r\n\t\tbeneficiary.transfer(amount);\r\n\t}\r\n\r\n\tfunction () payable public {\r\n\t\tremainingAmount = remainingAmount.add(msg.value);\r\n\t}\r\n}\r\n\r\n\r\ncontract AuctusToken {\r\n\tfunction transfer(address to, uint256 value) public returns (bool);\r\n}\r\n\r\n\r\ncontract ContractReceiver {\r\n\tfunction tokenFallback(address from, uint256 value, bytes data) public;\r\n}\r\n\r\n\r\ncontract AuctusTokenVesting is AuctusStepVesting, ContractReceiver {\r\n\taddress public auctusTokenAddress = 0xfD89de68b246eB3e21B06e9B65450AC28D222488;\r\n\r\n\tfunction AuctusTokenVesting(address _beneficiary, uint256 _start, uint256 _cliff, uint256 _steps) \r\n\t\tpublic \r\n\t\tAuctusStepVesting(_beneficiary, _start, _cliff, _steps) \r\n\t{\r\n\t}\r\n\r\n\tfunction transfer(uint256 amount) internal {\r\n\t\tassert(AuctusToken(auctusTokenAddress).transfer(beneficiary, amount));\r\n\t}\r\n\r\n\tfunction tokenFallback(address from, uint256 value, bytes) public {\r\n\t\trequire(msg.sender == auctusTokenAddress);\r\n\t\tremainingAmount = remainingAmount.add(value);\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"cliff\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auctusTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalControlledBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releasedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"steps\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllowedStepAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releasedSteps\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remainingAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_start\",\"type\":\"uint256\"},{\"name\":\"_cliff\",\"type\":\"uint256\"},{\"name\":\"_steps\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"step\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"}]","ContractName":"AuctusTokenVesting","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000006c89cc03036193d52e9b8386413b545184bdab99000000000000000000000000000000000000000000000000000000005ac02100000000000000000000000000000000000000000000000000000000000076a7000000000000000000000000000000000000000000000000000000000000000002","Library":"","SwarmSource":"bzzr://81559b31c4b64adec4127a8ccb85b2b1721509b1dc0d39135d8979d4d4062827"}]}