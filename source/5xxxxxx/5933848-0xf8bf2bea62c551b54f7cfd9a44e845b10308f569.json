{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\ncontract owned {\r\n    address public owner;\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract ProVisionRaffle is owned {\r\n    \r\n    uint public Raffle_ID;\r\n    string public Raffle_Prize;\r\n    uint public Total_Entries;\r\n    bool public Allow_Entries;\r\n    bool public Raffle_Finished;\r\n    address public Winner;\r\n    uint public Winning_Entry;\r\n    uint public Date_Started;\r\n    uint public Date_Finished;\r\n    \r\n    address[] public Raffle_Entries;\r\n    mapping (address => bool) public Address_Submitted;\r\n    \r\n    event RaffleWinner(address target, uint TotalEntries);\r\n    \r\n    constructor() public {\r\n        Raffle_ID = 70935284;\r\n        Raffle_Prize = \"iPhone X\";\r\n        Allow_Entries = true;       \r\n        Raffle_Finished = false;\r\n        Winning_Entry = 0;\r\n        Total_Entries = 0;\r\n        Date_Started = block.timestamp;\r\n    }\r\n\r\n    function addEntry(address _target) onlyOwner public {\r\n        require(Allow_Entries == true);\r\n        require(Address_Submitted[_target] == false);\r\n        Raffle_Entries.push(_target);\r\n        Address_Submitted[_target] = true;\r\n        Total_Entries = Raffle_Entries.length;\r\n    }\r\n    function raffleDraw() onlyOwner public {\r\n        _raffleDraw();\r\n    }\r\n    function _raffleDraw() private {\r\n        require(Raffle_Finished == false);\r\n        uint winnerIndex = random();\r\n        Winning_Entry = winnerIndex;\r\n        Winner = Raffle_Entries[winnerIndex];\r\n        emit RaffleWinner(Winner, Raffle_Entries.length);\r\n        Raffle_Finished = true;\r\n        Allow_Entries = false;\r\n        Date_Finished = block.timestamp;\r\n    }\r\n    \r\n    function random() private view returns (uint8) {\r\n        return uint8(uint256(keccak256(abi.encodePacked(block.timestamp, block.difficulty))) % Raffle_Entries.length);\r\n    }\r\n    \r\n    function shutdown() onlyOwner public {\r\n        selfdestruct(owner);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Raffle_Entries\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Allow_Entries\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Raffle_Prize\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Raffle_ID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Date_Finished\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Winner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Total_Entries\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Winning_Entry\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"raffleDraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Raffle_Finished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Date_Started\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Address_Submitted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"addEntry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"shutdown\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"TotalEntries\",\"type\":\"uint256\"}],\"name\":\"RaffleWinner\",\"type\":\"event\"}]","ContractName":"ProVisionRaffle","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3faeccb34b1bfddfd9568e4e1859edb046dde83b0b395ff05069242acefc6b05"}]}