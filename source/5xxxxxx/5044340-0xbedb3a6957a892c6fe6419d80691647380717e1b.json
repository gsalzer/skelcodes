{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ninterface Token {\r\n    function transfer(address _to, uint256 _value) public;\r\n}\r\n\r\ncontract HFTCrowdsale {\r\n    \r\n    Token public tokenReward;\r\n    address public creator;\r\n    address public owner = 0x5D1598EF6a8ECFa953039BCdC628F027dbf0307F;\r\n\r\n    uint256[] public prices;\r\n    uint256[] public periods;\r\n    uint256 public price;\r\n    uint256 public period;\r\n    uint256 public amountSoldPerPeriod;\r\n\r\n    uint256 public startDate;\r\n    uint256 public endDate;\r\n\r\n    modifier isCreator() {\r\n        require(msg.sender == creator);\r\n        _;\r\n    }\r\n\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    function HFTCrowdsale() public {\r\n        creator = msg.sender;\r\n        startDate = 1522018800;\r\n        endDate = 1527548400;\r\n        prices = [4000, 3000, 2500, 2000, 1750, 1500];\r\n        periods = [1000000, 6000000, 6000000, 6000000, 6000000, 5000000];\r\n        price = 0;\r\n        period = 0;\r\n        tokenReward = Token(0x1493894bF2468f08fD232c5699B1C24dd33CeC18);\r\n    }\r\n\r\n    function setOwner(address _owner) isCreator public {\r\n        owner = _owner;      \r\n    }\r\n\r\n    function setCreator(address _creator) isCreator public {\r\n        creator = _creator;      \r\n    }\r\n\r\n    function setStartDate(uint256 _startDate) isCreator public {\r\n        startDate = _startDate;      \r\n    }\r\n\r\n    function setEndtDate(uint256 _endDate) isCreator public {\r\n        endDate = _endDate;      \r\n    }\r\n    \r\n    function addPrice(uint256 _price) isCreator public {\r\n        prices.push(_price);      \r\n    }\r\n\r\n    function updatePrice(uint256 index, uint256 _price) isCreator public {\r\n        prices[index] = _price;      \r\n    }\r\n\r\n    function addPeriod(uint256 _period) isCreator public {\r\n        periods.push(_period);\r\n    }\r\n\r\n    function updatePeriod(uint256 index, uint256 _period) isCreator public {\r\n        periods[index] = _period;      \r\n    }\r\n\r\n    function setPrice(uint256 _price) isCreator public {\r\n        price = _price;      \r\n    }\r\n\r\n    function setPeriod(uint256 _period) isCreator public {\r\n        period = _period;      \r\n    }\r\n\r\n    function setAmountSoldPerPeriod(uint256 _amountSoldPerPeriod) isCreator public {\r\n        amountSoldPerPeriod = _amountSoldPerPeriod;      \r\n    }\r\n\r\n    function setToken(address _token) isCreator public {\r\n        tokenReward = Token(_token);      \r\n    }\r\n\r\n    function sendToken(address _to, uint256 _value) isCreator public {\r\n        tokenReward.transfer(_to, _value);      \r\n    }\r\n\r\n    function kill() isCreator public {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    function () payable public {\r\n        require(msg.value > 0);\r\n        require(now > startDate);\r\n        require(now < endDate);\r\n        require(period < periods.length);\r\n        require(price < prices.length);\r\n\r\n        uint256 amount = msg.value * prices[price];\r\n        amountSoldPerPeriod += amount / 1 ether;\r\n\r\n        if (amountSoldPerPeriod > periods[period]) {\r\n            price += 1;\r\n            period += 1;\r\n            require(period < periods.length);\r\n            require(price < prices.length);\r\n            amountSoldPerPeriod = 0;\r\n            amount = msg.value * prices[price];\r\n            amountSoldPerPeriod += amount / 1 ether;\r\n        }\r\n        \r\n        tokenReward.transfer(msg.sender, amount);\r\n        FundTransfer(msg.sender, amount, true);\r\n        owner.transfer(msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"updatePeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"setPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"setCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amountSoldPerPeriod\",\"type\":\"uint256\"}],\"name\":\"setAmountSoldPerPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountSoldPerPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_endDate\",\"type\":\"uint256\"}],\"name\":\"setEndtDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"addPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_startDate\",\"type\":\"uint256\"}],\"name\":\"setStartDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prices\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"addPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"periods\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"HFTCrowdsale","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://626c5eb23570696e489d3e1fb3f262ffbed66073aa9f3c24dc029c7f3dd8ed20"}]}