{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\n// JohnVerToken Made By PinkCherry - insanityskan@gmail.com\r\n// JohnVerToken Request Question - koreacoinsolution@gmail.com\r\n\r\nlibrary SafeMath\r\n{\r\n  \tfunction mul(uint256 a, uint256 b) internal pure returns (uint256)\r\n    {\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\r\n\t\treturn c;\r\n  \t}\r\n\r\n  \tfunction div(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a / b;\r\n\r\n\t\treturn c;\r\n  \t}\r\n\r\n  \tfunction sub(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tassert(b <= a);\r\n\r\n\t\treturn a - b;\r\n  \t}\r\n\r\n  \tfunction add(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\r\n\t\treturn c;\r\n  \t}\r\n}\r\n\r\n\r\ncontract OwnerHelper\r\n{\r\n  \taddress public owner;\r\n\r\n  \tevent OwnerTransferPropose(address indexed _from, address indexed _to);\r\n\r\n  \tmodifier onlyOwner\r\n\t{\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n  \t}\r\n\r\n  \tfunction OwnerHelper() public\r\n\t{\r\n\t\towner = msg.sender;\r\n  \t}\r\n\r\n  \tfunction transferOwnership(address _to) onlyOwner public\r\n\t{\r\n        require(_to != owner);\r\n\t\trequire(_to != address(0x0));\r\n\t\towner = _to;\r\n\t\tOwnerTransferPropose(owner, _to);\r\n  \t}\r\n\r\n}\r\n\r\n\r\ncontract ERC20Interface\r\n{\r\n  \tevent Transfer(address indexed _from, address indexed _to, uint _value);\r\n  \tevent Approval(address indexed _owner, address indexed _spender, uint _value);\r\n\r\n  \tfunction totalSupply() public constant returns (uint);\r\n  \tfunction balanceOf(address _owner) public constant returns (uint balance);\r\n  \tfunction transfer(address _to, uint _value) public returns (bool success);\r\n  \tfunction transferFrom(address _from, address _to, uint _value) public returns (bool success);\r\n  \tfunction approve(address _spender, uint _value) public returns (bool success);\r\n  \tfunction allowance(address _owner, address _spender) public constant returns (uint remaining);\r\n}\r\n\r\n\r\ncontract ERC20Token is ERC20Interface, OwnerHelper\r\n{\r\n  \tusing SafeMath for uint;\r\n\r\n  \tuint public tokensIssuedTotal = 0;\r\n  \taddress public constant burnAddress = 0;\r\n\r\n  \tmapping(address => uint) balances;\r\n  \tmapping(address => mapping (address => uint)) allowed;\r\n\r\n  \tfunction totalSupply() public constant returns (uint)\r\n\t{\r\n\t\treturn tokensIssuedTotal;\r\n  \t}\r\n\r\n  \tfunction balanceOf(address _owner) public constant returns (uint balance)\r\n\t{\r\n\t\treturn balances[_owner];\r\n  \t}\r\n\r\n\tfunction transfer(address _to, uint _amount) public returns (bool success)\r\n\t{\r\n\t\trequire( balances[msg.sender] >= _amount );\r\n\r\n\t    balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n\t\tbalances[_to]        = balances[_to].add(_amount);\r\n\r\n\t\tTransfer(msg.sender, _to, _amount);\r\n    \r\n\t\treturn true;\r\n  \t}\r\n\r\n  \tfunction approve(address _spender, uint _amount) public returns (bool success)\r\n\t{\r\n\t\trequire ( balances[msg.sender] >= _amount );\r\n\r\n\t\tallowed[msg.sender][_spender] = _amount;\r\n    \t\t\r\n\t\tApproval(msg.sender, _spender, _amount);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n  \tfunction transferFrom(address _from, address _to, uint _amount) public returns (bool success)\r\n\t{\r\n\t\trequire( balances[_from] >= _amount );\r\n\t\trequire( allowed[_from][msg.sender] >= _amount );\r\n\t\tbalances[_from]            = balances[_from].sub(_amount);\r\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n\t\tbalances[_to]              = balances[_to].add(_amount);\r\n\r\n\t\tTransfer(_from, _to, _amount);\r\n\t\treturn true;\r\n  \t}\r\n\r\n  \tfunction allowance(address _owner, address _spender) public constant returns (uint remaining)\r\n\t{\r\n\t\treturn allowed[_owner][_spender];\r\n  \t}\r\n}\r\n\r\ncontract JohnVerToken is ERC20Token\r\n{\r\n\tuint constant E18 = 10**18;\r\n\r\n  \tstring public constant name \t= \"JohnVerToken\";\r\n  \tstring public constant symbol \t= \"JVT\";\r\n  \tuint public constant decimals \t= 18;\r\n\r\n\taddress public wallet;\r\n\taddress public adminWallet;\r\n\r\n\tuint public constant totalTokenCap   = 7600000000 * E18;\r\n\tuint public constant icoTokenCap     = 4006662000 * E18;\r\n\tuint public constant mktTokenCap     = 3593338000 * E18;\r\n\r\n\tuint public tokenPerEth = 3000000 * E18;\r\n\r\n\tuint public constant privateSaleBonus\t = 50;\r\n\tuint public constant preSaleFirstBonus\t = 20;\r\n\tuint public constant preSaleSecondBonus  = 15;\r\n\tuint public constant mainSaleBonus  = 0;\r\n\t\r\n  \tuint public constant privateSaleEtherCap = 100 ether;\r\n  \tuint public constant preSaleFirstEtherCap = 200 ether;\r\n  \tuint public constant preSaleSecondEtherCap = 200 ether;\r\n  \tuint public constant mainSaleEtherCap = 7 ether;\r\n  \t\r\n  \tuint public constant dayToMinusToken = 3000 * E18;\r\n\tuint public constant dayToDate = 86400;\r\n\r\n  \tuint public constant privateSaleStartDate = 1519344000; // 2018-02-23 00:00 UTC\r\n  \tuint public constant privateSaleEndDate   = 1519862400; // 2018-03-01 00:00 UTC\r\n\r\n  \tuint public constant preSaleFirstStartDate = 1520208000; // 2018-03-05 00:00 UTC\r\n  \tuint public constant preSaleFirstEndDate   = 1520726400; // 2018-03-11 00:00 UTC\r\n\r\n  \tuint public constant preSaleSecondStartDate = 1521158400; // 2018-03-16 00:00 UTC\r\n  \tuint public constant preSaleSecondEndDate   = 1521676800; // 2018-03-22 00:00 UTC\r\n\r\n  \tuint public constant mainSaleStartDate = 1522022400; // 2018-03-26 00:00 UTC\r\n  \tuint public constant mainSaleEndDate   = 1531353600; // 2018-07-11 00:00 UTC\r\n\r\n\tuint public constant privateSaleMinEth  = 3 ether / 10; // 0.3 Ether\r\n\tuint public constant preSaleMinEth      = 2 ether / 10; // 0.2 Ether\r\n\tuint public constant mainSaleMinEth     = 1 ether / 10; // 0.1 Ether\r\n\r\n  \tuint public icoEtherReceivedTotal = 0;\r\n  \tuint public icoEtherReceivedPrivateSale = 0;\r\n  \tuint public icoEtherReceivedPreFirstSale = 0;\r\n  \tuint public icoEtherReceivedPreSecondSale = 0;\r\n  \tuint public icoEtherReceivedMainSale = 0;\r\n\tuint public icoEtherReceivedMainSaleDay = 0;\r\n\t\r\n\tuint public tokenIssuedToday = 0;\r\n\t\r\n    uint public tokenIssuedTotal        = 0;\r\n  \tuint public tokenIssuedPrivateIco   = 0;\r\n  \tuint public tokenIssuedPreFirstIco  = 0;\r\n  \tuint public tokenIssuedPreSecondIco = 0;\r\n  \tuint public tokenIssuedMainSaleIco  = 0;\r\n  \tuint public tokenIssuedMkt          = 0;\r\n\tuint public tokenIssuedAirDrop      = 0;\r\n\tuint public tokenIssuedLockUp       = 0;\r\n\r\n  \tmapping(address => uint) public icoEtherContributed;\r\n  \tmapping(address => uint) public icoTokenReceived;\r\n  \tmapping(address => bool) public refundClaimed;\r\n  \t\r\n \tevent WalletChange(address _newWallet);\r\n  \tevent AdminWalletChange(address _newAdminWallet);\r\n  \tevent TokenMinted(address indexed _owner, uint _tokens, uint _balance);\r\n  \tevent TokenAirDroped(address indexed _owner, uint _tokens, uint _balance);\r\n  \tevent TokenIssued(address indexed _owner, uint _tokens, uint _balance, uint _etherContributed);\r\n  \tevent Refund(address indexed _owner, uint _amount, uint _tokens);\r\n  \tevent LockRemove(address indexed _participant);\r\n\tevent WithDraw(address indexed _to, uint _amount);\r\n\tevent OwnerReclaim(address indexed _from, address indexed _owner, uint _amount);\r\n\r\n  \tfunction JohnVerToken() public\r\n\t{\r\n\t\trequire( icoTokenCap + mktTokenCap == totalTokenCap );\r\n\t\twallet = owner;\r\n\t\tadminWallet = owner;\r\n  \t}\r\n\r\n  \tfunction () payable public\r\n\t{\r\n    \tbuyToken();\r\n  \t}\r\n  \t\r\n  \tfunction atNow() public constant returns (uint)\r\n\t{\r\n\t\treturn now;\r\n  \t}\r\n\r\n  \tfunction buyToken() private\r\n\t{\r\n\t\tuint nowTime = atNow();\r\n\r\n\t\tuint saleTime = 0; // 1 : privateSale, 2 : preSaleFirst, 3 : preSaleSecond, 4 : mainSale\r\n\r\n\t\tuint minEth = 0;\r\n\t\tuint maxEth = 0;\r\n\r\n\t\tuint tokens = 0;\r\n\t\tuint tokenBonus = 0;\r\n\t\tuint tokenMinusPerEther = 0;\r\n\t\tuint etherCap = 0;\r\n\r\n\t\tuint mainSaleDay = 0;\r\n\t\t\r\n\t\tif (nowTime > privateSaleStartDate && nowTime < privateSaleEndDate)\r\n\t\t{\r\n\t\t\tsaleTime = 1;\r\n\t\t\tminEth = privateSaleMinEth;\r\n\t\t\ttokenBonus = privateSaleBonus;\r\n\t\t\tetherCap = privateSaleEtherCap;\r\n\t\t\tmaxEth = privateSaleEtherCap;\r\n\t\t}\r\n\r\n\t\tif (nowTime > preSaleFirstStartDate && nowTime < preSaleFirstEndDate)\r\n\t\t{\r\n\t\t\tsaleTime = 2;\r\n\t\t\tminEth = preSaleMinEth;\r\n\t\t\ttokenBonus = preSaleFirstBonus;\r\n\t\t\tetherCap = preSaleFirstEtherCap;\r\n\t\t\tmaxEth = preSaleFirstEtherCap;\r\n\t\t}\r\n\r\n\t\tif (nowTime > preSaleSecondStartDate && nowTime < preSaleSecondEndDate)\r\n\t\t{\r\n\t\t\tsaleTime = 3;\r\n\t\t\tminEth = preSaleMinEth;\r\n\t\t\ttokenBonus = preSaleSecondBonus;\r\n\t\t\tetherCap = preSaleSecondEtherCap;\r\n\t\t\tmaxEth = preSaleSecondEtherCap;\r\n\t\t}\r\n\r\n\t\tif (nowTime > mainSaleStartDate && nowTime < mainSaleEndDate)\r\n\t\t{\r\n\t\t\tsaleTime = 4;\r\n\t\t\tminEth = mainSaleMinEth;\r\n\t\t\tuint dateStartTime = 0;\r\n\t\t\tuint dateEndTime = 0;\r\n\t\t\t\r\n\t\t    for (uint i = 1; i <= 108; i++)\r\n\t\t    {\r\n\t\t        dateStartTime = 0;\r\n\t\t        dateStartTime = dateStartTime.add(i.sub(1));\r\n\t\t        dateStartTime = dateStartTime.mul(dayToDate);\r\n\t\t        dateStartTime = dateStartTime.add(mainSaleStartDate);\r\n\t\t        \r\n\t\t        dateEndTime = 0;\r\n\t\t        dateEndTime = dateEndTime.add(i.sub(1));\r\n\t\t        dateEndTime = dateEndTime.mul(dayToDate);\r\n\t\t        dateEndTime = dateEndTime.add(mainSaleEndDate);\r\n\t\t        \r\n  \t\t\t    if (nowTime > dateStartTime && nowTime < dateEndTime) \r\n\t\t\t    {\r\n\t\t\t    \tmainSaleDay = i;\r\n\t\t\t    }\r\n\t\t    }\r\n\t\t    \r\n\t\t    require( mainSaleDay != 0 );\r\n\t\t    \r\n\t\t    etherCap = mainSaleEtherCap;\r\n\t\t    maxEth = mainSaleEtherCap;\r\n\t\t    tokenMinusPerEther = tokenMinusPerEther.add(dayToMinusToken);\r\n\t\t    tokenMinusPerEther = tokenMinusPerEther.mul(mainSaleDay.sub(1));\r\n\t\t}\r\n\t\t\r\n\t\trequire( saleTime >= 1 && saleTime <= 4 );\r\n\t\trequire( msg.value >= minEth );\r\n\t\trequire( icoEtherContributed[msg.sender].add(msg.value) <= maxEth );\r\n\r\n\t\ttokens = tokenPerEth.mul(msg.value) / 1 ether;\r\n\t\ttokenMinusPerEther = tokenMinusPerEther.mul(msg.value) / 1 ether;\r\n      \ttokens = tokens.mul(100 + tokenBonus) / 100;\r\n      \ttokens = tokens.sub(tokenMinusPerEther);\r\n\r\n\t\tif(saleTime == 1)\r\n\t\t{\r\n\t\t    require( icoEtherReceivedPrivateSale.add(msg.value) <= etherCap );\r\n    \r\n\t\t    icoEtherReceivedPrivateSale = icoEtherReceivedPrivateSale.add(msg.value);\r\n\t\t    tokenIssuedPrivateIco = tokenIssuedPrivateIco.add(tokens);\r\n\t\t}\r\n\t\telse if(saleTime == 2)\r\n\t\t{\r\n\t\t    require( icoEtherReceivedPreFirstSale.add(msg.value) <= etherCap );\r\n    \r\n\t\t    icoEtherReceivedPreFirstSale = icoEtherReceivedPreFirstSale.add(msg.value);\r\n\t\t    tokenIssuedPreFirstIco = tokenIssuedPreFirstIco.add(tokens);\r\n\t\t}\r\n\t\telse if(saleTime == 3)\r\n\t\t{\r\n\t\t    require( icoEtherReceivedPreSecondSale.add(msg.value) <= etherCap );\r\n    \r\n\t\t    icoEtherReceivedPreSecondSale = icoEtherReceivedPreSecondSale.add(msg.value);\r\n\t\t    tokenIssuedPreSecondIco = tokenIssuedPreSecondIco.add(tokens);\r\n\t\t}\r\n\t\telse if(saleTime == 4)\r\n\t\t{\r\n\t\t    require( msg.value <= etherCap );\r\n\t\t    \r\n\t\t    if(tokenIssuedToday < mainSaleDay)\r\n\t\t    {\r\n\t\t        tokenIssuedToday = mainSaleDay;\r\n\t\t        icoEtherReceivedMainSaleDay = 0;\r\n\t\t    }\r\n\t\t    \r\n\t\t    require( icoEtherReceivedMainSaleDay.add(msg.value) <= etherCap );\r\n    \r\n\t\t    icoEtherReceivedMainSale = icoEtherReceivedMainSale.add(msg.value);\r\n\t\t    icoEtherReceivedMainSaleDay = icoEtherReceivedMainSaleDay.add(msg.value);\r\n\t\t    tokenIssuedMainSaleIco = tokenIssuedMainSaleIco.add(tokens);\r\n\t\t}\r\n\t\t\r\n\t\tbalances[msg.sender]         = balances[msg.sender].add(tokens);\r\n\t    icoTokenReceived[msg.sender] = icoTokenReceived[msg.sender].add(tokens);\r\n\t\ttokensIssuedTotal            = tokensIssuedTotal.add(tokens);\r\n\t\ticoEtherContributed[msg.sender] = icoEtherContributed[msg.sender].add(msg.value);\r\n    \r\n\t\tTransfer(0x0, msg.sender, tokens);\r\n\t\tTokenIssued(msg.sender, tokens, balances[msg.sender], msg.value);\r\n\r\n\t\twallet.transfer(this.balance);\r\n  \t}\r\n\r\n \tfunction isTransferable() public constant returns (bool transferable)\r\n\t{\r\n\t\tif ( atNow() < preSaleSecondEndDate )\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n  \t}\r\n\r\n  \tfunction changeWallet(address _wallet) onlyOwner public\r\n\t{\r\n    \t\trequire( _wallet != address(0x0) );\r\n    \t\twallet = _wallet;\r\n    \t\tWalletChange(wallet);\r\n  \t}\r\n\r\n  \tfunction changeAdminWallet(address _wallet) onlyOwner public\r\n\t{\r\n    \t\trequire( _wallet != address(0x0) );\r\n    \t\tadminWallet = _wallet;\r\n    \t\tAdminWalletChange(adminWallet);\r\n  \t}\r\n\r\n  \tfunction mintMarketing(address _participant) onlyOwner public\r\n\t{\r\n\t\tuint tokens = mktTokenCap.sub(tokenIssuedAirDrop);\r\n\t\t\r\n\t\tbalances[_participant] = balances[_participant].add(tokens);\r\n\t\t\r\n\t\ttokenIssuedMkt   = tokenIssuedMkt.add(tokens);\r\n\t\ttokenIssuedTotal = tokenIssuedTotal.add(tokens);\r\n\t\t\r\n\t\tTransfer(0x0, _participant, tokens);\r\n\t\tTokenMinted(_participant, tokens, balances[_participant]);\r\n  \t}\r\n\r\n  \tfunction mintLockUpTokens(address _participant) onlyOwner public\r\n\t{\r\n\t\trequire ( atNow() >= mainSaleEndDate );\r\n\t\t\r\n\t\tuint tokens = totalTokenCap.sub(tokenIssuedTotal);\r\n\t\t\r\n\t\tbalances[_participant] = balances[_participant].add(tokens);\r\n\t\t\r\n\t\ttokenIssuedLockUp = tokenIssuedLockUp.add(tokens);\r\n\t\ttokenIssuedTotal = tokenIssuedTotal.add(tokens);\r\n\t\t\r\n\t\tTransfer(0x0, _participant, tokens);\r\n\t\tTokenMinted(_participant, tokens, balances[_participant]);\r\n  \t}\r\n\r\n  \tfunction airDropOne(address _address, uint _amount) onlyOwner public\r\n  \t{\r\n  \t    uint tokens = _amount * E18;\r\n\t\t       \r\n\t\tbalances[_address] = balances[_address].add(tokens);\r\n\t\t\r\n\t\ttokenIssuedAirDrop = tokenIssuedAirDrop.add(tokens);\r\n        tokenIssuedTotal = tokenIssuedTotal.add(tokens);\r\n\t\t\r\n        Transfer(0x0, _address, tokens);\r\n        TokenAirDroped(_address, tokens, balances[_address]);\r\n  \t}\r\n\r\n  \tfunction airDropMultiple(address[] _addresses, uint[] _amounts) onlyOwner public\r\n  \t{\r\n\t\trequire( _addresses.length == _amounts.length );\r\n\t\t\r\n  \t    uint tokens = 0;\r\n  \t    \r\n\t\tfor (uint i = 0; i < _addresses.length; i++)\r\n\t\t{\r\n\t\t        tokens = _amounts[i] * E18;\r\n\t\t\t\t\r\n\t\t        balances[_addresses[i]] = balances[_addresses[i]].add(tokens);\r\n\t\t\r\n\t\t\t\ttokenIssuedAirDrop = tokenIssuedAirDrop.add(tokens);\r\n\t\t        tokenIssuedTotal = tokenIssuedTotal.add(tokens);\r\n\t\t\r\n\t\t        Transfer(0x0, _addresses[i], tokens);\r\n\t\t        TokenAirDroped(_addresses[i], tokens, balances[_addresses[i]]);\r\n\t\t}\r\n  \t}\r\n\r\n  \tfunction airDropMultipleSame(address[] _addresses, uint _amount) onlyOwner public\r\n  \t{\r\n  \t    uint tokens = _amount * E18;\r\n  \t    \r\n\t\tfor (uint i = 0; i < _addresses.length; i++)\r\n\t\t{\r\n\t\t        balances[_addresses[i]] = balances[_addresses[i]].add(tokens);\r\n\t\t\r\n\t\t\t\ttokenIssuedAirDrop = tokenIssuedAirDrop.add(tokens);\r\n\t\t        tokenIssuedTotal = tokenIssuedTotal.add(tokens);\r\n\t\t\r\n\t\t        Transfer(0x0, _addresses[i], tokens);\r\n\t\t        TokenAirDroped(_addresses[i], tokens, balances[_addresses[i]]);\r\n\t\t}\r\n  \t}\r\n  \t\r\n  \tfunction ownerWithdraw() external onlyOwner\r\n\t{\r\n\t\tuint amount = this.balance;\r\n\t\twallet.transfer(amount);\r\n\t\tWithDraw(msg.sender, amount);\r\n  \t}\r\n  \t\r\n  \tfunction transferAnyERC20Token(address tokenAddress, uint amount) onlyOwner public returns (bool success)\r\n\t{\r\n  \t\treturn ERC20Interface(tokenAddress).transfer(owner, amount);\r\n  \t}\r\n  \t\r\n  \tfunction transfer(address _to, uint _amount) public returns (bool success)\r\n\t{\r\n\t\trequire( isTransferable() );\r\n\t\t\r\n\t\treturn super.transfer(_to, _amount);\r\n  \t}\r\n  \t\r\n  \tfunction transferFrom(address _from, address _to, uint _amount) public returns (bool success)\r\n\t{\r\n\t\trequire( isTransferable() );\r\n\t\t\r\n\t\treturn super.transferFrom(_from, _to, _amount);\r\n  \t}\r\n\r\n  \tfunction transferMultiple(address[] _addresses, uint[] _amounts) external\r\n  \t{\r\n\t\trequire( isTransferable() );\r\n\t\trequire( _addresses.length == _amounts.length );\r\n\t\t\r\n\t\tfor (uint i = 0; i < _addresses.length; i++)\r\n\t\t{\r\n\t\t\tsuper.transfer(_addresses[i], _amounts[i]);\r\n\t\t}\r\n  \t}\r\n\r\n  \tfunction reclaimFunds() external\r\n\t{\r\n\t\tuint tokens;\r\n\t\tuint amount;\r\n\r\n\t\trequire( atNow() > preSaleSecondEndDate );\r\n\t\trequire( !refundClaimed[msg.sender] );\r\n\t\trequire( icoEtherContributed[msg.sender] > 0 );\r\n\r\n\t\ttokens = icoTokenReceived[msg.sender];\r\n\t\tamount = icoEtherContributed[msg.sender];\r\n\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(tokens);\r\n\t\ttokensIssuedTotal    = tokensIssuedTotal.sub(tokens);\r\n\r\n\t\trefundClaimed[msg.sender] = true;\r\n\r\n\t\tmsg.sender.transfer(amount);\r\n\r\n\t\tTransfer(msg.sender, 0x0, tokens);\r\n\t\tRefund(msg.sender, amount, tokens);\r\n  \t}\r\n  \t\r\n    function transferToOwner(address _from) onlyOwner public\r\n    {\r\n        uint amount = balanceOf(_from);\r\n        \r\n        balances[_from] = balances[_from].sub(amount);\r\n        balances[owner] = balances[owner].add(amount);\r\n        \r\n        Transfer(_from, owner, amount);\r\n        OwnerReclaim(_from, owner, amount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"privateSaleEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"airDropMultiple\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dayToDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleFirstEtherCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"icoTokenReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"privateSaleEtherCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isTransferable\",\"outputs\":[{\"name\":\"transferable\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"mintMarketing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleMinEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"icoEtherContributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEtherReceivedPreSecondSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedToday\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownerWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dayToMinusToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleFirstStartDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"changeAdminWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleSecondEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleSecondBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleStartDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"privateSaleMinEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleSecondEtherCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedMainSaleIco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedPrivateIco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleSecondStartDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"transferToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"atNow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mktTokenCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedAirDrop\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensIssuedTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleMinEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"privateSaleStartDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"privateSaleBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoTokenCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEtherReceivedPrivateSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"airDropOne\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEtherReceivedMainSaleDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"changeWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferMultiple\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleFirstEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEtherReceivedMainSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleFirstBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokenCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"refundClaimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"mintLockUpTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEtherReceivedTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEtherReceivedPreFirstSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleEtherCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reclaimFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedMkt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedLockUp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"airDropMultipleSame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedPreFirstIco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedPreSecondIco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"WalletChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newAdminWallet\",\"type\":\"address\"}],\"name\":\"AdminWalletChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"TokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"TokenAirDroped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_etherContributed\",\"type\":\"uint256\"}],\"name\":\"TokenIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"LockRemove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"WithDraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"OwnerReclaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnerTransferPropose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"JohnVerToken","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://00ac77cbe1d95660e7af4e67738aab05027e97dcaabb8ab8fc879c2edb4ffb95"}]}