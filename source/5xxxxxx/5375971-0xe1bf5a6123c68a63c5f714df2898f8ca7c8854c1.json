{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\ncontract Nine {\r\n  address public God;\r\n\r\n  function Nine() public {\r\n    God = msg.sender;\r\n  }\r\n\r\n  modifier onlyGod() {\r\n    require(msg.sender == God);\r\n    _;\r\n  }\r\n\r\n  function destroyTheUniverse () private {\r\n    selfdestruct(God);\r\n  }\r\n\r\n  address public agentAddress;\r\n  uint256 public nameValue = 10 finney;\r\n\r\n  function setAgent(address _newAgent) external onlyGod {\r\n    require(_newAgent != address(0));\r\n    agentAddress = _newAgent;\r\n  }\r\n\r\n  modifier onlyAgent() {\r\n    require(msg.sender == agentAddress);\r\n    _;\r\n  }\r\n\r\n  function withdrawBalance(uint256 amount) external onlyAgent {\r\n    msg.sender.transfer(amount <= 0 ? address(this).balance : amount);\r\n  }\r\n\r\n  function setNameValue(uint256 val) external onlyAgent {\r\n    nameValue = val;\r\n  }\r\n\r\n\r\n  string public constant name = \"TheNineBillionNamesOfGod\";\r\n  string public constant symbol = \"NOG\";\r\n  uint256 public constant totalSupply = 9000000000;\r\n\r\n  struct Name {\r\n    uint64 recordTime;\r\n  }\r\n\r\n\r\n  Name[] names;\r\n\r\n  mapping (uint256 => address) public nameIndexToOwner;\r\n\r\n  mapping (address => uint256) ownershipTokenCount;\r\n\r\n  event Transfer(address from, address to, uint256 tokenId);\r\n  event Record(address owner, uint256 nameId);\r\n\r\n  function _transfer(address _from, address _to, uint256 _tokenId) internal {\r\n    ownershipTokenCount[_to]++;\r\n\r\n    nameIndexToOwner[_tokenId] = _to;\r\n\r\n    if (_from != address(0)) {\r\n      ownershipTokenCount[_from]--;\r\n    }\r\n\r\n    emit Transfer(_from, _to, _tokenId);\r\n  }\r\n\r\n  function _recordName(address _owner)\r\n    internal\r\n    returns (uint)\r\n  {\r\n    Name memory _name = Name({recordTime: uint64(now)});\r\n    uint256 newNameId = names.push(_name) - 1;\r\n\r\n    require(newNameId == uint256(uint32(newNameId)));\r\n\r\n    emit Record(_owner,newNameId);\r\n\r\n    _transfer(0, _owner, newNameId);\r\n\r\n    if (names.length == totalSupply) {\r\n      destroyTheUniverse();\r\n    }\r\n\r\n    return newNameId;\r\n  }\r\n\r\n  function _owns(address _claimant, uint256 _tokenId) internal view returns (bool) {\r\n    return nameIndexToOwner[_tokenId] == _claimant;\r\n  }\r\n\r\n  function balanceOf(address _owner) public view returns (uint256 count) {\r\n    return ownershipTokenCount[_owner];\r\n  }\r\n\r\n\r\n  function transfer(\r\n                    address _to,\r\n                    uint256 _tokenId\r\n                    )\r\n    external\r\n  {\r\n    require(_to != address(0));\r\n\r\n    require(_to != address(this));\r\n\r\n    require(_owns(msg.sender, _tokenId));\r\n\r\n    _transfer(msg.sender, _to, _tokenId);\r\n  }\r\n\r\n\r\n  function recordNameCount() public view returns (uint) {\r\n    return names.length;\r\n  }\r\n\r\n  function ownerOf(uint256 _tokenId)\r\n    external\r\n    view\r\n    returns (address owner)\r\n  {\r\n    owner = nameIndexToOwner[_tokenId];\r\n\r\n    require(owner != address(0));\r\n  }\r\n\r\n  function tokensOfOwner(address _owner) external view returns(uint256[] ownerTokens) {\r\n    uint256 tokenCount = balanceOf(_owner);\r\n\r\n    if (tokenCount == 0) {\r\n      return new uint256[](0);\r\n    } else {\r\n      uint256[] memory result = new uint256[](tokenCount);\r\n      uint256 totalRecord = recordNameCount();\r\n      uint256 resultIndex = 0;\r\n\r\n      uint256 nId;\r\n\r\n      for (nId = 1; nId < totalRecord; nId++) {\r\n        if (nameIndexToOwner[nId] == _owner) {\r\n          result[resultIndex] = nId;\r\n          resultIndex++;\r\n        }\r\n      }\r\n\r\n      return result;\r\n    }\r\n  }\r\n\r\n\r\n  function getName(uint256 _id)\r\n    external\r\n    view\r\n    returns (uint256 recordTime) {\r\n    recordTime = uint256(names[_id].recordTime);\r\n  }\r\n\r\n  function tryToRecord(address _sender, uint256 _value) internal {\r\n    uint times = _value / nameValue;\r\n    for (uint i = 0; i < times; i++) {\r\n      _recordName(_sender);\r\n    }\r\n  }\r\n\r\n  function recordName() external payable {\r\n    tryToRecord(msg.sender, msg.value);\r\n  }\r\n\r\n  function() external payable {\r\n    tryToRecord(msg.sender, msg.value);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"God\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"setNameValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"agentAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"recordNameCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getName\",\"outputs\":[{\"name\":\"recordTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"name\":\"ownerTokens\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nameIndexToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"recordName\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nameValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAgent\",\"type\":\"address\"}],\"name\":\"setAgent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"nameId\",\"type\":\"uint256\"}],\"name\":\"Record\",\"type\":\"event\"}]","ContractName":"Nine","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://13c34cbfbda1f2f9f76c7a1971bd563907cb19c6662ea44c6c58d1d4c3e5b4a5"}]}