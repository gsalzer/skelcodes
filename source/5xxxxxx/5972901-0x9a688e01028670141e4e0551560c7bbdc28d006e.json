{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract SWAP{\r\n \r\n string public name=\"SWAP\";\r\n string public symbol=\"SWAP\";\r\n \r\n uint256 public totalSupply; \r\n uint256 public price = 50;\r\n uint256 public decimals = 18; \r\n\r\n address Owner;\r\n \r\n mapping (address => uint256) balances; \r\n \r\n function SWAP() public { \r\n Owner = msg.sender;\r\n name=\"SWAP\";\r\n symbol=\"SWAP\";\r\n totalSupply = 100000000000*10**18;\r\n balances[Owner] = totalSupply;\r\n }\r\n\r\n modifier onlyOwner(){\r\n require(msg.sender == Owner);\r\n _;\r\n }\r\n\r\n modifier validAddress(address _to){\r\n require(_to != address(0x00));\r\n _;\r\n }\r\n \r\n event Burn(address indexed from, uint256 value);\r\n event Transfer(address indexed from, address indexed to, uint256 value);\r\n event Withdraw(address to, uint amount);\r\n \r\n\r\n function setName(string _name) onlyOwner public returns (string){\r\n name = _name;\r\n return name;\r\n }\r\n\r\n function setPrice(uint256 _price) onlyOwner public returns (uint256){\r\n price = _price;\r\n return price;\r\n }\r\n\r\n function setDecimals(uint256 _decimals) onlyOwner public returns (uint256){\r\n decimals = _decimals;\r\n return decimals;\r\n }\r\n \r\n function balanceOf(address _owner) view public returns(uint256){\r\n return balances[_owner];\r\n }\r\n function getOwner() view public returns(address){\r\n return Owner;\r\n }\r\n \r\n function _transfer(address _from, address _to, uint _value) internal {\r\n require(_to != 0x0);\r\n require(balances[_from] >= _value);\r\n require(balances[_to] + _value >= balances[_to]);\r\n \r\n uint previousBalances = balances[_from] + balances[_to];\r\n \r\n balances[_from] -= _value;\r\n balances[_to] += _value;\r\n emit Transfer(_from, _to, _value);\r\n \r\n assert(balances[_from] + balances[_to] == previousBalances);\r\n }\r\n\r\n function transfer(address _to, uint256 _value) public {\r\n _transfer(msg.sender, _to, _value);\r\n }\r\n \r\n function () public payable {\r\n uint256 token = (msg.value*price)/10**decimals;\r\n if(msg.sender == Owner){\r\n totalSupply += token;\r\n balances[Owner] += token;\r\n }\r\n else{\r\n require(balances[Owner]>=token);\r\n _transfer(Owner, msg.sender, token);\r\n }\r\n }\r\n function create(uint256 _value) public onlyOwner returns (bool success) {\r\n totalSupply += _value;\r\n balances[Owner] += _value;\r\n return true;\r\n }\r\n \r\n function burn(uint256 _value) onlyOwner public returns (bool success) {\r\n require(balances[msg.sender] >= _value); \r\n balances[msg.sender] -= _value; \r\n totalSupply -= _value; \r\n emit Burn(msg.sender, _value);\r\n return true;\r\n }\r\n\r\n function withdrawAll() external onlyOwner{\r\n msg.sender.transfer(address(this).balance);\r\n emit Withdraw(msg.sender,address(this).balance);\r\n }\r\n\r\n function withdrawAmount(uint amount) external onlyOwner{\r\n msg.sender.transfer(amount);\r\n emit Withdraw(msg.sender,amount);\r\n }\r\n\r\n function sendEtherToAddress(address to, uint amount) external onlyOwner validAddress(to){\r\n to.transfer(amount);\r\n uint profit = amount/100;\r\n msg.sender.transfer(profit);\r\n }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"setDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendEtherToAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"}]","ContractName":"SWAP","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b5dbffc5424afef31401ae30cc257a19814e169bdd354b023587250dcac32b23"}]}