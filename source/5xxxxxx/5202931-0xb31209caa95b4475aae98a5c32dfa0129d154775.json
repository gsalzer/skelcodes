{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ninterface token {\r\n    function transferFrom(address _from, address _to, uint256 _value) public;\r\n}\r\n\r\ncontract RetailSale {\r\n    address public beneficiary;\r\n    uint public actualPrice;\r\n    uint public nextPrice;\r\n    uint public nextPriceDate = 0;\r\n    uint public periodStart;\r\n    uint public periodEnd;\r\n    uint public bonus = 0;\r\n    uint public bonusStart = 0;\r\n    uint public bonusEnd = 0;\r\n    uint public milestone = 0;\r\n    uint public milestoneBonus = 0;\r\n    bool public milestoneReached = true;\r\n    uint public minPurchase;\r\n    token public tokenReward;\r\n\r\n    event FundTransfer(address backer, uint amount, uint bonus, uint tokens);\r\n\r\n    /**\r\n     * Constrctor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    function RetailSale(\r\n        address _beneficiary,\r\n        address addressOfTokenUsedAsReward,\r\n        uint ethPriceInWei,\r\n        uint _minPurchase,\r\n        uint start,\r\n        uint end\r\n    ) public {\r\n        beneficiary = _beneficiary;\r\n        tokenReward = token(addressOfTokenUsedAsReward);\r\n        actualPrice = ethPriceInWei;\r\n        nextPrice = ethPriceInWei;\r\n        minPurchase = _minPurchase;\r\n        periodStart = start;\r\n        periodEnd = end;\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function()\r\n    payable\r\n    isOpen\r\n    aboveMinValue\r\n    public {\r\n        uint price = actualPrice;\r\n        if (now >= nextPriceDate) {\r\n            price = nextPrice;\r\n        }\r\n        uint vp = (msg.value * 1 ether) / price;\r\n        uint b = 0;\r\n        uint tokens = 0;\r\n        if (now >= bonusStart && now <= bonusEnd) {\r\n            b = bonus;\r\n        }\r\n        if (this.balance >= milestone && !milestoneReached) {\r\n            b = milestoneBonus;\r\n            milestoneReached = true;\r\n        }\r\n        if (b == 0) {\r\n            tokens = vp;\r\n        } else {\r\n            tokens = (vp + ((vp * b) / 100));\r\n        }\r\n        tokenReward.transferFrom(beneficiary, msg.sender, tokens);\r\n        FundTransfer(msg.sender, msg.value, b, tokens);\r\n    }\r\n\r\n    modifier aboveMinValue() {\r\n        require(msg.value >= minPurchase);\r\n        _;\r\n    }\r\n\r\n    modifier isOwner() {\r\n        require(msg.sender == beneficiary);\r\n        _;\r\n    }\r\n\r\n    modifier isClosed() {\r\n        require(!(now >= periodStart && now <= periodEnd));\r\n        _;\r\n    }\r\n\r\n    modifier isOpen() {\r\n        require(now >= periodStart && now <= periodEnd);\r\n        _;\r\n    }\r\n\r\n    modifier validPeriod(uint start, uint end){\r\n        require(start < end);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * Set next start date\r\n     * @param _start the next start date in seconds.\r\n     * @param _start the next end date in seconds.\r\n     */\r\n    function setNextPeriod(uint _start, uint _end)\r\n    isOwner\r\n    validPeriod(_start, _end)\r\n    public {\r\n        periodStart = _start;\r\n        periodEnd = _end;\r\n    }\r\n\r\n    /**\r\n     * Set the new min purchase value\r\n     * @param _minPurchase the new minpurchase value in wei.\r\n     */\r\n    function setMinPurchase(uint _minPurchase)\r\n    isOwner\r\n    public {\r\n        minPurchase = _minPurchase;\r\n    }\r\n\r\n    /**\r\n     * Change the bonus percentage\r\n     * @param _bonus the new bonus percentage.\r\n     * @param _bonusStart When the bonus starts in seconds.\r\n     * @param _bonusEnd When the bonus ends in seconds.\r\n     */\r\n    function changeBonus(uint _bonus, uint _bonusStart, uint _bonusEnd)\r\n    isOwner\r\n    public {\r\n        bonus = _bonus;\r\n        bonusStart = _bonusStart;\r\n        bonusEnd = _bonusEnd;\r\n    }\r\n\r\n    /**\r\n     * Change the next milestone\r\n     * @param _milestone The next milestone amount in wei\r\n     * @param _milestoneBonus The bonus of the next milestone\r\n     */\r\n    function setNextMilestone(uint _milestone, uint _milestoneBonus)\r\n    isOwner\r\n    public {\r\n        milestone = _milestone;\r\n        milestoneBonus = _milestoneBonus;\r\n        milestoneReached = false;\r\n    }\r\n\r\n    /**\r\n     * Set the next price\r\n     * @param _price The next eth price in wei\r\n     * @param _priceDate The date in second when the next price start\r\n     */\r\n    function setNextPrice(uint _price, uint _priceDate)\r\n    isOwner\r\n    public {\r\n        actualPrice = nextPrice;\r\n        nextPrice = _price;\r\n        nextPriceDate = _priceDate;\r\n    }\r\n\r\n\r\n    /**\r\n     * Withdraw the funds\r\n     *\r\n     * Checks to see if goal or time limit has been reached, and if so, and the funding goal was reached,\r\n     * sends the entire amount to the beneficiary. If goal was not reached, each contributor can withdraw\r\n     * the amount they contributed.\r\n     */\r\n    function safeWithdrawal()\r\n    isClosed\r\n    isOwner\r\n    public {\r\n\r\n        beneficiary.transfer(this.balance);\r\n\r\n    }\r\n\r\n    function open() view public returns (bool) {\r\n        return (now >= periodStart && now <= periodEnd);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"nextPriceDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_start\",\"type\":\"uint256\"},{\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"setNextPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minPurchase\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"milestoneReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"periodEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"actualPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"milestoneBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bonus\",\"type\":\"uint256\"},{\"name\":\"_bonusStart\",\"type\":\"uint256\"},{\"name\":\"_bonusEnd\",\"type\":\"uint256\"}],\"name\":\"changeBonus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_priceDate\",\"type\":\"uint256\"}],\"name\":\"setNextPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"milestone\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minPurchase\",\"type\":\"uint256\"}],\"name\":\"setMinPurchase\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"periodStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_milestone\",\"type\":\"uint256\"},{\"name\":\"_milestoneBonus\",\"type\":\"uint256\"}],\"name\":\"setNextMilestone\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"open\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"},{\"name\":\"ethPriceInWei\",\"type\":\"uint256\"},{\"name\":\"_minPurchase\",\"type\":\"uint256\"},{\"name\":\"start\",\"type\":\"uint256\"},{\"name\":\"end\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bonus\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"RetailSale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000007a46c781b593068d5e987b191e9c2f7413e22aee000000000000000000000000905e337c6c8645263d3521205aa37bf4d034e74500000000000000000000000000000000000000000000000000001fd512913000000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000000000000000000000000000000000005a9ed720000000000000000000000000000000000000000000000000000000005ac7a790","Library":"","SwarmSource":"bzzr://7b7c30b671ccb5199bf1d3d14969dea1170176149872da3aadf703b07aaecc7a"}]}