{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.21;\r\n\r\ncontract ERC20Basic {\r\n\r\n    uint256 public totalSupply;\r\n    function balanceOf(address who) public view returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\t\r\n}\r\n\r\ncontract BasicToken is ERC20Basic {\r\n\t\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) public balances;\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        require(_value <= balances[msg.sender]);\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n\r\n    function allowance(address owner, address spender) public view returns (uint256);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\t\r\n}\r\n\r\ncontract StandardToken is ERC20, BasicToken {\r\n\r\n    mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        require(_value <= balances[_from]);\r\n        require(_value <= allowed[_from][msg.sender]);\r\n\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public view returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n        uint oldValue = allowed[msg.sender][_spender];\r\n        if (_subtractedValue > oldValue) {\r\n            allowed[msg.sender][_spender] = 0;\r\n        } else {\r\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n        }\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\ncontract CerttifyToken is StandardToken {\r\n\r\n    event Burn(address indexed burner, uint256 value, string message);\r\n    event IssueCert(bytes32 indexed id, address certIssuer, uint256 value, bytes cert);\r\n\r\n    string public name = \"Certtify Token\";\r\n    string public symbol = \"CTF\";\r\n    uint8 public decimals = 18;\r\n\r\n    address public deployer;\r\n    bool public lockup = true;\r\n\r\n    function CerttifyToken(uint256 maxSupply) public {\r\n        totalSupply = maxSupply.mul(10 ** uint256(decimals));\r\n        balances[msg.sender] = totalSupply;\r\n        deployer = msg.sender;\r\n    }\r\n\r\n    modifier afterLockup() {\r\n        require(!lockup || msg.sender == deployer);\r\n        _;\r\n    }\r\n\r\n    function unlock() public {\r\n        require(msg.sender == deployer);\r\n        lockup = false;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public afterLockup() returns (bool) {\r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public afterLockup() returns (bool) {\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n    function burn(uint256 _value, string _message) public afterLockup() {\r\n        require(_value > 0);\r\n        require(_value <= balances[msg.sender]);\r\n        address burner = msg.sender;\r\n        totalSupply = totalSupply.sub(_value);\r\n        balances[burner] = balances[burner].sub(_value);\r\n        emit Burn(burner, _value, _message);\r\n    }\r\n\r\n    function issueCert(uint256 _value, bytes _cert) external afterLockup() {\r\n        if (_value > 0) { \r\n            burn(_value, \"\");\r\n        }\r\n        emit IssueCert(keccak256(block.number, msg.sender, _value, _cert), msg.sender, _value, _cert);\r\n    }\r\n\r\n}\r\n\r\ncontract Ownable {\r\n  \r\n    address public owner;\r\n\r\n    function Ownable(address _owner) public {\r\n        owner = _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n}\r\n\r\ncontract Bounty is Ownable {\r\n\r\n    CerttifyToken public token;\r\n    mapping(address => uint256) public bounties;\r\n    bool public withdrawlEnabled = false;\r\n\r\n    event BountySet(address indexed beneficiary, uint256 amount);\r\n    event BountyWithdraw(address indexed beneficiary, uint256 amount);\r\n\r\n    function Bounty(CerttifyToken _token, address _admin) Ownable(_admin) public {\r\n        token = _token;\r\n    }\r\n\r\n    function setBounties(address[] beneficiaries, uint256[] amounts) external onlyOwner {\r\n        require(beneficiaries.length == amounts.length);\r\n        for (uint256 i = 0; i < beneficiaries.length; i++) {\r\n            bounties[beneficiaries[i]] = amounts[i];\r\n            emit BountySet(beneficiaries[i], amounts[i]);\r\n        }\r\n    }\r\n\r\n    function enableWithdrawl() external onlyOwner {\r\n        withdrawlEnabled = true;\r\n    }\r\n\r\n    function withdrawBounty() public {\r\n        require(withdrawlEnabled);\r\n        require(bounties[msg.sender] > 0);\r\n        uint256 bountyWithdrawn = bounties[msg.sender];\r\n        bounties[msg.sender] = 0;\r\n        emit BountyWithdraw(msg.sender, bountyWithdrawn);\r\n        token.transfer(msg.sender, bountyWithdrawn);\r\n    }\r\n\r\n    function () external {\r\n        withdrawBounty();\r\n    }\r\n\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n\t\r\n}\r\n\r\ncontract CerttifyCrowdsale is Ownable {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    CerttifyToken public token;\r\n    Bounty public bounty;\r\n\r\n    bool public icoSpecConfirmed = false;\r\n\r\n    uint256 public startTimeStage1 = 4102444799;\r\n    uint256 public startTimeStage2;\r\n    uint256 public startTimeStage3;\r\n    uint256 public endTime;\r\n\r\n    address public wallet;\r\n\r\n    uint256 public rateStage1;\r\n    uint256 public rateStage2;\r\n    uint256 public rateStage3;\r\n\r\n    uint256 public constant DECIMALS = 18;\r\n    uint256 public constant MAX_SUPPLY = 550000000;\r\n    uint256 public constant MAX_SUPPLY_DECIMAL = 550000000 * (10 ** DECIMALS);\r\n    uint256 public constant MAX_ALLOWED_BOUNTY = 16500000 * (10 ** DECIMALS);\r\n    uint256 public constant MAX_ALLOWED_PRE_SALE = 192500000 * (10 ** DECIMALS);\r\n    uint256 public constant MAX_ALLOWED_STAGE_1 = 82500000 * (10 ** DECIMALS);\r\n    uint256 public constant MAX_ALLOWED_STAGE_2 = 82500000 * (10 ** DECIMALS);\r\n    uint256 public constant MAX_ALLOWED_STAGE_3 = 55000000 * (10 ** DECIMALS);\r\n    uint256 public MAX_ALLOWED_BY_STAGE_1 = MAX_ALLOWED_PRE_SALE.add(MAX_ALLOWED_STAGE_1);\r\n    uint256 public MAX_ALLOWED_BY_STAGE_2 = MAX_ALLOWED_BY_STAGE_1.add(MAX_ALLOWED_STAGE_2);\r\n    uint256 public MAX_ALLOWED_TOTAL =  MAX_ALLOWED_BY_STAGE_2.add(MAX_ALLOWED_STAGE_3);\r\n\r\n    uint256 public weiRaised;\r\n    uint256 public tokenSold;\r\n\r\n    bool public icoEnded;\r\n    \r\n    uint256 public founderTokenUnlockPhase1;\r\n    uint256 public founderTokenUnlockPhase2;\r\n    uint256 public founderTokenUnlockPhase3;\r\n    uint256 public founderTokenUnlockPhase4;\r\n\r\n    bool public founderTokenWithdrawnPhase1;\r\n    uint256 public founderWithdrawablePhase1;\r\n    bool public founderTokenWithdrawnPhase2;\r\n    uint256 public founderWithdrawablePhase2;\r\n    bool public founderTokenWithdrawnPhase3;\r\n    uint256 public founderWithdrawablePhase3;\r\n    bool public founderTokenWithdrawnPhase4;\r\n    uint256 public founderWithdrawablePhase4;\r\n\r\n    event TokenPurchase(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n    modifier onlyBeforeSpecConfirmed() {\r\n        require(!icoSpecConfirmed);\r\n        _;\r\n    }\r\n\r\n    modifier onlyAfterSpecConfirmed() {\r\n        require(icoSpecConfirmed);\r\n        _;\r\n    }\r\n\r\n    function CerttifyCrowdsale(address _wallet, address _owner, address _bountyAdmin) Ownable(_owner) public {\r\n        require(_wallet != address(0));\r\n        require(_owner != address(0));\r\n        require(_bountyAdmin != address(0));\r\n        token = createTokenContract();\r\n        bounty = createBountyContract(_bountyAdmin);\r\n        token.transfer(bounty, MAX_ALLOWED_BOUNTY);\r\n        wallet = _wallet;\r\n    }\r\n\r\n    function createTokenContract() internal returns (CerttifyToken) {\r\n        return new CerttifyToken(MAX_SUPPLY);\r\n    }\r\n\r\n    function createBountyContract(address admin) internal returns (Bounty) {\r\n        return new Bounty(token, admin);\r\n    }\r\n\r\n    function setICOSpec(uint256 _timestampStage1, uint256 _timestampStage2, uint256 _timestampStage3, uint256 _timestampEndTime, uint256 _weiCostOfTokenStage1, uint256 _weiCostOfTokenStage2, uint256 _weiCostOfTokenStage3, uint256 _founderTokenUnlockPhase1, uint256 _founderTokenUnlockPhase2, uint256 _founderTokenUnlockPhase3, uint256 _founderTokenUnlockPhase4) external onlyBeforeSpecConfirmed() onlyOwner {\r\n        require(_timestampStage1 > 0);\r\n        require(_timestampStage2 >= _timestampStage1);\r\n        require(_timestampStage3 >= _timestampStage2);\r\n        require(_timestampEndTime >= _timestampStage3);\r\n        require(_weiCostOfTokenStage1 > 0);\r\n        require(_weiCostOfTokenStage2 >= _weiCostOfTokenStage1);\r\n        require(_weiCostOfTokenStage3 >= _weiCostOfTokenStage2);\r\n        require(_founderTokenUnlockPhase1 > 0);\r\n        require(_founderTokenUnlockPhase2 >= _founderTokenUnlockPhase1);\r\n        require(_founderTokenUnlockPhase3 >= _founderTokenUnlockPhase2);\r\n        require(_founderTokenUnlockPhase4 >= _founderTokenUnlockPhase3);\r\n        startTimeStage1 = _timestampStage1;\r\n        startTimeStage2 = _timestampStage2;\r\n        startTimeStage3 = _timestampStage3;\r\n        endTime = _timestampEndTime;\r\n        rateStage1 = _weiCostOfTokenStage1;\r\n        rateStage2 = _weiCostOfTokenStage2;\r\n        rateStage3 = _weiCostOfTokenStage3;\r\n        founderTokenUnlockPhase1 = _founderTokenUnlockPhase1;\r\n        founderTokenUnlockPhase2 = _founderTokenUnlockPhase2;\r\n        founderTokenUnlockPhase3 = _founderTokenUnlockPhase3;\r\n        founderTokenUnlockPhase4 = _founderTokenUnlockPhase4;\r\n    }\r\n\r\n    function confirmICOSpec() external onlyBeforeSpecConfirmed() onlyOwner {\r\n        icoSpecConfirmed = true;\r\n    }\r\n\r\n    function () external payable {\r\n        buyTokens(msg.sender);\r\n    }\r\n\r\n    function buyTokens(address beneficiary) public payable onlyAfterSpecConfirmed() {\r\n        require(beneficiary != address(0));\r\n        require(validPurchase());\r\n        uint256 weiAmount = msg.value;\r\n        uint256 tokens = weiAmount.div(getCurrentRate()).mul(10 ** uint256(18));\r\n        require(checkCapNotReached(tokens));\r\n        weiRaised = weiRaised.add(weiAmount);\r\n        tokenSold = tokenSold.add(tokens);\r\n        forwardFunds();\r\n        token.transfer(beneficiary, tokens);\r\n        emit TokenPurchase(msg.sender, beneficiary, weiAmount, tokens);\r\n    }\r\n\r\n    function buyTokensPreSale(address beneficiary, uint256 tokens) public onlyOwner {\r\n        require(beneficiary != address(0));\r\n        require(tokens > 0);\r\n        require(tokenSold.add(tokens) <= MAX_ALLOWED_PRE_SALE);\r\n        require(getCurrentStage() == 0);\r\n        tokenSold = tokenSold.add(tokens);\r\n        token.transfer(beneficiary, tokens);\r\n        emit TokenPurchase(beneficiary, beneficiary, 0, tokens);\r\n    }\r\n\r\n    function postICO() public onlyAfterSpecConfirmed() onlyOwner {\r\n        require(hasEnded());\r\n        require(!icoEnded);\r\n        uint256 founderWithdrawableTotal = tokenSold.add(MAX_ALLOWED_BOUNTY).mul(22).div(78);\r\n        founderWithdrawablePhase1 = founderWithdrawableTotal.mul(10).div(22);\r\n        founderWithdrawablePhase2 = founderWithdrawableTotal.mul(4).div(22);\r\n        founderWithdrawablePhase3 = founderWithdrawableTotal.mul(4).div(22);\r\n        founderWithdrawablePhase4 = founderWithdrawableTotal.mul(4).div(22);\r\n        icoEnded = true;\r\n        uint256 tokenLeft = MAX_SUPPLY_DECIMAL.sub(tokenSold).sub(MAX_ALLOWED_BOUNTY).sub(founderWithdrawableTotal);\r\n        if (tokenLeft != 0) {\r\n            token.burn(tokenLeft, \"ICO_BURN_TOKEN_UNSOLD\");\r\n        }\r\n        token.unlock();\r\n    }\r\n\r\n    function founderWithdraw() public onlyAfterSpecConfirmed() onlyOwner {\r\n        require(icoEnded);\r\n        require(!founderTokenWithdrawnPhase4);\r\n        if (!founderTokenWithdrawnPhase1) {\r\n            require(now >= founderTokenUnlockPhase1);\r\n            founderTokenWithdrawnPhase1 = true;\r\n            token.transfer(owner, founderWithdrawablePhase1);\r\n        } else if (!founderTokenWithdrawnPhase2) {\r\n            require(now >= founderTokenUnlockPhase2);\r\n            founderTokenWithdrawnPhase2 = true;\r\n            token.transfer(owner, founderWithdrawablePhase2);\r\n        } else if (!founderTokenWithdrawnPhase3) {\r\n            require(now >= founderTokenUnlockPhase3);\r\n            founderTokenWithdrawnPhase3 = true;\r\n            token.transfer(owner, founderWithdrawablePhase3);\r\n        } else {\r\n            require(now >= founderTokenUnlockPhase4);\r\n            founderTokenWithdrawnPhase4 = true;\r\n            token.transfer(owner, founderWithdrawablePhase4);\r\n        }\r\n    }\r\n\r\n    function forwardFunds() internal {\r\n        wallet.transfer(msg.value);\r\n    }\r\n\r\n    function validPurchase() internal view returns (bool) {\r\n        bool withinPeriod = now >= startTimeStage1 && now < endTime;\r\n        bool nonZeroPurchase = msg.value != 0;\r\n        return withinPeriod && nonZeroPurchase;\r\n    }\r\n\r\n    function checkCapNotReached(uint256 tokenBuyReq) internal view returns (bool) {\r\n        return tokenSold.add(tokenBuyReq) <= MAX_ALLOWED_TOTAL;\r\n    }\r\n\r\n    function getCurrentStage() internal view returns (uint8) {\r\n        if (now < startTimeStage1) {\r\n            return 0;\r\n        } else if (now >= startTimeStage1 && now < startTimeStage2) {\r\n            return 1;\r\n        } else if (now >= startTimeStage2 && now < startTimeStage3) {\r\n            return 2;\r\n        } else {\r\n            return 3;\r\n        }\r\n    }\r\n\r\n    function getCurrentRateByStage() internal view returns (uint256) {\r\n        uint8 currentStage = getCurrentStage();\r\n        if (currentStage == 1) {\r\n            return rateStage1;\r\n        } else if (currentStage == 2) {\r\n            return rateStage2;\r\n        } else {\r\n            return rateStage3;\r\n        }\r\n    }\r\n\r\n    function getCurrentRateByTokenSold() internal view returns (uint256) {\r\n        if (tokenSold < MAX_ALLOWED_BY_STAGE_1) {\r\n            return rateStage1;\r\n        } else if (tokenSold < MAX_ALLOWED_BY_STAGE_2) {\r\n            return rateStage2;\r\n        } else {\r\n            return rateStage3;\r\n        }\r\n    }\r\n\r\n    function getCurrentRate() internal view returns (uint256) {\r\n        uint256 rateByStage = getCurrentRateByStage();\r\n        uint256 rateByTokenSold = getCurrentRateByTokenSold();\r\n        if (rateByStage > rateByTokenSold) {\r\n            return rateByStage;\r\n        } else {\r\n            return rateByTokenSold;\r\n        }\r\n    }\r\n\r\n    function hasEnded() public view returns (bool) {\r\n        return now >= endTime || tokenSold >= MAX_ALLOWED_TOTAL;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"confirmICOSpec\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"postICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_ALLOWED_BY_STAGE_1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTimeStage3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"buyTokensPreSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderWithdrawablePhase3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_timestampStage1\",\"type\":\"uint256\"},{\"name\":\"_timestampStage2\",\"type\":\"uint256\"},{\"name\":\"_timestampStage3\",\"type\":\"uint256\"},{\"name\":\"_timestampEndTime\",\"type\":\"uint256\"},{\"name\":\"_weiCostOfTokenStage1\",\"type\":\"uint256\"},{\"name\":\"_weiCostOfTokenStage2\",\"type\":\"uint256\"},{\"name\":\"_weiCostOfTokenStage3\",\"type\":\"uint256\"},{\"name\":\"_founderTokenUnlockPhase1\",\"type\":\"uint256\"},{\"name\":\"_founderTokenUnlockPhase2\",\"type\":\"uint256\"},{\"name\":\"_founderTokenUnlockPhase3\",\"type\":\"uint256\"},{\"name\":\"_founderTokenUnlockPhase4\",\"type\":\"uint256\"}],\"name\":\"setICOSpec\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_ALLOWED_BOUNTY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderTokenWithdrawnPhase1\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderTokenUnlockPhase3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderTokenUnlockPhase4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderTokenWithdrawnPhase3\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderTokenWithdrawnPhase2\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderWithdrawablePhase2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rateStage1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_ALLOWED_BY_STAGE_2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"founderWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bounty\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTimeStage1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderTokenUnlockPhase1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderTokenWithdrawnPhase4\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderWithdrawablePhase1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_ALLOWED_STAGE_2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTimeStage2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoSpecConfirmed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rateStage3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_ALLOWED_TOTAL\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rateStage2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderTokenUnlockPhase2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_ALLOWED_STAGE_3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderWithdrawablePhase4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_SUPPLY_DECIMAL\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_ALLOWED_PRE_SALE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_ALLOWED_STAGE_1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_bountyAdmin\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"}]","ContractName":"CerttifyCrowdsale","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000102A7ce6f5755bE0730F3eCFb05b8bFBE26e37C70000000000000000000000007e88309bc199e8d83fdd8e7b8465068d6d83de530000000000000000000000007126cb446ea014805ec56e5b620afc41039c1958","Library":"","SwarmSource":"bzzr://1acf99fd154a20a25f676990ef2fa3086c1c1b46724c2d0dd7f522184b02dca2"}]}