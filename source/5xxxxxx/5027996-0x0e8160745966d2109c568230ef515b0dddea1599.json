{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ninterface token {\r\n    function transferFrom(address _from, address _to, uint256 _value) public;\r\n}\r\n\r\ncontract CrowdSale {\r\n    address public beneficiary;\r\n    uint public fundingGoal;\r\n    uint public amountRaised;\r\n    uint public startTime;\r\n    uint public deadline;\r\n    uint public endFirstBonus;\r\n    uint public endSecondBonus;\r\n    uint public endThirdBonus;\r\n    uint public hardCap;\r\n    uint public price;\r\n    uint public minPurchase;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n    bool fundingGoalReached = false;\r\n    bool public crowdsaleClosed = false;\r\n\r\n    event GoalReached(address recipient, uint totalAmountRaised);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n    event CrowdsaleClose(uint totalAmountRaised, bool fundingGoalReached);\r\n\r\n    /**\r\n     * Constrctor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    function CrowdSale(\r\n        address ifSuccessfulSendTo,\r\n        address addressOfTokenUsedAsReward,\r\n        uint tokensPerEth,\r\n        uint _minPurchase,\r\n        uint fundingGoalInWei,\r\n        uint hardCapInWei,\r\n        uint startTimeInSeconds,\r\n        uint durationInMinutes,\r\n        uint _endFirstBonus,\r\n        uint _endSecondBonus,\r\n        uint _endThirdBonus\r\n    ) public {\r\n        beneficiary = ifSuccessfulSendTo;\r\n        tokenReward = token(addressOfTokenUsedAsReward);\r\n        price = tokensPerEth;\r\n        minPurchase = _minPurchase;\r\n        fundingGoal = fundingGoalInWei;\r\n        hardCap = hardCapInWei;\r\n        startTime = startTimeInSeconds;\r\n        deadline = startTimeInSeconds + durationInMinutes * 1 minutes;\r\n        endFirstBonus = _endFirstBonus;\r\n        endSecondBonus = _endSecondBonus;\r\n        endThirdBonus = _endThirdBonus;\r\n    }\r\n\r\n    /**\r\n     * Do purchase process\r\n     *\r\n     */\r\n    function purchase() internal {\r\n        uint amount = msg.value;\r\n        uint vp = amount * price;\r\n        uint tokens = ((vp + ((vp * getBonus()) / 100))) / 1 ether;\r\n        balanceOf[msg.sender] += amount;\r\n        amountRaised += amount;\r\n        tokenReward.transferFrom(beneficiary, msg.sender, tokens);\r\n        checkGoalReached();\r\n        FundTransfer(msg.sender, amount, true);\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function()\r\n    payable\r\n    isOpen\r\n    afterStart\r\n    hardCapNotReached\r\n    aboveMinValue\r\n    public {\r\n        purchase();\r\n    }\r\n\r\n    /**\r\n     * The function called only from shiftsale\r\n     *\r\n     */\r\n    function shiftSalePurchase()\r\n    payable\r\n    isOpen\r\n    afterStart\r\n    hardCapNotReached\r\n    aboveMinValue\r\n    public returns (bool success) {\r\n        purchase();\r\n        return true;\r\n    }\r\n\r\n    modifier afterStart() {\r\n        require(now >= startTime);\r\n        _;\r\n    }\r\n\r\n    modifier afterDeadline() {\r\n        require(now >= deadline);\r\n        _;\r\n    }\r\n\r\n    modifier previousDeadline() {\r\n        require(now <= deadline);\r\n        _;\r\n    }\r\n\r\n    modifier isOwner() {\r\n        require(msg.sender == beneficiary);\r\n        _;\r\n    }\r\n\r\n    modifier isClosed() {\r\n        require(crowdsaleClosed);\r\n        _;\r\n    }\r\n\r\n    modifier isOpen() {\r\n        require(!crowdsaleClosed);\r\n        _;\r\n    }\r\n\r\n    modifier hardCapNotReached() {\r\n        require(amountRaised < hardCap);\r\n        _;\r\n    }\r\n\r\n    modifier aboveMinValue() {\r\n        require(msg.value >= minPurchase);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * Check if goal was reached\r\n     *\r\n     */\r\n    function checkGoalReached() internal {\r\n        if (amountRaised >= fundingGoal && !fundingGoalReached) {\r\n            fundingGoalReached = true;\r\n            GoalReached(beneficiary, amountRaised);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Close the crowdsale\r\n     *\r\n     */\r\n    function closeCrowdsale()\r\n    isOwner\r\n    public {\r\n        crowdsaleClosed = true;\r\n        CrowdsaleClose(amountRaised, fundingGoalReached);\r\n    }\r\n\r\n    /**\r\n     * Change min purchase value\r\n     *\r\n     */\r\n    function setMinPurchaseValue(uint _minPurchase)\r\n    isOwner\r\n    public {\r\n        minPurchase = _minPurchase;\r\n    }\r\n\r\n    /**\r\n     * Withdraw the funds\r\n     *\r\n     * Checks to see if goal or time limit has been reached, and if so, and the funding goal was reached,\r\n     * sends the entire amount to the beneficiary. If goal was not reached, each contributor can withdraw\r\n     * the amount they contributed.\r\n     */\r\n    function safeWithdrawal()\r\n    afterDeadline\r\n    isClosed\r\n    public {\r\n        if (!fundingGoalReached) {\r\n            uint amount = balanceOf[msg.sender];\r\n            balanceOf[msg.sender] = 0;\r\n            if (amount > 0) {\r\n                if (msg.sender.send(amount)) {\r\n                    FundTransfer(msg.sender, amount, false);\r\n                } else {\r\n                    balanceOf[msg.sender] = amount;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (fundingGoalReached && beneficiary == msg.sender) {\r\n            if (beneficiary.send(amountRaised)) {\r\n                FundTransfer(beneficiary, amountRaised, false);\r\n            } else {\r\n                //If we fail to send the funds to beneficiary, unlock funders balance\r\n                fundingGoalReached = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getBonus() view public returns (uint) {\r\n        if (startTime <= now) {\r\n            if (now <= endFirstBonus) {\r\n                return 50;\r\n            } else if (now <= endSecondBonus) {\r\n                return 40;\r\n            } else if (now <= endThirdBonus) {\r\n                return 30;\r\n            } else {\r\n                return 20;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"endSecondBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minPurchase\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minPurchase\",\"type\":\"uint256\"}],\"name\":\"setMinPurchaseValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endFirstBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"shiftSalePurchase\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endThirdBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ifSuccessfulSendTo\",\"type\":\"address\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"},{\"name\":\"tokensPerEth\",\"type\":\"uint256\"},{\"name\":\"_minPurchase\",\"type\":\"uint256\"},{\"name\":\"fundingGoalInWei\",\"type\":\"uint256\"},{\"name\":\"hardCapInWei\",\"type\":\"uint256\"},{\"name\":\"startTimeInSeconds\",\"type\":\"uint256\"},{\"name\":\"durationInMinutes\",\"type\":\"uint256\"},{\"name\":\"_endFirstBonus\",\"type\":\"uint256\"},{\"name\":\"_endSecondBonus\",\"type\":\"uint256\"},{\"name\":\"_endThirdBonus\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalAmountRaised\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"totalAmountRaised\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fundingGoalReached\",\"type\":\"bool\"}],\"name\":\"CrowdsaleClose\",\"type\":\"event\"}]","ContractName":"CrowdSale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000007a46c781b593068d5e987b191e9c2f7413e22aee000000000000000000000000905e337c6c8645263d3521205aa37bf4d034e74500000000000000000000000000000000000000000000060cdc391bcc466db6db000000000000000000000000000000000000000000000000002386f26fc1000000000000000000000000000000000000000000000000001c75d6ae6e48140000000000000000000000000000000000000000000000000071d75ab9b920500000000000000000000000000000000000000000000000000000000000005a77f2e00000000000000000000000000000000000000000000000000000000000008700000000000000000000000000000000000000000000000000000000005a7d38e0000000000000000000000000000000000000000000000000000000005a827ee0000000000000000000000000000000000000000000000000000000005a87c4e0","Library":"","SwarmSource":"bzzr://3ba63b5ec43b3bc16f311435c771f62ab2006ba9c13cc3377f14d833f70ac525"}]}