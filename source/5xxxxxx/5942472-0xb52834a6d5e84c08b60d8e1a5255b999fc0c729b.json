{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18 ;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a / b;\r\n  }\r\n\r\n  \r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  \r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract ContractiumInterface {\r\n    function balanceOf(address who) public view returns (uint256);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function contractSpend(address _from, uint256 _value) public returns (bool);\r\n    function allowance(address _owner, address _spender) public view returns (uint256);\r\n    function owner() public view returns (address);\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  \r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract AirdropContractium is Ownable {\r\n    \r\n    \r\n    using SafeMath for uint256;\r\n    \r\n    //Contractium contract interface\r\n    ContractiumInterface ctuContract;\r\n\r\n    //Store addresses submitted\r\n    mapping(address => bool) submitted;\r\n    \r\n    uint8 public constant decimals = 18;\r\n    uint256 public constant INITIAL_AIRDROP = 20000000 * (10 ** uint256(decimals));\r\n    address public constant CTU_ADDRESS = 0x943ACa8ed65FBf188A7D369Cfc2BeE0aE435ee1B;\r\n    address public ctu_owner = 0x69f4965e77dFF568cF2f8877F2B39d636D581ae8;\r\n    \r\n    uint256 public reward = 200 * (10 ** uint256(decimals));\r\n    uint256 public remainAirdrop;\r\n   \r\n    event Submit(address _addr, bool _isSuccess);\r\n   \r\n    constructor() public {\r\n        owner = msg.sender;\r\n        remainAirdrop = INITIAL_AIRDROP;\r\n        ctuContract = ContractiumInterface(CTU_ADDRESS);\r\n    }\r\n    \r\n    function getAirdrop() public isNotSubmitted isRemain returns (bool) {\r\n        return submit(msg.sender);\r\n    }\r\n    \r\n    function batchSubmit(address[] _addresses) public onlyOwner {\r\n        for(uint i; i < _addresses.length; i++) {\r\n            if (!submitted[_addresses[i]]) {\r\n                submit(_addresses[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    function submit(address _addr) private returns (bool) {\r\n        address _from = ctu_owner;\r\n        address _to = _addr;\r\n        uint256 _value = uint256(reward);\r\n        bool isSuccess = ctuContract.transferFrom(_from, _to, _value);\r\n        \r\n        if (isSuccess) {\r\n            submitted[_to] = true;\r\n            remainAirdrop = remainAirdrop.sub(_value);\r\n        }\r\n        \r\n        emit Submit(_addr, isSuccess);\r\n        \r\n        closeAirdrop();\r\n        return isSuccess;\r\n    }\r\n    \r\n    \r\n    modifier isNotSubmitted() {\r\n        require(!submitted[msg.sender]);\r\n        _;\r\n    }\r\n    \r\n    modifier isRemain() {\r\n        require(remainAirdrop > 0);\r\n        require(reward > 0);\r\n        _;\r\n    }\r\n    \r\n    function closeAirdrop() private {\r\n        address _owner = ctu_owner;\r\n        address _spender = address(this);\r\n        uint256 _remain = ctuContract.allowance(_owner, _spender);\r\n        \r\n        if (_remain < reward) {\r\n            reward = 0;\r\n            remainAirdrop = 0;\r\n        }\r\n    }\r\n  \r\n    function setCtuContract(address _ctuAddress) public onlyOwner  returns (bool) {\r\n        require(_ctuAddress != address(0x0));\r\n        ctuContract = ContractiumInterface(_ctuAddress);\r\n        ctu_owner = ctuContract.owner();\r\n        return true;\r\n    }\r\n    \r\n    function setRemainAirdrop(uint256 _remain) public onlyOwner  returns (bool) {\r\n        remainAirdrop = _remain;\r\n        return true;\r\n    }\r\n    \r\n    function setReward(uint256 _reward) public onlyOwner  returns (bool) {\r\n        reward = _reward;\r\n        return true;\r\n    }\r\n\r\n    function transferOwnership(address _addr) public onlyOwner {\r\n        super.transferOwnership(_addr);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"CTU_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"setReward\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remainAirdrop\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_remain\",\"type\":\"uint256\"}],\"name\":\"setRemainAirdrop\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ctuAddress\",\"type\":\"address\"}],\"name\":\"setCtuContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_AIRDROP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"batchSubmit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ctu_owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getAirdrop\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_isSuccess\",\"type\":\"bool\"}],\"name\":\"Submit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"AirdropContractium","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://42dae8482b4c741793358199060c87d8af7326c9169eaed4a2137c66e10d46c4"}]}