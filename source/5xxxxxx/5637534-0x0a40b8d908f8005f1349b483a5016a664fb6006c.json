{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n//A modern ERC-20 token\r\n//The airdropper works on any ERC-20 token that implements approve(spender, tokens) \r\n//and transferFrom(from, to, tokens)\r\ninterface IStandardToken {\r\n    function totalSupply() external constant returns (uint);\r\n    function balanceOf(address tokenOwner) external constant returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) external constant returns (uint remaining);\r\n    function transfer(address to, uint tokens) external returns (bool success);\r\n    function approve(address spender, uint tokens) external returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n    function decimals() external returns (uint256);\r\n}\r\n\r\n/*\r\n * A  simple airdrop contract for an ERC-20 tokenContract\r\n * Usage: \r\n * 1) Pass the address of your token and the # tokens to dispense per user to the constructor.\r\n * 2) approve() the address of the newly created YeekAirdropper to \r\n *    spend tokens on your behalf, amount to equal the total number of tokens\r\n *    you are airdropping\r\n * 3) Have your airdrop recipients call withdrawAirdropTokens() to get their free tokens\r\n * 4) Airdrop ends when the approved amount of tokens have been dispensed OR \r\n *  your balance drops too low OR you call endAirdrop()\r\n */\r\n \r\ncontract YeekAirdropper {\r\n    IStandardToken public tokenContract;  // the token being sold\r\n    address public owner;\r\n    uint256 public numberOfTokensPerUser;\r\n    uint256 public tokensDispensed;\r\n    mapping(address => bool) public airdroppedUsers;\r\n    address[] public airdropRecipients;\r\n    event Dispensed(address indexed buyer, uint256 amount);\r\n    \r\n    //Constructs an Airdropper for a given token contract\r\n    constructor(IStandardToken _tokenContract, uint256 _numTokensPerUser) public {\r\n        owner = msg.sender;\r\n        tokenContract = _tokenContract;\r\n        numberOfTokensPerUser = _numTokensPerUser * 10 ** tokenContract.decimals();\r\n    }\r\n\r\n    //Gets # of people that have already withdrawn their airdrop tokens\r\n    //In a web3.js client, airdropRecipients.length is not available \r\n    //so we need to get the count this way. Any iteration over the \r\n    //airdropRecipients array will be done in JS so as not to waste gas\r\n    function airdropRecipientCount() public view returns(uint) {\r\n        return airdropRecipients.length;\r\n    }\r\n\r\n    //Transfers numberOfTokensPerUser from owner to msg.sender\r\n    //if sufficient remaining tokens exist\r\n    function withdrawAirdropTokens() public  {\r\n        require(tokenContract.allowance(owner, this) >= numberOfTokensPerUser);\r\n        require(tokenContract.balanceOf(owner) >= numberOfTokensPerUser);\r\n        require(!airdroppedUsers[msg.sender]);  //Each address may only receive the airdrop one time\r\n        \r\n        tokensDispensed += numberOfTokensPerUser;\r\n\r\n        airdroppedUsers[msg.sender]  = true;\r\n        airdropRecipients.length++;\r\n        airdropRecipients[airdropRecipients.length - 1]= msg.sender;\r\n        \r\n        emit Dispensed(msg.sender, numberOfTokensPerUser);\r\n        tokenContract.transferFrom(owner, msg.sender, numberOfTokensPerUser);\r\n    }\r\n\r\n    //How many tokens are remaining to be airdropped\r\n    function tokensRemaining() public view returns (uint256) {\r\n        return tokenContract.allowance(owner, this);\r\n    }\r\n\r\n    //Causes this contract to suicide and send any accidentally \r\n    //acquired ether to its owner.\r\n    function endAirdrop() public {\r\n        require(msg.sender == owner);\r\n        selfdestruct(msg.sender); //If any ethereum has been accidentally sent to the contract, withdraw it \r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAirdropTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfTokensPerUser\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"airdropRecipients\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endAirdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"airdroppedUsers\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensRemaining\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensDispensed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdropRecipientCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_numTokensPerUser\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Dispensed\",\"type\":\"event\"}]","ContractName":"YeekAirdropper","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000096387e69fac1d3b63e31a3a70ee3a067618877590000000000000000000000000000000000000000000000000000000000000007","Library":"","SwarmSource":"bzzr://f68a5a5650f5140c20a7e9a20d42e2cfbf17a39b519f60a70514e1bfe5d03759"}]}