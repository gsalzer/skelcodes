{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.23;\r\n\r\ncontract ERC20Interface {\r\n  function transfer(address to, uint256 tokens) public returns (bool success);\r\n}\r\n\r\ncontract DonationWallet {\r\n\r\n  address public owner = msg.sender;\r\n  \r\n  event Deposit(address sender, uint256 amount);\r\n  \r\n  function() payable public {\r\n    // only process transactions with value\r\n    require(msg.value > 0);\r\n    \r\n    // only log donations larger than 1 szabo to prevent spam\r\n    if(msg.value > 1 szabo) {\r\n        emit Deposit(msg.sender, msg.value);        \r\n    }\r\n    \r\n    // transfer donation to contract owner\r\n    address(owner).transfer(msg.value);\r\n  }\r\n  \r\n  // method to withdraw ERC20 tokens sent to this contract\r\n  function transferTokens(address tokenAddress, uint256 tokens) public returns(bool success) {\r\n    require(msg.sender == owner);\r\n    return ERC20Interface(tokenAddress).transfer(owner, tokens);\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"}]","ContractName":"DonationWallet","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4032b3e108b043bcf9d69090537de9d18f5217033660342ea9c13b6ed5481137"}]}