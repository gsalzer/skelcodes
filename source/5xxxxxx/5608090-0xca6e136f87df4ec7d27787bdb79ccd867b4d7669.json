{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\ncontract Ethertag {\r\n    address public owner;\r\n    address public thisContract = this;\r\n    uint public minValue;\r\n    uint public maxTextLength;\r\n    message[] public messages;\r\n    \r\n    struct message {\r\n        string text;\r\n        uint value;\r\n        rgb color;\r\n    }\r\n    \r\n    struct rgb {\r\n        uint8 red;\r\n        uint8 green;\r\n        uint8 blue;\r\n    }\r\n    \r\n    event newMessage(uint id, string text, uint value, uint8 red, uint8 green, uint8 blue);\r\n    event newSupport(uint id, uint value);\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n        minValue = 10000000000000;\r\n        maxTextLength = 200;\r\n    }\r\n    \r\n    function getMessagesCount() public view returns(uint) {\r\n        return messages.length;\r\n    }\r\n\r\n    function getMessage(uint i) public view returns(string text, uint value, uint8 red, uint8 green, uint8 blue) {\r\n        require(i<messages.length);\r\n        return (\r\n            messages[i].text, \r\n            messages[i].value,\r\n            messages[i].color.red,\r\n            messages[i].color.green,\r\n            messages[i].color.blue\r\n            );\r\n    }\r\n  \r\n    function addMessage(string m, uint8 r, uint8 g, uint8 b) public payable {\r\n        require(msg.value >= minValue);\r\n        require(bytes(m).length <= maxTextLength);\r\n        messages.push(message(m, msg.value, rgb(r,g,b)));\r\n        emit newMessage(\r\n            messages.length-1,\r\n            messages[messages.length-1].text, \r\n            messages[messages.length-1].value, \r\n            messages[messages.length-1].color.red,\r\n            messages[messages.length-1].color.green,\r\n            messages[messages.length-1].color.blue\r\n            );\r\n    }\r\n    \r\n    function supportMessage(uint i) public payable {\r\n        messages[i].value += msg.value;\r\n        emit newSupport(i, messages[i].value);\r\n    }\r\n   \r\n    function changeSettings(uint newMaxTextLength, uint newMinValue) public {\r\n        require(msg.sender == owner);\r\n        maxTextLength = newMaxTextLength;\r\n        minValue = newMinValue;\r\n    }\r\n    \r\n    function withdraw() public {\r\n        require(msg.sender == owner);\r\n        msg.sender.transfer(thisContract.balance);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"messages\",\"outputs\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"red\",\"type\":\"uint8\"},{\"name\":\"green\",\"type\":\"uint8\"},{\"name\":\"blue\",\"type\":\"uint8\"}],\"name\":\"color\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newMaxTextLength\",\"type\":\"uint256\"},{\"name\":\"newMinValue\",\"type\":\"uint256\"}],\"name\":\"changeSettings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTextLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMessagesCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"supportMessage\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getMessage\",\"outputs\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"red\",\"type\":\"uint8\"},{\"name\":\"green\",\"type\":\"uint8\"},{\"name\":\"blue\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"thisContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"m\",\"type\":\"string\"},{\"name\":\"r\",\"type\":\"uint8\"},{\"name\":\"g\",\"type\":\"uint8\"},{\"name\":\"b\",\"type\":\"uint8\"}],\"name\":\"addMessage\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"text\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"red\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"green\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"blue\",\"type\":\"uint8\"}],\"name\":\"newMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"newSupport\",\"type\":\"event\"}]","ContractName":"Ethertag","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://53e45927361834d293b0947e8d7393e56f1809930ac24b67b93b3888db03c155"}]}