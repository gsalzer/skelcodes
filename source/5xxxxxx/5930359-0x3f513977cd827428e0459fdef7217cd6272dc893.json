{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\n/* Functions from Kitten Coin main contract to be used by sale contract */\r\ncontract KittenCoin {\r\n    function balanceOf(address who) public constant returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract Token {\r\n    function balanceOf(address who) public constant returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n  \r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract KittenSelfDrop2 is Ownable {\r\n    KittenCoin public kittenContract;\r\n    uint8 public dropNumber;\r\n    uint256 public kittensDroppedToTheWorld;\r\n    uint256 public kittensRemainingToDrop;\r\n    uint256 public holderAmount;\r\n    uint256 public basicReward;\r\n    uint256 public holderReward;\r\n    mapping (uint8 => uint256[]) donatorReward;\r\n    uint8 donatorRewardLevels;\r\n    uint8 public totalDropTransactions;\r\n    mapping (address => uint8) participants;\r\n    \r\n    \r\n    // Initialize the cutest contract in the world\r\n    function KittenSelfDrop2 () {\r\n        address c = 0x2089899d03607b2192afb2567874a3f287f2f1e4\r\n; // set Kitten Coin contract address\r\n        kittenContract = KittenCoin(c); \r\n        dropNumber = 1;\r\n        kittensDroppedToTheWorld = 0;\r\n        kittensRemainingToDrop = 0;\r\n        basicReward = 500; // set initial basic reward to 500 Kitten Coins\r\n        holderReward = 5; // set initial holder reward to 500 Kitten Coins\r\n        holderAmount = 5000000000000; // set initial hold amount to 50000 Kitten Coins for extra reward\r\n        donatorReward[0]=[1,1]; // set initial donator reward to 100 Kitten Coins from 1 wei\r\n        donatorReward[1]=[1000000000000000,1000]; // set initial donator reward to 1000 Kitten Coins from 0.001 ETH\r\n        donatorReward[2]=[10000000000000000,5000]; // set initial donator reward to 5000 Kitten Coins from 0.01 ETH\r\n        donatorRewardLevels = 3;\r\n        totalDropTransactions = 0;\r\n    }\r\n    \r\n    \r\n    // Drop some wonderful cutest Kitten Coins to sender every time contract is called without function\r\n    function() payable {\r\n        require (participants[msg.sender] < dropNumber && kittensRemainingToDrop > basicReward);\r\n        uint256 tokensIssued = basicReward;\r\n        // Send extra Kitten Coins bonus if participant is donating Ether\r\n        if (msg.value > donatorReward[0][0])\r\n            tokensIssued += donatorBonus(msg.value);\r\n        // Send extra Kitten Coins bonus if participant holds at least holderAmount\r\n        if (kittenContract.balanceOf(msg.sender) >= holderAmount)\r\n            tokensIssued += holderReward;\r\n        // Check if number of Kitten Coins to issue is higher than coins remaining for airdrop (last transaction of airdrop)\r\n        if (tokensIssued > kittensRemainingToDrop)\r\n            tokensIssued = kittensRemainingToDrop;\r\n        \r\n        // Give away these so cute Kitten Coins to contributor\r\n        kittenContract.transfer(msg.sender, tokensIssued);\r\n        participants[msg.sender] = dropNumber;\r\n        kittensRemainingToDrop -= tokensIssued;\r\n        kittensDroppedToTheWorld += tokensIssued;\r\n        totalDropTransactions += 1;\r\n    }\r\n    \r\n    \r\n    function participant(address part) public constant returns (uint8 participationCount) {\r\n        return participants[part];\r\n    }\r\n    \r\n    \r\n    // Increase the airdrop count to allow sweet humans asking for more beautiful Kitten Coins\r\n    function setDropNumber(uint8 dropN) public onlyOwner {\r\n        dropNumber = dropN;\r\n        kittensRemainingToDrop = kittenContract.balanceOf(this);\r\n    }\r\n    \r\n    \r\n    // Define amount of Kitten Coins to hold in order to get holder reward\r\n    function setHolderAmount(uint256 amount) public onlyOwner {\r\n        holderAmount = amount;\r\n    }\r\n    \r\n    \r\n    // Define how many wonderful Kitten Coins will be issued for participating the selfdrop : basic and holder reward\r\n    function setRewards(uint256 basic, uint256 holder) public onlyOwner {\r\n        basicReward = basic;\r\n        holderReward = holder;\r\n    }\r\n    \r\n    // Define how many wonderful Kitten Coins will be issued for donators participating the selfdrop\r\n    function setDonatorReward(uint8 index, uint256[] values, uint8 levels) public onlyOwner {\r\n        donatorReward[index] = values;\r\n        donatorRewardLevels = levels;\r\n    }\r\n    \r\n    // Sends all ETH contributions to lovely kitten owner\r\n    function withdrawAll() public onlyOwner {\r\n        owner.transfer(this.balance);\r\n    }\r\n    \r\n    \r\n    // Sends all remaining Kitten Coins to owner, just in case of emergency\r\n    function withdrawKittenCoins() public onlyOwner {\r\n        kittenContract.transfer(owner, kittenContract.balanceOf(this));\r\n        kittensRemainingToDrop = 0;\r\n    }\r\n    \r\n    \r\n    // Sends all other tokens that would have been sent to owner (why people do that? We don't meow)\r\n    function withdrawToken(address token) public onlyOwner {\r\n        Token(token).transfer(owner, Token(token).balanceOf(this));\r\n    }\r\n    \r\n    \r\n    // Update number of Kitten Coins remaining for drop, just in case it is needed\r\n    function updateKittenCoinsRemainingToDrop() public {\r\n        kittensRemainingToDrop = kittenContract.balanceOf(this);\r\n    }\r\n    \r\n    \r\n    // Defines donator bonus to receive\r\n    function donatorBonus(uint256 amount) public returns (uint256) {\r\n        for(uint8 i = 1; i < donatorRewardLevels; i++) {\r\n            if(amount < donatorReward[i][0])\r\n                return (donatorReward[i-1][1]);\r\n        }\r\n        return (donatorReward[i-1][1]);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"basicReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"part\",\"type\":\"address\"}],\"name\":\"participant\",\"outputs\":[{\"name\":\"participationCount\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawKittenCoins\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dropNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateKittenCoinsRemainingToDrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDropTransactions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"basic\",\"type\":\"uint256\"},{\"name\":\"holder\",\"type\":\"uint256\"}],\"name\":\"setRewards\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kittensDroppedToTheWorld\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint8\"},{\"name\":\"values\",\"type\":\"uint256[]\"},{\"name\":\"levels\",\"type\":\"uint8\"}],\"name\":\"setDonatorReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donatorBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kittensRemainingToDrop\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dropN\",\"type\":\"uint8\"}],\"name\":\"setDropNumber\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"holderAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"holderReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setHolderAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kittenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"KittenSelfDrop2","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://22ce7383c36a9a3ccc1c6122df1aec69942bee468771e579101442d5b2590ed0"}]}