{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\n\r\ncontract BitcoinBravado {\r\n    \r\n    address public owner;\r\n    \r\n    mapping(address => bool) paidUsers;\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    function BitcoinBravado() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function payEntryFee() public payable  {\r\n        if (msg.value >= 0.1 ether) {\r\n            paidUsers[msg.sender] = true;\r\n        }\r\n    }\r\n    \r\n    function getUser (address _user) public view returns (bool _isUser) {\r\n        return paidUsers[_user];\r\n    }\r\n    \r\n    function withdrawAll() onlyOwner() public {\r\n        owner.transfer(address(this).balance);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"name\":\"_isUser\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payEntryFee\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"BitcoinBravado","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5a773a79334960288ce4e39d7a6e2ad4998042d9e0b9fec0e6858f70a07151e1"}]}