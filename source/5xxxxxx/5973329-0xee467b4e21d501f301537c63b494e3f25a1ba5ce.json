{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\ncontract Owned {\r\n    /* Variables */\r\n    address public owner = msg.sender;\r\n    /* Constructor */\r\n    constructor(address _owner) public {\r\n        if ( _owner == 0x00 ) {\r\n            _owner = msg.sender;\r\n        }\r\n        owner = _owner;\r\n    }\r\n    /* Externals */\r\n    function replaceOwner(address _owner) external returns(bool) {\r\n        require( isOwner() );\r\n        owner = _owner;\r\n        return true;\r\n    }\r\n    /* Internals */\r\n    function isOwner() internal view returns(bool) {\r\n        return owner == msg.sender;\r\n    }\r\n    /* Modifiers */\r\n    modifier forOwner {\r\n        require( isOwner() );\r\n        _;\r\n    }\r\n}\r\nlibrary SafeMath {\r\n    /* Internals */\r\n    function add(uint256 a, uint256 b) internal pure returns(uint256 c) {\r\n        c = a + b;\r\n        assert( c >= a );\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns(uint256 c) {\r\n        c = a - b;\r\n        assert( c <= a );\r\n        return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns(uint256 c) {\r\n        c = a * b;\r\n        assert( c == 0 || c / a == b );\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        return a / b;\r\n    }\r\n    function pow(uint256 a, uint256 b) internal pure returns(uint256 c) {\r\n        c = a ** b;\r\n        assert( c % a == 0 );\r\n        return a ** b;\r\n    }\r\n}\r\ncontract TokenDB is Owned {\r\n    /* Declarations */\r\n    using SafeMath for uint256;\r\n    /* Structures */\r\n    struct balances_s {\r\n        uint256 amount;\r\n        bool valid;\r\n    }\r\n    /* Variables */\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n    mapping(address => balances_s) public balances;\r\n    address public tokenAddress;\r\n    address public oldDBAddress;\r\n    /* Constructor */\r\n    constructor(address _owner, address _tokenAddress, address _icoAddress, address _oldDBAddress) Owned(_owner) public {\r\n        if ( _oldDBAddress == 0x00  && _icoAddress != 0x00 ) {\r\n            balances[_icoAddress].amount = 44e16;\r\n        }\r\n        oldDBAddress = _oldDBAddress;\r\n        tokenAddress = _tokenAddress;\r\n    }\r\n    /* Externals */\r\n    function changeTokenAddress(address _tokenAddress) external forOwner {\r\n        tokenAddress = _tokenAddress;\r\n    }\r\n    function transfer(address _from, address _to, uint256 _amount) external forToken returns(bool _success) {\r\n        uint256 _senderBalance = _getBalance(_from);\r\n        uint256 _receiverBalance = _getBalance(_to);\r\n        balances[_from].amount = _senderBalance.sub(_amount);\r\n        balances[_to].amount = _receiverBalance.add(_amount);\r\n        return true;\r\n    }\r\n    function bulkTransfer(address _from, address[] _to, uint256[] _amount) external forToken returns(bool _success) {\r\n        uint256 _senderBalance = _getBalance(_from);\r\n        uint256 _receiverBalance;\r\n        uint256 i;\r\n        for ( i=0 ; i<_to.length ; i++ ) {\r\n            _receiverBalance = _getBalance(_to[i]);\r\n            _senderBalance = _senderBalance.sub(_amount[i]);\r\n            balances[_to[i]].amount = _receiverBalance.add(_amount[i]);\r\n        }\r\n        balances[_from].amount = _senderBalance;\r\n        return true;\r\n    }\r\n    function setAllowance(address _owner, address _spender, uint256 _amount) external forToken returns(bool _success) {\r\n        allowance[_owner][_spender] = _amount;\r\n        return true;\r\n    }\r\n    /* Constants */\r\n    function getAllowance(address _owner, address _spender) public view returns(bool _success, uint256 _remaining) {\r\n        return ( true, allowance[_owner][_spender] );\r\n    }\r\n    function balanceOf(address _owner) public view returns(bool _success, uint256 _balance) {\r\n        return ( true, _getBalance(_owner) );\r\n    }\r\n    /* Internals */\r\n    function _getBalance(address _owner) internal returns(uint256 _balance) {\r\n        if ( ( ! balances[_owner].valid ) && oldDBAddress != 0x00 ) {\r\n            bool _subResult;\r\n            ( _subResult, _balance ) = TokenDB(oldDBAddress).balanceOf(_owner);\r\n            balances[_owner].amount = _balance;\r\n            balances[_owner].valid = true;\r\n        }\r\n        return balances[_owner].amount;\r\n    }\r\n    /* Modifiers */\r\n    modifier forToken {\r\n        require( msg.sender == tokenAddress );\r\n        _;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"getAllowance\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"},{\"name\":\"_remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"valid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"},{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oldDBAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"replaceOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"changeTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setAllowance\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"bulkTransfer\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_icoAddress\",\"type\":\"address\"},{\"name\":\"_oldDBAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"TokenDB","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000da8c0c6311ab6e43aa1c14967ad7abc6035b9596000000000000000000000000f784682c82526e245f50975190ef0fff4e4fc077000000000000000000000000578fa4ab3b27a94fe97bd52167f1b02da20d31e80000000000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://49ba5a569a4b434c1d0e1c1007364aedfee06dae6010f78c184a1354772f589e"}]}