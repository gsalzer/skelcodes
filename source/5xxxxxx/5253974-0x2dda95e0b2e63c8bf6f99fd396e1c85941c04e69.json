{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\tlibrary SafeMath {\r\n\r\n\t\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\t\tif (a == 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tuint256 c = a * b;\r\n\t\t\tassert(c / a == b);\r\n\t\t\treturn c;\r\n\t\t}\r\n\r\n\t\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\t\t// assert(b > 0); // Solidity automatically throws when dividing by 0\r\n\t\t\tuint256 c = a / b;\r\n\t\t\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\t\t\treturn c;\r\n\t\t}\r\n\r\n\t\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\t\tassert(b <= a);\r\n\t\t\treturn a - b;\r\n\t\t}\r\n\r\n\t\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\t\tuint256 c = a + b;\r\n\t\t\tassert(c >= a);\r\n\t\t\treturn c;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcontract Ownable {\r\n\r\n\t\taddress public owner;\r\n\t\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\t\tfunction Ownable() public {\r\n\t\t\towner = msg.sender;\r\n\t\t}\r\n\r\n\t\tmodifier onlyOwner() {\r\n\t\t\trequire(msg.sender == owner);\r\n\t\t\t_;\r\n\t\t}\r\n\r\n\t\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n\t\t\trequire(newOwner != address(0));\r\n\t\t\temit OwnershipTransferred(owner, newOwner);\r\n\t\t\towner = newOwner;\r\n\t\t}\r\n\t}\r\n\r\n\tcontract ERC20Basic {\r\n\t\tfunction totalSupply() public view returns (uint256);\r\n\t\tfunction balanceOf(address who) public view returns (uint256);\r\n\t\tfunction transfer(address to, uint256 value) public returns (bool);\r\n\t\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\t}\r\n\r\n\tcontract ERC20 is ERC20Basic {\r\n\t\tfunction allowance(address owner, address spender) public view returns (uint256);\r\n\t\tfunction transferFrom(address from, address to, uint256 value) public returns (bool);\r\n\t\tfunction approve(address spender, uint256 value) public returns (bool);\r\n\t\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n\t}\r\n\r\n\tcontract Rhodium is ERC20, Ownable{\r\n\r\n\tusing SafeMath for uint256;\r\n\r\n\tstring public constant name = \"Rhodium\"; // solium-disable-line uppercase\r\n\tstring public constant symbol = \"RH45\"; // solium-disable-line uppercase\r\n\tuint8 public constant decimals = 8; // solium-disable-line uppercase\r\n\r\n\tuint256 public constant INITIAL_SUPPLY = 45000000e8;\r\n\tuint256 totalSupply_;\r\n\r\n\r\n\tuint256 public minAmount = 0.04 ether;\r\n\r\n\tuint256 public rate =  100000000;\r\n\tbool public allowSelling = false; \r\n\r\n\tmapping(address => uint256) balances;\r\n\tmapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n\tfunction Rhodium() public {\r\n\t\ttotalSupply_ = INITIAL_SUPPLY;\r\n\t\tbalances[msg.sender] = INITIAL_SUPPLY;\r\n\t\temit Transfer(0x0, msg.sender, INITIAL_SUPPLY);\r\n\t}\r\n\r\n\tfunction totalSupply() public view returns (uint256) {\r\n\t\treturn totalSupply_;\r\n\t}\r\n\r\n\tfunction () public payable {\r\n\r\n\t\trequire(allowSelling);\r\n\t\trequire(msg.sender != address(0));\r\n\t\trequire(tx.origin == msg.sender); \r\n\t\trequire(msg.value >= minAmount);\r\n\r\n\t\tuint256 ethAmount = msg.value; \r\n\t\tuint256 numTokensSend = 0;\r\n\r\n\t\tnumTokensSend = ethAmount.div(rate);\r\n\r\n\t\tif (balances[owner] >= numTokensSend) {\r\n\r\n\t\t\tbalances[owner] = balances[owner].sub(numTokensSend);\r\n\t\t\tbalances[msg.sender] = balances[msg.sender].add(numTokensSend);\r\n\r\n\t\t\towner.transfer(ethAmount);\r\n\t\t\temit Transfer(owner, msg.sender, numTokensSend);\r\n\r\n\t\t}else{\r\n\t\t\trevert();\r\n\t\t}\r\n\r\n\t\t\t\r\n\t}\r\n\r\n\tmodifier onlyPayloadSize(uint size) {\r\n\t\tassert(msg.data.length >= size * 32 + 4);\r\n\t\t_;\r\n\t}\r\n\r\n\t\r\n\tfunction transfer(address _to, uint256 _value) onlyPayloadSize(2) public returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\t\trequire(_value <= balances[msg.sender]);\r\n\r\n\t\t// SafeMath.sub will throw if there is not enough balance.\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\temit Transfer(msg.sender, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\tfunction balanceOf(address _owner) public view returns (uint256 balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) onlyPayloadSize(3) public returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\t\trequire(_value <= balances[_from]);\r\n\t\trequire(_value <= allowed[_from][msg.sender]);\r\n\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n\t\temit Transfer(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction multiTransfer(address[] _toAddresses, uint256[] _amounts) public returns (bool) {\r\n\r\n\t\trequire(_toAddresses.length <= 255);\r\n\t\trequire(_toAddresses.length == _amounts.length);\r\n\r\n\t\tfor (uint8 i = 0; i < _toAddresses.length; i++) {\r\n\t\t\ttransfer(_toAddresses[i], _amounts[i]);\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _value) onlyPayloadSize(2) public returns (bool) {\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) public view returns (uint256) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n\tfunction increaseApproval(address _spender, uint _addedValue) onlyPayloadSize(2) public returns (bool) {\r\n\t\tallowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction decreaseApproval(address _spender, uint _subtractedValue) onlyPayloadSize(2) public returns (bool) {\r\n\r\n\t\tuint oldValue = allowed[msg.sender][_spender];\r\n\r\n\t\tif (_subtractedValue > oldValue) {\r\n\t\t\tallowed[msg.sender][_spender] = 0;\r\n\t\t} else {\r\n\t\t\tallowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n\t\t}\r\n\t\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction sellingEnable(uint256 _rate) onlyOwner public {\r\n\t\trequire(_rate > 0);\r\n\t\tallowSelling = true;\r\n\t\trate = _rate; \r\n\t}\r\n\r\n\tfunction sellingDisable() onlyOwner public {\r\n\t\tallowSelling = false;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_toAddresses\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sellingDisable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowSelling\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"sellingEnable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Rhodium","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9b461660b309b7a5c37228e125670bb834bfce4f8663800a6f4ac26356d9afbf"}]}