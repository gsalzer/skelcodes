{"status":"1","message":"OK","result":[{"SourceCode":"contract TeikhosBounty {\r\n\r\n    // Proof-of-public-key in format 2xbytes32, to support xor operator and ecrecover r, s v format\r\n    bytes32 proof_of_public_key1 = hex\"ed29e99f5c7349716e9ebf9e5e2db3e9d1c59ebbb6e17479da01beab4fff151e\";\r\n    bytes32 proof_of_public_key2 = hex\"9e559605af06d5f08bb2e8bdc2957623b8ba05af02e84380eec39387125ea03b\";\r\n\r\n    // Proof-of-symmetric-key in format 2xbytes32, to support xor operator and ecrecover r, s v format\r\n    bytes32 proof_of_symmetric_key1 = hex\"b8aaf33942600fd11ffe2acf242b2b34530ab95751e0e970d8de148e0b90f6b6\";\r\n    bytes32 proof_of_symmetric_key2 = hex\"a8854ce60dc7f77ae8773e4de3a12679a066ff3e710a44c7e24737aad547e19f\";\r\n                    \r\n    function authenticate(bytes _publicKey) { // Accepts an array of bytes, for example [\"0x00\",\"0xaa\", \"0xff\"]\r\n\r\n        // Get address from public key\r\n        address signer = address(keccak256(_publicKey));\r\n\r\n        // Split public key in 2xbytes32, to support xor operator and ecrecover r, s v format\r\n\r\n        bytes32 publicKey1;\r\n        bytes32 publicKey2;\r\n\r\n        assembly {\r\n        publicKey1 := mload(add(_publicKey,0x20))\r\n        publicKey2 := mload(add(_publicKey,0x40))\r\n        }\r\n\r\n        // Use xor (reverse cipher) to get symmetric key\r\n        bytes32 symmetricKey1 = proof_of_symmetric_key1 ^ publicKey1;\r\n        bytes32 symmetricKey2 = proof_of_symmetric_key2 ^ publicKey2;\r\n\r\n        // Use xor (reverse cipher) to get signature in r, s v format\r\n        bytes32 r = proof_of_public_key1 ^ symmetricKey1;\r\n        bytes32 s = proof_of_public_key2 ^ symmetricKey2;\r\n\r\n        bytes32 msgHash = keccak256(\"\\x19Ethereum Signed Message:\\n64\", _publicKey);\r\n\r\n        // The value v is not known, try both 27 and 28\r\n        if(ecrecover(msgHash, 27, r, s) == signer) suicide(msg.sender);\r\n        if(ecrecover(msgHash, 28, r, s) == signer) suicide(msg.sender);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"authenticate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TeikhosBounty","CompilerVersion":"v0.4.20-nightly.2018.1.6+commit.2548228b","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ce3e65792ad17f723170b76d2c73d1f7d90e8edd54b4804f16ebe8b672080e5a"}]}