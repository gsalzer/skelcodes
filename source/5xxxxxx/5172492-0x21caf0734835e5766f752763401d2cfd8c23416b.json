{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.19;\r\n\r\ncontract ERC20 {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function allowance(address owner, address spender) constant returns (uint);\r\n  function transfer(address to, uint value) returns (bool ok);\r\n  function transferFrom(address from, address to, uint value) returns (bool ok);\r\n  function approve(address spender, uint value) returns (bool ok);\r\n  function mintToken(address to, uint256 value) returns (uint256);\r\n  function changeTransfer(bool allowed);\r\n}\r\n\r\n\r\ncontract Sale {\r\n\r\n    uint256 public maxMintable;\r\n    uint256 public totalMinted;\r\n    uint public endBlock;\r\n    uint public startBlock;\r\n    uint public exchangeRate;\r\n    bool public isFunding;\r\n    ERC20 public Token;\r\n    address public ETHWallet;\r\n    uint256 public heldTotal;\r\n\r\n    bool private configSet;\r\n    address public creator;\r\n\r\n    mapping (address => uint256) public heldTokens;\r\n    mapping (address => uint) public heldTimeline;\r\n\r\n    event Contribution(address from, uint256 amount);\r\n    event ReleaseTokens(address from, uint256 amount);\r\n\r\n    function Sale() {\r\n        startBlock = block.number;\r\n        maxMintable = 10000000e18; \r\n        ETHWallet = 0x56710010B234A104D7E67dA5765A081eF7f2B4C8; \r\n        isFunding = true;\r\n        creator = 0x0E6EFB81B03ea30Fd7Eac2a416FB5ec943B5cdBA;\r\n        createHeldCoins();\r\n        exchangeRate = 2000; \r\n    }\r\n\r\n    \r\n    \r\n    \r\n    function setup(address TOKEN, uint endBlockTime) {\r\n        require(!configSet);\r\n        Token = ERC20(TOKEN);\r\n        endBlock = endBlockTime;\r\n        configSet = true;\r\n    }\r\n\r\n    function closeSale() external {\r\n      require(msg.sender==creator);\r\n      isFunding = false;\r\n    }\r\n\r\n    \r\n    \r\n    function contribute() external payable {\r\n        require(msg.value>0);\r\n        require(isFunding);\r\n        require(block.number <= endBlock);\r\n        uint256 amount = msg.value * exchangeRate;\r\n        uint256 total = totalMinted + amount;\r\n        require(total<=maxMintable);\r\n        totalMinted = total; \r\n        ETHWallet.transfer(msg.value);\r\n        Token.mintToken(msg.sender, amount);\r\n        Contribution(msg.sender, amount);\r\n    }\r\n    \r\n    \r\n    function() payable public {\r\n        require(msg.value>0);\r\n        require(isFunding);\r\n        require(block.number <= endBlock);\r\n        uint256 amount = msg.value * exchangeRate;\r\n        uint256 total = totalMinted + amount;\r\n        require(total<=maxMintable);\r\n        totalMinted = total; \r\n        ETHWallet.transfer(msg.value);\r\n        Token.mintToken(msg.sender, amount);\r\n        Contribution(msg.sender, amount);\r\n    }\r\n\r\n    \r\n    function updateRate(uint256 rate) external {\r\n        require(msg.sender==creator);\r\n        require(isFunding);\r\n        exchangeRate = rate;\r\n    }\r\n\r\n    \r\n    function changeCreator(address _creator) external {\r\n        require(msg.sender==creator);\r\n        creator = _creator;\r\n    }\r\n\r\n    \r\n    function changeTransferStats(bool _allowed) external {\r\n        require(msg.sender==creator);\r\n        Token.changeTransfer(_allowed);\r\n    }\r\n\r\n    \r\n    \r\n    function createHeldCoins() internal {\r\n        \r\n        createHoldToken(0x44Bb8D9036Db5453219189E0a7262BFe1a69AfEB, 4000000e18); \r\n        \r\n        \r\n    }\r\n\r\n    \r\n    function createHoldToken(address _to, uint256 amount) internal {\r\n        \r\n        heldTokens[_to] = amount;\r\n        heldTimeline[_to] = block.number + 0;\r\n        heldTotal += amount;\r\n        totalMinted += heldTotal;\r\n    }\r\n\r\n    \r\n    function releaseHeldCoins() external {\r\n        uint256 held = heldTokens[msg.sender];\r\n        uint heldBlock = heldTimeline[msg.sender];\r\n        require(!isFunding);\r\n        require(held >= 0);\r\n        require(block.number >= heldBlock);\r\n        heldTokens[msg.sender] = 0;\r\n        heldTimeline[msg.sender] = 0;\r\n        Token.mintToken(msg.sender, held);\r\n        ReleaseTokens(msg.sender, held);\r\n    }\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"heldTimeline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFunding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETHWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxMintable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"updateRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseHeldCoins\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"changeCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"heldTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"changeTransferStats\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"heldTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"TOKEN\",\"type\":\"address\"},{\"name\":\"endBlockTime\",\"type\":\"uint256\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReleaseTokens\",\"type\":\"event\"}]","ContractName":"Sale","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0f3de2681e09209efae6c58a981c49035448b9cd87c8a16d3cf8c58a1545308b"}]}