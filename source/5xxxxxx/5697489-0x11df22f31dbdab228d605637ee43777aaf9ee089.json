{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\nlibrary SafeMath{\r\n    // Multiples 2 numbers, throws on overflow is detected.\r\n    function mul(uint256 _x, uint256 _y) internal pure returns (uint256 result){\r\n        if(_y == 0){\r\n            return 0;\r\n        }\r\n        result = _x*_y;\r\n        assert(_x == result/_y);\r\n        return result;\r\n    }\r\n    //Divides 2 numbers, solidity automatically throws if _y is 0.\r\n    function div(uint256 _x, uint256 _y) internal pure returns (uint256 result){\r\n        result = _x / _y;\r\n        return result;\r\n    }\r\n    //Adds 2 numbers, throws on overflow.\r\n    function add(uint256 _x, uint256 _y) internal pure returns (uint256 result){\r\n        result = _x + _y;\r\n        assert(result >= _x);\r\n        return result;\r\n    }\r\n    function sub(uint256 _x, uint256 _y) internal pure returns (uint256 result){\r\n        assert(_x >= _y);\r\n        result = _x - _y;\r\n        return result;\r\n    }\r\n}\r\ninterface ReceiverContract{\r\n    function tokenFallback(address _sender, uint256 _amount, bytes _data) external;\r\n}\r\n\r\n\r\ncontract ERC20Interface {\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\ncontract Ownable{\r\n    address public owner;\r\n    event ownerTransfer(address indexed oldOwner, address indexed newOwner);\r\n    event ownerGone(address indexed oldOwner);\r\n\r\n    constructor(){\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner(){\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    function changeOwner(address _newOwner) public onlyOwner{\r\n        require(_newOwner != address(0x0));\r\n        emit ownerTransfer(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n    function deleteOwner() public onlyOwner{\r\n        emit ownerGone(owner);\r\n        owner = 0x0;\r\n    }\r\n}\r\ncontract Haltable is Ownable{\r\n    bool public paused;\r\n    event ContractPaused(address by);\r\n    event ContractUnpaused(address by);\r\n    constructor(){\r\n        paused = false;\r\n    }\r\n    function pause() public onlyOwner {\r\n        paused = true;\r\n        emit ContractPaused(owner);\r\n    }\r\n    function unpause() public onlyOwner {\r\n        paused = false;\r\n        emit ContractUnpaused(owner);\r\n    }\r\n    modifier stopOnPause(){\r\n        require(paused == false);\r\n        _;\r\n    }\r\n}\r\ncontract ERC223Interface is Haltable, ERC20Interface{\r\n    function transfer(address _to, uint _amount, bytes _data) public returns (bool success);\r\n    event Transfer(address indexed from, address indexed to, uint tokens, bytes data);\r\n    event BalanceBurned(address indexed from, uint amount);\r\n}\r\n\r\n\r\ncontract ABIO is ERC223Interface{\r\n    using SafeMath for uint256;\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n    //Getter functions are defined automatically for the following variables.\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n\r\n    address ICOAddress;\r\n    address PICOAddress;\r\n\r\n    constructor(string _name, string _symbol, uint8 _decimals, uint256 _supply) public{\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        totalSupply = _supply;\r\n        balances[msg.sender] = totalSupply;\r\n    }\r\n\r\n    function supplyPICO(address _preIco) onlyOwner{\r\n        require(_preIco != 0x0 && PICOAddress == 0x0);\r\n        PICOAddress = _preIco;\r\n    }\r\n    function supplyICO(address _ico) onlyOwner{\r\n        require(_ico != 0x0 && ICOAddress == 0x0);\r\n        ICOAddress = _ico;\r\n    }\r\n    function burnMyBalance() public {\r\n        require(msg.sender != 0x0);\r\n        require(msg.sender == ICOAddress || msg.sender == PICOAddress);\r\n        uint b = balanceOf(msg.sender);\r\n        totalSupply = totalSupply.sub(b);\r\n        balances[msg.sender] = 0;\r\n        emit BalanceBurned(msg.sender, b);\r\n    }\r\n    /**\r\n     * @notice Underlying transfer function; it is called by public functions later.\r\n     * @dev This architecture saves >30000 gas as compared to having two independent public functions\r\n     *      for transfer with and without `_data`.\r\n     **/\r\n    function _transfer(address _from, address _to, uint256 _amount, bytes _data) internal returns (bool success){\r\n        require(_to != 0x0);\r\n        require(_amount <= balanceOf(_from));\r\n\r\n        uint256 initialBalances = balanceOf(_from).add(balanceOf(_to));\r\n\r\n        balances[_from] = balanceOf(_from).sub(_amount);\r\n        balances[_to] = balanceOf(_to).add(_amount);\r\n\r\n        if(isContract(_to)){\r\n            ReceiverContract receiver = ReceiverContract(_to);\r\n            receiver.tokenFallback(_from, _amount, _data);\r\n        }\r\n        assert(initialBalances == balanceOf(_from).add(balanceOf(_to)));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice Transfer with addidition data.\r\n     * @param _data will be sent to tokenFallback() if receiver is a contract.\r\n     **/\r\n    function transfer(address _to, uint256 _amount, bytes _data) stopOnPause public returns (bool success){\r\n        if (_transfer(msg.sender, _to, _amount, _data)){\r\n            emit Transfer(msg.sender, _to, _amount, _data);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @notice Transfer without additional data.\r\n     * @dev An empty `bytes` instance will be created and sent to `tokenFallback()` if receiver is a contract.\r\n     **/\r\n    function transfer(address _to, uint256 _amount) stopOnPause public returns (bool success){\r\n        bytes memory empty;\r\n        if (_transfer(msg.sender, _to, _amount, empty)){\r\n            emit Transfer(msg.sender , _to, _amount);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    /**\r\n     * @notice Transfers `_amount` from `_from` to `_to` without additional data.\r\n     * @dev Only if `approve` has been called before!\r\n     * @param _data will be sent to tokenFallback() if receiver is a contract.\r\n     **/\r\n    function transferFrom(address _from, address _to, uint256 _amount, bytes _data) stopOnPause public returns (bool success){\r\n        require(_from != 0x0);\r\n        require(allowance(_from, msg.sender) >= _amount);\r\n\r\n\r\n        allowed[_from][msg.sender] = allowance(_from, msg.sender).sub(_amount);\r\n        assert(_transfer(_from, _to, _amount, _data));\r\n        emit Transfer(_from, _to, _amount, _data);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice Transfers `_amount` from `_from` to `_to` with additional data.\r\n     * @dev Only if `approve` has been called before!\r\n     * @dev An empty `bytes` instance will be created and sent to `tokenFallback()` if receiver is a contract.\r\n     **/\r\n    function transferFrom(address _from, address _to, uint256 _amount) stopOnPause  public returns (bool success){\r\n        require(_from != 0x0);\r\n        require(allowance(_from, msg.sender) >= _amount);\r\n\r\n        bytes memory empty;\r\n        allowed[_from][msg.sender] = allowance(_from, msg.sender).sub(_amount);\r\n        assert(_transfer(_from, _to, _amount, empty));\r\n        emit Transfer(_from, _to, _amount, empty);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice gives `_spender` allowance to spend `amount` from sender's balance.\r\n     **/\r\n    function approve(address _spender, uint256 _amount) stopOnPause public returns (bool success){\r\n        require(_spender != 0x0);\r\n        allowed[msg.sender][_spender] = _amount;\r\n        emit Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * @notice Checks how much a certain user allowed to a different one.\r\n     **/\r\n    function allowance(address _owner, address _spender) public view returns (uint256){\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    /**\r\n     * @notice Checks if a contract is behind an address.\r\n     * @dev Does it by checking if it has ANY code.\r\n     **/\r\n    function isContract(address _addr) public view returns(bool is_contract){\r\n        uint length;\r\n        assembly {\r\n            //retrieve the code length/size on target address\r\n            length := extcodesize(_addr)\r\n        }\r\n      return (length>0);\r\n    }\r\n\r\n    /**\r\n     * @notice Returns balance of an address.\r\n     * @dev Returns `0` the address was never seen before.\r\n     **/\r\n    function balanceOf(address _addr) public view returns (uint256){\r\n        return balances[_addr];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isContract\",\"outputs\":[{\"name\":\"is_contract\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ico\",\"type\":\"address\"}],\"name\":\"supplyICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_preIco\",\"type\":\"address\"}],\"name\":\"supplyPICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deleteOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"burnMyBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BalanceBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"by\",\"type\":\"address\"}],\"name\":\"ContractPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"by\",\"type\":\"address\"}],\"name\":\"ContractUnpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownerTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"}],\"name\":\"ownerGone\",\"type\":\"event\"}]","ContractName":"ABIO","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200b2000000000000000000000000000000000000000000000000000000000000000154f6666696369616c204165726f2042696f6c6f6779000000000000000000000000000000000000000000000000000000000000000000000000000000000000044142494f00000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://1d48fae25da3dae13c9eb69a61472dd0211dadd4c9a082e7ed686df7895ba043"}]}