{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n\r\n\r\n/// @title Interface for contracts conforming to ERC-721: Non-Fungible Tokens\r\n/// @author Dieter Shirley <dete@axiomzen.co> (https://github.com/dete)\r\ncontract CSCERC721 {\r\n  // Required methods\r\n  function balanceOf(address _owner) public view returns (uint256 balance) { \r\n      return 0;\r\n      \r\n  }\r\n  function ownerOf(uint256 _tokenId) public view returns (address owner) { return;}\r\n\r\n  function getCollectibleDetails(uint256 _assetId) external view returns(uint256 assetId, uint256 sequenceId, uint256 collectibleType, uint256 collectibleClass, bool isRedeemed, address owner) {\r\n        assetId = 0;\r\n        sequenceId = 0;\r\n        collectibleType = 0;\r\n        collectibleClass = 0;\r\n        owner = 0;\r\n        isRedeemed = false;\r\n  }\r\n\r\n   function tokensOfOwner(address _owner) external view returns(uint256[] ownerTokens) {\r\n        return;\r\n   }\r\n\r\n}\r\n\r\ncontract CSCFactoryERC721 {\r\n    \r\n    function ownerOf(uint256 _tokenId) public view returns (address owner) { return;}\r\n\r\n    function getCollectibleDetails(uint256 _tokenId) external view returns(uint256 assetId, uint256 sequenceId, uint256 collectibleType, uint256 collectibleClass, bytes32 collectibleName, bool isRedeemed, address owner) {\r\n\r\n        assetId = 0;\r\n        sequenceId = 0;\r\n        collectibleType = 0;\r\n        collectibleClass = 0;\r\n        owner = 0;\r\n        collectibleName = 0x0;\r\n        isRedeemed = false;\r\n    }\r\n\r\n    function tokensOfOwner(address _owner) external view returns(uint256[] ownerTokens) {\r\n        return;\r\n   }\r\n}\r\n\r\ncontract ERC20 {\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract CSCResourceFactory {\r\n    mapping(uint16 => address) public resourceIdToAddress; \r\n}\r\n\r\n\r\ncontract MEAHiddenLogic {\r\n\r\n\r\n    function getTotalTonsClaimed() external view returns(uint32) {\r\n        return;\r\n    }\r\n\r\n    function getTotalSupply() external view returns(uint32) {\r\n        return;\r\n    }\r\n\r\n     function getStarTotalSupply(uint8 _starId) external view returns(uint32) {\r\n        return;\r\n    }\r\n\r\n    function getReturnTime(uint256 _assetId) external view returns(uint256 time) {\r\n        return;\r\n    }\r\n\r\n    //uint256 iron, uint256 quartz, uint256 nickel, uint256 cobalt, uint256 silver, uint256 titanium, uint256 lucinite, uint256 gold, uint256 cosmethyst, uint256 allurum,  uint256 platinum,  uint256 trilite \r\n    function setResourceForStar(uint8[5] _resourceTypes, uint16[5] _resourcePer, uint32[5] _resourceAmounts) public returns(uint8 starId) {\r\n    }\r\n\r\n    \r\n    /// @dev Method to fetch collected ore details\r\n    function getAssetCollectedOreBallances(uint256 _assetID) external view returns(uint256 iron, uint256 quartz, uint256 nickel, uint256 cobalt, uint256 silver, uint256 titanium, uint256 lucinite, uint256 gold, uint256 cosmethyst, uint256 allurum,  uint256 platinum,  uint256 trilite);\r\n\r\n    function getAssetCollectedOreBallancesArray(uint256 _assetID) external view returns(uint256[12] ores);\r\n\r\n    function emptyShipCargo(uint32 _assetId) external;\r\n\r\n     /// @dev For creating CSC Collectible\r\n    function startMEAMission(uint256 _assetId, uint256 oreMax, uint8 starId, uint256 _travelTime) public returns(uint256);\r\n\r\n    \r\n}\r\n\r\n/* Controls state and access rights for contract functions\r\n * @title Operational Control\r\n * @author Fazri Zubair & Farhan Khwaja (Lucid Sight, Inc.)\r\n * Inspired and adapted from contract created by OpenZeppelin\r\n * Ref: https://github.com/OpenZeppelin/zeppelin-solidity/\r\n */\r\ncontract OperationalControl {\r\n    // Facilitates access & control for the game.\r\n    // Roles:\r\n    //  -The Managers (Primary/Secondary): Has universal control of all elements (No ability to withdraw)\r\n    //  -The Banker: The Bank can withdraw funds and adjust fees / prices.\r\n    //  -otherManagers: Contracts that need access to functions for gameplay\r\n\r\n    /// @dev Emited when contract is upgraded\r\n    event ContractUpgrade(address newContract);\r\n\r\n    /// @dev Emited when other manager is set\r\n    event OtherManagerUpdated(address otherManager, uint256 state);\r\n\r\n    // The addresses of the accounts (or contracts) that can execute actions within each roles.\r\n    address public managerPrimary;\r\n    address public managerSecondary;\r\n    address public bankManager;\r\n\r\n    // Contracts that require access for gameplay\r\n    mapping(address => uint8) public otherManagers;\r\n\r\n    // @dev Keeps track whether the contract is paused. When that is true, most actions are blocked\r\n    bool public paused = false;\r\n\r\n    // @dev Keeps track whether the contract erroredOut. When that is true, most actions are blocked & refund can be claimed\r\n    bool public error = false;\r\n\r\n    /// @dev Operation modifiers for limiting access\r\n    modifier onlyManager() {\r\n        require(msg.sender == managerPrimary || msg.sender == managerSecondary);\r\n        _;\r\n    }\r\n\r\n    modifier onlyBanker() {\r\n        require(msg.sender == bankManager);\r\n        _;\r\n    }\r\n\r\n    modifier onlyOtherManagers() {\r\n        require(otherManagers[msg.sender] == 1);\r\n        _;\r\n    }\r\n\r\n\r\n    modifier anyOperator() {\r\n        require(\r\n            msg.sender == managerPrimary ||\r\n            msg.sender == managerSecondary ||\r\n            msg.sender == bankManager ||\r\n            otherManagers[msg.sender] == 1\r\n        );\r\n        _;\r\n    }\r\n\r\n    /// @dev Assigns a new address to act as the Other Manager. (State = 1 is active, 0 is disabled)\r\n    function setOtherManager(address _newOp, uint8 _state) external onlyManager {\r\n        require(_newOp != address(0));\r\n\r\n        otherManagers[_newOp] = _state;\r\n\r\n        OtherManagerUpdated(_newOp,_state);\r\n    }\r\n\r\n    /// @dev Assigns a new address to act as the Primary Manager.\r\n    function setPrimaryManager(address _newGM) external onlyManager {\r\n        require(_newGM != address(0));\r\n\r\n        managerPrimary = _newGM;\r\n    }\r\n\r\n    /// @dev Assigns a new address to act as the Secondary Manager.\r\n    function setSecondaryManager(address _newGM) external onlyManager {\r\n        require(_newGM != address(0));\r\n\r\n        managerSecondary = _newGM;\r\n    }\r\n\r\n    /// @dev Assigns a new address to act as the Banker.\r\n    function setBanker(address _newBK) external onlyManager {\r\n        require(_newBK != address(0));\r\n\r\n        bankManager = _newBK;\r\n    }\r\n\r\n    /*** Pausable functionality adapted from OpenZeppelin ***/\r\n\r\n    /// @dev Modifier to allow actions only when the contract IS NOT paused\r\n    modifier whenNotPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n\r\n    /// @dev Modifier to allow actions only when the contract IS paused\r\n    modifier whenPaused {\r\n        require(paused);\r\n        _;\r\n    }\r\n\r\n    /// @dev Modifier to allow actions only when the contract has Error\r\n    modifier whenError {\r\n        require(error);\r\n        _;\r\n    }\r\n\r\n    /// @dev Called by any Operator role to pause the contract.\r\n    /// Used only if a bug or exploit is discovered (Here to limit losses / damage)\r\n    function pause() external onlyManager whenNotPaused {\r\n        paused = true;\r\n    }\r\n\r\n    /// @dev Unpauses the smart contract. Can only be called by the Game Master\r\n    /// @notice This is public rather than external so it can be called by derived contracts. \r\n    function unpause() public onlyManager whenPaused {\r\n        // can't unpause if contract was upgraded\r\n        paused = false;\r\n    }\r\n\r\n    /// @dev Unpauses the smart contract. Can only be called by the Game Master\r\n    /// @notice This is public rather than external so it can be called by derived contracts. \r\n    function hasError() public onlyManager whenPaused {\r\n        error = true;\r\n    }\r\n\r\n    /// @dev Unpauses the smart contract. Can only be called by the Game Master\r\n    /// @notice This is public rather than external so it can be called by derived contracts. \r\n    function noError() public onlyManager whenPaused {\r\n        error = false;\r\n    }\r\n}\r\n\r\ncontract MEAManager is OperationalControl {\r\n\r\n    /*** EVENTS ***/\r\n\r\n    /*** CONSTANTS ***/\r\n    uint256 public constant REAPER_INTREPID = 3; \r\n    uint256 public constant REAPER_INTREPID_EXTRACTION_BASE = 10; // tons per hour of mining\r\n    uint256 public constant REAPER_INTREPID_FTL_SPEED = 900; // Seconds to travel 1 light year\r\n    uint256 public constant REAPER_INTREPID_MAX_CARGO = 320;\r\n\r\n    uint256 public constant PHOENIX_CORSAIR = 2;\r\n    uint256 public constant PHOENIX_CORSAIR_EXTRACTION_BASE = 40; // tons per hour of mining\r\n    uint256 public constant PHOENIX_CORSAIR_FTL_SPEED = 1440; // Seconds to travel 1 light year\r\n    uint256 public constant PHOENIX_CORSAIR_MAX_CARGO = 1500;\r\n\r\n    uint256 public constant VULCAN_PROMETHEUS = 1;\r\n    uint256 public constant VULCAN_PROMETHEUS_EXTRACTION_BASE = 300; // tons per hour of mining\r\n    uint256 public constant VULCAN_PROMETHEUS_FTL_SPEED = 2057; // Seconds to travel 1 light year\r\n    uint256 public constant VULCAN_PROMETHEUS_MAX_CARGO = 6000; \r\n\r\n    uint256 public constant SIGMA = 4;\r\n    uint256 public constant SIGMA_EXTRACTION_BASE = 150; // tons per hour of mining\r\n    uint256 public constant SIGMA_FTL_SPEED = 4235; // Seconds to travel 1 light year\r\n    uint256 public constant SIGMA_MAX_CARGO = 15000; \r\n\r\n    uint256 public constant HAYATO = 5;\r\n    uint256 public constant HAYATO_EXTRACTION_BASE = 150; // tons per hour of mining\r\n    uint256 public constant HAYATO_FTL_SPEED = 360; // Seconds to travel 1 light year\r\n    uint256 public constant HAYATO_MAX_CARGO = 1500; \r\n\r\n    uint256 public constant CPGPEREGRINE = 6;\r\n    uint256 public constant CPGPEREGRINE_EXTRACTION_BASE = 150; // tons per hour of mining\r\n    uint256 public constant CPGPEREGRINE_FTL_SPEED = 720; // Seconds to travel 1 light year\r\n    uint256 public constant CPGPEREGRINE_MAX_CARGO = 4000; \r\n\r\n    uint256 public constant TACTICALCRUISER = 7;\r\n    uint256 public constant TACTICALCRUISER_EXTRACTION_BASE = 150; // tons per hour of mining\r\n    uint256 public constant TACTICALCRUISER_FTL_SPEED = 720; // Seconds to travel 1 light year\r\n    uint256 public constant TACTICALCRUISER_MAX_CARGO = 1000;\r\n\r\n    uint256 public constant OTHERCRUISER = 8;\r\n    uint256 public constant OTHERCRUISER_EXTRACTION_BASE = 100; // tons per hour of mining\r\n    uint256 public constant OTHERCRUISER_FTL_SPEED = 720; // Seconds to travel 1 light year\r\n    uint256 public constant OTHERCRUISER_MAX_CARGO = 1500;  \r\n\r\n    uint256 public constant VULCAN_POD = 9;\r\n    uint256 public constant VULCAN_POD_EXTRACTION_BASE = 1; // tons per hour of mining\r\n    uint256 public constant VULCAN_POD_FTL_SPEED = 2000; // Seconds to travel 1 light year\r\n    uint256 public constant VULCAN_POD_MAX_CARGO = 75;  \r\n\r\n    //For Devs to Travel Around\r\n    uint256 public constant DEVCLASS = 99;\r\n    uint256 public constant DEVCLASS_EXTRACTION_BASE = 50; // tons per hour of mining\r\n    uint256 public constant DEVCLASS_FTL_SPEED = 10; // Seconds to travel 1 light year\r\n    uint256 public constant DEVCLASS_MAX_CARGO = 500; \r\n    \r\n    /// @notice Name and symbol of the non fungible token, as defined in ERC721.\r\n    string public constant NAME = \"MEAGameManager\";\r\n\r\n    /*** Mappings ***/\r\n\r\n     /// @dev assetID to ore type to qty collected\r\n    mapping(uint32 => mapping(uint8 => uint32)) public collectedOreAssetMapping;\r\n\r\n    /// @dev owner address to ore type to qty collected\r\n    mapping(address => mapping(uint8 => uint32)) public collectedOreBalanceMapping;\r\n\r\n    /// @dev owner address to ore type to qty collected\r\n    mapping(address => mapping(uint8 => uint32)) public distributedOreBalanceMapping;\r\n\r\n    /// @dev assetID to number of MEA trips it has completed\r\n    mapping(uint32 => uint32) public assetIdNumberOfTripsMapping;\r\n\r\n    /// @dev assetID to ore type to qty collected\r\n    mapping(uint8 => uint16) public starLightyearDistanceMapping;\r\n\r\n    /// @dev assetID to last star visited\r\n    mapping(uint32 => uint8) public assetIdToStarVisitedMapping;\r\n\r\n    /// @dev assetID to last star visited\r\n    mapping(uint16 => address) public resourceERC20Address;\r\n\r\n    /// @dev assetID to Start Time of Current Trip\r\n    mapping(uint32 => uint32) public assetIdCurrentTripStartTimeMapping;\r\n\r\n\r\n    /*** Variables ***/\r\n    uint256 public miningTimePerTrip = 3600; // 3600 for 1 hour 10\r\n    uint256 public aimeIncreasePerTrip = 2500; // 25.00\r\n\r\n    address cscERC721Address;\r\n    address cscFactoryERC721Address;\r\n    address hiddenLogicAddress;\r\n \r\n\r\n    function MEAManager() public {\r\n        require(msg.sender != address(0));\r\n        paused = true; \r\n        managerPrimary = msg.sender;\r\n        managerSecondary = msg.sender;\r\n        bankManager = msg.sender;\r\n        cscERC721Address = address(0xe4f5e0d5c033f517a943602df942e794a06bc123);\r\n        cscFactoryERC721Address = address(0xcc9a66acf8574141b0e025202dd57649765a4be7);\r\n    }\r\n\r\n    /*** Management Functions ***/\r\n\r\n    /// @dev Set HiddenLogic\r\n    function setHiddenLogic(address _hiddenLogicAddress) public onlyManager {\r\n        hiddenLogicAddress = _hiddenLogicAddress;\r\n    }\r\n\r\n    /// @dev Set HiddenLogic\r\n    function setResourceERC20Address(uint16 _resId, address _reourceAddress) public onlyManager {\r\n        resourceERC20Address[_resId] = _reourceAddress;\r\n    }\r\n\r\n    /// @dev Set HiddenLogic\r\n    function setAllResourceERC20Addresses(address _master) public onlyManager {\r\n        CSCResourceFactory factory = CSCResourceFactory(_master);\r\n        for(uint8 i = 0; i < 12; i++) {\r\n            resourceERC20Address[i] = factory.resourceIdToAddress(i);\r\n        }\r\n    }\r\n\r\n    /// @dev Set CSCErc721 Contract\r\n    function setCSCERC721(address _cscERC721Address) public onlyManager {\r\n        cscERC721Address = _cscERC721Address;\r\n    }\r\n\r\n     /// @dev Set CSCFactoryErc721 Contract\r\n    function setCSCFactoryERC721(address _cscFactoryERC721Address) public onlyManager {\r\n        cscFactoryERC721Address = _cscFactoryERC721Address;\r\n    }\r\n\r\n    /// @dev Set / Modify Lightyear Distance 3.456 ly = 3456\r\n    function setStarDistance(uint8 _starId, uint16 _lightyearsInThousands) public anyOperator {\r\n        starLightyearDistanceMapping[_starId] = _lightyearsInThousands;\r\n    }\r\n\r\n    /// @dev Set / Modify MEA Game Attributes\r\n    function setMEAAttributes(uint256 _aime, uint256 _miningTime) public onlyManager {\r\n        aimeIncreasePerTrip = _aime;\r\n        miningTimePerTrip = _miningTime;\r\n    }\r\n\r\n    /// @dev Withdraw Remaining Resource Tokens\r\n    function reclaimResourceDeposits(address _withdrawAddress) public onlyManager {\r\n        require(_withdrawAddress != address(0));\r\n        for(uint8 ii = 0; ii < 12; ii++) {\r\n            if(resourceERC20Address[ii] != 0) {\r\n                ERC20 resCont = ERC20(resourceERC20Address[ii]);\r\n                uint256 bal = resCont.balanceOf(this);\r\n                resCont.transfer(_withdrawAddress, bal);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*** Public Functions ***/\r\n\r\n     /// @dev Get Current Cargo Hold of AssetId (item names)\r\n    function getAssetIdCargo(uint32 _assetId) public view returns(uint256 iron, uint256 quartz, uint256 nickel, uint256 cobalt, uint256 silver, uint256 titanium, uint256 lucinite, uint256 gold, uint256 cosmethyst, uint256 allurum,  uint256 platinum,  uint256 trilite) {\r\n        uint256[12] memory _ores = getAssetIdCargoArray(_assetId);\r\n        iron = _ores[0];\r\n        quartz = _ores[1];\r\n        nickel = _ores[2];\r\n        cobalt = _ores[3];\r\n        silver = _ores[4];\r\n        titanium = _ores[5];\r\n        lucinite = _ores[6];\r\n        gold = _ores[7];\r\n        cosmethyst = _ores[8];\r\n        allurum = _ores[9];\r\n        platinum = _ores[10];\r\n        trilite = _ores[11];\r\n    }\r\n\r\n    // function getAllShipStats(uint32[] _shipIds) public view returns(uint32[] results) {\r\n    //     //loop all results\r\n    //     for(uint i = 0; i < _shipIds.length; i++) {\r\n    //         results[]];\r\n    //     }\r\n\r\n    // }\r\n\r\n    /// @dev Get Current Cargo Hold of AssetId (array)\r\n    function getAssetIdCargoArray (uint32 _assetId) public view returns(uint256[12])  {\r\n        MEAHiddenLogic logic = MEAHiddenLogic(hiddenLogicAddress);\r\n        return logic.getAssetCollectedOreBallancesArray(_assetId);\r\n    }\r\n\r\n    /// @dev Get AssetId Trip Completed Time\r\n    function getAssetIdTripCompletedTime(uint256 _assetId) external view returns(uint256 time) {\r\n        MEAHiddenLogic logic = MEAHiddenLogic(hiddenLogicAddress);\r\n        return logic.getReturnTime(uint32(_assetId));\r\n    }\r\n\r\n    /// @dev Get AssetId Trip Completed Time\r\n    function getAssetIdTripStartTime(uint256 _assetId) external view returns(uint256 time) {\r\n\r\n        return assetIdCurrentTripStartTimeMapping[uint32(_assetId)];\r\n    }\r\n\r\n    function getLastStarOfAssetId(uint32 _assetId) public view returns(uint8 starId){\r\n        return assetIdToStarVisitedMapping[_assetId];\r\n    }\r\n\r\n    /// @dev Get Resource Address\r\n    function getResourceERC20Address(uint16 _resId) public view returns(address resourceContract) {\r\n        return resourceERC20Address[_resId];\r\n    }\r\n\r\n    /// @dev Get Time\r\n    function getMEATime() external view returns(uint256 time) {\r\n        return now;\r\n    }\r\n\r\n    /// @dev Method to fetch processed ore details\r\n    function getCollectedOreBalances(address _owner) external view returns(uint256 iron, uint256 quartz, uint256 nickel, uint256 cobalt, uint256 silver, uint256 titanium, uint256 lucinite, uint256 gold, uint256 cosmethyst, uint256 allurum,  uint256 platinum,  uint256 trilite) {\r\n\r\n        iron = collectedOreBalanceMapping[_owner][0];\r\n        quartz = collectedOreBalanceMapping[_owner][1];\r\n        nickel = collectedOreBalanceMapping[_owner][2];\r\n        cobalt = collectedOreBalanceMapping[_owner][3];\r\n        silver = collectedOreBalanceMapping[_owner][4];\r\n        titanium = collectedOreBalanceMapping[_owner][5];\r\n        lucinite = collectedOreBalanceMapping[_owner][6];\r\n        gold = collectedOreBalanceMapping[_owner][7];\r\n        cosmethyst = collectedOreBalanceMapping[_owner][8];\r\n        allurum = collectedOreBalanceMapping[_owner][9];\r\n        platinum = collectedOreBalanceMapping[_owner][10];\r\n        trilite = collectedOreBalanceMapping[_owner][11];\r\n    }\r\n\r\n    /// @dev Method to fetch processed ore details\r\n    function getDistributedOreBalances(address _owner) external view returns(uint256 iron, uint256 quartz, uint256 nickel, uint256 cobalt, uint256 silver, uint256 titanium, uint256 lucinite, uint256 gold, uint256 cosmethyst, uint256 allurum,  uint256 platinum,  uint256 trilite) {\r\n\r\n        iron = distributedOreBalanceMapping[_owner][0];\r\n        quartz = distributedOreBalanceMapping[_owner][1];\r\n        nickel = distributedOreBalanceMapping[_owner][2];\r\n        cobalt = distributedOreBalanceMapping[_owner][3];\r\n        silver = distributedOreBalanceMapping[_owner][4];\r\n        titanium = distributedOreBalanceMapping[_owner][5];\r\n        lucinite = distributedOreBalanceMapping[_owner][6];\r\n        gold = distributedOreBalanceMapping[_owner][7];\r\n        cosmethyst = distributedOreBalanceMapping[_owner][8];\r\n        allurum = distributedOreBalanceMapping[_owner][9];\r\n        platinum = distributedOreBalanceMapping[_owner][10];\r\n        trilite = distributedOreBalanceMapping[_owner][11];\r\n    }\r\n\r\n    function withdrawCollectedResources() public {\r\n\r\n        for(uint8 ii = 0; ii < 12; ii++) {\r\n            require(resourceERC20Address[ii] != address(0));\r\n            uint32 oreOutstanding = collectedOreBalanceMapping[msg.sender][ii] - distributedOreBalanceMapping[msg.sender][ii];\r\n            if(oreOutstanding > 0) {\r\n                ERC20 resCont = ERC20(resourceERC20Address[ii]);\r\n                distributedOreBalanceMapping[msg.sender][ii] += oreOutstanding;\r\n                resCont.transfer(msg.sender, oreOutstanding);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //Gets star distance in thousandths of ly\r\n    function getStarDistanceInLyThousandths(uint8 _starId) public view returns (uint32 total) {\r\n        return starLightyearDistanceMapping[_starId];\r\n    }\r\n    \r\n    //Gets total resources already claimed by commanders\r\n    function totalMEATonsClaimed() public view returns (uint32 total) {\r\n        MEAHiddenLogic logic = MEAHiddenLogic(hiddenLogicAddress);\r\n        return logic.getTotalTonsClaimed();\r\n    }\r\n\r\n    //Gets total seeded supply commanders\r\n    function totalMEATonsSupply() public view returns (uint32 total) {\r\n        MEAHiddenLogic logic = MEAHiddenLogic(hiddenLogicAddress);\r\n        return logic.getTotalSupply();\r\n    }\r\n\r\n     function totalStarSupplyRemaining(uint8 _starId) external view returns(uint32) {\r\n        MEAHiddenLogic logic = MEAHiddenLogic(hiddenLogicAddress);\r\n        return logic.getStarTotalSupply(_starId);\r\n    }\r\n\r\n    function claimOreOnlyFromAssetId(uint256 _assetId) {\r\n        uint256 collectibleClass = 0;\r\n        address shipOwner;\r\n        (collectibleClass, shipOwner) = _getShipInfo(_assetId);\r\n\r\n         require(shipOwner == msg.sender);\r\n\r\n        _claimOreAndClear(uint32(_assetId), 0);\r\n    }\r\n    /// @dev For creating CSC Collectible\r\n    function launchShipOnMEA(uint256 _assetId, uint8 starId) public whenNotPaused returns(uint256) {\r\n        \r\n        MEAHiddenLogic logic = MEAHiddenLogic(hiddenLogicAddress);\r\n\r\n        uint256 collectibleClass = 0;\r\n        address shipOwner;\r\n\r\n        (collectibleClass, shipOwner) = _getShipInfo(_assetId);\r\n\r\n        //Check if the ship owner is sender\r\n        require(shipOwner == msg.sender);\r\n\r\n        //Check if ship is back at earth\r\n        require(now > logic.getReturnTime(_assetId));\r\n        \r\n        //Claims ore and clears\r\n        _claimOreAndClear(uint32(_assetId), starId);\r\n\r\n        //Get Asset Stats\r\n        uint tripCount = assetIdNumberOfTripsMapping[uint32(_assetId)];\r\n        uint starTripDist = starLightyearDistanceMapping[starId];\r\n        uint256 oreMax = 5;\r\n        uint256 tripSeconds = 10;\r\n\r\n        if(collectibleClass == REAPER_INTREPID) {\r\n            oreMax = REAPER_INTREPID_EXTRACTION_BASE + (REAPER_INTREPID_EXTRACTION_BASE * tripCount * aimeIncreasePerTrip / 10000);\r\n            tripSeconds = REAPER_INTREPID_FTL_SPEED * starTripDist / 1000; // 4LPH - 900 seconds per light year\r\n            if(oreMax > REAPER_INTREPID_MAX_CARGO)\r\n                oreMax = REAPER_INTREPID_MAX_CARGO;\r\n        }\r\n        else if(collectibleClass == PHOENIX_CORSAIR) {\r\n            oreMax = PHOENIX_CORSAIR_EXTRACTION_BASE + (PHOENIX_CORSAIR_EXTRACTION_BASE * tripCount * aimeIncreasePerTrip / 10000);\r\n            tripSeconds = PHOENIX_CORSAIR_FTL_SPEED * starTripDist / 1000; // 2.5LPH - 1440 seconds per light year\r\n            if(oreMax > PHOENIX_CORSAIR_MAX_CARGO)\r\n                oreMax = PHOENIX_CORSAIR_MAX_CARGO;\r\n        }\r\n        else if(collectibleClass == VULCAN_PROMETHEUS) {\r\n            oreMax = VULCAN_PROMETHEUS_EXTRACTION_BASE + (VULCAN_PROMETHEUS_EXTRACTION_BASE * tripCount * aimeIncreasePerTrip / 10000);\r\n            tripSeconds = VULCAN_PROMETHEUS_FTL_SPEED * starTripDist / 1000; // 1.75LPH - 2057 seconds per light year\r\n            if(oreMax > VULCAN_PROMETHEUS_MAX_CARGO)\r\n                oreMax = VULCAN_PROMETHEUS_MAX_CARGO;\r\n        }\r\n        else if(collectibleClass == SIGMA) {\r\n            oreMax = SIGMA_EXTRACTION_BASE + (SIGMA_EXTRACTION_BASE * tripCount * aimeIncreasePerTrip / 10000);\r\n            tripSeconds = SIGMA_FTL_SPEED * starTripDist / 1000; // 0.85LPH - 4235 seconds per light year\r\n            if(oreMax > SIGMA_MAX_CARGO)\r\n                oreMax = SIGMA_MAX_CARGO;\r\n        }\r\n        else if(collectibleClass == HAYATO) { //Hayato\r\n            oreMax = HAYATO_EXTRACTION_BASE + (HAYATO_EXTRACTION_BASE * tripCount * aimeIncreasePerTrip / 10000);\r\n            tripSeconds = HAYATO_FTL_SPEED * starTripDist / 1000; // 10LPH - 360 seconds per light year\r\n            if(oreMax > HAYATO_MAX_CARGO)\r\n                oreMax = HAYATO_MAX_CARGO;\r\n        }\r\n        else if(collectibleClass == CPGPEREGRINE) { //CPG Peregrine\r\n            oreMax = CPGPEREGRINE_EXTRACTION_BASE + (CPGPEREGRINE_EXTRACTION_BASE * tripCount * aimeIncreasePerTrip / 10000);\r\n            tripSeconds = CPGPEREGRINE_FTL_SPEED * starTripDist / 1000; // 5LPH -720 seconds per light year\r\n            if(oreMax > CPGPEREGRINE_MAX_CARGO)\r\n                oreMax = CPGPEREGRINE_MAX_CARGO;\r\n        }\r\n        else if(collectibleClass == TACTICALCRUISER) { //TACTICA CRUISER Ships\r\n            oreMax = TACTICALCRUISER_EXTRACTION_BASE + (TACTICALCRUISER_EXTRACTION_BASE * tripCount * aimeIncreasePerTrip / 10000);\r\n            tripSeconds = TACTICALCRUISER_FTL_SPEED * starTripDist / 1000; \r\n            if(oreMax > TACTICALCRUISER_MAX_CARGO)\r\n                oreMax = TACTICALCRUISER_MAX_CARGO;\r\n        }\r\n        else if(collectibleClass == VULCAN_POD) { //TACTICA CRUISER Ships\r\n            oreMax = VULCAN_POD_EXTRACTION_BASE + (VULCAN_POD_EXTRACTION_BASE * tripCount * aimeIncreasePerTrip / 10000);\r\n            tripSeconds = VULCAN_POD_FTL_SPEED * starTripDist / 1000; \r\n            if(oreMax > VULCAN_POD_MAX_CARGO)\r\n                oreMax = VULCAN_POD_MAX_CARGO;\r\n        }\r\n        else if(collectibleClass >= DEVCLASS) { //Dev Ships\r\n            oreMax = DEVCLASS_EXTRACTION_BASE + (DEVCLASS_EXTRACTION_BASE * tripCount * aimeIncreasePerTrip / 10000);\r\n            tripSeconds = DEVCLASS_FTL_SPEED * starTripDist / 1000;\r\n            if(oreMax > DEVCLASS_MAX_CARGO)\r\n                oreMax = DEVCLASS_MAX_CARGO;\r\n        } else {\r\n            if(collectibleClass >= OTHERCRUISER) { //Support Other Promo Ships\r\n                oreMax = OTHERCRUISER_EXTRACTION_BASE + (OTHERCRUISER_EXTRACTION_BASE * tripCount * aimeIncreasePerTrip / 10000);\r\n                tripSeconds = OTHERCRUISER_FTL_SPEED * starTripDist / 1000; \r\n                if(oreMax > OTHERCRUISER_MAX_CARGO)\r\n                    oreMax = OTHERCRUISER_MAX_CARGO;\r\n            }\r\n        }\r\n\r\n        //Make Round Trip + Mining\r\n        tripSeconds = ((tripSeconds * 2) + miningTimePerTrip); //3600 for an hour - 0 for testing ***************************\r\n\r\n        //calculate travel time\r\n        uint256 returnTime = logic.startMEAMission(_assetId, oreMax, starId, tripSeconds);\r\n\r\n        //Confirm trip\r\n        if(returnTime > 0) {\r\n            assetIdNumberOfTripsMapping[uint32(_assetId)] += 1;\r\n            assetIdToStarVisitedMapping[uint32(_assetId)] = starId;\r\n            assetIdCurrentTripStartTimeMapping[uint32(_assetId)] = uint32(now);\r\n        }\r\n        \r\n        return returnTime;\r\n    }\r\n\r\n\r\n    /*** PRIVATE FUNCTIONS ***/\r\n\r\n    /// @dev  Safety check on _to address to prevent against an unexpected 0x0 default.\r\n    function _addressNotNull(address _to) internal pure returns (bool) {\r\n        return _to != address(0);\r\n    }\r\n\r\n    /// @dev  Claims and clears cargo -- ONLY INTERNAL\r\n    function _claimOreAndClear (uint32 _assetId, uint8 _starId) internal {\r\n        MEAHiddenLogic logic = MEAHiddenLogic(hiddenLogicAddress);\r\n        uint256[12] memory _ores = logic.getAssetCollectedOreBallancesArray(_assetId);\r\n        bool hasItems = false;\r\n\r\n        for(uint8 i = 0; i < 12; i++) {\r\n            if(_ores[i] > 0) {\r\n                collectedOreBalanceMapping[msg.sender][i] += uint32(_ores[i]);\r\n                hasItems = true;\r\n            }\r\n        }\r\n\r\n        //Doesn't Let you Travel to empty stars but lets you collect\r\n        if(hasItems == false && _starId > 0) {\r\n            require(logic.getStarTotalSupply(_starId) > 0);\r\n        }\r\n\r\n        logic.emptyShipCargo(_assetId);\r\n    }\r\n\r\n    function _getShipInfo(uint256 _assetId) internal view returns (uint256 collectibleClass, address owner) {\r\n        \r\n        uint256 nulldata;\r\n        bool nullbool;\r\n        uint256 collectibleType;\r\n\r\n        if(_assetId <= 3000) {\r\n            CSCERC721 shipData = CSCERC721(cscERC721Address);\r\n            (nulldata, nulldata, collectibleType, collectibleClass, nullbool, owner) = shipData.getCollectibleDetails(_assetId);\r\n        } else {\r\n            bytes32 nullstring;\r\n            CSCFactoryERC721 shipFData = CSCFactoryERC721(cscFactoryERC721Address);\r\n            (nulldata, nulldata, collectibleType, collectibleClass, nullstring, nullbool, owner) = shipFData.getCollectibleDetails(_assetId);\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"resourceERC20Address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SIGMA_EXTRACTION_BASE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_assetId\",\"type\":\"uint256\"}],\"name\":\"claimOreOnlyFromAssetId\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VULCAN_POD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CPGPEREGRINE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"distributedOreBalanceMapping\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEVCLASS_EXTRACTION_BASE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HAYATO_MAX_CARGO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_aime\",\"type\":\"uint256\"},{\"name\":\"_miningTime\",\"type\":\"uint256\"}],\"name\":\"setMEAAttributes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMEATonsClaimed\",\"outputs\":[{\"name\":\"total\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_assetId\",\"type\":\"uint32\"}],\"name\":\"getAssetIdCargo\",\"outputs\":[{\"name\":\"iron\",\"type\":\"uint256\"},{\"name\":\"quartz\",\"type\":\"uint256\"},{\"name\":\"nickel\",\"type\":\"uint256\"},{\"name\":\"cobalt\",\"type\":\"uint256\"},{\"name\":\"silver\",\"type\":\"uint256\"},{\"name\":\"titanium\",\"type\":\"uint256\"},{\"name\":\"lucinite\",\"type\":\"uint256\"},{\"name\":\"gold\",\"type\":\"uint256\"},{\"name\":\"cosmethyst\",\"type\":\"uint256\"},{\"name\":\"allurum\",\"type\":\"uint256\"},{\"name\":\"platinum\",\"type\":\"uint256\"},{\"name\":\"trilite\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"otherManagers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PHOENIX_CORSAIR_EXTRACTION_BASE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_assetId\",\"type\":\"uint256\"}],\"name\":\"getAssetIdTripCompletedTime\",\"outputs\":[{\"name\":\"time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_starId\",\"type\":\"uint8\"},{\"name\":\"_lightyearsInThousands\",\"type\":\"uint16\"}],\"name\":\"setStarDistance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEVCLASS_FTL_SPEED\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TACTICALCRUISER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"assetIdToStarVisitedMapping\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"miningTimePerTrip\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"collectedOreBalanceMapping\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawCollectedResources\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HAYATO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"starLightyearDistanceMapping\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VULCAN_POD_EXTRACTION_BASE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REAPER_INTREPID_MAX_CARGO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_assetId\",\"type\":\"uint32\"}],\"name\":\"getAssetIdCargoArray\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[12]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_assetId\",\"type\":\"uint256\"},{\"name\":\"starId\",\"type\":\"uint8\"}],\"name\":\"launchShipOnMEA\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VULCAN_PROMETHEUS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PHOENIX_CORSAIR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OTHERCRUISER_FTL_SPEED\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMEATime\",\"outputs\":[{\"name\":\"time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TACTICALCRUISER_EXTRACTION_BASE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VULCAN_POD_MAX_CARGO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_starId\",\"type\":\"uint8\"}],\"name\":\"totalStarSupplyRemaining\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HAYATO_FTL_SPEED\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"assetIdCurrentTripStartTimeMapping\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"collectedOreAssetMapping\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEVCLASS_MAX_CARGO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEVCLASS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PHOENIX_CORSAIR_FTL_SPEED\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REAPER_INTREPID_FTL_SPEED\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HAYATO_EXTRACTION_BASE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SIGMA_FTL_SPEED\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newGM\",\"type\":\"address\"}],\"name\":\"setSecondaryManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SIGMA\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"noError\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PHOENIX_CORSAIR_MAX_CARGO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VULCAN_PROMETHEUS_EXTRACTION_BASE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VULCAN_POD_FTL_SPEED\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OTHERCRUISER_EXTRACTION_BASE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TACTICALCRUISER_MAX_CARGO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getCollectedOreBalances\",\"outputs\":[{\"name\":\"iron\",\"type\":\"uint256\"},{\"name\":\"quartz\",\"type\":\"uint256\"},{\"name\":\"nickel\",\"type\":\"uint256\"},{\"name\":\"cobalt\",\"type\":\"uint256\"},{\"name\":\"silver\",\"type\":\"uint256\"},{\"name\":\"titanium\",\"type\":\"uint256\"},{\"name\":\"lucinite\",\"type\":\"uint256\"},{\"name\":\"gold\",\"type\":\"uint256\"},{\"name\":\"cosmethyst\",\"type\":\"uint256\"},{\"name\":\"allurum\",\"type\":\"uint256\"},{\"name\":\"platinum\",\"type\":\"uint256\"},{\"name\":\"trilite\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hiddenLogicAddress\",\"type\":\"address\"}],\"name\":\"setHiddenLogic\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cscERC721Address\",\"type\":\"address\"}],\"name\":\"setCSCERC721\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OTHERCRUISER_MAX_CARGO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REAPER_INTREPID_EXTRACTION_BASE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"aimeIncreasePerTrip\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VULCAN_PROMETHEUS_FTL_SPEED\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"hasError\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_assetId\",\"type\":\"uint256\"}],\"name\":\"getAssetIdTripStartTime\",\"outputs\":[{\"name\":\"time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"managerPrimary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOp\",\"type\":\"address\"},{\"name\":\"_state\",\"type\":\"uint8\"}],\"name\":\"setOtherManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CPGPEREGRINE_FTL_SPEED\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_assetId\",\"type\":\"uint32\"}],\"name\":\"getLastStarOfAssetId\",\"outputs\":[{\"name\":\"starId\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CPGPEREGRINE_EXTRACTION_BASE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newGM\",\"type\":\"address\"}],\"name\":\"setPrimaryManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"error\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_starId\",\"type\":\"uint8\"}],\"name\":\"getStarDistanceInLyThousandths\",\"outputs\":[{\"name\":\"total\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SIGMA_MAX_CARGO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getDistributedOreBalances\",\"outputs\":[{\"name\":\"iron\",\"type\":\"uint256\"},{\"name\":\"quartz\",\"type\":\"uint256\"},{\"name\":\"nickel\",\"type\":\"uint256\"},{\"name\":\"cobalt\",\"type\":\"uint256\"},{\"name\":\"silver\",\"type\":\"uint256\"},{\"name\":\"titanium\",\"type\":\"uint256\"},{\"name\":\"lucinite\",\"type\":\"uint256\"},{\"name\":\"gold\",\"type\":\"uint256\"},{\"name\":\"cosmethyst\",\"type\":\"uint256\"},{\"name\":\"allurum\",\"type\":\"uint256\"},{\"name\":\"platinum\",\"type\":\"uint256\"},{\"name\":\"trilite\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_withdrawAddress\",\"type\":\"address\"}],\"name\":\"reclaimResourceDeposits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CPGPEREGRINE_MAX_CARGO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"assetIdNumberOfTripsMapping\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REAPER_INTREPID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bankManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OTHERCRUISER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_resId\",\"type\":\"uint16\"}],\"name\":\"getResourceERC20Address\",\"outputs\":[{\"name\":\"resourceContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"managerSecondary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newBK\",\"type\":\"address\"}],\"name\":\"setBanker\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VULCAN_PROMETHEUS_MAX_CARGO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_master\",\"type\":\"address\"}],\"name\":\"setAllResourceERC20Addresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_resId\",\"type\":\"uint16\"},{\"name\":\"_reourceAddress\",\"type\":\"address\"}],\"name\":\"setResourceERC20Address\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMEATonsSupply\",\"outputs\":[{\"name\":\"total\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cscFactoryERC721Address\",\"type\":\"address\"}],\"name\":\"setCSCFactoryERC721\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TACTICALCRUISER_FTL_SPEED\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"otherManager\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"state\",\"type\":\"uint256\"}],\"name\":\"OtherManagerUpdated\",\"type\":\"event\"}]","ContractName":"MEAManager","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e8bf8afd92792b16a1813929b3b842caf5a96539d40fdb1a7de9b55dd40b0361"}]}