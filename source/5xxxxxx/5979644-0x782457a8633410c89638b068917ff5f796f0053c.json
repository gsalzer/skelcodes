{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract ERC20 {\r\n    function balanceOf(address tokenOwner) public constant returns (uint256 balance);\r\n    function transfer(address to, uint256 tokens) public returns (bool success);\r\n}\r\n\r\ncontract owned {\r\n    function owned() public { owner = msg.sender; }\r\n    address owner;\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract airdropManager is owned {\r\n\r\n    function send(address tokenAddress, address[] addressList, uint256[] amountList) public onlyOwner {\r\n        require(addressList.length == amountList.length);\r\n        for (uint i = 0; i < addressList.length; i++) {\r\n            ERC20(tokenAddress).transfer(addressList[i], amountList[i] * 1e18);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"addressList\",\"type\":\"address[]\"},{\"name\":\"amountList\",\"type\":\"uint256[]\"}],\"name\":\"send\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"airdropManager","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://993d0c4a6daaee390bca644a9f7b24497ca70e5f5401e1e0d14e663f1156e54f"}]}