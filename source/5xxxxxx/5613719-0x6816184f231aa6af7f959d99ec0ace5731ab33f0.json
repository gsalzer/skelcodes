{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n// File: contracts/storage/RocketStorage.sol\r\n\r\n/// @title The primary persistent storage for Rocket Pool\r\n/// @author David Rugendyke\r\ncontract RocketStorage {\r\n\r\n    /**** Storage Types *******/\r\n\r\n    mapping(bytes32 => uint256)    private uIntStorage;\r\n    mapping(bytes32 => string)     private stringStorage;\r\n    mapping(bytes32 => address)    private addressStorage;\r\n    mapping(bytes32 => bytes)      private bytesStorage;\r\n    mapping(bytes32 => bool)       private boolStorage;\r\n    mapping(bytes32 => int256)     private intStorage;\r\n\r\n\r\n    /*** Modifiers ************/\r\n\r\n    /// @dev Only allow access from the latest version of a contract in the Rocket Pool network after deployment\r\n    modifier onlyLatestRocketNetworkContract() {\r\n        // The owner and other contracts are only allowed to set the storage upon deployment to register the initial contracts/settings, afterwards their direct access is disabled\r\n        if (boolStorage[keccak256(\"contract.storage.initialised\")] == true) {\r\n            // Make sure the access is permitted to only contracts in our Dapp\r\n            require(addressStorage[keccak256(\"contract.address\", msg.sender)] != 0x0);\r\n        }\r\n        _;\r\n    }\r\n\r\n\r\n    /// @dev constructor\r\n    constructor() public {\r\n        // Set the main owner upon deployment\r\n        boolStorage[keccak256(\"access.role\", \"owner\", msg.sender)] = true;\r\n    }\r\n\r\n\r\n    /**** Get Methods ***********/\r\n   \r\n    /// @param _key The key for the record\r\n    function getAddress(bytes32 _key) external view returns (address) {\r\n        return addressStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function getUint(bytes32 _key) external view returns (uint) {\r\n        return uIntStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function getString(bytes32 _key) external view returns (string) {\r\n        return stringStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function getBytes(bytes32 _key) external view returns (bytes) {\r\n        return bytesStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function getBool(bytes32 _key) external view returns (bool) {\r\n        return boolStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function getInt(bytes32 _key) external view returns (int) {\r\n        return intStorage[_key];\r\n    }\r\n\r\n    /**** Set Methods ***********/\r\n\r\n    /// @param _key The key for the record\r\n    function setAddress(bytes32 _key, address _value) onlyLatestRocketNetworkContract external {\r\n        addressStorage[_key] = _value;\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function setUint(bytes32 _key, uint _value) onlyLatestRocketNetworkContract external {\r\n        uIntStorage[_key] = _value;\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function setString(bytes32 _key, string _value) onlyLatestRocketNetworkContract external {\r\n        stringStorage[_key] = _value;\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function setBytes(bytes32 _key, bytes _value) onlyLatestRocketNetworkContract external {\r\n        bytesStorage[_key] = _value;\r\n    }\r\n    \r\n    /// @param _key The key for the record\r\n    function setBool(bytes32 _key, bool _value) onlyLatestRocketNetworkContract external {\r\n        boolStorage[_key] = _value;\r\n    }\r\n    \r\n    /// @param _key The key for the record\r\n    function setInt(bytes32 _key, int _value) onlyLatestRocketNetworkContract external {\r\n        intStorage[_key] = _value;\r\n    }\r\n\r\n    /**** Delete Methods ***********/\r\n    \r\n    /// @param _key The key for the record\r\n    function deleteAddress(bytes32 _key) onlyLatestRocketNetworkContract external {\r\n        delete addressStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function deleteUint(bytes32 _key) onlyLatestRocketNetworkContract external {\r\n        delete uIntStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function deleteString(bytes32 _key) onlyLatestRocketNetworkContract external {\r\n        delete stringStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function deleteBytes(bytes32 _key) onlyLatestRocketNetworkContract external {\r\n        delete bytesStorage[_key];\r\n    }\r\n    \r\n    /// @param _key The key for the record\r\n    function deleteBool(bytes32 _key) onlyLatestRocketNetworkContract external {\r\n        delete boolStorage[_key];\r\n    }\r\n    \r\n    /// @param _key The key for the record\r\n    function deleteInt(bytes32 _key) onlyLatestRocketNetworkContract external {\r\n        delete intStorage[_key];\r\n    }\r\n\r\n    /**** Hash Helpers **************/\r\n    function kcck256str(string _key1) external pure returns (bytes32) {\r\n        return keccak256(_key1);\r\n    }\r\n\r\n    function kcck256strstr(string _key1, string _key2) external pure returns (bytes32) {\r\n        return keccak256(_key1, _key2);\r\n    }\r\n\r\n    function kcck256stradd(string _key1, address _key2) external pure returns (bytes32) {\r\n        return keccak256(_key1, _key2);\r\n    }\r\n\r\n    function kcck256straddadd(string _key1, address _key2, address _key3) external pure returns (bytes32) {\r\n        return keccak256(_key1, _key2, _key3);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteBool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"bytes\"}],\"name\":\"setBytes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"int256\"}],\"name\":\"setInt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key1\",\"type\":\"string\"},{\"name\":\"_key2\",\"type\":\"string\"}],\"name\":\"kcck256strstr\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key1\",\"type\":\"string\"}],\"name\":\"kcck256str\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteBytes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"string\"}],\"name\":\"setString\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getBool\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteInt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setBool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getUint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getBytes\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key1\",\"type\":\"string\"},{\"name\":\"_key2\",\"type\":\"address\"}],\"name\":\"kcck256stradd\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getInt\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setUint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteUint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key1\",\"type\":\"string\"},{\"name\":\"_key2\",\"type\":\"address\"},{\"name\":\"_key3\",\"type\":\"address\"}],\"name\":\"kcck256straddadd\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteString\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"RocketStorage","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e9e112576796c7464e9dc3335600f9f8b5d1f5106134d4cbcbdf77c968a58448"}]}