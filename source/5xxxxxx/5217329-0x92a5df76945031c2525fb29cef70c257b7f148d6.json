{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract Pass {\r\n    address private admin;\r\n    uint private price;\r\n    function Pass() public{\r\n        admin = msg.sender;\r\n        price = 10 ** 15;\r\n    }\r\n\r\n    struct PasswordBook{\r\n        string [] platforms;        /// 平台\r\n        string [] accounts;         /// 密码描述列表\r\n        string [] passwords;        /// 密码列表\r\n    }\r\n\r\n    mapping (address => PasswordBook) private userbook;   /// 用户地址 映射密码本\r\n    mapping (address => uint) private registerUsers;     /// 拥有密码本的用户地址\r\n\r\n    event BookUpdated(address _sender, bool _success);\r\n    /// 增加密码\r\n    function addPassword(string platform, string account, string password) public payable {\r\n        checkLength(platform);\r\n        checkLength(account);\r\n        checkLength(password);\r\n        require(msg.value >= price);\r\n        admin.transfer(msg.value);\r\n        registerUsers[msg.sender] += 1;\r\n        userbook[msg.sender].platforms.push(platform);\r\n        userbook[msg.sender].accounts.push(account);\r\n        userbook[msg.sender].passwords.push(password);\r\n        BookUpdated(msg.sender, true);\r\n    }\r\n\r\n    function getBookLength() public view returns (uint){\r\n        return registerUsers[msg.sender];\r\n    }\r\n\r\n    function getBook(uint _index) public view returns (string, string, string){\r\n        require(_index>=0);\r\n        require(_index < registerUsers[msg.sender]);\r\n        return (userbook[msg.sender].platforms[_index], userbook[msg.sender].accounts[_index], userbook[msg.sender].passwords[_index]);\r\n    }\r\n\r\n    function updatePassword(uint _index, string platform, string account, string password) public payable {\r\n        checkLength(platform);\r\n        checkLength(account);\r\n        checkLength(password);\r\n        if(_index >= registerUsers[msg.sender]) revert();\r\n        require(msg.value >= price);\r\n        admin.transfer(msg.value);\r\n        userbook[msg.sender].platforms[_index] = platform;\r\n        userbook[msg.sender].accounts[_index] = account;\r\n        userbook[msg.sender].passwords[_index] = password;\r\n        BookUpdated(msg.sender, true);\r\n    }\r\n\r\n    function updatePrice(uint p) public{\r\n        require(msg.sender == admin);\r\n        price = p;\r\n    }\r\n\r\n    function getPrice() public view returns (uint){\r\n        return price;\r\n    }\r\n\r\n    function checkLength(string str) private pure {\r\n        bytes memory strBytes = bytes(str);\r\n        if (strBytes.length > 100)\r\n            revert();\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"account\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"}],\"name\":\"addPassword\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"p\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"account\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"}],\"name\":\"updatePassword\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getBook\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBookLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_success\",\"type\":\"bool\"}],\"name\":\"BookUpdated\",\"type\":\"event\"}]","ContractName":"Pass","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3fd7fea0d98ada2ff5ad29f871ff5f0177c1c91d7b9f4174a712c944bd595996"}]}