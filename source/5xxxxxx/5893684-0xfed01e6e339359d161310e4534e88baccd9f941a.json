{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract BaseToken {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(_to != address(0));\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n        emit Transfer(_from, _to, _value);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    // function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n    //     require(_value <= allowance[_from][msg.sender]);\r\n    //     allowance[_from][msg.sender] -= _value;\r\n    //     _transfer(_from, _to, _value);\r\n    //     return true;\r\n    // }\r\n\r\n    // function approve(address _spender, uint256 _value) public returns (bool success) {\r\n    //     allowance[msg.sender][_spender] = _value;\r\n    //     emit Approval(msg.sender, _spender, _value);\r\n    //     return true;\r\n    // }\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract AirdropToken is BaseToken, Ownable {\r\n    // uint256 public airAmount;\r\n    address public airSender;\r\n    // uint32 public airLimitCount;\r\n    // bool public airState;\r\n\r\n    // mapping (address => uint32) public airCountOf;\r\n\r\n    // event Airdrop(address indexed from, uint32 indexed count, uint256 tokenValue);\r\n\r\n    // function setAirState(bool _state) public onlyOwner {\r\n    //     airState = _state;\r\n    // }\r\n\r\n    // function setAirAmount(uint256 _amount) public onlyOwner {\r\n    //     airAmount = _amount;\r\n    // }\r\n\r\n    // function setAirLimitCount(uint32 _count) public onlyOwner {\r\n    //     airLimitCount = _count;\r\n    // }\r\n\r\n    // function setAirSender(address _sender) public onlyOwner {\r\n    //     airSender = _sender;\r\n    // }\r\n\r\n    // function airdrop() public payable {\r\n    //     require(airState == true);\r\n    //     require(msg.value == 0);\r\n    //     if (airLimitCount > 0 && airCountOf[msg.sender] >= airLimitCount) {\r\n    //         revert();\r\n    //     }\r\n    //     _transfer(airSender, msg.sender, airAmount);\r\n    //     airCountOf[msg.sender] += 1;\r\n    //     emit Airdrop(msg.sender, airCountOf[msg.sender], airAmount);\r\n    // }\r\n\r\n    function airdropToAdresses(address[] _tos, uint _amount) public onlyOwner {\r\n        uint total = _amount * _tos.length;\r\n        require(total >= _amount && balanceOf[airSender] >= total);\r\n        balanceOf[airSender] -= total;\r\n        for (uint i = 0; i < _tos.length; i++) {\r\n            balanceOf[_tos[i]] += _amount;\r\n            emit Transfer(airSender, _tos[i], _amount);\r\n        }\r\n    }\r\n}\r\n\r\ncontract CustomToken is BaseToken, AirdropToken {\r\n    constructor() public {\r\n        totalSupply = 10000000000000000000000000000;\r\n        name = 'T0703';\r\n        symbol = 'T0703';\r\n        decimals = 18;\r\n        balanceOf[msg.sender] = totalSupply;\r\n        emit Transfer(address(0), address(msg.sender), totalSupply);\r\n\r\n        // airAmount = 500000000000000000000;\r\n        // airState = false;\r\n        airSender = msg.sender;\r\n        // airLimitCount = 2;\r\n    }\r\n\r\n    function() public payable {\r\n        // airdrop();\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tos\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"airdropToAdresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airSender\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"CustomToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9fdc16a7efa49681428a0d766f1acb38d86ba264d41a8995a97b596b2d51a1fb"}]}