{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity^0.4.18;\r\n\r\ncontract Owned {\r\n    address owner;\r\n    \r\n    modifier onlyowner(){\r\n        if (msg.sender == owner) {\r\n            _;\r\n        }\r\n    }\r\n\r\n    function Owned() internal {\r\n        owner = msg.sender;\r\n    }\r\n}\r\n\r\n\r\n\r\ncontract ethKeepHand is Owned{\r\n\r\n    struct DepositItem{\r\n        \r\n        uint depositDate;     //Date of deposit\r\n        uint256 depositValue; //The amount of deposit\r\n        uint depositTime;     //The terms of deposit\r\n        uint  valid;          //The address is in the state of deposit:\r\n                              //1 indicates that there is a deposit in the corresponding address, and 0 indicates no.\r\n    }\r\n\r\n     mapping(address => DepositItem)  DepositItems;\r\n\r\n     event DepositTime(uint time);\r\n     \r\n     //Judge whether you can withdraw money\r\n     modifier withdrawable(address adr){\r\n\r\n         require(this.balance >= DepositItems[adr].depositValue);\r\n         _;\r\n     }\r\n    \r\n    //Determine whether you can deposit money\r\n    modifier isright()\r\n    {\r\n        require(DepositItems[msg.sender].valid !=1);\r\n        _;\r\n    }\r\n\r\n\r\n\r\n    //deposit\r\n    function addDeposit(uint _time) external payable isright{\r\n         \r\n         DepositTime(_time);\r\n         DepositItems[msg.sender].depositDate = now;\r\n         DepositItems[msg.sender].depositValue = msg.value;\r\n         DepositItems[msg.sender].depositTime = _time;\r\n         DepositItems[msg.sender].valid =1;\r\n\r\n     }\r\n\r\n     //Note how many days are left until the date of withdrawal.\r\n     function withdrawtime() external view returns(uint){\r\n       \r\n       if(DepositItems[msg.sender].depositDate + DepositItems[msg.sender].depositTime > now){\r\n         return DepositItems[msg.sender].depositDate + DepositItems[msg.sender].depositTime - now;\r\n       }\r\n       \r\n        return 0;\r\n     }\r\n\r\n     //withdrawals\r\n     function withdrawals() withdrawable(msg.sender) external{\r\n\r\n        DepositItems[msg.sender].valid = 0;\r\n        uint256 backvalue = DepositItems[msg.sender].depositValue;\r\n        DepositItems[msg.sender].depositValue = 0;\r\n        msg.sender.transfer(backvalue);\r\n\r\n\r\n     }\r\n    \r\n     //Amount of deposit\r\n    function getdepositValue()  external view returns(uint)\r\n     {\r\n        \r\n        return DepositItems[msg.sender].depositValue;\r\n     }\r\n     //Contract balance\r\n     function getvalue() public view returns(uint)\r\n     {\r\n         \r\n         return this.balance;\r\n     }\r\n      //Decide whether to deposit money\r\n     function  isdeposit() external view returns(uint){\r\n\r\n         return DepositItems[msg.sender].valid;\r\n       }\r\n\r\n\r\n      function() public payable{\r\n          \r\n          revert();\r\n      }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getdepositValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getvalue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"addDeposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawals\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isdeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawtime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"DepositTime\",\"type\":\"event\"}]","ContractName":"ethKeepHand","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1d6b8643aacb575c8a26a41f48ab6e7d06fc2a1c29a5009689cca2285e2c4d73"}]}