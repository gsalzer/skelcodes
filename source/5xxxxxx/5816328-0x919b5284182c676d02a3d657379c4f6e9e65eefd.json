{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\ncontract casinoRoyale {\r\n    AbstractRandom m_RandomGen = AbstractRandom(0xba978d581bec0d735cf75f43a83f6d2b2a6015d0);\r\n    address owner;\r\n    event FlipCoinEvent(\r\n    uint value,\r\n    address owner\r\n    );\r\n\r\n    event PlaySlotEvent(\r\n      uint value,\r\n      address owner\r\n    );\r\n    \r\n    constructor(){\r\n        owner = msg.sender;\r\n    }\r\n\r\n  function() public payable {}\r\n\r\n  function flipCoin() public payable {\r\n    require(msg.value > 1500 szabo && tx.origin == msg.sender);\r\n    uint value = m_RandomGen.random(100,uint8(msg.value));\r\n    if (value > 55){\r\n      msg.sender.transfer(msg.value * 2);\r\n    }\r\n    FlipCoinEvent(value, msg.sender);\r\n  }\r\n\r\nfunction playSlot() public payable {\r\n    require(msg.value > 1500 szabo && tx.origin == msg.sender);\r\n    uint r = m_RandomGen.random(100,uint8(msg.value));\r\n       if(r >0 && r<3){ // 2\r\n             PlaySlotEvent(3,msg.sender);\r\n             msg.sender.transfer(msg.value * 12);\r\n       }else if(r >3 && r<6){ // 5\r\n             PlaySlotEvent(2,msg.sender);\r\n             msg.sender.transfer(msg.value * 6);\r\n       }else if(r >6 && r<9){ // 7\r\n             PlaySlotEvent(1,msg.sender);\r\n             msg.sender.transfer(msg.value * 3);\r\n       }else{\r\n            PlaySlotEvent(0,msg.sender);\r\n       }\r\n\r\n  }\r\n\r\n  function getBalance() public constant returns(uint bal) {\r\n    bal = this.balance;\r\n    return bal;\r\n  }\r\n  \r\n  function withdraw(uint256 value) public{\r\n      require(owner == msg.sender);\r\n      msg.sender.transfer(value);\r\n        \r\n  }\r\n\r\n}\r\n\r\ncontract AbstractRandom\r\n{\r\n    function random(uint256 upper, uint8 seed) public returns (uint256 number);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"bal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"flipCoin\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"playSlot\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"FlipCoinEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PlaySlotEvent\",\"type\":\"event\"}]","ContractName":"casinoRoyale","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://becd7ec764638442eb65aad1b3de284b70d2bffa111c5645c39d7fcbae85145e"}]}