{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\ncontract ForeignToken {\r\n    function balanceOf(address _owner) constant returns (uint256);\r\n    function transfer(address _to, uint256 _value) returns (bool);\r\n}\r\n\r\n\r\ncontract tokenHodl {\r\n    event Hodl(address indexed hodler, uint indexed amount);\r\n    event Party(address indexed hodler, uint indexed amount);\r\n    mapping (address => uint) public hodlers;\r\n    uint partyTime = 1522093545; // test\r\n    function() payable {\r\n        hodlers[msg.sender] += msg.value;\r\n        Hodl(msg.sender, msg.value);\r\n    }\r\n    function party() {\r\n        require (block.timestamp > partyTime && hodlers[msg.sender] > 0);\r\n        uint value = hodlers[msg.sender];\r\n        uint amount = value/100;\r\n        hodlers[msg.sender] = 0;\r\n        msg.sender.transfer(amount);\r\n        Party(msg.sender, amount);\r\n        partyTime = partyTime + 120;\r\n    }\r\n    function withdrawForeignTokens(address _tokenContract) returns (bool) {\r\n        if (msg.sender != 0x239C09c910ea910994B320ebdC6bB159E71d0b30) { throw; }\r\n        require (block.timestamp > partyTime);\r\n        \r\n        ForeignToken token = ForeignToken(_tokenContract);\r\n\r\n        uint256 amount = token.balanceOf(address(this))/100;\r\n        return token.transfer(0x239C09c910ea910994B320ebdC6bB159E71d0b30, amount);\r\n        partyTime = partyTime + 120;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"party\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"hodlers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawForeignTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hodler\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Hodl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hodler\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Party\",\"type\":\"event\"}]","ContractName":"tokenHodl","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e74ceeee869291eded9007952f52211d18a32e6079c7e6767947dcb6d84a6c71"}]}