{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\nlibrary SafeMath { //standart library for uint\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0 || b == 0){\r\n        return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function pow(uint256 a, uint256 b) internal pure returns (uint256){ //power function\r\n    if (b == 0){\r\n      return 1;\r\n    }\r\n    uint256 c = a**b;\r\n    assert (c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n//standart contract to identify owner\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n\r\n  address public newOwner;\r\n\r\n  address public techSupport;\r\n\r\n  address public newTechSupport;\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  modifier onlyTechSupport() {\r\n    require(msg.sender == techSupport || msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    require(_newOwner != address(0));\r\n    newOwner = _newOwner;\r\n  }\r\n\r\n  function acceptOwnership() public {\r\n    if (msg.sender == newOwner) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n\r\n  function transferTechSupport (address _newSupport) public{\r\n    require (msg.sender == owner || msg.sender == techSupport);\r\n    newTechSupport = _newSupport;\r\n  }\r\n\r\n  function acceptSupport() public{\r\n    if(msg.sender == newTechSupport){\r\n      techSupport = newTechSupport;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n//Abstract Token contract\r\ncontract HeliosToken{\r\n  function setCrowdsaleContract (address) public;\r\n  function sendCrowdsaleTokens(address, uint256) public;\r\n  function endIco() public;\r\n}\r\n\r\n//Crowdsale contract\r\ncontract Crowdsale is Ownable{\r\n\r\n  using SafeMath for uint;\r\n\r\n  uint decimals = 2;\r\n  // Token contract address\r\n  HeliosToken public token;\r\n\r\n  // Constructor\r\n  function Crowdsale(address _tokenAddress) public{\r\n    token = HeliosToken(_tokenAddress);\r\n    techSupport = 0xcDDC1cE0b7D4C9B018b8a4b8f7Da2678D56E8619;\r\n\r\n    token.setCrowdsaleContract(address(this));\r\n    owner = 0xA957c13265Cb1b101401d10f5E0b69E0b36ef000;\r\n  }\r\n\r\n  //Crowdsale variables\r\n  uint public preIcoTokensSold = 0;\r\n  uint public tokensSold = 0;\r\n  uint public ethCollected = 0;\r\n\r\n  mapping (address => uint) contributorBalances;\r\n\r\n  uint public tokenPrice = 0.001 ether;\r\n\r\n  //preIco constants\r\n  uint public constant preIcoStart = 1525168800; //1525168800\r\n  uint public constant preIcoFinish = 1527847200;\r\n  uint public constant preIcoMinInvest = 50*(uint(10).pow(decimals)); //50 Tokens\r\n  uint public constant preIcoMaxCap = 500000*(uint(10).pow(decimals)); //500000 Tokens\r\n\r\n  // Ico constants\r\n  uint public constant icoStart = 1530439200; \r\n  uint public constant icoFinish = 1538388000; \r\n  uint public constant icoMinInvest = 10*(uint(10).pow(decimals)); //10 Tokens\r\n\r\n  uint public constant minCap = 1000000 * uint(10).pow(decimals);\r\n\r\n  function isPreIco (uint _time) public pure returns(bool) {\r\n    if((preIcoStart <= _time) && (_time < preIcoFinish)){\r\n      return true;\r\n    }\r\n  }\r\n  \r\n  //check is now ICO\r\n  function isIco(uint _time) public pure returns (bool){\r\n    if((icoStart <= _time) && (_time < icoFinish)){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function timeBasedBonus(uint _time) public pure returns(uint) {\r\n    if(isPreIco(_time)){\r\n      if(preIcoStart + 1 weeks > _time){\r\n        return 20;\r\n      }\r\n      if(preIcoStart + 2 weeks > _time){\r\n        return 15;\r\n      }\r\n      if(preIcoStart + 3 weeks > _time){\r\n        return 10;\r\n      }\r\n    }\r\n    if(isIco(_time)){\r\n      if(icoStart + 1 weeks > _time){\r\n        return 20;\r\n      }\r\n      if(icoStart + 2 weeks > _time){\r\n        return 15;\r\n      }\r\n      if(icoStart + 3 weeks > _time){\r\n        return 10;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  event OnSuccessfullyBuy(address indexed _address, uint indexed _etherValue, bool indexed isBought, uint _tokenValue);\r\n\r\n  //fallback function (when investor send ether to contract)\r\n  function() public payable{\r\n    require(isPreIco(now) || isIco(now));\r\n    require(buy(msg.sender,msg.value, now)); //redirect to func buy\r\n  }\r\n\r\n  //function buy Tokens\r\n  function buy(address _address, uint _value, uint _time) internal returns (bool){\r\n    \r\n    uint tokensToSend = etherToTokens(_value,_time);\r\n\r\n    if (isPreIco(_time)){\r\n      require (tokensToSend >= preIcoMinInvest);\r\n      require (preIcoTokensSold.add(tokensToSend) <= preIcoMaxCap);\r\n      \r\n      token.sendCrowdsaleTokens(_address,tokensToSend);\r\n      preIcoTokensSold = preIcoTokensSold.add(tokensToSend);\r\n\r\n      tokensSold = tokensSold.add(tokensToSend);\r\n      distributeEther();\r\n\r\n    }else{\r\n      require (tokensToSend >= icoMinInvest);\r\n      token.sendCrowdsaleTokens(_address,tokensToSend);\r\n\r\n      contributorBalances[_address] = contributorBalances[_address].add(_value);\r\n\r\n      tokensSold = tokensSold.add(tokensToSend);\r\n\r\n      if (tokensSold >= minCap){\r\n        distributeEther();\r\n      }\r\n    }\r\n\r\n    emit OnSuccessfullyBuy(_address,_value,true, tokensToSend);\r\n    ethCollected = ethCollected.add(_value);\r\n\r\n    return true;\r\n  }\r\n\r\n  address public distributionAddress = 0x769EDcf3756A3Fd4D52B739E06dF060b7379C4Ef;\r\n  function distributeEther() internal {\r\n    distributionAddress.transfer(address(this).balance);\r\n  }\r\n  \r\n  event ManualTokensSended(address indexed _address, uint indexed _value, bool );\r\n  \r\n  function manualSendTokens (address _address, uint _tokens) public onlyTechSupport {\r\n    token.sendCrowdsaleTokens(_address, _tokens);\r\n    tokensSold = tokensSold.add(_tokens);\r\n    emit OnSuccessfullyBuy(_address,0,false,_tokens);\r\n  }\r\n\r\n  function manualSendEther (address _address, uint _value) public onlyTechSupport {\r\n    uint tokensToSend = etherToTokens(_value, 0);\r\n    tokensSold = tokensSold.add(tokensToSend);\r\n    ethCollected = ethCollected.add(_value);\r\n\r\n    token.sendCrowdsaleTokens(_address, tokensToSend);\r\n    emit OnSuccessfullyBuy(_address,_value,false, tokensToSend);\r\n  }\r\n  \r\n  //convert ether to tokens (without decimals)\r\n  function etherToTokens(uint _value, uint _time) public view returns(uint res) {\r\n    if(_time == 0){\r\n        _time = now;\r\n    }\r\n    res = _value.mul((uint)(10).pow(decimals))/tokenPrice;\r\n    uint bonus = timeBasedBonus(_time);\r\n    res = res.add(res.mul(bonus)/100);\r\n  }\r\n\r\n  event Refund(address indexed contributor, uint ethValue);  \r\n\r\n  function refund () public {\r\n    require (now > icoFinish && tokensSold < minCap);\r\n    require (contributorBalances[msg.sender] != 0);\r\n\r\n    msg.sender.transfer(contributorBalances[msg.sender]);\r\n\r\n    emit Refund(msg.sender, contributorBalances[msg.sender]);\r\n\r\n    contributorBalances[msg.sender] = 0;\r\n  }\r\n  \r\n  function endIco () public onlyTechSupport {\r\n    require(now > icoFinish + 5 days);\r\n    token.endIco();\r\n  }\r\n  \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"manualSendTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"isIco\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"etherToTokens\",\"outputs\":[{\"name\":\"res\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSupport\",\"type\":\"address\"}],\"name\":\"transferTechSupport\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distributionAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preIcoStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"isPreIco\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preIcoTokensSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preIcoMinInvest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preIcoFinish\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptSupport\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"timeBasedBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preIcoMaxCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"manualSendEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoFinish\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethCollected\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"techSupport\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newTechSupport\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endIco\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoMinInvest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_etherValue\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"isBought\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_tokenValue\",\"type\":\"uint256\"}],\"name\":\"OnSuccessfullyBuy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"bool\"}],\"name\":\"ManualTokensSended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ethValue\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000005943e2a2f7498699438e615e4e92e7a77ac27390","Library":"","SwarmSource":"bzzr://9f3c137be6fb325701a23fff98ab4bdeed600e6e03e6a03c56f27ae16165f5d6"}]}