{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\n// an interface to ERC20 contracts\r\n// only adds the signatures for the methods we need for withdrawals\r\ncontract ERC20 {\r\n  function balanceOf(address _owner) public constant returns (uint balance);\r\n  function transfer(address _to, uint256 _value) public returns (bool success);\r\n}\r\n\r\ncontract Capsule {\r\n    // store the eventual recipient of the capsule\r\n    // who will be allowed to withdraw when the time comes\r\n    address public recipient;\r\n    // the date of the eventual excavation store in seconds from epoch\r\n    uint public excavation;\r\n    // your friends at ETHCapsule, thanks for your support!\r\n    address public company = 0x0828be80e6A821D6bf6300bEa7f61d1c4e39496F;\r\n    // percentage of funds shared at withdrawal\r\n    uint public percent = 2;\r\n\r\n    // event for capsule creation with pertinent details\r\n    event CapsuleCreated(\r\n        uint _excavation,\r\n        address _recipient\r\n    );\r\n\r\n    // constructor for the capsule\r\n    // must put in an eventual excavation date and the recipient address\r\n    // also allows sending ETH as well as listing new tokens\r\n    function Capsule(uint _excavation, address _recipient) payable public {\r\n      require(_excavation < (block.timestamp + 100 years));\r\n      recipient = _recipient;\r\n      excavation = _excavation;\r\n      CapsuleCreated(_excavation, _recipient);\r\n    }\r\n\r\n    // event for a fallback payable deposit\r\n    event Deposit(\r\n        uint _amount,\r\n        address _sender\r\n    );\r\n\r\n    // this method accepts ether at any point as a way\r\n    // of facilitating groups pooling their resources\r\n    function () payable public {\r\n      Deposit(msg.value, msg.sender);\r\n    }\r\n\r\n    // The event any ether is withdrawn\r\n    event EtherWithdrawal(\r\n      uint _amount\r\n    );\r\n\r\n    // The event any time an ERC20 token is withdrawn\r\n    event TokenWithdrawal(\r\n      address _tokenAddress,\r\n      uint _amount\r\n    );\r\n\r\n    // allows for the withdrawal of ECR20 tokens and Ether!\r\n    // must be the intended recipient after the excavation date\r\n    function withdraw(address[] _tokens) public {\r\n      require(msg.sender == recipient);\r\n      require(block.timestamp > excavation);\r\n\r\n      // withdraw ether\r\n      if(this.balance > 0) {\r\n        uint ethShare = this.balance / (100 / percent);\r\n        company.transfer(ethShare);\r\n        uint ethWithdrawal = this.balance;\r\n        msg.sender.transfer(ethWithdrawal);\r\n        EtherWithdrawal(ethWithdrawal);\r\n      }\r\n\r\n      // withdraw listed ERC20 tokens\r\n      for(uint i = 0; i < _tokens.length; i++) {\r\n        ERC20 token = ERC20(_tokens[i]);\r\n        uint tokenBalance = token.balanceOf(this);\r\n        if(tokenBalance > 0) {\r\n          uint tokenShare = tokenBalance / (100 / percent);\r\n          token.transfer(company, tokenShare);\r\n          uint tokenWithdrawal = token.balanceOf(this);\r\n          token.transfer(recipient, tokenWithdrawal);\r\n          TokenWithdrawal(_tokens[i], tokenWithdrawal);\r\n        }\r\n      }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"excavation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"recipient\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"company\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_excavation\",\"type\":\"uint256\"},{\"name\":\"_recipient\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_excavation\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"CapsuleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"EtherWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokenWithdrawal\",\"type\":\"event\"}]","ContractName":"Capsule","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000005c64f5d000000000000000000000000043fbc4dbe89487cac17f2adc3d5b4f644ebdfe83","Library":"","SwarmSource":"bzzr://30e466846da3e500716e4890c0ab4c7815cc5a1a6d5056c03d0b4903370d2191"}]}