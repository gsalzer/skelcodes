{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a / b;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ninterface Token {\r\n    function transfer(address _to, uint256 _value) external;\r\n}\r\n\r\ncontract CLVRCrowdsale {\r\n\r\n    using SafeMath for uint256;\r\n    \r\n    Token public tokenReward;\r\n    address public creator;\r\n    address public owner = 0x93a68484936E235e167729a4a1AB6f0d1897106F;\r\n\r\n    uint256 public price;\r\n    uint256 public startDate;\r\n    uint256 public endDate;\r\n\r\n    modifier isCreator() {\r\n        require(msg.sender == creator);\r\n        _;\r\n    }\r\n\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    constructor() public {\r\n        creator = msg.sender;\r\n        startDate = 1531958400;\r\n        endDate = 1534636799;\r\n        price = 5000;\r\n        tokenReward = Token(0x92f10796da1f6fab1544cF64682Cb8c15C71d5E7);\r\n    }\r\n\r\n    function setOwner(address _owner) isCreator public {\r\n        owner = _owner;      \r\n    }\r\n\r\n    function setCreator(address _creator) isCreator public {\r\n        creator = _creator;      \r\n    }\r\n\r\n    function setStartDate(uint256 _startDate) isCreator public {\r\n        startDate = _startDate;      \r\n    }\r\n\r\n    function setEndtDate(uint256 _endDate) isCreator public {\r\n        endDate = _endDate;      \r\n    }\r\n    \r\n    function setPrice(uint256 _price) isCreator public {\r\n        price = _price;      \r\n    }\r\n\r\n    function setToken(address _token) isCreator public {\r\n        tokenReward = Token(_token);      \r\n    }\r\n\r\n    function sendToken(address _to, uint256 _value) isCreator public {\r\n        tokenReward.transfer(_to, _value);      \r\n    }\r\n\r\n    function kill() isCreator public {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    function () public payable {\r\n        require(msg.value > 0);\r\n        require(now > startDate);\r\n        require(now < endDate);\r\n        uint256 amount = msg.value.mul(price);\r\n        uint256 _diff;\r\n\r\n        // period 1 : 25%\r\n        if (now > startDate && now < startDate + 2 days) {\r\n            _diff = amount.div(4);\r\n            amount = amount.add(_diff);\r\n        }\r\n        \r\n        // period 2 : 15%\r\n        if (now > startDate + 2 days && now < startDate + 16 days) {\r\n            uint256 _amount = amount.div(20);\r\n            _diff = _amount.mul(3);\r\n            amount = amount.add(_diff);\r\n        }\r\n\r\n        // period 3 : 10%\r\n        if (now > startDate + 16 days && now < startDate + 30 days) {\r\n            _diff = amount.div(10);\r\n            amount = amount.add(_diff);\r\n        }\r\n\r\n        tokenReward.transfer(msg.sender, amount);\r\n        emit FundTransfer(msg.sender, amount, true);\r\n        owner.transfer(msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"setCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_endDate\",\"type\":\"uint256\"}],\"name\":\"setEndtDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_startDate\",\"type\":\"uint256\"}],\"name\":\"setStartDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"CLVRCrowdsale","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://156cd7d84dbb177d2dd5bb13d332b7d9f59f682b5ef552573a0166c6479ceae9"}]}