{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\ncontract owned {\r\n    address public owner;\r\n    event Log(string s);\r\n\r\n    function owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n    function isOwner()public{\r\n        if(msg.sender==owner)emit Log(\"Owner\");\r\n        else{\r\n            emit Log(\"Not Owner\");\r\n        }\r\n    }\r\n}\r\ncontract SisterToken is owned{\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals = 4;\r\n    uint256 public totalSupply;\r\n    uint256 public buyPrice;\r\n    \r\n    uint256 private activeUsers;\r\n    \r\n    address[9] phonebook = [0x2c0cAC04A9Ffee0D496e45023c907b71049Ed0F0,\r\n                            0xcccC551e9701c2A5D07a3062a604972fa12226E8,\r\n                            0x97d1352b2A2E0175471Ca730Cb6510D0164bFb0B,\r\n                            0x80f395fd4E1dDE020d774faB983b8A9d0DCCA516,\r\n                            0xCeb646336bBA29A9E8106A44065561D495166230,\r\n                            0xDce66F4a697A88d00fBB3fDDC6D44FD757852394,\r\n                            0x8CCc39c1516EF25AC0E6bC1A6bb7cf159d28FD71,\r\n                            0xaF9cD61b3B5C4C07376141Ef8F718BB0893ab371,\r\n                            0x5A53D72E763b2D3e2f2f347ed774AAaE872861a4];\r\n    address bounty = 0xAB90CB176709558bA5D2DDA8aeb1F65e24f2409f;\r\n    address bank = owner;\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => uint256) public accountID;\r\n    mapping (uint256 => address) public accountFromID;\r\n    mapping (address => bool) public isRegistered;\r\n    mapping (address => bool) public isTrusted;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event TransferNeo(address indexed from, address indexed to, uint256 value);\r\n    event Burn(address indexed from, uint256 value);\r\n    event Log(string t);\r\n    event Log32(bytes32);\r\n    event LogA(address);\r\n    event Multiplier(uint m);\r\n    event isSender(address user,bool confirm);\r\n    event isTrusted(address user,bool confirm);\r\n    event Value(uint v);\r\n\r\n    modifier registered {\r\n        require(isRegistered[msg.sender]);\r\n        _;\r\n    }\r\n    modifier trusted {\r\n        require(isTrusted[msg.sender]);\r\n        _;\r\n    }\r\n    modifier isAfterRelease{\r\n        require(block.timestamp>1525550400);\r\n        _;\r\n    }\r\n    function SisterToken(\r\n        uint256 initialSupply,\r\n        string tokenName,\r\n        string tokenSymbol\r\n    ) public payable{\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);\r\n        balanceOf[owner] = 85*totalSupply/100;\r\n        balanceOf[bounty] = 5*totalSupply/100;\r\n        uint i;\r\n        for(i=0;i<9;i++){\r\n            balanceOf[phonebook[i]] = totalSupply/90;\r\n            registerAccount(phonebook[i]);\r\n        }\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n    }\r\n//----------------------------------------------------------------------ACCESSOR FUNCTIONS------------------------------------------------------------------------------//\r\n    function getbuyPrice()public view returns(uint256){\r\n        return(buyPrice);\r\n    }\r\n    function getMultiplier()public view returns(uint256){\r\n        uint256 multiplier;\r\n        if(block.timestamp>1525550400){\r\n            if(block.timestamp < 1525636800){\r\n                multiplier = 150;\r\n            }else if(block.timestamp < 1526155200){\r\n                multiplier = 140;\r\n            }else if(block.timestamp <1526760000){\r\n                multiplier = 125;\r\n            }else if(block.timestamp <1527364800){\r\n                multiplier = 115;\r\n            }else if(block.timestamp <1527969600){\r\n                multiplier = 105;\r\n            }\r\n        }else{\r\n            multiplier=100;\r\n        }\r\n        return(multiplier);\r\n    }\r\n//---------------------------------------------------------------------MUTATOR FUNCTIONS---------------------------------------------------------------------------//\r\n    function trustContract(address contract1)public onlyOwner{\r\n        isTrusted[contract1]=true;\r\n    }\r\n    function untrustContract(address contract1)public onlyOwner{\r\n        isTrusted[contract1]=false;\r\n    }\r\n    function setPrice(uint256 newBuyPrice) onlyOwner public {\r\n        buyPrice = newBuyPrice;\r\n    }\r\n    function changeBank(address newBank) onlyOwner public{\r\n        bank = newBank;\r\n    }\r\n//-------------------------------------------------------------------INTERNAL FUNCTIONS--------------------------------------------------------------------------//\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(_to != 0x0);\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        emit Transfer(_from, _to, _value);\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n    function registerAccount(address user)internal{\r\n        if(!isRegistered[user]){\r\n            isRegistered[user] = true;\r\n            activeUsers+=1;\r\n            accountID[user] = activeUsers;\r\n            accountFromID[activeUsers] = user;\r\n        }\r\n    }\r\n    function burnFrom(address _from, uint256 _value) internal returns (bool success) {\r\n        require(balanceOf[_from] >= _value);\r\n        balanceOf[_from] -= _value;\r\n        totalSupply -= _value;\r\n        emit Burn(_from, _value);\r\n        return true;\r\n    }\r\n    function trasnferFromOwner(address to,uint value)internal {\r\n        _transfer(owner,to,value);\r\n    }\r\n    function _buy(address user)external payable trusted isAfterRelease{\r\n        require(owner.balance > 0);\r\n        emit isTrusted(user,isTrusted[msg.sender]||msg.sender==user);\r\n        uint256 amount = (getMultiplier()*2*msg.value/buyPrice)/100;\r\n        emit Value(amount);\r\n        trasnferFromOwner(user,amount);\r\n        bank.transfer(msg.value);\r\n    }\r\n//------------------------------------------------------------------EXTERNAL FUNCTIONS-------------------------------------------------------------------------//\r\n    function registerExternal()external{\r\n        registerAccount(msg.sender);\r\n    }\r\n    function contractBurn(address _for,uint256 value)external trusted{\r\n        burnFrom(_for,value);\r\n    }\r\n//----------------------------------------------------------------PUBLIC USER FUNCTIONS-----------------------------------------------------------------------//\r\n    function transfer(address to, uint256 val)public payable{\r\n        _transfer(msg.sender,to,val);\r\n    }\r\n    function burn(uint256 val)public{\r\n        burnFrom(msg.sender,val);\r\n    }\r\n    function register() public {\r\n        registerAccount(msg.sender);\r\n    }\r\n    function testConnection() external {\r\n        emit Log(name);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contract1\",\"type\":\"address\"}],\"name\":\"trustContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"testConnection\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBank\",\"type\":\"address\"}],\"name\":\"changeBank\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_for\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"contractBurn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getbuyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMultiplier\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"_buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"accountID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accountFromID\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBuyPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isTrusted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"registerExternal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contract1\",\"type\":\"address\"}],\"name\":\"untrustContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferNeo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"t\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"Log32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"address\"}],\"name\":\"LogA\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"m\",\"type\":\"uint256\"}],\"name\":\"Multiplier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"confirm\",\"type\":\"bool\"}],\"name\":\"isSender\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"confirm\",\"type\":\"bool\"}],\"name\":\"isTrusted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"v\",\"type\":\"uint256\"}],\"name\":\"Value\",\"type\":\"event\"}]","ContractName":"SisterToken","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000545504c4159000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000545504c4159000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://0baa1dd31bfb3b69bc0cf417289be0bc8f0c99044fea666af64419b8ee286398"}]}