{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract ERC20Interface {\r\n     function totalSupply() public constant returns (uint);\r\n     function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n     function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n     function transfer(address to, uint tokens) public returns (bool success);\r\n     function approve(address spender, uint tokens) public returns (bool success);\r\n     function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n     event Transfer(address indexed from, address indexed to, uint tokens);\r\n     event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\ncontract BitFluxADContract {\r\n    \r\n  // The token being sold\r\n  ERC20Interface public token;\r\n\r\n  \r\n  // address where funds are collected\r\n  // address where tokens are deposited and from where we send tokens to buyers\r\n  address public wallet;\r\n\r\n  /**\r\n   * event for token purchase logging\r\n   * @param purchaser who paid for the tokens\r\n   * @param beneficiary who got the tokens\r\n   * @param value weis paid for purchase\r\n   * @param amount amount of tokens purchased\r\n   */\r\n  event TokenPurchase(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n  function BitFluxADContract(address _wallet, address _tokenAddress) public \r\n  {\r\n    require(_wallet != 0x0);\r\n    require (_tokenAddress != 0x0);\r\n    wallet = _wallet;\r\n    token = ERC20Interface(_tokenAddress);\r\n  }\r\n  \r\n  // fallback function can be used to buy tokens\r\n  function () public payable {\r\n    throw;\r\n  }\r\n\r\n    /**\r\n     * airdrop to token holders\r\n     **/ \r\n    function BulkTransfer(address[] tokenHolders, uint amount) public {\r\n        require(msg.sender==wallet);\r\n        for(uint i = 0; i<tokenHolders.length; i++)\r\n        {\r\n            token.transferFrom(wallet,tokenHolders[i],amount);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"tokenHolders\",\"type\":\"address[]\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BulkTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"}]","ContractName":"BitFluxADContract","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000006b6a6e24bee0256d3facf5d37e63f885881826ed00000000000000000000000070b147e01e9285e7ce68b9ba437fe3a9190e756a","Library":"","SwarmSource":"bzzr://6ad139a6d07fe657b331d3ede06835466f53a1f9cf3dfb42823ec0aba7b9245e"}]}