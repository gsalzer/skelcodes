{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract EthereumPrivate{\r\n    /* This creates an array with all balances */\r\n    mapping (address => uint256) public balanceOf;\r\n\r\n    string public name = \"EthereumPrivate\";\r\n    string public symbol = \"PETH\";\r\n    uint256 public max_supply = 18000000000000;\r\n    uint256 public unspent_supply = 0;\r\n    uint256 public spendable_supply = 0;\r\n    uint256 public circulating_supply = 0;\r\n    uint256 public decimals = 6;\r\n    uint256 public reward = 50000000;\r\n    uint256 public timeOfLastHalving = now;\r\n    uint public timeOfLastIncrease = now;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Mint(address indexed from, uint256 value);\r\n\r\n    /* Initializes contract with initial supply tokens to the creator of the contract */\r\n    function howCoin() public {\r\n      timeOfLastHalving = now;\r\n    }\r\n\r\n    function updateSupply() internal returns (uint256) {\r\n\r\n      if (now - timeOfLastHalving >= 2100000 minutes) {\r\n        reward /= 2;\r\n        timeOfLastHalving = now;\r\n      }\r\n\r\n      if (now - timeOfLastIncrease >= 150 seconds) {\r\n        uint256 increaseAmount = ((now - timeOfLastIncrease) / 150 seconds) * reward;\r\n        spendable_supply += increaseAmount;\r\n        unspent_supply += increaseAmount;\r\n        timeOfLastIncrease = now;\r\n      }\r\n\r\n      circulating_supply = spendable_supply - unspent_supply;\r\n\r\n      return circulating_supply;\r\n    }\r\n\r\n    /* Send coins */\r\n    function transfer(address _to, uint256 _value) public {\r\n        require(balanceOf[msg.sender] >= _value);           // Check if the sender has enough\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]); // Check for overflows\r\n        balanceOf[msg.sender] -= _value;                    // Subtract from the sender\r\n        balanceOf[_to] += _value;                           // Add the same to the recipient\r\n\r\n        updateSupply();\r\n\r\n        /* Notify anyone listening that the transfer took place */\r\n        Transfer(msg.sender, _to, _value);\r\n\r\n    }\r\n    /* Mint new coins by sending ether */\r\n    function mint() public payable {\r\n        require(balanceOf[msg.sender] + _value >= balanceOf[msg.sender]); // Check for overflows\r\n        uint256 _value = msg.value / 100000000;\r\n\r\n        updateSupply();\r\n\r\n        require(unspent_supply - _value <= unspent_supply);\r\n        unspent_supply -= _value; // Remove from unspent supply\r\n        balanceOf[msg.sender] += _value; // Add the same to the recipient\r\n\r\n        updateSupply();\r\n\r\n        /* Notify anyone listening that the minting took place */\r\n        Mint(msg.sender, _value);\r\n\r\n    }\r\n\r\n    function withdraw(uint256 amountToWithdraw) public returns (bool) {\r\n\r\n        // Balance given in HOW\r\n\r\n        require(balanceOf[msg.sender] >= amountToWithdraw);\r\n        require(balanceOf[msg.sender] - amountToWithdraw <= balanceOf[msg.sender]);\r\n\r\n        // Balance checked in HOW, then converted into Wei\r\n        balanceOf[msg.sender] -= amountToWithdraw;\r\n\r\n        // Added back to supply in HOW\r\n        unspent_supply += amountToWithdraw;\r\n        // Converted into Wei\r\n        amountToWithdraw *= 100000000;\r\n\r\n        // Transfered in Wei\r\n        msg.sender.transfer(amountToWithdraw);\r\n\r\n        updateSupply();\r\n\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unspent_supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amountToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"max_supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"howCoin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timeOfLastHalving\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"spendable_supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timeOfLastIncrease\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"circulating_supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"}]","ContractName":"EthereumPrivate","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a6f86cb786bf872a7d0db03eec99d9232cf0734c792be028558b5727067c6066"}]}