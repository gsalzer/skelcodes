{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract BackMeApp {\r\n  address public owner;\r\n  uint256 public minEsteemAmount;\r\n  bool public isShutDown;\r\n\r\n  struct EtherBox {\r\n    bytes32 label;\r\n    address owner;\r\n    uint256 expiration;\r\n    string ownerUrl;\r\n  }\r\n\r\n  mapping (address => bytes32) public nicknames;\r\n  mapping (address => address[]) public ownerToEtherBoxes;\r\n  mapping (address => EtherBox) public etherBoxes;\r\n  mapping (address => uint256) etherBoxesNonce;\r\n\r\n  event NewEsteem(address indexed senderAddress, bytes32 senderNickname, address indexed etherBoxAddress, bytes32 etherBoxLabel, string message, uint amount, uint256 timestamp);\r\n  event EtherBoxPublished(address indexed senderAddress, bytes32 senderNickname, address indexed etherBoxAddress, bytes32 etherBoxLabel, uint256 timestamp);\r\n  event EtherBoxDeleted(address indexed senderAddress, bytes32 senderNickname, address indexed etherBoxAddress, uint256 timestamp);\r\n  modifier onlyOwner() { require(msg.sender == owner); _; }\r\n  modifier onlyWhenRunning() { require(isShutDown == false); _; }\r\n\r\n  constructor() public { owner = msg.sender; minEsteemAmount = 1 finney; }\r\n\r\n  function getEtherBoxes(address _owner) external view returns(address[]) { return ownerToEtherBoxes[_owner]; }\r\n  function isExpired(address _etherBoxAddress) external view returns(bool) { return etherBoxes[_etherBoxAddress].expiration <= now ? true : false; }\r\n\r\n  function esteem(bytes32 _nickname, string _message, address _to) external payable {\r\n    assert(bytes(_message).length <= 300);\r\n    EtherBox storage etherBox = etherBoxes[_to];\r\n    require(etherBox.expiration > now);\r\n    assert(etherBox.owner != address(0));\r\n    nicknames[msg.sender] = _nickname;\r\n    emit NewEsteem(msg.sender, _nickname, _to, etherBox.label, _message, msg.value, now);\r\n    etherBox.owner.transfer(msg.value);\r\n  }\r\n\r\n  function publishEtherBox (bytes32 _label, string _ownerUrl, uint _lifespan) external onlyWhenRunning() payable {\r\n      require(ownerToEtherBoxes[msg.sender].length < 10);\r\n      assert(bytes(_ownerUrl).length <= 200);\r\n      address etherBoxAddress = address(keccak256(abi.encodePacked(msg.sender, etherBoxesNonce[msg.sender]++, now)));\r\n      ownerToEtherBoxes[msg.sender].push(etherBoxAddress);\r\n      etherBoxes[etherBoxAddress] = EtherBox({ label: _label, owner: msg.sender, ownerUrl: _ownerUrl, expiration: now+_lifespan });\r\n      emit EtherBoxPublished(msg.sender, nicknames[msg.sender], etherBoxAddress, _label, now);\r\n      if(msg.value > 0){ owner.transfer(msg.value); }\r\n  }\r\n\r\n  function deleteEtherBox(address _etherBoxAddress) external {\r\n    require(etherBoxes[_etherBoxAddress].owner == msg.sender);\r\n    require(etherBoxes[_etherBoxAddress].expiration <= now);\r\n    address[] storage ownedEtherBoxes = ownerToEtherBoxes[msg.sender];\r\n    address[] memory tempEtherBoxes = ownedEtherBoxes;\r\n    uint newLength = 0;\r\n    for(uint i = 0; i < tempEtherBoxes.length; i++){\r\n      if(tempEtherBoxes[i] != _etherBoxAddress){\r\n        ownedEtherBoxes[newLength] = tempEtherBoxes[i];\r\n        newLength++;\r\n      }\r\n    }\r\n    ownedEtherBoxes.length = newLength;\r\n    delete etherBoxes[_etherBoxAddress];\r\n    emit EtherBoxDeleted(msg.sender, nicknames[msg.sender], _etherBoxAddress, now);\r\n  }\r\n\r\n  function setMinEsteemAmount(uint256 _amount) external onlyOwner() { minEsteemAmount = _amount; }\r\n  function toggleFactoryPower() external onlyOwner() { isShutDown = isShutDown == false ? true : false; }\r\n  function destroyFactory() external onlyOwner() { selfdestruct(owner); }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_nickname\",\"type\":\"bytes32\"},{\"name\":\"_message\",\"type\":\"string\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"esteem\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"etherBoxes\",\"outputs\":[{\"name\":\"label\",\"type\":\"bytes32\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"expiration\",\"type\":\"uint256\"},{\"name\":\"ownerUrl\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMinEsteemAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"toggleFactoryPower\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minEsteemAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getEtherBoxes\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_etherBoxAddress\",\"type\":\"address\"}],\"name\":\"deleteEtherBox\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_label\",\"type\":\"bytes32\"},{\"name\":\"_ownerUrl\",\"type\":\"string\"},{\"name\":\"_lifespan\",\"type\":\"uint256\"}],\"name\":\"publishEtherBox\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"nicknames\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_etherBoxAddress\",\"type\":\"address\"}],\"name\":\"isExpired\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerToEtherBoxes\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroyFactory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isShutDown\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"senderAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"senderNickname\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"etherBoxAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"etherBoxLabel\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"NewEsteem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"senderAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"senderNickname\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"etherBoxAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"etherBoxLabel\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"EtherBoxPublished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"senderAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"senderNickname\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"etherBoxAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"EtherBoxDeleted\",\"type\":\"event\"}]","ContractName":"BackMeApp","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://54cfd9a0a4f152ff9e4a23b1d3526767fa003b9ab212b4614480494fb4961df5"}]}