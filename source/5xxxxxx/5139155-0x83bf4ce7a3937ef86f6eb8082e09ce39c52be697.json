{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) public;\r\n\tfunction balanceOf(address check) public;\r\n}\r\n\r\n\r\n\r\ncontract Marketplace {\r\n    address public beneficiary;\r\n    uint public amountRaised;\r\n\tuint public totalIncome;\r\n    uint public price;\r\n\t \r\n    token public tokenReward;\r\n\t\r\n    mapping(address => uint256) public balanceOf;\r\n    bool changePrice = false;\r\n\r\n    event DepositBeneficiary(address recipient, uint totalAmountRaised);\r\n    event FundTransfer(address backer, uint amount );\r\n    event ChangePrice(uint prices);\r\n    /**\r\n     * Constructor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    function Marketplace(\r\n        address ifSuccessfulSendTo,\r\n        uint etherCostOfEachToken,\r\n        address addressOfTokenUsedAsReward\r\n    )public {\r\n        beneficiary = ifSuccessfulSendTo;\r\n        price = etherCostOfEachToken * 1 finney;\r\n        tokenReward = token(addressOfTokenUsedAsReward);\r\n    }\r\n\r\n\r\n    function () public payable {\r\n        uint amount = msg.value;\r\n        balanceOf[msg.sender] += amount;\r\n        amountRaised += amount;\r\n\t\ttotalIncome += amount; \r\n        tokenReward.transfer(msg.sender, amount / price);\r\n\t\tFundTransfer(beneficiary, amount);\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    //transfer token to the owner of the contract (beneficiary)\r\n        function transferToken(uint amount)public  {  \r\n\t\t\tif (beneficiary == msg.sender)\r\n\t\t\t{            \r\n\t\t\t\ttokenReward.transfer(msg.sender, amount);  \r\n\t\t\t}\r\n       \r\n\t\t}\r\n\t\tfunction safeWithdrawal() public {\r\n\t\t\tif (beneficiary == msg.sender) {\r\n\t\t\t\t\tif(beneficiary.send(amountRaised)){\r\n\t\t\t\t\tFundTransfer(beneficiary, amountRaised);\r\n\t\t\t\t\tamountRaised = 0;\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n \r\n\r\n    function checkPriceCrowdsale(uint newPrice1, uint newPrice2)public {\r\n        if (beneficiary == msg.sender) {          \r\n           price = (newPrice1 * 1 finney)+(newPrice2 * 1 szabo);\r\n           ChangePrice(price);\r\n           changePrice = true;\r\n        }\r\n\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalIncome\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPrice1\",\"type\":\"uint256\"},{\"name\":\"newPrice2\",\"type\":\"uint256\"}],\"name\":\"checkPriceCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ifSuccessfulSendTo\",\"type\":\"address\"},{\"name\":\"etherCostOfEachToken\",\"type\":\"uint256\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalAmountRaised\",\"type\":\"uint256\"}],\"name\":\"DepositBeneficiary\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"prices\",\"type\":\"uint256\"}],\"name\":\"ChangePrice\",\"type\":\"event\"}]","ContractName":"Marketplace","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000e5242753c91511de9645752988e73be6cfb22de40000000000000000000000000000000000000000000000000000000000000001000000000000000000000000dd624bcba9eea599d353d1647e770f0f6e79eec6","Library":"","SwarmSource":"bzzr://0276bc68fcadbe2787cffe0a4285be259a343583e8f25fc2bea29ed249bee1be"}]}