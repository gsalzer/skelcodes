{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ncontract Owned {\r\n    address public owner;\r\n\r\n    event TransferOwnership(address oldaddr, address newaddr);\r\n\r\n    modifier onlyOwner() { if (msg.sender != owner) return; _; }\r\n\r\n    function Owned() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function transferOwnership(address _new) onlyOwner public {\r\n        address oldaddr = owner;\r\n        owner = _new;\r\n        emit TransferOwnership(oldaddr, owner);\r\n    }\r\n}\r\n\r\ncontract ERC20Interface {\r\n\tuint256 public totalSupply;\r\n\tfunction balanceOf(address _owner) public constant returns (uint256 balance);\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool success);\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool success);\r\n\tfunction allowance(address _owner, address _spender) public constant returns (uint256 remaining);\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract DACVest is Owned {\r\n    uint256 constant public initialVestAmount = 880000000 ether;\r\n\r\n    uint256 constant public start = 1533081600; // 2018/08/01\r\n    uint256 constant public phaseDuration = 30 days;\r\n    uint256 constant public phaseReleaseAmount = 176000000 ether;\r\n\r\n    uint256 public latestPhaseNumber = 0;\r\n    bool public ready = false;\r\n\r\n    ERC20Interface constant public DACContract = ERC20Interface(0xAAD54C9f27B876D2538455DdA69207279fF673a5);\r\n\r\n    function DACVest() public {\r\n        \r\n    }\r\n\r\n    function setup() onlyOwner public {\r\n        ready = true;\r\n        require(DACContract.transferFrom(owner, this, initialVestAmount));\r\n    }\r\n\r\n    function release() onlyOwner public {\r\n        require(ready);\r\n        require(now > start);\r\n\r\n        uint256 currentPhaseNumber = (now - start) / phaseDuration + 1;\r\n        require(currentPhaseNumber > latestPhaseNumber);\r\n\r\n        uint256 maxReleaseAmount = (currentPhaseNumber - latestPhaseNumber) * phaseReleaseAmount;\r\n        latestPhaseNumber = currentPhaseNumber;\r\n        uint256 tokenBalance = DACContract.balanceOf(this);\r\n        uint256 returnAmount = maxReleaseAmount > tokenBalance ? tokenBalance : maxReleaseAmount;\r\n\r\n        require(DACContract.transfer(owner, returnAmount));\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"latestPhaseNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ready\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"phaseDuration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DACContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialVestAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"phaseReleaseAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldaddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newaddr\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"}]","ContractName":"DACVest","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://14c95d31059227f6e070202d506755135ea5688753254148cd5184ec82d34dad"}]}