{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\nlibrary SafeMath\r\n{\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256)\r\n    {\r\n        uint256 c = a+b;\r\n        assert (c>=a);\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256)\r\n    {\r\n        assert(a>=b);\r\n        return (a-b);\r\n    }\r\n\r\n    function mul(uint256 a,uint256 b)internal pure returns (uint256)\r\n    {\r\n        if (a==0)\r\n        {\r\n        return 0;\r\n        }\r\n        uint256 c = a*b;\r\n        assert ((c/a)==b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a,uint256 b)internal pure returns (uint256)\r\n    {\r\n        uint256 c = a/b;\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract ERC20\r\n{\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Owned\r\n{\r\n    address public owner;\r\n    function Owned() internal\r\n     {\r\n         owner = msg.sender;\r\n     }\r\n     modifier onlyowner()\r\n     {\r\n         require(msg.sender==owner);\r\n         _;\r\n     }\r\n     function setowner(address _newowner) public onlyowner\r\n     {\r\n         owner = _newowner;\r\n\r\n     }\r\n}\r\n\r\n\r\ncontract TokenControl is ERC20\r\n{\r\n    using SafeMath for uint256;\r\n    mapping (address =>uint256) internal balances;\r\n    mapping (address => mapping(address =>uint256)) internal allowed;\r\n    uint256 totaltoken;\r\n\r\n\r\n    function totalSupply() public view returns (uint256)\r\n    {\r\n        return totaltoken;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool)\r\n    {\r\n        require(_to!=address(0));\r\n        require(_value <= balances[msg.sender]);\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    function balanceOf(address _owner) public view returns (uint256 balance)\r\n    {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool)\r\n    {\r\n        require(_to != address(0));\r\n        require(_value <= balances[_from]);\r\n        require(_value <= allowed[_from][msg.sender]);\r\n\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool)\r\n    {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public view returns (uint256)\r\n    {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool)\r\n    {\r\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool)\r\n    {\r\n        uint256 oldValue = allowed[msg.sender][_spender];\r\n        if (_subtractedValue > oldValue)\r\n        {\r\n            allowed[msg.sender][_spender] = 0;\r\n        }\r\n        else\r\n        {\r\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n        }\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n}\r\n//////////////////////////////////Atoken Start////////////////////////\r\n\r\ncontract AToken is TokenControl,Owned\r\n{\r\n    using SafeMath for uint256 ;\r\n\r\n    string public constant name    = \"Alvin's Token\";\r\n    string public constant symbol  = \"Atoken\";\r\n    uint8 public decimals = 9;\r\n\r\n\r\n    //定義各個stage\r\n    enum  Stage\r\n    {\r\n        first,\r\n        firstreturn,\r\n        second,\r\n        secondreturn,\r\n        fail\r\n    }\r\n    Stage public stage;\r\n    uint32 public endtime;\r\n    uint256 public Remain;\r\n    //進入下一個stage\r\n    bool public confirm2stage = false;\r\n    function ownerconfirm() public onlyowner\r\n    {\r\n        require (uint32(block.timestamp)> endtime);\r\n        require (!confirm2stage);\r\n        Remain = Remain.add(40000000*10**9);\r\n        totaltoken = 90000000*10**9;\r\n        confirm2stage = true;\r\n        verifyStage();\r\n    }\r\n\r\n    function ownerforce() public onlyowner\r\n    {\r\n        require(stage==Stage.second);\r\n        stage= Stage.secondreturn;\r\n    }\r\n\r\n    function verifyStage()internal\r\n    {\r\n        if (stage==Stage.second&&Remain==0)\r\n        {\r\n            stage= Stage.secondreturn;\r\n        }\r\n        if (stage==Stage.firstreturn&&confirm2stage)\r\n        {\r\n             stage=Stage.second;\r\n        }\r\n        if (uint32(block.timestamp)> endtime&&Remain>10000000*10**9&&stage==Stage.first)\r\n        {\r\n            stage=Stage.fail;\r\n        }\r\n        if (uint32(block.timestamp)>= endtime&&stage==Stage.first)\r\n        {\r\n             stage=Stage.firstreturn;\r\n        }\r\n    }\r\n\r\n    //根據不同state給予不同價錢\r\n    function price() internal constant returns (uint256)\r\n    {\r\n        if(stage==Stage.first)\r\n        {\r\n            return 10;\r\n        }\r\n        if(stage==Stage.second)\r\n        {\r\n            return 8;\r\n        }\r\n        else\r\n        {\r\n        return 0;\r\n        }\r\n    }\r\n\r\n    //block時間\r\n    function timeset() public constant returns (uint256)\r\n    {\r\n        return block.timestamp;\r\n    }\r\n    function viewprice() public constant returns (uint256)\r\n    {\r\n        return price();\r\n    }\r\n\r\n    //給予contract初始值\r\n    function AToken() public\r\n    {\r\n        totaltoken = 50000000*10**9;\r\n        Remain = totaltoken;\r\n        endtime = 1524571200;\r\n        stage= Stage.first;\r\n\r\n    }\r\n    function () public payable\r\n    {\r\n        buyAtoken();\r\n    }\r\n\r\n    function buyAtoken() public payable\r\n    {\r\n      //reject the buyer from contract\r\n        require(!isContract(msg.sender));\r\n        require(Remain>0);\r\n\r\n      //check current changerate\r\n        uint256 rate = price();\r\n      //return if not in payable stage\r\n        require(rate >0);\r\n        uint256 requested;\r\n        uint256 toreturn;\r\n        requested = msg.value.mul(rate);\r\n        if (requested >Remain)\r\n        {\r\n          requested = Remain;\r\n          toreturn = msg.value.sub(Remain.div(rate));\r\n        }\r\n        Remain = Remain.sub(requested);\r\n        balances[msg.sender]=balances[msg.sender].add(requested);\r\n\r\n        if (toreturn>0)\r\n        {\r\n            msg.sender.transfer(toreturn);\r\n        }\r\n        verifyStage();\r\n    }\r\n\r\n\r\n    function greedyowner() public\r\n    {\r\n        require(msg.sender==owner);\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    function withdraw() public\r\n    {\r\n      require(stage==Stage.fail);\r\n      require(balances[msg.sender]>0);\r\n      uint256 ethreturn = balances[msg.sender].div(10);\r\n      balances[msg.sender] = 0;\r\n      msg.sender.transfer(ethreturn);      \r\n    }\r\n\r\n\r\n    function isContract(address _addr) constant internal returns(bool) \r\n    {\r\n        uint size;\r\n        if (_addr == 0) return false;\r\n        assembly {\r\n            size := extcodesize(_addr)\r\n        }\r\n        return size > 0;\r\n    }\r\n    \r\n    function ownertransfer(address _target,uint256 _amount) public onlyowner\r\n    {\r\n        require(stage==Stage.firstreturn||stage==Stage.secondreturn);\r\n        uint256 contractvalue = address(this).balance;\r\n        require(contractvalue>0);\r\n        if (_amount>contractvalue)\r\n        {\r\n            _target.transfer(contractvalue);\r\n        }    \r\n        else\r\n        {\r\n            _target.transfer(_amount);\r\n        }\r\n        \r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Remain\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timeset\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endtime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"greedyowner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownerforce\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newowner\",\"type\":\"address\"}],\"name\":\"setowner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"viewprice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"confirm2stage\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownerconfirm\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyAtoken\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ownertransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"AToken","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bfb8c30e1ab90159f446f2c53c553243551c023c5ab6be85e8c4ab9372336e7b"}]}