{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n \r\n \r\n \r\n \r\n \r\ncontract Lottery7 {\r\n    \r\n    address owner;\r\n    address profit = 0xB7BB510B0746bdeE208dB6fB781bF5Be39d15A15;\r\n    uint public tickets;\r\n    uint public round;\r\n    string public status;\r\n    uint public lastWiningTicketNumber;\r\n    address public lastWinner;\r\n    address ticket1;\r\n    address ticket2;\r\n    address ticket3;\r\n    address ticket4;\r\n    address ticket5;\r\n    uint constant price = 0.1 ether; \r\n    uint seed;\r\n    bool entry = false;\r\n     \r\n    function Lottery7() public { \r\n        owner = msg.sender;\r\n        tickets = 5;\r\n        round = 1;\r\n        status = \"Running\";\r\n        entry = false;\r\n        seed = 777;\r\n    }\r\n     \r\n     \r\n    function changeStatus(string w) public {\r\n        if (msg.sender == owner) {\r\n            status = w;\r\n        }\r\n        else {\r\n            revert();\r\n        }\r\n    }\r\n    \r\n    function changeSeed(uint32 n) public {\r\n        if (msg.sender == owner) {\r\n            seed = uint(n);\r\n            seed = uint(block.blockhash(block.number-seed))%2000 + 1; \r\n        }\r\n        else {\r\n            revert();\r\n        }\r\n    }\r\n     \r\n    function () public payable { \r\n        buyTickets();\r\n    }\r\n     \r\n    function buyTickets() public payable {\r\n        if (entry == true) { \r\n            revert();\r\n        }\r\n        entry = true;\r\n        \r\n        if (msg.value != (price)) {\r\n            entry = false;\r\n            if (keccak256(status) == keccak256(\"Shutdown\")) { \r\n                selfdestruct(owner);\r\n            }\r\n            revert(); \r\n        }\r\n        else {\r\n            if (tickets == 5) {\r\n                tickets -= 1;\r\n                ticket1 = msg.sender;\r\n            }\r\n            else if(tickets == 4) {\r\n                tickets -= 1;\r\n                ticket2 = msg.sender;\r\n                profit.transfer(price * 1/2); \r\n            }\r\n            else if(tickets == 3) {\r\n                tickets -= 1;\r\n                ticket3 = msg.sender;\r\n            }\r\n            else if(tickets == 2) {\r\n                tickets -= 1;\r\n                ticket4 = msg.sender;\r\n            }\r\n            else if(tickets == 1) {\r\n                ticket5 = msg.sender;\r\n                \r\n                tickets = 5; \r\n                round += 1; \r\n                seed = uint(block.blockhash(block.number-seed))%2000 + 1; \r\n                uint random_number = uint(block.blockhash(block.number-seed))%5 + 1; \r\n                lastWiningTicketNumber = random_number; \r\n    \r\n                uint pay = (price * 9/2); \r\n                \r\n                if (random_number == 1) {\r\n                    ticket1.transfer(pay);\r\n                    lastWinner = ticket1; \r\n                }\r\n                else if(random_number == 2) {\r\n                    ticket2.transfer(pay);\r\n                    lastWinner = ticket2; \r\n                }\r\n                else if(random_number == 3) {\r\n                    ticket3.transfer(pay);\r\n                    lastWinner = ticket3; \r\n                }\r\n                else if(random_number == 4) {\r\n                    ticket4.transfer(pay);\r\n                    lastWinner = ticket4; \r\n                }\r\n                else if(random_number == 5) {\r\n                    ticket5.transfer(pay);\r\n                    lastWinner = ticket5; \r\n                }\r\n            }\r\n        }\r\n\r\n        entry = false;\r\n    }\r\n     \r\n     \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"round\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tickets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastWiningTicketNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"n\",\"type\":\"uint32\"}],\"name\":\"changeSeed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"w\",\"type\":\"string\"}],\"name\":\"changeStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTickets\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastWinner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Lottery7","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://832ecc871e4fcc4903f3d3d6a3e975f978a761945a9841df62b4a7d31799e965"}]}