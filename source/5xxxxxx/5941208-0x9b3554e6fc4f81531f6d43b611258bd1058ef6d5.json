{"status":"1","message":"OK","result":[{"SourceCode":"contract ADM312 {\r\n\r\n  address public COO;\r\n  address public CTO;\r\n  address public CFO;\r\n  address private coreAddress;\r\n  address public logicAddress;\r\n  address public superAddress;\r\n\r\n  modifier onlyAdmin() {\r\n    require(msg.sender == COO || msg.sender == CTO || msg.sender == CFO);\r\n    _;\r\n  }\r\n  \r\n  modifier onlyContract() {\r\n    require(msg.sender == coreAddress || msg.sender == logicAddress || msg.sender == superAddress);\r\n    _;\r\n  }\r\n    \r\n  modifier onlyContractAdmin() {\r\n    require(msg.sender == coreAddress || msg.sender == logicAddress || msg.sender == superAddress || msg.sender == COO || msg.sender == CTO || msg.sender == CFO);\r\n     _;\r\n  }\r\n  \r\n  function transferAdmin(address _newAdminAddress1, address _newAdminAddress2) public onlyAdmin {\r\n    if(msg.sender == COO)\r\n    {\r\n        CTO = _newAdminAddress1;\r\n        CFO = _newAdminAddress2;\r\n    }\r\n    if(msg.sender == CTO)\r\n    {\r\n        COO = _newAdminAddress1;\r\n        CFO = _newAdminAddress2;\r\n    }\r\n    if(msg.sender == CFO)\r\n    {\r\n        COO = _newAdminAddress1;\r\n        CTO = _newAdminAddress2;\r\n    }\r\n  }\r\n  \r\n  function transferContract(address _newCoreAddress, address _newLogicAddress, address _newSuperAddress) external onlyAdmin {\r\n    coreAddress  = _newCoreAddress;\r\n    logicAddress = _newLogicAddress;\r\n    superAddress = _newSuperAddress;\r\n    SetCoreInterface(_newLogicAddress).setCoreContract(_newCoreAddress);\r\n    SetCoreInterface(_newSuperAddress).setCoreContract(_newCoreAddress);\r\n  }\r\n\r\n\r\n}\r\n\r\ncontract ERC721 {\r\n    \r\n  event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);\r\n  event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);\r\n\r\n  function totalSupply() public view returns (uint256 total);\r\n  function balanceOf(address _owner) public view returns (uint256 balance);\r\n  function ownerOf(uint256 _tokenId) public view returns (address owner);\r\n  function transfer(address _to, uint256 _tokenId) public;\r\n  function approve(address _to, uint256 _tokenId) public;\r\n  function takeOwnership(uint256 _tokenId) public;\r\n  \r\n}\r\n\r\ncontract SetCoreInterface {\r\n   function setCoreContract(address _neWCoreAddress) external; \r\n}\r\n\r\ncontract CryptoAtoms is ADM312, ERC721 {\r\n    \r\n    function CryptoAtoms () public {\r\n        COO = msg.sender;\r\n        CTO = msg.sender;\r\n        CFO = msg.sender;\r\n        createCustomAtom(0,0,4,0,0,0,0);\r\n    }\r\n    \r\n    function kill() external\r\n\t{\r\n\t    require(msg.sender == COO);\r\n\t\tselfdestruct(msg.sender);\r\n\t}\r\n    \r\n    function() public payable{}\r\n    \r\n    uint public randNonce  = 0;\r\n    \r\n    struct Atom \r\n    {\r\n      uint64   dna;\r\n      uint8    gen;\r\n      uint8    lev;\r\n      uint8    cool;\r\n      uint32   sons;\r\n      uint64   fath;\r\n\t  uint64   moth;\r\n\t  uint128  isRent;\r\n\t  uint128  isBuy;\r\n\t  uint32   isReady;\r\n    }\r\n    \r\n    Atom[] public atoms;\r\n    \r\n    mapping (uint64  => bool) public dnaExist;\r\n    mapping (address => bool) public bonusReceived;\r\n    mapping (address => uint) public ownerAtomsCount;\r\n    mapping (uint => address) public atomOwner;\r\n    \r\n    event NewWithdraw(address sender, uint balance);\r\n    \r\n    function createCustomAtom(uint64 _dna, uint8 _gen, uint8 _lev, uint8 _cool, uint128 _isRent, uint128 _isBuy, uint32 _isReady) public onlyAdmin {\r\n        require(dnaExist[_dna]==false && _cool+_lev>=4);\r\n        Atom memory newAtom = Atom(_dna, _gen, _lev, _cool, 0, 2**50, 2**50, _isRent, _isBuy, _isReady);\r\n        uint id = atoms.push(newAtom) - 1;\r\n        atomOwner[id] = msg.sender;\r\n        ownerAtomsCount[msg.sender]++;\r\n        dnaExist[_dna] = true;\r\n    }\r\n    \r\n    function withdrawBalance() public payable onlyAdmin {\r\n\t\tNewWithdraw(msg.sender, address(this).balance);\r\n        CFO.transfer(address(this).balance);\r\n    }\r\n        \r\n    function incRandNonce() external onlyContract {\r\n        randNonce++;\r\n    }\r\n    \r\n    function setDnaExist(uint64 _dna, bool _newDnaLocking) external onlyContractAdmin {\r\n        dnaExist[_dna] = _newDnaLocking;\r\n    }\r\n    \r\n    function setBonusReceived(address _add, bool _newBonusLocking) external onlyContractAdmin {\r\n        bonusReceived[_add] = _newBonusLocking;\r\n    }\r\n    \r\n    function setOwnerAtomsCount(address _owner, uint _newCount) external onlyContract {\r\n        ownerAtomsCount[_owner] = _newCount;\r\n    }\r\n    \r\n    function setAtomOwner(uint _atomId, address _owner) external onlyContract {\r\n        atomOwner[_atomId] = _owner;\r\n    }\r\n        \r\n    function pushAtom(uint64 _dna, uint8 _gen, uint8 _lev, uint8 _cool, uint32 _sons, uint64 _fathId, uint64 _mothId, uint128 _isRent, uint128 _isBuy, uint32 _isReady) external onlyContract returns (uint id) {\r\n        Atom memory newAtom = Atom(_dna, _gen, _lev, _cool, _sons, _fathId, _mothId, _isRent, _isBuy, _isReady);\r\n        id = atoms.push(newAtom) -1;\r\n    }\r\n\t\r\n\tfunction setAtomDna(uint _atomId, uint64 _dna) external onlyAdmin {\r\n        atoms[_atomId].dna = _dna;\r\n    }\r\n\t\r\n\tfunction setAtomGen(uint _atomId, uint8 _gen) external onlyAdmin {\r\n        atoms[_atomId].gen = _gen;\r\n    }\r\n    \r\n    function setAtomLev(uint _atomId, uint8 _lev) external onlyContract {\r\n        atoms[_atomId].lev = _lev;\r\n    }\r\n    \r\n    function setAtomCool(uint _atomId, uint8 _cool) external onlyContract {\r\n        atoms[_atomId].cool = _cool;\r\n    }\r\n    \r\n    function setAtomSons(uint _atomId, uint32 _sons) external onlyContract {\r\n        atoms[_atomId].sons = _sons;\r\n    }\r\n    \r\n    function setAtomFath(uint _atomId, uint64 _fath) external onlyContract {\r\n        atoms[_atomId].fath = _fath;\r\n    }\r\n    \r\n    function setAtomMoth(uint _atomId, uint64 _moth) external onlyContract {\r\n        atoms[_atomId].moth = _moth;\r\n    }\r\n    \r\n    function setAtomIsRent(uint _atomId, uint128 _isRent) external onlyContract {\r\n        atoms[_atomId].isRent = _isRent;\r\n    }\r\n    \r\n    function setAtomIsBuy(uint _atomId, uint128 _isBuy) external onlyContract {\r\n        atoms[_atomId].isBuy = _isBuy;\r\n    }\r\n    \r\n    function setAtomIsReady(uint _atomId, uint32 _isReady) external onlyContractAdmin {\r\n        atoms[_atomId].isReady = _isReady;\r\n    }\r\n    \r\n    //ERC721\r\n    \r\n    mapping (uint => address) tokenApprovals;\r\n    \r\n    function totalSupply() public view returns (uint256 total){\r\n  \t    return atoms.length;\r\n  \t}\r\n  \t\r\n  \tfunction balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return ownerAtomsCount[_owner];\r\n    }\r\n    \r\n    function ownerOf(uint256 _tokenId) public view returns (address owner) {\r\n        return atomOwner[_tokenId];\r\n    }\r\n      \r\n    function _transfer(address _from, address _to, uint256 _tokenId) private {\r\n        atoms[_tokenId].isBuy  = 0;\r\n        atoms[_tokenId].isRent = 0;\r\n        ownerAtomsCount[_to]++;\r\n        ownerAtomsCount[_from]--;\r\n        atomOwner[_tokenId] = _to;\r\n        Transfer(_from, _to, _tokenId);\r\n    }\r\n  \r\n    function transfer(address _to, uint256 _tokenId) public {\r\n        require(msg.sender == atomOwner[_tokenId]);\r\n        _transfer(msg.sender, _to, _tokenId);\r\n    }\r\n    \r\n    function approve(address _to, uint256 _tokenId) public {\r\n        require(msg.sender == atomOwner[_tokenId]);\r\n        tokenApprovals[_tokenId] = _to;\r\n        Approval(msg.sender, _to, _tokenId);\r\n    }\r\n    \r\n    function takeOwnership(uint256 _tokenId) public {\r\n        require(tokenApprovals[_tokenId] == msg.sender);\r\n        _transfer(ownerOf(_tokenId), msg.sender, _tokenId);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_atomId\",\"type\":\"uint256\"},{\"name\":\"_dna\",\"type\":\"uint64\"}],\"name\":\"setAtomDna\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"total\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"dnaExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_newCount\",\"type\":\"uint256\"}],\"name\":\"setOwnerAtomsCount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_atomId\",\"type\":\"uint256\"},{\"name\":\"_lev\",\"type\":\"uint8\"}],\"name\":\"setAtomLev\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CFO\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_atomId\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setAtomOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CTO\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_atomId\",\"type\":\"uint256\"},{\"name\":\"_isBuy\",\"type\":\"uint128\"}],\"name\":\"setAtomIsBuy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"superAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_atomId\",\"type\":\"uint256\"},{\"name\":\"_sons\",\"type\":\"uint32\"}],\"name\":\"setAtomSons\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"atomOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_atomId\",\"type\":\"uint256\"},{\"name\":\"_moth\",\"type\":\"uint64\"}],\"name\":\"setAtomMoth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_atomId\",\"type\":\"uint256\"},{\"name\":\"_isReady\",\"type\":\"uint32\"}],\"name\":\"setAtomIsReady\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randNonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"bonusReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dna\",\"type\":\"uint64\"},{\"name\":\"_newDnaLocking\",\"type\":\"bool\"}],\"name\":\"setDnaExist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_atomId\",\"type\":\"uint256\"},{\"name\":\"_gen\",\"type\":\"uint8\"}],\"name\":\"setAtomGen\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"logicAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"takeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"incRandNonce\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"},{\"name\":\"_newBonusLocking\",\"type\":\"bool\"}],\"name\":\"setBonusReceived\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dna\",\"type\":\"uint64\"},{\"name\":\"_gen\",\"type\":\"uint8\"},{\"name\":\"_lev\",\"type\":\"uint8\"},{\"name\":\"_cool\",\"type\":\"uint8\"},{\"name\":\"_isRent\",\"type\":\"uint128\"},{\"name\":\"_isBuy\",\"type\":\"uint128\"},{\"name\":\"_isReady\",\"type\":\"uint32\"}],\"name\":\"createCustomAtom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COO\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdminAddress1\",\"type\":\"address\"},{\"name\":\"_newAdminAddress2\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_atomId\",\"type\":\"uint256\"},{\"name\":\"_cool\",\"type\":\"uint8\"}],\"name\":\"setAtomCool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerAtomsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_atomId\",\"type\":\"uint256\"},{\"name\":\"_fath\",\"type\":\"uint64\"}],\"name\":\"setAtomFath\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"atoms\",\"outputs\":[{\"name\":\"dna\",\"type\":\"uint64\"},{\"name\":\"gen\",\"type\":\"uint8\"},{\"name\":\"lev\",\"type\":\"uint8\"},{\"name\":\"cool\",\"type\":\"uint8\"},{\"name\":\"sons\",\"type\":\"uint32\"},{\"name\":\"fath\",\"type\":\"uint64\"},{\"name\":\"moth\",\"type\":\"uint64\"},{\"name\":\"isRent\",\"type\":\"uint128\"},{\"name\":\"isBuy\",\"type\":\"uint128\"},{\"name\":\"isReady\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_atomId\",\"type\":\"uint256\"},{\"name\":\"_isRent\",\"type\":\"uint128\"}],\"name\":\"setAtomIsRent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCoreAddress\",\"type\":\"address\"},{\"name\":\"_newLogicAddress\",\"type\":\"address\"},{\"name\":\"_newSuperAddress\",\"type\":\"address\"}],\"name\":\"transferContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dna\",\"type\":\"uint64\"},{\"name\":\"_gen\",\"type\":\"uint8\"},{\"name\":\"_lev\",\"type\":\"uint8\"},{\"name\":\"_cool\",\"type\":\"uint8\"},{\"name\":\"_sons\",\"type\":\"uint32\"},{\"name\":\"_fathId\",\"type\":\"uint64\"},{\"name\":\"_mothId\",\"type\":\"uint64\"},{\"name\":\"_isRent\",\"type\":\"uint128\"},{\"name\":\"_isBuy\",\"type\":\"uint128\"},{\"name\":\"_isReady\",\"type\":\"uint32\"}],\"name\":\"pushAtom\",\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"NewWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"CryptoAtoms","CompilerVersion":"v0.4.24-nightly.2018.5.16+commit.7f965c86","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cd66f13f88bd349e3ab615239dddc7f47bd7b912b956305e7c0959cc0828dc84"}]}