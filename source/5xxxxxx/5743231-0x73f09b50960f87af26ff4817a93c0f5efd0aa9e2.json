{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// Author: Bruno Block\r\n// Version: 0.5\r\n\r\ninterface contractInterface {\r\n    function balanceOf(address _owner) external constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) external;\r\n}\r\n\r\ncontract DualSig {\r\n    address public directorA;\r\n    address public directorB;\r\n    address public proposalAuthor;\r\n    address public proposalContract;\r\n    address public proposalDestination;\r\n    uint256 public proposalAmount;\r\n    uint256 public proposalBlock;\r\n    uint256 public proposalNonce;\r\n    uint256 public overrideBlock;\r\n    uint256 public transferSafety;\r\n\r\n    event Proposal(uint256 _nonce, address _author, address _contract, uint256 _amount, address _destination, uint256 _timestamp);\r\n\r\n    event Accept(uint256 _nonce);\r\n\r\n    event NewDirectorA(address _director);\r\n\r\n    event NewDirectorB(address _director);\r\n\r\n    modifier onlyDirectors {\r\n        require(msg.sender == directorA || msg.sender == directorB);\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        overrideBlock = (60*60*24*30)/15;// One month override interval assuming 15 second blocks (172,800 blocks)\r\n        proposalNonce = 0;\r\n        transferSafety = 1 ether;\r\n        directorA = msg.sender;\r\n        directorB = msg.sender;\r\n        reset();\r\n    }\r\n\r\n    function () public payable {}\r\n\r\n    function proposal(address proposalContractSet, uint256 proposalAmountSet, address proposalDestinationSet) public onlyDirectors {\r\n        proposalNonce++;\r\n        proposalAuthor = msg.sender;\r\n        proposalContract = proposalContractSet;\r\n        proposalAmount = proposalAmountSet;\r\n        proposalDestination = proposalDestinationSet;\r\n        proposalBlock = block.number + overrideBlock;\r\n        emit Proposal(proposalNonce, proposalAuthor, proposalContract, proposalAmount, proposalDestination, proposalBlock);\r\n    }\r\n\r\n    function reset() public onlyDirectors {\r\n        proposalNonce++;\r\n        if (proposalNonce > 1000000) {\r\n            proposalNonce = 0;\r\n        }\r\n        proposalAuthor = 0x0;\r\n        proposalContract = 0x0;\r\n        proposalAmount = 0;\r\n        proposalDestination = 0x0;\r\n        proposalBlock = 0;\r\n    }\r\n\r\n    function accept(uint256 acceptNonce) public onlyDirectors {\r\n        require(proposalNonce == acceptNonce);\r\n        require(proposalAmount > 0);\r\n        require(proposalDestination != 0x0);\r\n        require(proposalAuthor != msg.sender || block.number >= proposalBlock);\r\n\r\n        address localContract = proposalContract;\r\n        address localDestination = proposalDestination;\r\n        uint256 localAmount = proposalAmount;\r\n        reset();\r\n\r\n        if (localContract==0x0) {\r\n            require(localAmount <= address(this).balance);\r\n            localDestination.transfer(localAmount);\r\n        }\r\n        else {\r\n            contractInterface tokenContract = contractInterface(localContract);\r\n            tokenContract.transfer(localDestination, localAmount);\r\n        }\r\n        emit Accept(acceptNonce);\r\n    }\r\n\r\n    function transferDirectorA(address newDirectorA) public payable {\r\n        require(msg.sender==directorA);\r\n        require(msg.value==transferSafety);// Prevents accidental transfer\r\n        directorA.transfer(transferSafety);// Reimburse safety deposit\r\n        reset();\r\n        directorA = newDirectorA;\r\n        emit NewDirectorA(directorA);\r\n    }\r\n\r\n    function transferDirectorB(address newDirectorB) public payable {\r\n        require(msg.sender==directorB);\r\n        require(msg.value==transferSafety);// Prevents accidental transfer\r\n        directorB.transfer(transferSafety);// Reimburse safety deposit\r\n        reset();\r\n        directorB = newDirectorB;\r\n        emit NewDirectorB(directorB);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"transferSafety\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"directorB\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"acceptNonce\",\"type\":\"uint256\"}],\"name\":\"accept\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalDestination\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"proposalContractSet\",\"type\":\"address\"},{\"name\":\"proposalAmountSet\",\"type\":\"uint256\"},{\"name\":\"proposalDestinationSet\",\"type\":\"address\"}],\"name\":\"proposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newDirectorB\",\"type\":\"address\"}],\"name\":\"transferDirectorB\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalAuthor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"overrideBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalNonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"directorA\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newDirectorA\",\"type\":\"address\"}],\"name\":\"transferDirectorA\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_author\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_contract\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_destination\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"Proposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"Accept\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_director\",\"type\":\"address\"}],\"name\":\"NewDirectorA\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_director\",\"type\":\"address\"}],\"name\":\"NewDirectorB\",\"type\":\"event\"}]","ContractName":"DualSig","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6ece83737d6bac5f38b8149b05f1e23dcdd605b55ec1399ead7949fe8837e667"}]}