{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract PlayerToken {\r\n    function totalSupply() public view returns (uint256 total);\r\n    function balanceOf(address _owner) public view returns (uint balance);\r\n    function ownerOf(uint256 _tokenId) public view returns (address owner);\r\n    function approve(address _to, uint256 _tokenId) external;\r\n    function transfer(address _to, uint256 _tokenId) external;\r\n    function tokensOfOwner(address _owner) external view returns (uint256[] ownerTokens);\r\n    function createPlayer(uint32[7] _skills, uint256 _position, address _owner) public returns (uint256);\r\n    function getPlayer(uint256 playerId) public view returns(uint32 talent, uint32 tactics, uint32 dribbling, uint32 kick,\r\n       uint32 speed, uint32 pass, uint32 selection);\r\n    function getPosition(uint256 _playerId) public view returns(uint256);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);\r\n    event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);\r\n}\r\n\r\n\r\ncontract FMWorldAccessControl {\r\n    address public ceoAddress;\r\n    address public cooAddress;\r\n\r\n    bool public pause = false;\r\n\r\n    modifier onlyCEO() {\r\n        require(msg.sender == ceoAddress);\r\n        _;\r\n    }\r\n\r\n    modifier onlyCOO() {\r\n        require(msg.sender == cooAddress);\r\n        _;\r\n    }\r\n\r\n    modifier onlyC() {\r\n        require(\r\n            msg.sender == cooAddress ||\r\n            msg.sender == ceoAddress\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier notPause() {\r\n        require(!pause);\r\n        _;\r\n    }\r\n\r\n    function setCEO(address _newCEO) external onlyCEO {\r\n        require(_newCEO != address(0));\r\n\r\n        ceoAddress = _newCEO;\r\n    }\r\n\r\n    function setCOO(address _newCOO) external onlyCEO {\r\n        require(_newCOO != address(0));\r\n\r\n        cooAddress = _newCOO;\r\n    }\r\n\r\n\r\n    function setPause(bool _pause) external onlyC {\r\n        pause = _pause;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\ncontract Team is FMWorldAccessControl\r\n{\r\n    struct TeamStruct {\r\n        string name;\r\n        string logo;\r\n        uint256[] playersIds;\r\n        uint256 minSkills;\r\n        uint256 minTalent;\r\n        mapping(uint256 => uint256) countPositions;\r\n    }\r\n\r\n    uint256 public countPlayersInPosition;\r\n\r\n    mapping(uint256 => TeamStruct) public teams;\r\n\r\n    uint256[] public teamsIds;\r\n\r\n    mapping (uint256 => uint256) mapPlayerTeam;\r\n\r\n    mapping (address => uint256) mapOwnerTeam;\r\n\r\n    address public playerTokenAddress;\r\n\r\n    function Team(address _playerTokenAddress) public {\r\n        countPlayersInPosition = 4;\r\n        playerTokenAddress = _playerTokenAddress;\r\n\r\n        ceoAddress = msg.sender;\r\n        cooAddress = msg.sender;\r\n    }\r\n\r\n    function setName(uint256 _teamId, string _name) external onlyCEO {\r\n        teams[_teamId].name = _name;\r\n    }\r\n\r\n    function setLogo(uint256 _teamId, string _logo) external onlyCEO {\r\n        teams[_teamId].logo = _logo;\r\n    }\r\n\r\n\r\n    function getTeamSumSkills(uint256 _teamId) public view returns(uint256 sumSkills) {\r\n        PlayerToken playerToken = PlayerToken(playerTokenAddress);\r\n        uint256 l = teams[_teamId].playersIds.length;\r\n        for (uint256 _playerIndex = 0; _playerIndex < l; _playerIndex++) {\r\n            var (_talent, _tactics, _dribbling, _kick, _speed, _pass, _selection) = playerToken.getPlayer(teams[_teamId].playersIds[_playerIndex]);\r\n            sumSkills +=  _tactics + _dribbling + _kick + _speed + _pass + _selection;\r\n        }\r\n    }\r\n\r\n    function setPlayerTokenAddress(address _playerTokenAddress) public onlyCEO {\r\n        playerTokenAddress = _playerTokenAddress;\r\n    }\r\n\r\n    function getPlayerIdOfIndex(uint256 _teamId, uint256 index) public view returns (uint256) {\r\n        return teams[_teamId].playersIds[index];\r\n    }\r\n\r\n    function getCountTeams() public view returns(uint256) {\r\n        return teamsIds.length;\r\n    }\r\n\r\n    function getAllTeamsIds() public view returns(uint256[]) {\r\n        return teamsIds;\r\n    }\r\n\r\n    function setCountPlayersInPosition(uint256 _countPlayersInPosition) public onlyCEO {\r\n        countPlayersInPosition = _countPlayersInPosition;\r\n    }\r\n    \r\n    function getMinSkills(uint256 _teamId) public view returns(uint256) {\r\n        return teams[_teamId].minSkills;\r\n    }\r\n    \r\n    function getMinTalent(uint256 _teamId)  public view returns(uint256) {\r\n        return teams[_teamId].minTalent;\r\n    }\r\n\r\n    function getTeam(uint256 _teamId) public view returns(string _name, string _logo, uint256 _minSkills, uint256 _minTalent,\r\n        uint256 _countPlayers, uint256 _countPositionsGk, uint256 _countPositionsDf, uint256 _countPositionsMd, uint256 _countPositionsFw) {\r\n        _name = teams[_teamId].name;\r\n        _logo = teams[_teamId].logo;\r\n        _minSkills = teams[_teamId].minSkills;\r\n        _minTalent = teams[_teamId].minTalent;\r\n        _countPlayers = teams[_teamId].playersIds.length;\r\n        _countPositionsGk = teams[_teamId].countPositions[1];\r\n        _countPositionsDf = teams[_teamId].countPositions[2];\r\n        _countPositionsMd = teams[_teamId].countPositions[3];\r\n        _countPositionsFw = teams[_teamId].countPositions[4];\r\n    }\r\n\r\n    function createTeam(string _name, string _logo, uint256 _minTalent, uint256 _minSkills, address _owner, uint256 _playerId) public onlyCOO returns(uint256 _teamId) {\r\n        _teamId = teamsIds.length + 1;\r\n        PlayerToken playerToken = PlayerToken(playerTokenAddress);\r\n        uint256 _position = playerToken.getPosition(_playerId);\r\n        teams[_teamId].name = _name;\r\n        teams[_teamId].minSkills = _minSkills;\r\n        teams[_teamId].minTalent = _minTalent;\r\n        teams[_teamId].logo = _logo;\r\n        teamsIds.push(_teamId);\r\n        _addOwnerPlayerToTeam(_teamId, _owner, _playerId, _position);\r\n    }\r\n\r\n    function getPlayerTeam(uint256 _playerId) public view returns(uint256) {\r\n        return mapPlayerTeam[_playerId];\r\n    }\r\n\r\n    function getOwnerTeam(address _owner) public view returns(uint256) {\r\n        return mapOwnerTeam[_owner];\r\n    }\r\n\r\n    function isTeam(uint256 _teamId) public view returns(bool) {\r\n        if (teams[_teamId].minTalent == 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function getTeamPlayers(uint256 _teamId) public view returns(uint256[]) {\r\n        return teams[_teamId].playersIds;\r\n    }\r\n\r\n    function getCountPlayersOfOwner(uint256 _teamId, address _owner) public view returns(uint256 count) {\r\n        PlayerToken playerToken = PlayerToken(playerTokenAddress);\r\n        for (uint256 i = 0; i < teams[_teamId].playersIds.length; i++) {\r\n            if (playerToken.ownerOf(teams[_teamId].playersIds[i]) == _owner) {\r\n                count++;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCountPlayersOfTeam(uint256 _teamId) public view returns(uint256) {\r\n        return teams[_teamId].playersIds.length;\r\n    }\r\n\r\n    function getCountPosition(uint256 _teamId, uint256 _position) public view returns(uint256) {\r\n        return teams[_teamId].countPositions[_position];\r\n    }\r\n\r\n\r\n    function _addOwnerPlayerToTeam(uint256 _teamId, address _owner, uint256 _playerId, uint256 _position) internal {\r\n        teams[_teamId].playersIds.push(_playerId);\r\n        teams[_teamId].countPositions[_position] += 1;\r\n        mapOwnerTeam[_owner] = _teamId;\r\n        mapPlayerTeam[_playerId] = _teamId;\r\n    }\r\n\r\n    function joinTeam(uint256 _teamId, address _owner, uint256 _playerId, uint256 _position) public onlyCOO {\r\n        _addOwnerPlayerToTeam(_teamId, _owner, _playerId, _position);\r\n    }\r\n\r\n    function leaveTeam(uint256 _teamId, address _owner, uint256 _playerId, uint256 _position) public onlyCOO {\r\n        PlayerToken playerToken = PlayerToken(playerTokenAddress);\r\n\r\n        delete mapPlayerTeam[_playerId];\r\n        //\r\n\r\n        teams[_teamId].countPositions[_position] -= 1;\r\n        //\r\n\r\n        for (uint256 i = 0; i < teams[_teamId].playersIds.length; i++) {\r\n            if (teams[_teamId].playersIds[i] == _playerId) {\r\n                _removePlayer(_teamId, i);\r\n                break;\r\n            }\r\n        }\r\n\r\n        bool isMapOwnerTeamDelete = true;\r\n        for (uint256 pl = 0; pl < teams[_teamId].playersIds.length; pl++) {\r\n            if (_owner == playerToken.ownerOf(teams[_teamId].playersIds[pl])) {\r\n                isMapOwnerTeamDelete = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isMapOwnerTeamDelete) {\r\n            delete mapOwnerTeam[_owner];\r\n        }\r\n    }\r\n\r\n    function _removePlayer(uint256 _teamId, uint256 index) internal {\r\n        if (index >= teams[_teamId].playersIds.length) return;\r\n\r\n        for (uint i = index; i<teams[_teamId].playersIds.length-1; i++){\r\n            teams[_teamId].playersIds[i] = teams[_teamId].playersIds[i+1];\r\n        }\r\n        delete teams[_teamId].playersIds[teams[_teamId].playersIds.length-1];\r\n        teams[_teamId].playersIds.length--;\r\n    }\r\n\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"}],\"name\":\"getTeam\",\"outputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_logo\",\"type\":\"string\"},{\"name\":\"_minSkills\",\"type\":\"uint256\"},{\"name\":\"_minTalent\",\"type\":\"uint256\"},{\"name\":\"_countPlayers\",\"type\":\"uint256\"},{\"name\":\"_countPositionsGk\",\"type\":\"uint256\"},{\"name\":\"_countPositionsDf\",\"type\":\"uint256\"},{\"name\":\"_countPositionsMd\",\"type\":\"uint256\"},{\"name\":\"_countPositionsFw\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_playerTokenAddress\",\"type\":\"address\"}],\"name\":\"setPlayerTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"}],\"name\":\"getMinTalent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"}],\"name\":\"getCountPlayersOfTeam\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countPlayersInPosition\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getCountPlayersOfOwner\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCEO\",\"type\":\"address\"}],\"name\":\"setCEO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCOO\",\"type\":\"address\"}],\"name\":\"setCOO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"}],\"name\":\"isTeam\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"teams\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"logo\",\"type\":\"string\"},{\"name\":\"minSkills\",\"type\":\"uint256\"},{\"name\":\"minTalent\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_playerId\",\"type\":\"uint256\"}],\"name\":\"getPlayerTeam\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"}],\"name\":\"getMinSkills\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCountTeams\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"},{\"name\":\"_logo\",\"type\":\"string\"}],\"name\":\"setLogo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"},{\"name\":\"_position\",\"type\":\"uint256\"}],\"name\":\"getCountPosition\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"teamsIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"}],\"name\":\"getTeamSumSkills\",\"outputs\":[{\"name\":\"sumSkills\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getOwnerTeam\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cooAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_logo\",\"type\":\"string\"},{\"name\":\"_minTalent\",\"type\":\"uint256\"},{\"name\":\"_minSkills\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_playerId\",\"type\":\"uint256\"}],\"name\":\"createTeam\",\"outputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_playerId\",\"type\":\"uint256\"},{\"name\":\"_position\",\"type\":\"uint256\"}],\"name\":\"joinTeam\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllTeamsIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"playerTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_countPlayersInPosition\",\"type\":\"uint256\"}],\"name\":\"setCountPlayersInPosition\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"}],\"name\":\"getTeamPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_playerId\",\"type\":\"uint256\"},{\"name\":\"_position\",\"type\":\"uint256\"}],\"name\":\"leaveTeam\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_teamId\",\"type\":\"uint256\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPlayerIdOfIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_playerTokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Team","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000004409016e65eb770152316bcdd3f95c8329b4f7c7","Library":"","SwarmSource":"bzzr://8787fe3e27404ef8f008b2d2937c95f5a9b70b263bca6b667ef6a6879ed9dffd"}]}