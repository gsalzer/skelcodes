{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract Brothel {\r\n    address public manager;\r\n    address public coOwner;\r\n    mapping(address => bool) public hasAids;\r\n    Ho[8] public hoes;\r\n    \r\n    struct Ho {\r\n        address pimp;\r\n        uint buyPrice;\r\n        uint rentPrice;\r\n        uint aidsChance;\r\n    }\r\n    \r\n    function Brothel(address coown) public {\r\n        manager = msg.sender;\r\n        coOwner = coown;\r\n        \r\n        uint basePrice = 0.002 ether;\r\n        uint size = hoes.length;\r\n        uint baseAidsChance = 7;\r\n        \r\n        for (uint i = 0; i<size; i++) {\r\n            Ho hoe = hoes[i];\r\n            hoe.pimp = manager;\r\n            hoe.buyPrice = basePrice*(i+1);\r\n            hoe.rentPrice = hoe.buyPrice/10;\r\n            hoe.aidsChance = baseAidsChance + (i*4);\r\n        }\r\n    }\r\n    \r\n    function withdraw() public restricted {\r\n        uint leBron = address(this).balance*23/100;\r\n        coOwner.transfer(leBron);\r\n        manager.transfer(address(this).balance);\r\n    }\r\n    \r\n    function buyHo(uint index) public payable{\r\n        Ho hoe = hoes[index];\r\n        address currentPimp = hoe.pimp;\r\n        uint currentPrice = hoe.buyPrice;\r\n        require(msg.value >= currentPrice);\r\n        \r\n        currentPimp.transfer(msg.value*93/100);\r\n        hoe.pimp = msg.sender;\r\n        hoe.buyPrice = msg.value*160/100;\r\n    }\r\n    \r\n    function rentHo(uint index) public payable {\r\n        Ho hoe = hoes[index];\r\n        address currentPimp = hoe.pimp;\r\n        uint currentRent = hoe.rentPrice;\r\n        require(msg.value >= currentRent);\r\n        \r\n        currentPimp.transfer(msg.value*93/100);\r\n        if (block.timestamp%hoe.aidsChance == 0) {\r\n            hasAids[msg.sender] = true;\r\n        }\r\n    }\r\n    \r\n    function setRentPrice(uint index, uint newPrice) public {\r\n        require(msg.sender == hoes[index].pimp);\r\n        hoes[index].rentPrice = newPrice;\r\n    }\r\n\r\n    function sendMoney() public payable restricted {\r\n    }\r\n    \r\n    function balance() public view returns(uint) {\r\n        return address(this).balance;\r\n    }\r\n    \r\n    modifier restricted() {\r\n        require(msg.sender == manager);\r\n        _;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"buyHo\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"rentHo\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setRentPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasAids\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hoes\",\"outputs\":[{\"name\":\"pimp\",\"type\":\"address\"},{\"name\":\"buyPrice\",\"type\":\"uint256\"},{\"name\":\"rentPrice\",\"type\":\"uint256\"},{\"name\":\"aidsChance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sendMoney\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"coown\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Brothel","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000fec99944b2e370459b8d1fc0ce384a11e02c2881","Library":"","SwarmSource":"bzzr://90e34a4cc26278dedfa8651db509418ea1cd29d9bb52bf743dad1417807d81c8"}]}