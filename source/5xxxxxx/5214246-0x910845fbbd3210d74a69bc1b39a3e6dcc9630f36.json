{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\n\r\ninterface ERC20 {\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool);\r\n    function approve(address _spender, uint _value) public returns (bool);\r\n    function allowance(address _owner, address _spender) public constant returns (uint);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\n\r\ninterface ERC223 {\r\n    function transfer(address _to, uint _value, bytes _data) public returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint value, bytes indexed data);\r\n}\r\n\r\ncontract ERC223ReceivingContract {\r\n    function tokenFallback(address _from, uint _value, bytes _data) public;\r\n}\r\n\r\ncontract Token {\r\n    string internal _symbol;\r\n    string internal _name;\r\n    uint8 internal _decimals;\r\n    uint internal _totalSupply = 1000;\r\n    mapping (address => uint) internal _balanceOf;\r\n    mapping (address => mapping (address => uint)) internal _allowances;\r\n\r\n    function Token(string symbol, string name, uint8 decimals, uint totalSupply) public {\r\n        _symbol = symbol;\r\n        _name = name;\r\n        _decimals = decimals;\r\n        _totalSupply = totalSupply;\r\n    }\r\n\r\n    function name() public constant returns (string) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public constant returns (string) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public constant returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public constant returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address _addr) public constant returns (uint);\r\n    function transfer(address _to, uint _value) public returns (bool);\r\n    event Transfer(address indexed _from, address indexed _to, uint _value);\r\n}\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Organicco is Token(\"ORC\", \"Organicco\", 18, 120000000000000000000000000), ERC20, ERC223 {\r\n\r\n    using SafeMath for uint;\r\n    address public constant FOUNDING_TEAM = 0x001c3234d614F12D5ef931E2871BFf35D8C05a29;\r\n    address public constant PARTNER_SALES = 0x00749ea1Ca25e9C027426D74Bb3659A80493fa6d;\r\n    address public constant PRESALES = 0x00faf4afd47ebA1D1713C0506f4a05BC36cc590D;\r\n    address public constant ICO = 0x000E945D52F3EF8602B3484ce04036fF4d2888CA;\r\n    address public constant BONUS = 0x009C88134EE3636E7f92A402ed9531DF54B802BB;\r\n\r\n    function Organicco() public {\r\n        _balanceOf[FOUNDING_TEAM] = _totalSupply * 20 / 100; //24,000,000 (24 million)\r\n        _balanceOf[PARTNER_SALES] = _totalSupply * 16 / 100; //19,200,000 (19.2 million)\r\n        _balanceOf[PRESALES] = _totalSupply * 10 / 100; //12,000,000 (12 million)\r\n        _balanceOf[ICO] = _totalSupply * 50 / 100; //60,000,000 (60 million)\r\n        _balanceOf[BONUS] = _totalSupply * 4 / 100; //4,800,000 (4.8 million)\r\n    }\r\n\r\n    function totalSupply() public constant returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address _addr) public constant returns (uint) {\r\n        return _balanceOf[_addr];\r\n    }\r\n\r\n    function transfer(address _to, uint _value) public returns (bool) {\r\n        if (_value > 0 &&\r\n            _value <= _balanceOf[msg.sender] &&\r\n            !isContract(_to)) {\r\n            _balanceOf[msg.sender] = _balanceOf[msg.sender].sub(_value);\r\n            _balanceOf[_to] = _balanceOf[_to].add(_value);\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function transfer(address _to, uint _value, bytes _data) public returns (bool) {\r\n        if (_value > 0 &&\r\n            _value <= _balanceOf[msg.sender] &&\r\n            isContract(_to)) {\r\n            _balanceOf[msg.sender] = _balanceOf[msg.sender].sub(_value);\r\n            _balanceOf[_to] = _balanceOf[_to].add(_value);\r\n            ERC223ReceivingContract _contract = ERC223ReceivingContract(_to);\r\n            _contract.tokenFallback(msg.sender, _value, _data);\r\n            Transfer(msg.sender, _to, _value, _data);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function isContract(address _addr) private constant returns (bool) {\r\n        uint codeSize;\r\n        assembly {\r\n            codeSize := extcodesize(_addr)\r\n        }\r\n        return codeSize > 0;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) {\r\n        if (_allowances[_from][msg.sender] > 0 &&\r\n            _value > 0 &&\r\n            _allowances[_from][msg.sender] >= _value &&\r\n            _balanceOf[_from] >= _value) {\r\n            _balanceOf[_from] = _balanceOf[_from].sub(_value);\r\n            _balanceOf[_to] = _balanceOf[_to].add(_value);\r\n            _allowances[_from][msg.sender] = _allowances[_from][msg.sender].sub(_value);\r\n            Transfer(_from, _to, _value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function approve(address _spender, uint _value) public returns (bool) {\r\n        _allowances[msg.sender][_spender] = _allowances[msg.sender][_spender].add(_value);\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint) {\r\n        return _allowances[_owner][_spender];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"PRESALES\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICO\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PARTNER_SALES\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FOUNDING_TEAM\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Organicco","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://28326947106f53ea60ac9d90780a5a4837c8a6cc0c4ab0a258e54566d3482151"}]}