{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\ninterface SisterToken {function _buy(address _for)external payable;function testConnection() external;}\r\ncontract owned {\r\n    address public owner;\r\n    event Log(string s);\r\n\r\n    function owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n    function isOwner()public{\r\n        if(msg.sender==owner)emit Log(\"Owner\");\r\n        else{\r\n            emit Log(\"Not Owner\");\r\n        }\r\n    }\r\n}\r\ncontract Crowdsale is owned {\r\n    address public Nplay;\r\n    address public Eplay;\r\n    function Crowdsale() public payable{\r\n    }\r\n    function () public payable{\r\n        buy();\r\n    }\r\n    function setEplay(address newSS)public onlyOwner{\r\n        Eplay= newSS;\r\n    }\r\n    function setNplay(address newSS)public onlyOwner {\r\n        Nplay= newSS;\r\n    }\r\n    function buy()public payable{\r\n        SisterToken E = SisterToken(Eplay);\r\n        SisterToken N = SisterToken(Nplay);\r\n        E._buy.value(msg.value/2)(msg.sender);\r\n        N._buy.value(msg.value/2)(msg.sender);\r\n    }\r\n    function connectTest() public payable{\r\n        SisterToken S = SisterToken(Eplay);\r\n        SisterToken N = SisterToken(Nplay);\r\n        S.testConnection();\r\n        N.testConnection();\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"connectTest\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Nplay\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newSS\",\"type\":\"address\"}],\"name\":\"setNplay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Eplay\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newSS\",\"type\":\"address\"}],\"name\":\"setEplay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"s\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.22+commit.4cb486ee","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://48fd84c6ed018bb92ade4374012592627b6823ffcc12390a3458b4dd0852d76d"}]}