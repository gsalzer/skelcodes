{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\n/// @title Endorsements\r\n/// @author AlmavivA S.p.A. (Enrica D'Agostini, Giuseppe Bertone, et al.)\r\n/// @notice This contract add external/internal endorsement to supply chain actors and operations\r\n/// @dev This contract is part of the WineSupplyChain contract, and it is not meant to be used as\r\n/// a standalone contract\r\ncontract Endorsements {\r\n\r\n    struct Endorsement {\r\n        bool positive;\r\n        string title;\r\n        string description;\r\n        address endorser;\r\n    }\r\n\r\n    mapping (address => Endorsement[]) public userEndorsements;\r\n    mapping (bytes32 => Endorsement[]) public vineyardEndorsements;\r\n    mapping (bytes32 => Endorsement[]) public harvestOperationEndorsements;\r\n    mapping (bytes32 => Endorsement[]) public wineryOperationEndorsements;\r\n    mapping (bytes32 => Endorsement[]) public productOperationEndorsements;\r\n\r\n    function Endorsements() public { }\r\n\r\n    /// @notice Add new endorsement to an actor\r\n    /// @param user Actor's on-chain identity\r\n    /// @param positive True if it is a `positive` endorsement\r\n    /// @param title Endorsment's short description\r\n    /// @param description Endorsement's full description\r\n    function addUserEndorsement(\r\n        address user,\r\n        bool positive,\r\n        string title,\r\n        string description\r\n    )\r\n        external\r\n        returns (bool success)\r\n    {\r\n        userEndorsements[user].push(Endorsement(positive, title, description, msg.sender));\r\n        return true;\r\n    }\r\n\r\n    /// @notice Add new endorsement to a vineyard\r\n    /// @param _mappingID On-chain key to identify the harvest operation\r\n    /// @param _index Index of vineyard for the harvest\r\n    /// @param positive True if it is a `positive` endorsement\r\n    /// @param title Endorsement's short description\r\n    /// @param description Endorsement's full description\r\n    function addVineyardEndorsement(\r\n        string _mappingID,\r\n        uint _index,\r\n        bool positive,\r\n        string title,\r\n        string description\r\n    )\r\n        external\r\n        returns (bool success)\r\n    {\r\n        vineyardEndorsements[keccak256(_mappingID, _index)].push(\r\n                Endorsement(positive, title, description, msg.sender)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /// @notice Add new endorsement to harvest operation\r\n    /// @param _mappingID On-chain key to identify the harvest operation\r\n    /// @param positive True if it is a `positive` endorsement\r\n    /// @param title Endorsement's short description\r\n    /// @param description Endorsement's full description\r\n    function addHarvestOperationEndorsement(\r\n        string _mappingID,\r\n        bool positive,\r\n        string title,\r\n        string description\r\n    )\r\n        external\r\n        returns (bool success)\r\n    {\r\n        harvestOperationEndorsements[keccak256(_mappingID)].push(\r\n                Endorsement(positive, title, description, msg.sender)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /// @notice Add new endorsement to a winery operation\r\n    /// @param _mappingID On-chain key to identify the winery operation\r\n    /// @param _index Index of operation\r\n    /// @param positive True if it is a `positive` endorsement\r\n    /// @param title Endorsement's short description\r\n    /// @param description Endorsement's full description\r\n    function addWineryOperationEndorsement(\r\n        string _mappingID,\r\n        uint _index,\r\n        bool positive,\r\n        string title,\r\n        string description\r\n    )\r\n        external\r\n        returns (bool success)\r\n    {\r\n        wineryOperationEndorsements[keccak256(_mappingID, _index)].push(\r\n                Endorsement(positive, title, description, msg.sender)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /// @notice Add new endorsement to product winery operation\r\n    /// @param _mappingID On-chain key to identify the winery operation\r\n    /// @param _operationIndex Index of operation\r\n    /// @param _productIndex Index of operation product\r\n    /// @param positive True if it is a `positive` endorsement\r\n    /// @param title Endorsement's short description\r\n    /// @param description Endorsement's full description\r\n    function addProductEndorsement(\r\n        string _mappingID,\r\n        uint _operationIndex,\r\n        int _productIndex,\r\n        bool positive,\r\n        string title,\r\n        string description\r\n    )\r\n        external\r\n        returns (bool success)\r\n    {\r\n        require(_productIndex > 0);\r\n        productOperationEndorsements[keccak256(_mappingID, _operationIndex, _productIndex)].push(\r\n                Endorsement(positive, title, description, msg.sender)\r\n        );\r\n        return true;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"wineryOperationEndorsements\",\"outputs\":[{\"name\":\"positive\",\"type\":\"bool\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"endorser\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userEndorsements\",\"outputs\":[{\"name\":\"positive\",\"type\":\"bool\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"endorser\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"productOperationEndorsements\",\"outputs\":[{\"name\":\"positive\",\"type\":\"bool\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"endorser\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"positive\",\"type\":\"bool\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"addUserEndorsement\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mappingID\",\"type\":\"string\"},{\"name\":\"positive\",\"type\":\"bool\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"addHarvestOperationEndorsement\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vineyardEndorsements\",\"outputs\":[{\"name\":\"positive\",\"type\":\"bool\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"endorser\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"harvestOperationEndorsements\",\"outputs\":[{\"name\":\"positive\",\"type\":\"bool\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"endorser\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mappingID\",\"type\":\"string\"},{\"name\":\"_index\",\"type\":\"uint256\"},{\"name\":\"positive\",\"type\":\"bool\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"addVineyardEndorsement\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mappingID\",\"type\":\"string\"},{\"name\":\"_index\",\"type\":\"uint256\"},{\"name\":\"positive\",\"type\":\"bool\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"addWineryOperationEndorsement\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mappingID\",\"type\":\"string\"},{\"name\":\"_operationIndex\",\"type\":\"uint256\"},{\"name\":\"_productIndex\",\"type\":\"int256\"},{\"name\":\"positive\",\"type\":\"bool\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"addProductEndorsement\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Endorsements","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3661f16b79291c9c5cbbba99e4a6e8e5025b79da69fe442a5f1df3d5e7b10896"}]}