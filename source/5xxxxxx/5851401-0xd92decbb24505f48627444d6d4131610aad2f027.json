{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n/* ==================================================================== */\r\n/* Copyright (c) 2018 The Priate Conquest Project.  All rights reserved.\r\n/* \r\n/* https://www.pirateconquest.com One of the world's slg games of blockchain \r\n/*  \r\n/* authors rainy@livestar.com/Jonny.Fu@livestar.com\r\n/*                 \r\n/* ==================================================================== */\r\n\r\ncontract KittyInterface {\r\n  function tokensOfOwner(address _owner) external view returns(uint256[] ownerTokens);\r\n  function ownerOf(uint256 _tokenId) external view returns (address owner);\r\n  function balanceOf(address _owner) public view returns (uint256 count);\r\n}\r\n\r\ninterface KittyTokenInterface {\r\n  function transferFrom(address _from, address _to, uint256 _tokenId) external;\r\n  function setTokenPrice(uint256 _tokenId, uint256 _price) external;\r\n  function CreateKittyToken(address _owner,uint256 _price, uint32 _kittyId) public;\r\n}\r\n\r\ncontract CaptainKitties {\r\n  address owner;\r\n  //event \r\n  event CreateKitty(uint _count,address _owner);\r\n\r\n  KittyInterface kittyContract;\r\n  KittyTokenInterface kittyToken;\r\n  /// @dev Trust contract\r\n  mapping (address => bool) actionContracts;\r\n  mapping (address => uint256) kittyToCount;\r\n  mapping (address => bool) kittyGetOrNot;\r\n \r\n\r\n  function CaptainKitties() public {\r\n    owner = msg.sender;\r\n  }  \r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  \r\n  function setKittyContractAddress(address _address) external onlyOwner {\r\n    kittyContract = KittyInterface(_address);\r\n  }\r\n\r\n  function setKittyTokenAddress(address _address) external onlyOwner {\r\n    kittyToken = KittyTokenInterface(_address);\r\n  }\r\n\r\n  function createKitties() external payable {\r\n    uint256 kittycount = kittyContract.balanceOf(msg.sender);\r\n    require(kittyGetOrNot[msg.sender] == false);\r\n    if (kittycount>=9) {\r\n      kittycount=9;\r\n    }\r\n    if (kittycount>0 && kittyToCount[msg.sender]==0) {\r\n      kittyToCount[msg.sender] = kittycount;\r\n      kittyGetOrNot[msg.sender] = true;\r\n      for (uint i=0;i<kittycount;i++) {\r\n        kittyToken.CreateKittyToken(msg.sender,0, 1);\r\n      }\r\n      //event\r\n      CreateKitty(kittycount,msg.sender);\r\n    }\r\n  }\r\n\r\n  function getKitties() external view returns(uint256 kittycnt,uint256 captaincnt,bool bGetOrNot) {\r\n    kittycnt = kittyContract.balanceOf(msg.sender);\r\n    captaincnt = kittyToCount[msg.sender];\r\n    bGetOrNot = kittyGetOrNot[msg.sender];\r\n  }\r\n\r\n  function getKittyGetOrNot(address _addr) external view returns (bool) {\r\n    return kittyGetOrNot[_addr];\r\n  }\r\n\r\n  function getKittyCount(address _addr) external view returns (uint256) {\r\n    return kittyToCount[_addr];\r\n  }\r\n\r\n  function birthKitty() external {\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getKittyGetOrNot\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"birthKitty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getKittyCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setKittyContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createKitties\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setKittyTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getKitties\",\"outputs\":[{\"name\":\"kittycnt\",\"type\":\"uint256\"},{\"name\":\"captaincnt\",\"type\":\"uint256\"},{\"name\":\"bGetOrNot\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_count\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"CreateKitty\",\"type\":\"event\"}]","ContractName":"CaptainKitties","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1650b90a3422320ca0dfe47ba2e527ac0a478b6d1cf495711ecf12356e693e76"}]}