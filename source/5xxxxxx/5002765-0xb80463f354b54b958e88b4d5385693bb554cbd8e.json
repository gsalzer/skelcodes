{"status":"1","message":"OK","result":[{"SourceCode":"//params: 100,\"MJ comeback\", 1603152000, 0, \"21/10/2020\", \"MGM grand\", \"MJC\", 100000000, 10\r\n// \"0x000000000000000000000000000000000000000000000000016a6075a7170002\", 27, \"0xE26D930533CF5E36051C576E1988D096727F28A4AB638DBE7729BCC067BD06C8\", \"0x76EBAA64A541D1DE054F4B63B586E7FEB485C1B3E85EA463F873CA69307EEEAA\"\r\npragma solidity ^0.4.17;\r\n\r\ncontract ERC20\r\n{\r\n     function totalSupply() public constant returns (uint);\r\n     function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n     //function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n     function transfer(address to, uint tokens) public returns (bool success);\r\n     //function approve(address spender, uint tokens) public returns (bool success);\r\n     function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n     event Transfer(address indexed from, address indexed to, uint tokens);\r\n     event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n }\r\n\r\ncontract TicketPro is ERC20\r\n{\r\n    //erc20 wiki: https://theethereum.wiki/w/index.php/ERC20_Token_Standard\r\n    //maybe allow tickets to be purchased through contract??\r\n    uint totalTickets;\r\n    mapping(address => uint) balances;\r\n    uint expiryTimeStamp;\r\n    address admin;\r\n    uint transferFee;\r\n    uint numOfTransfers = 0;\r\n    string public name;\r\n    string public symbol;\r\n    string public date;\r\n    string public venue;\r\n    bytes32[] orderHashes;\r\n    uint startPrice;\r\n    uint limitOfStartTickets;\r\n    uint8 public constant decimals = 0; //no decimals as tickets cannot be split\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint _value);\r\n    event TransferFrom(address indexed _from, address indexed _to, uint _value);\r\n\r\n    modifier eventNotExpired()\r\n    {\r\n        //not perfect but probably good enough\r\n        if(block.timestamp > expiryTimeStamp)\r\n        {\r\n            revert();\r\n        }\r\n        else _;\r\n    }\r\n\r\n    modifier adminOnly()\r\n    {\r\n        if(msg.sender != admin) revert();\r\n        else _;\r\n    }\r\n\r\n    function() public { revert(); } //should not send any ether directly\r\n\r\n    function TicketPro(uint numberOfTickets, string evName, uint expiry,\r\n            uint fee, string evDate, string evVenue, string eventSymbol,\r\n             uint price, uint startTicketLimit) public\r\n    {\r\n        totalTickets = numberOfTickets;\r\n        //event organizer has all the tickets in the beginning\r\n        balances[msg.sender] = totalTickets;\r\n        expiryTimeStamp = expiry;\r\n        admin = msg.sender;\r\n        //100 fee = 1 ether\r\n        transferFee = (1 ether * fee) / 100;\r\n        symbol = eventSymbol;\r\n        name = evName;\r\n        date = evDate;\r\n        venue = evVenue;\r\n        startPrice = price;\r\n        limitOfStartTickets= startTicketLimit;\r\n    }\r\n\r\n    //note that tickets cannot be split, it has to be a whole number\r\n    function buyATicketFromContract(uint numberOfTickets) public payable returns (bool)\r\n    {\r\n        //no decimal points allowed in a token\r\n        if(msg.value != startPrice * numberOfTickets\r\n            || numberOfTickets % 1 != 0) revert();\r\n        admin.transfer(msg.value);\r\n        balances[msg.sender] += 1;\r\n        return true;\r\n    }\r\n\r\n    function getTicketStartPrice() public view returns(uint)\r\n    {\r\n        return startPrice;\r\n    }\r\n\r\n    function getDecimals() public pure returns(uint)\r\n    {\r\n        return decimals;\r\n    }\r\n\r\n    function getNumberOfAvailableStartTickets() public view returns (uint)\r\n    {\r\n        return limitOfStartTickets;\r\n    }\r\n\r\n    //buyer pays all the fees, seller doesn't even need to have ether to do trade\r\n    function deliveryVSpayment(bytes32 offer, uint8 v, bytes32 r,\r\n        bytes32 s) public payable returns(bool)\r\n    {\r\n\t    var (seller, quantity, price, agreementIsValid) = recover(offer, v, r, s);\r\n        //if the agreement hash matches then the trade can take place\r\n        uint cost = price * quantity;\r\n        if(agreementIsValid && msg.value == cost)\r\n        {\r\n            //send over ether and tokens\r\n            balances[msg.sender] += uint(quantity);\r\n            balances[seller] -= uint(quantity);\r\n            uint commission = (msg.value / 100) * transferFee;\r\n            uint sellerAmt = msg.value - commission;\r\n            seller.transfer(sellerAmt);\r\n            admin.transfer(commission);\r\n            numOfTransfers++;\r\n            return true;\r\n        }\r\n        else revert();\r\n    }\r\n\r\n    // to test: suppose the offer is to sell 2 tickets at 0.102ETH\r\n    // which is 0x16A6075A7170000 WEI\r\n    // the parameters are:\r\n    // \"0x000000000000000000000000000000000000000000000000016a6075a7170002\", 27, \"0x0071d8bc2f3c9b8102bc03660d525ab872070eb036cd75f0c503bdba8a9406d8\",\"0xb1649086e9df334e9831dc7d57cb61808f7c07d1422ef150a43f9df92c48665c\"\r\n    // I generated the test parameter with this:\r\n/*\r\n#!/usr/bin/python3\r\n\r\nimport ecdsa, binascii\r\n\r\nsecexp = 0xc64031ec35f5fc700264f6bb2d6342f63e020673f79ed70dbbd56fb8d46351ed\r\nsk = ecdsa.SigningKey.from_secret_exponent(secexp, curve=ecdsa.SECP256k1)\r\n# 1 tickets at the price of 2 wei\r\noffer = b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x6A\\x60\\x75\\xA7\\x17\\x00\\x02'\r\nr, s = sk.sign_digest(offer, sigencode=ecdsa.util.sigencode_strings)\r\n## 27 can be any of 27, 28, 29, 30. Use proper algorithm in production\r\nprint('\"0x{}\", {}, \"0x{}\",\"0x{}\"'.format(\r\n    binascii.hexlify(offer).decode(\"ascii\"), 27,\r\n    binascii.hexlify(r).decode(\"ascii\"), binascii.hexlify(s).decode(\"ascii\")))\r\n*/\r\n    function recover(bytes32 offer, uint8 v, bytes32 r, bytes32 s) public view\r\n        returns (address seller, uint16 quantity, uint256 price, bool agreementIsValid) {\r\n        quantity = uint16(offer & 0xffff);\r\n        price = uint256(offer >> 16 << 16);\r\n        seller = ecrecover(offer, v, r, s);\r\n        agreementIsValid = balances[seller] >= quantity;\r\n    }\r\n\r\n    function totalSupply() public constant returns(uint)\r\n    {\r\n        return totalTickets;\r\n    }\r\n\r\n    function eventName() public constant returns(string)\r\n    {\r\n        return name;\r\n    }\r\n\r\n    function eventVenue() public constant returns(string)\r\n    {\r\n        return venue;\r\n    }\r\n\r\n    function eventDate() public constant returns(string)\r\n    {\r\n        return date;\r\n    }\r\n\r\n    function getAmountTransferred() public view returns (uint)\r\n    {\r\n        return numOfTransfers;\r\n    }\r\n\r\n    function isContractExpired() public view returns (bool)\r\n    {\r\n        if(block.timestamp > expiryTimeStamp)\r\n        {\r\n            return true;\r\n        }\r\n        else return false;\r\n    }\r\n\r\n    function balanceOf(address _owner) public constant returns (uint)\r\n    {\r\n        return balances[_owner];\r\n    }\r\n\r\n    //transfers can be free but at the users own risk\r\n    function transfer(address _to, uint _value) public returns(bool)\r\n    {\r\n        if(balances[msg.sender] < _value) revert();\r\n        balances[_to] += _value;\r\n        balances[msg.sender] -= _value;\r\n        numOfTransfers++;\r\n        return true;\r\n    }\r\n\r\n    //good for revoking tickets, for refunds etc.\r\n    function transferFrom(address _from, address _to, uint _value)\r\n        adminOnly public returns (bool)\r\n    {\r\n        if(balances[_from] >= _value)\r\n        {\r\n            balances[_from] -= _value;\r\n            balances[_to] += _value;\r\n            TransferFrom(_from,_to, _value);\r\n            numOfTransfers++;\r\n            return true;\r\n        }\r\n        else return false;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getNumberOfAvailableStartTickets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offer\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"deliveryVSpayment\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"date\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eventDate\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAmountTransferred\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eventName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTicketStartPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"venue\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"numberOfTickets\",\"type\":\"uint256\"}],\"name\":\"buyATicketFromContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"offer\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"recover\",\"outputs\":[{\"name\":\"seller\",\"type\":\"address\"},{\"name\":\"quantity\",\"type\":\"uint16\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"agreementIsValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eventVenue\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isContractExpired\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"numberOfTickets\",\"type\":\"uint256\"},{\"name\":\"evName\",\"type\":\"string\"},{\"name\":\"expiry\",\"type\":\"uint256\"},{\"name\":\"fee\",\"type\":\"uint256\"},{\"name\":\"evDate\",\"type\":\"string\"},{\"name\":\"evVenue\",\"type\":\"string\"},{\"name\":\"eventSymbol\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"startTicketLimit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferFrom\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"TicketPro","CompilerVersion":"v0.4.20-nightly.2018.1.29+commit.a668b9de","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000640000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000005f8e28800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b4d4a20636f6d656261636b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a32312f31302f323032300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000094d474d206772616e64000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034d4a430000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://ffe6536ec2474f61a59762064d823ec758e6acfc563c85b9f0dc565422388600"}]}