{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\n\r\ncontract Notary {\r\n    \r\n    address public jan = 0x45f5c8b556c3f2887b50184c823d1223f41a4156;\r\n    address public investor = 0xCF4e87991826081d172B61b2e1B2800F18dA8cE7;\r\n\r\n    address NotaryPersistentStorageAddress = 0x8439dacB099826eba3c56A8B2d3A15F108a89552;\r\n\r\n    event LogResponse(bytes32, bool);\r\n\r\n    function Notary() payable {\r\n    }\r\n\r\n    function notarise(bytes32 _proof) public payable returns (bool success) {\r\n        \r\n        NotaryPersistentStorage notary = NotaryPersistentStorage(NotaryPersistentStorageAddress);\r\n        notary.storeProof(_proof);\r\n\r\n        _payRoyalty();\r\n        \r\n        return true;\r\n    }\r\n\r\n    function hasProof(bytes32 _proof) public returns (bool) {\r\n        NotaryPersistentStorage notary = NotaryPersistentStorage(NotaryPersistentStorageAddress);\r\n        bool result = notary.hasProof(_proof);\r\n        LogResponse(_proof,result);\r\n        return result;\r\n    }\r\n    \r\n    function _payRoyalty() public payable {\r\n        uint amount = msg.value;\r\n        jan.transfer(amount/2);\r\n        investor.transfer(amount/2);\r\n    }\r\n    \r\n    // fallback function\r\n    function () payable {\r\n    }\r\n    \r\n}\r\n\r\n\r\ncontract NotaryPersistentStorage {\r\n    function storeProof(bytes32 _proof) public returns (bool);\r\n    function hasProof(bytes32 _proof) public constant returns (bool);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"jan\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_payRoyalty\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proof\",\"type\":\"bytes32\"}],\"name\":\"hasProof\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proof\",\"type\":\"bytes32\"}],\"name\":\"notarise\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"\",\"type\":\"bool\"}],\"name\":\"LogResponse\",\"type\":\"event\"}]","ContractName":"Notary","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://99a1186bad478b1e792df95212360f0090bff67f3a1732ebb46782035f472313"}]}