{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4 .23;\r\n//Ethereal Tarot Reader http://tarot.etherealbazaar.com/\r\ncontract EtherealTarot {\r\n\r\n  mapping(address => uint8[]) readings;\r\n  mapping(address => uint8[]) orientations;\r\n  uint8[78] cards;\r\n  uint8 deckSize = 78;\r\n  address public creator;\r\n\r\n  constructor() public {\r\n    creator = msg.sender;\r\n    for (uint8 card = 0; card < deckSize; card++) {\r\n      cards[card] = card;\r\n    }\r\n  }\r\n    \r\n  function draw(uint8 index, uint8 count) public {\r\n    // put the drawn card at the end of the array\r\n    // so the next random draw cannot contain\r\n    // a card thats already been drawn\r\n    uint8 drawnCard = cards[index];\r\n    uint8 tableIndex = deckSize - count - 1;\r\n    cards[index] = cards[tableIndex];\r\n    cards[tableIndex] = drawnCard;\r\n  }\r\n\r\n  function draw_random_card(uint8 count) private returns(uint8) {\r\n    uint8 random_card = random(deckSize - count, count);\r\n    draw(random_card, count);\r\n    return random_card;\r\n  }\r\n\r\n  function random(uint8 range, uint8 count) view private returns(uint8) {\r\n    uint8 _seed = uint8(\r\n      keccak256(\r\n        abi.encodePacked(\r\n          keccak256(\r\n            abi.encodePacked(\r\n              blockhash(block.number),\r\n              _seed)\r\n          ), now + count)\r\n      )\r\n    );\r\n    return _seed % (range);\r\n  }\r\n\r\n  function spread(uint8 requested) private {\r\n    // cards in the current spread\r\n    uint8[] memory table = new uint8[](requested);\r\n    //card orientation 0 is front 1 is reversed\r\n    uint8[] memory oriented = new uint8[](requested);\r\n\r\n    //Draw the whole spread\r\n    for (uint8 position = 0; position < requested; position++) {\r\n      table[position] = draw_random_card(position);\r\n      oriented[position] = random(2, position);\r\n    }\r\n    orientations[msg.sender] = oriented;\r\n    readings[msg.sender] = table;\r\n  }\r\n\r\n\r\n  function orientation() view public returns(uint8[]) {\r\n    return orientations[msg.sender];\r\n  }\r\n\r\n  function reading() view public returns(uint8[]) {\r\n    return readings[msg.sender];\r\n  }\r\n\r\n  // Tarot by donation + gas costs\r\n  function withdraw() public {\r\n    require(msg.sender == creator);\r\n    creator.transfer(address(this).balance);\r\n  }\r\n    \r\n  function shiva() public{\r\n    require(msg.sender == creator);\r\n    selfdestruct(creator);\r\n  }\r\n\r\n  // 6 Different Spreads available\r\n  function career_path() payable public {\r\n    spread(7);\r\n  }\r\n\r\n  function celtic_cross() payable public {\r\n    spread(10);\r\n  }\r\n\r\n  function past_present_future() payable public {\r\n    spread(3);\r\n  }\r\n\r\n  function success() payable public {\r\n    spread(5);\r\n  }\r\n\r\n  function spiritual_guidance() payable public {\r\n    spread(8);\r\n  }\r\n\r\n  function one_card() payable public {\r\n    spread(1);\r\n  }\r\n  function two_card() payable public {\r\n    spread(2);\r\n  }\r\n\r\n  function seventeen() payable public {\r\n    spread(17);\r\n  }\r\n  \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"shiva\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"success\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"one_card\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"orientation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint8\"},{\"name\":\"count\",\"type\":\"uint8\"}],\"name\":\"draw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"career_path\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"seventeen\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"past_present_future\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"two_card\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"celtic_cross\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"spiritual_guidance\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reading\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"EtherealTarot","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://13c71c8a5a2db40618aac5aa2bcf2ef6febc7ed2eaf3d12487734d0d36a735d1"}]}