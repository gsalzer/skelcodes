{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n    /**\r\n    * @dev Multiplies two numbers, throws on overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two numbers, truncating the quotient.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        // uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two numbers, throws on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract ERC20Interface{\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n}\r\n\r\n/*\r\n * Ownable\r\n *\r\n * Base contract with an owner.\r\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n  \r\n  constructor() public { \r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    if (msg.sender != owner) {\r\n      revert();\r\n    }\r\n    _;\r\n  }\r\n  //transfer owner to another address\r\n  function transferOwnership(address _newOwner) onlyOwner public {\r\n    if (_newOwner != address(0)) {\r\n      owner = _newOwner;\r\n    }\r\n  }\r\n}\r\n\r\ncontract Anaco_Airdrop is Ownable {\r\n    \r\n    // allows the use of the SafeMath library inside that contract, only for uint256 variables\r\n    using SafeMath for uint256;\r\n    \r\n    // Token exchange rate (taking into account the 8 decimals from ANACO tokens)\r\n    uint256 public tokensPerEth = 100000000 * 1e8;\r\n    uint256 public closeTime = 1538351999; // September 30th, at 11PM 59:59 GMT is the end of the airdrop\r\n    \r\n    // ANAC Token interface\r\n    ERC20Interface public anacoContract = ERC20Interface(0x356A50ECE1eD2782fE7031D81FD168f08e242a4E);\r\n    address public fundsWallet;\r\n    \r\n    // modifiers\r\n    modifier airdropOpen() {\r\n       // if(now > closeTime) revert();\r\n        _;\r\n    }\r\n    \r\n    modifier airdropClosed() {\r\n       // if(now < closeTime) revert(); \r\n        _;\r\n    }\r\n    \r\n    constructor(address _fundsWallet) public {\r\n        fundsWallet = _fundsWallet;\r\n    }\r\n    \r\n    \r\n    function () public {\r\n        revert();           // do not accept fallback calls\r\n    }\r\n    \r\n    \r\n    function getTokens() payable public{\r\n        require(msg.value >= 2 finney);             // needs to contribute at least 0.002 Ether\r\n        \r\n        uint256 amount = msg.value.mul(tokensPerEth).div(1 ether);\r\n        \r\n        if(msg.value >= 500 finney) {               // +50% bonus if you contribute more than 0.5 Ether\r\n            amount = amount.add(amount.div(2));\r\n        }\r\n        \r\n        anacoContract.transferFrom(fundsWallet, msg.sender, amount); // reverts by itself if fundsWallet doesn't allow enough funds to the contract\r\n    }\r\n    \r\n    \r\n    function withdraw() public onlyOwner {\r\n        require(owner.send(address(this).balance));\r\n    }\r\n    \r\n    \r\n    function changeFundsWallet(address _newFundsWallet) public onlyOwner {\r\n        fundsWallet = _newFundsWallet;\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"fundsWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"anacoContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closeTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFundsWallet\",\"type\":\"address\"}],\"name\":\"changeFundsWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_fundsWallet\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"}]","ContractName":"Anaco_Airdrop","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000f89b4d11c7847ca4f9f8b9e4063bd64206ebf74a","Library":"","SwarmSource":"bzzr://93522b7c1ab54840614f0d4a91b8ba61b6d025a2ff1a3698e5287c28be2ff080"}]}