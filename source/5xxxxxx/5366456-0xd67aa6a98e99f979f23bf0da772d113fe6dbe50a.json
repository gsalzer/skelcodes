{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount)external;\r\n}\r\n\r\ncontract Crowdsale {\r\n    address public beneficiary;\r\n    uint public amountRaised;\r\n\tuint public allAmountRaised;\r\n    uint public deadline;\r\n    uint public price;\r\n\tuint public limitTransfer;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n    bool crowdsaleClosed = false;\r\n\tbool public crowdsalePaused = false;\r\n\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == beneficiary);\r\n        _;\r\n    }\r\n\t\r\n\t/**\r\n     * Constrctor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    function Crowdsale(\r\n        address ifSuccessfulSendTo,\r\n        uint durationInMinutes,\r\n        uint etherCostOfEachToken,\r\n\t\tuint limitAfterSendToBeneficiary,\r\n        address addressOfTokenUsedAsReward\r\n    )public {\r\n        beneficiary = ifSuccessfulSendTo;\r\n        deadline = now + durationInMinutes * 1 minutes;\r\n        price = etherCostOfEachToken;\r\n        tokenReward = token(addressOfTokenUsedAsReward);\r\n\t\tlimitTransfer = limitAfterSendToBeneficiary;\r\n    }\r\n\t\r\n\t/**\r\n     * changeDeadline function\r\n     *\r\n     * Setup the new deadline\r\n     */\r\n    function changeDeadline(uint durationInMinutes) public onlyOwner \r\n\t{\r\n\t\tcrowdsaleClosed = false;\r\n        deadline = now + durationInMinutes * 1 minutes;\r\n    }\r\n\t\r\n\t/**\r\n     * changePrice function\r\n     *\r\n     * Setup the new price\r\n     */\r\n    function changePrice(uint _price) public onlyOwner \r\n\t{\r\n        price = _price;\r\n    }\r\n\t\r\n\t/**\r\n     * Pause Crowdsale\r\n     *\r\n     */\r\n    function pauseCrowdsale()public onlyOwner \r\n\t{\r\n        crowdsaleClosed = true;\r\n\t\tcrowdsalePaused = true;\r\n    }\r\n\t\r\n\t/**\r\n     * Run Crowdsale\r\n     *\r\n     */\r\n    function runCrowdsale()public onlyOwner \r\n\t{\r\n\t\trequire(now <= deadline);\r\n        crowdsaleClosed = false;\r\n\t\tcrowdsalePaused = false;\r\n    }\r\n\r\n    /**\r\n     * Send To Beneficiary\r\n     *\r\n     * Transfer to Beneficiary\r\n     */\r\n    function sendToBeneficiary()public onlyOwner \r\n\t{\r\n        if (beneficiary.send(amountRaised)) \r\n\t\t{\r\n\t\t\tamountRaised = 0;\r\n\t\t\temit FundTransfer(beneficiary, amountRaised, false);\r\n\t\t}\r\n    }\r\n\t\r\n\t/**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function () public payable \r\n\t{\r\n        require(!crowdsaleClosed);\r\n\t\trequire(now <= deadline);\r\n        uint amount = msg.value;\r\n        balanceOf[msg.sender] += amount;\r\n        amountRaised    += amount;\r\n\t\tallAmountRaised += amount;\r\n        tokenReward.transfer(msg.sender, amount / price);\r\n        emit FundTransfer(msg.sender, amount, true);\r\n\t\t\r\n\t\tif (amountRaised >= limitTransfer)\r\n\t\t{\r\n\t\t\tif (beneficiary.send(amountRaised)) \r\n\t\t\t{\r\n                amountRaised = 0;\r\n\t\t\t\temit FundTransfer(beneficiary, amountRaised, false);\r\n            }\r\n\t\t}\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"limitTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsalePaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sendToBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"durationInMinutes\",\"type\":\"uint256\"}],\"name\":\"changeDeadline\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pauseCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allAmountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"runCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ifSuccessfulSendTo\",\"type\":\"address\"},{\"name\":\"durationInMinutes\",\"type\":\"uint256\"},{\"name\":\"etherCostOfEachToken\",\"type\":\"uint256\"},{\"name\":\"limitAfterSendToBeneficiary\",\"type\":\"uint256\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000002a96ab15072d67fdfa1f2fad2a4b1c3ac09e684d00000000000000000000000000000000000000000000000000000000000151800000000000000000000000000000000000000000000000000002ea915cb5d8000000000000000000000000000000000000000000000000000002ea915cb5d800000000000000000000000000f4154f0bff91da80c8dae2d6e17e17dff3f0bfda","Library":"","SwarmSource":"bzzr://d9d70044cc28a4a29709019d14688e59f772ef983b10c3f299bcafee94aaeb9c"}]}