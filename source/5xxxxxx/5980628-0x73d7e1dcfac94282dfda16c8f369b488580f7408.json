{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\nlibrary SafeMath {\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n  \r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b > 0);\r\n    uint256 c = a / b;\r\n    assert(a == b * c + a % b); \r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n  event SetOwner(address indexed oldOwner, address indexed newOwner);\r\n  \r\n  constructor() internal {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function setOwner(address _newOwner) external onlyOwner {\r\n    emit SetOwner(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\ncontract Saleable is Ownable {\r\n\r\n  address public saler;\r\n  event SetSaler(address indexed oldSaler, address indexed newSaler);\r\n\r\n  modifier onlySaler() {\r\n    require(msg.sender == saler);\r\n    _;\r\n  }\r\n\r\n  function setSaler(address _newSaler) external onlyOwner {\r\n    emit SetSaler(saler, _newSaler);\r\n    saler = _newSaler;\r\n  }\r\n}\r\n\r\ncontract Pausable is Ownable {\r\n\r\n  bool public paused = false;\r\n\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  modifier notPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  modifier isPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  function pause() onlyOwner notPaused public {\r\n    paused = true;\r\n    emit Pause();\r\n  }\r\n\r\n  function unpause() onlyOwner isPaused public {\r\n    paused = false;\r\n    emit Unpause();\r\n  }\r\n}\r\n\r\ncontract ERC20Interface {\r\n    \r\n  function totalSupply() public view returns (uint256);\r\n  function decimals() public view returns (uint8);\r\n  function balanceOf(address _owner) public view returns (uint256);\r\n  function transfer(address _to, uint256 _value) public returns (bool);\r\n \r\n  function allowance(address _owner, address _spender) public view returns (uint256);\r\n  function approve(address _spender, uint256 _value) public returns (bool);\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract StandToken is ERC20Interface {\r\n\r\n  using SafeMath for uint256;\r\n\r\n  string public name;\r\n  string public symbol;\r\n  uint8 public decimals;\r\n  uint256 public totalSupply;\r\n\r\n  mapping(address => uint256) balances;\r\n  mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n  function totalSupply() public view returns (uint256) {\r\n    return totalSupply;\r\n  }\r\n  \r\n  function decimals() public view returns (uint8) {\r\n    return decimals;\r\n  }\r\n  \r\n  function balanceOf(address _owner) public view returns (uint256) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[msg.sender]);\r\n\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    emit Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) public view returns (uint256) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value) public returns (bool) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    emit Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[_from]);\r\n    require(_value <= allowed[_from][msg.sender]);\r\n\r\n    balances[_from] = balances[_from].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n    emit Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n}\r\n\r\ncontract BurnableToken is StandToken {\r\n\r\n  event Burn(address indexed burner, uint256 value);\r\n\r\n  function burn(uint256 _value) public {\r\n    require(_value <= balances[msg.sender]);\r\n\r\n    address burner = msg.sender;\r\n    balances[burner] = balances[burner].sub(_value);\r\n    totalSupply = totalSupply.sub(_value);\r\n    emit Burn(burner, _value);\r\n  }\r\n}\r\n\r\ncontract IDCToken is BurnableToken, Pausable, Saleable {\r\n\r\n  address public addrTeam;\r\n  address public addrSale;\r\n  address public addrMine;\r\n\r\n  mapping(address => uint256) public tokenAngel;\r\n  mapping(address => uint256) public tokenPrivate;\r\n  mapping(address => uint256) public tokenCrowd;\r\n\r\n  uint256 public release = 0;\r\n  uint256 private teamLocked = 0;\r\n  \r\n  uint256 constant private DAY_10 = 10 days;\r\n  uint256 constant private DAY_90 = 90 days;\r\n  uint256 constant private DAY_120 = 120 days;\r\n  uint256 constant private DAY_150 = 150 days;\r\n  uint256 constant private DAY_180 = 180 days;\r\n  uint256 constant private DAY_360 = 360 days;\r\n  uint256 constant private DAY_720 = 720 days;\r\n  \r\n  event TransferToken(uint8 stage, address indexed to, uint256 value);\r\n  event TokenRelease(address caller, uint256 time);\r\n\r\n  constructor(address _team, address _sale, address _mine) public {\r\n    name = \"IDC Token\";\r\n    symbol = \"IT\";\r\n    decimals = 18;\r\n    totalSupply = 3*10**9*10**uint256(decimals); //3 billion        \r\n    \r\n    addrTeam = _team;\r\n    addrSale = _sale;\r\n    addrMine = _mine;\r\n    \r\n    balances[_team] = totalSupply.mul(2).div(5); //40% for team\r\n    balances[_sale] = totalSupply.mul(1).div(5); //20% for sale\r\n    balances[_mine] = totalSupply.mul(2).div(5); //40% for mining\r\n    teamLocked = balances[_team];    \r\n    \r\n    emit Transfer(0,_team,balances[_team]);\r\n    emit Transfer(0,_sale,balances[_sale]);\r\n    emit Transfer(0,_mine,balances[_mine]);\r\n  }\r\n\r\n  function transfer(address _to, uint256 _value) notPaused public returns (bool) {\r\n    if(msg.sender == addrTeam || tokenAngel[msg.sender] > 0 || tokenPrivate[msg.sender] > 0) {\r\n      require(balanceOfUnlocked(msg.sender) >= _value);\r\n    }\r\n    StandToken.transfer(_to, _value);\r\n    return true;\r\n  }\r\n  \r\n  function transferFrom(address _from, address _to, uint256 _value) notPaused public returns (bool) {\r\n    if(_from == addrTeam || tokenAngel[_from] > 0 || tokenPrivate[_from] > 0) {\r\n      require(balanceOfUnlocked(_from) >= _value);\r\n    }\r\n    StandToken.transferFrom(_from, _to, _value);\r\n    return true;\r\n  }  \r\n  \r\n  function balanceOfUnlocked(address _sender) public view returns (uint256) {\r\n    require(release > 0 && now > release);\r\n    uint256 tmPast = now.sub(release);\r\n    uint256 balance = balanceOf(_sender);\r\n    \r\n    if(_sender == addrTeam) {\r\n      if(tmPast < DAY_180) {\r\n        balance = balance.sub(teamLocked);\r\n      }\r\n      else if(tmPast >= DAY_180 && tmPast < DAY_360) {\r\n        balance = balance.sub(teamLocked.mul(7).div(10));\r\n      }\r\n      else if(tmPast >= DAY_360 && tmPast < DAY_720) {\r\n        balance = balance.sub(teamLocked.mul(4).div(10));\r\n      }\r\n    }\r\n    if(tokenAngel[_sender] > 0) {\r\n      if(tmPast < DAY_120) {\r\n        balance = balance.sub(tokenAngel[_sender]);\r\n      }\r\n      else if(tmPast >= DAY_120 && tmPast < DAY_150) {\r\n        balance = balance.sub(tokenAngel[_sender].mul(7).div(10));\r\n      }\r\n      else if(tmPast >= DAY_150 && tmPast < DAY_180) {\r\n        balance = balance.sub(tokenAngel[_sender].mul(4).div(10));\r\n      }\r\n    }\r\n    if(tokenPrivate[_sender] > 0) {\r\n      if(tmPast < DAY_90) {\r\n        balance = balance.sub(tokenPrivate[_sender].div(2));\r\n      }\r\n    }\r\n    return balance;\r\n  }\r\n  \r\n  function transferToken(uint8 _stage, address _to, uint256 _tokens) onlySaler external payable {\r\n    require(_stage >= 0 && _stage <= 2);\r\n    if(_stage == 0) { \r\n      tokenAngel[_to] = tokenAngel[_to].add(_tokens);\r\n    }\r\n    else if(_stage == 1) {\r\n      tokenPrivate[_to] = tokenPrivate[_to].add(_tokens);\r\n    }\r\n    else if(_stage == 2) { \r\n      tokenCrowd[_to] = tokenCrowd[_to].add(_tokens);\r\n    }\r\n    balances[addrSale] = balances[addrSale].sub(_tokens);\r\n    balances[_to] = balances[_to].add(_tokens);\r\n    emit Transfer(addrSale, _to, _tokens);\r\n    emit TransferToken(_stage, _to, _tokens);\r\n  }\r\n\r\n  function burnToken(uint256 _tokens) onlySaler external returns (bool) {\r\n    require(_tokens > 0);\r\n    balances[addrSale] = balances[addrSale].sub(_tokens);\r\n    totalSupply = totalSupply.sub(_tokens);\r\n    emit Burn(addrSale, _tokens);\r\n  }\r\n  \r\n  function tokenRelease() onlySaler external returns (bool) {\r\n    require(release == 0);\r\n    release = now + DAY_10;\r\n    emit TokenRelease(msg.sender, release);\r\n    return true;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addrTeam\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saler\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSaler\",\"type\":\"address\"}],\"name\":\"setSaler\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addrSale\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stage\",\"type\":\"uint8\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"release\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenAngel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenPrivate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"tokenRelease\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"balanceOfUnlocked\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addrMine\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenCrowd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_team\",\"type\":\"address\"},{\"name\":\"_sale\",\"type\":\"address\"},{\"name\":\"_mine\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"stage\",\"type\":\"uint8\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"TokenRelease\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldSaler\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newSaler\",\"type\":\"address\"}],\"name\":\"SetSaler\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"SetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"IDCToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000094259aa3e1acd73921b17f581cdf8d5b427dcc0d000000000000000000000000e32b4aad8c2e1c2bee04cd12dd6aee86424876cd0000000000000000000000001a41ecde3c7f2c9b098a222377c3b8f14dc6b6f6","Library":"","SwarmSource":"bzzr://a7325d31592e773cb8f0c3874ca6e4002cb888809fbd690ed101e2e8aac47f31"}]}