{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\n/*\r\n\r\n * source       https://github.com/blockbitsio/\r\n\r\n * @name        General Funding Input Contract\r\n * @package     BlockBitsIO\r\n * @author      Micky Socaci <micky@nowlive.ro>\r\n\r\n*/\r\n\r\n\r\n\r\ncontract FundingInputGeneral {\r\n\r\n    bool public initialized = false;\r\n    uint8 public typeId = 0;\r\n    address public FundingAssetAddress;\r\n    address public deployer;\r\n\r\n    event EventInputPaymentReceived(address sender, uint amount, uint8 _type);\r\n\r\n    function FundingInputGeneral() public {\r\n        deployer = msg.sender;\r\n    }\r\n\r\n    function setFundingAssetAddress(address _addr) public {\r\n        require(initialized == false && msg.sender == deployer);\r\n        FundingAssetAddress = _addr;\r\n        initialized = true;\r\n    }\r\n\r\n    function () public payable {\r\n        buy();\r\n    }\r\n\r\n    function buy() public payable returns(bool) {\r\n        if(msg.value > 0) {\r\n            if(isContract(FundingAssetAddress)) {\r\n                if(FundingAssetAddress.call.value(msg.value)(bytes4(bytes32(keccak256(\"receivePayment(address,uint8)\"))), msg.sender, typeId)) {\r\n                    EventInputPaymentReceived(msg.sender, msg.value, typeId);\r\n                    return true;\r\n                } else {\r\n                    revert();\r\n                }\r\n            }\r\n            else {\r\n                revert();\r\n            }\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n\r\n    // this call adds 704 gas, good enough to keep\r\n    function isContract(address addr) internal view returns (bool) {\r\n        uint size;\r\n        assembly { size := extcodesize(addr) }\r\n        return size > 0;\r\n    }\r\n}\r\n\r\n/*\r\n\r\n * source       https://github.com/blockbitsio/\r\n\r\n * @name        Direct Funding Input Contract\r\n * @package     BlockBitsIO\r\n * @author      Micky Socaci <micky@nowlive.ro>\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\ncontract FundingInputDirect is FundingInputGeneral {\r\n    function FundingInputDirect() FundingInputGeneral() public {\r\n        typeId = 1;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setFundingAssetAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FundingAssetAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"typeId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"EventInputPaymentReceived\",\"type\":\"event\"}]","ContractName":"FundingInputDirect","CompilerVersion":"v0.4.17+commit.bdeb9e52","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ea49cbbd3149c3c775675f9a32638445adf0041be061927c491ba981a9adefce"}]}