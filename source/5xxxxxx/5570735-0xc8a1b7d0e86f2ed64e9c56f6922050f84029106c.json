{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n \r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n \r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n \r\n}\r\n\r\n \r\ninterface IERC20 {\r\n  function totalSupply() public constant returns (uint256 );\r\n  function balanceOf(address _owner) public constant returns (uint256 );\r\n  function transfer(address _to, uint256 _value) public returns (bool );\r\n  function decimals() public constant returns (uint8 decimals);\r\n  //function transferFrom(address _from, address _to, uint256 _value) public returns (bool );\r\n  //function approve(address _spender, uint256 _value) public returns (bool );\r\n  //function allowance(address _owner, address _spender) public constant returns (uint256 );\r\n  //event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  //event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n \r\ncontract Airdropper is Ownable {\r\n    \r\n    function batchTransfer(address[] _recipients, uint[] _values, address _tokenAddress) onlyOwner public returns (bool) {\r\n        require( _recipients.length > 0 && _recipients.length == _values.length);\r\n \r\n        IERC20 token = IERC20(_tokenAddress);\r\n        // uint8 decimals = token.decimals();\r\n\r\n        // uint total = 0;\r\n        // for(uint i = 0; i < _values.length; i++){\r\n        //     total += _values[i];\r\n        // }\r\n        // require(total <= token.balanceOf(this));\r\n        \r\n        for(uint j = 0; j < _recipients.length; j++){\r\n            token.transfer(_recipients[j], _values[j]  );\r\n        }\r\n \r\n        return true;\r\n    }\r\n \r\n     function withdrawalToken(address _tokenAddress) onlyOwner public { \r\n        IERC20 token = IERC20(_tokenAddress);\r\n        require(token.transfer(owner, token.balanceOf(this)));\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"withdrawalToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipients\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Airdropper","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://220bf627f76b4d1513cbfed9f278ef22a6c00090c5a2861c4255bf3f4af1752a"}]}