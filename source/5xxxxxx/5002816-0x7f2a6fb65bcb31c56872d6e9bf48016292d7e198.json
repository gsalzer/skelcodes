{"status":"1","message":"OK","result":[{"SourceCode":"//params (fee set to 0 so it's free):\r\n//  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], \"MJ comeback\", 1603152000, \"21/10/2020\", \"MGM grand\", \"MJC\", 1000\r\n// \"0x000000000000000000000000000000000000000000000000016a6075a7170002\", 27, \"0xE26D930533CF5E36051C576E1988D096727F28A4AB638DBE7729BCC067BD06C8\", \"0x76EBAA64A541D1DE054F4B63B586E7FEB485C1B3E85EA463F873CA69307EEEAA\"\r\n\r\npragma solidity ^0.4.17;\r\ncontract TicketPro\r\n{\r\n    uint totalTickets;\r\n    mapping(address => uint16[]) inventory;\r\n    mapping(address => uint) spent;\r\n    uint16 ticketIndex = 0; //to track mapping in tickets\r\n    uint expiryTimeStamp;\r\n    address organiser;\r\n    uint transferFee;\r\n    uint numOfTransfers = 0;\r\n    string public name;\r\n    string public symbol;\r\n    string public date;\r\n    string public venue;\r\n    uint startPrice;\r\n    uint ticketLimit;\r\n    uint8 public constant decimals = 0; //no decimals as tickets cannot be split\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint _value);\r\n    event TransferFrom(address indexed _from, address indexed _to, uint _value);\r\n\r\n    modifier eventNotExpired()\r\n    {\r\n        //not perfect but probably good enough\r\n        if(block.timestamp > expiryTimeStamp)\r\n        {\r\n            revert();\r\n        }\r\n        else _;\r\n    }\r\n\r\n    modifier organiserOnly()\r\n    {\r\n        if(msg.sender != organiser) revert();\r\n        else _;\r\n    }\r\n\r\n    function() public { revert(); } //should not send any ether directly\r\n\r\n    function TicketPro(\r\n        uint16[] numberOfTickets,\r\n        string evName,\r\n        uint expiry,\r\n        string evDate,\r\n        string evVenue,\r\n        string eventSymbol,\r\n        uint startTicketLimit) public\r\n    {\r\n        totalTickets = numberOfTickets.length;\r\n        //assign some tickets to event organiser\r\n        inventory[msg.sender] = numberOfTickets;\r\n        expiryTimeStamp = expiry;\r\n        organiser = msg.sender;\r\n        symbol = eventSymbol;\r\n        name = evName;\r\n        date = evDate;\r\n        venue = evVenue;\r\n        ticketLimit = startTicketLimit;\r\n    }\r\n\r\n    function getDecimals() public pure returns(uint)\r\n    {\r\n        return decimals;\r\n    }\r\n\r\n    function getNumberOfAvailableStartTickets() public view returns (uint)\r\n    {\r\n        return ticketLimit;\r\n    }\r\n\r\n    function uintArrayToString (uint[] data) public pure returns (string)\r\n    {\r\n        bytes memory bytesString = new bytes(data.length * 32);\r\n        uint urlLength;\r\n        for (uint i=0; i<data.length; i++) {\r\n            for (uint j=0; j<32; j++) {\r\n                byte char = byte((data[i] * 2 ** (8 * j)));\r\n                if (char != 0) {\r\n                    bytesString[urlLength] = char;\r\n                    urlLength += 1;\r\n                }\r\n            }\r\n        }\r\n        bytes memory bytesStringTrimmed = new bytes(urlLength);\r\n        for (i=0; i<urlLength; i++) {\r\n            bytesStringTrimmed[i] = bytesString[i];\r\n        }\r\n        return string(bytesStringTrimmed);\r\n    }\r\n\r\n    function trade(uint[] ticketIndices,\r\n                   uint priceOfAllTickets,\r\n                   uint8 v,\r\n                   bytes32 r,\r\n                   bytes32 s,\r\n                   bytes memory prefix) public payable\r\n    {\r\n        string memory message = uintArrayToString(ticketIndices);\r\n        bytes32 digest = keccak256(prefix, message);\r\n        address seller = ecrecover(digest, v, r, s);\r\n        require(msg.value == priceOfAllTickets);\r\n        for(uint i = 0; i < ticketIndices.length; i++)\r\n            require(inventory[seller][i] != 0); //should revert if arrayOutOfBounds\r\n        for(uint j = 0; j < ticketIndices.length; j++)\r\n        {\r\n            inventory[msg.sender].push(inventory[seller][j]);\r\n            inventory[seller][j] = 0;\r\n            spent[seller] += 1;\r\n        }\r\n    }\r\n\r\n    function totalSupply() public constant returns(uint)\r\n    {\r\n        return totalTickets;\r\n    }\r\n\r\n    function name() public view returns(string)\r\n    {\r\n        return name;\r\n    }\r\n\r\n    function symbol() public view returns(string)\r\n    {\r\n        return symbol;\r\n    }\r\n\r\n    function eventVenue() public constant returns(string)\r\n    {\r\n        return venue;\r\n    }\r\n\r\n    function eventDate() public constant returns(string)\r\n    {\r\n        return date;\r\n    }\r\n\r\n    function getAmountTransferred() public view returns (uint)\r\n    {\r\n        return numOfTransfers;\r\n    }\r\n\r\n    function isContractExpired() public view returns (bool)\r\n    {\r\n        if(block.timestamp > expiryTimeStamp)\r\n        {\r\n            return true;\r\n        }\r\n        else return false;\r\n    }\r\n\r\n    function balanceOf(address _owner) public view returns (uint16[])\r\n    {\r\n        return inventory[_owner];\r\n    }\r\n\r\n    function transfer(address _to, uint16[] ticketIndices) public\r\n    {\r\n        //one array element equals one ticket\r\n        require(inventory[msg.sender].length -\r\n            spent[msg.sender] < ticketIndices.length);\r\n        for(uint i = 0; i < ticketIndices.length; i++)\r\n        {\r\n            require(inventory[msg.sender][i] != 0);\r\n            //pushes each element with ordering\r\n            inventory[_to].push(inventory[msg.sender][ticketIndices[i]]);\r\n            inventory[msg.sender][ticketIndices[i]] = 0;\r\n            numOfTransfers++;\r\n        }\r\n        spent[msg.sender] += ticketIndices.length;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint16[] ticketIndices)\r\n        organiserOnly public\r\n    {\r\n        bool isOrganiser = msg.sender == organiser;\r\n        //one array element equals one ticket\r\n        require(inventory[_from].length -\r\n            spent[_from] < ticketIndices.length || isOrganiser);\r\n        for(uint i = 0; i < ticketIndices.length; i++)\r\n        {\r\n            require(inventory[msg.sender][i] != 0 || isOrganiser);\r\n            //pushes each element with ordering\r\n            inventory[_to].push(inventory[msg.sender][ticketIndices[i]]);\r\n            inventory[msg.sender][ticketIndices[i]] = 0;\r\n            numOfTransfers++;\r\n        }\r\n        spent[_from] += ticketIndices.length;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getNumberOfAvailableStartTickets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"date\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"data\",\"type\":\"uint256[]\"}],\"name\":\"uintArrayToString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eventDate\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAmountTransferred\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"venue\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"ticketIndices\",\"type\":\"uint16[]\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ticketIndices\",\"type\":\"uint256[]\"},{\"name\":\"priceOfAllTickets\",\"type\":\"uint256\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"prefix\",\"type\":\"bytes\"}],\"name\":\"trade\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"ticketIndices\",\"type\":\"uint16[]\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eventVenue\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isContractExpired\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"numberOfTickets\",\"type\":\"uint16[]\"},{\"name\":\"evName\",\"type\":\"string\"},{\"name\":\"expiry\",\"type\":\"uint256\"},{\"name\":\"evDate\",\"type\":\"string\"},{\"name\":\"evVenue\",\"type\":\"string\"},{\"name\":\"eventSymbol\",\"type\":\"string\"},{\"name\":\"startTicketLimit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferFrom\",\"type\":\"event\"}]","ContractName":"TicketPro","CompilerVersion":"v0.4.20-nightly.2018.1.29+commit.a668b9de","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000005f8e28800000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000036000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003e8000000000000000000000000000000000000000000000000000000000000000f000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000009000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000d000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000f000000000000000000000000000000000000000000000000000000000000000b4d4a20636f6d656261636b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a32312f31302f323032300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000094d474d206772616e64000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034d4a430000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://5f8ac52d33f9d2b6b0daa966cdc080eea30de9daaa965c6c0924ce54b38357f2"}]}