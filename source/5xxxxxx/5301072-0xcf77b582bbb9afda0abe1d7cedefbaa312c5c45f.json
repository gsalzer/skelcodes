{"status":"1","message":"OK","result":[{"SourceCode":"/// Smart Signature Beta v0.1\r\n\r\npragma solidity ^0.4.20;\r\n\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/// @title Interface for contracts conforming to ERC-721: Non-Fungible Tokens\r\n/// @author Dieter Shirley <dete@axiomzen.co> (https://github.com/dete)\r\ncontract ERC721 {\r\n    // Required methods\r\n    function totalSupply() public view returns (uint256 total);\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function ownerOf(uint256 _tokenId) public view returns (address owner);\r\n    function approve(address _to, uint256 _tokenId) public;\r\n    function transfer(address _to, uint256 _tokenId) public;\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) public;\r\n\r\n    // Events\r\n    event Transfer(address from, address to, uint256 tokenId);\r\n    event Approval(address owner, address approved, uint256 tokenId);\r\n\r\n    // Optional\r\n    function name() public view returns (string name);\r\n    function symbol() public view returns (string symbol);\r\n    // function tokensOfOwner(address _owner) external view returns (uint256[] tokenIds);\r\n    // function tokenMetadata(uint256 _tokenId, string _preferredTransport) public view returns (string infoUrl);\r\n\r\n    // ERC-165 Compatibility (https://github.com/ethereum/EIPs/issues/165)\r\n    // function supportsInterface(bytes4 _interfaceID) external view returns (bool);\r\n}\r\n\r\ncontract SmartSignature is ERC721{\r\n  using SafeMath for uint256;\r\n\r\n  event Bought (uint256 indexed _tokenId, address indexed _owner, uint256 _price);\r\n  event Sold (uint256 indexed _tokenId, address indexed _owner, uint256 _price);\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);\r\n  event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);\r\n\r\n  address private owner;\r\n  \r\n  uint256 counter;\r\n  mapping (uint256 => address) private ownerOftoken;\r\n  mapping (uint256 => uint256) private priceOftoken;\r\n  mapping (uint256 => address) private approvedOftoken;\r\n  mapping (uint256 => address) private creatorOftoken;\r\n  mapping (uint256 => uint256) private parentOftoken;\r\n  mapping (uint256 => uint256) private balanceOfToken;  \r\n  mapping (uint256 => uint256) private freeOftoken;  \r\n\r\n  function SmartSignature () public {\r\n    owner = msg.sender;\r\n    creatorOftoken[counter] = ownerOftoken[counter] = msg.sender;\r\n    priceOftoken[counter] = 1 ether;\r\n    parentOftoken[counter] = 0;\r\n    freeOftoken[counter] = now + 120;    \r\n    counter += 1;    \r\n  }\r\n\r\n  /* Modifiers */\r\n  modifier onlyOwner(uint256 _tokenId) {\r\n    require(ownerOftoken[_tokenId] == msg.sender);\r\n    _;\r\n  }\r\n  \r\n  modifier onlyCreator(uint256 _tokenId) {\r\n    require(creatorOftoken[_tokenId] == msg.sender);\r\n    _;\r\n  }  \r\n\r\n  /* Owner */\r\n  function setCreator (address _creator, uint _tokenId) onlyCreator(_tokenId) public {\r\n    creatorOftoken[_tokenId] = _creator;\r\n  }\r\n\r\n  /* Withdraw */\r\n\r\n  function withdrawAllFromToken (uint256 _tokenId) onlyCreator(_tokenId) public {\r\n    uint256 t = balanceOfToken[_tokenId];\r\n    uint256 r = t / 20;\r\n    balanceOfToken[_tokenId] = 0;\r\n    balanceOfToken[parentOftoken[_tokenId]] += r;\r\n    msg.sender.transfer(t - r);      \r\n  }\r\n\r\n  function withdrawAmountFromToken (uint256 _tokenId, uint256 t) onlyCreator(_tokenId) public {\r\n    if (t > balanceOfToken[_tokenId]) t = balanceOfToken[_tokenId];\r\n    uint256 r = t / 20;\r\n    balanceOfToken[_tokenId] = 0;\r\n    balanceOfToken[parentOftoken[_tokenId]] += r;\r\n    msg.sender.transfer(t - r); \r\n  }\r\n  \r\n  function withdrawAll() public {\r\n      require(msg.sender == owner);\r\n      owner.transfer(this.balance);\r\n  }\r\n\r\n  /* Buying */\r\n  function calculateNextPrice (uint256 _price) public view returns (uint256 _nextPrice) {\r\n    return _price.mul(117).div(98);\r\n  }\r\n\r\n  function calculateDevCut (uint256 _price) public view returns (uint256 _devCut) {\r\n    return _price.div(20); // 5%\r\n  }\r\n\r\n  function buy (uint256 _tokenId) payable public {\r\n    require(priceOf(_tokenId) > 0);\r\n    require(ownerOf(_tokenId) != address(0));\r\n    require(msg.value >= priceOf(_tokenId));\r\n    require(ownerOf(_tokenId) != msg.sender);\r\n    require(!isContract(msg.sender));\r\n    require(msg.sender != address(0));\r\n\r\n    address oldOwner = ownerOf(_tokenId);\r\n    address newOwner = msg.sender;\r\n    uint256 price = priceOf(_tokenId);\r\n    uint256 excess = msg.value.sub(price);\r\n\r\n    _transfer(oldOwner, newOwner, _tokenId);\r\n    priceOftoken[_tokenId] = nextPriceOf(_tokenId);\r\n\r\n    Bought(_tokenId, newOwner, price);\r\n    Sold(_tokenId, oldOwner, price);\r\n\r\n    // Devevloper's cut which is left in contract and accesed by\r\n    // `withdrawAll` and `withdrawAmountTo` methods.\r\n    uint256 devCut = calculateDevCut(price);\r\n\r\n    // Transfer payment to old owner minus the developer's cut.\r\n    oldOwner.transfer(price.sub(devCut));\r\n    uint256 shareHolderCut = devCut.div(20);\r\n    ownerOftoken[parentOftoken[_tokenId]].transfer(shareHolderCut);\r\n    balanceOfToken[_tokenId] += devCut.sub(shareHolderCut);\r\n\r\n    if (excess > 0) {\r\n      newOwner.transfer(excess);\r\n    }\r\n  }\r\n\r\n  /* ERC721 */\r\n\r\n  function name() public view returns (string name) {\r\n    return \"smartsignature.io\";\r\n  }\r\n\r\n  function symbol() public view returns (string symbol) {\r\n    return \"SSI\";\r\n  }\r\n\r\n  function totalSupply() public view returns (uint256 _totalSupply) {\r\n    return counter;\r\n  }\r\n\r\n  function balanceOf (address _owner) public view returns (uint256 _balance) {\r\n    uint256 counter = 0;\r\n\r\n    for (uint256 i = 0; i < counter; i++) {\r\n      if (ownerOf(i) == _owner) {\r\n        counter++;\r\n      }\r\n    }\r\n\r\n    return counter;\r\n  }\r\n\r\n  function ownerOf (uint256 _tokenId) public view returns (address _owner) {\r\n    return ownerOftoken[_tokenId];\r\n  }\r\n  \r\n  function creatorOf (uint256 _tokenId) public view returns (address _creator) {\r\n    return creatorOftoken[_tokenId];\r\n  }  \r\n  \r\n  function parentOf (uint256 _tokenId) public view returns (uint256 _parent) {\r\n    return parentOftoken[_tokenId];\r\n  }    \r\n  \r\n  function freeOf (uint256 _tokenId) public view returns (uint256 _free) {\r\n    return freeOftoken[_tokenId];\r\n  }    \r\n  \r\n  function balanceFromToken (uint256 _tokenId) public view returns (uint256 _balance) {\r\n    return balanceOfToken[_tokenId];\r\n  }      \r\n  \r\n  function tokensOf (address _owner) public view returns (uint256[] _tokenIds) {\r\n    uint256[] memory tokens = new uint256[](balanceOf(_owner));\r\n\r\n    uint256 tokenCounter = 0;\r\n    for (uint256 i = 0; i < counter; i++) {\r\n      if (ownerOf(i) == _owner) {\r\n        tokens[tokenCounter] = i;\r\n        tokenCounter += 1;\r\n      }\r\n    }\r\n\r\n    return tokens;\r\n  }\r\n\r\n  function tokenExists (uint256 _tokenId) public view returns (bool _exists) {\r\n    return priceOf(_tokenId) > 0;\r\n  }\r\n\r\n  function approvedFor(uint256 _tokenId) public view returns (address _approved) {\r\n    return approvedOftoken[_tokenId];\r\n  }\r\n\r\n  function approve(address _to, uint256 _tokenId) public {\r\n    require(msg.sender != _to);\r\n    require(tokenExists(_tokenId));\r\n    require(ownerOf(_tokenId) == msg.sender);\r\n\r\n    if (_to == 0) {\r\n      if (approvedOftoken[_tokenId] != 0) {\r\n        delete approvedOftoken[_tokenId];\r\n        Approval(msg.sender, 0, _tokenId);\r\n      }\r\n    } else {\r\n      approvedOftoken[_tokenId] = _to;\r\n      Approval(msg.sender, _to, _tokenId);\r\n    }\r\n  }\r\n\r\n  /* Transferring a country to another owner will entitle the new owner the profits from `buy` */\r\n  function transfer(address _to, uint256 _tokenId) public {\r\n    require(msg.sender == ownerOf(_tokenId));\r\n    _transfer(msg.sender, _to, _tokenId);\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _tokenId) public {\r\n    require(approvedFor(_tokenId) == msg.sender);\r\n    _transfer(_from, _to, _tokenId);\r\n  }\r\n\r\n  function _transfer(address _from, address _to, uint256 _tokenId) internal {\r\n    require(tokenExists(_tokenId));\r\n    require(ownerOf(_tokenId) == _from);\r\n    require(_to != address(0));\r\n    require(_to != address(this));\r\n\r\n    ownerOftoken[_tokenId] = _to;\r\n    approvedOftoken[_tokenId] = 0;\r\n\r\n    Transfer(_from, _to, _tokenId);\r\n  }\r\n\r\n  /* Read */\r\n\r\n  function priceOf (uint256 _tokenId) public view returns (uint256 _price) {\r\n    return priceOftoken[_tokenId];\r\n  }\r\n\r\n  function nextPriceOf (uint256 _tokenId) public view returns (uint256 _nextPrice) {\r\n    return calculateNextPrice(priceOf(_tokenId));\r\n  }\r\n\r\n  function allOf (uint256 _tokenId) external view returns (address _owner, address _creator, uint256 _price, uint256 _nextPrice) {\r\n    return (ownerOftoken[_tokenId], creatorOftoken[_tokenId], priceOftoken[_tokenId], nextPriceOf(_tokenId));\r\n  }\r\n\r\n  /* Util */\r\n  function isContract(address addr) internal view returns (bool) {\r\n    uint size;\r\n    assembly { size := extcodesize(addr) } // solium-disable-line\r\n    return size > 0;\r\n  }\r\n  \r\n  function changePrice(uint256 _tokenId, uint256 _price) onlyOwner(_tokenId) public {\r\n    require(now >= freeOftoken[_tokenId]);\r\n    priceOftoken[_tokenId] = _price;\r\n  }\r\n  \r\n  function issueToken(uint256 _price, uint256 _frozen, uint256 _parent) public {\r\n    require(_parent <= counter);\r\n    creatorOftoken[counter] = ownerOftoken[counter] = msg.sender;\r\n    priceOftoken[counter] = _price;\r\n    parentOftoken[counter] = _parent;\r\n    freeOftoken[counter] = now + _frozen;\r\n    counter += 1;\r\n  }  \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenExists\",\"outputs\":[{\"name\":\"_exists\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approvedFor\",\"outputs\":[{\"name\":\"_approved\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"allOf\",\"outputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_creator\",\"type\":\"address\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_nextPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"freeOf\",\"outputs\":[{\"name\":\"_free\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"creatorOf\",\"outputs\":[{\"name\":\"_creator\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOf\",\"outputs\":[{\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"nextPriceOf\",\"outputs\":[{\"name\":\"_nextPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"t\",\"type\":\"uint256\"}],\"name\":\"withdrawAmountFromToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"calculateDevCut\",\"outputs\":[{\"name\":\"_devCut\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawAllFromToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"priceOf\",\"outputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceFromToken\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"setCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"parentOf\",\"outputs\":[{\"name\":\"_parent\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_frozen\",\"type\":\"uint256\"},{\"name\":\"_parent\",\"type\":\"uint256\"}],\"name\":\"issueToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"calculateNextPrice\",\"outputs\":[{\"name\":\"_nextPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"Bought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"Sold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"SmartSignature","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://dd4987d5e9910dc7eedf66740840eb3a8af6813f993d76cfa97d13d79b207bb3"}]}