{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n/*\r\n * Manager that stores permitted addresses \r\n */\r\ncontract PermissionManager is Ownable {\r\n    mapping (address => bool) permittedAddresses;\r\n\r\n    function addAddress(address newAddress) public onlyOwner {\r\n        permittedAddresses[newAddress] = true;\r\n    }\r\n\r\n    function removeAddress(address remAddress) public onlyOwner {\r\n        permittedAddresses[remAddress] = false;\r\n    }\r\n\r\n    function isPermitted(address pAddress) public view returns(bool) {\r\n        if (permittedAddresses[pAddress]) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\ncontract Registry is Ownable {\r\n\r\n  struct ContributorData {\r\n    bool isActive;\r\n    uint contributionETH;\r\n    uint contributionUSD;\r\n    uint tokensIssued;\r\n    uint quoteUSD;\r\n    uint contributionRNTB;\r\n  }\r\n  mapping(address => ContributorData) public contributorList;\r\n  mapping(uint => address) private contributorIndexes;\r\n\r\n  uint private nextContributorIndex;\r\n\r\n  /* Permission manager contract */\r\n  PermissionManager public permissionManager;\r\n\r\n  bool public completed;\r\n\r\n  modifier onlyPermitted() {\r\n    require(permissionManager.isPermitted(msg.sender));\r\n    _;\r\n  }\r\n\r\n  event ContributionAdded(address _contributor, uint overallEth, uint overallUSD, uint overallToken, uint quote);\r\n  event ContributionEdited(address _contributor, uint overallEth, uint overallUSD,  uint overallToken, uint quote);\r\n  function Registry(address pManager) public {\r\n    permissionManager = PermissionManager(pManager); \r\n    completed = false;\r\n  }\r\n\r\n  function setPermissionManager(address _permadr) public onlyOwner {\r\n    require(_permadr != 0x0);\r\n    permissionManager = PermissionManager(_permadr);\r\n  }\r\n\r\n  function isActiveContributor(address contributor) public view returns(bool) {\r\n    return contributorList[contributor].isActive;\r\n  }\r\n\r\n  function removeContribution(address contributor) public onlyPermitted {\r\n    contributorList[contributor].isActive = false;\r\n  }\r\n\r\n  function setCompleted(bool compl) public onlyPermitted {\r\n    completed = compl;\r\n  }\r\n\r\n  function addContribution(address _contributor, uint _amount, uint _amusd, uint _tokens, uint _quote ) public onlyPermitted {\r\n    \r\n    if (contributorList[_contributor].isActive == false) {\r\n        contributorList[_contributor].isActive = true;\r\n        contributorList[_contributor].contributionETH = _amount;\r\n        contributorList[_contributor].contributionUSD = _amusd;\r\n        contributorList[_contributor].tokensIssued = _tokens;\r\n        contributorList[_contributor].quoteUSD = _quote;\r\n\r\n        contributorIndexes[nextContributorIndex] = _contributor;\r\n        nextContributorIndex++;\r\n    } else {\r\n      contributorList[_contributor].contributionETH += _amount;\r\n      contributorList[_contributor].contributionUSD += _amusd;\r\n      contributorList[_contributor].tokensIssued += _tokens;\r\n      contributorList[_contributor].quoteUSD = _quote;\r\n    }\r\n    ContributionAdded(_contributor, contributorList[_contributor].contributionETH, contributorList[_contributor].contributionUSD, contributorList[_contributor].tokensIssued, contributorList[_contributor].quoteUSD);\r\n  }\r\n\r\n  function editContribution(address _contributor, uint _amount, uint _amusd, uint _tokens, uint _quote) public onlyPermitted {\r\n    if (contributorList[_contributor].isActive == true) {\r\n        contributorList[_contributor].contributionETH = _amount;\r\n        contributorList[_contributor].contributionUSD = _amusd;\r\n        contributorList[_contributor].tokensIssued = _tokens;\r\n        contributorList[_contributor].quoteUSD = _quote;\r\n    }\r\n     ContributionEdited(_contributor, contributorList[_contributor].contributionETH, contributorList[_contributor].contributionUSD, contributorList[_contributor].tokensIssued, contributorList[_contributor].quoteUSD);\r\n  }\r\n\r\n  function addContributor(address _contributor, uint _amount, uint _amusd, uint _tokens, uint _quote) public onlyPermitted {\r\n    contributorList[_contributor].isActive = true;\r\n    contributorList[_contributor].contributionETH = _amount;\r\n    contributorList[_contributor].contributionUSD = _amusd;\r\n    contributorList[_contributor].tokensIssued = _tokens;\r\n    contributorList[_contributor].quoteUSD = _quote;\r\n    contributorIndexes[nextContributorIndex] = _contributor;\r\n    nextContributorIndex++;\r\n    ContributionAdded(_contributor, contributorList[_contributor].contributionETH, contributorList[_contributor].contributionUSD, contributorList[_contributor].tokensIssued, contributorList[_contributor].quoteUSD);\r\n \r\n  }\r\n\r\n  function getContributionETH(address _contributor) public view returns (uint) {\r\n      return contributorList[_contributor].contributionETH;\r\n  }\r\n\r\n  function getContributionUSD(address _contributor) public view returns (uint) {\r\n      return contributorList[_contributor].contributionUSD;\r\n  }\r\n\r\n  function getContributionRNTB(address _contributor) public view returns (uint) {\r\n      return contributorList[_contributor].contributionRNTB;\r\n  }\r\n\r\n  function getContributionTokens(address _contributor) public view returns (uint) {\r\n      return contributorList[_contributor].tokensIssued;\r\n  }\r\n\r\n  function addRNTBContribution(address _contributor, uint _amount) public onlyPermitted {\r\n    if (contributorList[_contributor].isActive == false) {\r\n        contributorList[_contributor].isActive = true;\r\n        contributorList[_contributor].contributionRNTB = _amount;\r\n        contributorIndexes[nextContributorIndex] = _contributor;\r\n        nextContributorIndex++;\r\n    } else {\r\n      contributorList[_contributor].contributionETH += _amount;\r\n    }\r\n  }\r\n\r\n  function getContributorByIndex(uint index) public view  returns (address) {\r\n      return contributorIndexes[index];\r\n  }\r\n\r\n  function getContributorAmount() public view returns(uint) {\r\n      return nextContributorIndex;\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getContributorByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"contributor\",\"type\":\"address\"}],\"name\":\"isActiveContributor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contributor\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addRNTBContribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getContributionETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_permadr\",\"type\":\"address\"}],\"name\":\"setPermissionManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getContributionTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContributorAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getContributionRNTB\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributorList\",\"outputs\":[{\"name\":\"isActive\",\"type\":\"bool\"},{\"name\":\"contributionETH\",\"type\":\"uint256\"},{\"name\":\"contributionUSD\",\"type\":\"uint256\"},{\"name\":\"tokensIssued\",\"type\":\"uint256\"},{\"name\":\"quoteUSD\",\"type\":\"uint256\"},{\"name\":\"contributionRNTB\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"completed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contributor\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_amusd\",\"type\":\"uint256\"},{\"name\":\"_tokens\",\"type\":\"uint256\"},{\"name\":\"_quote\",\"type\":\"uint256\"}],\"name\":\"editContribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contributor\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_amusd\",\"type\":\"uint256\"},{\"name\":\"_tokens\",\"type\":\"uint256\"},{\"name\":\"_quote\",\"type\":\"uint256\"}],\"name\":\"addContribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contributor\",\"type\":\"address\"}],\"name\":\"removeContribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"permissionManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getContributionUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contributor\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_amusd\",\"type\":\"uint256\"},{\"name\":\"_tokens\",\"type\":\"uint256\"},{\"name\":\"_quote\",\"type\":\"uint256\"}],\"name\":\"addContributor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"compl\",\"type\":\"bool\"}],\"name\":\"setCompleted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"pManager\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_contributor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"overallEth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"overallUSD\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"overallToken\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"quote\",\"type\":\"uint256\"}],\"name\":\"ContributionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_contributor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"overallEth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"overallUSD\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"overallToken\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"quote\",\"type\":\"uint256\"}],\"name\":\"ContributionEdited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Registry","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000934a5e149b57d5f8eb5962732a861406926ba45b","Library":"","SwarmSource":"bzzr://ad3369e098d7aa7afc73a8721e4ebd10eb415a80d03d5daed82985fdaf2bd29f"}]}