{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n* @title SafeMath\r\n* @dev Math operations with safety checks that throw on error\r\n*/\r\nlibrary SafeMath {\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns(uint256) {\r\n\t\tif (a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tuint256 c = a * b;\r\n\t\tassert(c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal pure returns(uint256) {\r\n\t\tassert(b > 0); // Solidity automatically throws when dividing by 0\r\n\t\tuint256 c = a / b;\r\n\t\tassert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns(uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal pure returns(uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\ncontract ERC20\r\n{\r\n\tfunction totalSupply()public view returns(uint total_Supply);\r\n\tfunction balanceOf(address who)public view returns(uint256);\r\n\tfunction allowance(address owner, address spender)public view returns(uint);\r\n\tfunction transferFrom(address from, address to, uint value)public returns(bool ok);\r\n\tfunction approve(address spender, uint value)public returns(bool ok);\r\n\tfunction transfer(address to, uint value)public returns(bool ok);\r\n\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n\r\ncontract Standix is ERC20\r\n{\r\n\tusing SafeMath for uint256;\r\n\r\n\taddress public \t\t\t\tWALLET \t\t\t\t\t= 0xAaF9BfaBB08e55B68140B3Ea6515901170053980;\r\n\tuint256 constant \tpublic \tTOKEN_DECIMALS \t\t\t= 10 ** 9;\r\n\tuint256 constant \tpublic \tETH_DECIMALS \t\t\t= 10 ** 18;\r\n\tuint256 public \t\t\t\tTotalpresaleSupply \t\t= 20000000;  //20 million presale\r\n\tuint256 public \t\t\t\tTotalCrowdsaleSupply \t= 20000000; // 20 million ICO\r\n\tuint256 public \t\t\t\tTotalOwnerSupply \t\t= 60000000;  //60 Million to owner\r\n\tuint256 \t\t\t\t\tPresaleDays \t\t\t= 31 days;\r\n\tuint256 \t\t\t\t\tICODays \t\t\t\t= 63 days;\r\n\r\n\t// Name of the token\r\n\tstring public constant name = \"Standix\";\r\n\r\n\t// Symbol of token\r\n\tstring public constant symbol = \"SAX\";\r\n\r\n\tuint8 public constant decimals = 9;\r\n\r\n\t// 100 Million total supply // muliplies dues to decimal precision\r\n\tuint public TotalTokenSupply = 100000000 * TOKEN_DECIMALS;   //100 million\r\n\r\n\t// Owner of this contract\r\n\taddress public owner;\r\n\r\n\tbool private paused = false;\r\n\r\n\tuint256 public ContributionAmount;\r\n\tuint256 public StartdatePresale;\r\n\tuint256 public EnddatePresale;\r\n\tuint256 public StartdateICO;\r\n\tuint256 public EnddateICO;\r\n\tuint256 no_of_tokens;\r\n\tuint public BONUS;\r\n\r\n\tuint256 public minContribution = 5000;// 50 USD in cents\r\n\tuint256 public TotalCrowdsaleContributions;\r\n\tuint Price_Per_Token;\r\n\r\n\tuint public EtherUSDPriceFactor;\r\n\r\n\tmapping(address => mapping(address => uint)) allowed;\r\n\tmapping(address => uint) balances;\r\n\r\n\tenum Stages {\r\n\t\tNOTSTARTED,\r\n\t\tPREICO,\r\n\t\tICO,\r\n\t\tENDED\r\n\t}\r\n\r\n\tStages public stage;\r\n\r\n\tmodifier atStage(Stages _stage) {\r\n\t\trequire(stage == _stage);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire (msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tconstructor (uint256 EtherPriceFactor) public\r\n\t{\r\n\t\trequire(EtherPriceFactor != 0);\r\n\t\towner = msg.sender;\r\n\t\tbalances[owner] = TotalOwnerSupply.mul(TOKEN_DECIMALS);\r\n\t\tstage = Stages.NOTSTARTED;\r\n\t\tEtherUSDPriceFactor = EtherPriceFactor;\r\n\t\temit Transfer(0, owner, balances[owner]);\r\n\t}\r\n\r\n\tfunction() public payable\r\n\t{\r\n\r\n\t\trequire(stage != Stages.ENDED);\r\n\t\trequire(!paused && msg.sender != owner);\r\n\r\n\t\tif( stage == Stages.PREICO && now <= EnddatePresale )\r\n\t\t{  \r\n\t\t\tcaltoken();\r\n\t\t}\r\n\t\telse if(stage == Stages.ICO && now <= EnddateICO )\r\n\t\t{  \r\n\t\t\tcaltoken();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\trevert();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction caltoken() private {\r\n\t\t// price in cents with 18 zeros included\r\n\t\tContributionAmount = ((msg.value).mul(EtherUSDPriceFactor.mul(100)));\r\n\t\trequire(ContributionAmount >= (minContribution.mul(ETH_DECIMALS)));\r\n\t\tno_of_tokens =(((ContributionAmount).div(Price_Per_Token))).div(TOKEN_DECIMALS);\r\n\t\tuint256 bonus_token = ((no_of_tokens).mul(BONUS)).div(100); // 58 percent bonus token\r\n\t\tuint256 total_token = no_of_tokens + bonus_token;\r\n\t\ttransferTokens(msg.sender,total_token);\r\n\t}\r\n\r\n\t// Calculates the Bonus Award based upon the purchase amount and the purchase period\r\n\t// function calculateBonus(uint256 individuallyContributedEtherInWei) private returns(uint256 bonus_applied)\r\n\r\n\tfunction startPreICO() public onlyOwner atStage(Stages.NOTSTARTED)\r\n\t{\r\n\t\tstage = Stages.PREICO;\r\n\t\tpaused = false;\r\n\t\tPrice_Per_Token = 10;\r\n\t\tBONUS = 30;\r\n\t\tbalances[address(this)] = (TotalpresaleSupply).mul(TOKEN_DECIMALS);\r\n\t\tStartdatePresale = now;\r\n\t\tEnddatePresale = now + PresaleDays;\r\n\t\temit Transfer(0, address(this), balances[address(this)]);\r\n\r\n\t}\r\n\r\n\tfunction startICO() public onlyOwner //atStage(Stages.PREICO)\r\n\t{\r\n\r\n\t\t//   require(now > pre_enddate);\r\n\t\tstage = Stages.ICO;\r\n\t\tpaused = false;\r\n\t\tPrice_Per_Token= 20;\r\n\t\tBONUS = 20;\r\n\t\tbalances[address(this)] = balances[address(this)].add((TotalCrowdsaleSupply).mul(TOKEN_DECIMALS)); \r\n\t\tStartdateICO = now;\r\n\t\tEnddateICO = now + ICODays;\r\n\t\temit Transfer(0, address(this), (TotalCrowdsaleSupply).mul(TOKEN_DECIMALS));\r\n\r\n\t}\r\n\t\r\n\tfunction setpricefactor(uint256 newPricefactor) external onlyOwner\r\n\t{\r\n\t\tEtherUSDPriceFactor = newPricefactor;\r\n\t}\r\n\r\n\t// called by the owner, pause ICO\r\n\tfunction pauseICO() external onlyOwner\r\n\t{\r\n\t\tpaused = true;\r\n\t}\r\n\r\n\t// called by the owner , resumes ICO\r\n\tfunction resumeICO() external onlyOwner\r\n\t{\r\n\t\tpaused = false;\r\n\t}\r\n\tfunction end_ICO() external onlyOwner atStage(Stages.ICO)\r\n\t{\r\n\t\trequire(now > EnddateICO);\r\n\t\tstage = Stages.ENDED;\r\n\t\tTotalTokenSupply = (TotalTokenSupply).sub(balances[address(this)]);\r\n\t\tbalances[address(this)] = 0;\r\n\t\temit Transfer(address(this), 0 , balances[address(this)]);\r\n\r\n\t}\r\n\r\n\t// what is the total supply of the ech tokens\r\n\tfunction totalSupply() public view returns(uint256 total_Supply) {\r\n\t\ttotal_Supply = TotalTokenSupply;\r\n\t}\r\n\r\n\t// What is the balance of a particular account?\r\n\tfunction balanceOf(address token_Owner)public constant returns(uint256 balance) {\r\n\t\treturn balances[token_Owner];\r\n\t}\r\n\r\n\t// Send _value amount of tokens from address _from to address _to\r\n\t// The transferFrom method is used for a withdraw workflow, allowing contracts to send\r\n\t// tokens on your behalf, for example to \"deposit\" to a contract address and/or to charge\r\n\t// fees in sub-currencies; the command should fail unless the _from account has\r\n\t// deliberately authorized the sender of the message via some mechanism; we propose\r\n\t// these standardized APIs for approval:\r\n\tfunction transferFrom(address from_address, address to_address, uint256 tokens)public returns(bool success)\r\n\t{\r\n\t\trequire(to_address != 0x0);\r\n\t\trequire(balances[from_address] >= tokens && allowed[from_address][msg.sender] >= tokens && tokens >= 0);\r\n\t\tbalances[from_address] = (balances[from_address]).sub(tokens);\r\n\t\tallowed[from_address][msg.sender] = (allowed[from_address][msg.sender]).sub(tokens);\r\n\t\tbalances[to_address] = (balances[to_address]).add(tokens);\r\n\t\temit   Transfer(from_address, to_address, tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Allow _spender to withdraw from your account, multiple times, up to the _value amount.\r\n\t// If this function is called again it overwrites the current allowance with _value.\r\n\tfunction approve(address spender, uint256 tokens)public returns(bool success)\r\n\t{\r\n\t\trequire(spender != 0x0);\r\n\t\tallowed[msg.sender][spender] = tokens;\r\n\t\temit  Approval(msg.sender, spender, tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction allowance(address token_Owner, address spender) public constant returns(uint256 remaining)\r\n\t{\r\n\t\trequire(token_Owner != 0x0 && spender != 0x0);\r\n\t\treturn allowed[token_Owner][spender];\r\n\t}\r\n\r\n\t// Transfer the balance from owner's account to another account\r\n\tfunction transfer(address to_address, uint256 tokens)public returns(bool success)\r\n\t{\r\n\t\trequire(to_address != 0x0);\r\n\t\trequire(balances[msg.sender] >= tokens && tokens >= 0);\r\n\t\tbalances[msg.sender] = (balances[msg.sender]).sub(tokens);\r\n\t\tbalances[to_address] = (balances[to_address]).add(tokens);\r\n\t\temit  Transfer(msg.sender, to_address, tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Transfer the balance from owner's account to another account\r\n\tfunction transferTokens(address to_address, uint256 tokens) private returns(bool success)\r\n\t{\r\n\t\trequire(to_address != 0x0);\r\n\t\trequire(balances[address(this)] >= tokens && tokens > 0);\r\n\t\tbalances[address(this)] = (balances[address(this)]).sub(tokens);\r\n\t\tbalances[to_address] = (balances[to_address]).add(tokens);\r\n\t\temit   Transfer(address(this), to_address, tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction forwardFunds() external onlyOwner\r\n\t{\r\n\t\taddress myAddress = this;\r\n\t\tWALLET.transfer(myAddress.balance);\r\n\t}\r\n\t\r\n\t// send token to multiple users in single time\r\n\tfunction sendTokens(address[] a, uint[] v) public {\r\n\t    uint i = 0;\r\n\t    while( i < a.length ){\r\n\t        transfer(a[i], v[i] * TOKEN_DECIMALS);\r\n\t        i++;\r\n\t    }\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"end_ICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPricefactor\",\"type\":\"uint256\"}],\"name\":\"setpricefactor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EnddateICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"total_Supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"StartdateICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ContributionAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from_address\",\"type\":\"address\"},{\"name\":\"to_address\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pauseICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WALLET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"StartdatePresale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token_Owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TotalTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETH_DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resumeICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TotalpresaleSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"forwardFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to_address\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TotalCrowdsaleSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TotalCrowdsaleContributions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startPreICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EtherUSDPriceFactor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EnddatePresale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TotalOwnerSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"address[]\"},{\"name\":\"v\",\"type\":\"uint256[]\"}],\"name\":\"sendTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token_Owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"EtherPriceFactor\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Standix","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000258","Library":"","SwarmSource":"bzzr://9a57f4d8e05cc55de0bcfc917a2c4b2711fca56b11f51172a00e7196e0db4b25"}]}