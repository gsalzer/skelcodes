{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.21;\r\n\r\n// How fast can you get to 1000 points and win the prize?\r\n\r\ncontract RACEFORETH {\r\n    // 1000 points to win!\r\n    uint256 public SCORE_TO_WIN = 1000 finney;\r\n    uint256 PRIZE;\r\n    \r\n    // 1000 points = 1 ether\r\n    // Speed limit: 0.5 eth to prevent insta-win\r\n    // Prevents people from going too fast!\r\n    uint256 public speed_limit = 500 finney;\r\n    \r\n    // Keep track of everyone's score\r\n    mapping (address => uint256) racerScore;\r\n    mapping (address => uint256) racerSpeedLimit;\r\n    \r\n    uint256 latestTimestamp;\r\n    address owner;\r\n    \r\n    function RACEFORETH () public payable {\r\n        PRIZE = msg.value;\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function race() public payable {\r\n        if (racerSpeedLimit[msg.sender] == 0) { racerSpeedLimit[msg.sender] = speed_limit; }\r\n        require(msg.value <= racerSpeedLimit[msg.sender] && msg.value > 1 wei);\r\n        \r\n        racerScore[msg.sender] += msg.value;\r\n        racerSpeedLimit[msg.sender] = (racerSpeedLimit[msg.sender] / 2);\r\n        \r\n        latestTimestamp = now;\r\n    \r\n        // YOU WON\r\n        if (racerScore[msg.sender] >= SCORE_TO_WIN) {\r\n            msg.sender.transfer(this.balance);\r\n        }\r\n    }\r\n    \r\n    function () public payable {\r\n        race();\r\n    }\r\n    \r\n    // Pull the prize if no one has raced in 3 days :(\r\n    function endRace() public {\r\n        require(msg.sender == owner);\r\n        require(now > latestTimestamp + 3 days);\r\n        \r\n        msg.sender.transfer(this.balance);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"endRace\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"speed_limit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SCORE_TO_WIN\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"race\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"RACEFORETH","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8d9f9710ef3f52d26a56166998904f648587a411599f875557135086b9654bcf"}]}