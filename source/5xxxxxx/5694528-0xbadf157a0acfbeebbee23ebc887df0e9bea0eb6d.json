{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract ItemToken {\r\n  using SafeMath for uint256;\r\n\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);\r\n  event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);\r\n\r\n  address private owner;\r\n  mapping (address => bool) private admins;\r\n  bool private erc721Enabled = false;\r\n\r\n  uint256 private L = 500;\r\n  uint256 private itemIdCounter = 0;\r\n  uint256 private pointsDecayFactor = 1209600000; // half-time: week\r\n\r\n  uint256[] private listedItems;\r\n  mapping (uint256 => address) private ownerOfItem;\r\n  mapping (uint256 => string) private nameOfItem;\r\n  mapping (uint256 => string) private descOfItem;\r\n  mapping (uint256 => string) private URLOfItem;\r\n  mapping (uint256 => uint256) private pointOfItem;\r\n  mapping (uint256 => uint256) private timeOfItem;\r\n  mapping (uint256 => address) private approvedOfItem;\r\n\r\n  mapping (uint256 => uint256[]) private pointArrayOfArray;\r\n  mapping (uint256 => uint256[]) private timeArrayOfArray;\r\n\r\n  function ItemToken () public {\r\n    owner = msg.sender;\r\n    admins[owner] = true;\r\n  }\r\n\r\n  /* Modifiers */\r\n  modifier onlyOwner() {\r\n    require(owner == msg.sender);\r\n    _;\r\n  }\r\n\r\n  modifier onlyAdmins() {\r\n    require(admins[msg.sender]);\r\n    _;\r\n  }\r\n\r\n  modifier onlyERC721() {\r\n    require(erc721Enabled);\r\n    _;\r\n  }\r\n\r\n  /* Owner */\r\n  function setOwner (address _owner) onlyOwner() public {\r\n    owner = _owner;\r\n  }\r\n\r\n  function addAdmin (address _admin) onlyOwner() public {\r\n    admins[_admin] = true;\r\n  }\r\n\r\n  function removeAdmin (address _admin) onlyOwner() public {\r\n    delete admins[_admin];\r\n  }\r\n  \r\n  function adjustL (uint256 _L) onlyOwner() public {\r\n    L = _L;\r\n  }\r\n  \r\n  function adjustPointsDecayFactor (uint256 _pointsDecayFactor) onlyOwner() public {\r\n    pointsDecayFactor = _pointsDecayFactor;\r\n  }\r\n\r\n  // Unlocks ERC721 behaviour, allowing for trading on third party platforms.\r\n  function enableERC721 () onlyOwner() public {\r\n    erc721Enabled = true;\r\n  }\r\n\r\n  /* Withdraw */\r\n  function withdrawAll () onlyOwner() public {\r\n    owner.transfer(this.balance);\r\n  }\r\n\r\n  function withdrawAmount (uint256 _amount) onlyOwner() public {\r\n    owner.transfer(_amount);\r\n  }\r\n\r\n  /* Listing */\r\n  function Time_call() returns (uint256 _now){\r\n    return now;\r\n  }\r\n\r\n  function listDapp (string _itemName, string _itemDesc, string _itemURL) public {\r\n    require(bytes(_itemName).length > 2);\r\n    require(bytes(_itemDesc).length > 2);\r\n    require(bytes(_itemURL).length > 2);\r\n    \r\n    uint256 _itemId = itemIdCounter;\r\n    itemIdCounter = itemIdCounter + 1;\r\n\r\n    ownerOfItem[_itemId] = msg.sender;\r\n    nameOfItem[_itemId] = _itemName;\r\n    descOfItem[_itemId] = _itemDesc;\r\n    URLOfItem[_itemId] = _itemURL;\r\n    pointOfItem[_itemId] = 10; //This is 10 free token for whom sign-up\r\n    timeOfItem[_itemId] = Time_call();\r\n    listedItems.push(_itemId);\r\n    \r\n    pointArrayOfArray[_itemId].push(10);\r\n    timeArrayOfArray[_itemId].push(Time_call());\r\n  }\r\n\r\n  /* Buying */\r\n  function buyPoints (uint256 _itemId) payable public {\r\n    require(msg.value > 0);\r\n    require(ownerOf(_itemId) == msg.sender);\r\n    require(!isContract(msg.sender));\r\n    \r\n    uint256 point = msg.value.mul(L).div(1000000000000000000);\r\n    \r\n    pointOfItem[_itemId] = point;\r\n    timeOfItem[_itemId] = Time_call();\r\n    \r\n    owner.transfer(msg.value);\r\n    \r\n    pointArrayOfArray[_itemId].push(point);\r\n    timeArrayOfArray[_itemId].push(Time_call());\r\n  }\r\n\r\n  /* ERC721 */\r\n  function implementsERC721() public view returns (bool _implements) {\r\n    return erc721Enabled;\r\n  }\r\n\r\n  function name() public pure returns (string _name) {\r\n    return \"DappTalk.org\";\r\n  }\r\n\r\n  function symbol() public pure returns (string _symbol) {\r\n    return \"DTC\";\r\n  }\r\n\r\n  function totalSupply() public view returns (uint256 _totalSupply) {\r\n    return listedItems.length;\r\n  }\r\n\r\n  function balanceOf (address _owner) public view returns (uint256 _balance) {\r\n    uint256 counter = 0;\r\n\r\n    for (uint256 i = 0; i < listedItems.length; i++) {\r\n      if (ownerOf(listedItems[i]) == _owner) {\r\n        counter++;\r\n      }\r\n    }\r\n\r\n    return counter;\r\n  }\r\n\r\n  function ownerOf (uint256 _itemId) public view returns (address _owner) {\r\n    return ownerOfItem[_itemId];\r\n  }\r\n\r\n  function tokensOf (address _owner) public view returns (uint256[] _tokenIds) {\r\n    uint256[] memory items = new uint256[](balanceOf(_owner));\r\n\r\n    uint256 itemCounter = 0;\r\n    for (uint256 i = 0; i < listedItems.length; i++) {\r\n      if (ownerOf(listedItems[i]) == _owner) {\r\n        items[itemCounter] = listedItems[i];\r\n        itemCounter += 1;\r\n      }\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  function tokenExists (uint256 _itemId) public view returns (bool _exists) {\r\n    return bytes(nameOf(_itemId)).length > 2;\r\n  }\r\n\r\n  function approvedFor(uint256 _itemId) public view returns (address _approved) {\r\n    return approvedOfItem[_itemId];\r\n  }\r\n\r\n  function approve(address _to, uint256 _itemId) onlyERC721() public {\r\n    require(msg.sender != _to);\r\n    require(tokenExists(_itemId));\r\n    require(ownerOf(_itemId) == msg.sender);\r\n\r\n    if (_to == 0) {\r\n      if (approvedOfItem[_itemId] != 0) {\r\n        delete approvedOfItem[_itemId];\r\n        Approval(msg.sender, 0, _itemId);\r\n      }\r\n    } else {\r\n      approvedOfItem[_itemId] = _to;\r\n      Approval(msg.sender, _to, _itemId);\r\n    }\r\n  }\r\n\r\n  function transfer(address _to, uint256 _itemId) onlyERC721() public {\r\n    require(msg.sender == ownerOf(_itemId));\r\n    _transfer(msg.sender, _to, _itemId);\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _itemId) onlyERC721() public {\r\n    require(approvedFor(_itemId) == msg.sender);\r\n    _transfer(_from, _to, _itemId);\r\n  }\r\n\r\n  function _transfer(address _from, address _to, uint256 _itemId) internal {\r\n    require(tokenExists(_itemId));\r\n    require(ownerOf(_itemId) == _from);\r\n    require(_to != address(0));\r\n    require(_to != address(this));\r\n\r\n    ownerOfItem[_itemId] = _to;\r\n    approvedOfItem[_itemId] = 0;\r\n\r\n    Transfer(_from, _to, _itemId);\r\n  }\r\n\r\n  /* Read */\r\n  function isAdmin (address _admin) public view returns (bool _isAdmin) {\r\n    return admins[_admin];\r\n  }\r\n\r\n  function nameOf (uint256 _itemId) public view returns (string _itemName) {\r\n    return nameOfItem[_itemId];\r\n  }\r\n  \r\n  function descOf (uint256 _itemId) public view returns (string _itemDesc) {\r\n    return descOfItem[_itemId];\r\n  }\r\n  \r\n  function URLOf (uint256 _itemId) public view returns (string _itemURL) {\r\n    return URLOfItem[_itemId];\r\n  }\r\n  \r\n  function pointOf (uint256 _itemId) public view returns (uint256 _itemPoint) {\r\n    return pointOfItem[_itemId];\r\n  }\r\n  \r\n  function pointArrayOf (uint256 _itemId) public view returns (uint256[] _pointArray) {\r\n    return pointArrayOfArray[_itemId];\r\n  }\r\n  \r\n  function timeArrayOf (uint256 _itemId) public view returns (uint256[] _timeArray) {\r\n    return timeArrayOfArray[_itemId];\r\n  }\r\n\r\n  function initTimeOf (uint256 _itemId) public view returns (uint256 _initTime) {\r\n    return timeArrayOfArray[_itemId][0];\r\n  }\r\n\r\n  function timeOf (uint256 _itemId) public view returns (uint256 _itemTime) {\r\n    return timeOfItem[_itemId];\r\n  }\r\n\r\n  function getPointOf (uint256 _itemId) public view returns (uint256 _getPoint) {\r\n    uint256 t = Time_call();\r\n    _getPoint = 0;\r\n    uint256 temp = 0;\r\n\r\n    for (uint256 i = 0; i < pointArrayOfArray[_itemId].length; i++) {\r\n        if (timeArrayOfArray[_itemId][i] + pointsDecayFactor > t) {\r\n            temp = timeArrayOfArray[_itemId][i];\r\n            temp = temp - t;\r\n            temp = temp + pointsDecayFactor;\r\n            temp = temp.mul(pointArrayOfArray[_itemId][i]);\r\n            temp = temp.div(pointsDecayFactor);\r\n            _getPoint = temp.add(_getPoint);\r\n        }\r\n    }\r\n    \r\n    return _getPoint;\r\n  }\r\n\r\n  function allOf (uint256 _itemId) public view returns (address _owner, string _itemName, string _itemDesc, string _itemURL, uint256[] _pointArray, uint256[] _timeArray, uint256 _curPoint) {\r\n    return (ownerOf(_itemId), nameOf(_itemId), descOf(_itemId), URLOf(_itemId), pointArrayOf(_itemId), timeArrayOf(_itemId), getPointOf(_itemId));\r\n  }\r\n  \r\n  function getAllDapps () public view returns (address[] _owners, bytes32[] _itemNames, bytes32[] _itemDescs, bytes32[] _itemURL, uint256[] _points, uint256[] _initTime, uint256[] _lastTime) {\r\n      _owners = new address[](itemIdCounter);\r\n      _itemNames = new bytes32[](itemIdCounter);\r\n      _itemDescs = new bytes32[](itemIdCounter);\r\n      _itemURL = new bytes32[](itemIdCounter);\r\n      _points = new uint256[](itemIdCounter);\r\n      _initTime = new uint256[](itemIdCounter);\r\n      _lastTime = new uint256[](itemIdCounter);\r\n      for (uint256 i = 0; i < itemIdCounter; i++) {\r\n          _owners[i] = ownerOf(i);\r\n          _itemNames[i] = stringToBytes32(nameOf(i));\r\n          _itemDescs[i] = stringToBytes32(descOf(i));\r\n          _itemURL[i] = stringToBytes32(URLOf(i));\r\n          _points[i] = getPointOf(i);\r\n          _initTime[i] = initTimeOf(i);\r\n          _lastTime[i] = timeOf(i);\r\n      }\r\n      return (_owners, _itemNames, _itemDescs, _itemURL, _points, _initTime, _lastTime);\r\n  }\r\n\r\n  /* Util */\r\n  function isContract(address addr) internal view returns (bool) {\r\n    uint size;\r\n    assembly { size := extcodesize(addr) } // solium-disable-line\r\n    return size > 0;\r\n  }\r\n  \r\n  function stringToBytes32(string memory source) returns (bytes32 result) {\r\n        bytes memory tempEmptyStringTest = bytes(source);\r\n        if (tempEmptyStringTest.length == 0) {\r\n            return 0x0;\r\n        }\r\n    \r\n        assembly {\r\n            result := mload(add(source, 32))\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"tokenExists\",\"outputs\":[{\"name\":\"_exists\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Time_call\",\"outputs\":[{\"name\":\"_now\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"nameOf\",\"outputs\":[{\"name\":\"_itemName\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementsERC721\",\"outputs\":[{\"name\":\"_implements\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"initTimeOf\",\"outputs\":[{\"name\":\"_initTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"name\":\"_isAdmin\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"approvedFor\",\"outputs\":[{\"name\":\"_approved\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"allOf\",\"outputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_itemName\",\"type\":\"string\"},{\"name\":\"_itemDesc\",\"type\":\"string\"},{\"name\":\"_itemURL\",\"type\":\"string\"},{\"name\":\"_pointArray\",\"type\":\"uint256[]\"},{\"name\":\"_timeArray\",\"type\":\"uint256[]\"},{\"name\":\"_curPoint\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pointsDecayFactor\",\"type\":\"uint256\"}],\"name\":\"adjustPointsDecayFactor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_L\",\"type\":\"uint256\"}],\"name\":\"adjustL\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"descOf\",\"outputs\":[{\"name\":\"_itemDesc\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"buyPoints\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOf\",\"outputs\":[{\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"timeOf\",\"outputs\":[{\"name\":\"_itemTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enableERC721\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"pointArrayOf\",\"outputs\":[{\"name\":\"_pointArray\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_itemName\",\"type\":\"string\"},{\"name\":\"_itemDesc\",\"type\":\"string\"},{\"name\":\"_itemURL\",\"type\":\"string\"}],\"name\":\"listDapp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"getPointOf\",\"outputs\":[{\"name\":\"_getPoint\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllDapps\",\"outputs\":[{\"name\":\"_owners\",\"type\":\"address[]\"},{\"name\":\"_itemNames\",\"type\":\"bytes32[]\"},{\"name\":\"_itemDescs\",\"type\":\"bytes32[]\"},{\"name\":\"_itemURL\",\"type\":\"bytes32[]\"},{\"name\":\"_points\",\"type\":\"uint256[]\"},{\"name\":\"_initTime\",\"type\":\"uint256[]\"},{\"name\":\"_lastTime\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"URLOf\",\"outputs\":[{\"name\":\"_itemURL\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"pointOf\",\"outputs\":[{\"name\":\"_itemPoint\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"source\",\"type\":\"string\"}],\"name\":\"stringToBytes32\",\"outputs\":[{\"name\":\"result\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"timeArrayOf\",\"outputs\":[{\"name\":\"_timeArray\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"ItemToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://08cf576aeaf7d4f0972363f6ffc5d80a22ebd2602f5f4ca959595bd925184dbe"}]}