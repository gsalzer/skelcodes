{"status":"1","message":"OK","result":[{"SourceCode":"// v7\r\n\r\n/**\r\n * Affiliate.sol\r\n */\r\n\r\npragma solidity ^0.4.23;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\n/**\r\n * @title TokenContract\r\n * @dev Token contract interface with transfer and balanceOf functions which need to be implemented\r\n */\r\ninterface TokenContract {\r\n\r\n  /**\r\n   * @dev Transfer funds to recipient address\r\n   * @param _recipient Recipients address\r\n   * @param _amount Amount to transfer\r\n   */\r\n  function transfer(address _recipient, uint256 _amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Return balance of holders address\r\n   * @param _holder Holders address\r\n   */\r\n  function balanceOf(address _holder) external view returns (uint256);\r\n}\r\n\r\n/**\r\n * @title Affiliate\r\n * @dev Affiliate contract collects and stores all affiliates and token earnings for each affiliate\r\n */\r\ncontract Affiliate is Ownable {\r\n\r\n  TokenContract public tkn;\r\n  mapping (address => uint256) affiliates;\r\n\r\n  /**\r\n   * @dev Add affiliates in affiliate mapping\r\n   * @param _affiliates List of all affiliates\r\n   * @param _amount Amount earned\r\n   */\r\n  function addAffiliates(address[] _affiliates, uint256[] _amount) onlyOwner public {\r\n    require(_affiliates.length > 0);\r\n    require(_affiliates.length == _amount.length);\r\n    for (uint256 i = 0; i < _affiliates.length; i++) {\r\n      affiliates[_affiliates[i]] = _amount[i];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @dev Claim reward collected through your affiliates\r\n   */\r\n  function claimReward() public {\r\n    if (affiliates[msg.sender] > 0) {\r\n      require(tkn.transfer(msg.sender, affiliates[msg.sender]));\r\n      affiliates[msg.sender] = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @dev Terminate the Affiliate contract and destroy it\r\n   */\r\n  function terminateContract() onlyOwner public {\r\n    uint256 amount = tkn.balanceOf(address(this));\r\n    require(tkn.transfer(owner, amount));\r\n    selfdestruct(owner);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"tkn\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"terminateContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_affiliates\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"addAffiliates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Affiliate","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0d56df6e02156cb96bf37826866b32286642257afc9cbc5ac80b284acf983e33"}]}