{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n// File: contracts/UidCheckerInterface.sol\r\n\r\ninterface UidCheckerInterface {\r\n\r\n  function isUid(\r\n    string _uid\r\n  )\r\n  public\r\n  pure returns (bool);\r\n\r\n}\r\n\r\n// File: contracts/UidCheckerForTwitter.sol\r\n\r\n/**\r\n * @title UidCheckerForTwitter\r\n * @author Francesco Sullo <francesco@sullo.co>\r\n * @dev Checks if a uid is a Twitter uid\r\n */\r\n\r\ncontract UidCheckerForTwitter\r\nis UidCheckerInterface\r\n{\r\n\r\n  string public fromVersion = \"1.0.0\";\r\n\r\n  function isUid(\r\n    string _uid\r\n  )\r\n  public\r\n  pure\r\n  returns (bool)\r\n  {\r\n    bytes memory uid = bytes(_uid);\r\n    if (uid.length == 0 || uid.length > 20) {\r\n      return false;\r\n    } else {\r\n      for (uint i = 0; i < uid.length; i++) {\r\n        if (uid[i] < 48 || uid[i] > 57) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"fromVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_uid\",\"type\":\"string\"}],\"name\":\"isUid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"UidCheckerForTwitter","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fde3da510fc6212d92d64a65b03540332ebcde00df0046fb0e5dd30f250ec6df"}]}