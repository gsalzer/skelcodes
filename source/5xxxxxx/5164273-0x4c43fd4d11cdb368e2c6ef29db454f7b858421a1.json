{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.18;\r\n\r\ncontract Ownable {\r\n\taddress public owner;\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\tfunction Ownable() {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) onlyOwner public {\r\n\t\trequire(newOwner != address(0));\r\n\t\tOwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t}\r\n}\r\n\r\nlibrary SafeMath {\r\n\tfunction mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a / b;\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\ncontract ERC20 {\r\n\tuint256 public totalSupply;\r\n\tfunction balanceOf(address who) public constant returns (uint256);\r\n\tfunction transfer(address to, uint256 value) public returns (bool);\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n\tfunction allowance(address owner, address spender) public constant returns (uint256);\r\n\tfunction transferFrom(address from, address to, uint256 value) public returns (bool);\r\n\tfunction approve(address spender, uint256 value) public returns (bool);\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract StandardToken is ERC20 {\r\n\tusing SafeMath for uint256;\r\n\r\n\tmapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tTransfer(msg.sender, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) public constant returns (uint256 balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\r\n\t\tuint256 _allowance = allowed[_from][msg.sender];\r\n\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tallowed[_from][msg.sender] = _allowance.sub(_value);\r\n\t\tTransfer(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool) {\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\tApproval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n}\r\n\r\ncontract T8EXToken is StandardToken {\r\n\tstring public constant name = \"T8EX Token\";\r\n    string public constant symbol = \"T8EX\";\r\n    uint8  public constant decimals = 18;\r\n\r\n\taddress public minter; \r\n\tuint    public tokenSaleEndTime; \r\n\r\n\t// token lockup for cornerstone investors\r\n\tmapping(address=>uint) public lockedBalanceCor; \r\n\tmapping(uint=>address) lockedBalanceCor_index;\r\n\tuint lockedBalanceCor_count;\r\n\r\n\t// token lockup for private investors\r\n\tmapping(address=>uint) public lockedBalancePri; \r\n\tmapping(uint=>address) lockedBalancePri_index;\r\n\tuint lockedBalancePri_count;\r\n\r\n\tmodifier onlyMinter {\r\n\t\trequire (msg.sender == minter);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier whenMintable {\r\n\t\trequire (now <= tokenSaleEndTime);\r\n\t\t_;\r\n\t}\r\n\r\n    modifier validDestination(address to) {\r\n        require(to != address(this));\r\n        _;\r\n    }\r\n\r\n\tfunction T8EXToken(address _minter, uint _tokenSaleEndTime) public {\r\n\t\tminter = _minter;\r\n\t\ttokenSaleEndTime = _tokenSaleEndTime;\r\n    }\r\n\r\n\tfunction transfer(address _to, uint _value)\r\n        public\r\n        validDestination(_to)\r\n        returns (bool) \r\n    {\r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n\tfunction transferFrom(address _from, address _to, uint _value)\r\n        public\r\n        validDestination(_to)\r\n        returns (bool) \r\n    {\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n\tfunction createToken(address _recipient, uint _value)\r\n\t\twhenMintable\r\n\t\tonlyMinter\r\n\t\treturns (bool)\r\n\t{\r\n\t\tbalances[_recipient] += _value;\r\n\t\ttotalSupply += _value;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Create an lockedBalance which cannot be traded until admin make it liquid.\r\n\t// Can only be called by crowdfund contract before the end time.\r\n\tfunction createLockedTokenCor(address _recipient, uint _value)\r\n\t\twhenMintable\r\n\t\tonlyMinter\r\n\t\treturns (bool) \r\n\t{\r\n\t\tlockedBalanceCor_index[lockedBalanceCor_count] = _recipient;\r\n\t\tlockedBalanceCor[_recipient] += _value;\r\n\t\tlockedBalanceCor_count++;\r\n\r\n\t\ttotalSupply += _value;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Make sender's locked balance liquid when called after lockout period.\r\n\tfunction makeLiquidCor()\r\n\t\tonlyMinter\r\n\t{\r\n\t\tfor (uint i=0; i<lockedBalanceCor_count; i++) {\r\n\t\t\taddress investor = lockedBalanceCor_index[i];\r\n\t\t\tbalances[investor] += lockedBalanceCor[investor];\r\n\t\t\tlockedBalanceCor[investor] = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t// Create an lockedBalance which cannot be traded until admin make it liquid.\r\n\t// Can only be called by crowdfund contract before the end time.\r\n\tfunction createLockedTokenPri(address _recipient, uint _value)\r\n\t\twhenMintable\r\n\t\tonlyMinter\r\n\t\treturns (bool) \r\n\t{\r\n\t\tlockedBalancePri_index[lockedBalancePri_count] = _recipient;\r\n\t\tlockedBalancePri[_recipient] += _value;\r\n\t\tlockedBalancePri_count++;\r\n\r\n\t\ttotalSupply += _value;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Make sender's locked balance liquid when called after lockout period.\r\n\tfunction makeLiquidPri()\r\n\t\tonlyMinter\r\n\t{\r\n\t\tfor (uint i=0; i<lockedBalancePri_count; i++) {\r\n\t\t\taddress investor = lockedBalancePri_index[i];\r\n\t\t\tbalances[investor] += lockedBalancePri[investor];\r\n\t\t\tlockedBalancePri[investor] = 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\ncontract T8EXTokenSale is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n\t// token allocation\r\n\tuint public constant TOTAL_T8EXTOKEN_SUPPLY  = 540000000;\r\n\tuint public constant ALLOC_TEAM             = 135000000e18;\r\n\tuint public constant ALLOC_RESERVED         =  54000000e18;\r\n\tuint public constant ALLOC_COMMUNITY        = 118800000e18;\r\n\tuint public constant ALLOC_ADVISOR          =  16200000e18;\r\n\tuint public constant ALLOC_SALE_CORNERSTONE =  32500000e18; \r\n\tuint public constant ALLOC_SALE_PRIVATE     = 120000000e18; \r\n\tuint public constant ALLOC_SALE_GENERAL     =  63500000e18; \r\n\r\n\t// crowdsale stage\r\n\tuint public constant STAGE1_TIME_END = 4 days;\r\n\tuint public constant STAGE2_TIME_END = 8 days;\r\n\tuint public constant STAGE3_TIME_END = 13 days;\r\n\r\n\t// Token sale rate from ETH to T8EX\r\n\tuint public constant RATE_CORNERSTONE  = 6500;\r\n\tuint public constant RATE_PRIVATE      = 6000;\r\n\tuint public constant RATE_CROWDSALE_S1 = 4500;\r\n\tuint public constant RATE_CROWDSALE_S2 = 4200;\r\n\tuint public constant RATE_CROWDSALE_S3 = 4000;\r\n\r\n\t// For token transfer\r\n\taddress public constant WALLET_T8EX_RESERVED  = 0x63cB2fB590d5eD47fBEFbBbF0CDda1c56D506f0A;\r\n\taddress public constant WALLET_T8EX_COMMUNITY = 0x1a0E0147acF86e7bFa773e90D9465D51C1c0a594;\r\n\taddress public constant WALLET_T8EX_TEAM      = 0x5e7658d850B1A050937ee088EB503243A345ffe6;\r\n\taddress public constant WALLET_T8EX_ADMIN     = 0x4Db76c3F8d0169ABa7aD5795dA1253231a09a22C;\r\n\r\n\t// For ether transfer\r\n\taddress private constant WALLET_ETH_T8EX  = 0xEE1B6C44DBb3b0d5e46C34542dC7718325ac4095;\r\n\taddress private constant WALLET_ETH_ADMIN = 0x782872fb9459FC0dbdf8c0EDb5fE3D5f214a6660;\r\n\r\n    T8EXToken public t8exToken; \r\n\r\n\tuint256 public presaleStartTime;\r\n    uint256 public publicStartTime;\r\n    uint256 public publicEndTime;\r\n\tbool public halted;\r\n\r\n\t// stat\r\n\tuint256 public totalT8EXSold_CORNERSTONE;\r\n\tuint256 public totalT8EXSold_PRIVATE;\r\n\tuint256 public totalT8EXSold_GENERAL;\r\n    uint256 public weiRaised;\r\n\tmapping(address=>uint256) public weiContributions;\r\n\r\n\t// whitelisting\r\n\tmapping(address=>bool) public whitelisted_Private;\r\n\tmapping(address=>bool) public whitelisted_Cornerstone;\r\n\tevent WhitelistedPrivateStatusChanged(address target, bool isWhitelisted);\r\n\tevent WhitelistedCornerstoneStatusChanged(address target, bool isWhitelisted);\r\n\r\n    event TokenPurchase(address indexed purchaser, uint256 value, uint256 amount);\r\n\r\n    function T8EXTokenSale(uint256 _presaleStartTime, uint256 _publicStartTime, uint256 _publicEndTime) {\r\n        presaleStartTime = _presaleStartTime;\r\n        publicStartTime = _publicStartTime;\r\n\t\tpublicEndTime = _publicEndTime;\r\n\r\n        t8exToken = new T8EXToken(address(this), publicEndTime);\r\n\t\tt8exToken.createToken(WALLET_T8EX_RESERVED, ALLOC_RESERVED);\r\n\t\tt8exToken.createToken(WALLET_T8EX_COMMUNITY, ALLOC_COMMUNITY);\r\n\t\tt8exToken.createToken(WALLET_T8EX_TEAM, ALLOC_TEAM);\r\n\t\tt8exToken.createToken(WALLET_T8EX_ADMIN, ALLOC_ADVISOR);\r\n    }\r\n\r\n\r\n    function changeWhitelistPrivateStatus(address _target, bool _isWhitelisted)\r\n        public\r\n        onlyOwner\r\n    {\r\n        whitelisted_Private[_target] = _isWhitelisted;\r\n        WhitelistedPrivateStatusChanged(_target, _isWhitelisted);\r\n    }\r\n\r\n    function changeWhitelistPrivateStatuses(address[] _targets, bool _isWhitelisted)\r\n        public\r\n        onlyOwner\r\n    {\r\n        for (uint i = 0; i < _targets.length; i++) {\r\n            changeWhitelistPrivateStatus(_targets[i], _isWhitelisted);\r\n        }\r\n    }\r\n\r\n\tfunction changeWhitelistCornerstoneStatus(address _target, bool _isWhitelisted)\r\n        public\r\n        onlyOwner\r\n    {\r\n        whitelisted_Cornerstone[_target] = _isWhitelisted;\r\n        WhitelistedCornerstoneStatusChanged(_target, _isWhitelisted);\r\n    }\r\n\r\n    function changeWhitelistCornerstoneStatuses(address[] _targets, bool _isWhitelisted)\r\n        public\r\n        onlyOwner\r\n    {\r\n        for (uint i = 0; i < _targets.length; i++) {\r\n            changeWhitelistCornerstoneStatus(_targets[i], _isWhitelisted);\r\n        }\r\n    }\r\n\r\n    function validPurchase() \r\n        internal \r\n        returns(bool) \r\n    {\r\n\t\tbool nonZeroPurchase = msg.value != 0;\r\n\t\tbool withinSalePeriod = now >= presaleStartTime && now <= publicEndTime;\r\n        bool withinPublicPeriod = now >= publicStartTime && now <= publicEndTime;\r\n\r\n\t\tbool whitelisted = whitelisted_Cornerstone[msg.sender] || whitelisted_Private[msg.sender];\r\n\t\tbool whitelistedCanBuy = whitelisted && withinSalePeriod;\r\n        \r\n        return nonZeroPurchase && (whitelistedCanBuy || withinPublicPeriod);\r\n    }\r\n\r\n\tfunction getPriceRate()\r\n\t\tconstant\r\n\t\treturns (uint)\r\n\t{\r\n\t\tif (now <= publicStartTime + STAGE1_TIME_END) {return RATE_CROWDSALE_S1;}\r\n\t\tif (now <= publicStartTime + STAGE2_TIME_END) {return RATE_CROWDSALE_S2;}\r\n\t\tif (now <= publicStartTime + STAGE3_TIME_END) {return RATE_CROWDSALE_S3;}\r\n\t\treturn 0;\r\n\t}\r\n\r\n    function () \r\n       payable \r\n    {\r\n        buyTokens();\r\n    }\r\n\r\n    function buyTokens() \r\n       payable \r\n    {\r\n\t\trequire(!halted);\r\n        require(validPurchase());\r\n\r\n        uint256 weiAmount = msg.value;\r\n\t\tuint256 purchaseTokens; \r\n\t\t\r\n\t\tif (whitelisted_Cornerstone[msg.sender]) {\r\n\t\t\tpurchaseTokens = weiAmount.mul(RATE_CORNERSTONE); \r\n\t\t\trequire(ALLOC_SALE_CORNERSTONE - totalT8EXSold_CORNERSTONE >= purchaseTokens); // buy only if enough supply\r\n\t\t\trequire(t8exToken.createLockedTokenCor(msg.sender, purchaseTokens));\r\n\t\t\ttotalT8EXSold_CORNERSTONE = totalT8EXSold_CORNERSTONE.add(purchaseTokens); \r\n\t\t} else if (whitelisted_Private[msg.sender]) {\r\n\t\t\tpurchaseTokens = weiAmount.mul(RATE_PRIVATE); \r\n\t\t\trequire(ALLOC_SALE_PRIVATE - totalT8EXSold_PRIVATE >= purchaseTokens); // buy only if enough supply\r\n\t\t\trequire(t8exToken.createLockedTokenPri(msg.sender, purchaseTokens));\r\n\t\t\ttotalT8EXSold_PRIVATE = totalT8EXSold_PRIVATE.add(purchaseTokens); \r\n\t\t} else {\r\n        \tpurchaseTokens = weiAmount.mul(getPriceRate()); \r\n\t\t\trequire(ALLOC_SALE_GENERAL - totalT8EXSold_GENERAL >= purchaseTokens); // buy only if enough supply\r\n\t\t\trequire(t8exToken.createToken(msg.sender, purchaseTokens));\r\n\t\t\ttotalT8EXSold_GENERAL = totalT8EXSold_GENERAL.add(purchaseTokens); \r\n\t\t}\r\n\r\n\t\tweiRaised = weiRaised.add(weiAmount);\r\n\t\tweiContributions[msg.sender] = weiContributions[msg.sender].add(weiAmount);\r\n\r\n\t\tTokenPurchase(msg.sender, weiAmount, purchaseTokens);\r\n\t\tforwardFunds();\r\n    }\r\n\r\n    function forwardFunds() \r\n       internal \r\n    {\r\n        WALLET_ETH_T8EX.transfer((msg.value).mul(98).div(100));\r\n\t\tWALLET_ETH_ADMIN.transfer((msg.value).mul(2).div(100));\r\n    }\r\n\r\n    function hasEnded() \r\n        public \r\n        constant \r\n        returns(bool) \r\n    {\r\n        return now > publicEndTime;\r\n    }\r\n\r\n\tfunction releaseTokenCornerstone()\r\n\t\tpublic\r\n\t\tonlyOwner\r\n\t{\r\n\t\trequire(hasEnded());\r\n\t\tt8exToken.makeLiquidCor();\r\n\t}\r\n\r\n\tfunction releaseTokenPrivate()\r\n\t\tpublic\r\n\t\tonlyOwner\r\n\t{\r\n\t\trequire(hasEnded());\r\n\t\tt8exToken.makeLiquidPri();\r\n\t}\r\n\r\n\tfunction toggleHalt(bool _halted)\r\n\t\tpublic\r\n\t\tonlyOwner\r\n\t{\r\n\t\thalted = _halted;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted_Private\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE_CROWDSALE_S2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targets\",\"type\":\"address[]\"},{\"name\":\"_isWhitelisted\",\"type\":\"bool\"}],\"name\":\"changeWhitelistCornerstoneStatuses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"weiContributions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalT8EXSold_GENERAL\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publicEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE_CROWDSALE_S3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_SALE_GENERAL\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalT8EXSold_PRIVATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_isWhitelisted\",\"type\":\"bool\"}],\"name\":\"changeWhitelistCornerstoneStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_RESERVED\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE_CROWDSALE_S1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOTAL_T8EXTOKEN_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"t8exToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publicStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"STAGE2_TIME_END\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted_Cornerstone\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_SALE_PRIVATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalT8EXSold_CORNERSTONE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"STAGE1_TIME_END\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseTokenCornerstone\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPriceRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WALLET_T8EX_ADMIN\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_halted\",\"type\":\"bool\"}],\"name\":\"toggleHalt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WALLET_T8EX_TEAM\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_TEAM\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_SALE_CORNERSTONE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"halted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_isWhitelisted\",\"type\":\"bool\"}],\"name\":\"changeWhitelistPrivateStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_ADVISOR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseTokenPrivate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"STAGE3_TIME_END\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WALLET_T8EX_RESERVED\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_COMMUNITY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE_PRIVATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targets\",\"type\":\"address[]\"},{\"name\":\"_isWhitelisted\",\"type\":\"bool\"}],\"name\":\"changeWhitelistPrivateStatuses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE_CORNERSTONE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WALLET_T8EX_COMMUNITY\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_presaleStartTime\",\"type\":\"uint256\"},{\"name\":\"_publicStartTime\",\"type\":\"uint256\"},{\"name\":\"_publicEndTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"WhitelistedPrivateStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"WhitelistedCornerstoneStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"T8EXTokenSale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000005a965370000000000000000000000000000000000000000000000000000000005aaa19f0000000000000000000000000000000000000000000000000000000005abb3d70","Library":"","SwarmSource":"bzzr://12ab31f8755d10e7a109fecccd22d5d830fee0afd8e2dc2fb382545f2cda3a86"}]}