{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract Utils {\r\n    function Utils() public {    }\r\n    modifier greaterThanZero(uint256 _amount) { require(_amount > 0);    _;   }\r\n    modifier validAddress(address _address) { require(_address != 0x0);  _;   }\r\n    modifier notThis(address _address) { require(_address != address(this));  _; }\r\n    function safeAdd(uint256 _x, uint256 _y) internal pure returns (uint256) { uint256 z = _x + _y;  assert(z >= _x);  return z;  }\r\n    function safeSub(uint256 _x, uint256 _y) internal pure returns (uint256) { assert(_x >= _y);  return _x - _y;   }\r\n    function safeMul(uint256 _x, uint256 _y) internal pure returns (uint256) { uint256 z = _x * _y; assert(_x == 0 || z / _x == _y); return z; }\r\n}\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() public {  owner = msg.sender;  }\r\n    modifier onlyOwner {  require (msg.sender == owner);    _;   }\r\n    function transferOwnership(address newOwner) onlyOwner public{  owner = newOwner;  }\r\n}\r\n\r\ncontract CMCLToken is owned, Utils {\r\n    string public name; \r\n    string public symbol; \r\n    uint8 public decimals = 18;\r\n    uint256 public totalSupply; \r\n\r\n    mapping (address => uint256) public balanceOf;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value); \r\n    event Burn(address indexed from, uint256 value);  \r\n    \r\n    function CMCLToken(uint256 initialSupply, string tokenName, string tokenSymbol) public {\r\n\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);  \r\n        balanceOf[msg.sender] = totalSupply; \r\n\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint256 _value) internal {\r\n\r\n      require(_to != 0x0); \r\n      require(balanceOf[_from] >= _value); \r\n      require(balanceOf[_to] + _value > balanceOf[_to]); \r\n      \r\n      uint256 previousBalances = safeAdd(balanceOf[_from], balanceOf[_to]); \r\n      balanceOf[_from] = safeSub(balanceOf[_from], _value); \r\n      balanceOf[_to] = safeAdd(balanceOf[_to], _value); \r\n      emit Transfer(_from, _to, _value);\r\n      assert(balanceOf[_from] + balanceOf[_to] == previousBalances); \r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public {   _transfer(msg.sender, _to, _value);   }\r\n\r\n    function burn(uint256 _value) public onlyOwner returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value); \r\n\r\n\t\tbalanceOf[msg.sender] -= _value; \r\n        totalSupply -= _value; \r\n        emit Burn(msg.sender, _value);\r\n\t\t\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"CMCLToken","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000001a13b8600000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000009434d434c546f6b656e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009434d434c546f6b656e0000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://13def839e9e83b811368b315fef98489650cdce5f08b6d4981825af9363b6e0a"}]}