{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n/*\r\nGame: Dragon Ball Z\r\nDomain: EtherDragonBall.com\r\n*/\r\n\r\ncontract DragonBallZ {\r\n\r\n\taddress contractCreator = 0x23B385c822381BE63C9f45a3E45266DD32D52c43;\r\n    address devFeeAddress = 0x3bdC0D871731D08D1c1c793735372AB16397Cd61;\r\n\r\n\tstruct Hero {\r\n\t\tstring heroName;\r\n\t\taddress ownerAddress;\r\n\t\tuint256 currentPrice;\r\n\t}\r\n\tHero[] heroes;\r\n\r\n\tmodifier onlyContractCreator() {\r\n        require (msg.sender == contractCreator);\r\n        _;\r\n    }\r\n\r\n    bool isPaused;\r\n    \r\n    \r\n    /*\r\n    We use the following functions to pause and unpause the game.\r\n    */\r\n    function pauseGame() public onlyContractCreator {\r\n        isPaused = true;\r\n    }\r\n    function unPauseGame() public onlyContractCreator {\r\n        isPaused = false;\r\n    }\r\n    function GetGamestatus() public view returns(bool) {\r\n       return(isPaused);\r\n    }\r\n\r\n    /*\r\n    This function allows users to purchase Dragon Ball Z hero. \r\n    The price is automatically multiplied by 2 after each purchase.\r\n    Users can purchase multiple heroes.\r\n    */\r\n\tfunction purchaseHero(uint _heroId) public payable {\r\n\t\trequire(msg.value == heroes[_heroId].currentPrice);\r\n\t\trequire(isPaused == false);\r\n\r\n\t\t// Calculate the 10% value\r\n\t\tuint256 devFee = (msg.value / 10);\r\n\r\n\t\t// Calculate the hero owner commission on this sale & transfer the commission to the owner.\t\t\r\n\t\tuint256 commissionOwner = msg.value - devFee; // => 90%\r\n\t\theroes[_heroId].ownerAddress.transfer(commissionOwner);\r\n\r\n\t\t// Transfer the 10% commission to the developer\r\n\t\tdevFeeAddress.transfer(devFee); // => 10% \t\t\t\t\t\t\r\n\r\n\t\t// Update the hero owner and set the new price\r\n\t\theroes[_heroId].ownerAddress = msg.sender;\r\n\t\theroes[_heroId].currentPrice = mul(heroes[_heroId].currentPrice, 2);\r\n\t}\r\n\t\r\n\t/*\r\n\tThis function can be used by the owner of a hero to modify the price of its hero.\r\n\tHe can make the price lesser than the current price only.\r\n\t*/\r\n\tfunction modifyCurrentHeroPrice(uint _heroId, uint256 _newPrice) public {\r\n\t    require(_newPrice > 0);\r\n\t    require(heroes[_heroId].ownerAddress == msg.sender);\r\n\t    require(_newPrice < heroes[_heroId].currentPrice);\r\n\t    heroes[_heroId].currentPrice = _newPrice;\r\n\t}\r\n\t\r\n\t// This function will return all of the details of the Dragon Ball Z heroes\r\n\tfunction getHeroDetails(uint _heroId) public view returns (\r\n        string heroName,\r\n        address ownerAddress,\r\n        uint256 currentPrice\r\n    ) {\r\n        Hero storage _hero = heroes[_heroId];\r\n\r\n        heroName = _hero.heroName;\r\n        ownerAddress = _hero.ownerAddress;\r\n        currentPrice = _hero.currentPrice;\r\n    }\r\n    \r\n    // This function will return only the price of a specific hero\r\n    function getHeroCurrentPrice(uint _heroId) public view returns(uint256) {\r\n        return(heroes[_heroId].currentPrice);\r\n    }\r\n    \r\n    // This function will return only the owner address of a specific hero\r\n    function getHeroOwner(uint _heroId) public view returns(address) {\r\n        return(heroes[_heroId].ownerAddress);\r\n    }\r\n    \r\n    \r\n    /**\r\n    @dev Multiplies two numbers, throws on overflow. => From the SafeMath library\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n          return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    @dev Integer division of two numbers, truncating the quotient. => From the SafeMath library\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n    \r\n\t// This function will be used to add a new hero by the contract creator\r\n\tfunction addHero(string heroName, address ownerAddress, uint256 currentPrice) public onlyContractCreator {\r\n        heroes.push(Hero(heroName,ownerAddress,currentPrice));\r\n    }\r\n\t\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"GetGamestatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_heroId\",\"type\":\"uint256\"}],\"name\":\"getHeroCurrentPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pauseGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_heroId\",\"type\":\"uint256\"}],\"name\":\"getHeroOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_heroId\",\"type\":\"uint256\"}],\"name\":\"getHeroDetails\",\"outputs\":[{\"name\":\"heroName\",\"type\":\"string\"},{\"name\":\"ownerAddress\",\"type\":\"address\"},{\"name\":\"currentPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"heroName\",\"type\":\"string\"},{\"name\":\"ownerAddress\",\"type\":\"address\"},{\"name\":\"currentPrice\",\"type\":\"uint256\"}],\"name\":\"addHero\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_heroId\",\"type\":\"uint256\"},{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"modifyCurrentHeroPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_heroId\",\"type\":\"uint256\"}],\"name\":\"purchaseHero\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unPauseGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DragonBallZ","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cf9d28b10341e8d9400a24a1847072f14476404765e67d0a72889c268ccfb8c6"}]}