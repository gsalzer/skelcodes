{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract OneToken {\r\n    uint256 public currentHodlerId;\r\n    address public currentHodler;\r\n    address[] public previousHodlers;\r\n    \r\n    string[] public messages;\r\n    uint256 public price;\r\n    \r\n    event Purchased(\r\n        uint indexed _buyerId,\r\n        address _buyer\r\n    );\r\n\r\n    mapping (address => uint) public balance;\r\n\r\n    constructor() public {\r\n        currentHodler = msg.sender;\r\n        currentHodlerId = 0;\r\n        messages.push(\"Sky is the limit!\");\r\n        price = 8 finney;\r\n        emit Purchased(currentHodlerId, currentHodler);\r\n    }\r\n\r\n    function buy(string message) public payable returns (bool) {\r\n        require (msg.value >= price);\r\n        \r\n        if (msg.value > price) {\r\n            balance[msg.sender] += msg.value - price;\r\n        }\r\n        uint256 previousHodlersCount = previousHodlers.length;\r\n        for (uint256 i = 0; i < previousHodlersCount; i++) {\r\n            balance[previousHodlers[i]] += (price * 8 / 100) / previousHodlersCount;\r\n        }\r\n        balance[currentHodler] += price * 92 / 100;\r\n\r\n        price = price * 120 / 100;  \r\n        previousHodlers.push(currentHodler);\r\n        messages.push(message);\r\n        \r\n        currentHodler = msg.sender;\r\n        currentHodlerId = previousHodlersCount + 1;\r\n        emit Purchased(currentHodlerId, currentHodler);\r\n    }\r\n\r\n    function withdraw() public {\r\n        uint amount = balance[msg.sender];\r\n        balance[msg.sender] = 0;\r\n        msg.sender.transfer(amount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"messages\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"message\",\"type\":\"string\"}],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"previousHodlers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentHodlerId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentHodler\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_buyerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"Purchased\",\"type\":\"event\"}]","ContractName":"OneToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2af1b9853dc7b9d831c9ec8679644fe74940bcf3d5e55b0ec408cac583061bae"}]}