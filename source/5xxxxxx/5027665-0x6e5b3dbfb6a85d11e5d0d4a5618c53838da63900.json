{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n// LeeSungCoin Made By PinkCherry - insanityskan@gmail.com\r\n// LeeSungCoin Request Question - koreacoinsolution@gmail.com\r\n\r\nlibrary SafeMath\r\n{\r\n  \tfunction mul(uint256 a, uint256 b) internal pure returns (uint256)\r\n    {\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\r\n\t\treturn c;\r\n  \t}\r\n\r\n  \tfunction div(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a / b;\r\n\r\n\t\treturn c;\r\n  \t}\r\n\r\n  \tfunction sub(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tassert(b <= a);\r\n\r\n\t\treturn a - b;\r\n  \t}\r\n\r\n  \tfunction add(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\r\n\t\treturn c;\r\n  \t}\r\n}\r\n\r\n\r\ncontract OwnerHelper\r\n{\r\n  \taddress public owner;\r\n\r\n  \tevent OwnerTransferPropose(address indexed _from, address indexed _to);\r\n\r\n  \tmodifier onlyOwner\r\n\t{\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n  \t}\r\n\r\n  \tfunction OwnerHelper() public\r\n\t{\r\n\t\towner = msg.sender;\r\n  \t}\r\n\r\n  \tfunction transferOwnership(address _to) onlyOwner public\r\n\t{\r\n            require(_to != owner);\r\n    \t\trequire(_to != address(0x0));\r\n    \t\towner = _to;\r\n    \t\tOwnerTransferPropose(owner, _to);\r\n  \t}\r\n\r\n}\r\n\r\n\r\ncontract ERC20Interface\r\n{\r\n  \tevent Transfer(address indexed _from, address indexed _to, uint _value);\r\n  \tevent Approval(address indexed _owner, address indexed _spender, uint _value);\r\n\tevent Burned(address indexed _burner, uint _value);\r\n\r\n  \tfunction totalSupply() public constant returns (uint);\r\n  \tfunction balanceOf(address _owner) public constant returns (uint balance);\r\n  \tfunction transfer(address _to, uint _value) public returns (bool success);\r\n  \tfunction transferFrom(address _from, address _to, uint _value) public returns (bool success);\r\n  \tfunction approve(address _spender, uint _value) public returns (bool success);\r\n  \tfunction allowance(address _owner, address _spender) public constant returns (uint remaining);\r\n\tfunction burn(uint _burnAmount) public returns (bool success);\r\n}\r\n\r\n\r\ncontract ERC20Token is ERC20Interface, OwnerHelper\r\n{\r\n  \tusing SafeMath for uint;\r\n\r\n  \tuint public tokensIssuedTotal = 0;\r\n  \taddress public constant burnAddress = 0;\r\n\r\n  \tmapping(address => uint) balances;\r\n  \tmapping(address => mapping (address => uint)) allowed;\r\n\r\n  \tfunction totalSupply() public constant returns (uint)\r\n\t{\r\n\t\treturn tokensIssuedTotal;\r\n  \t}\r\n\r\n  \tfunction balanceOf(address _owner) public constant returns (uint balance)\r\n\t{\r\n\t\treturn balances[_owner];\r\n  \t}\r\n\r\n\tfunction transfer(address _to, uint _amount) public returns (bool success)\r\n\t{\r\n\t\trequire( balances[msg.sender] >= _amount );\r\n\r\n\t    balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n\t\tbalances[_to]        = balances[_to].add(_amount);\r\n\r\n\t\tTransfer(msg.sender, _to, _amount);\r\n    \r\n\t\treturn true;\r\n  \t}\r\n\r\n  \tfunction approve(address _spender, uint _amount) public returns (bool success)\r\n\t{\r\n\t\trequire ( balances[msg.sender] >= _amount );\r\n\r\n\t\tallowed[msg.sender][_spender] = _amount;\r\n    \t\t\r\n\t\tApproval(msg.sender, _spender, _amount);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n  \tfunction transferFrom(address _from, address _to, uint _amount) public returns (bool success)\r\n\t{\r\n\t\trequire( balances[_from] >= _amount );\r\n\t\trequire( allowed[_from][msg.sender] >= _amount );\r\n\t\tbalances[_from]            = balances[_from].sub(_amount);\r\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n\t\tbalances[_to]              = balances[_to].add(_amount);\r\n\r\n\t\tTransfer(_from, _to, _amount);\r\n\t\treturn true;\r\n  \t}\r\n\r\n  \tfunction allowance(address _owner, address _spender) public constant returns (uint remaining)\r\n\t{\r\n\t\treturn allowed[_owner][_spender];\r\n  \t}\r\n\r\n\tfunction burn(uint _burnAmount) public returns (bool success)\r\n\t{\r\n\t\taddress burner = msg.sender;\r\n\t\tbalances[burner] = balances[burner].sub(_burnAmount);\r\n\t\ttokensIssuedTotal = tokensIssuedTotal.sub(_burnAmount);\r\n\t\tBurned(burner, _burnAmount);\r\n\t\tTransfer(burner, burnAddress, _burnAmount);\r\n\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\ncontract LeeSungCoin is ERC20Token\r\n{\r\n\tuint constant E18 = 10**18;\r\n\r\n  \tstring public constant name \t= \"Lee Sung Coin\";\r\n  \tstring public constant symbol \t= \"LSC\";\r\n  \tuint public constant decimals \t= 18;\r\n\r\n\taddress public wallet;\r\n\taddress public adminWallet;\r\n\r\n\tuint public constant totalCoinCap   = 200000000 * E18;\r\n\tuint public constant icoCoinCap     = 140000000 * E18;\r\n\tuint public constant mktCoinCap     =  60000000 * E18;\r\n\tuint public constant preSaleCoinCap =  48000000 * E18;\r\n\r\n\tuint public coinPerEth = 20000 * E18;\r\n\r\n\tuint public constant privateSaleBonus\t = 30;\r\n\tuint public constant preSaleFirstBonus\t = 20;\r\n\tuint public constant preSaleSecondBonus  = 15;\r\n\tuint public constant mainSaleFirstBonus\t = 5;\r\n\tuint public constant mainSaleSecondBonus = 0;\r\n\r\n  \tuint public constant preSaleFirstStartDate = 1517788800; // 2018-02-05 00:00 UTC\r\n  \tuint public constant preSaleFirstEndDate   = 1518307200; // 2018-02-11 00:00 UTC\r\n\r\n  \tuint public constant preSaleSecondStartDate = 1518393600; // 2018-02-12 00:00 UTC\r\n  \tuint public constant preSaleSecondEndDate   = 1518912000; // 2018-02-18 00:00 UTC\r\n\r\n\r\n  \tuint public constant mainSaleFirstStartDate = 1519603200; // 2018-02-26 00:00 UTC\r\n  \tuint public constant mainSaleFirstEndDate   = 1520121600; // 2018-03-04 00:00 UTC\r\n\r\n  \tuint public constant mainSaleSecondStartDate = 1520208000; // 2018-03-05 00:00 UTC\r\n  \tuint public constant mainSaleSecondEndDate   = 1520726400; // 2018-03-11 00:00 UTC\r\n\r\n\tuint public constant transferCooldown = 2 days;\r\n\r\n\tuint public constant preSaleMinEth  = 1 ether;\r\n\tuint public constant mainSaleMinEth =  1 ether / 2; // 0.5 Ether\r\n\r\n  \tuint public icoEtherReceived = 0; // Ether actually received by the contract\r\n\r\n    uint public coinIssuedTotal     = 0;\r\n  \tuint public coinIssuedIco       = 0;\r\n  \tuint public coinIssuedMkt       = 0;\r\n\tuint public coinIssuedPrivate   = 0;\r\n\t\r\n\tuint public coinBurnIco = 0;\r\n\tuint public coinBurnMkt = 0;\r\n\r\n  \tmapping(address => uint) public icoEtherContributed;\r\n  \tmapping(address => uint) public icoCoinReceived;\r\n  \tmapping(address => bool) public refundClaimed;\r\n  \tmapping(address => bool) public coinLocked;\r\n  \t\r\n \tevent WalletChange(address _newWallet);\r\n  \tevent AdminWalletChange(address _newAdminWallet);\r\n  \tevent CoinMinted(address indexed _owner, uint _tokens, uint _balance);\r\n  \tevent CoinIssued(address indexed _owner, uint _tokens, uint _balance, uint _etherContributed);\r\n  \tevent Refund(address indexed _owner, uint _amount, uint _tokens);\r\n  \tevent LockRemove(address indexed _participant);\r\n\tevent WithDraw(address indexed _to, uint _amount);\r\n\tevent OwnerReclaim(address indexed _from, address indexed _owner, uint _amount);\r\n\r\n  \tfunction LeeSungCoin() public\r\n\t{\r\n\t\trequire( icoCoinCap + mktCoinCap == totalCoinCap );\r\n\t\twallet = owner;\r\n\t\tadminWallet = owner;\r\n  \t}\r\n\r\n  \tfunction () payable public\r\n\t{\r\n    \tbuyCoin();\r\n  \t}\r\n  \t\r\n  \tfunction atNow() public constant returns (uint)\r\n\t{\r\n\t\treturn now;\r\n  \t}\r\n\r\n  \tfunction buyCoin() private\r\n\t{\r\n\t\tuint nowTime = atNow();\r\n\r\n\t\tuint saleTime = 0; // 1 : preSaleFirst, 2 : preSaleSecond, 3 : mainSaleFirst, 4 : mainSaleSecond\r\n\r\n\t\tuint minEth = 0;\r\n\t\tuint maxEth = 300 ether;\r\n\r\n\t\tuint coins = 0;\r\n\t\tuint coinBonus = 0;\r\n\t\tuint coinCap = 0;\r\n\r\n\t\tif (nowTime > preSaleFirstStartDate && nowTime < preSaleFirstEndDate)\r\n\t\t{\r\n\t\t\tsaleTime = 1;\r\n\t\t\tminEth = preSaleMinEth;\r\n\t\t\tcoinBonus = preSaleFirstBonus;\r\n\t\t\tcoinCap = preSaleCoinCap;\r\n\t\t}\r\n\r\n\t\tif (nowTime > preSaleSecondStartDate && nowTime < preSaleSecondEndDate)\r\n\t\t{\r\n\t\t\tsaleTime = 2;\r\n\t\t\tminEth = preSaleMinEth;\r\n\t\t\tcoinBonus = preSaleSecondBonus;\r\n\t\t\tcoinCap = preSaleCoinCap;\r\n\t\t}\r\n\r\n\t\tif (nowTime > mainSaleFirstStartDate && nowTime < mainSaleFirstEndDate)\r\n\t\t{\r\n\t\t\tsaleTime = 3;\r\n\t\t\tminEth = mainSaleMinEth;\r\n\t\t\tcoinBonus = mainSaleFirstBonus;\r\n\t\t\tcoinCap = icoCoinCap;\r\n\t\t}\r\n\r\n\t\tif (nowTime > mainSaleSecondStartDate && nowTime < mainSaleSecondEndDate)\r\n\t\t{\r\n\t\t\tsaleTime = 4;\r\n\t\t\tminEth = mainSaleMinEth;\r\n\t\t\tcoinBonus = mainSaleSecondBonus;\r\n\t\t\tcoinCap = icoCoinCap;\r\n\t\t}\r\n\t\t\r\n\t\trequire( saleTime >= 1 && saleTime <= 4 );\r\n\t\trequire( msg.value >= minEth );\r\n\t\trequire( icoEtherContributed[msg.sender].add(msg.value) <= maxEth );\r\n\r\n\t\tcoins = coinPerEth.mul(msg.value) / 1 ether;\r\n      \tcoins = coins.mul(100 + coinBonus) / 100;\r\n\r\n\t\trequire( coinIssuedIco.add(coins) <= coinCap );\r\n\r\n\t\tbalances[msg.sender]        = balances[msg.sender].add(coins);\r\n\t    icoCoinReceived[msg.sender] = icoCoinReceived[msg.sender].add(coins);\r\n\t\tcoinIssuedIco               = coinIssuedIco.add(coins);\r\n\t\ttokensIssuedTotal           = tokensIssuedTotal.add(coins);\r\n    \r\n\t\ticoEtherReceived                = icoEtherReceived.add(msg.value);\r\n\t\ticoEtherContributed[msg.sender] = icoEtherContributed[msg.sender].add(msg.value);\r\n    \r\n\t\tcoinLocked[msg.sender] = true;\r\n    \r\n\t\tTransfer(0x0, msg.sender, coins);\r\n\t\tCoinIssued(msg.sender, coins, balances[msg.sender], msg.value);\r\n\r\n\t\twallet.transfer(this.balance);\r\n  \t}\r\n\r\n \tfunction isTransferable() public constant returns (bool transferable)\r\n\t{\r\n\t\tif ( atNow() < mainSaleSecondEndDate + transferCooldown )\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n  \t}\r\n\r\n\tfunction coinLockRemove(address _participant) public\r\n\t{\r\n\t\trequire( msg.sender == adminWallet || msg.sender == owner );\r\n\t\tcoinLocked[_participant] = false;\r\n\t\tLockRemove(_participant);\r\n  \t}\r\n\r\n\tfunction coinLockRmoveMultiple(address[] _participants) public\r\n\t{\r\n\t\trequire( msg.sender == adminWallet || msg.sender == owner );\r\n    \t\t\r\n\t\tfor (uint i = 0; i < _participants.length; i++)\r\n\t\t{\r\n  \t\t\tcoinLocked[_participants[i]] = false;\r\n  \t\t\tLockRemove(_participants[i]);\r\n\t\t}\r\n  \t}\r\n\r\n  \tfunction changeWallet(address _wallet) onlyOwner public\r\n\t{\r\n    \t\trequire( _wallet != address(0x0) );\r\n    \t\twallet = _wallet;\r\n    \t\tWalletChange(wallet);\r\n  \t}\r\n\r\n  \tfunction changeAdminWallet(address _wallet) onlyOwner public\r\n\t{\r\n    \t\trequire( _wallet != address(0x0) );\r\n    \t\tadminWallet = _wallet;\r\n    \t\tAdminWalletChange(adminWallet);\r\n  \t}\r\n\r\n  \tfunction mintMarketing(address _participant, uint _amount) onlyOwner public\r\n\t{\r\n\t\tuint coins = _amount * E18;\r\n\t\t\r\n\t\trequire( coins <= mktCoinCap.sub(coinIssuedMkt) );\r\n\t\t\r\n\t\tbalances[_participant] = balances[_participant].add(coins);\r\n\t\t\r\n\t\tcoinIssuedMkt   = coinIssuedMkt.add(coins);\r\n\t\tcoinIssuedTotal = coinIssuedTotal.add(coins);\r\n\t\t\r\n\t\tcoinLocked[_participant] = true;\r\n\t\t\r\n\t\tTransfer(0x0, _participant, coins);\r\n\t\tCoinMinted(_participant, coins, balances[_participant]);\r\n  \t}\r\n\r\n  \tfunction mintPrivate(address _participant, uint _etherValue) onlyOwner public\r\n\t{\r\n\t\tuint coins = coinPerEth.mul(_etherValue);\r\n      \tcoins = coins.mul(100 + privateSaleBonus) / 100;\r\n\r\n\t\trequire( coins <= icoCoinCap.sub(coinIssuedIco) );\r\n\t\trequire( atNow() < preSaleFirstStartDate );\r\n\r\n\t\tbalances[_participant] = balances[_participant].add(coins);\r\n\r\n\t\tcoinIssuedPrivate   = coinIssuedPrivate.add(coins);\r\n\t\tcoinIssuedIco       = coinIssuedIco.add(coins);\r\n\t\tcoinIssuedTotal     = coinIssuedTotal.add(coins);\r\n\r\n\t\tcoinLocked[_participant] = true;\r\n\t\tTransfer(0x0, _participant, coins);\r\n\t\tCoinMinted(_participant, coins, balances[_participant]);\r\n  \t}\r\n  \t\r\n  \tfunction ownerWithdraw() external onlyOwner\r\n\t{\r\n\t\tuint amount = this.balance;\r\n\t\twallet.transfer(amount);\r\n\t\tWithDraw(msg.sender, amount);\r\n  \t}\r\n  \t\r\n  \tfunction transferAnyERC20Token(address tokenAddress, uint amount) onlyOwner public returns (bool success)\r\n\t{\r\n  \t\treturn ERC20Interface(tokenAddress).transfer(owner, amount);\r\n  \t}\r\n  \t\r\n  \tfunction transfer(address _to, uint _amount) public returns (bool success)\r\n\t{\r\n\t\trequire( isTransferable() );\r\n\t\trequire( coinLocked[msg.sender] == false );\r\n\t\trequire( coinLocked[_to] == false );\r\n\t\treturn super.transfer(_to, _amount);\r\n  \t}\r\n  \t\r\n  \tfunction transferFrom(address _from, address _to, uint _amount) public returns (bool success)\r\n\t{\r\n\t\trequire( isTransferable() );\r\n\t\trequire( coinLocked[_from] == false );\r\n\t\trequire( coinLocked[_to] == false );\r\n\t\treturn super.transferFrom(_from, _to, _amount);\r\n  \t}\r\n\r\n  \tfunction transferMultiple(address[] _addresses, uint[] _amounts) external\r\n  \t{\r\n\t\trequire( isTransferable() );\r\n\t\trequire( coinLocked[msg.sender] == false );\r\n\t\trequire( _addresses.length == _amounts.length );\r\n\t\t\r\n\t\tfor (uint i = 0; i < _addresses.length; i++)\r\n\t\t{\r\n  \t\t\tif (coinLocked[_addresses[i]] == false) \r\n\t\t\t{\r\n\t\t\t\tsuper.transfer(_addresses[i], _amounts[i]);\r\n\t\t\t}\r\n\t\t}\r\n  \t}\r\n\r\n  \tfunction reclaimFunds() external\r\n\t{\r\n\t\tuint coins;\r\n\t\tuint amount;\r\n\r\n\t\trequire( atNow() > mainSaleSecondEndDate );\r\n\t\trequire( !refundClaimed[msg.sender] );\r\n\t\trequire( icoEtherContributed[msg.sender] > 0 );\r\n\r\n\t\tcoins = icoCoinReceived[msg.sender];\r\n\t\tamount = icoEtherContributed[msg.sender];\r\n\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(coins);\r\n\t\ttokensIssuedTotal    = tokensIssuedTotal.sub(coins);\r\n\r\n\t\trefundClaimed[msg.sender] = true;\r\n\r\n\t\tmsg.sender.transfer(amount);\r\n\r\n\t\tTransfer(msg.sender, 0x0, coins);\r\n\t\tRefund(msg.sender, amount, coins);\r\n  \t}\r\n  \t\r\n    function transferToOwner(address _from) onlyOwner public\r\n    {\r\n\t\trequire( coinLocked[_from] == false );\r\n        uint amount = balanceOf(_from);\r\n        \r\n        balances[_from] = balances[_from].sub(amount);\r\n        balances[owner] = balances[owner].add(amount);\r\n        \r\n        Transfer(_from, owner, amount);\r\n        OwnerReclaim(_from, owner, amount);\r\n    }\r\n\r\n\tfunction burnCoins(uint _icoAmount, uint _mktAmount) onlyOwner public returns (bool success)\r\n\t{\r\n\t    uint icoCoins = _icoAmount * E18;\r\n\t    uint mktCoins = _mktAmount * E18;\r\n\t    \r\n\t    uint totalBurnCoins = 0;\r\n\t    totalBurnCoins = totalBurnCoins.add(icoCoins);\r\n\t    totalBurnCoins = totalBurnCoins.add(mktCoins);\r\n\t    \r\n\t    coinBurnIco = coinBurnIco.add(icoCoins);\r\n\t    coinBurnMkt = coinBurnMkt.add(mktCoins);\r\n\t    \r\n\t\treturn super.burn(totalBurnCoins);\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"icoCoinReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoCoinCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_icoAmount\",\"type\":\"uint256\"},{\"name\":\"_mktAmount\",\"type\":\"uint256\"}],\"name\":\"burnCoins\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coinIssuedTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coinBurnIco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isTransferable\",\"outputs\":[{\"name\":\"transferable\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleSecondEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleMinEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"icoEtherContributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"},{\"name\":\"_etherValue\",\"type\":\"uint256\"}],\"name\":\"mintPrivate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCoinCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_burnAmount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownerWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mktCoinCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleFirstStartDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"changeAdminWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleSecondEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleSecondBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleSecondStartDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleFirstStartDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleFirstEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participants\",\"type\":\"address[]\"}],\"name\":\"coinLockRmoveMultiple\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coinIssuedMkt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferCooldown\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleFirstBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintMarketing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleSecondStartDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"transferToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"atNow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"coinLockRemove\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensIssuedTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleMinEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coinIssuedPrivate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"privateSaleBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"changeWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferMultiple\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleFirstEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coinIssuedIco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleFirstBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"refundClaimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"coinLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reclaimFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coinPerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coinBurnMkt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleSecondBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEtherReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleCoinCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"WalletChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newAdminWallet\",\"type\":\"address\"}],\"name\":\"AdminWalletChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"CoinMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_etherContributed\",\"type\":\"uint256\"}],\"name\":\"CoinIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"LockRemove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"WithDraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"OwnerReclaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnerTransferPropose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"}]","ContractName":"LeeSungCoin","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7882a0fa956298fa2e89bd035bd38354bc7b3d1fb311fd4dbb6888b1eb91266e"}]}