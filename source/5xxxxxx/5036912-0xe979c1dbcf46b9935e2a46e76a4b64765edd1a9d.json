{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract Bills\r\n{\r\n    string public name          = \"Bills\";\r\n    string public symbol        = \"BLS\";\r\n    uint public totalSupply     = 3000000;\r\n    uint public decimals        = 0;\r\n    uint public tokenPrice;\r\n    \r\n    address private Owner;\r\n    \r\n    uint ICOTill   = 1523145601;\r\n\tuint ICOStart  = 1520467201;\r\n    \r\n    mapping (address => uint) public balanceOf;\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    \r\n    modifier onlyModerator()\r\n    {\r\n        require(msg.sender == moderators[msg.sender].Address || msg.sender == Owner);\r\n        _;\r\n    }\r\n    \r\n    modifier onlyOwner()\r\n    {\r\n        require(msg.sender == Owner);\r\n        _;\r\n    }\r\n    \r\n    modifier isICOend()\r\n    {\r\n        require(now >= ICOTill);\r\n        _;\r\n    }\r\n    \r\n    function Bills() public\r\n    {\r\n        name                    = name;\r\n        symbol                  = symbol;\r\n        totalSupply             = totalSupply;\r\n        decimals                = decimals;\r\n        \r\n        balanceOf[this]         = 2800000;\r\n\t\tbalanceOf[msg.sender]   = 200000;\r\n        Owner                   = msg.sender;\r\n    }\r\n    \r\n    struct Advert\r\n    {\r\n        uint BoardId;\r\n        uint PricePerDay;\r\n        uint MaxDays;\r\n        address Advertiser;\r\n        string AdvertSrc;\r\n        uint Till;\r\n        uint AddTime;\r\n        uint SpentTokens;\r\n        string Status;\r\n        bool AllowLeasing;\r\n    }\r\n    \r\n    struct Moderator\r\n    {\r\n        address Address;\r\n    }\r\n    \r\n    mapping (uint => Advert) info;\r\n    \r\n    mapping (address => Moderator) moderators;\r\n    \r\n    uint[] Adverts;\r\n    address[] Moderators;\r\n    \r\n    function() public payable\r\n    {\r\n        require(now >= ICOStart || now >= ICOTill);\r\n        \r\n        if(now >= ICOStart && now <= ICOTill)\r\n        {\r\n            require(\r\n                msg.value == 100000000000000000 || msg.value == 300000000000000000 || msg.value == 500000000000000000 || msg.value == 800000000000000000 || \r\n                msg.value == 1000000000000000000 || msg.value == 3000000000000000000 || msg.value == 5000000000000000000\r\n            );\r\n            \r\n            if(msg.value == 100000000000000000)\r\n            {\r\n                require(balanceOf[this] >= 31);\r\n                balanceOf[msg.sender] += 31;\r\n                balanceOf[this] -= 31;\r\n                Transfer(this, msg.sender, 31);\r\n            }\r\n            if(msg.value == 300000000000000000)\r\n            {\r\n                require(balanceOf[this] >= 95);\r\n                balanceOf[msg.sender] += 95;\r\n                balanceOf[this] -= 95;\r\n                Transfer(this, msg.sender, 95);\r\n            }\r\n            if(msg.value == 500000000000000000)\r\n            {\r\n                require(balanceOf[this] >= 160);\r\n                balanceOf[msg.sender] += 160;\r\n                balanceOf[this] -= 160;\r\n                Transfer(this, msg.sender, 160);\r\n            }\r\n            if(msg.value == 800000000000000000)\r\n            {\r\n                require(balanceOf[this] >= 254);\r\n                balanceOf[msg.sender] += 254;\r\n                balanceOf[this] -= 254;\r\n                Transfer(this, msg.sender, 254);\r\n            }\r\n            if(msg.value == 1000000000000000000)\r\n            {\r\n                require(balanceOf[this] >= 317);\r\n                balanceOf[msg.sender] += 317;\r\n                balanceOf[this] -= 317;\r\n                Transfer(this, msg.sender, 317);\r\n            }\r\n            if(msg.value == 3000000000000000000)\r\n            {\r\n                require(balanceOf[this] >= 938);\r\n                balanceOf[msg.sender] += 938;\r\n                balanceOf[this] -= 938;\r\n                Transfer(this, msg.sender, 938);\r\n            }\r\n            if(msg.value == 5000000000000000000)\r\n            {\r\n                require(balanceOf[this] >= 1560);\r\n                balanceOf[msg.sender] += 1560;\r\n                balanceOf[this] -= 1560;\r\n                Transfer(this, msg.sender, 1560);\r\n            }\r\n        }\r\n        \r\n        if(now >= ICOTill)\r\n        {\r\n            require(msg.sender.balance >= msg.value);\r\n            \r\n            uint _Amount = msg.value / tokenPrice;\r\n            \r\n            require(balanceOf[this] >= _Amount);\r\n            \r\n            balanceOf[msg.sender] += _Amount;\r\n            balanceOf[this] -= _Amount;\r\n            \r\n            Transfer(this, msg.sender, _Amount);\r\n        }\r\n    }\r\n    \r\n    function ContractBalance() public view returns (uint)\r\n    {\r\n        return balanceOf[this];\r\n    }\r\n    \r\n    function LeaseBill(uint BoardId, uint Days, string AdvertSrc) isICOend public \r\n    {\r\n        var Advr = info[BoardId];\r\n        \r\n        uint Price = Days * Advr.PricePerDay;\r\n        \r\n        require(Advr.BoardId == BoardId && BoardId > 0);\r\n        require(bytes(AdvertSrc).length > 0);\r\n        require(Days <= Advr.MaxDays && Days > 0);\r\n        require(balanceOf[msg.sender] >= Price);\r\n        require(Advr.Till <= now);\r\n        require(Advr.AllowLeasing == true);\r\n        require(keccak256(Advr.Status) == keccak256(\"Free\") || keccak256(Advr.Status) == keccak256(\"Published\"));\r\n        \r\n        require(balanceOf[this] + Price >= balanceOf[this]);\r\n        balanceOf[msg.sender] -= Price;\r\n        balanceOf[this] += Price;\r\n        Transfer(msg.sender, this, Price);\r\n        \r\n        Advr.Advertiser         = msg.sender;\r\n        Advr.AdvertSrc          = AdvertSrc;\r\n        Advr.Till               = now + 86399 * Days;\r\n        Advr.AddTime            = now;\r\n        Advr.SpentTokens        = Price;\r\n        Advr.Status             = \"Moderate\";\r\n    }\r\n    \r\n    function ModerateBill(uint BoardIdToModerate, bool Published) onlyModerator isICOend public\r\n    {\r\n        var Advr = info[BoardIdToModerate];\r\n        \r\n        require(Advr.BoardId == BoardIdToModerate && BoardIdToModerate > 0);\r\n        \r\n        if(Published == true)\r\n        {\r\n            require(keccak256(Advr.Status) == keccak256(\"Moderate\"));\r\n        \r\n            uint CompensateTime   = now - Advr.AddTime;\r\n            \r\n            Advr.Till             = Advr.Till + CompensateTime;\r\n            Advr.Status           = \"Published\";\r\n        }\r\n        \r\n        if(Published == false)\r\n        {\r\n            require(keccak256(Advr.Status) == keccak256(\"Moderate\"));\r\n            \r\n\t\t\trequire(balanceOf[this] >= Advr.SpentTokens);\r\n\t\t\t\r\n            balanceOf[Advr.Advertiser] += Advr.SpentTokens;\r\n            balanceOf[this] -= Advr.SpentTokens;\r\n            Transfer(this, Advr.Advertiser, Advr.SpentTokens);\r\n            \r\n            delete Advr.Advertiser;\r\n            delete Advr.AdvertSrc;\r\n            delete Advr.Till;\r\n            delete Advr.AddTime;\r\n            delete Advr.SpentTokens;\r\n            \r\n            Advr.Status = \"Free\";\r\n        }\r\n    }\r\n    \r\n    function ChangeBillLeasingInfo(uint _BillToEdit, uint _NewPricePerDay, uint _NewMaxDays, bool _AllowLeasing) onlyOwner isICOend public\r\n    {\r\n        var Advr = info[_BillToEdit];\r\n        \r\n        require(Advr.BoardId == _BillToEdit && _BillToEdit > 0 && _NewPricePerDay > 0 && _NewMaxDays > 0);\r\n        \r\n        Advr.BoardId          = _BillToEdit;\r\n        Advr.PricePerDay      = _NewPricePerDay;\r\n        Advr.MaxDays          = _NewMaxDays;\r\n        Advr.AllowLeasing     = _AllowLeasing;\r\n    }\r\n    \r\n    function AddBill(uint NewBoardId, uint PricePerDay, uint MaxDays, bool _AllowLeasing) onlyOwner isICOend public\r\n    {\r\n        var Advr              = info[NewBoardId];\r\n        \r\n        require(Advr.BoardId  != NewBoardId && NewBoardId > 0 && PricePerDay > 0 && MaxDays > 0);\r\n        \r\n        Advr.BoardId          = NewBoardId;\r\n        Advr.PricePerDay      = PricePerDay;\r\n        Advr.MaxDays          = MaxDays;\r\n        Advr.Status           = \"Free\";\r\n        Advr.AllowLeasing     = _AllowLeasing;\r\n        \r\n        Adverts.push(NewBoardId);\r\n    }\r\n    \r\n    function AddBillModerator(address Address) onlyOwner isICOend public\r\n    {\r\n        var Modr = moderators[Address];\r\n        \r\n        require(Modr.Address != Address);\r\n        \r\n        Modr.Address = Address;\r\n        \r\n        Moderators.push(Address);\r\n    }\r\n    \r\n    function DeleteBillModerator(address _Address) onlyOwner isICOend public\r\n    {\r\n        delete moderators[_Address];\r\n    }\r\n    \r\n    function AboutBill(uint _BoardId) public view returns (uint BoardId, uint PricePerDay, uint MaxDays, string AdvertSource, uint AddTime, uint Till, string Status, bool AllowLeasing)\r\n    {\r\n        var Advr = info[_BoardId];\r\n        \r\n        return (Advr.BoardId, Advr.PricePerDay, Advr.MaxDays, Advr.AdvertSrc, Advr.AddTime, Advr.Till, Advr.Status, Advr.AllowLeasing);\r\n    }\r\n    \r\n    function SetTokenPrice(uint _Price) onlyOwner isICOend public\r\n    {\r\n        tokenPrice = _Price;\r\n    }\r\n\t\r\n\tfunction transfer(address _to, uint _value) public\r\n\t{\r\n        require(balanceOf[msg.sender] >= _value);\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        \r\n        balanceOf[msg.sender] -= _value;\r\n        balanceOf[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n    }\r\n    \r\n    function WithdrawEther() onlyOwner public\r\n    {\r\n        Owner.transfer(this.balance);\r\n    }\r\n    \r\n    function ChangeOwner(address _Address) onlyOwner public\r\n    {\r\n        Owner = _Address;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"BoardId\",\"type\":\"uint256\"},{\"name\":\"Days\",\"type\":\"uint256\"},{\"name\":\"AdvertSrc\",\"type\":\"string\"}],\"name\":\"LeaseBill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"WithdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"BoardIdToModerate\",\"type\":\"uint256\"},{\"name\":\"Published\",\"type\":\"bool\"}],\"name\":\"ModerateBill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ContractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_BoardId\",\"type\":\"uint256\"}],\"name\":\"AboutBill\",\"outputs\":[{\"name\":\"BoardId\",\"type\":\"uint256\"},{\"name\":\"PricePerDay\",\"type\":\"uint256\"},{\"name\":\"MaxDays\",\"type\":\"uint256\"},{\"name\":\"AdvertSource\",\"type\":\"string\"},{\"name\":\"AddTime\",\"type\":\"uint256\"},{\"name\":\"Till\",\"type\":\"uint256\"},{\"name\":\"Status\",\"type\":\"string\"},{\"name\":\"AllowLeasing\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_Price\",\"type\":\"uint256\"}],\"name\":\"SetTokenPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_Address\",\"type\":\"address\"}],\"name\":\"DeleteBillModerator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"NewBoardId\",\"type\":\"uint256\"},{\"name\":\"PricePerDay\",\"type\":\"uint256\"},{\"name\":\"MaxDays\",\"type\":\"uint256\"},{\"name\":\"_AllowLeasing\",\"type\":\"bool\"}],\"name\":\"AddBill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_BillToEdit\",\"type\":\"uint256\"},{\"name\":\"_NewPricePerDay\",\"type\":\"uint256\"},{\"name\":\"_NewMaxDays\",\"type\":\"uint256\"},{\"name\":\"_AllowLeasing\",\"type\":\"bool\"}],\"name\":\"ChangeBillLeasingInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_Address\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"Address\",\"type\":\"address\"}],\"name\":\"AddBillModerator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Bills","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fdb2011ab95e6c8d0b0b182ca3721223062ffbbed7d6370e2771c8e5375a3e4f"}]}