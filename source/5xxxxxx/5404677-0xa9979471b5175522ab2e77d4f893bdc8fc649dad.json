{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\nCapital Technologies & Research - Capital (CALL) & CapitalGAS (CALLG) - Crowdsale Smart Contract\r\nhttps://www.mycapitalco.in\r\n*/\r\npragma solidity ^0.4.18;\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\ncontract Ownable {\r\n    address public owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n}\r\ninterface Token {\r\n    function transfer(address _to, uint256 _amount) external returns (bool success);\r\n    function balanceOf(address _owner) external returns (uint256 balance);\r\n}\r\ncontract FiatContract {\r\n    function USD(uint _id) public constant returns (uint256);\r\n}\r\ncontract Crowdsale {\r\n  using SafeMath for uint256;\r\n  Token public token_call;\r\n  Token public token_callg;\r\n  FiatContract public fiat_contract;\r\n  uint256 public softCap = 30000 ether;\r\n  uint256 public maxContributionPerAddress = 1500 ether;\r\n  uint256 public startTime;\r\n  uint256 public endTime;\r\n  uint256 public weiRaised;\r\n  uint256 public sale_period = 75 days;\r\n  uint256 public minInvestment = 0.01 ether;\r\n  bool public sale_state = false;\r\n  event TokenPurchase(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n  modifier nonZeroAddress(address _to) {\r\n    require(_to != 0x0);\r\n    _;\r\n  }\r\n  modifier nonZeroEth() {\r\n\trequire(msg.value > 0);\r\n    _;\r\n  }\r\n  function Crowdsale(address _token_call, address _token_callg) public nonZeroAddress(_token_call) nonZeroAddress(_token_callg) {\r\n    token_call = Token(_token_call);\r\n    token_callg = Token(_token_callg);\r\n    fiat_contract = FiatContract(0x8055d0504666e2B6942BeB8D6014c964658Ca591);\r\n  }\r\n  function calculateRate(uint256 _amount) public view returns(uint256) {\r\n        uint256 tokenPrice = fiat_contract.USD(0);\r\n        if(startTime.add(15 days) >= block.timestamp) {\r\n            tokenPrice = tokenPrice.mul(200).div(10 ** 8);\r\n        } else if(startTime.add(45 days) >= block.timestamp) {\r\n            tokenPrice = tokenPrice.mul(300).div(10 ** 8);\r\n        } else if(startTime.add(52 days) >= block.timestamp) {\r\n            tokenPrice = tokenPrice.mul(330).div(10 ** 8);\r\n        } else if(startTime.add(59 days) >= block.timestamp) {\r\n            tokenPrice = tokenPrice.mul(360).div(10 ** 8);\r\n        } else if(startTime.add(66 days) >= block.timestamp) {\r\n            tokenPrice = tokenPrice.mul(400).div(10 ** 8);\r\n        } else {\r\n            tokenPrice = tokenPrice.mul(150).div(10 ** 8);\r\n        }\r\n        return _amount.div(tokenPrice).mul(10 ** 10);\r\n  }\r\n  function () external payable {\r\n    buyTokens(msg.sender);\r\n  }\r\n  function buyTokens(address beneficiary) public payable nonZeroAddress(beneficiary) {\r\n    require(validPurchase());\r\n\tuint256 weiAmount = msg.value;\r\n    uint256 tokenPrice = fiat_contract.USD(0);\r\n    if(startTime.add(15 days) >= block.timestamp) {\r\n        tokenPrice = tokenPrice.mul(200).div(10 ** 8);\r\n    } else if(startTime.add(45 days) >= block.timestamp) {\r\n        tokenPrice = tokenPrice.mul(300).div(10 ** 8);\r\n    } else if(startTime.add(52 days) >= block.timestamp) {\r\n        tokenPrice = tokenPrice.mul(330).div(10 ** 8);\r\n    } else if(startTime.add(59 days) >= block.timestamp) {\r\n        tokenPrice = tokenPrice.mul(360).div(10 ** 8);\r\n    } else if(startTime.add(66 days) >= block.timestamp) {\r\n        tokenPrice = tokenPrice.mul(400).div(10 ** 8);\r\n    } else {\r\n        tokenPrice = tokenPrice.mul(150).div(10 ** 8);\r\n    }\r\n    uint256 call_units = weiAmount.div(tokenPrice).mul(10 ** 10);\r\n    uint256 callg_units = call_units.mul(200);\r\n    forwardFunds();\r\n    weiRaised = weiRaised.add(weiAmount);\r\n    emit TokenPurchase(msg.sender, beneficiary, weiAmount, call_units);\r\n    require(token_call.transfer(beneficiary, call_units));\r\n    require(token_callg.transfer(beneficiary, callg_units));\r\n  }\r\n  function forwardFunds() internal;\r\n  function hasEnded() public view returns (bool) {\r\n    require(sale_state);\r\n    return block.timestamp > endTime;\r\n  }\r\n  function validPurchase() internal view returns (bool);\r\n}\r\ncontract FinalizableCrowdsale is Crowdsale, Ownable {\r\n  using SafeMath for uint256;\r\n  event Finalized();  \r\n  function FinalizableCrowdsale(address _token_call, address _token_callg) Crowdsale(_token_call, _token_callg) public {\r\n      \r\n  }\r\n  function finalize() onlyOwner public {\r\n    require(hasEnded());\r\n    finalization();\r\n    emit Finalized();\r\n    sale_state = false;\r\n  }\r\n  function finalization() internal ;\r\n}\r\ncontract CapitalTechCrowdsale is FinalizableCrowdsale {\r\n  using SafeMath for uint256;\r\n  RefundVault public vault; \r\n  event BurnedUnsold();\r\n  function CapitalTechCrowdsale( address _wallet, address _token_call, address _token_callg) FinalizableCrowdsale( _token_call, _token_callg) public nonZeroAddress(_wallet) {\r\n    vault = new RefundVault(_wallet);\r\n  }\r\n  function powerUpContract() public onlyOwner{\r\n    require(!sale_state);\r\n\tstartTime = block.timestamp;\r\n    endTime = block.timestamp.add(sale_period);    \r\n    sale_state = true;\r\n  }\r\n  function transferTokens(address _to, uint256 amount) public onlyOwner nonZeroAddress(_to) {\r\n    require(hasEnded());\r\n    token_call.transfer(_to, amount);\r\n    token_callg.transfer(_to, amount.mul(200));  \r\n  }  \r\n  function forwardFunds() internal {\r\n    vault.deposit.value(msg.value)(msg.sender);\r\n  }\r\n  function claimRefund() public {\r\n    require(!sale_state);\r\n    require(!goalReached());\r\n    vault.refund(msg.sender);\r\n  }\r\n  function withdrawFunds() public onlyOwner{\r\n    require(!sale_state);\r\n    require(goalReached());\r\n    vault.withdrawToWallet();\r\n  }\r\n  function finalization() internal {\r\n    if (goalReached()) {\r\n      burnUnsold();\r\n      vault.close();\r\n    } else {\r\n      vault.enableRefunds();\r\n    }\r\n  }\r\n  function burnUnsold() internal {\r\n    require(!sale_state);\r\n    require(!goalReached());\r\n    token_call.transfer(address(0), token_call.balanceOf(this));\r\n    token_callg.transfer(address(0), token_callg.balanceOf(this));\r\n    emit BurnedUnsold();\r\n  }\r\n  function validPurchase() internal view returns (bool) {\r\n    require(!hasEnded());\r\n    require(msg.value >= minInvestment);\r\n\trequire(vault.deposited(msg.sender).add(msg.value) <= maxContributionPerAddress); \r\n    return true;\r\n  }\r\n  function goalReached() public view returns (bool) {\r\n    return token_call.balanceOf(this) <= 5250000000000000000000000;\r\n  }\r\n}\r\ncontract RefundVault is Ownable {\r\n  using SafeMath for uint256;\r\n  enum State { Active, Refunding, Closed }\r\n  mapping (address => uint256) public deposited;\r\n  address public wallet;\r\n  State public state;\r\n  event Closed();\r\n  event RefundsEnabled();\r\n  event Refunded(address indexed beneficiary, uint256 weiAmount);\r\n  function RefundVault(address _wallet) public {\r\n    require(_wallet != address(0));\r\n    wallet = _wallet;\r\n    state = State.Active;\r\n  }\r\n  function deposit(address investor) onlyOwner public payable {\r\n    require(state == State.Active);\r\n    deposited[investor] = deposited[investor].add(msg.value);\r\n  }\r\n  function close() onlyOwner public {\r\n    require(state == State.Active);\r\n    state = State.Closed;\r\n    emit Closed();\r\n  }\r\n  function withdrawToWallet() onlyOwner public{\r\n    require(state == State.Closed);\r\n    wallet.transfer(address(this).balance);\r\n  }\r\n  function enableRefunds() onlyOwner public {\r\n    require(state == State.Active);\r\n    state = State.Refunding;\r\n    emit RefundsEnabled();\r\n  }\r\n  function refund(address investor) public {\r\n    require(state == State.Refunding);\r\n    uint256 depositedValue = deposited[investor];\r\n    deposited[investor] = 0;\r\n    emit Refunded(investor, depositedValue);\r\n    investor.transfer(depositedValue);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calculateRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_call\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"powerUpContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"goalReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minInvestment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_callg\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sale_period\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimRefund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxContributionPerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fiat_contract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sale_state\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_token_call\",\"type\":\"address\"},{\"name\":\"_token_callg\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BurnedUnsold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Finalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"}]","ContractName":"CapitalTechCrowdsale","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000009c45de53ec25a78d0c80a3f8d62abeb411442578000000000000000000000000a31acff930ad8eed2192fa1c82c92b717ab10ba800000000000000000000000048546427eb8f1fbe9cb4c92ad8fbd88e70ed8dfe","Library":"","SwarmSource":"bzzr://6945f02b5091b7208ab56eeb1679cc18b0167bedb4e17e21aac9110146879bb7"}]}