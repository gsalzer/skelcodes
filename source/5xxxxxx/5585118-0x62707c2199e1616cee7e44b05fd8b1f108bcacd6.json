{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\npragma solidity ^0.4.10;\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\npragma solidity ^0.4.21;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n\taddress public owner;\r\n\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\t/**\r\n\t * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n\t * account.\r\n\t */\r\n\tfunction Ownable()public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Throws if called by any account other than the owner.\r\n\t */\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n\t * @param newOwner The address to transfer ownership to.\r\n\t */\r\n\tfunction transferOwnership(address newOwner)public onlyOwner {\r\n\t\trequire(newOwner != address(0));\r\n\t\temit OwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * @title BonusScheme\r\n * @dev This contract is used for storing and granting tokens calculated \r\n * according to bonus scheme while a crowdsale is in progress.\r\n * When crowdsale ends the rest of tokens is transferred to developers.\r\n */\r\ncontract BonusScheme is Ownable {\r\n\tusing SafeMath for uint256;\r\n\r\n\t/**\r\n\t* Defining timestamps for bonuscheme from White Paper. \r\n\t* The start of bonuses is 15 May 2018 and the end is 23 June 2018. \r\n\t* There are 2 seconds in between changing the phases.  */\r\n\tuint256 startOfFirstBonus = 1525892100;\r\n\tuint256 endOfFirstBonus = (startOfFirstBonus - 1) + 5 minutes;\t\r\n\tuint256 startOfSecondBonus = (startOfFirstBonus + 1) + 5 minutes;\r\n\tuint256 endOfSecondBonus = (startOfSecondBonus - 1) + 5 minutes;\r\n\tuint256 startOfThirdBonus = (startOfSecondBonus + 1) + 5 minutes;\r\n\tuint256 endOfThirdBonus = (startOfThirdBonus - 1) + 5 minutes;\r\n\tuint256 startOfFourthBonus = (startOfThirdBonus + 1) + 5 minutes;\r\n\tuint256 endOfFourthBonus = (startOfFourthBonus - 1) + 5 minutes;\r\n\tuint256 startOfFifthBonus = (startOfFourthBonus + 1) + 5 minutes;\r\n\tuint256 endOfFifthBonus = (startOfFifthBonus - 1) + 5 minutes;\r\n\t\r\n\t/**\r\n\t* Defining bonuses according to White Paper.\r\n\t* First week there is bonus 35%.\r\n\t* Second week there is bonus 30%.\r\n\t* Third week there is bonus 20%.\r\n\t* Fourth week there is bonus 10%.\r\n\t* Fifth week there is bonus 5%.\r\n\t*/\r\n\tuint256 firstBonus = 35;\r\n\tuint256 secondBonus = 30;\r\n\tuint256 thirdBonus = 20;\r\n\tuint256 fourthBonus = 10;\r\n\tuint256 fifthBonus = 5;\r\n\r\n\tevent BonusCalculated(uint256 tokenAmount);\r\n\r\n    function BonusScheme() public {\r\n        \r\n    }\r\n\r\n\t/**\r\n\t * @dev Calculates from Bonus Scheme how many tokens can be added to purchased _tokenAmount.\r\n\t * @param _tokenAmount The amount of calculated tokens to sent Ether.\r\n\t * @return Number of bonus tokens that can be granted with the specified _tokenAmount.\r\n\t */\r\n\tfunction getBonusTokens(uint256 _tokenAmount)onlyOwner public returns(uint256) {\r\n\t\tif (block.timestamp >= startOfFirstBonus && block.timestamp <= endOfFirstBonus) {\r\n\t\t\t_tokenAmount = _tokenAmount.mul(firstBonus).div(100);\r\n\t\t} else if (block.timestamp >= startOfSecondBonus && block.timestamp <= endOfSecondBonus) {\r\n\t\t\t_tokenAmount = _tokenAmount.mul(secondBonus).div(100);\r\n\t\t} else if (block.timestamp >= startOfThirdBonus && block.timestamp <= endOfThirdBonus) {\r\n\t\t\t_tokenAmount = _tokenAmount.mul(thirdBonus).div(100);\r\n\t\t} else if (block.timestamp >= startOfFourthBonus && block.timestamp <= endOfFourthBonus) {\r\n\t\t\t_tokenAmount = _tokenAmount.mul(fourthBonus).div(100);\r\n\t\t} else if (block.timestamp >= startOfFifthBonus && block.timestamp <= endOfFifthBonus) {\r\n\t\t\t_tokenAmount = _tokenAmount.mul(fifthBonus).div(100);\r\n\t\t} else _tokenAmount=0;\r\n\t\temit BonusCalculated(_tokenAmount);\r\n\t\treturn _tokenAmount;\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"getBonusTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"BonusCalculated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"BonusScheme","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://98c1cd90599ebc7d9c2035f8821bca34b43a3fd6ac333a692be3d9a2826846cf"}]}