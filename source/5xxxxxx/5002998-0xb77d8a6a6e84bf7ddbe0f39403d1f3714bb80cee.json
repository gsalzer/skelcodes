{"status":"1","message":"OK","result":[{"SourceCode":"contract DSAuthority {\r\n    function canCall(\r\n        address src, address dst, bytes4 sig\r\n    ) public view returns (bool);\r\n}\r\n\r\ncontract FreezerAuthority is DSAuthority {\r\n    address[] internal c_freezers;\r\n    // sha3(\"setFreezing(address,uint256,uint256,uint8)\").slice(0,10)\r\n    bytes4 constant setFreezingSig = bytes4(0x51c3b8a6);\r\n    // sha3(\"transferAndFreezing(address,uint256,uint256,uint256,uint8)\").slice(0,10)\r\n    bytes4 constant transferAndFreezingSig = bytes4(0xb8a1fdb6);\r\n\r\n    function canCall(address caller, address, bytes4 sig) public view returns (bool) {\r\n        // freezer can call setFreezing, transferAndFreezing\r\n        if (isFreezer(caller) && sig == setFreezingSig || sig == transferAndFreezingSig) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function addFreezer(address freezer) public {\r\n        int i = indexOf(c_freezers, freezer);\r\n        if (i < 0) {\r\n            c_freezers.push(freezer);\r\n        }\r\n    }\r\n\r\n    function removeFreezer(address freezer) public {\r\n        int index = indexOf(c_freezers, freezer);\r\n        if (index >= 0) {\r\n            uint i = uint(index);\r\n            while (i < c_freezers.length - 1) {\r\n                c_freezers[i] = c_freezers[i + 1];\r\n            }\r\n            c_freezers.length--;\r\n        }\r\n    }\r\n\r\n    /** Finds the index of a given value in an array. */\r\n    function indexOf(address[] values, address value) internal pure returns (int) {\r\n        uint i = 0;\r\n        while (i < values.length) {\r\n            if (values[i] == value) {\r\n                return int(i);\r\n            }\r\n            i++;\r\n        }\r\n        return int(- 1);\r\n    }\r\n\r\n    function isFreezer(address addr) public constant returns (bool) {\r\n        return indexOf(c_freezers, addr) >= 0;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"freezer\",\"type\":\"address\"}],\"name\":\"removeFreezer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"freezer\",\"type\":\"address\"}],\"name\":\"addFreezer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isFreezer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"caller\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"sig\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"FreezerAuthority","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e0ef90513f79d8a867b5cb721eb0ba74372579173e5308674d0046622039ebce"}]}