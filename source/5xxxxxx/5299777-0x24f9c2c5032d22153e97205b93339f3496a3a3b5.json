{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Redeem {\r\n\r\n  struct Item {\r\n    address owner;\r\n    uint price;\r\n    uint nextPrice;\r\n    string slogan;\r\n  }\r\n\r\n  address admin;\r\n  uint[] cuts = [50,40,30,30,20];\r\n  uint[] priceUps = [2105,1406,1288,1206,1173];\r\n  uint[] priceMilestones = [20,500,2000,5000];\r\n  uint[] startPrice = [7,7,7,13,13,13,13,13,17,17];\r\n  bool running = true;\r\n\r\n  mapping (uint => Item) items;\r\n  uint[] itemIndices;\r\n  function soldItems() view public returns (uint[]) { return itemIndices; }\r\n\r\n  event OnSold(uint indexed _iItem, address indexed _oldOwner, address indexed _newOwner, uint _oldPrice, uint _newPrice, string _newSlogan);\r\n  \r\n  modifier onlyAdmin() {\r\n    require(msg.sender == admin);\r\n    _;\r\n  }\r\n  modifier enabled() {\r\n    require(running);\r\n    _;\r\n  }\r\n\r\n  function Redeem() public {\r\n    admin = msg.sender;\r\n  }\r\n\r\n  function itemAt(uint _idx) view public returns (uint iItem, address owner, uint price, uint nextPrice, string slogan) {\r\n    Item memory item = items[_idx];\r\n    if (item.price > 0) {\r\n      return (_idx, item.owner, item.price, item.nextPrice, item.slogan);\r\n    } else {\r\n      uint p = startPrice[_idx % startPrice.length];\r\n      return (_idx, item.owner, p, nextPriceOf(p), \"\");\r\n    }\r\n  }\r\n\r\n  function buy(uint _idx, string _slogan) enabled payable public {\r\n    Item storage item = items[_idx];\r\n    if (item.price == 0) {\r\n      item.price = startPrice[_idx % startPrice.length];\r\n      item.nextPrice = nextPriceOf(item.price);\r\n      itemIndices.push(_idx);\r\n    }\r\n    require(item.price > 0);\r\n    uint curWei = item.price * 1e15;\r\n    require(curWei <= msg.value);\r\n    address oldOwner = item.owner;\r\n    uint oldPrice = item.price;\r\n    if (item.owner != 0x0) {\r\n      require(item.owner != msg.sender);\r\n      item.owner.transfer(curWei * (1000 - cutOf(item.price)) / 1000);\r\n    }\r\n    msg.sender.transfer(msg.value - curWei);\r\n    item.owner = msg.sender;\r\n    item.slogan = _slogan;\r\n    item.price = item.nextPrice;\r\n    item.nextPrice = nextPriceOf(item.price);\r\n    OnSold(_idx, oldOwner, item.owner, oldPrice, item.price, item.slogan);\r\n  }\r\n\r\n  function nextPriceOf(uint _price) view internal returns (uint) {\r\n    for (uint i = 0; i<priceUps.length; ++i) {\r\n      if (i >= priceMilestones.length || _price < priceMilestones[i])\r\n        return _price * priceUps[i] / 1000;\r\n    }\r\n    require(false); //should not happen\r\n    return 0;\r\n  }\r\n  \r\n  function cutOf(uint _price) view internal returns (uint) {\r\n    for (uint i = 0; i<cuts.length; ++i) {\r\n      if (i >= priceMilestones.length || _price < priceMilestones[i])\r\n        return cuts[i];\r\n    }\r\n    require(false); //should not happen\r\n    return 0;\r\n  }\r\n  \r\n  function contractInfo() view public returns (bool, address, uint256, uint[], uint[], uint[], uint[]) {\r\n    return (running, admin, this.balance, startPrice, priceMilestones, cuts, priceUps);\r\n  }\r\n\r\n  function enable(bool b) onlyAdmin public {\r\n    running = b;\r\n  }\r\n\r\n  function changeParameters(uint[] _startPrice, uint[] _priceMilestones, uint[] _priceUps, uint[] _cuts) onlyAdmin public {\r\n    require(_startPrice.length > 0);\r\n    require(_priceUps.length == _priceMilestones.length + 1);\r\n    require(_priceUps.length == _cuts.length);\r\n    for (uint i = 0; i<_priceUps.length; ++i) {\r\n      require(_cuts[i] <= 1000);\r\n      require(_priceUps[i] > 1000 + _cuts[i]);\r\n      if (i < _priceMilestones.length-1) {\r\n        require(_priceMilestones[i] < _priceMilestones[i+1]);\r\n      }\r\n    }\r\n    startPrice = _startPrice;\r\n    priceMilestones = _priceMilestones;\r\n    priceUps = _priceUps;\r\n    cuts = _cuts;\r\n  }\r\n\r\n  function withdrawAll() onlyAdmin public { msg.sender.transfer(this.balance); }\r\n  function withdraw(uint _amount) onlyAdmin public { msg.sender.transfer(_amount); }\r\n  function changeAdmin(address _newAdmin) onlyAdmin public { admin = _newAdmin; }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"contractInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"b\",\"type\":\"bool\"}],\"name\":\"enable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idx\",\"type\":\"uint256\"}],\"name\":\"itemAt\",\"outputs\":[{\"name\":\"iItem\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"nextPrice\",\"type\":\"uint256\"},{\"name\":\"slogan\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idx\",\"type\":\"uint256\"},{\"name\":\"_slogan\",\"type\":\"string\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_startPrice\",\"type\":\"uint256[]\"},{\"name\":\"_priceMilestones\",\"type\":\"uint256[]\"},{\"name\":\"_priceUps\",\"type\":\"uint256[]\"},{\"name\":\"_cuts\",\"type\":\"uint256[]\"}],\"name\":\"changeParameters\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"soldItems\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_iItem\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newSlogan\",\"type\":\"string\"}],\"name\":\"OnSold\",\"type\":\"event\"}]","ContractName":"Redeem","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4e151eb4c8948aa7ae206ab94daf625388f6db2d66b735a89f0b1e87d14d1aa0"}]}