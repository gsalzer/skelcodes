{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\ninterface FundInterface {\r\n\r\n    // EVENTS\r\n\r\n    event PortfolioContent(uint holdings, uint price, uint decimals);\r\n    event RequestUpdated(uint id);\r\n    event Invested(address indexed ofParticipant, uint atTimestamp, uint shareQuantity);\r\n    event Redeemed(address indexed ofParticipant, uint atTimestamp, uint shareQuantity);\r\n    event SpendingApproved(address onConsigned, address ofAsset, uint amount);\r\n    event FeesConverted(uint atTimestamp, uint shareQuantityConverted, uint unclaimed);\r\n    event CalculationUpdate(uint atTimestamp, uint managementFee, uint performanceFee, uint nav, uint sharePrice, uint totalSupply);\r\n    event OrderUpdated(uint id);\r\n    event LogError(uint ERROR_CODE);\r\n    event ErrorMessage(string errorMessage);\r\n\r\n    // EXTERNAL METHODS\r\n    // Compliance by Investor\r\n    function requestInvestment(uint giveQuantity, uint shareQuantity, bool isNativeAsset) external;\r\n    function requestRedemption(uint shareQuantity, uint receiveQuantity, bool isNativeAsset) external;\r\n    function executeRequest(uint requestId) external;\r\n    function cancelRequest(uint requestId) external;\r\n    function redeemAllOwnedAssets(uint shareQuantity) external returns (bool);\r\n    // Administration by Manager\r\n    function enableInvestment() external;\r\n    function disableInvestment() external;\r\n    function enableRedemption() external;\r\n    function disableRedemption() external;\r\n    function shutDown() external;\r\n    // Managing by Manager\r\n    function makeOrder(uint exchangeId, address sellAsset, address buyAsset, uint sellQuantity, uint buyQuantity) external;\r\n    function takeOrder(uint exchangeId, uint id, uint quantity) external;\r\n    function cancelOrder(uint exchangeId, uint id) external;\r\n\r\n    // PUBLIC METHODS\r\n    function emergencyRedeem(uint shareQuantity, address[] requestedAssets) public returns (bool success);\r\n    // Fees by Manager\r\n    function allocateUnclaimedFees();\r\n\r\n    // PUBLIC VIEW METHODS\r\n    // Get general information\r\n    function getModules() view returns (address, address, address);\r\n    function getLastOrderId() view returns (uint);\r\n    function getLastRequestId() view returns (uint);\r\n    function getNameHash() view returns (bytes32);\r\n    function getManager() view returns (address);\r\n\r\n    // Get accounting information\r\n    function performCalculations() view returns (uint, uint, uint, uint, uint, uint, uint);\r\n    function calcSharePrice() view returns (uint);\r\n}\r\n\r\ninterface ComplianceInterface {\r\n\r\n    // PUBLIC VIEW METHODS\r\n\r\n    /// @notice Checks whether investment is permitted for a participant\r\n    /// @param ofParticipant Address requesting to invest in a Melon fund\r\n    /// @param giveQuantity Quantity of Melon token times 10 ** 18 offered to receive shareQuantity\r\n    /// @param shareQuantity Quantity of shares times 10 ** 18 requested to be received\r\n    /// @return Whether identity is eligible to invest in a Melon fund.\r\n    function isInvestmentPermitted(\r\n        address ofParticipant,\r\n        uint256 giveQuantity,\r\n        uint256 shareQuantity\r\n    ) view returns (bool);\r\n\r\n    /// @notice Checks whether redemption is permitted for a participant\r\n    /// @param ofParticipant Address requesting to redeem from a Melon fund\r\n    /// @param shareQuantity Quantity of shares times 10 ** 18 offered to redeem\r\n    /// @param receiveQuantity Quantity of Melon token times 10 ** 18 requested to receive for shareQuantity\r\n    /// @return Whether identity is eligible to redeem from a Melon fund.\r\n    function isRedemptionPermitted(\r\n        address ofParticipant,\r\n        uint256 shareQuantity,\r\n        uint256 receiveQuantity\r\n    ) view returns (bool);\r\n}\r\n\r\ncontract OnlyManager is ComplianceInterface {\r\n\r\n    // PUBLIC VIEW METHODS\r\n\r\n    /// @notice Checks whether investment is permitted for a participant\r\n    /// @param ofParticipant Address requesting to invest in a Melon fund\r\n    /// @param giveQuantity Quantity of Melon token times 10 ** 18 offered to receive shareQuantity\r\n    /// @param shareQuantity Quantity of shares times 10 ** 18 requested to be received\r\n    /// @return Whether identity is eligible to invest in a Melon fund.\r\n    function isInvestmentPermitted(\r\n        address ofParticipant,\r\n        uint256 giveQuantity,\r\n        uint256 shareQuantity\r\n    )\r\n        view\r\n        returns (bool)\r\n    {\r\n        return FundInterface(msg.sender).getManager() == ofParticipant;\r\n    }\r\n\r\n    /// @notice Checks whether redemption is permitted for a participant\r\n    /// @param ofParticipant Address requesting to redeem from a Melon fund\r\n    /// @param shareQuantity Quantity of shares times 10 ** 18 offered to redeem\r\n    /// @param receiveQuantity Quantity of Melon token times 10 ** 18 requested to receive for shareQuantity\r\n    /// @return isEligible Whether identity is eligible to redeem from a Melon fund.\r\n    function isRedemptionPermitted(\r\n        address ofParticipant,\r\n        uint256 shareQuantity,\r\n        uint256 receiveQuantity\r\n    )\r\n        view\r\n        returns (bool)\r\n    {\r\n        return true;    // No need for KYC/AML in case of redeeming shares\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"ofParticipant\",\"type\":\"address\"},{\"name\":\"giveQuantity\",\"type\":\"uint256\"},{\"name\":\"shareQuantity\",\"type\":\"uint256\"}],\"name\":\"isInvestmentPermitted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ofParticipant\",\"type\":\"address\"},{\"name\":\"shareQuantity\",\"type\":\"uint256\"},{\"name\":\"receiveQuantity\",\"type\":\"uint256\"}],\"name\":\"isRedemptionPermitted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"OnlyManager","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"0","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bc4b09fb9ffd7f852f6b9629eb65a6f7c47d9feebc51b56b614ea091e671963c"}]}