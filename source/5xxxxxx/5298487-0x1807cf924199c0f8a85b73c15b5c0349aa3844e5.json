{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n// ----------------------------------------------------------------------------------------------\r\n// PublickOffering by Xender Limited.\r\n// An ERC20 standard\r\n//\r\n// author: Xender Team\r\n// Contact: service@xender.com\r\n// ----------------------------------------------------------------------------------------------\r\n\r\ncontract Authority {\r\n    \r\n    // contract administrator\r\n    address public owner;\r\n    \r\n    // publick offering beneficiary\r\n    address public beneficiary;\r\n    \r\n    // publick offering has closed\r\n    bool public closed = false;\r\n    \r\n    // allowed draw ETH\r\n    bool public allowDraw = true;\r\n    \r\n     modifier onlyOwner() { \r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    modifier onlyBeneficiary(){\r\n        require(msg.sender == beneficiary);\r\n        _;\r\n    }\r\n    \r\n    modifier alloweDrawEth(){\r\n       if(allowDraw){\r\n           _;\r\n       }\r\n    }\r\n    \r\n    function Authority() public {\r\n        owner = msg.sender;\r\n        beneficiary = msg.sender;\r\n    }\r\n    \r\n    function open() public onlyOwner {\r\n        closed = false;\r\n    }\r\n    \r\n    function close() public onlyOwner {\r\n        closed = true;\r\n    }\r\n    \r\n    function setAllowDrawETH(bool _allow) public onlyOwner{\r\n        allowDraw = _allow;\r\n    }\r\n}\r\n\r\ncontract PublickOffering is Authority {\r\n    \r\n    // invest info\r\n    struct investorInfo{\r\n        address investor;\r\n        uint256 amount;\r\n        uint    utime;\r\n        bool    hadback;\r\n    }\r\n    \r\n    // investors bills\r\n    mapping(uint => investorInfo) public bills;\r\n    \r\n    // recive ETH total amount\r\n    uint256 public totalETHSold;\r\n    \r\n    // investor number\r\n    uint public lastAccountNum;\r\n    \r\n    // min ETH\r\n    uint256 public constant minETH = 0.2 * 10 ** 18;\r\n    \r\n    // max ETH\r\n    uint256 public constant maxETH = 20 * 10 ** 18;\r\n    \r\n    event Bill(address indexed sender, uint256 value, uint time);\r\n    event Draw(address indexed _addr, uint256 value, uint time);\r\n    event Back(address indexed _addr, uint256 value, uint time);\r\n    \r\n    function PublickOffering() public {\r\n        totalETHSold = 0;\r\n        lastAccountNum = 0;\r\n    }\r\n    \r\n    function () public payable {\r\n        if(!closed){\r\n            require(msg.value >= minETH);\r\n            require(msg.value <= maxETH);\r\n            bills[lastAccountNum].investor = msg.sender;\r\n            bills[lastAccountNum].amount = msg.value;\r\n            bills[lastAccountNum].utime = now;\r\n            totalETHSold += msg.value;\r\n            lastAccountNum++;\r\n            Bill(msg.sender, msg.value, now);\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n    \r\n    function drawETH(uint256 amount) public onlyBeneficiary alloweDrawEth{\r\n        beneficiary.transfer(amount);\r\n        Draw(msg.sender, amount, now);\r\n    }\r\n    \r\n    function backETH(uint pos) public onlyBeneficiary{\r\n        if(!bills[pos].hadback){\r\n            require(pos < lastAccountNum);\r\n            bills[pos].investor.transfer(bills[pos].amount);\r\n            bills[pos].hadback = true;\r\n            Back(bills[pos].investor, bills[pos].amount, now);\r\n        }\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"maxETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allow\",\"type\":\"bool\"}],\"name\":\"setAllowDrawETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bills\",\"outputs\":[{\"name\":\"investor\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"utime\",\"type\":\"uint256\"},{\"name\":\"hadback\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pos\",\"type\":\"uint256\"}],\"name\":\"backETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastAccountNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"drawETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowDraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalETHSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"open\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"Bill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"Draw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"Back\",\"type\":\"event\"}]","ContractName":"PublickOffering","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7bbcc0b20196e6ed49cd6372f81754285d22d528f0139aaade518783de7d96a9"}]}