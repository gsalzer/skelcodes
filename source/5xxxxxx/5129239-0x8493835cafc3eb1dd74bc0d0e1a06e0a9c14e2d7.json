{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\nhttps://www.lovco.in/\r\nhttps://lovcoin.github.io/\r\n\r\nVersion 1.0 - 21.feb.2018\r\n\r\nLoveLock smart contract - https://www.lovelock-online.com.\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n// We need this interface to interact with our ERC20 tokencontract\r\ncontract ERC20Interface \r\n{\r\n         // function totalSupply() public constant returns (uint256);\r\n      function balanceOf(address tokenOwner) public constant returns (uint256 balance);\r\n      function allowance(address tokenOwner, address spender) public constant returns (uint256 remaining);\r\n      function transfer(address to, uint256 tokens) public returns (bool success);\r\n         // function approve(address spender, uint256 tokens) public returns (bool success);\r\n      function transferFrom(address from, address to, uint256 tokens) public returns (bool success);\r\n         // event Transfer(address indexed from, address indexed to, uint256 tokens);\r\n         // event Approval(address indexed tokenOwner, address indexed spender, uint256 tokens);\r\n} \r\n\r\n\r\n\r\n\r\n// ---\r\n// Main LoveLock class\r\n//\r\ncontract LoveLock\r\n{\r\naddress public owner;                    // The owner of this contract\r\n\r\nuint    public lastrecordindex;          // The highest record index, number of lovelocks\r\nuint    public lovelock_price;           // Lovelock price (starts with ~ $9.99 in ETH, 0.0119 ETH)\r\nuint    public lovelock_price_LOV;       // Lovelock price (in LOV!)\r\n\r\naddress public last_buyer;               // Last buyer of a lovelock.\r\nbytes32 public last_hash;                // Last index hash\r\n\r\naddress TokenContractAddress;            // The address of the ERC20-Token, rewards are paying for\r\nERC20Interface TokenContract;            // Interface of the ERC20-Token\r\naddress public thisAddress;              // The address of this contract\r\n\r\nuint    public debug_last_approved;\r\n\r\n\r\n//\r\n// Datasets for the lovelocks.\r\n//\r\nstruct DataRecord\r\n{\r\nstring name1;\r\nstring name2;\r\nstring lovemessage;\r\nuint   locktype;\r\nuint   timestamp;\r\n} // struct DataRecord\r\n\r\nmapping(bytes32 => DataRecord) public DataRecordStructs;\r\n\r\n//\r\n// Dataset for indexes\r\n//\r\nstruct DataRecordIndex\r\n{\r\nbytes32 index_hash;\r\n} // DataRecordIndex\r\n\r\nmapping(uint256 => DataRecordIndex) public DataRecordIndexStructs;\r\n\r\n\r\n\r\n// ---\r\n// Constructor\r\n// \r\nfunction LoveLock () public\r\n{\r\n// Today 20.Feb.2018 - 1 ETH=$950, 0.01 ~ $9.99\r\n\r\nlovelock_price           = 10000000000000000;\r\n\r\nlovelock_price_LOV       = 1000000000000000000*5000; // 5000 LOV\r\n                           \r\nowner                    = msg.sender;\r\n\r\n// Address of TokenContract\r\nTokenContractAddress     = 0x26B1FBE292502da2C8fCdcCF9426304d0900b703; // Mainnet\r\nTokenContract            = ERC20Interface(TokenContractAddress); \r\n\r\nthisAddress              = address(this);\r\n\r\nlastrecordindex          = 0;\r\n} // Constructor\r\n \r\n\r\n\r\n\r\n// ---\r\n// withdraw_to_owner\r\n// \r\nfunction withdraw_to_owner() public returns (bool)\r\n{\r\nif (msg.sender != owner) return (false);\r\n\r\n// Transfer tokens to owner\r\nuint256 balance = TokenContract.balanceOf(this);\r\nTokenContract.transfer(owner, balance); \r\n\r\n// Transfer ETH to owner\r\nowner.transfer( this.balance );\r\n\r\nreturn(true);\r\n} // withdraw_to_owner\r\n\r\n\r\n\r\n// ---\r\n// number_to_hash\r\n//\r\nfunction number_to_hash( uint param ) public constant returns (bytes32)\r\n{\r\nbytes32 ret = keccak256(param);\r\nreturn(ret);\r\n} // number_to_hash\r\n\r\n\r\n\r\n\r\n\r\n// ---\r\n// Web3 event 'LovelockPayment'\r\n//\r\nevent LovelockPayment\r\n(\r\naddress indexed _from,\r\nbytes32 hashindex,\r\nuint _value2\r\n);\r\n    \r\n    \r\n// ---\r\n// buy lovelock (with ETH)\r\n//\r\nfunction buy_lovelock( bytes32 index_hash, string name1, string name2, string lovemessage, uint locktype ) public payable returns (uint)\r\n{\r\nlast_buyer = msg.sender;\r\n\r\n\r\n// Overwrite protection\r\nif (DataRecordStructs[index_hash].timestamp > 1000)\r\n   {\r\n   return 0;\r\n   }\r\n   \r\n\r\n// only if payed the full price.\r\nif ( msg.value >= lovelock_price )\r\n   {\r\n   \r\n   // ----- Create the lock ---------------------------------\r\n    // Increment the record index.\r\n    lastrecordindex = lastrecordindex + 1;  \r\n       \r\n    last_hash = index_hash;\r\n        \r\n    // Store the lovelock data into the record for the eternity.\r\n    DataRecordStructs[last_hash].name1       = name1;\r\n    DataRecordStructs[last_hash].name2       = name2;\r\n    DataRecordStructs[last_hash].lovemessage = lovemessage;\r\n    DataRecordStructs[last_hash].locktype    = locktype;\r\n    DataRecordStructs[last_hash].timestamp   = now;\r\n   \r\n    DataRecordIndexStructs[lastrecordindex].index_hash = last_hash;\r\n   \r\n    // The Web3-Event!!!\r\n    LovelockPayment(msg.sender, last_hash, lastrecordindex);  \r\n   // --- END lock creation --------------------------------------\r\n   \r\n   return(1);\r\n   } else\r\n     {\r\n     revert();\r\n     }\r\n\r\n \r\nreturn(0);\r\n} // buy_lovelock\r\n\r\n\r\n\r\n\r\n// ---\r\n// buy buy_lovelock_withLOV\r\n//\r\nfunction buy_lovelock_withLOV( bytes32 index_hash, string name1, string name2, string lovemessage, uint locktype ) public returns (uint)\r\n{\r\nlast_buyer = msg.sender;\r\nuint256      amount_token = 0; \r\n\r\n\r\n// Overwrite protection\r\nif (DataRecordStructs[index_hash].timestamp > 1000)\r\n   {\r\n   return 0;\r\n   }\r\n\r\n    \r\n// Check token allowance   \r\namount_token = TokenContract.allowance( msg.sender, thisAddress );\r\ndebug_last_approved = amount_token;\r\n   \r\n\r\nif (amount_token >= lovelock_price_LOV)\r\n   {\r\n\r\n   // Transfer token to this contract\r\n   bool success = TokenContract.transferFrom(msg.sender, thisAddress, amount_token);\r\n          \r\n   if (success == true)\r\n      {   \r\n\r\n      // ----- Create the lock ------------------------------\r\n      // Increment the record index.\r\n      lastrecordindex = lastrecordindex + 1;  \r\n            \r\n      last_hash = index_hash;\r\n        \r\n      // Store the lovelock data into the record for the eternity.\r\n      DataRecordStructs[last_hash].name1       = name1;\r\n      DataRecordStructs[last_hash].name2       = name2;\r\n      DataRecordStructs[last_hash].lovemessage = lovemessage;\r\n      DataRecordStructs[last_hash].locktype    = locktype;\r\n      DataRecordStructs[last_hash].timestamp   = now;\r\n\r\n      DataRecordIndexStructs[lastrecordindex].index_hash = last_hash;\r\n   \r\n      // The Web3-Event!!!\r\n      LovelockPayment(msg.sender, last_hash, lastrecordindex);  \r\n      // --- END creation -----------------------------------\r\n       \r\n      } // if (success == true)\r\n      else \r\n         {\r\n         //debug = \"transferFrom returns FALSE\";   \r\n         }\r\n       \r\n      \r\n     \r\n   return(1); \r\n   } else\r\n     {\r\n     // low balance  \r\n     //revert();\r\n     }\r\n\r\nreturn(0);\r\n} // buy_lovelock_withLOV\r\n\r\n\r\n\r\n\r\n//\r\n// Transfer owner\r\n//\r\nfunction transfer_owner( address new_owner ) public returns (uint)\r\n{\r\nif (msg.sender != owner) return(0);\r\nrequire(new_owner != 0);\r\n\r\nowner = new_owner;\r\nreturn(1);\r\n} // function transfer_owner()\r\n\r\n\r\n\r\n\r\n\r\n} // contract LoveLock","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"debug_last_approved\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastrecordindex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lovelock_price_LOV\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index_hash\",\"type\":\"bytes32\"},{\"name\":\"name1\",\"type\":\"string\"},{\"name\":\"name2\",\"type\":\"string\"},{\"name\":\"lovemessage\",\"type\":\"string\"},{\"name\":\"locktype\",\"type\":\"uint256\"}],\"name\":\"buy_lovelock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lovelock_price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_owner\",\"type\":\"address\"}],\"name\":\"transfer_owner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"param\",\"type\":\"uint256\"}],\"name\":\"number_to_hash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"last_buyer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"DataRecordIndexStructs\",\"outputs\":[{\"name\":\"index_hash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"last_hash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index_hash\",\"type\":\"bytes32\"},{\"name\":\"name1\",\"type\":\"string\"},{\"name\":\"name2\",\"type\":\"string\"},{\"name\":\"lovemessage\",\"type\":\"string\"},{\"name\":\"locktype\",\"type\":\"uint256\"}],\"name\":\"buy_lovelock_withLOV\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw_to_owner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"thisAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"DataRecordStructs\",\"outputs\":[{\"name\":\"name1\",\"type\":\"string\"},{\"name\":\"name2\",\"type\":\"string\"},{\"name\":\"lovemessage\",\"type\":\"string\"},{\"name\":\"locktype\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"hashindex\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_value2\",\"type\":\"uint256\"}],\"name\":\"LovelockPayment\",\"type\":\"event\"}]","ContractName":"LoveLock","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3d6e5316f54816251ea2b9f84d3ae0ed57896c5539dfabe569f770a19701a6c1"}]}