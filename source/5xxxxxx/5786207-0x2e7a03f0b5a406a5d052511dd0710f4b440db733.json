{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n\r\n// File: node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n// File: node_modules/openzeppelin-solidity/contracts/lifecycle/Pausable.sol\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is not paused.\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is paused.\r\n   */\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() onlyOwner whenNotPaused public {\r\n    paused = true;\r\n    emit Pause();\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() onlyOwner whenPaused public {\r\n    paused = false;\r\n    emit Unpause();\r\n  }\r\n}\r\n\r\n// File: node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    // uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return a / b;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n// File: contracts/CoiPreSale.sol\r\n\r\n/**\r\n * @title CoiPreSale\r\n * @dev This crowdsale contract filters investments made according to\r\n *         - time\r\n *         - amount invested (in Wei)\r\n *      and forwards them to a predefined wallet in case all the filtering conditions are met.\r\n */\r\ncontract CoiPreSale is Pausable {\r\n    using SafeMath for uint256;\r\n\r\n    // start and end timestamps where investments are allowed (both inclusive)\r\n    uint256 public startTime;\r\n    uint256 public endTime;\r\n\r\n    // address where funds are collected\r\n    address public wallet;\r\n\r\n    // track the investments made from each address\r\n    mapping(address => uint256) public investments;\r\n\r\n    // total amount of funds raised (in wei)\r\n    uint256 public weiRaised;\r\n\r\n    uint256 public minWeiInvestment;\r\n    uint256 public maxWeiInvestment;\r\n\r\n    /**\r\n     * @dev Event for token purchase logging\r\n     * @param purchaser who paid for the tokens\r\n     * @param beneficiary who got the tokens\r\n     * @param value weis paid for purchase\r\n     */\r\n    event Investment(address indexed purchaser,\r\n        address indexed beneficiary,\r\n        uint256 value,\r\n        bytes payload);\r\n\r\n    /**\r\n     * @dev Constructor\r\n     * @param _startTime the time to begin the crowdsale in seconds since the epoch\r\n     * @param _endTime the time to begin the crowdsale in seconds since the epoch. Must be later than _startTime.\r\n     * @param _minWeiInvestment the minimum amount for one single investment (in Wei)\r\n     * @param _maxWeiInvestment the maximum amount for one single investment (in Wei)\r\n     * @param _wallet the address to which funds will be directed to\r\n     */\r\n    constructor(uint256 _startTime,\r\n        uint256 _endTime,\r\n        uint256 _minWeiInvestment,\r\n        uint256 _maxWeiInvestment,\r\n        address _wallet) public {\r\n        require(_endTime > _startTime);\r\n        require(_minWeiInvestment > 0);\r\n        require(_maxWeiInvestment > _minWeiInvestment);\r\n        require(_wallet != address(0));\r\n\r\n        startTime = _startTime;\r\n        endTime = _endTime;\r\n\r\n        minWeiInvestment = _minWeiInvestment;\r\n        maxWeiInvestment = _maxWeiInvestment;\r\n\r\n        wallet = _wallet;\r\n    }\r\n\r\n    /**\r\n     * @dev External payable function to receive funds and buy tokens.\r\n     */\r\n    function () external payable {\r\n        buyTokens(msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @dev Adapted Crowdsale#hasEnded\r\n     * @return true if crowdsale event has started\r\n     */\r\n    function hasStarted() external view returns (bool) {\r\n        return now >= startTime;\r\n    }\r\n\r\n    /**\r\n     * @dev Adapted Crowdsale#hasEnded\r\n     * @return true if crowdsale event has ended\r\n     */\r\n    function hasEnded() external view returns (bool) {\r\n        return now > endTime;\r\n    }\r\n\r\n    /**\r\n     * @dev Low level token purchase function\r\n     * @param beneficiary the wallet to which the investment should be credited\r\n     */\r\n    function buyTokens(address beneficiary) public whenNotPaused payable {\r\n        require(beneficiary != address(0));\r\n        require(validPurchase());\r\n\r\n        uint256 weiAmount = msg.value;\r\n\r\n        // track how much wei is raised in total\r\n        weiRaised = weiRaised.add(weiAmount);\r\n\r\n        // track how much was transfered by the specific investor\r\n        investments[beneficiary] = investments[beneficiary].add(weiAmount);\r\n\r\n        emit Investment(msg.sender, beneficiary, weiAmount, msg.data);\r\n\r\n        forwardFunds();\r\n    }\r\n\r\n    // send ether (wei) to the fund collection wallet\r\n    // override to create custom fund forwarding mechanisms\r\n    function forwardFunds() internal {\r\n        wallet.transfer(msg.value);\r\n    }\r\n\r\n    // overriding Crowdsale#validPurchase to add extra cap logic\r\n    // @return true if investors can buy at the moment\r\n    function validPurchase() internal view returns (bool) {\r\n        if (msg.value < minWeiInvestment || msg.value > maxWeiInvestment) {\r\n            return false;\r\n        }\r\n        bool withinPeriod = (now >= startTime) && (now <= endTime);  // 1128581 1129653\r\n        return withinPeriod;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasStarted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minWeiInvestment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxWeiInvestment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_startTime\",\"type\":\"uint256\"},{\"name\":\"_endTime\",\"type\":\"uint256\"},{\"name\":\"_minWeiInvestment\",\"type\":\"uint256\"},{\"name\":\"_maxWeiInvestment\",\"type\":\"uint256\"},{\"name\":\"_wallet\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"Investment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"CoiPreSale","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000005b2212e2000000000000000000000000000000000000000000000000000000005be38a90000000000000000000000000000000000000000000000000005ebd312a02aaae0000000000000000000000000000000000000000000000908f6f24ba51a81fa0000000000000000000000000caf0c986afc3b4d7c2576647173c40acb915206d","Library":"","SwarmSource":"bzzr://bf782dee22cbf6dd0504efaa755ac8c2c78279a4dcb67a883899ab0669886e34"}]}