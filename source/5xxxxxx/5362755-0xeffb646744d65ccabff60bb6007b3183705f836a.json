{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n\r\ncontract GKInterface {\r\n\r\n function enter(bytes32 _passcode, bytes8 _gateKey) public returns (bool);\r\n  \r\n}\r\n\r\ncontract theProxy  {\r\n  // This contract collects addresses of the initial members of theCyber. In\r\n  // order to register, the entrant must first provide a passphrase that will\r\n  // hash to a sequence known to the gatekeeper. They must also find a way to\r\n  // get around a few barriers to entry before they can successfully register.\r\n  // Once 250 addresses have been submitted, the assignAll method may be called,\r\n  // which (assuming theCyberGatekeeper is itself a member of theCyber), will\r\n  // assign 250 new members, each owned by one of the submitted addresses.\r\n\r\n  // The gatekeeper will interact with theCyber contract at the given address.\r\n  address private constant THECYBERGATEKEEPER_ = 0x44919b8026f38D70437A8eB3BE47B06aB1c3E4Bf;\r\n\r\n  function theProxy() public {}\r\n\r\n  \r\n\r\n  function enter(bytes32 _passcode, bytes8 _gateKey) public returns (bool) {\r\n    \r\n    GKInterface gk = GKInterface(THECYBERGATEKEEPER_);\r\n    return gk.enter(_passcode, _gateKey);\r\n\r\n  }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_passcode\",\"type\":\"bytes32\"},{\"name\":\"_gateKey\",\"type\":\"bytes8\"}],\"name\":\"enter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"theProxy","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ba2617ab6f9645f76c259b94c64e845657a5ea7c6ffd4ad952276a659f592bab"}]}