{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract lendingManager {\r\n\r\nuint256 public REQUESTED_STATUS; \r\nuint256 public ACTIVE_STATUS; \r\nuint256 public REQUEST_CANCELED_BY_BORROWER_STATUS;\r\nuint256 public REQUEST_CANCELED_BY_LENDER_STATUS;\r\nuint256 public ACTIVE_LOAN_CANCELED_BY_LENDER_STATUS;\r\nuint256 public COMPLETION_STATUS; \r\nuint256 public DEFAULTED_STATUS;\r\n\r\nuint256 public MAX_LOAN_AMOUNT;\r\nuint256 public MAX_INTEREST_AMOUNT;\r\n\r\nuint256 public PERCENTAGE_PRECISION;\r\n\r\naddress public ELIX_ADDRESS;\r\n\r\nevent LoanRequestedAtIndex(uint256 index);\r\nevent LoanCanceledByBorrowerAtIndex(uint256 index); \r\nevent LoanCanceledByLenderAtIndex(uint256 index); \r\nevent Defaulted(uint256 index,address informer); \r\nevent LoanBegunAtIndex(uint256 index); \r\nevent LoanUpdatedByVolAddress(uint256 index,uint256 oldAmount,uint256 oldInterest,uint256 amount,uint256 interest);\r\nevent PaidBackPortionForLoanAtIndex(uint256 index,uint256 amount); \r\nevent LoanPaidLateAtIndex(uint256 index,uint256 amount); \r\nevent LoanRequestCanceledByLenderAtIndex(uint256 index);\r\nevent LoanCompletedWithFinalPortion(uint256 index, uint256 amount); \r\nevent ActiveLoanUpdatedByVolAddressToCompletion(uint256 index);\r\nevent LenderClaimedLoanAtIndex(address lender,uint256 index);\r\n\r\nloan[] public loans; \r\n\r\nstruct loan   {\r\n    address borrower;\r\n    address lender;\r\n    address volAddress;\r\n    uint256 startBlock;\r\n    uint256 amount; \r\n    uint256 paidBackBlock; \r\n    uint256 status;\r\n    uint256 amountPaidBackSoFar; \r\n    uint256 loanLength; \r\n    uint256 interest; \r\n    bool borrowerPaidLate;\r\n    bool requestCancel;\r\n    string message; \r\n}\r\n\r\nfunction lendingManager()  {\r\n    \r\n    REQUESTED_STATUS=1;\r\n    ACTIVE_STATUS=2;\r\n    REQUEST_CANCELED_BY_BORROWER_STATUS=3; \r\n    REQUEST_CANCELED_BY_LENDER_STATUS=4; \r\n    COMPLETION_STATUS=5;\r\n    ACTIVE_LOAN_CANCELED_BY_LENDER_STATUS=6;\r\n    DEFAULTED_STATUS=7;\r\n\r\n    MAX_LOAN_AMOUNT = 100000000000000000000000000000;\r\n    MAX_INTEREST_AMOUNT = 100000000000000000000000000000;\r\n\r\n    PERCENTAGE_PRECISION = 1000000000000000000;\r\n\r\n\r\n    ELIX_ADDRESS = 0xc8C6A31A4A806d3710A7B38b7B296D2fABCCDBA8;\r\n}\r\n\r\nfunction loanCompleted(uint256 index, uint256 amount) private {\r\n\r\n    loans[index].paidBackBlock=block.number;\r\n    \r\n    if (block.number>SafeMath.add(loans[index].startBlock,loans[index].loanLength)) {\r\n        loans[index].borrowerPaidLate=true;\r\n        emit LoanPaidLateAtIndex(index,amount); \r\n    }\r\n\r\n    loans[index].status=COMPLETION_STATUS; \r\n    emit LoanCompletedWithFinalPortion(index, amount); \r\n    if(amount > 0){ \r\n        if (! elixir(ELIX_ADDRESS).transferFrom(loans[index].borrower,loans[index].lender, amount)) revert();\r\n    }\r\n\r\n}\r\n\r\nfunction adjustLoanParams(uint256 newPrincipal, uint256 newInterest, uint256 index) public {\r\n    require(newPrincipal > 0);\r\n    require(msg.sender == loans[index].volAddress);\r\n    require(loans[index].status == REQUESTED_STATUS || loans[index].status == ACTIVE_STATUS);\r\n    require(newPrincipal <= MAX_LOAN_AMOUNT);\r\n    require(newInterest <= MAX_INTEREST_AMOUNT);\r\n\r\n    if (block.number==loans[index].startBlock) revert(); \r\n\r\n    if( SafeMath.add(newPrincipal,newInterest) > loans[index].amountPaidBackSoFar){  \r\n        \r\n        emit LoanUpdatedByVolAddress(index,loans[index].amount,loans[index].interest,newPrincipal,newInterest);\r\n        loans[index].amount = newPrincipal;\r\n        loans[index].interest = newInterest; \r\n    } else {\r\n        uint256 adjustedTotalRatio = SafeMath.div( SafeMath.mul(PERCENTAGE_PRECISION,loans[index].amountPaidBackSoFar), SafeMath.add(newPrincipal,newInterest) );\r\n        loans[index].interest = SafeMath.div( SafeMath.mul(newInterest, adjustedTotalRatio), PERCENTAGE_PRECISION);\r\n        loans[index].amount = SafeMath.sub(loans[index].amountPaidBackSoFar, loans[index].interest);\r\n\t\temit ActiveLoanUpdatedByVolAddressToCompletion(index);\r\n\t\tloanCompleted(index, 0);\r\n    }  \r\n}\r\n\r\n\r\nfunction requestLoan(address lender, address volAddress, uint256 amount,uint256 length,uint256 interest,bool requestCancel, string loanMessage) public returns(uint256)   {\r\n    if (msg.sender==lender) revert(); \r\n    \r\n    \r\n    if (amount==0 || length<4 || length>225257143) revert(); \r\n    \r\n   \r\n    require(amount <= MAX_LOAN_AMOUNT);\r\n    require(interest <= MAX_INTEREST_AMOUNT);    \r\n\r\n    loans.push(loan(msg.sender,lender, volAddress,0,amount,0,REQUESTED_STATUS,0,length,interest,false,false,loanMessage));\r\n    \r\n    emit LoanRequestedAtIndex(loans.length-1); \r\n    \r\n    return (loans.length-1);\r\n}\r\n\r\n\r\nfunction cancelLoanRequestAtIndexByLender(uint256 index) public {\r\n  if (loans[index].status==REQUESTED_STATUS && loans[index].lender==msg.sender)    {\r\n        \r\n        loans[index].status=REQUEST_CANCELED_BY_LENDER_STATUS; \r\n        emit LoanRequestCanceledByLenderAtIndex(index); \r\n  }\r\n}\r\n\r\n\r\nfunction cancelLoanRequestAtIndexByBorrower(uint256 index) public {\r\n  if (loans[index].status==REQUESTED_STATUS && loans[index].borrower==msg.sender)    {\r\n       \r\n        loans[index].status=REQUEST_CANCELED_BY_BORROWER_STATUS; \r\n        emit LoanCanceledByBorrowerAtIndex(index); \r\n  }\r\n}\r\n\r\n\r\nfunction cancelActiveLoanAtIndex(uint256 index) public  {\r\n  if (loans[index].status==ACTIVE_STATUS && loans[index].lender==msg.sender)   {\r\n\r\n      loans[index].status = ACTIVE_LOAN_CANCELED_BY_LENDER_STATUS;\r\n      emit LoanCanceledByLenderAtIndex(index); \r\n  }\r\n}\r\n\r\n\r\nfunction stateBorrowerDefaulted(uint256 index) public  {\r\n  if (loans[index].status==ACTIVE_STATUS && loans[index].lender==msg.sender)   {\r\n    if (block.number>SafeMath.add(loans[index].startBlock,loans[index].loanLength)){\r\n      emit Defaulted(index,msg.sender); \r\n      loans[index].status=DEFAULTED_STATUS;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction declareDefaultAsBorrower(uint256 index) public  {\r\n  if (loans[index].status==ACTIVE_STATUS && loans[index].borrower==msg.sender)   {\r\n      emit Defaulted(index,msg.sender); \r\n      loans[index].status=DEFAULTED_STATUS;\r\n  }\r\n}\r\n\r\n\r\nfunction attemptBeginLoanAtIndex(uint256 index) public returns(bool) {\r\n    if (loans[index].status==REQUESTED_STATUS)    {\r\n    \tif (loans[index].lender==0x000000000000000000000000000000000000dEaD)\t{\r\n\t\t\t\r\n\t\t\tif (msg.sender==loans[index].borrower) revert();\r\n\t\t\tloans[index].lender=msg.sender;\r\n\t\t\t\r\n\t\t\temit LenderClaimedLoanAtIndex(msg.sender,index);\r\n\t\t} else\t{\r\n\t\t\tif (!(msg.sender==loans[index].lender)) revert();\r\n\t\t}\r\n\t\t\r\n        \r\n        loans[index].status=ACTIVE_STATUS;\r\n        loans[index].startBlock = block.number;\r\n        emit LoanBegunAtIndex(index);\r\n        \r\n        if (! elixir(ELIX_ADDRESS).transferFrom(msg.sender, loans[index].borrower, loans[index].amount) ) revert();\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nfunction payAmountForLoanAtIndex(uint256 amount,uint256 index) public {\r\n\r\n    if (loans[index].status==ACTIVE_STATUS && msg.sender==loans[index].borrower && amount>0)    {\r\n        require(amount <= SafeMath.add(MAX_LOAN_AMOUNT,MAX_INTEREST_AMOUNT));\r\n        require( SafeMath.add(amount, loans[index].amountPaidBackSoFar) <= SafeMath.add(loans[index].amount, loans[index].interest) );\r\n    \r\n        if (block.number==loans[index].startBlock) revert();\r\n    \t        \r\n       \r\n        loans[index].amountPaidBackSoFar = SafeMath.add(loans[index].amountPaidBackSoFar,amount);\r\n        \r\n        if (loans[index].amountPaidBackSoFar == SafeMath.add(loans[index].amount,loans[index].interest))    {\r\n            loanCompleted(index, amount);\r\n        } else {\r\n            emit PaidBackPortionForLoanAtIndex(index,amount); \r\n            \r\n            if (! elixir(ELIX_ADDRESS).transferFrom(msg.sender,loans[index].lender, amount)) revert();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction returnBorrower(uint256 index) public returns(address)\t{\r\n\treturn loans[index].borrower;\r\n}\r\n\r\nfunction returnLender(uint256 index) public returns(address)\t{\r\n\treturn loans[index].lender;\r\n}\r\n\r\nfunction returnVolAdjuster(uint256 index) public returns(address)\t{\r\n\treturn loans[index].volAddress;\r\n}\r\n\r\nfunction returnStartBlock(uint256 index) returns(uint256)\t{\r\n\treturn loans[index].startBlock;\r\n}\r\n\r\nfunction returnAmount(uint256 index) returns(uint256)\t{\r\n\treturn loans[index].amount;\r\n}\r\n\r\nfunction returnPaidBackBlock(uint256 index) returns(uint256)\t{\r\n\treturn loans[index].paidBackBlock;\r\n}\r\n\r\nfunction returnLoanStatus(uint256 index) public returns(uint256)\t{\r\n\treturn loans[index].status;\r\n}\r\n\r\nfunction returnAmountPaidBackSoFar(uint256 index) public returns(uint256)\t{\r\n\treturn loans[index].amountPaidBackSoFar;\r\n}\r\n\r\nfunction returnLoanLength(uint256 index) public returns(uint256)\t{\r\n\treturn loans[index].loanLength;\r\n}\r\n\r\nfunction returnInterest(uint256 index) public returns(uint256)\t{\r\n\treturn loans[index].interest;\r\n}\r\n\r\nfunction returnBorrowerPaidLate(uint256 index) public returns(bool)\t{\r\n\treturn loans[index].borrowerPaidLate;\r\n}\r\n\r\nfunction returnRequestCancel(uint256 index) public returns(bool)\t{\r\n\treturn loans[index].requestCancel;\r\n}\r\n\r\nfunction returnMessage(uint256 index) public returns(string)\t{\r\n\treturn loans[index].message;\r\n}\r\n\r\nfunction getLoansCount() public returns(uint256) {\r\n    return loans.length;\r\n}\r\n\r\nfunction returnAmountPlusInterest(uint256 index) returns(uint256)\t{\r\n\treturn SafeMath.add(loans[index].amount,loans[index].interest);\r\n}\r\n\r\n}\r\n\r\ncontract elixir {\r\n    function transfer(address _to, uint256 _amount) returns (bool success);\r\n    function transferFrom(address _from,address _to,uint256 _amount) returns (bool success);\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"returnAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"lender\",\"type\":\"address\"},{\"name\":\"volAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"length\",\"type\":\"uint256\"},{\"name\":\"interest\",\"type\":\"uint256\"},{\"name\":\"requestCancel\",\"type\":\"bool\"},{\"name\":\"loanMessage\",\"type\":\"string\"}],\"name\":\"requestLoan\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getLoansCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"returnStartBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REQUESTED_STATUS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"stateBorrowerDefaulted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"returnAmountPaidBackSoFar\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"returnVolAdjuster\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REQUEST_CANCELED_BY_BORROWER_STATUS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"declareDefaultAsBorrower\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"cancelLoanRequestAtIndexByLender\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_INTEREST_AMOUNT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"returnRequestCancel\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"returnLender\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COMPLETION_STATUS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEFAULTED_STATUS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"returnBorrower\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPrincipal\",\"type\":\"uint256\"},{\"name\":\"newInterest\",\"type\":\"uint256\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"adjustLoanParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"cancelLoanRequestAtIndexByBorrower\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACTIVE_STATUS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REQUEST_CANCELED_BY_LENDER_STATUS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"returnLoanLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"payAmountForLoanAtIndex\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_LOAN_AMOUNT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"returnLoanStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACTIVE_LOAN_CANCELED_BY_LENDER_STATUS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"attemptBeginLoanAtIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"returnAmountPlusInterest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"name\":\"borrower\",\"type\":\"address\"},{\"name\":\"lender\",\"type\":\"address\"},{\"name\":\"volAddress\",\"type\":\"address\"},{\"name\":\"startBlock\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"paidBackBlock\",\"type\":\"uint256\"},{\"name\":\"status\",\"type\":\"uint256\"},{\"name\":\"amountPaidBackSoFar\",\"type\":\"uint256\"},{\"name\":\"loanLength\",\"type\":\"uint256\"},{\"name\":\"interest\",\"type\":\"uint256\"},{\"name\":\"borrowerPaidLate\",\"type\":\"bool\"},{\"name\":\"requestCancel\",\"type\":\"bool\"},{\"name\":\"message\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERCENTAGE_PRECISION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"cancelActiveLoanAtIndex\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"returnMessage\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"returnPaidBackBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"returnInterest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ELIX_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"returnBorrowerPaidLate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"LoanRequestedAtIndex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"LoanCanceledByBorrowerAtIndex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"LoanCanceledByLenderAtIndex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"informer\",\"type\":\"address\"}],\"name\":\"Defaulted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"LoanBegunAtIndex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"oldInterest\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"interest\",\"type\":\"uint256\"}],\"name\":\"LoanUpdatedByVolAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaidBackPortionForLoanAtIndex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LoanPaidLateAtIndex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"LoanRequestCanceledByLenderAtIndex\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LoanCompletedWithFinalPortion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ActiveLoanUpdatedByVolAddressToCompletion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"LenderClaimedLoanAtIndex\",\"type\":\"event\"}]","ContractName":"lendingManager","CompilerVersion":"v0.4.25-nightly.2018.7.11+commit.7910c80","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d3fe669c3417cf8a1b35e56fce009984e1113d320e3c22a9d633d085e2ae3fbd"}]}