{"status":"1","message":"OK","result":[{"SourceCode":"contract EthereumButton {\r\n    address private owner;\r\n    address private lastPresser;\r\n    uint256 private targetBlock;\r\n    uint256 private pressCount;\r\n    bool private started = false;\r\n\r\n    event Pressed(address _presser, uint256 _timestamp);\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyWhenStarted() {\r\n        require(started == true);\r\n        _;\r\n    }\r\n\r\n    modifier onlyWhenPaused() {\r\n        require(started == false);\r\n        _;\r\n    }\r\n    \r\n    function EthereumButton() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function start() public onlyOwner onlyWhenPaused {\r\n        started = true;\r\n        targetBlock = block.number + 240;\r\n        pressCount = 0;\r\n        lastPresser = 0x0;\r\n    }\r\n\r\n    function() public payable {\r\n        revert();\r\n    }   \r\n\r\n    function pressButton() public onlyWhenStarted payable {\r\n        require(msg.value == 10000000000000000 && block.number <= targetBlock);\r\n\r\n        lastPresser = msg.sender;\r\n        targetBlock = targetBlock + 240;\r\n        pressCount++;\r\n\r\n        Pressed(msg.sender, now);\r\n    }\r\n\r\n    function getPressCount() public view returns(uint256) {\r\n        return pressCount;\r\n    }\r\n\r\n    function getTargetBlock() public view returns(uint256) {\r\n        return targetBlock;\r\n    }\r\n\r\n    function getLastPresser() public view returns(address) {\r\n        return lastPresser;\r\n    }\r\n    \r\n    function claimPrize() public onlyWhenStarted {\r\n        require(block.number > targetBlock && (msg.sender == lastPresser || msg.sender == owner));\r\n\r\n        // In case of nobody pressed it, the owner can call this to set started to false\r\n        if (pressCount == 0) {\r\n            started = false;\r\n            return;\r\n        }\r\n\r\n        uint256 amount = pressCount * 9500000000000000;\r\n        \r\n        lastPresser.transfer(amount);\r\n\r\n        started = false;\r\n    }\r\n\r\n    function depositEther() public payable onlyOwner { } \r\n\r\n    function kill() public onlyOwner onlyWhenPaused {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    function withdrawBalance() public onlyOwner onlyWhenPaused {\r\n        owner.transfer(this.balance);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimPrize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPressCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTargetBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pressButton\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastPresser\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_presser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"Pressed\",\"type\":\"event\"}]","ContractName":"EthereumButton","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://181abee5bc395a94ede7fa78945725c311c282a2dccbea15fea3e9a721586112"}]}