{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\ncontract ERC20 {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function allowance(address owner, address spender) constant returns (uint);\r\n\r\n  function transfer(address to, uint value) returns (bool ok);\r\n  function transferFrom(address from, address to, uint value) returns (bool ok);\r\n  function approve(address spender, uint value) returns (bool ok);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n  event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\ncontract SafeMath {\r\n  function safeMul(uint a, uint b) internal returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint a, uint b) internal returns (uint) {\r\n    assert(b > 0);\r\n    uint c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint a, uint b) internal returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint a, uint b) internal returns (uint) {\r\n    uint c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n}\r\n\r\ncontract StandardToken is ERC20, SafeMath {\r\n\r\n  event Minted(address receiver, uint amount);\r\n\r\n  mapping(address => uint) balances;\r\n\r\n  mapping (address => mapping (address => uint)) allowed;\r\n\r\n  function isToken() public constant returns (bool weAre) {\r\n    return true;\r\n  }\r\n\r\n  function transfer(address _to, uint _value) returns (bool success) {\r\n    balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n    balances[_to] = safeAdd(balances[_to], _value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint _value) returns (bool success) {\r\n    uint _allowance = allowed[_from][msg.sender];\r\n\r\n    balances[_to] = safeAdd(balances[_to], _value);\r\n    balances[_from] = safeSub(balances[_from], _value);\r\n    allowed[_from][msg.sender] = safeSub(_allowance, _value);\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function balanceOf(address _owner) constant returns (uint balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  function approve(address _spender, uint _value) returns (bool success) {\r\n\r\n   require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) constant returns (uint remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n}\r\n\r\ncontract BitBeri is StandardToken {\r\n\r\n    string public name = \"BitBeri\";\r\n    string public symbol = \"BTB\";\r\n    uint public decimals = 18;\r\n\r\n    \r\n    bool public halted = false; \r\n    bool public preTge = true; \r\n    bool public stageOne = false; \r\n    bool public stageTwo = false; \r\n    bool public stageThree = false; \r\n    bool public freeze = true; \r\n\r\n   \r\n    address public founder = 0x0;\r\n    address public owner = 0x0;\r\n\r\n    uint public totalTokens = 100000000000000000000000000;\r\n    uint public team = 5000000000000000000000000;\r\n    uint public bounty = 5000000000000000000000000; \r\n\r\n    uint public preTgeCap = 2500000000000000000000000;\r\n    uint public tgeCap = 50000000000000000000000000; \r\n\r\n    uint public presaleTokenSupply = 0; \r\n    uint public presaleEtherRaised = 0; \r\n    uint public preTgeTokenSupply = 0; \r\n\r\n    event Buy(address indexed sender, uint eth, uint fbt);\r\n\r\n    event TokensSent(address indexed to, uint256 value);\r\n    event ContributionReceived(address indexed to, uint256 value);\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    function BitBeri(address _founder) payable {\r\n        owner = msg.sender;\r\n        founder = _founder;\r\n\r\n        balances[founder] = team;\r\n        totalTokens = safeSub(totalTokens, team);\r\n        totalTokens = safeSub(totalTokens, bounty);\r\n        totalSupply = totalTokens;\r\n        balances[owner] = totalSupply;\r\n    }\r\n\r\n   function buy() public payable returns(bool) {\r\n        require(!halted);\r\n        require(msg.value>0);\r\n        \r\n        uint256 weiAmount = msg.value;\r\n        uint256 tokens = safeDiv(safeMul(weiAmount,10**17),13892747985551);\r\n\r\n        require(balances[owner]>tokens);\r\n\r\n        if (stageThree) {\r\n\t\t\tpreTge = false;\r\n\t\t\tstageOne = false;\r\n\t\t\tstageTwo = false;\r\n        }\r\n\t\t\r\n        if (stageTwo) {\r\n\t\t\tpreTge = false;\r\n\t\t\tstageOne = false;\r\n            tokens = tokens + (tokens / 10);\r\n        }\r\n\t\t\r\n        if (stageOne) {\r\n\t\t\tpreTge = false;\r\n            tokens = tokens + (tokens / 5);\r\n        }\r\n\t\t\r\n        if (preTge) {\r\n            tokens = tokens + (tokens / 2);\r\n        }\r\n\r\n        if (preTge) {\r\n            require(safeAdd(presaleTokenSupply, tokens) < preTgeCap);\r\n        } else {\r\n            require(safeAdd(presaleTokenSupply, tokens) < safeSub(tgeCap, preTgeTokenSupply));\r\n        }\r\n\r\n        founder.transfer(msg.value);\r\n\r\n        balances[msg.sender] = safeAdd(balances[msg.sender], tokens);\r\n        balances[owner] = safeSub(balances[owner], tokens);\r\n\r\n        if (preTge) {\r\n            preTgeTokenSupply  = safeAdd(preTgeTokenSupply, tokens);\r\n        }\r\n        presaleTokenSupply = safeAdd(presaleTokenSupply, tokens);\r\n        presaleEtherRaised = safeAdd(presaleEtherRaised, msg.value);\r\n\r\n        Buy(msg.sender, msg.value, tokens);\r\n\r\n        TokensSent(msg.sender, tokens);\r\n        ContributionReceived(msg.sender, msg.value);\r\n        Transfer(owner, msg.sender, tokens);\r\n\r\n        return true;\r\n    }\r\n\r\n    function PreTgeEnable() onlyOwner() {\r\n        preTge = true;\r\n    }\r\n\r\n    function PreTgeDisable() onlyOwner() {\r\n        preTge = false;\r\n    }\r\n\r\n    function StageOneEnable() onlyOwner() {\r\n        stageOne = true;\r\n    }\r\n\r\n    function StageOneDisable() onlyOwner() {\r\n        stageOne = false;\r\n    }\r\n\t\r\n    function StageTwoEnable() onlyOwner() {\r\n        stageTwo = true;\r\n    }\r\n\r\n    function StageTwoDisable() onlyOwner() {\r\n        stageTwo = false;\r\n    }\r\n\r\n    function StageThreeEnable() onlyOwner() {\r\n        stageThree = true;\r\n    }\r\n\r\n    function StageThreeDisable() onlyOwner() {\r\n        stageThree = false;\r\n    }\r\n\r\n    function EventEmergencyStop() onlyOwner() {\r\n        halted = true;\r\n    }\r\n\r\n    function EventEmergencyContinue() onlyOwner() {\r\n        halted = false;\r\n    }\r\n\r\n    function sendTeamTokens(address _to, uint256 _value) onlyOwner() {\r\n        balances[founder] = safeSub(balances[founder], _value);\r\n        balances[_to] = safeAdd(balances[_to], _value);\r\n        TokensSent(_to, _value);\r\n        Transfer(owner, _to, _value);\r\n    }\r\n\r\n    function sendBounty(address _to, uint256 _value) onlyOwner() {\r\n        bounty = safeSub(bounty, _value);\r\n        balances[_to] = safeAdd(balances[_to], _value);\r\n        TokensSent(_to, _value);\r\n        Transfer(owner, _to, _value);\r\n    }\r\n\r\n    function sendSupplyTokens(address _to, uint256 _value) onlyOwner() {\r\n        balances[owner] = safeSub(balances[owner], _value);\r\n        balances[_to] = safeAdd(balances[_to], _value);\r\n        TokensSent(_to, _value);\r\n        Transfer(owner, _to, _value);\r\n    }\r\n\r\n\r\n    function transfer(address _to, uint256 _value) isAvailable() returns (bool success) {\r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) isAvailable() returns (bool success) {\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n    function burnRemainingTokens() isAvailable() onlyOwner() {\r\n        Burn(owner, balances[owner]);\r\n        balances[owner] = 0;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier isAvailable() {\r\n        require(!halted && !freeze);\r\n        _;\r\n    }\r\n\r\n    function() payable {\r\n        buy();\r\n    }\r\n\r\n    function freeze() onlyOwner() {\r\n         freeze = true;\r\n    }\r\n\r\n    function unFreeze() onlyOwner() {\r\n         freeze = false;\r\n    }\r\n\r\n    function changeOwner(address _to) onlyOwner() {\r\n        balances[_to] = balances[owner];\r\n        balances[owner] = 0;\r\n        owner = _to;\r\n    }\r\n\r\n    function changeFounder(address _to) onlyOwner() {\r\n        balances[_to] = balances[founder];\r\n        balances[founder] = 0;\r\n        founder = _to;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"StageTwoEnable\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"StageTwoDisable\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendTeamTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"PreTgeDisable\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stageTwo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stageOne\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendBounty\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleEtherRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"EventEmergencyStop\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"StageOneDisable\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"StageThreeEnable\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preTge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendSupplyTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preTgeTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unFreeze\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"StageThreeDisable\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"burnRemainingTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tgeCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"changeFounder\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bounty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preTgeCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"StageOneEnable\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"halted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"EventEmergencyContinue\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stageThree\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"PreTgeEnable\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isToken\",\"outputs\":[{\"name\":\"weAre\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_founder\",\"type\":\"address\"}],\"payable\":true,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fbt\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokensSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ContributionReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"BitBeri","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000006c47209fdb945d6faa88fa00f26308ea405aca79","Library":"","SwarmSource":"bzzr://652686bf61666db085957166603d263dc0ee090dd247c23fdd1e486e20f4863f"}]}