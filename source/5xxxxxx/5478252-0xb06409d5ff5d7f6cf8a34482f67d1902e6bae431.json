{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\ncontract DU30Token {\r\n    /* ERC20 Public variables of the token */\r\n    string public constant version = 'DU30 0.1';\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n\r\n    /* ERC20 This creates an array with all balances */\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n\r\n    /* store the block number when a withdrawal has been requested*/\r\n    mapping (address => withdrawalRequest) public withdrawalRequests;\r\n    struct withdrawalRequest {\r\n    uint sinceTime;\r\n    uint256 amount;\r\n    }\r\n\r\n    uint256 public constant initialSupply = 50000000;\r\n\r\n    /**\r\n     * ERC20 events these generate a public event on the blockchain that will notify clients\r\n    */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    event Deposited(address indexed by, uint256 amount);\r\n\r\n    /**\r\n     * Initializes contract with initial supply tokens to the creator of the contract\r\n     * In our case, there's no initial supply. Tokens will be created as ether is sent\r\n     * to the fall-back function. Then tokens are burned when ether is withdrawn.\r\n     */\r\n    function DU30Token(\r\n    string tokenName,\r\n    uint8 decimalUnits,\r\n    string tokenSymbol\r\n    ) {\r\n\r\n        balanceOf[msg.sender] = initialSupply;              // Give the creator all initial tokens (0 in this case)\r\n        totalSupply = initialSupply * 1000000000000000000;  // Update total supply (0 in this case)\r\n        name = tokenName;                                   // Set the name for display purposes\r\n        symbol = tokenSymbol;                               // Set the symbol for display purposes\r\n        decimals = decimalUnits;                            // Amount of decimals for display purposes\r\n    }\r\n\r\n  \r\n    modifier notPendingWithdrawal {\r\n        if (withdrawalRequests[msg.sender].sinceTime > 0) throw;\r\n        _;\r\n    }\r\n\r\n\r\n    function transfer(address _to, uint256 _value) notPendingWithdrawal {\r\n        if (balanceOf[msg.sender] < _value) throw;           \r\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw; \r\n        if (withdrawalRequests[_to].sinceTime > 0) throw;   \r\n        balanceOf[msg.sender] -= _value;                     \r\n        balanceOf[_to] += _value;                          \r\n        Transfer(msg.sender, _to, _value);               \r\n    }\r\n\r\n \r\n    function approve(address _spender, uint256 _value) notPendingWithdrawal\r\n    returns (bool success) {\r\n        if ((_value != 0) && (allowance[msg.sender][_spender] != 0)) throw;\r\n        allowance[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;                                      // we must return a bool as part of the ERC20\r\n    }\r\n\r\n\r\n    /**\r\n     * ERC-20 Approves and then calls the receiving contract\r\n    */\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) notPendingWithdrawal\r\n    returns (bool success) {\r\n\r\n        if (!approve(_spender, _value)) return false;\r\n\r\n        if(!_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)) {\r\n            throw;\r\n        }\r\n        return true;\r\n    }\r\n\r\n  \r\n    function transferFrom(address _from, address _to, uint256 _value)\r\n    returns (bool success) {\r\n        // on the behalf of _from\r\n        if (withdrawalRequests[_from].sinceTime > 0) throw;   \r\n        if (withdrawalRequests[_to].sinceTime > 0) throw;     \r\n        if (balanceOf[_from] < _value) throw;                 \r\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw; \r\n        if (_value > allowance[_from][msg.sender]) throw;     \r\n        balanceOf[_from] -= _value;                           \r\n        balanceOf[_to] += _value;                            \r\n        allowance[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Fallback function when sending ether to the contract\r\n     * Gas use: 65051\r\n    */\r\n    function () payable notPendingWithdrawal {\r\n        uint256 amount = msg.value;         // amount that was sent\r\n        if (amount == 0) throw;             // need to send some ETH\r\n        balanceOf[msg.sender] += amount;    // mint new tokens\r\n        totalSupply += amount;              // track the supply\r\n        Transfer(0, msg.sender, amount);    // notify of the event\r\n        Deposited(msg.sender, amount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawalRequests\",\"outputs\":[{\"name\":\"sinceTime\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"}]","ContractName":"DU30Token","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000944553330546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044455333000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://d6a3ed8e2439aca9c593a13978ec6a7bb37ebe8b5e2b5ba00f61282eb46e0f6e"}]}