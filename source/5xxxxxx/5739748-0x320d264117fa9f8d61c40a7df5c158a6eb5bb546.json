{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n  event OwnershipTransferred (address indexed _from, address indexed _to);\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public{\r\n    owner = msg.sender;\r\n    OwnershipTransferred(address(0), owner);\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    owner = newOwner;\r\n    OwnershipTransferred(owner,newOwner);\r\n  }\r\n}\r\n\r\n/**\r\n * @title Token\r\n * @dev API interface for interacting with the Token contract \r\n */\r\ninterface Token {\r\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\r\n  function balanceOf(address _owner) constant external returns (uint256 balance);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function approve(address spender, uint256 value) external returns (bool); \r\n}\r\n\r\n/**\r\n * @title AirDropAFTK5May Ver 1.0\r\n * @dev This contract can be used for Airdrop for AFTK Token\r\n *\r\n */\r\ncontract AirDropAFTK5May is Ownable {\r\n\r\n  Token token;\r\n  mapping(address => uint256) public redeemBalanceOf; \r\n  event BalanceSet(address indexed beneficiary, uint256 value);\r\n  event Redeemed(address indexed beneficiary, uint256 value);\r\n  event BalanceCleared(address indexed beneficiary, uint256 value);\r\n  event TokenSendStart(address indexed beneficiary, uint256 value);\r\n  event TransferredToken(address indexed to, uint256 value);\r\n  event FailedTransfer(address indexed to, uint256 value);\r\n\r\n  function AirDropAFTK5May() public {\r\n      address _tokenAddr = 0x7fa2f70bd4c4120fdd539ebd55c04118ba336b9e;\r\n      token = Token(_tokenAddr);\r\n  }\r\n\r\n /**\r\n  * @dev Send approved tokens to one address\r\n  * @param dests -> address where you want to send tokens\r\n  * @param quantity -> number of tokens to send\r\n  */\r\n function sendTokensToOneAddress(address dests, uint256 quantity)  public payable onlyOwner returns (uint) {\r\n\tTokenSendStart(dests,quantity * 10**18);\r\n\ttoken.approve(dests, quantity * 10**18);\r\n\trequire(token.transferFrom(owner , dests ,quantity * 10**18));\r\n    return token.balanceOf(dests);\r\n  }\r\n  \r\n /**\r\n  * @dev Send approved tokens to seven addresses\r\n  * @param dests1 -> address where you want to send tokens\r\n  * @param dests2 -> address where you want to send tokens\r\n  * @param dests3 -> address where you want to send tokens\r\n  * @param dests4 -> address where you want to send tokens\r\n  * @param dests5 -> address where you want to send tokens\r\n  * @param dests6 -> address where you want to send tokens\r\n  * @param dests7 -> address where you want to send tokens\r\n  * @param quantity -> number of tokens to send\r\n  */\r\n function sendTokensToSevenAddresses(address dests1, address dests2, address dests3, address dests4, address dests5, \r\n address dests6, address dests7,  uint256 quantity)  public payable onlyOwner returns (uint) {\r\n\tTokenSendStart(dests1,quantity * 10**18);\r\n\ttoken.approve(dests1, quantity * 10**18);\r\n\trequire(token.transferFrom(owner , dests1 ,quantity * 10**18));\r\n\tTokenSendStart(dests2,quantity * 10**18);\r\n\ttoken.approve(dests2, quantity * 10**18);\r\n\trequire(token.transferFrom(owner , dests2 ,quantity * 10**18));\r\n\tTokenSendStart(dests3,quantity * 10**18);\r\n\ttoken.approve(dests3, quantity * 10**18);\r\n\trequire(token.transferFrom(owner , dests3 ,quantity * 10**18));\r\n\tTokenSendStart(dests4,quantity * 10**18);\r\n\ttoken.approve(dests4, quantity * 10**18);\r\n\trequire(token.transferFrom(owner , dests4 ,quantity * 10**18));\r\n\tTokenSendStart(dests5,quantity * 10**18);\r\n\ttoken.approve(dests5, quantity * 10**18);\r\n\trequire(token.transferFrom(owner , dests5 ,quantity * 10**18));\r\n\tTokenSendStart(dests6,quantity * 10**18);\r\n\ttoken.approve(dests6, quantity * 10**18);\r\n\trequire(token.transferFrom(owner , dests6 ,quantity * 10**18));\r\n\tTokenSendStart(dests7,quantity * 10**18);\r\n\ttoken.approve(dests7, quantity * 10**18);\r\n\trequire(token.transferFrom(owner , dests7 ,quantity * 10**18));\r\n\treturn token.balanceOf(dests7);\r\n  }\r\n  \r\n \r\n /**\r\n  * @dev admin can destroy this contract\r\n  */\r\n  function destroy() onlyOwner public { uint256 tokensAvailable = token.balanceOf(this); require (tokensAvailable > 0); token.transfer(owner, tokensAvailable);  selfdestruct(owner);  } \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"redeemBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dests\",\"type\":\"address\"},{\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"sendTokensToOneAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dests1\",\"type\":\"address\"},{\"name\":\"dests2\",\"type\":\"address\"},{\"name\":\"dests3\",\"type\":\"address\"},{\"name\":\"dests4\",\"type\":\"address\"},{\"name\":\"dests5\",\"type\":\"address\"},{\"name\":\"dests6\",\"type\":\"address\"},{\"name\":\"dests7\",\"type\":\"address\"},{\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"sendTokensToSevenAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BalanceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BalanceCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokenSendStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferredToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FailedTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"AirDropAFTK5May","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://edff06982523d3f17d697dcc02c3147a0591441bdf23789d0579cd46011c2d8f"}]}