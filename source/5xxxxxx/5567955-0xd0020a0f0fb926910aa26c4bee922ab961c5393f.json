{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Random {\r\n  uint256 _seed;\r\n\r\n  function maxRandom() public returns (uint256 randomNumber) {\r\n    _seed = uint256(keccak256(\r\n        _seed,\r\n        block.blockhash(block.number - 1),\r\n        block.coinbase,\r\n        block.difficulty\r\n    ));\r\n    return _seed;\r\n  }\r\n\r\n  // return a pseudo random number between lower and upper bounds\r\n  // given the number of previous blocks it should hash.\r\n  function random(uint256 upper) public returns (uint256 randomNumber) {\r\n    return maxRandom() % upper;\r\n  }\r\n}\r\n\r\ncontract Lottery is Random {\r\n\r\n\tstruct Stage {\r\n\t\tuint32 maxNum;\r\n\t\tbytes32 participantsHash;\r\n\t\tuint winnerNum;\r\n\t}\r\n\tmapping (uint32 => Stage) public stages;\r\n\taddress public owner;\r\n\r\n\tevent Winner(uint32 _stageNum, uint _winnerNum);\r\n\r\n\tmodifier onlyOwner() { require(msg.sender == owner); _;}\r\n\r\n\tconstructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\tfunction randomJackpot(uint32 _stageNum, bytes32 _participantsHash, uint32 _maxNum) external onlyOwner {\r\n\t\trequire(_maxNum > 0);\r\n\t\tuint winnerNum = random(_maxNum);\r\n\t\tstages[_stageNum] = Stage(_maxNum, _participantsHash, winnerNum);\r\n\t\temit Winner(_stageNum, winnerNum);\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"stages\",\"outputs\":[{\"name\":\"maxNum\",\"type\":\"uint32\"},{\"name\":\"participantsHash\",\"type\":\"bytes32\"},{\"name\":\"winnerNum\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"upper\",\"type\":\"uint256\"}],\"name\":\"random\",\"outputs\":[{\"name\":\"randomNumber\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stageNum\",\"type\":\"uint32\"},{\"name\":\"_participantsHash\",\"type\":\"bytes32\"},{\"name\":\"_maxNum\",\"type\":\"uint32\"}],\"name\":\"randomJackpot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"maxRandom\",\"outputs\":[{\"name\":\"randomNumber\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_stageNum\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"_winnerNum\",\"type\":\"uint256\"}],\"name\":\"Winner\",\"type\":\"event\"}]","ContractName":"Lottery","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8312b7fa36e0d9e0c081d451e42365299610528b73e9a8b71290f422b788ba13"}]}