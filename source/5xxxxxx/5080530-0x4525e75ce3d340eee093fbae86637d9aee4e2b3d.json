{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ninterface tokenRecipient {\r\n    function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public;\r\n}\r\n\r\ncontract ArtyCoin {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals = 18;\r\n    uint256 public totalSupply;\r\n    \r\n    uint256 public tokensPerOneETH;\r\n    uint256 public totalEthInWei;\r\n    uint256 public totalETHRaised;\r\n    uint256 public totalDeposit;\r\n    uint256 public sellPrice;\r\n    uint256 public buyPrice;\r\n    address public owner; \r\n    \r\n    bool public isCanSell;\r\n    bool public isCanBuy;\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Burn(address indexed from, uint256 value);\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function ArtyCoin(uint256 initialSupply, string tokenName, string tokenSymbol, address ownerAddress) public {\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);\r\n        balanceOf[ownerAddress] = totalSupply;\r\n        owner = ownerAddress;\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n    }\r\n    \r\n    function setIsTokenCanBeBuy(bool condition) onlyOwner public returns (bool success) {\r\n        isCanBuy = condition;\r\n        return true;\r\n    }\r\n    \r\n    function setIsTokenCanBeSell(bool condition) onlyOwner public returns (bool success) {\r\n        isCanSell = condition;\r\n        return true;\r\n    }\r\n    \r\n    function setSellPrice(uint256 newSellPrice) onlyOwner public returns (bool success) {\r\n        require(newSellPrice > 0);\r\n        sellPrice = newSellPrice;\r\n        return true;\r\n    }\r\n    \r\n    function setBuyPrice(uint256 newBuyPrice) onlyOwner public returns (bool success) {\r\n        require(newBuyPrice > 0);\r\n        buyPrice = newBuyPrice;\r\n        return true;\r\n    }\r\n    \r\n    function sellTokens(uint amount) public returns (uint revenue){\r\n        require(isCanSell);\r\n        require(sellPrice > 0);\r\n        require(balanceOf[msg.sender] >= amount);\r\n        \r\n        uint256 divideValue = 1 * 10 ** uint256(decimals);\r\n        \r\n        revenue = (amount / divideValue) * sellPrice;\r\n        require(this.balance >= revenue);\r\n        \r\n        balanceOf[owner] += amount;\r\n        balanceOf[msg.sender] -= amount;\r\n        \r\n        msg.sender.transfer(revenue);\r\n        \r\n        Transfer(msg.sender, owner, amount);\r\n        return revenue;\r\n    }\r\n    \r\n    function buyTokens() payable public {\r\n        require(msg.value > 0);\r\n        totalEthInWei += msg.value;\r\n        uint256 amount = msg.value * tokensPerOneETH;\r\n        require(balanceOf[owner] >= amount);\r\n        \r\n        balanceOf[owner] -= amount;\r\n        balanceOf[msg.sender] += amount;\r\n        Transfer(owner, msg.sender, amount);\r\n\r\n        owner.transfer(msg.value);\r\n    }\r\n    \r\n    function createTokensToOwner(uint256 amount) onlyOwner public {\r\n        require(amount > 0);\r\n        uint256 newAmount = amount * 10 ** uint256(decimals);\r\n        totalSupply += newAmount;\r\n        balanceOf[owner] += newAmount;\r\n        Transfer(0, owner, newAmount);\r\n    }\r\n    \r\n    function createTokensTo(address target, uint256 mintedAmount) onlyOwner public {\r\n        require(mintedAmount > 0);\r\n        uint256 newAmount = mintedAmount * 10 ** uint256(decimals);\r\n        balanceOf[target] += newAmount;\r\n        totalSupply += newAmount;\r\n        Transfer(0, target, newAmount);\r\n    }\r\n    \r\n    function setTokensPerOneETH(uint256 value) onlyOwner public returns (bool success) {\r\n        require(value > 0);\r\n        tokensPerOneETH = value;\r\n        return true;\r\n    }\r\n    \r\n    function depositFunds() payable public {\r\n        totalDeposit += msg.value;\r\n    }\r\n    \r\n    function() payable public {\r\n        require(msg.value > 0);\r\n        totalEthInWei += msg.value;\r\n        totalETHRaised += msg.value;\r\n        uint256 amount = msg.value * tokensPerOneETH;\r\n        require(balanceOf[owner] >= amount);\r\n        \r\n        balanceOf[owner] -= amount;\r\n        balanceOf[msg.sender] += amount;\r\n        Transfer(owner, msg.sender, amount);\r\n\r\n        owner.transfer(msg.value);\r\n    }\r\n    \r\n    function getMyBalance() view public returns (uint256) {\r\n        return this.balance;\r\n    }\r\n    \r\n    function withdrawEthToOwner(uint256 amount) onlyOwner public {\r\n        require(amount > 0);\r\n        require(this.balance >= amount);\r\n        owner.transfer(amount);\r\n    }\r\n    \r\n    function withdrawAllEthToOwner() onlyOwner public {\r\n        require(this.balance > 0);\r\n        owner.transfer(this.balance);\r\n    }\r\n    \r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        address oldOwner = owner;\r\n        uint256 amount = balanceOf[oldOwner];\r\n        balanceOf[newOwner] += amount;\r\n        balanceOf[oldOwner] -= amount;\r\n        Transfer(oldOwner, newOwner, amount);\r\n        owner = newOwner;\r\n    }\r\n    \r\n    function sendMultipleAddress(address[] dests, uint256[] values) public returns (uint256) {\r\n        uint256 i = 0;\r\n        while (i < dests.length) {\r\n            transfer(dests[i], values[i]);\r\n            i += 1;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(_to != 0x0);\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        Transfer(_from, _to, _value);\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n        balanceOf[msg.sender] -= _value;\r\n        totalSupply -= _value;\r\n        Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n        require(balanceOf[_from] >= _value);\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        balanceOf[_from] -= _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n        totalSupply -= _value;\r\n        Burn(_from, _value);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEthToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"sendMultipleAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"createTokensToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalETHRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isCanBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isCanSell\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"setIsTokenCanBeSell\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setTokensPerOneETH\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"setIsTokenCanBeBuy\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBuyPrice\",\"type\":\"uint256\"}],\"name\":\"setBuyPrice\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellTokens\",\"outputs\":[{\"name\":\"revenue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"createTokensTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalEthInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerOneETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAllEthToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositFunds\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newSellPrice\",\"type\":\"uint256\"}],\"name\":\"setSellPrice\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"ownerAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"ArtyCoin","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000001dcd6500000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000fbd29b3eb9dd8b76910e428808c2e22e98a03daa000000000000000000000000000000000000000000000000000000000000000841727479436f696e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034154430000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://fc98dbe7722f9bfe8114c7630f52561f225f9cc5b249add94c95c2278391235e"}]}