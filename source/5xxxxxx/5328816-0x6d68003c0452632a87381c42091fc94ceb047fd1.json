{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\ncontract Owned {\r\n\r\n   address public owner;\r\n   address public proposedOwner;\r\n\r\n   event OwnershipTransferInitiated(address indexed _proposedOwner);\r\n   event OwnershipTransferCompleted(address indexed _newOwner);\r\n   event OwnershipTransferCanceled();\r\n\r\n\r\n   function Owned() public\r\n   {\r\n      owner = msg.sender;\r\n   }\r\n\r\n\r\n   modifier onlyOwner() {\r\n      require(isOwner(msg.sender) == true);\r\n      _;\r\n   }\r\n\r\n\r\n   function isOwner(address _address) public view returns (bool) {\r\n      return (_address == owner);\r\n   }\r\n\r\n\r\n   function initiateOwnershipTransfer(address _proposedOwner) public onlyOwner returns (bool) {\r\n      require(_proposedOwner != address(0));\r\n      require(_proposedOwner != address(this));\r\n      require(_proposedOwner != owner);\r\n\r\n      proposedOwner = _proposedOwner;\r\n\r\n      OwnershipTransferInitiated(proposedOwner);\r\n\r\n      return true;\r\n   }\r\n\r\n\r\n   function cancelOwnershipTransfer() public onlyOwner returns (bool) {\r\n      if (proposedOwner == address(0)) {\r\n         return true;\r\n      }\r\n\r\n      proposedOwner = address(0);\r\n\r\n      OwnershipTransferCanceled();\r\n\r\n      return true;\r\n   }\r\n\r\n\r\n   function completeOwnershipTransfer() public returns (bool) {\r\n      require(msg.sender == proposedOwner);\r\n\r\n      owner = msg.sender;\r\n      proposedOwner = address(0);\r\n\r\n      OwnershipTransferCompleted(owner);\r\n\r\n      return true;\r\n   }\r\n}\r\n\r\n\r\n\r\ncontract OpsManaged is Owned {\r\n\r\n   address public opsAddress;\r\n\r\n   event OpsAddressUpdated(address indexed _newAddress);\r\n\r\n\r\n   function OpsManaged() public\r\n      Owned()\r\n   {\r\n   }\r\n\r\n\r\n   modifier onlyOwnerOrOps() {\r\n      require(isOwnerOrOps(msg.sender));\r\n      _;\r\n   }\r\n\r\n\r\n   function isOps(address _address) public view returns (bool) {\r\n      return (opsAddress != address(0) && _address == opsAddress);\r\n   }\r\n\r\n\r\n   function isOwnerOrOps(address _address) public view returns (bool) {\r\n      return (isOwner(_address) || isOps(_address));\r\n   }\r\n\r\n\r\n   function setOpsAddress(address _newOpsAddress) public onlyOwner returns (bool) {\r\n      require(_newOpsAddress != owner);\r\n      require(_newOpsAddress != address(this));\r\n\r\n      opsAddress = _newOpsAddress;\r\n\r\n      OpsAddressUpdated(opsAddress);\r\n\r\n      return true;\r\n   }\r\n}\r\n\r\n\r\nlibrary Math {\r\n\r\n   function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      uint256 r = a + b;\r\n\r\n      require(r >= a);\r\n\r\n      return r;\r\n   }\r\n\r\n\r\n   function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      require(a >= b);\r\n\r\n      return a - b;\r\n   }\r\n\r\n\r\n   function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      uint256 r = a * b;\r\n\r\n      require(a == 0 || r / a == b);\r\n\r\n      return r;\r\n   }\r\n\r\n\r\n   function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      return a / b;\r\n   }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Based on the final ERC20 specification at:\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n\r\n   event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n   event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n   function name() public view returns (string);\r\n   function symbol() public view returns (string);\r\n   function decimals() public view returns (uint8);\r\n   function totalSupply() public view returns (uint256);\r\n\r\n   function balanceOf(address _owner) public view returns (uint256 balance);\r\n   function allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n\r\n   function transfer(address _to, uint256 _value) public returns (bool success);\r\n   function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n   function approve(address _spender, uint256 _value) public returns (bool success);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\ncontract ERC20Token is ERC20Interface {\r\n\r\n   using Math for uint256;\r\n\r\n   string  private tokenName;\r\n   string  private tokenSymbol;\r\n   uint8   private tokenDecimals;\r\n   uint256 internal tokenTotalSupply;\r\n\r\n   mapping(address => uint256) internal balances;\r\n   mapping(address => mapping (address => uint256)) allowed;\r\n\r\n\r\n   function ERC20Token(string _name, string _symbol, uint8 _decimals, uint256 _totalSupply, address _initialTokenHolder) public {\r\n      tokenName = _name;\r\n      tokenSymbol = _symbol;\r\n      tokenDecimals = _decimals;\r\n      tokenTotalSupply = _totalSupply;\r\n\r\n      // The initial balance of tokens is assigned to the given token holder address.\r\n      balances[_initialTokenHolder] = _totalSupply;\r\n\r\n      // Per EIP20, the constructor should fire a Transfer event if tokens are assigned to an account.\r\n      Transfer(0x0, _initialTokenHolder, _totalSupply);\r\n   }\r\n\r\n\r\n   function name() public view returns (string) {\r\n      return tokenName;\r\n   }\r\n\r\n\r\n   function symbol() public view returns (string) {\r\n      return tokenSymbol;\r\n   }\r\n\r\n\r\n   function decimals() public view returns (uint8) {\r\n      return tokenDecimals;\r\n   }\r\n\r\n\r\n   function totalSupply() public view returns (uint256) {\r\n      return tokenTotalSupply;\r\n   }\r\n\r\n\r\n   function balanceOf(address _owner) public view returns (uint256 balance) {\r\n      return balances[_owner];\r\n   }\r\n\r\n\r\n   function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n   }\r\n\r\n\r\n   function transfer(address _to, uint256 _value) public returns (bool success) {\r\n      balances[msg.sender] = balances[msg.sender].sub(_value);\r\n      balances[_to] = balances[_to].add(_value);\r\n\r\n      Transfer(msg.sender, _to, _value);\r\n\r\n      return true;\r\n   }\r\n\r\n\r\n   function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n      balances[_from] = balances[_from].sub(_value);\r\n      allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n      balances[_to] = balances[_to].add(_value);\r\n\r\n      Transfer(_from, _to, _value);\r\n\r\n      return true;\r\n   }\r\n\r\n\r\n   function approve(address _spender, uint256 _value) public returns (bool success) {\r\n      allowed[msg.sender][_spender] = _value;\r\n\r\n      Approval(msg.sender, _spender, _value);\r\n\r\n      return true;\r\n   }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n\r\ncontract Finalizable is Owned {\r\n\r\n   bool public finalized;\r\n\r\n   event Finalized();\r\n\r\n\r\n   function Finalizable() public\r\n      Owned()\r\n   {\r\n      finalized = false;\r\n   }\r\n\r\n\r\n   function finalize() public onlyOwner returns (bool) {\r\n      require(!finalized);\r\n\r\n      finalized = true;\r\n\r\n      Finalized();\r\n\r\n      return true;\r\n   }\r\n}\r\n\r\n// -----------------------\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n\r\n//\r\ncontract FinalizableToken is ERC20Token, OpsManaged, Finalizable {\r\n\r\n   using Math for uint256;\r\n\r\n\r\n   // The constructor will assign the initial token supply to the owner (msg.sender).\r\n   function FinalizableToken(string _name, string _symbol, uint8 _decimals, uint256 _totalSupply) public\r\n      ERC20Token(_name, _symbol, _decimals, _totalSupply, msg.sender)\r\n      OpsManaged()\r\n      Finalizable()\r\n   {\r\n   }\r\n\r\n\r\n   function transfer(address _to, uint256 _value) public returns (bool success) {\r\n      validateTransfer(msg.sender, _to);\r\n\r\n      return super.transfer(_to, _value);\r\n   }\r\n\r\n\r\n   function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n      validateTransfer(msg.sender, _to);\r\n\r\n      return super.transferFrom(_from, _to, _value);\r\n   }\r\n\r\n\r\n   function validateTransfer(address _sender, address _to) private view {\r\n      require(_to != address(0));\r\n\r\n      // Once the token is finalized, everybody can transfer tokens.\r\n      if (finalized) {\r\n         return;\r\n      }\r\n\r\n      if (isOwner(_to)) {\r\n         return;\r\n      }\r\n\r\n      // Before the token is finalized, only owner and ops are allowed to initiate transfers.\r\n      // This allows them to move tokens while the sale is still ongoing for example.\r\n      require(isOwnerOrOps(_sender));\r\n   }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Token Contract Configuration\r\n//\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\ncontract TokenConfig {\r\n\r\n    string  public constant TOKEN_SYMBOL      = \"DUCK\";\r\n    string  public constant TOKEN_NAME        = \"Duckcoin\";\r\n    uint8   public constant TOKEN_DECIMALS    = 18;\r\n\r\n    uint256 public constant DECIMALSFACTOR    = 10**uint256(TOKEN_DECIMALS);\r\n    uint256 public constant TOKEN_TOTALSUPPLY = 2000000000000 * DECIMALSFACTOR;\r\n}\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n//  - ERC20 Compatible Token\r\n//\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// The  token is a standard ERC20 token with the addition of a few\r\n// concepts such as:\r\n//\r\n// 1. Finalization\r\n// Tokens can only be transfered by contributors after the contract has\r\n// been finalized.\r\n//\r\n// 2. Ops Managed Model\r\n// In addition to owner, there is a ops role which is used during the sale,\r\n// by the sale contract, in order to transfer tokens.\r\n// ----------------------------------------------------------------------------\r\ncontract Duckcoin is FinalizableToken, TokenConfig {\r\n\r\n\r\n   event TokensReclaimed(uint256 _amount);\r\n\r\n\r\n   function Duckcoin() public\r\n      FinalizableToken(TOKEN_NAME, TOKEN_SYMBOL, TOKEN_DECIMALS, TOKEN_TOTALSUPPLY)\r\n   {\r\n   }\r\n\r\n\r\n   // Allows the owner to reclaim tokens that have been sent to the token address itself.\r\n   function reclaimTokens() public onlyOwner returns (bool) {\r\n\r\n      address account = address(this);\r\n      uint256 amount  = balanceOf(account);\r\n\r\n      if (amount == 0) {\r\n         return false;\r\n      }\r\n\r\n      balances[account] = balances[account].sub(amount);\r\n      balances[owner] = balances[owner].add(amount);\r\n\r\n      Transfer(account, owner, amount);\r\n\r\n      TokensReclaimed(amount);\r\n\r\n      return true;\r\n   }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cancelOwnershipTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_SYMBOL\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reclaimTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOpsAddress\",\"type\":\"address\"}],\"name\":\"setOpsAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_TOTALSUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DECIMALSFACTOR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"opsAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isOwnerOrOps\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proposedOwner\",\"type\":\"address\"}],\"name\":\"initiateOwnershipTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposedOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"completeOwnershipTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isOps\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokensReclaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Finalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"OpsAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnershipTransferCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Duckcoin","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4125c1f5babe1e11d04d559527a43021901e6989f48a5d5e0ef0168cd55b87f5"}]}