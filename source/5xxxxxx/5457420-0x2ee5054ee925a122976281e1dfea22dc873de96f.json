{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\ncontract ERC721 {\r\n  // Required methods\r\n  function approve(address _to, uint256 _tokenId) public;\r\n  function balanceOf(address _owner) public view returns (uint256 balance);\r\n  function implementsERC721() public pure returns (bool);\r\n  function ownerOf(uint256 _tokenId) public view returns (address addr);\r\n  function takeOwnership(uint256 _tokenId) public;\r\n  function totalSupply() public view returns (uint256 total);\r\n  function transferFrom(address _from, address _to, uint256 _tokenId) public;\r\n  function transfer(address _to, uint256 _tokenId) public;\r\n  event Transfer(address indexed from, address indexed to, uint256 tokenId);\r\n  event Approval(address indexed owner, address indexed approved, uint256 tokenId);\r\n  // Optional\r\n  // function name() public view returns (string name);\r\n  // function symbol() public view returns (string symbol);\r\n  // function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256 tokenId);\r\n  // function tokenMetadata(uint256 _tokenId) public view returns (string infoUrl);\r\n}\r\ncontract WorldCupToken is ERC721 {\r\n  event Birth(uint256 tokenId, string name, address owner);\r\n  event TokenSold(uint256 tokenId, uint256 oldPrice, uint256 newPrice, address prevOwner, address winner, string name);\r\n  event Transfer(address from, address to, uint256 tokenId);\r\n \r\n  /*** CONSTANTS ***/\r\n  string public constant NAME = \"WorldCupToken\";\r\n  string public constant SYMBOL = \"WorldCupToken\";\r\n  uint256 private startingPrice = 0.1 ether;\r\n  mapping (uint256 => address) private teamIndexToOwner;\r\n  mapping (address => uint256) private ownershipTokenCount;\r\n  mapping (uint256 => address) private teamIndexToApproved;\r\n  mapping (uint256 => uint256) private teamIndexToPrice;\r\n  mapping (string => uint256) private nameIndexToTeam;   // eg: Egypt => 0\r\n  mapping (string => string) private teamIndexToName;    // eg: 0 => Egypt\r\n  \r\n  \r\n  address private ceoAddress;\r\n  bool private isStop;\r\n  \r\n  struct Team {\r\n    string name;\r\n  }\r\n  Team[] private teams;\r\n  \r\n  modifier onlyCEO() {\r\n    require(msg.sender == ceoAddress);\r\n    _;\r\n  }\r\n  modifier onlyStart() {\r\n    require(isStop == false);\r\n    _;\r\n  }\r\n  \r\n   function setStop() public onlyCEO {\r\n    \r\n    isStop = true;\r\n  }\r\n  function setStart() public onlyCEO {\r\n    \r\n    isStop = false;\r\n  }\r\n  \r\n  /*** CONSTRUCTOR ***/\r\n  function WorldCupToken() public {\r\n    ceoAddress = msg.sender;\r\n    isStop=false;\r\n    _createTeam(\"Egypt\", msg.sender, startingPrice);\r\n    teamIndexToName[\"0\"]=\"Egypt\";\r\n    \r\n    _createTeam(\"Morocco\", msg.sender, startingPrice);\r\n    teamIndexToName[\"1\"]=\"Morocco\";\r\n    \r\n    _createTeam(\"Nigeria\", msg.sender, startingPrice);\r\n    teamIndexToName[\"2\"]=\"Nigeria\";\r\n    \r\n    _createTeam(\"Senegal\", msg.sender, startingPrice);\r\n    teamIndexToName[\"3\"]=\"Senegal\";\r\n    \r\n    _createTeam(\"Tunisia\", msg.sender, startingPrice);\r\n    teamIndexToName[\"4\"]=\"Tunisia\";\r\n    \r\n    _createTeam(\"Australia\", msg.sender, startingPrice);\r\n    teamIndexToName[\"5\"]=\"Australia\";\r\n    \r\n    _createTeam(\"IR Iran\", msg.sender, startingPrice);\r\n    teamIndexToName[\"6\"]=\"IR Iran\";\r\n    \r\n    _createTeam(\"Japan\", msg.sender, startingPrice);\r\n   teamIndexToName[\"7\"]=\"Japan\";\r\n    \r\n    _createTeam(\"Korea Republic\", msg.sender, startingPrice);\r\n   teamIndexToName[\"8\"]=\"Korea Republic\";\r\n    \r\n    _createTeam(\"Saudi Arabia\", msg.sender, startingPrice);\r\n    teamIndexToName[\"9\"]=\"Saudi Arabia\";\r\n    \r\n    _createTeam(\"Belgium\", msg.sender, startingPrice);\r\n    teamIndexToName[\"10\"]=\"Belgium\";\r\n    \r\n    _createTeam(\"Croatia\", msg.sender, startingPrice);\r\n    teamIndexToName[\"11\"]=\"Croatia\";\r\n    \r\n    \r\n    _createTeam(\"Denmark\", msg.sender, startingPrice);\r\n    teamIndexToName[\"12\"]=\"Denmark\";\r\n    \r\n    \r\n    _createTeam(\"England\", msg.sender, startingPrice);\r\n    teamIndexToName[\"13\"]=\"England\";\r\n    \r\n    \r\n    _createTeam(\"France\", msg.sender, startingPrice);\r\n    teamIndexToName[\"14\"]=\"France\";\r\n    \r\n    \r\n    _createTeam(\"Germany\", msg.sender, startingPrice);\r\n    teamIndexToName[\"15\"]=\"Germany\";\r\n    \r\n    \r\n    _createTeam(\"Iceland\", msg.sender, startingPrice);\r\n    teamIndexToName[\"16\"]=\"Iceland\";\r\n    \r\n    \r\n    _createTeam(\"Poland\", msg.sender, startingPrice);\r\n    teamIndexToName[\"17\"]=\"Poland\";\r\n    \r\n    \r\n    _createTeam(\"Portugal\", msg.sender, startingPrice);\r\n    teamIndexToName[\"18\"]=\"Portugal\";\r\n    \r\n    \r\n    _createTeam(\"Russia\", msg.sender, startingPrice);\r\n    teamIndexToName[\"19\"]=\"Russia\";\r\n    \r\n    \r\n    _createTeam(\"Serbia\", msg.sender, startingPrice);\r\n    teamIndexToName[\"20\"]=\"Serbia\";\r\n    \r\n    \r\n    _createTeam(\"Spain\", msg.sender, startingPrice);\r\n    teamIndexToName[\"21\"]=\"Spain\";\r\n    \r\n    \r\n    _createTeam(\"Sweden\", msg.sender, startingPrice);\r\n    teamIndexToName[\"22\"]=\"Sweden\";\r\n    \r\n    \r\n    _createTeam(\"Switzerland\", msg.sender, startingPrice);\r\n    teamIndexToName[\"23\"]=\"Switzerland\";\r\n    \r\n    \r\n    _createTeam(\"Costa Rica\", msg.sender, startingPrice);\r\n    teamIndexToName[\"24\"]=\"Costa Rica\";\r\n    \r\n    \r\n    _createTeam(\"Mexico\", msg.sender, startingPrice);\r\n    teamIndexToName[\"25\"]=\"Mexico\";\r\n    \r\n    \r\n    \r\n    _createTeam(\"Panama\", msg.sender, startingPrice);\r\n    teamIndexToName[\"26\"]=\"Panama\";\r\n    \r\n    \r\n    _createTeam(\"Argentina\", msg.sender, startingPrice);\r\n    teamIndexToName[\"27\"]=\"Argentina\";\r\n    \r\n    _createTeam(\"Brazil\", msg.sender, startingPrice);\r\n    teamIndexToName[\"28\"]=\"Brazil\";\r\n    \r\n    _createTeam(\"Colombia\", msg.sender, startingPrice);\r\n    teamIndexToName[\"29\"]=\"Colombia\";\r\n    \r\n    _createTeam(\"Peru\", msg.sender, startingPrice);\r\n    teamIndexToName[\"30\"]=\"Peru\";\r\n    \r\n    _createTeam(\"Uruguay\", msg.sender, startingPrice);\r\n    teamIndexToName[\"31\"]=\"Uruguay\";\r\n      \r\n  }\r\n  \r\n  function approve(\r\n    address _to,\r\n    uint256 _tokenId\r\n  ) public  onlyStart {\r\n    require(_owns(msg.sender, _tokenId));\r\n    teamIndexToApproved[_tokenId] = _to;\r\n    Approval(msg.sender, _to, _tokenId);\r\n  }\r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n    return ownershipTokenCount[_owner];\r\n  }\r\n  \r\n   function getTeamId(string _name) public view returns (uint256 id) {\r\n    return nameIndexToTeam[_name];\r\n  }\r\n  \r\n  function getTeam(uint256 _tokenId) public view returns (\r\n    string teamName,\r\n    uint256 sellingPrice,\r\n    address owner\r\n  ) {\r\n    Team storage team = teams[_tokenId];\r\n    teamName = team.name;\r\n    sellingPrice = teamIndexToPrice[_tokenId];\r\n    owner = teamIndexToOwner[_tokenId];\r\n  }\r\n  \r\n  function getTeam4name(string _name) public view returns (\r\n    string teamName,\r\n    uint256 sellingPrice,\r\n    address owner\r\n  ) {\r\n    uint256 _tokenId = nameIndexToTeam[_name];\r\n    Team storage team = teams[_tokenId];\r\n    require(SafeMath.diffString(_name,team.name)==true);\r\n    teamName = team.name;\r\n    sellingPrice = teamIndexToPrice[_tokenId];\r\n    owner = teamIndexToOwner[_tokenId];\r\n  }\r\n  \r\n  \r\n  function implementsERC721() public pure returns (bool) {\r\n    return true;\r\n  }\r\n  function name() public pure returns (string) {\r\n    return NAME;\r\n  }\r\n  function ownerOf(uint256 _tokenId)\r\n    public\r\n    view\r\n    returns (address owner)\r\n  {\r\n    owner = teamIndexToOwner[_tokenId];\r\n    require(owner != address(0));\r\n  }\r\n  \r\n  function payout(address _to) public onlyCEO {\r\n    _payout(_to);\r\n  }\r\n  \r\n   function () public payable onlyStart {\r\n      \r\n       string memory data=string(msg.data);\r\n       require(SafeMath.diffString(data,\"\")==false);    //data is not empty\r\n       \r\n       string memory _name=teamIndexToName[data];\r\n       require(SafeMath.diffString(_name,\"\")==false);   //name is not empty\r\n       \r\n       if(nameIndexToTeam[_name]==0){\r\n           require(SafeMath.diffString(_name,teams[0].name)==true);\r\n       }\r\n       \r\n       purchase(nameIndexToTeam[_name]);\r\n   }\r\n  \r\n  \r\n  function purchase(uint256 _tokenId) public payable onlyStart {\r\n    address oldOwner = teamIndexToOwner[_tokenId];\r\n    address newOwner = msg.sender;\r\n    uint256 sellingPrice = teamIndexToPrice[_tokenId];\r\n    // Making sure token owner is not sending to self\r\n    require(oldOwner != newOwner);\r\n    // Safety check to prevent against an unexpected 0x0 default.\r\n    require(_addressNotNull(newOwner));\r\n    // Making sure sent amount is greater than or equal to the sellingPrice\r\n    require(msg.value >= sellingPrice);\r\n    uint256 payment = uint256(SafeMath.div(SafeMath.mul(sellingPrice, 92), 100));\r\n    uint256 purchaseExcess = SafeMath.sub(msg.value, sellingPrice);\r\n    teamIndexToPrice[_tokenId] = SafeMath.div(SafeMath.mul(sellingPrice, 130),100);\r\n    \r\n    _transfer(oldOwner, newOwner, _tokenId);\r\n    if (oldOwner != address(this)) {\r\n      oldOwner.send(payment); //oldOwner take 92% of the sellingPrice\r\n    }\r\n    TokenSold(_tokenId, sellingPrice, teamIndexToPrice[_tokenId], oldOwner, newOwner, teams[_tokenId].name);\r\n    msg.sender.send(purchaseExcess);\r\n  }\r\n  \r\n  function priceOf(uint256 _tokenId) public view returns (uint256 price) {\r\n    return teamIndexToPrice[_tokenId];\r\n  }\r\n  \r\n  function symbol() public pure returns (string) {\r\n    return SYMBOL;\r\n  }\r\n  \r\n  function takeOwnership(uint256 _tokenId) public onlyStart{\r\n    address newOwner = msg.sender;\r\n    address oldOwner = teamIndexToOwner[_tokenId];\r\n    // Safety check to prevent against an unexpected 0x0 default.\r\n    require(_addressNotNull(newOwner));\r\n    // Making sure transfer is approved\r\n    require(_approved(newOwner, _tokenId));\r\n    _transfer(oldOwner, newOwner, _tokenId);\r\n  }\r\n  \r\n  function tokensOfOwner(address _owner) public view returns(uint256[] ownerTokens) {\r\n    uint256 tokenCount = balanceOf(_owner);\r\n    if (tokenCount == 0) {\r\n        // Return an empty array\r\n      return new uint256[](0);\r\n    } else {\r\n      uint256[] memory result = new uint256[](tokenCount);\r\n      uint256 totalPersons = totalSupply();\r\n      uint256 resultIndex = 0;\r\n      uint256 teamId;\r\n      for (teamId = 0; teamId <= totalPersons; teamId++) {\r\n        if (teamIndexToOwner[teamId] == _owner) {\r\n          result[resultIndex] = teamId;\r\n          resultIndex++;\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n  }\r\n  \r\n  \r\n  function totalSupply() public view returns (uint256 total) {\r\n    return teams.length;\r\n  }\r\n  \r\n  \r\n  function transfer(\r\n    address _to,\r\n    uint256 _tokenId\r\n  ) public onlyStart {\r\n    require(_owns(msg.sender, _tokenId));\r\n    require(_addressNotNull(_to));\r\n    _transfer(msg.sender, _to, _tokenId);\r\n  }\r\n  function transferFrom(\r\n    address _from,\r\n    address _to,\r\n    uint256 _tokenId\r\n  ) public onlyStart{\r\n    require(_owns(_from, _tokenId));\r\n    require(_approved(_to, _tokenId));\r\n    require(_addressNotNull(_to));\r\n    _transfer(_from, _to, _tokenId);\r\n  }\r\n  function _addressNotNull(address _to) private pure returns (bool) {\r\n    return _to != address(0);\r\n  }\r\n  \r\n  function _approved(address _to, uint256 _tokenId) private view returns (bool) {\r\n    return teamIndexToApproved[_tokenId] == _to;\r\n  }\r\n  \r\n  \r\n  function _createTeam(string _name, address _owner, uint256 _price) private {\r\n    \r\n    Team memory _team = Team({\r\n      name: _name\r\n    });\r\n    uint256 newTeamId = teams.push(_team) - 1;\r\n    nameIndexToTeam[_name]=newTeamId;\r\n    Birth(newTeamId, _name, _owner);\r\n    teamIndexToPrice[newTeamId] = _price;\r\n    _transfer(address(0), _owner, newTeamId);\r\n  }\r\n  \r\n  \r\n  /// Check for token ownership\r\n  function _owns(address claimant, uint256 _tokenId) private view returns (bool) {\r\n    return claimant == teamIndexToOwner[_tokenId];\r\n  }\r\n  /// For paying out balance on contract\r\n  function _payout(address _to) private {\r\n    if (_to == address(0)) {\r\n      ceoAddress.send(this.balance);\r\n    } else {\r\n      _to.send(this.balance);\r\n    }\r\n  }\r\n  function _transfer(address _from, address _to, uint256 _tokenId) private {\r\n    ownershipTokenCount[_to]++;\r\n    teamIndexToOwner[_tokenId] = _to;\r\n    if (_from != address(0)) {\r\n      ownershipTokenCount[_from]--;\r\n      delete teamIndexToApproved[_tokenId];\r\n    }\r\n    Transfer(_from, _to, _tokenId);\r\n  }\r\n}\r\nlibrary SafeMath {\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n  \r\nfunction diffString(string a, string b) internal pure returns (bool) {\r\n    bytes memory ab=bytes(a);\r\n    bytes memory bb=bytes(b);\r\n    if(ab.length!=bb.length){\r\n        return false;\r\n    }\r\n    uint len=ab.length;\r\n    for(uint i=0;i<len;i++){\r\n        if(ab[i]!=bb[i]){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getTeam\",\"outputs\":[{\"name\":\"teamName\",\"type\":\"string\"},{\"name\":\"sellingPrice\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"payout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementsERC721\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"total\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setStart\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"name\":\"ownerTokens\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setStop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"takeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getTeam4name\",\"outputs\":[{\"name\":\"teamName\",\"type\":\"string\"},{\"name\":\"sellingPrice\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"priceOf\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getTeamId\",\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Birth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"}],\"name\":\"TokenSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"WorldCupToken","CompilerVersion":"v0.4.22+commit.4cb486ee","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://058e3374d1884d72b6c50821321b1d0aeec55b2933510d76af2ac7678fbb136a"}]}