{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ncontract OneMillionToken{\r\n    \r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n        }\r\n    \r\n    struct PixelToken{\r\n        uint256 price;\r\n        uint24 color;\r\n        address pixelOwner;\r\n    }\r\n    \r\n    struct pixelWallet{\r\n        mapping (uint24 => uint) indexList;\r\n        uint24[] pixelOwned;\r\n        uint24 pixelListlength;\r\n        string name; \r\n        string link;\r\n    }\r\n    \r\n    address public owner;\r\n    \r\n    string public constant symbol = \"1MT\";\r\n    string public constant name = \"OneMillionToken\";\r\n    uint8 public constant decimals = 0;\r\n    \r\n    uint private startPrice = 1000000000000000;\r\n    \r\n    uint public constant maxPrice = 100000000000000000000;\r\n    uint public constant minPrice = 1000000000000;\r\n    \r\n    \r\n    mapping (uint24 => PixelToken) private Image;\r\n    \r\n    mapping (address => pixelWallet) balance;\r\n    \r\n    function getPixelToken(uint24 _id) public view returns(uint256,string,string,uint24,address){\r\n        return(Image[_id].pixelOwner == address(0) ? startPrice : Image[_id].price,balance[Image[_id].pixelOwner].name,balance[Image[_id].pixelOwner].link,Image[_id].color,Image[_id].pixelOwner);\r\n    }\r\n    \r\n    function buyPixelTokenFor(uint24 _id,uint256 _price,uint24 _color, address _to) public payable returns (bool) {\r\n        require(_id>=0&&_id<1000000);\r\n        \r\n        require(_price>=minPrice&&_price<=maxPrice);\r\n        require(msg.value>=minPrice&&msg.value<=maxPrice);\r\n        \r\n        if(Image[_id].pixelOwner== address(0)){\r\n            \r\n            require(msg.value>=startPrice);\r\n            \r\n            Transfer(owner, _to, _id);\r\n            \r\n            Image[_id].pixelOwner = _to;\r\n            balance[_to].pixelOwned.push(_id);\r\n            balance[_to].indexList[_id] = balance[_to].pixelOwned.length;\r\n            balance[_to].pixelListlength++;\r\n            \r\n            require(owner.send(msg.value));\r\n            \r\n            Image[_id].price = _price;\r\n            Image[_id].color = _color;\r\n            \r\n            ChangePixel(_id);\r\n            \r\n            return true;\r\n            \r\n        }else{\r\n            require(msg.value>=Image[_id].price);\r\n            \r\n            address prevOwner =Image[_id].pixelOwner; \r\n            \r\n            balance[Image[_id].pixelOwner].indexList[_id] = 0;\r\n            balance[Image[_id].pixelOwner].pixelListlength--;\r\n            \r\n            \r\n            Transfer(Image[_id].pixelOwner, _to, _id);\r\n            \r\n            Image[_id].pixelOwner = _to;\r\n            balance[_to].pixelOwned.push(_id);\r\n            balance[_to].indexList[_id] = balance[_to].pixelOwned.length;\r\n            balance[_to].pixelListlength++;\r\n            \r\n            require(prevOwner.send(msg.value));\r\n            \r\n            Image[_id].price = _price;\r\n            Image[_id].color = _color;\r\n            \r\n            ChangePixel(_id);\r\n            \r\n            return true;\r\n        }\r\n    }\r\n    \r\n    function buyPixelToken(uint24 _id,uint256 _price,uint24 _color) public payable returns (bool){\r\n        return buyPixelTokenFor(_id, _price, _color, msg.sender);\r\n    }\r\n    \r\n    function setPixelToken(uint24 _id,uint256 _price,uint24 _color) public returns (bool){\r\n        require(_id>=0&&_id<1000000);\r\n        require(_price>=minPrice&&_price<=maxPrice);\r\n        \r\n        require(msg.sender==Image[_id].pixelOwner);\r\n        \r\n        Image[_id].price = _price;\r\n        Image[_id].color = _color;\r\n        \r\n        ChangePixel(_id);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function OneMillionToken() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function setNameLink(string _name,string _link) public{\r\n        balance[msg.sender].name = _name;\r\n        balance[msg.sender].link = _link;\r\n    }\r\n    \r\n    function totalSupply() public pure returns (uint) {\r\n        return 1000000;    \r\n    }\r\n\r\n    function balanceOf(address _tokenOwner) public constant returns (uint){\r\n        return balance[_tokenOwner].pixelListlength;\r\n    }\r\n    \r\n    function myBalance() public view returns (uint24[]){\r\n        uint24[] memory list = new uint24[](balance[msg.sender].pixelListlength);\r\n        \r\n        uint24 index = 0;\r\n        \r\n        for(uint24 i = 0; i < balance[msg.sender].pixelOwned.length;i++){\r\n            if(balance[msg.sender].indexList[balance[msg.sender].pixelOwned[i]]==i+1){\r\n                list[index]=balance[msg.sender].pixelOwned[i];\r\n                index++;\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n    function transfer(address _to, uint24 _id) public returns (bool success){\r\n        require(_id>=0&&_id<1000000);\r\n        require(Image[_id].pixelOwner == msg.sender);\r\n        \r\n        balance[Image[_id].pixelOwner].indexList[_id] = 0;\r\n        balance[Image[_id].pixelOwner].pixelListlength--;\r\n        \r\n        Transfer(Image[_id].pixelOwner, _to, _id);\r\n        \r\n        Image[_id].pixelOwner = _to;\r\n        \r\n        balance[_to].pixelOwned.push(_id);\r\n        balance[_to].indexList[_id] = balance[_to].pixelOwned.length;\r\n        balance[_to].pixelListlength++;\r\n        return true;\r\n    }\r\n    \r\n    function pixelblockPrice (uint24 _startx,uint24 _starty,uint24 _endx,uint24 _endy) public view returns (uint){\r\n        require(_startx>=0&&_startx<625);\r\n        require(_starty>=0&&_starty<1600);\r\n        require(_endx>=_startx&&_endx<625);\r\n        require(_endy>=_starty&&_endy<1600);\r\n        \r\n        uint256 price = 0;\r\n        for(uint24 x = _startx; x<= _endx;x++){\r\n            for(uint24 y = _starty;y<=_endy;y++ ){\r\n                uint24 id = y*1600+x;\r\n                if(Image[id].pixelOwner==address(0)){\r\n                    price=add(price,startPrice);\r\n                }else{\r\n                    price=add(price,Image[id].price);\r\n                }\r\n            }\r\n        }\r\n        return price;\r\n    }\r\n    \r\n    function setStartPrice(uint _price) public onlyOwner returns (bool){\r\n        \r\n        require(_price>=minPrice&&_price<=maxPrice);\r\n        startPrice = _price;\r\n        return true;\r\n    }\r\n    \r\n    function getStartPrice() public view returns (uint){\r\n        return startPrice;\r\n    }\r\n    \r\n    modifier onlyOwner{\r\n        require(msg.sender==owner);\r\n        _;\r\n    }\r\n    \r\n    event ChangePixel(uint tokens);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint24\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_color\",\"type\":\"uint24\"}],\"name\":\"setPixelToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setStartPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_startx\",\"type\":\"uint24\"},{\"name\":\"_starty\",\"type\":\"uint24\"},{\"name\":\"_endx\",\"type\":\"uint24\"},{\"name\":\"_endy\",\"type\":\"uint24\"}],\"name\":\"pixelblockPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_link\",\"type\":\"string\"}],\"name\":\"setNameLink\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_id\",\"type\":\"uint24\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint24\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_color\",\"type\":\"uint24\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"buyPixelTokenFor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStartPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint24\"}],\"name\":\"getPixelToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint24\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"myBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint24[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint24\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_color\",\"type\":\"uint24\"}],\"name\":\"buyPixelToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"ChangePixel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"OneMillionToken","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://dbaa0e2a004b6991789b029f3ccb1d111fa58ec83b5d2c7d16fead30eb19ad8b"}]}