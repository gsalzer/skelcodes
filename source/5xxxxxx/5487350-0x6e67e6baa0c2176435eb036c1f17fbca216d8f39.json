{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\npragma solidity ^0.4.18;\r\n\r\n//It's open source,but... ;) Good luck! :P\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n}\r\n\r\ncontract Beneficiary is Ownable {\r\n\r\n    address public beneficiary;\r\n\r\n    function setBeneficiary(address _beneficiary) onlyOwner public {\r\n        beneficiary = _beneficiary;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\ncontract Pausable is Beneficiary{\r\n    bool public paused = false;\r\n\r\n    modifier whenNotPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n\r\n    modifier whenPaused {\r\n        require(paused);\r\n        _;\r\n    }\r\n\r\n    function pause() external onlyOwner whenNotPaused {\r\n        paused = true;\r\n    }\r\n\r\n    function unpause() public onlyOwner whenPaused {\r\n        // can't unpause if contract was upgraded\r\n        paused = false;\r\n    }\r\n} \r\n\r\nlibrary SafeMath {\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n\r\ncontract WarshipAccess is Pausable{\r\n\taddress[] public OfficialApps;\r\n\t//Official games & services\r\n\r\n\tfunction AddOfficialApps(address _app) onlyOwner public{\r\n\t\trequire(_app != address(0));\r\n\t\tOfficialApps.push(_app);\r\n\t}\r\n\t\r\n\tfunction nukeApps()onlyOwner public{\r\n\t    for(uint i = 0; i < OfficialApps.length; i++){\r\n\t\t\tdelete OfficialApps[i];\r\n\t        \r\n\t    }\r\n\t}\r\n\r\n\tfunction _isOfficialApps(address _app) internal view returns (bool){\r\n\t\tfor(uint i = 0; i < OfficialApps.length; i++){\r\n\t\t\tif( _app == OfficialApps[i] ){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tmodifier OnlyOfficialApps {\r\n        require(_isOfficialApps(msg.sender));\r\n        _;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//main contract for warship\r\n\r\ncontract WarshipMain is WarshipAccess{\r\n    \r\n    using SafeMath for uint256;\r\n\r\n    struct Warship {\r\n        uint128 appearance; //wsic code for producing warship outlook\r\n        uint32 profile;//profile including ship names\r\n        uint8 firepower;\r\n        uint8 armor;\r\n        uint8 hitrate;\r\n        uint8 speed;\r\n        uint8 duration;//ship strength\r\n        uint8 shiptype;//ship class\r\n        uint8 level;//strengthening level\r\n        uint8 status;//how it was built\r\n        uint16 specials;//16 specials\r\n        uint16 extend;\r\n    }//128+32+8*8+16*2=256\r\n\r\n    Warship[] public Ships;\r\n    mapping (uint256 => address) public ShipIdToOwner;\r\n    //Supporting 2^32 ships at most.\r\n    mapping (address => uint256) OwnerShipCount;\r\n    //Used internally inside balanceOf() to resolve ownership count.\r\n    mapping (uint256 => address) public ShipIdToApproval;\r\n    //Each ship can only have one approved address for transfer at any time.\r\n    mapping (uint256 => uint256) public ShipIdToStatus;\r\n    //0 for sunk, 1 for live, 2 for min_broken, 3 for max_broken, 4 for on_marketing, 5 for in_pvp\r\n    //256 statuses at most.\r\n    \r\n\r\n    //SaleAuction\r\n    address public SaleAuction;\r\n    function setSaleAuction(address _sale) onlyOwner public{\r\n        require(_sale != address(0));\r\n        SaleAuction = _sale;\r\n    }\r\n\r\n\r\n\r\n    //event emitted when ship created or updated\r\n    event NewShip(address indexed owner, uint indexed shipId, uint256 wsic);\r\n    event ShipStatusUpdate(uint indexed shipId, uint8 newStatus);\r\n    event ShipStructUpdate(uint indexed shipId, uint256 wsic);\r\n\r\n    //----erc721 interface\r\n    bool public implementsERC721 = true;\r\n    string public constant name = \"EtherWarship\";\r\n    string public constant symbol = \"SHIP\";\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId); \r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n    function balanceOf(address _owner) public view returns (uint256 _balance){\r\n        return OwnerShipCount[_owner];\r\n    }\r\n    function ownerOf(uint256 _tokenId) public view returns (address _owner){\r\n        return ShipIdToOwner[_tokenId];\r\n    }\r\n    //function transfer(address _to, uint256 _tokenId) public;   //see below\r\n    //function approve(address _to, uint256 _tokenId) public;    //see below\r\n    //function takeOwnership(uint256 _tokenId) public;      //see below\r\n    //----erc721 interface\r\n\r\n\r\n    \r\n\r\n    //check if owned/approved\r\n    function _owns(address _claimant, uint256 _tokenId) internal view returns (bool) {\r\n        return ShipIdToOwner[_tokenId] == _claimant;\r\n    }\r\n    function _approvedFor(address _claimant, uint256 _tokenId) internal view returns (bool) {\r\n        return ShipIdToApproval[_tokenId] == _claimant;\r\n    }\r\n\r\n\r\n    /// @dev Assigns ownership of a specific ship to an address.\r\n    function _transfer(address _from, address _to, uint256 _tokenId) internal {\r\n        OwnerShipCount[_to]=OwnerShipCount[_to].add(1);\r\n        ShipIdToOwner[_tokenId] = _to;\r\n        if (_from != address(0)) {\r\n            OwnerShipCount[_from]=OwnerShipCount[_from].sub(1);\r\n            // clear any previously approved ownership exchange\r\n            delete ShipIdToApproval[_tokenId];\r\n        }\r\n        Transfer(_from, _to, _tokenId);\r\n    }\r\n\r\n    /// @dev Marks an address as being approved for transferFrom(), overwriting any previous\r\n    ///  approval. Setting _approved to address(0) clears all transfer approval.\r\n    function _approve(uint256 _tokenId, address _approved) internal {\r\n        ShipIdToApproval[_tokenId] = _approved;\r\n    }\r\n\r\n    /// @dev Required for ERC-721 compliance.\r\n    function transfer(address _to, uint256 _tokenId) external whenNotPaused {\r\n        // Safety check to prevent against an unexpected 0x0 default.\r\n        require(_to != address(0));\r\n        // Disallow transfers to this contract to prevent accidental misuse.\r\n        require(_to != address(this));\r\n        // You can only send your own cat.\r\n        require(_owns(msg.sender, _tokenId));\r\n        // Reassign ownership, clear pending approvals, emit Transfer event.\r\n        require(ShipIdToStatus[_tokenId]==1||msg.sender==SaleAuction);\r\n        // Ship must be alive.\r\n\r\n        if(msg.sender == SaleAuction){\r\n            ShipIdToStatus[_tokenId] = 1;\r\n        }\r\n\r\n        _transfer(msg.sender, _to, _tokenId);\r\n\r\n    }\r\n\r\n    /// @dev Required for ERC-721 compliance.\r\n    function approve(address _to, uint256 _tokenId) external whenNotPaused {\r\n        // Only an owner can grant transfer approval.\r\n        require(_owns(msg.sender, _tokenId));\r\n        // Register the approval (replacing any previous approval).\r\n        _approve(_tokenId, _to);\r\n        // Emit approval event.\r\n        Approval(msg.sender, _to, _tokenId);\r\n    }\r\n\r\n    /// @dev Required for ERC-721 compliance.\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) external whenNotPaused {\r\n        // Safety check to prevent against an unexpected 0x0 default.\r\n        require(_to != address(0));\r\n        // Disallow transfers to this contract to prevent accidental misuse.\r\n        require(_to != address(this));\r\n        // Check for approval and valid ownersh ip\r\n        //p.s. SaleAuction can call transferFrom for anyone\r\n        require(_approvedFor(msg.sender, _tokenId)||msg.sender==SaleAuction); \r\n\r\n        require(_owns(_from, _tokenId));\r\n\r\n        require(ShipIdToStatus[_tokenId]==1);\r\n        // Ship must be alive.\r\n\r\n        if(msg.sender == SaleAuction){\r\n            ShipIdToStatus[_tokenId] = 4;\r\n        }\r\n\r\n\r\n        // Reassign ownership (also clears pending approvals and emits Transfer event).\r\n        _transfer(_from, _to, _tokenId);\r\n    }\r\n    /// @dev Required for ERC-721 compliance.\r\n    function totalSupply() public view returns (uint) {\r\n        return Ships.length;\r\n    }\r\n\r\n    /// @dev Required for ERC-721 compliance.\r\n    function takeOwnership(uint256 _tokenId) public {\r\n        // check approvals\r\n        require(ShipIdToApproval[_tokenId] == msg.sender);\r\n\r\n        require(ShipIdToStatus[_tokenId]==1);\r\n        // Ship must be alive.\r\n\r\n        _transfer(ownerOf(_tokenId), msg.sender, _tokenId);\r\n    }\r\n\r\n\r\n    //------------all ERC-721 requirement are present----------------------\r\n\r\n\r\n\r\n\r\n\r\n    /// @dev uint256 WSIC to warship structure \r\n    function _translateWSIC (uint256 _wsic) internal pure returns(Warship){\r\n  //    uint128 _appearance = uint128(_wsic >> 128);\r\n  //    uint32 _profile = uint32((_wsic>>96)&0xffffffff);\r\n  //    uint8 _firepower = uint8((_wsic>>88)&0xff);\r\n        // uint8 _armor = uint8((_wsic>>80)&0xff);\r\n        // uint8 _hitrate = uint8((_wsic>>72)&0xff);\r\n        // uint8 _speed = uint8((_wsic>>64)&0xff);\r\n        // uint8 _duration = uint8((_wsic>>56)&0xff);\r\n        // uint8 _shiptype = uint8((_wsic>>48)&0xff);\r\n        // uint8 _level = uint8((_wsic>>40)&0xff);\r\n        // uint8 _status = uint8((_wsic>>32)&0xff);\r\n        // uint16 _specials = uint16((_wsic>>16)&0xffff);\r\n        // uint16 _extend = uint16(_wsic&0xffff);\r\n        Warship memory  _ship = Warship(uint128(_wsic >> 128), uint32((_wsic>>96)&0xffffffff), uint8((_wsic>>88)&0xff), uint8((_wsic>>80)&0xff), uint8((_wsic>>72)&0xff), uint8((_wsic>>64)&0xff),\r\n         uint8((_wsic>>56)&0xff), uint8((_wsic>>48)&0xff), uint8((_wsic>>40)&0xff), uint8((_wsic>>32)&0xff),  uint16((_wsic>>16)&0xffff), uint16(_wsic&0xffff));\r\n        return _ship;\r\n    }\r\n    function _encodeWSIC(Warship _ship) internal pure returns(uint256){\r\n        uint256 _wsic = 0x00;\r\n        _wsic = _wsic ^ (uint256(_ship.appearance) << 128);\r\n        _wsic = _wsic ^ (uint256(_ship.profile) << 96);\r\n        _wsic = _wsic ^ (uint256(_ship.firepower) << 88);\r\n        _wsic = _wsic ^ (uint256(_ship.armor) << 80);\r\n        _wsic = _wsic ^ (uint256(_ship.hitrate) << 72);\r\n        _wsic = _wsic ^ (uint256(_ship.speed) << 64);\r\n        _wsic = _wsic ^ (uint256(_ship.duration) << 56);\r\n        _wsic = _wsic ^ (uint256(_ship.shiptype) << 48);\r\n        _wsic = _wsic ^ (uint256(_ship.level) << 40);\r\n        _wsic = _wsic ^ (uint256(_ship.status) << 32);\r\n        _wsic = _wsic ^ (uint256(_ship.specials) << 16);\r\n        _wsic = _wsic ^ (uint256(_ship.extend));\r\n        return _wsic;\r\n    }\r\n\r\n\r\n    \r\n\r\n    // @dev An internal method that creates a new ship and stores it. This\r\n    ///  method doesn't do any checking and should only be called when the\r\n    ///  input data is known to be valid. \r\n    function _createship (uint256 _wsic, address _owner) internal returns(uint){\r\n        //wsic2ship\r\n        Warship memory _warship = _translateWSIC(_wsic);\r\n        //push into ships\r\n        uint256 newshipId = Ships.push(_warship) - 1;\r\n        //emit event\r\n        NewShip(_owner, newshipId, _wsic);\r\n        //set to alive\r\n        ShipIdToStatus[newshipId] = 1;\r\n        //transfer 0 to owner\r\n        _transfer(0, _owner, newshipId);\r\n        //\"Where is the counter?Repeat that.Where is the counter?Everyone want to know it.----Troll XI\"\r\n       \r\n        \r\n\r\n        return newshipId; \r\n    }\r\n\r\n    /// @dev An internal method that update a new ship. \r\n    function _update (uint256 _wsic, uint256 _tokenId) internal returns(bool){\r\n        //check if id is valid\r\n        require(_tokenId <= totalSupply());\r\n        //wsic2ship\r\n        Warship memory _warship = _translateWSIC(_wsic);\r\n        //emit event\r\n        ShipStructUpdate(_tokenId, _wsic);\r\n        //update\r\n        Ships[_tokenId] = _warship;\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    /// @dev Allow official apps to create ship.\r\n    function createship(uint256 _wsic, address _owner) external OnlyOfficialApps returns(uint){\r\n        //check address\r\n        require(_owner != address(0));\r\n        return _createship(_wsic, _owner);\r\n    }\r\n\r\n    /// @dev Allow official apps to update ship.\r\n    function updateship (uint256 _wsic, uint256 _tokenId) external OnlyOfficialApps returns(bool){\r\n        return _update(_wsic, _tokenId);\r\n    }\r\n    /// @dev Allow official apps to update ship.\r\n    function SetStatus(uint256 _tokenId, uint256 _status) external OnlyOfficialApps returns(bool){\r\n        require(uint8(_status)==_status);\r\n        ShipIdToStatus[_tokenId] = _status;\r\n        ShipStatusUpdate(_tokenId, uint8(_status));\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /// @dev Get wsic code for a ship.\r\n    function Getwsic(uint256 _tokenId) external view returns(uint256){\r\n        //check if id is valid\r\n        require(_tokenId < Ships.length);\r\n        uint256 _wsic = _encodeWSIC(Ships[_tokenId]);\r\n        return _wsic;\r\n    }\r\n\r\n    /// @dev Get ships for a specified user.\r\n    function GetShipsByOwner(address _owner) external view returns(uint[]) {\r\n    uint[] memory result = new uint[](OwnerShipCount[_owner]);\r\n    uint counter = 0;\r\n    for (uint i = 0; i < Ships.length; i++) {\r\n          if (ShipIdToOwner[i] == _owner) {\r\n            result[counter] = i;\r\n            counter++;\r\n          }\r\n        }\r\n    return result;\r\n    }\r\n\r\n    /// @dev Get status\r\n    function GetStatus(uint256 _tokenId) external view returns(uint){\r\n        return ShipIdToStatus[_tokenId];\r\n    }\r\n\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementsERC721\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"setBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"OfficialApps\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SaleAuction\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"GetStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"nukeApps\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Ships\",\"outputs\":[{\"name\":\"appearance\",\"type\":\"uint128\"},{\"name\":\"profile\",\"type\":\"uint32\"},{\"name\":\"firepower\",\"type\":\"uint8\"},{\"name\":\"armor\",\"type\":\"uint8\"},{\"name\":\"hitrate\",\"type\":\"uint8\"},{\"name\":\"speed\",\"type\":\"uint8\"},{\"name\":\"duration\",\"type\":\"uint8\"},{\"name\":\"shiptype\",\"type\":\"uint8\"},{\"name\":\"level\",\"type\":\"uint8\"},{\"name\":\"status\",\"type\":\"uint8\"},{\"name\":\"specials\",\"type\":\"uint16\"},{\"name\":\"extend\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ShipIdToApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_status\",\"type\":\"uint256\"}],\"name\":\"SetStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ShipIdToStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"takeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sale\",\"type\":\"address\"}],\"name\":\"setSaleAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_app\",\"type\":\"address\"}],\"name\":\"AddOfficialApps\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"GetShipsByOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Getwsic\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wsic\",\"type\":\"uint256\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"updateship\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ShipIdToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wsic\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createship\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"shipId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"wsic\",\"type\":\"uint256\"}],\"name\":\"NewShip\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"shipId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"ShipStatusUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"shipId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"wsic\",\"type\":\"uint256\"}],\"name\":\"ShipStructUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"WarshipMain","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3c724b84389d33052724e2cd2402fa77e7d182fb2fd8d0de7b998400be01d924"}]}