{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        \r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c; \r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract BasicTokenERC20 {  \r\n    using SafeMath for uint256;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    \r\n    mapping(address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) internal allowed;\r\n    mapping (uint8 => mapping (address => uint256)) internal whitelist;\r\n\r\n    uint256 totalSupply_;\r\n    address public owner_;\r\n    \r\n    constructor() public {\r\n        owner_ = msg.sender;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return totalSupply_;\r\n    }\r\n\r\n    function balanceOf(address owner) public view returns (uint256) {\r\n        return balances[owner];\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool) {\r\n        require(to != address(0));\r\n        require(value <= balances[msg.sender]);\r\n\r\n        balances[msg.sender] = balances[msg.sender].sub(value);\r\n        balances[to] = balances[to].add(value);\r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    } \r\n    \r\n    function transferFrom(address from, address to, uint256 value) public returns (bool){\r\n        require(to != address(0));\r\n        require(value <= balances[from]);\r\n        require(value <= allowed[from][msg.sender]);\r\n\r\n        balances[from] = balances[from].sub(value);\r\n        balances[to] = balances[to].add(value);\r\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(value);\r\n        emit Transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public returns (bool) {\r\n        allowed[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view returns (uint256){\r\n        return allowed[owner][spender];\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner_);\r\n        _;\r\n    }\r\n\r\n    function addWhiteList(uint8 whiteListType, address investor, uint256 value) public onlyOwner returns (bool){\r\n        whitelist[whiteListType][investor] = value;\r\n        return true;\r\n    }\r\n\r\n    function removeFromWhiteList(uint8 whiteListType, address investor) public onlyOwner returns (bool){\r\n        whitelist[whiteListType][investor] = 0;\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract KeowContract is BasicTokenERC20 {    \r\n\r\n    string public constant name = \"KeowToken\"; \r\n    string public constant symbol = \"KEOW\";\r\n    uint public decimals = 18; \r\n    uint256 public milion = 1000000;\r\n    event TestLog(address indexed from, address indexed to, uint256 value, uint8 state);\r\n    //// 1 billion tokkens KEOW\r\n    uint256 public INITIAL_SUPPLY = 1000 * milion * (uint256(10) ** decimals);\r\n    //// exchange in 1 eth = 30000 KEOW\r\n    uint256 public exchangeETH = 30000;\r\n    //// limit min ethsale\r\n    uint256 public limitClosedSale = 100 * (uint256(10) ** decimals);\r\n    uint256 public limitPreSale = 25 * (uint256(10) ** decimals);\r\n    \r\n    /// address of wallet\r\n    address public ecoSystemWallet;\r\n    address public marketWallet;\r\n    address public contributorsWallet;\r\n    address public companyWallet;\r\n    address public closedSaleWallet;\r\n    address public preSaleWallet;\r\n    address public firstStageWallet;\r\n    address public secondStageWallet;\r\n\r\n    uint256 public investors = 0;\r\n    address public currentWallet;    \r\n\r\n    /// 0 - Not start/ pause\r\n    /// 1 - closed sale\r\n    /// 2 - presale\r\n    /// 3 - sale1\r\n    /// 4 - sale2\r\n    /// 9 - end    \r\n    uint8 public state = 0;\r\n        \r\n    constructor(address w0, address w1, address w2, address w3, address w4, address w5, address w6, address w7) public {        \r\n        totalSupply_ = INITIAL_SUPPLY;\r\n\r\n        uint256 esoSystemValue = 20 * milion * (uint256(10) ** decimals);\r\n        ecoSystemWallet = w0;    \r\n        balances[ecoSystemWallet] = esoSystemValue;\r\n        emit Transfer(owner_, ecoSystemWallet, esoSystemValue);\r\n\r\n        uint256 marketValue = 50 * milion * (uint256(10) ** decimals);\r\n        marketWallet = w1;\r\n        balances[marketWallet] = marketValue;\r\n        emit Transfer(owner_, marketWallet, marketValue);\r\n\r\n        uint256 contributorsValue = 100 * milion * (uint256(10) ** decimals);\r\n        contributorsWallet = w2;\r\n        balances[contributorsWallet] = contributorsValue;\r\n        emit Transfer(owner_, contributorsWallet, contributorsValue);\r\n\r\n        uint256 companyValue = 230 * milion * (uint256(10) ** decimals);\r\n        companyWallet = w3;\r\n        balances[companyWallet] = companyValue;\r\n        emit Transfer(owner_, companyWallet, companyValue);\r\n        \r\n        uint256 closedSaleValue = 50 * milion * (uint256(10) ** decimals);\r\n        closedSaleWallet = w4;\r\n        balances[closedSaleWallet] = closedSaleValue;\r\n        emit Transfer(owner_, closedSaleWallet, closedSaleValue);\r\n\r\n        uint256 preSaleValue = 50 * milion * (uint256(10) ** decimals);\r\n        preSaleWallet = w5;\r\n        balances[preSaleWallet] = preSaleValue;\r\n        emit Transfer(owner_, preSaleWallet, preSaleValue);\r\n\r\n        uint256 firstStageValue = 250 * milion * (uint256(10) ** decimals);\r\n        firstStageWallet = w6;\r\n        balances[firstStageWallet] = firstStageValue;\r\n        emit Transfer(owner_, firstStageWallet, firstStageValue);\r\n\r\n        uint256 secondStageValue = 250 * milion * (uint256(10) ** decimals);\r\n        secondStageWallet = w7; \r\n        balances[secondStageWallet] = secondStageValue;\r\n        emit Transfer(owner_, secondStageWallet, secondStageValue);\r\n    }    \r\n\r\n    function () public payable {\r\n        require(state > 0);\r\n        require(state < 9);\r\n        require(msg.sender != 0x0);\r\n        require(msg.value != 0);\r\n        uint256 limit = getMinLimit();\r\n        \r\n        require(msg.value >= limit);\r\n        address beneficiary = msg.sender;\r\n        require(whitelist[state][beneficiary] >= msg.value);\r\n        \r\n        uint256 weiAmount = msg.value;\r\n        uint256 tokens = weiAmount.mul(exchangeETH);\r\n        require(balances[currentWallet] >= tokens);\r\n        \r\n        balances[currentWallet] = balances[currentWallet].sub(tokens);\r\n        balances[beneficiary] = balances[beneficiary].add(tokens); \r\n        \r\n        emit Transfer(currentWallet, beneficiary, tokens);\r\n        \r\n        whitelist[state][beneficiary] = 0;\r\n        investors++;        \r\n    }\r\n    \r\n    function getMinLimit () public view returns (uint256) {        \r\n        if (state == 0) {\r\n            return 0;\r\n        }\r\n        \r\n        if (state == 1) {\r\n            return limitClosedSale;\r\n        }\r\n        \r\n        if (state == 2) {\r\n            return limitPreSale;\r\n        }\r\n        \r\n        return 1;\r\n    }\r\n\r\n    function updateExchangeRate(uint256 updateExchange) public onlyOwner {\r\n        exchangeETH = updateExchange;\r\n    }\r\n\r\n    function withdraw(uint value) public onlyOwner {\r\n        require(value > 0);\r\n        require(companyWallet != 0x0);        \r\n        companyWallet.transfer(value);\r\n    }\r\n\r\n    function startCloseSalePhase() public onlyOwner { \r\n        currentWallet = closedSaleWallet;      \r\n        state = 1;\r\n    }\r\n\r\n    function startPreSalePhase() public onlyOwner {        \r\n        currentWallet = preSaleWallet;\r\n        state = 2;\r\n    }\r\n\r\n    function startSale1Phase() public onlyOwner {        \r\n        currentWallet = firstStageWallet;\r\n        state = 3;\r\n    }\r\n\r\n    function startSale2Phase() public onlyOwner {        \r\n        currentWallet = secondStageWallet;\r\n        state = 4;\r\n    }    \r\n\r\n    function stopSale() public onlyOwner {        \r\n        currentWallet = 0;\r\n        state = 0;\r\n    }    \r\n\r\n    function endSale () public onlyOwner {\r\n        currentWallet = 0;\r\n        state = 9;\r\n    }        \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"startCloseSalePhase\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondStageWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"companyWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"limitClosedSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startPreSalePhase\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startSale2Phase\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"whiteListType\",\"type\":\"uint8\"},{\"name\":\"investor\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"addWhiteList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startSale1Phase\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"whiteListType\",\"type\":\"uint8\"},{\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"removeFromWhiteList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"firstStageWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"updateExchange\",\"type\":\"uint256\"}],\"name\":\"updateExchangeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closedSaleWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMinLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contributorsWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"limitPreSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner_\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"milion\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ecoSystemWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"w0\",\"type\":\"address\"},{\"name\":\"w1\",\"type\":\"address\"},{\"name\":\"w2\",\"type\":\"address\"},{\"name\":\"w3\",\"type\":\"address\"},{\"name\":\"w4\",\"type\":\"address\"},{\"name\":\"w5\",\"type\":\"address\"},{\"name\":\"w6\",\"type\":\"address\"},{\"name\":\"w7\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"TestLog\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"KeowContract","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000a08617eee7b7ca77b9096c6e3c2f0fa5db13dd9300000000000000000000000060ce6c5fd2b5b458d443e806f1553d6e1a226695000000000000000000000000ff9dcc6480c86b48bbf102a34d77b85643225341000000000000000000000000276445cdbc267e863c6eb419b35c1780d224da7e0000000000000000000000009c75607ab6f3a1cfa10a30fee9ab489554e2c213000000000000000000000000c17d6f01110b21325ccbef6618728b2db9932674000000000000000000000000e9e65f7306ac0995219c42f4ec645f4759a6b6df000000000000000000000000672b11af1c4ff662dc6269c549e67b2883a45da3","Library":"","SwarmSource":"bzzr://64655826468335de48b270e72d0747a868417ba1c9f23cc22526b5c1f3ee9e63"}]}