{"status":"1","message":"OK","result":[{"SourceCode":"// Project: AleHub\r\n// v1, 2018-05-24\r\n// This code is the property of CryptoB2B.io\r\n// Copying in whole or in part is prohibited.\r\n// Authors: Ivan Fedorov and Dmitry Borodin\r\n// Do you want the same TokenSale platform? www.cryptob2b.io\r\n\r\n// *.sol in 1 file - https://cryptob2b.io/solidity/alehub/\r\n\r\npragma solidity ^0.4.21;\r\n\r\ncontract IRightAndRoles {\r\n    address[][] public wallets;\r\n    mapping(address => uint16) public roles;\r\n\r\n    event WalletChanged(address indexed newWallet, address indexed oldWallet, uint8 indexed role);\r\n    event CloneChanged(address indexed wallet, uint8 indexed role, bool indexed mod);\r\n\r\n    function changeWallet(address _wallet, uint8 _role) external;\r\n    function setManagerPowerful(bool _mode) external;\r\n    function onlyRoles(address _sender, uint16 _roleMask) view external returns(bool);\r\n}\r\n\r\ncontract RightAndRoles is IRightAndRoles {\r\n    bool managerPowerful = true;\r\n\r\n    function RightAndRoles(address[] _roles) public {\r\n        uint8 len = uint8(_roles.length);\r\n        require(len > 0&&len <16);\r\n        wallets.length = len;\r\n\r\n        for(uint8 i = 0; i < len; i++){\r\n            wallets[i].push(_roles[i]);\r\n            roles[_roles[i]] += uint16(2)**i;\r\n            emit WalletChanged(_roles[i], address(0),i);\r\n        }\r\n    }\r\n\r\n    function changeClons(address _clon, uint8 _role, bool _mod) external {\r\n        require(wallets[_role][0] == msg.sender&&_clon != msg.sender);\r\n        emit CloneChanged(_clon,_role,_mod);\r\n        uint16 roleMask = uint16(2)**_role;\r\n        if(_mod){\r\n            require(roles[_clon]&roleMask == 0);\r\n            wallets[_role].push(_clon);\r\n        }else{\r\n            address[] storage tmp = wallets[_role];\r\n            uint8 i = 1;\r\n            for(i; i < tmp.length; i++){\r\n                if(tmp[i] == _clon) break;\r\n            }\r\n            require(i > tmp.length);\r\n            tmp[i] = tmp[tmp.length];\r\n            delete tmp[tmp.length];\r\n        }\r\n        roles[_clon] = _mod?roles[_clon]|roleMask:roles[_clon]&~roleMask;\r\n    }\r\n\r\n    // Change the address for the specified role.\r\n    // Available to any wallet owner except the observer.\r\n    // Available to the manager until the round is initialized.\r\n    // The Observer's wallet or his own manager can change at any time.\r\n    // @ Do I have to use the function      no\r\n    // @ When it is possible to call        depend...\r\n    // @ When it is launched automatically  -\r\n    // @ Who can call the function          staff (all 7+ roles)\r\n    function changeWallet(address _wallet, uint8 _role) external {\r\n        require(wallets[_role][0] == msg.sender || wallets[0][0] == msg.sender || (wallets[1][0] == msg.sender && managerPowerful /* && _role != 0*/));\r\n        emit WalletChanged(wallets[_role][0],_wallet,_role);\r\n        uint16 roleMask = uint16(2)**_role;\r\n        address[] storage tmp = wallets[_role];\r\n        for(uint8 i = 0; i < tmp.length; i++){\r\n            roles[tmp[i]] = roles[tmp[i]]&~roleMask;\r\n        }\r\n        delete  wallets[_role];\r\n        tmp.push(_wallet);\r\n        roles[_wallet] = roles[_wallet]|roleMask;\r\n    }\r\n\r\n    function setManagerPowerful(bool _mode) external {\r\n        require(wallets[0][0] == msg.sender);\r\n        managerPowerful = _mode;\r\n    }\r\n\r\n    function onlyRoles(address _sender, uint16 _roleMask) view external returns(bool) {\r\n        return roles[_sender]&_roleMask != 0;\r\n    }\r\n\r\n    function getMainWallets() view external returns(address[]){\r\n        address[] memory _wallets = new address[](wallets.length);\r\n        for(uint8 i = 0; i<wallets.length; i++){\r\n            _wallets[i] = wallets[i][0];\r\n        }\r\n        return _wallets;\r\n    }\r\n\r\n    function getCloneWallets(uint8 _role) view external returns(address[]){\r\n        return wallets[_role];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"wallets\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMainWallets\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_role\",\"type\":\"uint8\"}],\"name\":\"changeWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clon\",\"type\":\"address\"},{\"name\":\"_role\",\"type\":\"uint8\"},{\"name\":\"_mod\",\"type\":\"bool\"}],\"name\":\"changeClons\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"roles\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"},{\"name\":\"_roleMask\",\"type\":\"uint16\"}],\"name\":\"onlyRoles\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mode\",\"type\":\"bool\"}],\"name\":\"setManagerPowerful\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_role\",\"type\":\"uint8\"}],\"name\":\"getCloneWallets\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_roles\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"newWallet\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"oldWallet\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"WalletChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"role\",\"type\":\"uint8\"},{\"indexed\":true,\"name\":\"mod\",\"type\":\"bool\"}],\"name\":\"CloneChanged\",\"type\":\"event\"}]","ContractName":"RightAndRoles","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000080000000000000000000000006aa1990f72c53000aceff1d8934d1ca2802aa1d80000000000000000000000008a91ac199440da0b45b2e278f3fe616b1bccc494000000000000000000000000d228df77af3df82cb7580d48fd0b33fe43a70f0e000000000000000000000000cdd417d7f260b08cd10a3810321df7a40d65ba400000000000000000000000008a91ac199440da0b45b2e278f3fe616b1bccc494000000000000000000000000903b15589855b8c944e9b865a5814d656da16544000000000000000000000000ca2d7c0147fce138736981fb1aa273d89cc9a3bf0000000000000000000000007767b19420c89bb79908820f4a5e55dc65ca7658","Library":"","SwarmSource":"bzzr://c83d500b45cc7d5642eb87cc3848177f96437dd6b2b73a07e1c6ad9be658cc1d"}]}