{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.21;\r\n\r\ncontract Ownable {\r\n\taddress public owner;\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n\tfunction Ownable() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\r\n///////////// NEW OWNER FUNCTIONALITY\r\n\r\n\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n\t\trequire(newOwner != address(0) && newOwner != owner);\r\n\t\temit OwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t}\r\n}\r\n\r\n\r\n///////////// POST ICO DESTROY COMMAND\r\n\r\ncontract Destructible is Ownable {\r\n\r\n\tfunction Destructible() public payable { }\r\n\r\n\tfunction destroy() onlyOwner public {\r\n\t\tselfdestruct(owner);\r\n\t}\r\n\r\n\tfunction destroyAndSend(address _recipient) onlyOwner public {\r\n\t\tselfdestruct(_recipient);\r\n\t}\r\n}\r\n\r\n\r\n///////////// SAFE MATH FUNCTIONS\r\n\r\nlibrary SafeMath {\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tassert(b > 0);\r\n\t\tuint256 c = a / b;\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\n///////////// DECLARE ERC223 BASIC INTERFACE\r\n\r\ncontract ERC223ReceivingContract {\r\n\tfunction tokenFallback(address _from, uint256 _value, bytes _data) public pure {\r\n\t\t_from;\r\n\t\t_value;\r\n\t\t_data;\r\n\t}\r\n}\r\n\r\ncontract ERC223 {\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value, bytes _data);\r\n}\r\n\r\ncontract ERC20 {\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n}\r\n\r\n\r\ncontract BasicToken is ERC20, ERC223, Destructible {\r\n\tuint256 public totalSupply;\r\n\tusing SafeMath for uint256;\r\n\r\n\tmapping(address => uint256) balances;\r\n\r\n\taddress[] allParticipants;\r\n\tmapping(address => bool) isParticipated;\r\n\r\n\r\n  ///////////// TRANSFER ////////////////\r\n\r\n\tfunction transferToAddress(address _to, uint256 _value, bytes _data) internal returns (bool) {\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tif(!isParticipated[_to]){\r\n\t\t\tallParticipants.push(_to);\r\n\t\t\tisParticipated[_to] = true;\r\n\t\t}\r\n\t\temit Transfer(msg.sender, _to, _value);\r\n\t\temit Transfer(msg.sender, _to, _value, _data);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferToContract(address _to, uint256 _value, bytes _data) internal returns (bool) {\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\r\n\t\treceiver.tokenFallback(msg.sender, _value, _data);\r\n\t\temit Transfer(msg.sender, _to, _value);\r\n\t\temit Transfer(msg.sender, _to, _value, _data);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _value, bytes _data) public onlyOwner returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\t\trequire(_value <= balances[msg.sender]);\r\n\t\trequire(_value > 0);\r\n\r\n\t\tuint256 codeLength;\r\n\t\tassembly {\r\n\t\t\tcodeLength := extcodesize(_to)\r\n\t\t}\r\n\t\r\n\t\tif(codeLength > 0) {\r\n\t\t\treturn transferToContract(_to, _value, _data);\r\n\t\t} else {\r\n\t\t\treturn transferToAddress(_to, _value, _data);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction transfer(address _to, uint256 _value) public onlyOwner returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\t\trequire(_value <= balances[msg.sender]);\r\n\t\trequire(_value > 0);\r\n\r\n\t\tuint256 codeLength;\r\n\t\tbytes memory empty;\r\n\t\tassembly {\r\n\t\t\tcodeLength := extcodesize(_to)\r\n\t\t}\r\n\r\n\t\tif(codeLength > 0) {\r\n\t\t\treturn transferToContract(_to, _value, empty);\r\n\t\t} else {\r\n\t\t\treturn transferToAddress(_to, _value, empty);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction balanceOf(address _address) public constant returns (uint256 balance) {\r\n\t\treturn balances[_address];\r\n\t}\r\n\r\n\r\n\tfunction getCountPartipants() public constant returns (uint count){\r\n\t\treturn allParticipants.length;\r\n\t}\r\n\r\n\tfunction getParticipantIndexAddress(uint index)public constant returns (address){\r\n\t\treturn allParticipants[index];\r\n\t}\r\n}\r\n\r\n\r\ncontract StandardToken is BasicToken {\r\n\r\n\tmapping (address => mapping (address => uint256)) internal allowed;\r\n}\r\n\r\ncontract Airstayz is StandardToken {\r\n\tstring public constant name = \"AIRSTAYZSAFT\";\r\n\tuint public constant decimals = 18;\r\n\tstring public constant symbol = \"STAYUS\";\r\n\r\n\tfunction Airstayz() public {\r\n\t\ttotalSupply = 93000000 *(10**decimals);\r\n\t\towner = msg.sender;\r\n\t\tbalances[msg.sender] = 93000000 * (10**decimals);\r\n\t}\r\n\r\n\tfunction() public {\r\n\t\trevert();\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCountPartipants\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getParticipantIndexAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"destroyAndSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Airstayz","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://24c0d6cf87f705d5baa01a14c407fdfbebf0fa6b111d229574986df459622688"}]}