{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\ninterface ERC20 {\r\n  function transfer (address _beneficiary, uint256 _tokenAmount) external returns (bool);  \r\n  function mint (address _to, uint256 _amount) external returns (bool);\r\n}\r\n\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\n\r\ncontract Crowdsale is Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  modifier onlyWhileOpen {\r\n      require(\r\n        (now >= preICOStartDate && now < preICOEndDate) || \r\n        (now >= ICOStartDate && now < ICOEndDate)\r\n      );\r\n      _;\r\n  }\r\n\r\n  modifier onlyWhileICOOpen {\r\n      require(now >= ICOStartDate && now < ICOEndDate);\r\n      _;\r\n  }\r\n\r\n  // The token being sold\r\n  ERC20 public token;\r\n\r\n  // Address where funds are collected\r\n  address public wallet;\r\n\r\n  // Сколько токенов покупатель получает за 1 эфир\r\n  uint256 public rate = 1000;\r\n\r\n  // Сколько эфиров привлечено в ходе PreICO, wei\r\n  uint256 public preICOWeiRaised;\r\n\r\n  // Сколько эфиров привлечено в ходе ICO, wei\r\n  uint256 public ICOWeiRaised;\r\n\r\n  // Цена ETH в центах\r\n  uint256 public ETHUSD;\r\n\r\n  // Дата начала PreICO\r\n  uint256 public preICOStartDate;\r\n\r\n  // Дата окончания PreICO\r\n  uint256 public preICOEndDate;\r\n\r\n  // Дата начала ICO\r\n  uint256 public ICOStartDate;\r\n\r\n  // Дата окончания ICO\r\n  uint256 public ICOEndDate;\r\n\r\n  // Минимальный объем привлечения средств в ходе ICO в центах\r\n  uint256 public softcap = 300000000;\r\n\r\n  // Потолок привлечения средств в ходе ICO в центах\r\n  uint256 public hardcap = 2500000000;\r\n\r\n  // Бонус реферала, %\r\n  uint8 public referalBonus = 3;\r\n\r\n  // Бонус приглашенного рефералом, %\r\n  uint8 public invitedByReferalBonus = 2; \r\n\r\n  // Whitelist\r\n  mapping(address => bool) public whitelist;\r\n\r\n  // Инвесторы, которые купили токен\r\n  mapping (address => uint256) public investors;\r\n\r\n  event TokenPurchase(address indexed buyer, uint256 value, uint256 amount);\r\n\r\n  function Crowdsale( \r\n    address _wallet, \r\n    uint256 _preICOStartDate, \r\n    uint256 _preICOEndDate,\r\n    uint256 _ICOStartDate, \r\n    uint256 _ICOEndDate,\r\n    uint256 _ETHUSD\r\n  ) public {\r\n    require(_wallet != address(0));\r\n    require(_preICOStartDate >= now);\r\n    require(_preICOEndDate > _preICOStartDate);\r\n    require(_ICOStartDate > _preICOEndDate);\r\n    require(_ICOEndDate > _ICOStartDate);\r\n\r\n    wallet = _wallet;\r\n    preICOStartDate = _preICOStartDate;\r\n    preICOEndDate = _preICOEndDate;\r\n    ICOStartDate = _ICOStartDate;\r\n    ICOStartDate = _ICOStartDate;\r\n    ETHUSD = _ETHUSD;\r\n  }\r\n\r\n  /* Публичные методы */\r\n\r\n  // Установить стоимость токена\r\n  function setRate (uint16 _rate) public onlyOwner {\r\n    require(_rate > 0);\r\n    rate = _rate;\r\n  }\r\n\r\n  // Установить адрес кошелька для сбора средств\r\n  function setWallet (address _wallet) public onlyOwner {\r\n    require (_wallet != 0x0);\r\n    wallet = _wallet;\r\n      \r\n  }\r\n  \r\n\r\n  // Установить торгуемый токен\r\n  function setToken (ERC20 _token) public onlyOwner {\r\n    token = _token;\r\n  }\r\n  \r\n  // Установить дату начала PreICO\r\n  function setPreICOStartDate (uint256 _preICOStartDate) public onlyOwner {\r\n    require(_preICOStartDate < preICOEndDate);\r\n    preICOStartDate = _preICOStartDate;\r\n  }\r\n\r\n  // Установить дату окончания PreICO\r\n  function setPreICOEndDate (uint256 _preICOEndDate) public onlyOwner {\r\n    require(_preICOEndDate > preICOStartDate);\r\n    preICOEndDate = _preICOEndDate;\r\n  }\r\n\r\n  // Установить дату начала ICO\r\n  function setICOStartDate (uint256 _ICOStartDate) public onlyOwner {\r\n    require(_ICOStartDate < ICOEndDate);\r\n    ICOStartDate = _ICOStartDate;\r\n  }\r\n\r\n  // Установить дату окончания PreICO\r\n  function setICOEndDate (uint256 _ICOEndDate) public onlyOwner {\r\n    require(_ICOEndDate > ICOStartDate);\r\n    ICOEndDate = _ICOEndDate;\r\n  }\r\n\r\n  // Установить стоимость эфира в центах\r\n  function setETHUSD (uint256 _ETHUSD) public onlyOwner {\r\n    ETHUSD = _ETHUSD;\r\n  }\r\n\r\n  function () external payable {\r\n    buyTokens();\r\n  }\r\n\r\n  // Покупка токенов\r\n  function buyTokens() public onlyWhileOpen payable {\r\n    address beneficiary = msg.sender;\r\n    uint256 weiAmount = msg.value;\r\n\r\n    _preValidatePurchase(beneficiary, weiAmount);\r\n\r\n    uint256 tokens;\r\n\r\n    // Считаем сколько токенов перевести в зависимости от этапа продажи\r\n    if(_isPreICO()){\r\n        tokens = weiAmount.mul(rate.add(rate.mul(30).div(100)));\r\n        preICOWeiRaised = preICOWeiRaised.add(weiAmount);\r\n        wallet.transfer(weiAmount);\r\n    } else {\r\n        tokens = _getTokenAmountWithBonus(weiAmount);\r\n        ICOWeiRaised = ICOWeiRaised.add(weiAmount);\r\n    }\r\n    \r\n    investors[beneficiary] = weiAmount;\r\n\r\n    _deliverTokens(beneficiary, tokens);\r\n\r\n    emit TokenPurchase(beneficiary, weiAmount, tokens);\r\n  }\r\n\r\n    // Покупка токенов с реферальным бонусом\r\n  function buyTokensWithReferal(address _referal) public onlyWhileICOOpen payable {\r\n    address beneficiary = msg.sender;    \r\n    uint256 weiAmount = msg.value;\r\n\r\n    _preValidatePurchase(beneficiary, weiAmount);\r\n\r\n    uint256 tokens = _getTokenAmountWithBonus(weiAmount).add(_getTokenAmountWithReferal(weiAmount, 2));\r\n    uint256 referalTokens = _getTokenAmountWithReferal(weiAmount, 3);\r\n\r\n    ICOWeiRaised = ICOWeiRaised.add(weiAmount);\r\n    investors[beneficiary] = weiAmount;\r\n\r\n    _deliverTokens(beneficiary, tokens);\r\n    _deliverTokens(_referal, referalTokens);\r\n\r\n    emit TokenPurchase(beneficiary, weiAmount, tokens);\r\n  }\r\n\r\n  // Добавить адрес в whitelist\r\n  function addToWhitelist(address _beneficiary) public onlyOwner {\r\n    whitelist[_beneficiary] = true;\r\n  }\r\n\r\n  // Добавить несколько адресов в whitelist\r\n  function addManyToWhitelist(address[] _beneficiaries) public onlyOwner {\r\n    for (uint256 i = 0; i < _beneficiaries.length; i++) {\r\n      whitelist[_beneficiaries[i]] = true;\r\n    }\r\n  }\r\n\r\n  // Исключить адрес из whitelist\r\n  function removeFromWhitelist(address _beneficiary) public onlyOwner {\r\n    whitelist[_beneficiary] = false;\r\n  }\r\n\r\n  // Узнать истек ли срок проведения PreICO\r\n  function hasPreICOClosed() public view returns (bool) {\r\n    return now > preICOEndDate;\r\n  }\r\n\r\n  // Узнать истек ли срок проведения ICO\r\n  function hasICOClosed() public view returns (bool) {\r\n    return now > ICOEndDate;\r\n  }\r\n\r\n  // Перевести собранные средства на кошелек для сбора\r\n  function forwardFunds () public onlyOwner {\r\n    require(now > ICOEndDate);\r\n    require((preICOWeiRaised.add(ICOWeiRaised)).mul(ETHUSD).div(10**18) >= softcap);\r\n\r\n    wallet.transfer(ICOWeiRaised);\r\n  }\r\n\r\n  // Вернуть проинвестированные средства, если не был достигнут softcap\r\n  function refund() public {\r\n    require(now > ICOEndDate);\r\n    require(preICOWeiRaised.add(ICOWeiRaised).mul(ETHUSD).div(10**18) < softcap);\r\n    require(investors[msg.sender] > 0);\r\n    \r\n    address investor = msg.sender;\r\n    investor.transfer(investors[investor]);\r\n  }\r\n  \r\n\r\n  /* Внутренние методы */\r\n\r\n   // Проверка актуальности PreICO\r\n   function _isPreICO() internal view returns(bool) {\r\n       return now >= preICOStartDate && now < preICOEndDate;\r\n   }\r\n   \r\n   // Проверка актуальности ICO\r\n   function _isICO() internal view returns(bool) {\r\n       return now >= ICOStartDate && now < ICOEndDate;\r\n   }\r\n\r\n   // Валидация перед покупкой токенов\r\n  function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal view onlyWhileOpen {\r\n    require(_weiAmount != 0);\r\n    require((preICOWeiRaised.add(ICOWeiRaised).add(_weiAmount)).mul(ETHUSD).div(10**18) <= hardcap);\r\n    require((_isPreICO() && whitelist[_beneficiary]) || _isICO());\r\n  }\r\n\r\n  // Подсчет бонусов с учетом бонусов за этап ICO и объем инвестиций\r\n  function _getTokenAmountWithBonus(uint256 _weiAmount) internal view returns(uint256) {\r\n    uint256 baseTokenAmount = _weiAmount.mul(rate);\r\n    uint256 tokenAmount = baseTokenAmount;\r\n    uint256 usdAmount = _weiAmount.mul(ETHUSD).div(10**18);\r\n\r\n    // Считаем бонусы за объем инвестиций\r\n    if(usdAmount >= 10000000){\r\n        tokenAmount = tokenAmount.add(baseTokenAmount.mul(7).div(100));\r\n    } else if(usdAmount >= 5000000){\r\n        tokenAmount = tokenAmount.add(baseTokenAmount.mul(5).div(100));\r\n    } else if(usdAmount >= 1000000){\r\n        tokenAmount = tokenAmount.add(baseTokenAmount.mul(3).div(100));\r\n    }\r\n    \r\n    // Считаем бонусы за этап ICO\r\n    if(now < ICOStartDate + 15 days) {\r\n        tokenAmount = tokenAmount.add(baseTokenAmount.mul(20).div(100));\r\n    } else if(now < ICOStartDate + 28 days) {\r\n        tokenAmount = tokenAmount.add(baseTokenAmount.mul(15).div(100));\r\n    } else if(now < ICOStartDate + 42 days) {\r\n        tokenAmount = tokenAmount.add(baseTokenAmount.mul(10).div(100));\r\n    } else {\r\n        tokenAmount = tokenAmount.add(baseTokenAmount.mul(5).div(100));\r\n    }\r\n\r\n    return tokenAmount;\r\n  }\r\n\r\n  // Подсчет бонусов с учетом бонусов реферальной системы\r\n  function _getTokenAmountWithReferal(uint256 _weiAmount, uint8 _percent) internal view returns(uint256) {\r\n    return _weiAmount.mul(rate).mul(_percent).div(100);\r\n  }\r\n\r\n  // Перевод токенов\r\n  function _deliverTokens(address _beneficiary, uint256 _tokenAmount) internal {\r\n    token.mint(_beneficiary, _tokenAmount);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_preICOEndDate\",\"type\":\"uint256\"}],\"name\":\"setPreICOEndDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOStartDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ICOEndDate\",\"type\":\"uint256\"}],\"name\":\"setICOEndDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_referal\",\"type\":\"address\"}],\"name\":\"buyTokensWithReferal\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasICOClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"referalBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasPreICOClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETHUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preICOStartDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiaries\",\"type\":\"address[]\"}],\"name\":\"addManyToWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"forwardFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preICOWeiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOWeiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardcap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ICOStartDate\",\"type\":\"uint256\"}],\"name\":\"setICOStartDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint16\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_preICOStartDate\",\"type\":\"uint256\"}],\"name\":\"setPreICOStartDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"invitedByReferalBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ETHUSD\",\"type\":\"uint256\"}],\"name\":\"setETHUSD\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preICOEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"softcap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_preICOStartDate\",\"type\":\"uint256\"},{\"name\":\"_preICOEndDate\",\"type\":\"uint256\"},{\"name\":\"_ICOStartDate\",\"type\":\"uint256\"},{\"name\":\"_ICOEndDate\",\"type\":\"uint256\"},{\"name\":\"_ETHUSD\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000b24516f8200fe09e90de0565b2d3422f7fe5c66f000000000000000000000000000000000000000000000000000000005ac7dfd1000000000000000000000000000000000000000000000000000000005af9f8cf000000000000000000000000000000000000000000000000000000005afb4a51000000000000000000000000000000000000000000000000000000005b4d074f000000000000000000000000000000000000000000000000000000000000016f","Library":"","SwarmSource":"bzzr://d264bee02c01981475dcfd77670a2bd621b0dbe8da681375e7a4a9d0c613ef42"}]}