{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) external;\r\n}\r\n\r\n\r\ncontract Ownable {\r\n\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n}\r\n\r\ncontract ZenswapContribution is Ownable {\r\n    \r\n    address public beneficiary;\r\n    uint256 public amountTokensPerEth = 200000000;\r\n    uint256 public amountEthRaised = 0;\r\n    uint256 public availableTokens;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n    \r\n    \r\n    /**\r\n     * Constructor function\r\n     *\r\n     * Set beneficiary and set the token smart contract address\r\n     */\r\n    constructor() public {\r\n        \r\n        beneficiary = msg.sender;\r\n        tokenReward = token(0x0D1C63E12fDE9e5cADA3E272576183AbA9cfedA2);\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function () payable public {\r\n        \r\n        uint256 amount = msg.value;\r\n        uint256 tokens = amount * amountTokensPerEth;\r\n        require(availableTokens >= amount);\r\n        \r\n        balanceOf[msg.sender] += amount;\r\n        availableTokens -= tokens;\r\n        amountEthRaised += amount;\r\n        tokenReward.transfer(msg.sender, tokens);\r\n        beneficiary.transfer(amount);\r\n    }\r\n\r\n    /**\r\n     * Withdraw an \"amount\" of available tokens in the contract\r\n     * \r\n     */\r\n    function withdrawAvailableToken(address _address, uint amount) public onlyOwner {\r\n        require(availableTokens >= amount);\r\n        availableTokens -= amount;\r\n        tokenReward.transfer(_address, amount);\r\n    }\r\n    \r\n    /**\r\n     * Set the amount of tokens per one ether\r\n     * \r\n     */\r\n    function setTokensPerEth(uint value) public onlyOwner {\r\n        \r\n        amountTokensPerEth = value;\r\n    }\r\n    \r\n   /**\r\n     * Set a token contract address and available tokens and the available tokens\r\n     * \r\n     */\r\n    function setTokenReward(address _address, uint amount) public onlyOwner {\r\n        \r\n        tokenReward = token(_address);\r\n        availableTokens = amount;\r\n    }\r\n    \r\n   /**\r\n     * Set available tokens to synchronized values or force to stop contribution campaign\r\n     * \r\n     */\r\n    function setAvailableToken(uint value) public onlyOwner {\r\n        \r\n        availableTokens = value;\r\n    }\r\n    \r\n    \r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setTokensPerEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"availableTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAvailableToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountEthRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setTokenReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setAvailableToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountTokensPerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"ZenswapContribution","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5a33a46fa4fb09ea51215f15f24672e1b946893ace93ff5e4a21a01ef87c27e3"}]}