{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  function ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n  emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n\r\ncontract ERC721 {\r\n    \r\n    function totalSupply() public view returns (uint256 total);\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function ownerOf(uint256 _tokenId) external view returns (address owner);\r\n    function approve(address _to, uint256 _tokenId) external;\r\n    function transfer(address _to, uint256 _tokenId) external payable;\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) external payable;\r\n\r\n\r\n    event Transfer(address from, address to, uint256 tokenId);\r\n    event Approval(address owner, address approved, uint256 tokenId); \r\n    \r\n    \r\n    \r\n}\r\n\r\n\r\n\r\ncontract SaddleControl  {\r\n\r\n    address public ceoAddress=0xC87959bbafD5cDCbC5E29C92E3161f59f51d5794;\r\n    \r\n    address public ctoAddress=0x6c2324c462184058C6ce28339C39FF04b9d9bEf1;\r\n \r\n        \r\n\r\n    modifier onCEO() {\r\n        require(msg.sender == ceoAddress);\r\n        _;\r\n    }\r\n\r\n    modifier onCTO() {\r\n        require(msg.sender == ctoAddress);\r\n        _;\r\n    }\r\n\r\n    modifier onlyC() {\r\n        require(\r\n            msg.sender == ceoAddress ||\r\n            msg.sender == ctoAddress\r\n        );\r\n        _;\r\n    }\r\n    \r\n    \r\n    \r\n    address public raceDistCon;\r\n        \r\n\r\n    address public addr_Saddlery;\r\n   \r\n\r\n\r\n            \r\n        function newSaddleryCon (address newConAddr) external onCTO {\r\n            addr_Saddlery = newConAddr;\r\n            \r\n        }\r\n            \r\n        function newRaceDistCon (address newConAddr) external onCTO {\r\n            raceDistCon = newConAddr;\r\n            \r\n        }\r\n            \r\n    \r\n            \r\n\r\n    \r\n    \r\n\r\n \r\n}\r\n\r\ncontract SaddleShopOwner is SaddleControl, ERC721 {\r\n    \r\n\r\n    \r\n    mapping (uint256 => address) public SaddleShopO;\r\n    \r\n    mapping (uint256 => uint256) public SaddleShopPrice;\r\n    \r\n    mapping (uint256 => bool) public SaddleShopForSale;\r\n    mapping (uint256 => bool) public SaddleShopForBiding;\r\n    \r\n    mapping (address => uint256) SaddleShopOwnCount;\r\n    \r\n     uint256 public SaddleShopSaleFee = 20;\r\n   \r\n  \r\n        mapping (uint256 => uint256)  startBlock;\r\n      \r\n    mapping (uint256 => uint256) startPrice;\r\n    mapping (uint256 => uint256) public shopPriceDecreaseRate;\r\n    \r\n\r\n      function getCurrentItemPrice(uint256 _id) public view returns (uint256)  {\r\n          \r\n        uint256  currentPrice =startPrice[_id] - shopPriceDecreaseRate[_id]*(block.number - startBlock[_id]);\r\n          \r\n           if(currentPrice <=0 ){\r\n      return 0;\r\n  }else if(currentPrice>startPrice[_id]){\r\n      \r\n      return 0;\r\n  }else{\r\n      \r\n    return currentPrice;\r\n  }\r\n  \r\n  \r\n  }\r\n    \r\n      function newPriceDecreaseRate(uint DecreRate,uint256 _id) external onlyC   {\r\n                shopPriceDecreaseRate[_id]=DecreRate;\r\n  }\r\n    \r\n    \r\n    \r\n    function changeSaddleShopPrice(uint256 price, uint256 SadShopId) external{\r\n        \r\n        require(msg.sender==SaddleShopO[SadShopId]);\r\n        \r\n        require(SaddleShopForSale[SadShopId]==true);\r\n        \r\n        require(price!=0);\r\n        \r\n        SaddleShopPrice[SadShopId]=price;\r\n        \r\n    }\r\n    \r\n    \r\n    function buySaddleShop(uint256 id) payable external{\r\n        \r\n          require(SaddleShopForSale[id]==true);\r\n         \r\n              uint256 price = SaddleShopPrice[id];\r\n            \r\n            require(price<=msg.value);\r\n            \r\n         uint256 Fee = price / SaddleShopSaleFee ;\r\n            \r\n          uint256  oPrice= price - Fee;\r\n            \r\n            address _to = msg.sender;\r\n            address _from = SaddleShopO[id];\r\n            \r\n            SaddleShopOwnCount[_to]++;\r\n            \r\n            SaddleShopO[id] = _to;\r\n            \r\n            SaddleShopForSale[id]=false;\r\n            \r\n            \r\n                SaddleShopOwnCount[_from]--;\r\n               \r\n           emit Transfer(_from, _to, id);\r\n           \r\n             ceoAddress.transfer(Fee);\r\n            \r\n            if(_from!=0){\r\n                \r\n             _from.transfer(oPrice);\r\n            }else{\r\n                \r\n             ceoAddress.transfer(oPrice);\r\n            }\r\n             \r\n             \r\n             \r\n            uint256 buyExcess = msg.value - oPrice - Fee;\r\n            _to.transfer(buyExcess);\r\n      \r\n        \r\n    }\r\n    \r\n\r\n    \r\n    function firstSellSaddleShop(uint256 _id, uint256 price, uint256 _decreRate) external onlyC {\r\n        \r\n        require(SaddleShopO[_id]==0);\r\n        \r\n        SaddleShopPrice[_id]=price;\r\n        \r\n            \r\n                SaddleShopForBiding[_id]=true;\r\n                \r\n                  startBlock[_id] = block.number;\r\n                  \r\n                  startPrice[_id] = price;\r\n                  \r\n                 shopPriceDecreaseRate[_id]= _decreRate;\r\n                \r\n    }\r\n    \r\n    function bid(uint256 _id) payable external{\r\n      \r\n        \r\n        \r\n        uint256 priceNow = getCurrentItemPrice(_id);\r\n        require(msg.value>=priceNow);\r\n        \r\n        require(SaddleShopForBiding[_id]==true);\r\n        \r\n          if(priceNow<=0||priceNow>=startPrice[_id]){\r\n        SaddleShopForBiding[_id]=false;\r\n              _to.transfer( msg.value);\r\n              \r\n              //besser regeln!!\r\n        }else{\r\n            \r\n        \r\n        SaddleShopForBiding[_id]=false;\r\n        \r\n            \r\n            address _to = msg.sender;\r\n            address _from = SaddleShopO[_id];\r\n            \r\n            SaddleShopOwnCount[_to]++;\r\n            \r\n            SaddleShopO[_id] = _to;\r\n            \r\n            SaddleShopForSale[_id]=true;\r\n            \r\n            uint256 priceAufschlag=msg.value/3;\r\n            \r\n            \r\n   SaddleShopPrice[_id]=msg.value+ priceAufschlag;\r\n               \r\n           emit Transfer(_from, _to, _id);\r\n            \r\n             ceoAddress.transfer(priceNow);\r\n         \r\n             \r\n            uint256 buyExcess = msg.value - priceNow;\r\n            _to.transfer(buyExcess);\r\n        }\r\n        \r\n        \r\n      \r\n    }\r\n    \r\n    \r\n     function setSaddleShopSaleFee(uint256 val) external onCTO {\r\n        SaddleShopSaleFee = val;\r\n    }\r\n    \r\n}\r\n\r\ncontract SaddleBasis is  SaddleShopOwner {\r\n    \r\n    \r\n   \r\n    event Birth(address owner, uint256 SaddleId);\r\n   \r\n    event Transfer(address from, address to, uint256 tokenId);\r\n\r\n    struct SaddleAttr {\r\n        \r\n        uint256 dna1; \r\n        uint256 dna2; \r\n        uint256 dna3;\r\n\r\n        bool dna4; \r\n        \r\n        \r\n    }\r\n\r\n\r\n    SaddleAttr[] Saddles;\r\n\r\n    mapping (uint256 => address) SaddleOwnerIndex;\r\n    \r\n    mapping (uint256 => uint256) public saddleIndexPrice;\r\n    \r\n    mapping (uint256 => uint256) public saddleQuality;\r\n    \r\n    \r\n    \r\n    mapping (uint256 => bool) SaddleIndexForSale;\r\n\r\n    mapping (address => uint256) tokenOwnershipCount;\r\n    \r\n    mapping (uint256 => bool)  raceListed;\r\n    \r\n    mapping (uint256 => bool) public DutchAListed;\r\n    \r\n    mapping (uint256 => uint256)  startDutchABlock;\r\n      \r\n    mapping (uint256 => uint256) startDutchAPrice;\r\n    \r\n    mapping (uint256 => uint256) public DutchADecreaseRate;\r\n    \r\n    \r\n\r\n\r\n  uint256 public saleFee = 20;\r\n   \r\n\r\n\r\n \r\n    function _transfer(address _from, address _to, uint256 _tokenId) internal {\r\n        tokenOwnershipCount[_to]++;\r\n        SaddleOwnerIndex[_tokenId] = _to;\r\n        \r\n        if (_from != address(0)) {\r\n            tokenOwnershipCount[_from]--;\r\n         \r\n        }\r\n       emit Transfer(_from, _to, _tokenId);\r\n       \r\n    }\r\n    \r\n    \r\n \r\n    function transfer10( address _to, uint256 _tokenId1, uint256 _tokenId2, uint256 _tokenId3, uint256 _tokenId4, uint256 _tokenId5, uint256 _tokenId6, uint256 _tokenId7, uint256 _tokenId8, uint256 _tokenId9, uint256 _tokenId10  ) external onlyC {\r\n     \r\n       require(_to != address(0));\r\n\t\t\r\n        require(_to != address(this));\r\n     \r\n     require( SaddleOwnerIndex[_tokenId1] == msg.sender );\r\n     require( SaddleOwnerIndex[_tokenId2] == msg.sender );\r\n     require( SaddleOwnerIndex[_tokenId3] == msg.sender );\r\n     require( SaddleOwnerIndex[_tokenId4] == msg.sender );\r\n     require( SaddleOwnerIndex[_tokenId5] == msg.sender );\r\n     require( SaddleOwnerIndex[_tokenId6] == msg.sender );\r\n     require( SaddleOwnerIndex[_tokenId7] == msg.sender );\r\n     require( SaddleOwnerIndex[_tokenId8] == msg.sender );\r\n     require( SaddleOwnerIndex[_tokenId9] == msg.sender );\r\n     require( SaddleOwnerIndex[_tokenId10] == msg.sender );\r\n      \r\n      \r\n      \r\n      _transfer(msg.sender,  _to,  _tokenId1);\r\n        \r\n   \r\n      _transfer(msg.sender,  _to,  _tokenId2);\r\n     \r\n      _transfer(msg.sender,  _to,  _tokenId3);\r\n       \r\n      _transfer(msg.sender,  _to,  _tokenId4);\r\n  \r\n      _transfer(msg.sender,  _to,  _tokenId5);\r\n       \r\n      _transfer(msg.sender,  _to,  _tokenId6);\r\n        \r\n      _transfer(msg.sender,  _to,  _tokenId7);\r\n       \r\n      _transfer(msg.sender,  _to,  _tokenId8);\r\n      \r\n      \r\n      _transfer(msg.sender,  _to,  _tokenId9);\r\n      _transfer(msg.sender,  _to,  _tokenId10);\r\n       \r\n    }\r\n    \r\n    function _sell(address _from,  uint256 _tokenId, uint256 value) internal {\r\n     \r\n           uint256 price;\r\n            \r\n            \r\n         if(DutchAListed[_tokenId]==true){\r\n             \r\n        price  = getCurrentSaddlePrice(_tokenId);\r\n                \r\n         }else{\r\n             \r\n        price  = saddleIndexPrice[_tokenId];\r\n             \r\n         }\r\n         \r\n         if(price==0){\r\n             SaddleIndexForSale[_tokenId]=false;\r\n         }\r\n         \r\n     if(SaddleIndexForSale[_tokenId]==true){\r\n          \r\n            require(price<=value);\r\n            \r\n            \r\n            \r\n         uint256 Fee = price / saleFee /2;\r\n            \r\n          uint256  oPrice= price - Fee - Fee;\r\n            \r\n            address _to = msg.sender;\r\n            \r\n            tokenOwnershipCount[_to]++;\r\n            SaddleOwnerIndex[_tokenId] = _to;\r\n            \r\n            SaddleIndexForSale[_tokenId]=false;\r\n         DutchAListed[_tokenId]=false;\r\n            \r\n            \r\n            if (_from != address(0)) {\r\n                tokenOwnershipCount[_from]--;\r\n               \r\n            }\r\n                 \r\n           emit Transfer(_from, _to, _tokenId);\r\n            \r\n            uint256 saddleQ = saddleQuality[_tokenId]/10;\r\n             address SaddleSOwner;\r\n             \r\n              if(saddleQ>=0&&saddleQ<=2){\r\n              SaddleSOwner= SaddleShopO[5];\r\n                 \r\n             }else  if(saddleQ>=2&&saddleQ<=4){\r\n              SaddleSOwner= SaddleShopO[4];\r\n                 \r\n             } else  if(saddleQ>=4&&saddleQ<=6){\r\n             SaddleSOwner=  SaddleShopO[3];\r\n                 \r\n             } else  if(saddleQ>=6&&saddleQ<=8){\r\n             SaddleSOwner=  SaddleShopO[2];\r\n                 \r\n             }else  if(saddleQ>=8&&saddleQ<=10){\r\n             SaddleSOwner=  SaddleShopO[1];\r\n                 \r\n             }else{\r\n                 \r\n             SaddleSOwner= ceoAddress;\r\n             }\r\n             \r\n            \r\n             \r\n             _from.transfer(oPrice);\r\n             \r\n            uint256 bidExcess = value - oPrice - Fee - Fee;\r\n            _to.transfer(bidExcess);\r\n             \r\n             ceoAddress.transfer(Fee);\r\n             \r\n             if(SaddleSOwner!=0){\r\n                 \r\n             SaddleSOwner.transfer(Fee);\r\n             }else {\r\n             ceoAddress.transfer(Fee);\r\n                 \r\n             }\r\n            \r\n            \r\n     }else{\r\n          _to.transfer(value);\r\n     }\r\n      \r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n      function getCurrentSaddlePrice(uint256 _id) public view returns (uint256)  {\r\n          \r\n      uint256     currentPrice= startDutchAPrice[_id] - DutchADecreaseRate[_id]*(block.number - startDutchABlock[_id]);\r\n  if(currentPrice <=0 ){\r\n      return 0;\r\n  }else if(currentPrice>startDutchAPrice[_id]){\r\n      \r\n      return 0;\r\n  }else{\r\n      \r\n    return currentPrice;\r\n  }\r\n  }\r\n    \r\n      function newDutchPriceRate(uint DecreRate,uint256 _id) external  {\r\n               \r\n               require(msg.sender==SaddleOwnerIndex[_id]);\r\n               \r\n               require(DutchAListed[_id]==true);\r\n               \r\n                DutchADecreaseRate[_id]=DecreRate;\r\n  }\r\n    \r\n    \r\n    \r\n    \r\n       \r\n    function setForDutchSale(uint256 _id, uint256 price, uint256 _decreRate) external {\r\n        \r\n               require(msg.sender==SaddleOwnerIndex[_id]);\r\n        \r\n                 require(raceListed[_id]==false);\r\n                 \r\n        SaddleShopPrice[_id]=price;\r\n        \r\n            \r\n                DutchAListed[_id]=true;\r\n                \r\n                  startDutchABlock[_id] = block.number;\r\n                  \r\n                  startDutchAPrice[_id] = price;\r\n                  \r\n                 DutchADecreaseRate[_id]= _decreRate;\r\n                 \r\n                SaddleIndexForSale[_id]=true;\r\n    }\r\n    \r\n  \r\n    \r\n    \r\n    \r\n    \r\n\t\r\n    function _newSaddle(\r\n        uint256 _genes1,\r\n        uint256 _genes2,\r\n        uint256 _genes3,\r\n        bool _genes4,\r\n        address _owner\r\n    )\r\n        internal\r\n        returns (uint)\r\n    {\r\n   \r\n   \r\n   \r\n   \r\n        SaddleAttr memory _saddle = SaddleAttr({\r\n          dna1:_genes1,  \r\n        dna2: _genes2,\r\n        dna3 : _genes3,\r\n        dna4: _genes4\r\n            \r\n        });\r\n       \r\n       \r\n        \r\n       uint256 newSaddleId;\r\n\t   \r\n     newSaddleId = Saddles.push(_saddle)-1;\r\n     \r\n  \r\n        require(newSaddleId == uint256(uint32(newSaddleId)));\r\n\r\n\r\n        \r\n       saddleQuality[newSaddleId]= (_genes1 +_genes2 + _genes3)/3;\r\n        \r\n        raceListed[newSaddleId]=false;\r\n        \r\n       emit Birth(_owner, newSaddleId);\r\n\r\n        _transfer(0, _owner, newSaddleId);\r\n\r\n        return newSaddleId;  \r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\ncontract SaddleOwnership is SaddleBasis{\r\n\r\n  string public constant  name = \"CryptoSaddle\";\r\n    string public constant symbol = \"CSD\";\r\n     uint8 public constant decimals = 0; \r\n\r\n    function SaddleForSale(uint256 _tokenId, uint256 price) external { \r\n  \r\n     address  ownerof =  SaddleOwnerIndex[_tokenId];\r\n        require(ownerof == msg.sender);\r\n        \r\n                 require(raceListed[_tokenId]==false);\r\n                 \r\n       uint256 forDutch =  getCurrentSaddlePrice(_tokenId);\r\n  \r\n      require(forDutch==0||DutchAListed[_tokenId]==false);\r\n                 \r\n        saddleIndexPrice[_tokenId] = price;\r\n       SaddleIndexForSale[_tokenId]= true;\r\n       DutchAListed[_tokenId]=false;\r\n       \r\n       \r\n\t\t}\r\n\t\t\r\n\r\n\t\t\r\n function changePrice(uint256 _tokenId, uint256 price) external {\r\n  \r\n     address  ownerof =  SaddleOwnerIndex[_tokenId];\r\n        require(ownerof == msg.sender);\r\n        require(SaddleIndexForSale[_tokenId] == true);\r\n  \r\n  \r\n      require(DutchAListed[_tokenId]==false);\r\n          \r\n             saddleIndexPrice[_tokenId] = price;\r\n      \r\n             \r\n         \r\n\t\t}\r\n\r\n function SaddleNotForSale(uint256 _tokenId) external {\r\n         address  ownerof =  SaddleOwnerIndex[_tokenId];\r\n            require(ownerof == msg.sender);\r\n       SaddleIndexForSale[_tokenId]= false;\r\n         DutchAListed[_tokenId]=false;\r\n\r\n    }\r\n\r\n\r\n    function _owns(address _applicant, uint256 _tokenId) internal view returns (bool) {\r\n        return SaddleOwnerIndex[_tokenId] == _applicant;\r\n    }\r\n\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 count) {\r\n        return tokenOwnershipCount[_owner];\r\n    }\r\n\r\n    function transfer(\r\n        address _to,\r\n        uint256 _tokenId\r\n    )\r\n        external\r\n        payable\r\n    {\r\n        require(_to != address(0));\r\n\t\t\r\n        require(_to != address(this));\r\n \r\n        require(_owns(msg.sender, _tokenId));\r\n       _transfer(msg.sender, _to, _tokenId);\r\n    }\r\n\r\n    function approve(\r\n        address _to,\r\n        uint256 _tokenId\r\n    )\r\n        external \r\n    {\r\n       require(_owns(msg.sender, _tokenId));\r\n\r\n        emit Approval(msg.sender, _to, _tokenId);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _tokenId ) external payable {\r\n        \r\n        if(_from != msg.sender){\r\n              require(_to == msg.sender);\r\n                 \r\n                 require(raceListed[_tokenId]==false);\r\n                 \r\n                require(_from==SaddleOwnerIndex[_tokenId]);\r\n        \r\n               _sell(_from,  _tokenId, msg.value);\r\n            \r\n        }else{\r\n            \r\n          _to.transfer(msg.value);\r\n        }\r\n \r\n    }\r\n\r\n    function totalSupply() public view returns (uint) {\r\n        return Saddles.length;\r\n    }\r\n\r\n    function ownerOf(uint256 _tokenId)  external view returns (address owner)  {\r\n        owner = SaddleOwnerIndex[_tokenId];\r\n\r\n       return;\r\n       \r\n    }\r\n    \r\n    function ownerOfID(uint256 _tokenId)  external view returns (address owner, uint256 tokenId)  {\r\n        owner = SaddleOwnerIndex[_tokenId];\r\ntokenId=_tokenId;\r\n       return;\r\n       \r\n    }\r\n\r\n       function SaddleFS(uint256 _tokenId) external view  returns (bool buyable, uint256 tokenId) {\r\n      \r\n\tbool\tforDutchSale=DutchAListed[_tokenId];\r\n\tuint256 price;\r\n\t\r\n\t\tif(\tforDutchSale==true){\r\n\t\t    \tprice = getCurrentSaddlePrice(_tokenId);\r\n\t\t}else{\r\n\t\t    \tprice = saddleIndexPrice[_tokenId];\r\n\t\t}\t\r\n\t\tif(price==0){\r\n\t\t    buyable=false;\r\n\t\t}else{\r\n\t\t    \r\n        buyable = SaddleIndexForSale[_tokenId];\r\n\t\t}\r\n\t\t\r\n        tokenId=_tokenId;\r\n       return;\r\n       \r\n    }\r\n\t\r\n\tfunction SaddlePr(uint256 _tokenId) external view  returns (uint256 price, uint256 tokenId) {\r\n        price = saddleIndexPrice[_tokenId];\r\n        tokenId=_tokenId;\r\n       return;\r\n       \r\n    }\r\n\r\n function setSaleFee(uint256 val) external onCTO {\r\n        saleFee = val;\r\n    }\r\n\r\n\r\nfunction raceOut(uint256 _tokenIdA) external {\r\n    \r\n    require(msg.sender==raceDistCon);\r\n\r\n    \r\n\t\t\r\n      SaddleAttr storage saddleA = Saddles[_tokenIdA];\r\n    \r\n    saddleA.dna4=true;\r\n    \r\n\t  \r\n\t  raceListed[_tokenIdA]=false;\r\n    \r\n      \r\n}\r\n\r\n\r\nfunction raceRegistration(uint256 _tokenIdA, address owner) external {\r\n    \r\n   require(msg.sender==raceDistCon);\r\n    \r\n    \r\n  require(SaddleOwnerIndex[_tokenIdA]==owner);\r\n  \r\n      SaddleAttr storage saddleA = Saddles[_tokenIdA];\r\n    require(saddleA.dna4==true);\r\n    \r\n    require( raceListed[_tokenIdA]==false);\r\n    \r\n          \r\n\tbool forDutchSale=DutchAListed[_tokenIdA];\r\n\tuint256 price;\r\n\t\r\n\t\tif(\tforDutchSale==true){\r\n\t\t    \tprice = getCurrentSaddlePrice(_tokenIdA);\r\n\t\t}else{\r\n\t\t    \tprice = saddleIndexPrice[_tokenIdA];\r\n\t\t}\r\n    \r\n    bool buyable;\r\n    \r\n    if(price==0){\r\n\t\t    buyable=false;\r\n\t\t}else{\r\n\t\t    \r\n        buyable = SaddleIndexForSale[_tokenIdA];\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\trequire(buyable==false);\r\n\t\r\n        \r\n\t\t\r\n    \r\n    saddleA.dna4=false;\r\n    \r\n    raceListed[_tokenIdA]=true;\r\n\t\r\n\t\r\n\t\t\r\n        \r\n}\r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\ncontract SaddleMinting is SaddleOwnership {\r\n\r\n    uint256 public  Saddle_Limit = 20000;\r\n\r\n\r\n    \r\n        function createSaddle1(   uint256 _genes1, uint256 _genes2,uint256 _genes3, address _owner) external onlyC {\r\n        address SaddleOwner = _owner;\r\n        \r\n   require(Saddles.length+1 < Saddle_Limit);\r\n\r\n              _newSaddle(_genes1, _genes2, _genes3,true, SaddleOwner);\r\n            \r\n          \r\n        \r\n    }\r\n    \r\n    function createSaddle6(\r\n    uint256 _genes1, \r\n    uint256 _genes2,\r\n    uint256 _genes3,\r\n    uint256 _genes1a, \r\n    uint256 _genes2a,\r\n    uint256 _genes3a,\r\n    uint256 _genes1b, \r\n    uint256 _genes2b,\r\n    uint256 _genes3b,\r\n    address _owner\r\n    ) external onlyC {\r\n        address SaddleOwner = _owner;\r\n        \r\n   require(Saddles.length+6 < Saddle_Limit);\r\n\r\n\r\n             \r\n              _newSaddle(_genes1, _genes2, _genes3,true, SaddleOwner);\r\n              _newSaddle(_genes1a, _genes2a, _genes3a,true, SaddleOwner); \r\n              _newSaddle(_genes1b, _genes2b, _genes3b,true, SaddleOwner);\r\n              _newSaddle(_genes1, _genes2, _genes3,true, SaddleOwner);\r\n              _newSaddle(_genes1a, _genes2a, _genes3a,true, SaddleOwner); \r\n              _newSaddle(_genes1b, _genes2b, _genes3b,true, SaddleOwner);\r\n    }\r\n  \r\n\r\n  \r\n    \r\n       function _generateNewSaddle(uint256 saddleM_quality ,uint256 maschine_quality, uint256 leader_qual, address _owner) external {\r\n    \r\n        \r\n   require(msg.sender==addr_Saddlery);\r\n        \r\n              _newSaddle(leader_qual, saddleM_quality, maschine_quality,true, _owner);\r\n\r\n        \r\n    }\r\n   \r\n   \r\n}\r\n\r\n\r\ncontract GetTheSaddle is SaddleMinting {\r\n\r\n\r\n    function getSaddle(uint256 _id)\r\n        external\r\n        view\r\n        returns (\r\n        uint256 price,\r\n        uint256 id,\r\n        bool forSale,\r\n        bool forDutchSale,\r\n        uint256 _genes1,\r\n        uint256 _genes2,\r\n        uint256 _genes3,\r\n        bool _genes4\r\n\t\t\r\n    ) {\r\n        id = uint256(_id);\r\n\t\tforDutchSale=DutchAListed[_id];\r\n\t\t\r\n\t\tif(\tforDutchSale==true){\r\n\t\t    \tprice = getCurrentSaddlePrice(_id);\r\n\t\t}else{\r\n\t\t    \tprice = saddleIndexPrice[_id];\r\n\t\t}\t\r\n\t\t       \r\n    \r\n    if(price==0){\r\n\t\t    forSale=false;\r\n\t\tforDutchSale=false;\r\n\t\t    \r\n\t\t}else{\r\n\t\t    \r\n        forSale = SaddleIndexForSale[_id];\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n        SaddleAttr storage saddle = Saddles[_id];\r\n        \r\n        _genes1 = saddle.dna1;\r\n        _genes2 = saddle.dna2;\r\n        _genes3 = saddle.dna3;\r\n        _genes4 = saddle.dna4;\r\n\t\t\r\n\r\n    }\r\n\r\n  \r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"SaddleFS\",\"outputs\":[{\"name\":\"buyable\",\"type\":\"bool\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"SaddleNotForSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"DutchADecreaseRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"DecreRate\",\"type\":\"uint256\"},{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"newDutchPriceRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SaddleShopSaleFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SaddleShopO\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_genes1\",\"type\":\"uint256\"},{\"name\":\"_genes2\",\"type\":\"uint256\"},{\"name\":\"_genes3\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createSaddle1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"SadShopId\",\"type\":\"uint256\"}],\"name\":\"changeSaddleShopPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ctoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saddleQuality\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"saddleM_quality\",\"type\":\"uint256\"},{\"name\":\"maschine_quality\",\"type\":\"uint256\"},{\"name\":\"leader_qual\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"_generateNewSaddle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"bid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"buySaddleShop\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"DutchAListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"_decreRate\",\"type\":\"uint256\"}],\"name\":\"firstSellSaddleShop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getCurrentSaddlePrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newConAddr\",\"type\":\"address\"}],\"name\":\"newSaddleryCon\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newConAddr\",\"type\":\"address\"}],\"name\":\"newRaceDistCon\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"SaddlePr\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saddleIndexPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId1\",\"type\":\"uint256\"},{\"name\":\"_tokenId2\",\"type\":\"uint256\"},{\"name\":\"_tokenId3\",\"type\":\"uint256\"},{\"name\":\"_tokenId4\",\"type\":\"uint256\"},{\"name\":\"_tokenId5\",\"type\":\"uint256\"},{\"name\":\"_tokenId6\",\"type\":\"uint256\"},{\"name\":\"_tokenId7\",\"type\":\"uint256\"},{\"name\":\"_tokenId8\",\"type\":\"uint256\"},{\"name\":\"_tokenId9\",\"type\":\"uint256\"},{\"name\":\"_tokenId10\",\"type\":\"uint256\"}],\"name\":\"transfer10\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Saddle_Limit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addr_Saddlery\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"setSaddleShopSaleFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"SaddleForSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenIdA\",\"type\":\"uint256\"}],\"name\":\"raceOut\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SaddleShopPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"setSaleFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOfID\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenIdA\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"raceRegistration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"DecreRate\",\"type\":\"uint256\"},{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"newPriceDecreaseRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getCurrentItemPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_genes1\",\"type\":\"uint256\"},{\"name\":\"_genes2\",\"type\":\"uint256\"},{\"name\":\"_genes3\",\"type\":\"uint256\"},{\"name\":\"_genes1a\",\"type\":\"uint256\"},{\"name\":\"_genes2a\",\"type\":\"uint256\"},{\"name\":\"_genes3a\",\"type\":\"uint256\"},{\"name\":\"_genes1b\",\"type\":\"uint256\"},{\"name\":\"_genes2b\",\"type\":\"uint256\"},{\"name\":\"_genes3b\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createSaddle6\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"raceDistCon\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"shopPriceDecreaseRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SaddleShopForSale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SaddleShopForBiding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getSaddle\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"forSale\",\"type\":\"bool\"},{\"name\":\"forDutchSale\",\"type\":\"bool\"},{\"name\":\"_genes1\",\"type\":\"uint256\"},{\"name\":\"_genes2\",\"type\":\"uint256\"},{\"name\":\"_genes3\",\"type\":\"uint256\"},{\"name\":\"_genes4\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"_decreRate\",\"type\":\"uint256\"}],\"name\":\"setForDutchSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"SaddleId\",\"type\":\"uint256\"}],\"name\":\"Birth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"GetTheSaddle","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6f53e3c2fe20cfc490fef43e7e3e8b7b5f7fa931b3a4ebaa3241a9f5db4fe1bd"}]}