{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract Hot {\r\n    event CreateEvent(uint id, uint bid, string name, string link);\r\n    \r\n    event SupportEvent(uint id, uint bid);\r\n    \r\n    struct Record {\r\n        uint index;\r\n        uint bid;\r\n        string name;\r\n        string link;\r\n    }\r\n\r\n    address public owner;\r\n    \r\n    Record[] public records;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function withdraw() external onlyOwner {\r\n        owner.transfer(address(this).balance);\r\n    }\r\n\r\n    function updateRecordName(uint _id, string _name) external onlyOwner {\r\n        require(_utfStringLength(_name) <= 20);\r\n        require(_id < records.length);\r\n        records[_id].name = _name;\r\n    }\r\n\r\n    function createRecord (string _name, string _link) external payable {\r\n        require(msg.value >= 0.001 ether);\r\n        require(_utfStringLength(_name) <= 20);\r\n        require(_utfStringLength(_link) <= 50);\r\n        records.push(Record(records.length,msg.value, _name, _link));\r\n        emit CreateEvent(records.length-1, msg.value, _name, _link);\r\n    }\r\n\r\n    function supportRecord(uint _index) external payable {\r\n        require(msg.value >= 0.001 ether);\r\n        require(_index < records.length);\r\n        records[_index].bid += msg.value;\r\n        emit SupportEvent (_index, records[_index].bid);\r\n    }\r\n    \r\n    function getRecordCount() external view returns (uint) {\r\n        return records.length;\r\n    }\r\n\r\n    function _utfStringLength(string str) private pure returns (uint) {\r\n        uint i = 0;\r\n        uint l = 0;\r\n        bytes memory string_rep = bytes(str);\r\n\r\n        while (i<string_rep.length) {\r\n            if (string_rep[i]>>7==0)\r\n                i += 1;\r\n            else if (string_rep[i]>>5==0x6)\r\n                i += 2;\r\n            else if (string_rep[i]>>4==0xE)\r\n                i += 3;\r\n            else if (string_rep[i]>>3==0x1E)\r\n                i += 4;\r\n            else\r\n                //For safety\r\n                i += 1;\r\n\r\n            l++;\r\n        }\r\n\r\n        return l;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"records\",\"outputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"bid\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"link\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"updateRecordName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_link\",\"type\":\"string\"}],\"name\":\"createRecord\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRecordCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"supportRecord\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"link\",\"type\":\"string\"}],\"name\":\"CreateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bid\",\"type\":\"uint256\"}],\"name\":\"SupportEvent\",\"type\":\"event\"}]","ContractName":"Hot","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c1b7c357b1feb296375448e278cdc9dac89aa328f6ff742179c4e7d0fbd6ce86"}]}