{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Nicks {\r\n  mapping (address => string) private nickOfOwner;\r\n  mapping (string => address) private ownerOfNick;\r\n\r\n  event Set (string indexed _nick, address indexed _owner);\r\n  event Unset (string indexed _nick, address indexed _owner);\r\n\r\n  constructor () public {\r\n\tcontractOwner = msg.sender;\r\n  }\r\n  \r\n  address public contractOwner; \r\n  \r\n\r\nmodifier onlyOwner() {\r\n\t\trequire(contractOwner == msg.sender);\r\n\t\t_;\r\n\t}\r\n\r\n\t\r\n  function nickOf (address _owner) public view returns (string _nick) {\r\n    return nickOfOwner[_owner];\r\n  }\r\n\r\n  function ownerOf (string _nick) public view returns (address _owner) {\r\n    return ownerOfNick[_nick];\r\n  }\r\n\r\n  function set (string _nick) public {\r\n    require(bytes(_nick).length > 2);\r\n    require(ownerOf(_nick) == address(0));\r\n\r\n    address owner = msg.sender;\r\n    string storage oldNick = nickOfOwner[owner];\r\n\r\n    if (bytes(oldNick).length > 0) {\r\n      emit Unset(oldNick, owner);\r\n      delete ownerOfNick[oldNick];\r\n    }\r\n\r\n    nickOfOwner[owner] = _nick;\r\n    ownerOfNick[_nick] = owner;\r\n    emit Set(_nick, owner);\r\n  }\r\n\r\n  function unset () public {\r\n    require(bytes(nickOfOwner[msg.sender]).length > 0);\r\n\r\n    address owner = msg.sender;\r\n    string storage oldNick = nickOfOwner[owner];\r\n\r\n    emit Unset(oldNick, owner);\r\n\r\n    delete ownerOfNick[oldNick];\r\n    delete nickOfOwner[owner];\r\n  }\r\n\r\n  \r\n  \r\n\r\n/////////////////////////////////\r\n/// USEFUL FUNCTIONS ///\r\n////////////////////////////////\r\n\r\n/* Fallback function to accept all ether sent directly to the contract */\r\n\r\n    function() payable public\r\n    {    }\r\n\t\r\n\t\r\n\tfunction withdrawEther() public onlyOwner {\r\n\t\trequire(address(this).balance > 0);\r\n\t\t\r\n        contractOwner.transfer(address(this).balance);\r\n    }\r\n\t\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_nick\",\"type\":\"string\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_nick\",\"type\":\"string\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nickOf\",\"outputs\":[{\"name\":\"_nick\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_nick\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"Set\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_nick\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"Unset\",\"type\":\"event\"}]","ContractName":"Nicks","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2954e0d91606a16f27fff5935b0d1c186a885a3050c4b37329da98747c200b9d"}]}