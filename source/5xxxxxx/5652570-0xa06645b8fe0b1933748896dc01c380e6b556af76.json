{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18; // solhint-disable-line\r\n\r\n// site : http://ethdragonfarm.com/\r\n\r\ncontract DragonFarmer {\r\n    \r\n    address public superPowerFulDragonOwner;\r\n    uint256 public lastPrice = 200000000000000000;\r\n    uint public hatchingSpeed = 100;\r\n    uint256 public snatchedOn;\r\n    bool public isEnabled = false;\r\n    \r\n    function enableSuperDragon(bool enable) public {\r\n        require(msg.sender == ceoAddress);\r\n        isEnabled = enable;\r\n        superPowerFulDragonOwner = ceoAddress;\r\n        snatchedOn = now;\r\n    }\r\n    \r\n    function withDrawMoney(uint percentage) public {\r\n        require(msg.sender == ceoAddress);\r\n        uint256 myBalance = calculatePercentage(ceoEtherBalance, percentage);\r\n        ceoEtherBalance = ceoEtherBalance - myBalance;\r\n        ceoAddress.transfer(myBalance);\r\n    }\r\n    \r\n    function buySuperDragon() public payable {\r\n        require(isEnabled);\r\n        require(initialized);\r\n        uint currenPrice = SafeMath.add(SafeMath.div(SafeMath.mul(lastPrice, 4),100),lastPrice);\r\n        require(msg.value > currenPrice);\r\n        \r\n        uint256 timeSpent = SafeMath.sub(now, snatchedOn);\r\n        userReferralEggs[superPowerFulDragonOwner] += SafeMath.mul(hatchingSpeed,timeSpent);\r\n        \r\n        hatchingSpeed += SafeMath.div(SafeMath.sub(now, contractStarted), 60*60*24);\r\n        ceoEtherBalance += calculatePercentage(msg.value, 2);\r\n        superPowerFulDragonOwner.transfer(msg.value - calculatePercentage(msg.value, 2));\r\n        lastPrice = currenPrice;\r\n        superPowerFulDragonOwner = msg.sender;\r\n        snatchedOn = now;\r\n    }\r\n    \r\n    function claimSuperDragonEggs() public {\r\n        require(isEnabled);\r\n        require (msg.sender == superPowerFulDragonOwner);\r\n        uint256 timeSpent = SafeMath.sub(now, snatchedOn);\r\n        userReferralEggs[superPowerFulDragonOwner] += SafeMath.mul(hatchingSpeed,timeSpent);\r\n        snatchedOn = now;\r\n    }\r\n    \r\n    //uint256 EGGS_PER_Dragon_PER_SECOND=1;\r\n    uint256 public EGGS_TO_HATCH_1Dragon=86400;//for final version should be seconds in a day\r\n    uint256 public STARTING_Dragon=20;\r\n    \r\n    uint256 PSN=10000;\r\n    uint256 PSNH=5000;\r\n    \r\n    bool public initialized=false;\r\n    address public ceoAddress;\r\n    uint public ceoEtherBalance;\r\n    uint public constant maxIceDragonsCount = 5;\r\n    uint public constant maxPremiumDragonsCount = 20;\r\n    \r\n    mapping (address => uint256) public iceDragons;\r\n    mapping (address => uint256) public premiumDragons;\r\n    mapping (address => uint256) public normalDragon;\r\n    mapping (address => uint256) public userHatchRate;\r\n    \r\n    mapping (address => uint256) public userReferralEggs;\r\n    mapping (address => uint256) public lastHatch;\r\n    mapping (address => address) public referrals;\r\n    \r\n    uint256 public marketEggs;\r\n    uint256 public contractStarted;\r\n    \r\n    constructor() public {\r\n        ceoAddress=msg.sender;\r\n    }\r\n    \r\n    function seedMarket(uint256 eggs) public payable {\r\n        require(marketEggs==0);\r\n        initialized=true;\r\n        marketEggs=eggs;\r\n        contractStarted = now;\r\n    }\r\n    \r\n    function getMyEggs() public view returns(uint256){\r\n        return SafeMath.add(userReferralEggs[msg.sender], getEggsSinceLastHatch(msg.sender));\r\n    }\r\n    \r\n    function getEggsSinceLastHatch(address adr) public view returns(uint256){\r\n        uint256 secondsPassed = SafeMath.sub(now,lastHatch[adr]);\r\n        uint256 dragonCount = SafeMath.mul(iceDragons[adr], 10);\r\n        dragonCount = SafeMath.add(dragonCount, premiumDragons[adr]);\r\n        dragonCount = SafeMath.add(dragonCount, normalDragon[adr]);\r\n        return SafeMath.mul(secondsPassed, dragonCount);\r\n    }\r\n    \r\n    function getEggsToHatchDragon() public view returns (uint) {\r\n        uint256 timeSpent = SafeMath.sub(now,contractStarted); \r\n        timeSpent = SafeMath.div(timeSpent, 3600);\r\n        return SafeMath.mul(timeSpent, 10);\r\n    }\r\n    \r\n    function getBalance() public view returns(uint256){\r\n        return address(this).balance;\r\n    }\r\n    \r\n    function getMyNormalDragons() public view returns(uint256) {\r\n        return SafeMath.add(normalDragon[msg.sender], premiumDragons[msg.sender]);\r\n    }\r\n    \r\n    function getMyIceDragon() public view returns(uint256) {\r\n        return iceDragons[msg.sender];\r\n    }\r\n    \r\n    function setUserHatchRate() internal {\r\n        if (userHatchRate[msg.sender] == 0) \r\n            userHatchRate[msg.sender] = SafeMath.add(EGGS_TO_HATCH_1Dragon, getEggsToHatchDragon());\r\n    }\r\n    \r\n    function calculatePercentage(uint256 amount, uint percentage) public pure returns(uint256){\r\n        return SafeMath.div(SafeMath.mul(amount,percentage),100);\r\n    }\r\n    \r\n    function getFreeDragon() public {\r\n        require(initialized);\r\n        require(normalDragon[msg.sender] == 0);\r\n        \r\n        lastHatch[msg.sender]=now;\r\n        normalDragon[msg.sender]=STARTING_Dragon;\r\n        setUserHatchRate();\r\n    }\r\n    \r\n    function buyDrangon() public payable {\r\n        require(initialized);\r\n        require(userHatchRate[msg.sender] != 0);\r\n        uint dragonPrice = getDragonPrice(userHatchRate[msg.sender], address(this).balance);\r\n        uint dragonAmount = SafeMath.div(msg.value, dragonPrice);\r\n        require(dragonAmount > 0);\r\n        \r\n        ceoEtherBalance += calculatePercentage(msg.value, 20);\r\n        premiumDragons[msg.sender] += dragonAmount;\r\n    }\r\n    \r\n    function buyIceDrangon() public payable {\r\n        require(initialized);\r\n        require(userHatchRate[msg.sender] != 0);\r\n        uint dragonPrice = getDragonPrice(userHatchRate[msg.sender], address(this).balance) * 8;\r\n        uint dragonAmount = SafeMath.div(msg.value, dragonPrice);\r\n        require(dragonAmount > 0);\r\n        \r\n        ceoEtherBalance += calculatePercentage(msg.value, 20);\r\n        iceDragons[msg.sender] += dragonAmount;\r\n    }\r\n    \r\n    function hatchEggs(address ref) public {\r\n        require(initialized);\r\n        \r\n        if(referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {\r\n            referrals[msg.sender] = ref;\r\n        }\r\n        \r\n        uint256 eggsProduced = getMyEggs();\r\n        \r\n        uint256 newDragon = SafeMath.div(eggsProduced,userHatchRate[msg.sender]);\r\n        \r\n        uint256 eggsConsumed = SafeMath.mul(newDragon, userHatchRate[msg.sender]);\r\n        \r\n        normalDragon[msg.sender] = SafeMath.add(normalDragon[msg.sender],newDragon);\r\n        userReferralEggs[msg.sender] = SafeMath.sub(eggsProduced, eggsConsumed); \r\n        lastHatch[msg.sender]=now;\r\n        \r\n        //send referral eggs\r\n        userReferralEggs[referrals[msg.sender]]=SafeMath.add(userReferralEggs[referrals[msg.sender]],SafeMath.div(eggsConsumed,10));\r\n        \r\n        //boost market to nerf Dragon hoarding\r\n        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsProduced,10));\r\n    }\r\n    \r\n    function sellEggs() public {\r\n        require(initialized);\r\n        uint256 hasEggs = getMyEggs();\r\n        uint256 eggValue = calculateEggSell(hasEggs);\r\n        uint256 fee = calculatePercentage(eggValue, 2);\r\n        userReferralEggs[msg.sender] = 0;\r\n        lastHatch[msg.sender]=now;\r\n        marketEggs=SafeMath.add(marketEggs,hasEggs);\r\n        ceoEtherBalance += fee;\r\n        msg.sender.transfer(SafeMath.sub(eggValue,fee));\r\n    }\r\n    \r\n    function getDragonPrice(uint eggs, uint256 eth) internal view returns (uint) {\r\n        uint dragonPrice = calculateEggSell(eggs, eth);\r\n        return calculatePercentage(dragonPrice, 140);\r\n    }\r\n    \r\n    function getDragonPriceNo(uint eth) public view returns (uint) {\r\n        uint256 d = userHatchRate[msg.sender];\r\n        if (d == 0) \r\n            d = SafeMath.add(EGGS_TO_HATCH_1Dragon, getEggsToHatchDragon());\r\n        return getDragonPrice(d, eth);\r\n    }\r\n    \r\n    //magic trade balancing algorithm\r\n    function calculateTrade(uint256 rt,uint256 rs, uint256 bs) public view returns(uint256){\r\n        //(PSN*bs)/(PSNH+((PSN*rs+PSNH*rt)/rt));\r\n        return SafeMath.div(SafeMath.mul(PSN,bs),SafeMath.add(PSNH,SafeMath.div(SafeMath.add(SafeMath.mul(PSN,rs),SafeMath.mul(PSNH,rt)),rt)));\r\n    }\r\n    \r\n    function calculateEggSell(uint256 eggs) public view returns(uint256){\r\n        return calculateTrade(eggs,marketEggs,address(this).balance);\r\n    }\r\n    \r\n    function calculateEggSell(uint256 eggs, uint256 eth) public view returns(uint256){\r\n        return calculateTrade(eggs,marketEggs,eth);\r\n    }\r\n    \r\n    \r\n    function calculateEggBuy(uint256 eth, uint256 contractBalance) public view returns(uint256){\r\n        return calculateTrade(eth,contractBalance,marketEggs);\r\n    }\r\n    \r\n    function calculateEggBuySimple(uint256 eth) public view returns(uint256) {\r\n        return calculateEggBuy(eth, address(this).balance);\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"lastPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"enableSuperDragon\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyDrangon\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"calculatePercentage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"getDragonPriceNo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hatchingSpeed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"rt\",\"type\":\"uint256\"},{\"name\":\"rs\",\"type\":\"uint256\"},{\"name\":\"bs\",\"type\":\"uint256\"}],\"name\":\"calculateTrade\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userReferralEggs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"eth\",\"type\":\"uint256\"},{\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"calculateEggBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"iceDragons\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketEggs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractStarted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"normalDragon\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sellEggs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"eggs\",\"type\":\"uint256\"}],\"name\":\"seedMarket\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ref\",\"type\":\"address\"}],\"name\":\"hatchEggs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ceoEtherBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyEggs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastHatch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPremiumDragonsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"STARTING_Dragon\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEggsToHatchDragon\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"calculateEggBuySimple\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"withDrawMoney\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyIceDrangon\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"eggs\",\"type\":\"uint256\"}],\"name\":\"calculateEggSell\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getFreeDragon\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxIceDragonsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"snatchedOn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"superPowerFulDragonOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"premiumDragons\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrals\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userHatchRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"eggs\",\"type\":\"uint256\"},{\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"calculateEggSell\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyIceDragon\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimSuperDragonEggs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EGGS_TO_HATCH_1Dragon\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getEggsSinceLastHatch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buySuperDragon\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyNormalDragons\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"DragonFarmer","CompilerVersion":"v0.4.25-nightly.2018.5.21+commit.e97f9b6b","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cee934f125751a1ec846131bf0f5128a1c79c75253c5a7e6b4fab718b93bf959"}]}