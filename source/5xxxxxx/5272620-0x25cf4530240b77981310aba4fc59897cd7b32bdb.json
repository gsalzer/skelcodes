{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract WorldBetToken {\r\n    /* Token name */\r\n    string public name = \"World Bet Lottery Tickets\";\r\n\r\n    /* Token Symbol */\r\n    string public symbol = \"WBT\";\r\n\r\n    /* Token digit*/\r\n    uint public decimals = 0;\r\n\r\n    mapping(uint => uint) private userBalanceOf;                // user total amount of tickets\r\n    bool public stopped = false;\r\n\r\n    /* User*/\r\n    struct Country {\r\n        uint user; // country sequence id\r\n        uint balance; // total amount of bought tickets for this country\r\n    }\r\n\r\n    // installed when one country has won\r\n    uint public WINNER_COUNTRY_CODE = 0;\r\n\r\n    mapping(uint => bool) private countryIsPlaying;\r\n\r\n    /* Countries->Users*/\r\n    mapping(uint => Country[]) public users;       // countries\r\n\r\n\r\n    /* Countries->Users*/\r\n    mapping(uint => uint[]) public countries;       // countries\r\n\r\n    /* Jackpot Users*/\r\n    uint[] public jackpotUsers;\r\n\r\n    /* Jackpot Users*/\r\n    uint[] activeCountries;\r\n\r\n    /* Jackpot Eligibility*/\r\n    mapping(uint => bool) isJackpotEligible;\r\n\r\n    /* Jackpot Location*/\r\n    mapping(uint => uint) jackpotLocation;\r\n\r\n    // JACKPOT WINNER\r\n    uint public JACKPOT_WINNER = 0;\r\n\r\n    uint jackpotMaxCap = 100;\r\n\r\n    uint public totalSupply = 0;\r\n\r\n    address owner = 0x0;\r\n\r\n    modifier isOwner {\r\n        assert(owner == msg.sender);\r\n        _;\r\n    }\r\n\r\n    modifier isRunning {\r\n        assert(!stopped);\r\n        _;\r\n    }\r\n\r\n    modifier valAddress {\r\n        assert(0x0 != msg.sender);\r\n        _;\r\n    }\r\n\r\n    function WorldBetToken() public {\r\n        owner = msg.sender;\r\n        countryIsPlaying[1] = true;\r\n        // Argentina\r\n        countryIsPlaying[2] = true;\r\n        // Australia\r\n        countryIsPlaying[3] = true;\r\n        // Belgium\r\n        countryIsPlaying[4] = true;\r\n        // Brazil\r\n        countryIsPlaying[5] = true;\r\n        // Colombia\r\n        countryIsPlaying[6] = true;\r\n        // Costa Rica\r\n        countryIsPlaying[7] = true;\r\n        // Croatia\r\n        countryIsPlaying[8] = true;\r\n        // Denmark\r\n        countryIsPlaying[9] = true;\r\n        // Egypt\r\n        countryIsPlaying[10] = true;\r\n        // England\r\n        countryIsPlaying[11] = true;\r\n        // France\r\n        countryIsPlaying[12] = true;\r\n        // Germany\r\n        countryIsPlaying[13] = true;\r\n        // Iceland\r\n        countryIsPlaying[14] = true;\r\n        // Iran\r\n        countryIsPlaying[15] = true;\r\n        // Japan\r\n        countryIsPlaying[16] = true;\r\n        // Mexico\r\n        countryIsPlaying[17] = true;\r\n        // Morocco\r\n        countryIsPlaying[18] = true;\r\n        // Nigeria\r\n        countryIsPlaying[19] = true;\r\n        // Panama\r\n        countryIsPlaying[20] = true;\r\n        // Peru\r\n        countryIsPlaying[21] = true;\r\n        // Poland\r\n        countryIsPlaying[22] = true;\r\n        // Portugal\r\n        countryIsPlaying[23] = true;\r\n        // Russia\r\n        countryIsPlaying[24] = true;\r\n        // Saudi Arabia\r\n        countryIsPlaying[25] = true;\r\n        // Senegal\r\n        countryIsPlaying[26] = true;\r\n        // Serbia\r\n        countryIsPlaying[27] = true;\r\n        // South Korea\r\n        countryIsPlaying[28] = true;\r\n        // Spain\r\n        countryIsPlaying[29] = true;\r\n        // Sweden\r\n        countryIsPlaying[30] = true;\r\n        // Switzerland\r\n        countryIsPlaying[31] = true;\r\n        // Tunisia\r\n        countryIsPlaying[32] = true;\r\n        // Uruguay\r\n    }\r\n\r\n    function giveBalance(uint country, uint user, uint value) public isRunning returns (bool success) {\r\n        require(countryIsPlaying[country]);\r\n        require(WINNER_COUNTRY_CODE == 0);\r\n\r\n\r\n        // add user total amount of tickets\r\n        userBalanceOf[user] += value;\r\n\r\n\r\n        countries[country].push(user);\r\n\r\n        users[user].push(Country(user, value));\r\n\r\n        if (userBalanceOf[user] >= jackpotMaxCap && !isJackpotEligible[user]) {\r\n            jackpotUsers.push(user);\r\n            jackpotLocation[user] = jackpotUsers.length - 1;\r\n        }\r\n\r\n        // increase totalSupply\r\n        totalSupply += value;\r\n\r\n        // fire transfer event\r\n        Transfer(0x0, user, value);\r\n        return true;\r\n    }\r\n\r\n    function installWinner(uint country) public {\r\n        require(WINNER_COUNTRY_CODE == 0);\r\n        require(countryIsPlaying[country]);\r\n        WINNER_COUNTRY_CODE = country;\r\n        WinnerInstalled(WINNER_COUNTRY_CODE);\r\n    }\r\n\r\n    function removeCountry(uint country) public {\r\n        countryIsPlaying[country] = false;\r\n        CountryRemoved(country);\r\n    }\r\n\r\n    function playJackpot() public {\r\n        require(JACKPOT_WINNER == 0);\r\n        if (jackpotUsers.length >= 2) {\r\n            uint nonce = jackpotUsers.length;\r\n            uint max = jackpotUsers.length - 1;\r\n            uint randomNumber = uint(keccak256(nonce)) % max;\r\n            JACKPOT_WINNER = jackpotUsers[randomNumber];\r\n        } else {\r\n            JACKPOT_WINNER = jackpotUsers[0];\r\n        }\r\n    }\r\n\r\n    function winnerList() view public returns (uint[]){\r\n        return countries[WINNER_COUNTRY_CODE];\r\n    }\r\n\r\n    event Transfer(address indexed _from, uint indexed _to, uint _value);\r\n    event CountryRemoved(uint indexed country);\r\n    event WinnerInstalled(uint indexed country);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"country\",\"type\":\"uint256\"}],\"name\":\"installWinner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"country\",\"type\":\"uint256\"},{\"name\":\"user\",\"type\":\"uint256\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"giveBalance\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WINNER_COUNTRY_CODE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"jackpotUsers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JACKPOT_WINNER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"playJackpot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"country\",\"type\":\"uint256\"}],\"name\":\"removeCountry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"user\",\"type\":\"uint256\"},{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"countries\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"country\",\"type\":\"uint256\"}],\"name\":\"CountryRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"country\",\"type\":\"uint256\"}],\"name\":\"WinnerInstalled\",\"type\":\"event\"}]","ContractName":"WorldBetToken","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0efa463d6fce2e0fe914deb7b5e63987f389e04f8bebb2192f5e85b035f1db3d"}]}