{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\n// Interface for contracts with buying functionality, for example, crowdsales.\r\ncontract Buyable {\r\n  function buy (address receiver) public payable;\r\n}\r\n\r\n /// @title Ownable contract - base contract with an owner\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n}\r\n\r\ncontract TokenAdrTokenSaleProxy is Ownable {\r\n\r\n  /// Target contract\r\n  Buyable public targetContract;\r\n\r\n  /// Gas limit for buy transaction\r\n  uint public buyGasLimit = 200000;\r\n\r\n  /// Is sale stopped or not\r\n  bool public stopped = false;\r\n\r\n  /// Total volume of weis passed through this proxy\r\n  uint public totalWeiVolume = 0;\r\n\r\n  /// @dev Constructor\r\n  /// @param _targetAddress Address of the target Buyable contract\r\n  function TokenAdrTokenSaleProxy(address _targetAddress) public {\r\n    require(_targetAddress > 0);\r\n    targetContract = Buyable(_targetAddress);\r\n  }\r\n\r\n  /// @dev Fallback function - forward investment request to the target contract\r\n  function() public payable {\r\n    require(msg.value > 0);\r\n    require(!stopped);\r\n    totalWeiVolume += msg.value;\r\n    targetContract.buy.value(msg.value).gas(buyGasLimit)(msg.sender);\r\n  }\r\n\r\n  /// @dev Change target address where investment requests are forwarded\r\n  /// @param newTargetAddress New target address to forward investments\r\n  function changeTargetAddress(address newTargetAddress) public onlyOwner {\r\n    require(newTargetAddress > 0);\r\n    targetContract = Buyable(newTargetAddress);\r\n  }\r\n\r\n  /// @dev Change gas limit for buy() method call\r\n  /// @param newGasLimit New gas limit\r\n  function changeGasLimit(uint newGasLimit) public onlyOwner {\r\n    require(newGasLimit > 0);\r\n    buyGasLimit = newGasLimit;\r\n  }\r\n\r\n  /// @dev Stop the sale\r\n  function stop() public onlyOwner {\r\n    require(!stopped);\r\n    stopped = true;\r\n  }\r\n\r\n  /// @dev Resume the sale\r\n  function resume() public onlyOwner {\r\n    require(stopped);\r\n    stopped = false;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"resume\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWeiVolume\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyGasLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTargetAddress\",\"type\":\"address\"}],\"name\":\"changeTargetAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newGasLimit\",\"type\":\"uint256\"}],\"name\":\"changeGasLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"targetContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_targetAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"TokenAdrTokenSaleProxy","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000041b54744d077a60104a9f3dfdd681ad2694eb5e4","Library":"","SwarmSource":"bzzr://76e0dd604fb164c5ae044496f1e2417128d7ca70dc84c94b31d0064e46df033e"}]}