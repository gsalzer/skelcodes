{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract ERC20Basic {\r\n  // events\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  // public functions\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address addr) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract Ownable {\r\n\r\n  // public variables\r\n  address public owner;\r\n\r\n  // internal variables\r\n\r\n  // events\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  // public functions\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n  // internal functions\r\n}\r\n\r\n/**\r\n * @title TokenTimelock\r\n * @dev TokenTimelock is a token holder contract that will allow a\r\n * beneficiary to extract the tokens after a given release time\r\n */\r\ncontract TokenTimelock is Ownable {\r\n  // ERC20 basic token contract being held\r\n  ERC20Basic public token;\r\n\r\n  uint8 public decimals = 8;\r\n\r\n  address public beneficiary;\r\n  \r\n  uint256 public releaseTime1 = 1543593600; // 2018.12.1\r\n  uint256 public releaseTime2 = 1559318400; // 2019.6.1\r\n  uint256 public releaseTime3 = 1575129600; // 2019.12.1\r\n  uint256 public releaseTime4 = 1590940800; // 2020.6.1\r\n  \r\n  uint256 public releaseValue1 = 1500000000 * (10 ** uint256(decimals)); \r\n  uint256 public releaseValue2 = 1500000000 * (10 ** uint256(decimals)); \r\n  uint256 public releaseValue3 = 1500000000 * (10 ** uint256(decimals)); \r\n  uint256 public releaseValue4 = 1500000000 * (10 ** uint256(decimals)); \r\n\r\n  bool public releaseState1 = false;\r\n  bool public releaseState2 = false;\r\n  bool public releaseState3 = false;\r\n  bool public releaseState4 = false;\r\n\r\n  constructor(\r\n    ERC20Basic _token,\r\n    address _beneficiary\r\n\r\n  )\r\n    public\r\n  {\r\n    require(block.timestamp < releaseTime1);\r\n    require(block.timestamp < releaseTime2);\r\n    require(block.timestamp < releaseTime3);\r\n    require(block.timestamp < releaseTime4);\r\n    \r\n    require(_beneficiary != address(0));\r\n    require(_token != address(0));\r\n\r\n    token = _token;\r\n    beneficiary = _beneficiary;\r\n\r\n\r\n  }\r\n    // fallback function\r\n    function() public payable {\r\n        revert();\r\n    }\r\n  function checkCanRelease(bool rState, uint256 rTime, uint256 rAmount) private \r\n  {\r\n    require(block.timestamp >= rTime);\r\n    require(false == rState);\r\n    uint256 amount = token.balanceOf(this);\r\n    require(amount > 0);\r\n    require(amount >= rAmount);\r\n  }\r\n  function releaseImpl(uint256 rAmount) private \r\n  {\r\n    require( token.transfer(beneficiary, rAmount) );\r\n  }\r\n\r\n  function release_1() onlyOwner public \r\n  {\r\n    checkCanRelease(releaseState1, releaseTime1, releaseValue1);\r\n    \r\n    releaseState1 = true;\r\n    releaseImpl(releaseValue1);\r\n  }\r\n\r\n  function release_2() onlyOwner public \r\n  {\r\n    checkCanRelease(releaseState2, releaseTime2, releaseValue2);\r\n\r\n    releaseState2 = true;\r\n    releaseImpl(releaseValue2);\r\n  }\r\n\r\n  function release_3() onlyOwner public \r\n  {\r\n    checkCanRelease(releaseState3, releaseTime3, releaseValue3);\r\n    releaseState3 = true;\r\n    releaseImpl(releaseValue3);   \r\n  }\r\n\r\n  function release_4() onlyOwner public \r\n  {\r\n    checkCanRelease(releaseState4, releaseTime4, releaseValue4);\r\n    releaseState4 = true;\r\n    releaseImpl(releaseValue4);\r\n  }\r\n  \r\n  function release_remain() onlyOwner public \r\n  {\r\n    require(true == releaseState1);\r\n    require(true == releaseState2);\r\n    require(true == releaseState3);\r\n    require(true == releaseState4);\r\n\r\n    uint256 amount = token.balanceOf(this);\r\n    require(amount > 0);\r\n\r\n    releaseImpl(amount);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"releaseValue4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseState1\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseState2\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseValue3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseTime1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseTime4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release_remain\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release_1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release_2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseState3\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseTime3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseTime2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release_4\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseState4\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release_3\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseValue1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseValue2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"TokenTimelock","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000f8c45b896784a1e408526b9300519ef8660209c00000000000000000000000092c07fe460cb44e54cfe00d07e45545dead88cdd","Library":"","SwarmSource":"bzzr://6bdf280d2905fb1897b64ee3cae55a82393fc99ec904027bc1b90097f61d36a5"}]}