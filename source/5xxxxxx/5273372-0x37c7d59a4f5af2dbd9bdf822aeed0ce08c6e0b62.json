{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\ncontract FishbankBoosters is Ownable {\r\n\r\n    struct Booster {\r\n        address owner;\r\n        uint32 duration;\r\n        uint8 boosterType;\r\n        uint24 raiseValue;\r\n        uint8 strength;\r\n        uint32 amount;\r\n    }\r\n\r\n    Booster[] public boosters;\r\n    bool public implementsERC721 = true;\r\n    string public name = \"Fishbank Boosters\";\r\n    string public symbol = \"FISHB\";\r\n    mapping(uint256 => address) public approved;\r\n    mapping(address => uint256) public balances;\r\n    address public fishbank;\r\n    address public chests;\r\n    address public auction;\r\n\r\n    modifier onlyBoosterOwner(uint256 _tokenId) {\r\n        require(boosters[_tokenId].owner == msg.sender);\r\n        _;\r\n    }\r\n\r\n    modifier onlyChest() {\r\n        require(chests == msg.sender);\r\n        _;\r\n    }\r\n\r\n    function FishbankBoosters() public {\r\n        //nothing yet\r\n    }\r\n\r\n    //mints the boosters can only be called by owner. could be a smart contract\r\n    function mintBooster(address _owner, uint32 _duration, uint8 _type, uint8 _strength, uint32 _amount, uint24 _raiseValue) onlyChest public {\r\n        boosters.length ++;\r\n\r\n        Booster storage tempBooster = boosters[boosters.length - 1];\r\n\r\n        tempBooster.owner = _owner;\r\n        tempBooster.duration = _duration;\r\n        tempBooster.boosterType = _type;\r\n        tempBooster.strength = _strength;\r\n        tempBooster.amount = _amount;\r\n        tempBooster.raiseValue = _raiseValue;\r\n\r\n        Transfer(address(0), _owner, boosters.length - 1);\r\n    }\r\n\r\n    function setFishbank(address _fishbank) onlyOwner public {\r\n        fishbank = _fishbank;\r\n    }\r\n\r\n    function setChests(address _chests) onlyOwner public {\r\n        if (chests != address(0)) {\r\n            revert();\r\n        }\r\n        chests = _chests;\r\n    }\r\n\r\n    function setAuction(address _auction) onlyOwner public {\r\n        auction = _auction;\r\n    }\r\n\r\n    function getBoosterType(uint256 _tokenId) view public returns (uint8 boosterType) {\r\n        boosterType = boosters[_tokenId].boosterType;\r\n    }\r\n\r\n    function getBoosterAmount(uint256 _tokenId) view public returns (uint32 boosterAmount) {\r\n        boosterAmount = boosters[_tokenId].amount;\r\n    }\r\n\r\n    function getBoosterDuration(uint256 _tokenId) view public returns (uint32) {\r\n        if (boosters[_tokenId].boosterType == 4 || boosters[_tokenId].boosterType == 2) {\r\n            return boosters[_tokenId].duration + boosters[_tokenId].raiseValue * 60;\r\n        }\r\n        return boosters[_tokenId].duration;\r\n    }\r\n\r\n    function getBoosterStrength(uint256 _tokenId) view public returns (uint8 strength) {\r\n        strength = boosters[_tokenId].strength;\r\n    }\r\n\r\n    function getBoosterRaiseValue(uint256 _tokenId) view public returns (uint24 raiseValue) {\r\n        raiseValue = boosters[_tokenId].raiseValue;\r\n    }\r\n\r\n    //ERC721 functionality\r\n    //could split this to a different contract but doesn't make it easier to read\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    function totalSupply() public view returns (uint256 total) {\r\n        total = boosters.length;\r\n    }\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance){\r\n        balance = balances[_owner];\r\n    }\r\n\r\n    function ownerOf(uint256 _tokenId) public view returns (address owner){\r\n        owner = boosters[_tokenId].owner;\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint256 _tokenId) internal {\r\n        require(boosters[_tokenId].owner == _from);\r\n        //can only transfer if previous owner equals from\r\n        boosters[_tokenId].owner = _to;\r\n        approved[_tokenId] = address(0);\r\n        //reset approved of fish on every transfer\r\n        balances[_from] -= 1;\r\n        //underflow can only happen on 0x\r\n        balances[_to] += 1;\r\n        //overflows only with very very large amounts of fish\r\n        Transfer(_from, _to, _tokenId);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _tokenId) public\r\n    onlyBoosterOwner(_tokenId) //check if msg.sender is the owner of this fish\r\n    returns (bool)\r\n    {\r\n        _transfer(msg.sender, _to, _tokenId);\r\n        //after master modifier invoke internal transfer\r\n        return true;\r\n    }\r\n\r\n    function approve(address _to, uint256 _tokenId) public\r\n    onlyBoosterOwner(_tokenId)\r\n    {\r\n        approved[_tokenId] = _to;\r\n        Approval(msg.sender, _to, _tokenId);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) public returns (bool) {\r\n        require(approved[_tokenId] == msg.sender || msg.sender == fishbank || msg.sender == auction);\r\n        //require msg.sender to be approved for this token or to be the fishbank contract\r\n        _transfer(_from, _to, _tokenId);\r\n        //handles event, balances and approval reset\r\n        return true;\r\n    }\r\n\r\n\r\n    function takeOwnership(uint256 _tokenId) public {\r\n        require(approved[_tokenId] == msg.sender);\r\n        _transfer(ownerOf(_tokenId), msg.sender, _tokenId);\r\n    }\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getBoosterRaiseValue\",\"outputs\":[{\"name\":\"raiseValue\",\"type\":\"uint24\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getBoosterAmount\",\"outputs\":[{\"name\":\"boosterAmount\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getBoosterStrength\",\"outputs\":[{\"name\":\"strength\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementsERC721\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"total\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_duration\",\"type\":\"uint32\"},{\"name\":\"_type\",\"type\":\"uint8\"},{\"name\":\"_strength\",\"type\":\"uint8\"},{\"name\":\"_amount\",\"type\":\"uint32\"},{\"name\":\"_raiseValue\",\"type\":\"uint24\"}],\"name\":\"mintBooster\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getBoosterType\",\"outputs\":[{\"name\":\"boosterType\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"boosters\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"duration\",\"type\":\"uint32\"},{\"name\":\"boosterType\",\"type\":\"uint8\"},{\"name\":\"raiseValue\",\"type\":\"uint24\"},{\"name\":\"strength\",\"type\":\"uint8\"},{\"name\":\"amount\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"chests\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auction\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"takeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_auction\",\"type\":\"address\"}],\"name\":\"setAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getBoosterDuration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_chests\",\"type\":\"address\"}],\"name\":\"setChests\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fishbank\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fishbank\",\"type\":\"address\"}],\"name\":\"setFishbank\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"FishbankBoosters","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://861e739d547b5208a9680230604f0ef7d2c6abe2e4cd0163659453158511e646"}]}