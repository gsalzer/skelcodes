{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\nlibrary SafeMath {\r\n    \r\n    function mul(uint256 a, uint256 b) internal pure  returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure  returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\ncontract TokenInterface {\r\n    function transfer(address _to, uint256 _value) public;\r\n    function balanceOf(address _addr) public constant returns(uint256);\r\n}\r\n\r\n\r\n\r\n\r\n\r\ncontract Ownable {\r\n    \r\n    event OwnershipTransferred(address indexed from, address indexed to);\r\n    \r\n    address public owner;\r\n    \r\n    function Ownable() public {\r\n        owner = 0x95e90D5B37aEFf9A1f38F791125777cf0aB4350e;\r\n    }\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(_newOwner != address(0) && _newOwner != owner);\r\n        OwnershipTransferred(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\ncontract CustomContract is Ownable {\r\n    \r\n    using SafeMath for uint256;\r\n    \r\n    mapping (address => bool) public addrHasInvested;\r\n    \r\n    TokenInterface public constant token = TokenInterface(0x0008b0650EB2faf50cf680c07D32e84bE1c0F07E);\r\n    \r\n    \r\n    modifier legalAirdrop(address[] _addrs, uint256 _value) {\r\n        require(token.balanceOf(address(this)) >= _addrs.length.mul(_value));\r\n        require(_addrs.length <= 100);\r\n        require(_value > 0);\r\n        _;\r\n    }\r\n\r\n    function airDropTokens(address[] _addrs, uint256 _value) public onlyOwner legalAirdrop(_addrs, _value){\r\n        for(uint i = 0; i < _addrs.length; i++) {\r\n            if(_addrs[i] != address(0)) {\r\n                token.transfer(_addrs[i], _value * (10 ** 18));\r\n            }\r\n        }\r\n    }\r\n    \r\n    modifier legalBatchPayment(address[] _addrs, uint256[] _values) {\r\n        require(_addrs.length == _values.length);\r\n        require(_addrs.length <= 100);\r\n        uint256 sum = 0;\r\n        for(uint i = 0; i < _values.length; i++) {\r\n            if(_values[i] == 0 || _addrs[i] == address(0)) {\r\n                revert();\r\n            }\r\n            sum = sum.add(_values[i]);\r\n        }\r\n        require(address(this).balance >= sum);\r\n        _;\r\n    }\r\n    \r\n    function makeBatchPayment(address[] _addrs, uint256[] _values) public onlyOwner legalBatchPayment(_addrs, _values) {\r\n        for(uint256 i = 0; i < _addrs.length; i++) {\r\n            _addrs[i].transfer(_values[i]);\r\n        }\r\n    }\r\n    \r\n    function() public payable {\r\n        require(msg.value == 1e15);\r\n        buyTokens(msg.sender);\r\n    }\r\n    \r\n    function buyTokens(address _addr) internal {\r\n        require(!addrHasInvested[_addr]);\r\n        addrHasInvested[_addr] = true;\r\n        token.transfer(_addr, 5000e18);\r\n    }\r\n    \r\n    function withdrawEth(address _to, uint256 _value) public onlyOwner {\r\n        require(_to != address(0));\r\n        require(_value > 0);\r\n        _to.transfer(_value);\r\n    }\r\n    \r\n    function withdrawTokens(address _to, uint256 _value) public onlyOwner {\r\n        require(_to != address(0));\r\n        require(_value > 0);\r\n        token.transfer(_to, _value * (10 ** 18));\r\n    }\r\n    \r\n    function depositEth() public payable {\r\n        \r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"addrHasInvested\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositEth\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrs\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"airDropTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrs\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"makeBatchPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"CustomContract","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ddce31c73fca59c7c020ac30b5a94bbb26475cca6cc8763019d62982b4965b41"}]}