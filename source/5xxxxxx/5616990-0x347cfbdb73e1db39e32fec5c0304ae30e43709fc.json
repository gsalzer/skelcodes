{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity  ^0.4.21;\r\n\r\n\r\ncontract DSMath {\r\n    uint constant DENOMINATOR = 10000;\r\n    uint constant DECIMALS = 18;\r\n    uint constant WAD = 10**DECIMALS;\r\n\r\n    modifier condition(bool _condition) {\r\n        require(_condition);\r\n        _;\r\n    }\r\n\r\n    function add(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x + y) >= x);\r\n    }\r\n\t\r\n    function sub(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x - y) <= x);\r\n    }\r\n\t\r\n    function mul(uint x, uint y) internal pure returns (uint z) {\r\n        require(y == 0 || (z = x * y) / y == x);\r\n    }\r\n}\r\n\r\n\r\ncontract Token is DSMath {\r\n    string  public symbol;\r\n    uint256 public decimals;\r\n    string  public name;\r\n    address public owner;\r\n\r\n    uint256 internal _supply;\r\n    mapping (address => uint256) internal _balances;\r\n    mapping (address => mapping (address => uint256)) private _approvals;\r\n\r\n    event LogSetOwner(address indexed owner_);\r\n    event Transfer( address indexed from, address indexed to, uint value);\r\n    event Approval( address indexed owner_, address indexed spender, uint value);\r\n\r\n    modifier auth {\r\n        require(isAuthorized(msg.sender));\r\n        _;\r\n    }\r\n\r\n    function Token() internal {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function totalSupply() public constant returns (uint256) {\r\n        return _supply;\r\n    }\r\n\r\n    function balanceOf(address src) public constant returns (uint256) {\r\n        return _balances[src];\r\n    }\r\n\r\n    function allowance(address src, address guy) public constant returns (uint256) {\r\n        return _approvals[src][guy];\r\n    }\r\n\r\n    function transfer(address dst, uint wad) public returns (bool) {\r\n        require(_balances[msg.sender] >= wad);\r\n\r\n        _balances[msg.sender] = sub(_balances[msg.sender], wad);\r\n        _balances[dst] = add(_balances[dst], wad);\r\n\r\n        emit Transfer(msg.sender, dst, wad);\r\n\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address src, address dst, uint wad) public returns (bool) {\r\n        require(_balances[src] >= wad);\r\n        require(_approvals[src][msg.sender] >= wad);\r\n\r\n        _approvals[src][msg.sender] = sub(_approvals[src][msg.sender], wad);\r\n        _balances[src] = sub(_balances[src], wad);\r\n        _balances[dst] = add(_balances[dst], wad);\r\n\r\n        emit Transfer(src, dst, wad);\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve(address guy, uint256 wad) public returns (bool) {\r\n        _approvals[msg.sender][guy] = wad;\r\n        emit Approval(msg.sender, guy, wad);\r\n        return true;\r\n    }\r\n\r\n    function mint(uint wad)\r\n    public\r\n    auth\r\n    {\r\n        _balances[msg.sender] = add(_balances[msg.sender], wad);\r\n        _supply = add(_supply, wad);\r\n    }\r\n\r\n    function setOwner(address owner_)\r\n        public\r\n        auth\r\n    {\r\n        owner = owner_;\r\n        emit LogSetOwner(owner);\r\n    }\r\n\r\n    function isAuthorized(address src) internal constant returns (bool) {\r\n        if (src == address(this)) {\r\n            return true;\r\n        } else if (src == owner) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Universal Token\r\ncontract UniversalToken is Token {\r\n    uint public xactionFeeNumerator;\r\n    uint public xactionFeeShare;\r\n\r\n    function UniversalToken( \r\n        uint initialSupply,\r\n        uint feeMult,\r\n        uint feeShare ) public\r\n        condition(initialSupply > 1000)\r\n        condition(feeMult > 0)\r\n    {\r\n        symbol = \"PMT\";\r\n        name = \"Universal Evangelist Token - by Pure Money Tech\";\r\n        decimals = DECIMALS;\r\n\t\t_supply = mul(initialSupply, WAD);\r\n\t\towner = msg.sender;\r\n        xactionFeeNumerator = feeMult;\r\n        xactionFeeShare = feeShare;\r\n\t\t_balances[owner] = _supply;\r\n    }\r\n\r\n    function modifyTransFee(uint _xactionFeeMult) public\r\n        auth\r\n        condition(_xactionFeeMult >= 0)\r\n        condition(DENOMINATOR > 4 * _xactionFeeMult)\r\n    {\r\n        xactionFeeNumerator = _xactionFeeMult;\r\n    }\r\n\r\n    function modifyFeeShare(uint _share) public\r\n        auth\r\n        condition(_share >= 0)\r\n        condition(DENOMINATOR > 3 * _share)\r\n    {\r\n        xactionFeeShare = _share;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_xactionFeeMult\",\"type\":\"uint256\"}],\"name\":\"modifyTransFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_share\",\"type\":\"uint256\"}],\"name\":\"modifyFeeShare\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xactionFeeNumerator\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xactionFeeShare\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"feeMult\",\"type\":\"uint256\"},{\"name\":\"feeShare\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner_\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"UniversalToken","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000003b9aca00000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000c8","Library":"","SwarmSource":"bzzr://18666960d16a29422995b64ab3eaa584d9e9d18b40a206a5e6ba9d9cfbbe4099"}]}