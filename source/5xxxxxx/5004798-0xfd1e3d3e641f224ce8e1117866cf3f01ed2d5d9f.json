{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract JackPot {\r\n    address public owner = msg.sender;\r\n    bytes32 secretNumberHash = 0xee2a4bc7db81da2b7164e56b3649b1e2a09c58c455b15dabddd9146c7582cebc;\r\n\r\n    function withdraw() public {\r\n        require(msg.sender == owner);\r\n        owner.transfer(this.balance);\r\n    }\r\n\r\n    function guess(uint8 number) public payable {\r\n        // each next attempt should be more expensive than previous ones\r\n        if (hashNumber(number) == secretNumberHash && msg.value > this.balance) {\r\n            // send the jack pot\r\n            msg.sender.transfer(this.balance + msg.value);\r\n        }\r\n    }\r\n    \r\n    function hashNumber(uint8 number) public pure returns (bytes32) {\r\n        return keccak256(number);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"number\",\"type\":\"uint8\"}],\"name\":\"guess\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"number\",\"type\":\"uint8\"}],\"name\":\"hashNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"JackPot","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://99dce689abed5ccaf909e02fd151d6ff1b8e759c8d6f73f9305e68a6ff541641"}]}