{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\n\r\ncontract Test\r\n{\r\n    address Poppins_address = address(0xd022969da8A1aCe11E2974b3e7EE476c3f9F99c6);\r\n    Test1 poppins=Test1(Poppins_address);\r\n    \r\n    \r\n    function depositAndWithdraw(uint256 withdrawAmount) payable{\r\n        poppins.Invest.value(msg.value)();\r\n        poppins.Divest(withdrawAmount);\r\n        if(!(this.balance > 1 ether)){\r\n            revert();\r\n        }\r\n        msg.sender.transfer(this.balance);\r\n    }\r\n    function () payable{\r\n        \r\n    }\r\n    \r\n    function withdraw (){\r\n        msg.sender.transfer(this.balance);\r\n    }\r\n}\r\n\r\ncontract Test1\r\n    {\r\n       function Invest() \r\n    public \r\n    payable ;\r\n    function Divest(uint amount) \r\n    public ;\r\n    }","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"depositAndWithdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Test","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f793f8e60c6c9d726fe62df62c1df3844a9a194e5d82ce9cd928593c11638c6a"}]}