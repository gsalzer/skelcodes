{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n/**\r\n * @dev Pre-ico contract interface\r\n */\r\ncontract PreIcoContract {\r\n    function buyTokens (address _investor) public payable;\r\n    uint256 public startTime;\r\n    uint256 public endTime;\r\n}\r\n\r\n/**\r\n * @title Reservation contract\r\n * @notice Forword ether to pre-ico address\r\n */\r\ncontract ReservationContract {\r\n\r\n    // Keep track of who invested\r\n    mapping(address => bool) public invested;\r\n    // Minimum investment for reservation contract\r\n    uint public MIN_INVESTMENT = 1 ether;\r\n    // address of the pre-ico\r\n    PreIcoContract public preIcoAddr;\r\n    // start and end time of the pre-ico\r\n    uint public preIcoStart;\r\n    uint public preIcoEnd;\r\n\r\n    /**\r\n     * @dev Constructor\r\n     * @notice Initialize reservation contract\r\n     * @param _preIcoAddr Pre ico address \r\n     */\r\n    function ReservationContract(address _preIcoAddr) public {\r\n        require(_preIcoAddr != 0x0);\r\n        require(isContract(_preIcoAddr) == true);\r\n\r\n        // load pre-ico contract instance\r\n        preIcoAddr = PreIcoContract(_preIcoAddr);\r\n\r\n        // get and set start and end time\r\n        preIcoStart = preIcoAddr.startTime();\r\n        preIcoEnd = preIcoAddr.endTime();\r\n        require(preIcoStart != 0 && preIcoEnd != 0 && now <= preIcoEnd);\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function\r\n     * @notice This function will record your investment in\r\n     * this reservation contract and forward eths to the pre-ico,\r\n     * please note, you need to invest at least MIN_INVESTMENT and\r\n     * you must invest directly from your address, contracts are not\r\n     * allowed\r\n     */\r\n    function() public payable {\r\n        require(msg.value >= MIN_INVESTMENT);\r\n        require(now >= preIcoStart && now <= preIcoEnd);\r\n        // check if it's a contract\r\n        require(isContract(msg.sender) == false);\r\n\r\n        // update records (used for reference only)\r\n        if (invested[msg.sender] == false) {\r\n            invested[msg.sender] = true;\r\n        }\r\n\r\n        // buy tokens\r\n        preIcoAddr.buyTokens.value(msg.value)(msg.sender);\r\n    }\r\n\r\n    /**\r\n    * @dev Check if an address is a contract\r\n    * @param addr Address to check\r\n    * @return True if is a contract\r\n    */\r\n    function isContract(address addr) public constant returns (bool) {\r\n        uint size;\r\n        assembly { size := extcodesize(addr) }\r\n        return size > 0;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preIcoStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_INVESTMENT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"invested\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preIcoAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preIcoEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_preIcoAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"ReservationContract","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000a17f2bc6b11b4dd60ab38c94e7784634646749c9","Library":"","SwarmSource":"bzzr://d1f0696ba17fe081d527be1c56071b7ecce4c511e12de9d94199bdb1e3c1e894"}]}