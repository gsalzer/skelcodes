{"status":"1","message":"OK","result":[{"SourceCode":"//\r\n// compiler: solcjs\r\n//  version: 0.4.19+commit.c4cbbb05.Emscripten.clang\r\n//\r\npragma solidity ^0.4.19;\r\n\r\ncontract owned {\r\n  address public owner;\r\n\r\n  function owned() public { owner = msg.sender; }\r\n\r\n  modifier onlyOwner {\r\n    if (msg.sender != owner) { revert(); }\r\n    _;\r\n  }\r\n\r\n  function changeOwner( address newowner ) public onlyOwner {\r\n    owner = newowner;\r\n  }\r\n}\r\n\r\n// see https://www.ethereum.org/token\r\ninterface tokenRecipient {\r\n  function receiveApproval( address from, uint256 value, bytes data ) public;\r\n}\r\n\r\n// ERC223\r\ninterface ContractReceiver {\r\n  function tokenFallback( address from, uint value, bytes data ) public;\r\n}\r\n\r\n// ERC223-compliant token with ERC20 back-compatibility\r\n//\r\n// Implements:\r\n// - https://theethereum.wiki/w/index.php/ERC20_Token_Standard\r\n// - https://www.ethereum.org/token (uncontrolled, non-standard)\r\n// - https://github.com/Dexaran/ERC23-tokens/blob/Recommended/ERC223_Token.sol\r\n\r\ncontract HashBux is owned\r\n{\r\n  string  public name;        // ERC20\r\n  string  public symbol;      // ERC20\r\n  uint8   public decimals;    // ERC20\r\n  uint256 public totalSupply; // ERC20\r\n\r\n  mapping( address => uint256 ) balances_;\r\n  mapping( address => mapping(address => uint256) ) allowances_;\r\n\r\n  // ERC20\r\n  event Approval( address indexed owner,\r\n                  address indexed spender,\r\n                  uint value );\r\n\r\n  // ERC223, ERC20 plus last parameter\r\n  event Transfer( address indexed from,\r\n                  address indexed to,\r\n                  uint256 value,\r\n                  bytes   indexed data );\r\n\r\n  // Ethereum Token\r\n  event Burn( address indexed from, uint256 value );\r\n\r\n  function HashBux() public\r\n  {\r\n    balances_[msg.sender] = uint256(80000000);\r\n    totalSupply = uint256(80000000);\r\n    name = \"HashBux\";\r\n    decimals = uint8(0);\r\n    symbol = \"HASH\";\r\n  }\r\n\r\n  // HashBux-specific\r\n  function mine( uint256 newTokens ) public onlyOwner {\r\n    if (newTokens + totalSupply > 4e9)\r\n      revert();\r\n\r\n    totalSupply += newTokens;\r\n    balances_[owner] += newTokens;\r\n    bytes memory empty;\r\n    Transfer( address(this), owner, newTokens, empty );\r\n  }\r\n\r\n  function() public payable { revert(); } // does not accept money\r\n\r\n  // ERC20\r\n  function balanceOf( address owner ) public constant returns (uint) {\r\n    return balances_[owner];\r\n  }\r\n\r\n  // ERC20\r\n  function approve( address spender, uint256 value ) public\r\n  returns (bool success)\r\n  {\r\n    allowances_[msg.sender][spender] = value;\r\n    Approval( msg.sender, spender, value );\r\n    return true;\r\n  }\r\n \r\n  // ERC20\r\n  function allowance( address owner, address spender ) public constant\r\n  returns (uint256 remaining)\r\n  {\r\n    return allowances_[owner][spender];\r\n  }\r\n\r\n  // ERC20\r\n  function transfer(address to, uint256 value) public\r\n  {\r\n    bytes memory empty; // null\r\n    _transfer( msg.sender, to, value, empty );\r\n  }\r\n\r\n  // ERC20\r\n  function transferFrom( address from, address to, uint256 value ) public\r\n  returns (bool success)\r\n  {\r\n    require( value <= allowances_[from][msg.sender] );\r\n\r\n    allowances_[from][msg.sender] -= value;\r\n    bytes memory empty;\r\n    _transfer( from, to, value, empty );\r\n\r\n    return true;\r\n  }\r\n\r\n  // Ethereum Token\r\n  function approveAndCall( address spender, uint256 value, bytes context )\r\n  public returns (bool success)\r\n  {\r\n    if ( approve(spender, value) )\r\n    {\r\n      tokenRecipient recip = tokenRecipient( spender );\r\n      recip.receiveApproval( msg.sender, value, context );\r\n      return true;\r\n    }\r\n    return false;\r\n  }        \r\n\r\n  // Ethereum Token\r\n  function burn( uint256 value ) public returns (bool success)\r\n  {\r\n    require( balances_[msg.sender] >= value );\r\n    balances_[msg.sender] -= value;\r\n    totalSupply -= value;\r\n\r\n    Burn( msg.sender, value );\r\n    return true;\r\n  }\r\n\r\n  // Ethereum Token\r\n  function burnFrom( address from, uint256 value ) public returns (bool success)\r\n  {\r\n    require( balances_[from] >= value );\r\n    require( value <= allowances_[from][msg.sender] );\r\n\r\n    balances_[from] -= value;\r\n    allowances_[from][msg.sender] -= value;\r\n    totalSupply -= value;\r\n\r\n    Burn( from, value );\r\n    return true;\r\n  }\r\n\r\n  function _transfer( address from,\r\n                      address to,\r\n                      uint value,\r\n                      bytes data ) internal\r\n  {\r\n    require( to != 0x0 );\r\n    require( balances_[from] >= value );\r\n    require( balances_[to] + value > balances_[to] ); // catch overflow\r\n\r\n    balances_[from] -= value;\r\n    balances_[to] += value;\r\n\r\n    Transfer( from, to, value, data );\r\n  }\r\n\r\n  // ERC223 Transfer and invoke specified callback\r\n  function transfer( address to,\r\n                     uint value,\r\n                     bytes data,\r\n                     string custom_fallback ) public returns (bool success)\r\n  {\r\n    _transfer( msg.sender, to, value, data );\r\n\r\n    if ( isContract(to) )\r\n    {\r\n      ContractReceiver rx = ContractReceiver( to );\r\n      require( rx.call.value(0)\r\n               (bytes4(keccak256(custom_fallback)), msg.sender, value, data) );\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  // ERC223 Transfer to a contract or externally-owned account\r\n  function transfer( address to, uint value, bytes data ) public\r\n  returns (bool success)\r\n  {\r\n    if (isContract(to)) {\r\n      return transferToContract( to, value, data );\r\n    }\r\n\r\n    _transfer( msg.sender, to, value, data );\r\n    return true;\r\n  }\r\n\r\n  // ERC223 Transfer to contract and invoke tokenFallback() method\r\n  function transferToContract( address to, uint value, bytes data ) private\r\n  returns (bool success)\r\n  {\r\n    _transfer( msg.sender, to, value, data );\r\n\r\n    ContractReceiver rx = ContractReceiver(to);\r\n    rx.tokenFallback( msg.sender, value, data );\r\n\r\n    return true;\r\n  }\r\n\r\n  // ERC223 fetch contract size (must be nonzero to be a contract)\r\n  function isContract( address _addr ) private constant returns (bool)\r\n  {\r\n    uint length;\r\n    assembly { length := extcodesize(_addr) }\r\n    return (length > 0);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTokens\",\"type\":\"uint256\"}],\"name\":\"mine\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newowner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"custom_fallback\",\"type\":\"string\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"HashBux","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d8fa43e55c824c4032fa9781722db8a30333ffe2ef3d39d014d252c1e5bc4c1d"}]}