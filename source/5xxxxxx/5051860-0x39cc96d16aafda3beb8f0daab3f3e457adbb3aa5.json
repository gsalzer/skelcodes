{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.18;\r\n\r\n// File: zeppelin-solidity/contracts/ownership/Ownable.sol\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n// File: contracts/Restricted.sol\r\n\r\n/** @title Restricted\r\n *  Exposes onlyMonetha modifier\r\n */\r\ncontract Restricted is Ownable {\r\n\r\n    //MonethaAddress set event\r\n    event MonethaAddressSet(\r\n        address _address,\r\n        bool _isMonethaAddress\r\n    );\r\n\r\n    mapping (address => bool) public isMonethaAddress;\r\n\r\n    /**\r\n     *  Restrict methods in such way, that they can be invoked only by monethaAddress account.\r\n     */\r\n    modifier onlyMonetha() {\r\n        require(isMonethaAddress[msg.sender]);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     *  Allows owner to set new monetha address\r\n     */\r\n    function setMonethaAddress(address _address, bool _isMonethaAddress) onlyOwner public {\r\n        isMonethaAddress[_address] = _isMonethaAddress;\r\n\r\n        MonethaAddressSet(_address, _isMonethaAddress);\r\n    }\r\n}\r\n\r\n// File: zeppelin-solidity/contracts/ownership/Contactable.sol\r\n\r\n/**\r\n * @title Contactable token\r\n * @dev Basic version of a contactable contract, allowing the owner to provide a string with their\r\n * contact information.\r\n */\r\ncontract Contactable is Ownable{\r\n\r\n    string public contactInformation;\r\n\r\n    /**\r\n     * @dev Allows the owner to set a string with their contact information.\r\n     * @param info The contact information to attach to the contract.\r\n     */\r\n    function setContactInformation(string info) onlyOwner public {\r\n         contactInformation = info;\r\n     }\r\n}\r\n\r\n// File: contracts/MerchantDealsHistory.sol\r\n\r\n/**\r\n *  @title MerchantDealsHistory\r\n *  Contract stores hash of Deals conditions together with parties reputation for each deal\r\n *  This history enables to see evolution of trust rating for both parties\r\n */\r\ncontract MerchantDealsHistory is Contactable, Restricted {\r\n\r\n    string constant VERSION = \"0.3\";\r\n\r\n    ///  Merchant identifier hash\r\n    bytes32 public merchantIdHash;\r\n    \r\n    //Deal event\r\n    event DealCompleted(\r\n        uint orderId,\r\n        address clientAddress,\r\n        uint32 clientReputation,\r\n        uint32 merchantReputation,\r\n        bool successful,\r\n        uint dealHash\r\n    );\r\n\r\n    //Deal cancellation event\r\n    event DealCancelationReason(\r\n        uint orderId,\r\n        address clientAddress,\r\n        uint32 clientReputation,\r\n        uint32 merchantReputation,\r\n        uint dealHash,\r\n        string cancelReason\r\n    );\r\n\r\n    //Deal refund event\r\n    event DealRefundReason(\r\n        uint orderId,\r\n        address clientAddress,\r\n        uint32 clientReputation,\r\n        uint32 merchantReputation,\r\n        uint dealHash,\r\n        string refundReason\r\n    );\r\n\r\n    /**\r\n     *  @param _merchantId Merchant of the acceptor\r\n     */\r\n    function MerchantDealsHistory(string _merchantId) public {\r\n        require(bytes(_merchantId).length > 0);\r\n        merchantIdHash = keccak256(_merchantId);\r\n    }\r\n\r\n    /**\r\n     *  recordDeal creates an event of completed deal\r\n     *  @param _orderId Identifier of deal's order\r\n     *  @param _clientAddress Address of client's account\r\n     *  @param _clientReputation Updated reputation of the client\r\n     *  @param _merchantReputation Updated reputation of the merchant\r\n     *  @param _isSuccess Identifies whether deal was successful or not\r\n     *  @param _dealHash Hashcode of the deal, describing the order (used for deal verification)\r\n     */\r\n    function recordDeal(\r\n        uint _orderId,\r\n        address _clientAddress,\r\n        uint32 _clientReputation,\r\n        uint32 _merchantReputation,\r\n        bool _isSuccess,\r\n        uint _dealHash)\r\n        external onlyMonetha\r\n    {\r\n        DealCompleted(\r\n            _orderId,\r\n            _clientAddress,\r\n            _clientReputation,\r\n            _merchantReputation,\r\n            _isSuccess,\r\n            _dealHash\r\n        );\r\n    }\r\n\r\n    /**\r\n     *  recordDealCancelReason creates an event of not paid deal that was cancelled \r\n     *  @param _orderId Identifier of deal's order\r\n     *  @param _clientAddress Address of client's account\r\n     *  @param _clientReputation Updated reputation of the client\r\n     *  @param _merchantReputation Updated reputation of the merchant\r\n     *  @param _dealHash Hashcode of the deal, describing the order (used for deal verification)\r\n     *  @param _cancelReason deal cancelation reason (text)\r\n     */\r\n    function recordDealCancelReason(\r\n        uint _orderId,\r\n        address _clientAddress,\r\n        uint32 _clientReputation,\r\n        uint32 _merchantReputation,\r\n        uint _dealHash,\r\n        string _cancelReason)\r\n        external onlyMonetha\r\n    {\r\n        DealCancelationReason(\r\n            _orderId,\r\n            _clientAddress,\r\n            _clientReputation,\r\n            _merchantReputation,\r\n            _dealHash,\r\n            _cancelReason\r\n        );\r\n    }\r\n\r\n/**\r\n     *  recordDealRefundReason creates an event of not paid deal that was cancelled \r\n     *  @param _orderId Identifier of deal's order\r\n     *  @param _clientAddress Address of client's account\r\n     *  @param _clientReputation Updated reputation of the client\r\n     *  @param _merchantReputation Updated reputation of the merchant\r\n     *  @param _dealHash Hashcode of the deal, describing the order (used for deal verification)\r\n     *  @param _refundReason deal refund reason (text)\r\n     */\r\n    function recordDealRefundReason(\r\n        uint _orderId,\r\n        address _clientAddress,\r\n        uint32 _clientReputation,\r\n        uint32 _merchantReputation,\r\n        uint _dealHash,\r\n        string _refundReason)\r\n        external onlyMonetha\r\n    {\r\n        DealRefundReason(\r\n            _orderId,\r\n            _clientAddress,\r\n            _clientReputation,\r\n            _merchantReputation,\r\n            _dealHash,\r\n            _refundReason\r\n        );\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_orderId\",\"type\":\"uint256\"},{\"name\":\"_clientAddress\",\"type\":\"address\"},{\"name\":\"_clientReputation\",\"type\":\"uint32\"},{\"name\":\"_merchantReputation\",\"type\":\"uint32\"},{\"name\":\"_dealHash\",\"type\":\"uint256\"},{\"name\":\"_refundReason\",\"type\":\"string\"}],\"name\":\"recordDealRefundReason\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMonethaAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contactInformation\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_orderId\",\"type\":\"uint256\"},{\"name\":\"_clientAddress\",\"type\":\"address\"},{\"name\":\"_clientReputation\",\"type\":\"uint32\"},{\"name\":\"_merchantReputation\",\"type\":\"uint32\"},{\"name\":\"_isSuccess\",\"type\":\"bool\"},{\"name\":\"_dealHash\",\"type\":\"uint256\"}],\"name\":\"recordDeal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_orderId\",\"type\":\"uint256\"},{\"name\":\"_clientAddress\",\"type\":\"address\"},{\"name\":\"_clientReputation\",\"type\":\"uint32\"},{\"name\":\"_merchantReputation\",\"type\":\"uint32\"},{\"name\":\"_dealHash\",\"type\":\"uint256\"},{\"name\":\"_cancelReason\",\"type\":\"string\"}],\"name\":\"recordDealCancelReason\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"info\",\"type\":\"string\"}],\"name\":\"setContactInformation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_isMonethaAddress\",\"type\":\"bool\"}],\"name\":\"setMonethaAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"merchantIdHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_merchantId\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"clientAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"clientReputation\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"merchantReputation\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"successful\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"dealHash\",\"type\":\"uint256\"}],\"name\":\"DealCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"clientAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"clientReputation\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"merchantReputation\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"dealHash\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"cancelReason\",\"type\":\"string\"}],\"name\":\"DealCancelationReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"clientAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"clientReputation\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"merchantReputation\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"dealHash\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"refundReason\",\"type\":\"string\"}],\"name\":\"DealRefundReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_isMonethaAddress\",\"type\":\"bool\"}],\"name\":\"MonethaAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"MerchantDealsHistory","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000154d6f6e657468612074657374206d65726368616e740000000000000000000000","Library":"","SwarmSource":"bzzr://b2b9c389a9217088491aea310b584c5f7ce730d403859790331e2eab9997e38f"}]}