{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// *****\r\n// step-by-step.io\r\n// First initial micro-ICO in series\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n    \r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract microICO is Ownable {\r\n    uint public soft_cap = 10 ether;\r\n    uint public end_date = 1532254525;\r\n    address public owner = 0xF08FE88Ed3120e19546EeEE1ebe5E7b2FF66b5e7;\r\n    address[] public holders;\r\n    mapping (address => uint) public holder_balance;\r\n    \r\n    function myICO() public {\r\n        owner = msg.sender;\r\n        soft_cap = 1 ether; // once we raise min 1 ETH, we can get them and run 1st stage\r\n        end_date = now + 30 days; // otherwise holders can take their money back 30 days later \r\n    }\r\n    \r\n    function sendFunds(address _addr) public onlyOwner {\r\n        require (address(this).balance >= soft_cap); // getting $ETH only if soft_cap reached\r\n        _addr.transfer(address(this).balance);\r\n    }\r\n\r\n    function withdraw() public {\r\n        uint amount;\r\n        require(now > end_date);// holders can take their money back 30 days later\r\n        amount = holder_balance[msg.sender];\r\n        holder_balance[msg.sender] = 0;\r\n        msg.sender.transfer(amount);\r\n    }\r\n    \r\n    function () public payable {\r\n        require(msg.value > 0);\r\n        holders.push(msg.sender);\r\n        holder_balance[msg.sender] += msg.value;\r\n    }\r\n\r\n    function getFunds() public view returns (uint){\r\n        return address(this).balance;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"myICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"holders\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"end_date\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFunds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"soft_cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"sendFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"holder_balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"microICO","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6c2b5399c2804e2d1851ca707d4ae55c436e70eec8541a0749e336526fab7b1e"}]}