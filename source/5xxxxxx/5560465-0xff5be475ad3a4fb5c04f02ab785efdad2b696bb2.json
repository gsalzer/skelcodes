{"status":"1","message":"OK","result":[{"SourceCode":"// 0.4.20+commit.3155dd80.Emscripten.clang\r\npragma solidity ^0.4.20;\r\n\r\ncontract owned {\r\n  address public owner;\r\n\r\n  function owned() public { owner = msg.sender; }\r\n\r\n  modifier onlyOwner {\r\n    if (msg.sender != owner) { revert(); }\r\n    _;\r\n  }\r\n\r\n  function changeOwner( address newowner ) public onlyOwner {\r\n    owner = newowner;\r\n  }\r\n}\r\n\r\n// Kuberan Govender's ERC20 coin\r\ncontract Kuberand is owned\r\n{\r\n  string  public name;\r\n  string  public symbol;\r\n  uint8   public decimals;\r\n  uint256 public totalSupply;\r\n\r\n  mapping( address => uint256 ) balances_;\r\n  mapping( address => mapping(address => uint256) ) allowances_;\r\n\r\n  event Approval( address indexed owner,\r\n                  address indexed spender,\r\n                  uint value );\r\n\r\n  event Transfer( address indexed from,\r\n                  address indexed to,\r\n                  uint256 value );\r\n\r\n  event Burn( address indexed from, uint256 value );\r\n\r\n  function Kuberand() public\r\n  {\r\n    decimals = uint8(18);\r\n\r\n    balances_[msg.sender] = uint256( 1e9 * 10 ** uint256(decimals) );\r\n    totalSupply = balances_[msg.sender];\r\n    name = \"Kuberand\";\r\n    symbol = \"KUBR\";\r\n\r\n    Transfer( address(0), msg.sender, totalSupply );\r\n  }\r\n\r\n  function() public payable { revert(); } // does not accept money\r\n\r\n  function balanceOf( address owner ) public constant returns (uint) {\r\n    return balances_[owner];\r\n  }\r\n\r\n  function approve( address spender, uint256 value ) public\r\n  returns (bool success)\r\n  {\r\n    allowances_[msg.sender][spender] = value;\r\n    Approval( msg.sender, spender, value );\r\n    return true;\r\n  }\r\n \r\n  function allowance( address owner, address spender ) public constant\r\n  returns (uint256 remaining)\r\n  {\r\n    return allowances_[owner][spender];\r\n  }\r\n\r\n  function transfer(address to, uint256 value) public returns (bool)\r\n  {\r\n    _transfer( msg.sender, to, value );\r\n    return true;\r\n  }\r\n\r\n  function transferFrom( address from, address to, uint256 value ) public\r\n  returns (bool success)\r\n  {\r\n    require( value <= allowances_[from][msg.sender] );\r\n\r\n    allowances_[from][msg.sender] -= value;\r\n    _transfer( from, to, value );\r\n\r\n    return true;\r\n  }\r\n\r\n  function burn( uint256 value ) public returns (bool success)\r\n  {\r\n    require( balances_[msg.sender] >= value );\r\n    balances_[msg.sender] -= value;\r\n    totalSupply -= value;\r\n\r\n    Burn( msg.sender, value );\r\n    return true;\r\n  }\r\n\r\n  function burnFrom( address from, uint256 value ) public returns (bool success)\r\n  {\r\n    require( balances_[from] >= value );\r\n    require( value <= allowances_[from][msg.sender] );\r\n\r\n    balances_[from] -= value;\r\n    allowances_[from][msg.sender] -= value;\r\n    totalSupply -= value;\r\n\r\n    Burn( from, value );\r\n    return true;\r\n  }\r\n\r\n  function _transfer( address from,\r\n                      address to,\r\n                      uint value ) internal\r\n  {\r\n    require( to != 0x0 );\r\n    require( balances_[from] >= value );\r\n    require( balances_[to] + value > balances_[to] ); // catch overflow\r\n\r\n    balances_[from] -= value;\r\n    balances_[to] += value;\r\n\r\n    Transfer( from, to, value );\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newowner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"Kuberand","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://87693c4748800ad82db73f5adf7ed13fc0cd2d311a2c7e647bc008ebf270be6f"}]}