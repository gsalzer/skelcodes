{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n//import 'zeppelin-solidity/contracts/ownership/Ownable.sol';\r\n//import 'zeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol';\r\n\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract ERC20Basic {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract MyEtherHODL is Ownable {\r\n\r\n    event Hodl(address indexed hodler, uint indexed amount, uint untilTime, uint duration);\r\n    event Party(address indexed hodler, uint indexed amount, uint duration);\r\n    event Fee(address indexed hodler, uint indexed amount, uint elapsed);\r\n\r\n    address[] public hodlers;\r\n    mapping(address => uint) public indexOfHodler; // Starts from 1\r\n    mapping (address => uint) public balanceOf;\r\n    mapping (address => uint) public lockedUntil;\r\n    mapping (address => uint) public lockedFor;\r\n\r\n    function get1(uint index) public constant \r\n        returns(address hodler1, uint balance1, uint lockedUntil1, uint lockedFor1)\r\n    {\r\n        hodler1 = hodlers[index];\r\n        balance1 = balanceOf[hodler1];\r\n        lockedUntil1 = lockedUntil[hodler1];\r\n        lockedFor1 = lockedFor[hodler1];\r\n    }\r\n\r\n    function get2(uint index) public constant \r\n        returns(address hodler1, uint balance1, uint lockedUntil1, uint lockedFor1,\r\n                address hodler2, uint balance2, uint lockedUntil2, uint lockedFor2)\r\n    {\r\n        hodler1 = hodlers[index];\r\n        balance1 = balanceOf[hodler1];\r\n        lockedUntil1 = lockedUntil[hodler1];\r\n        lockedFor1 = lockedFor[hodler1];\r\n\r\n        hodler2 = hodlers[index + 1];\r\n        balance2 = balanceOf[hodler2];\r\n        lockedUntil2 = lockedUntil[hodler2];\r\n        lockedFor2 = lockedFor[hodler2];\r\n    }\r\n\r\n    function get3(uint index) public constant \r\n        returns(address hodler1, uint balance1, uint lockedUntil1, uint lockedFor1,\r\n                address hodler2, uint balance2, uint lockedUntil2, uint lockedFor2,\r\n                address hodler3, uint balance3, uint lockedUntil3, uint lockedFor3)\r\n    {\r\n        hodler1 = hodlers[index];\r\n        balance1 = balanceOf[hodler1];\r\n        lockedUntil1 = lockedUntil[hodler1];\r\n        lockedFor1 = lockedFor[hodler1];\r\n\r\n        hodler2 = hodlers[index + 1];\r\n        balance2 = balanceOf[hodler2];\r\n        lockedUntil2 = lockedUntil[hodler2];\r\n        lockedFor2 = lockedFor[hodler2];\r\n\r\n        hodler3 = hodlers[index + 2];\r\n        balance3 = balanceOf[hodler3];\r\n        lockedUntil3 = lockedUntil[hodler3];\r\n        lockedFor3 = lockedFor[hodler3];\r\n    }\r\n    \r\n    function hodlersCount() public constant returns(uint) {\r\n        return hodlers.length;\r\n    }\r\n\r\n    function() public payable {\r\n        if (balanceOf[msg.sender] > 0) {\r\n            hodlFor(0); // Do not extend time-lock\r\n        } else {\r\n            hodlFor(1 years);\r\n        }\r\n    }\r\n\r\n    function hodlFor1y() public payable {\r\n        hodlFor(1 years);\r\n    }\r\n\r\n    function hodlFor2y() public payable {\r\n        hodlFor(2 years);\r\n    }\r\n\r\n    function hodlFor3y() public payable {\r\n        hodlFor(3 years);\r\n    }\r\n\r\n    function hodlFor(uint duration) internal {\r\n        if (indexOfHodler[msg.sender] == 0) {\r\n            hodlers.push(msg.sender);\r\n            indexOfHodler[msg.sender] = hodlers.length; // Store incremented value\r\n        }\r\n        balanceOf[msg.sender] += msg.value;\r\n        if (duration > 0) { // Extend time-lock if needed only\r\n            require(lockedUntil[msg.sender] < now + duration);\r\n            lockedUntil[msg.sender] = now + duration;\r\n            lockedFor[msg.sender] = duration;\r\n        }\r\n        Hodl(msg.sender, msg.value, lockedUntil[msg.sender], lockedFor[msg.sender]);\r\n    }\r\n\r\n    function party() public {\r\n        partyTo(msg.sender);\r\n    }\r\n\r\n    function partyTo(address hodler) public {\r\n        uint value = balanceOf[hodler];\r\n        require(value > 0);\r\n        balanceOf[hodler] = 0;\r\n\r\n        if (now < lockedUntil[hodler]) {\r\n            require(msg.sender == hodler);\r\n            uint fee = value * 5 / 100;\r\n            owner.transfer(fee);\r\n            value -= fee;\r\n            Fee(hodler, fee, lockedUntil[hodler] - now);\r\n        }\r\n        \r\n        hodler.transfer(value);\r\n        Party(hodler, value, lockedFor[hodler]);\r\n\r\n        uint index = indexOfHodler[hodler];\r\n        require(index > 0);\r\n        if (hodlers.length > 1) {\r\n            hodlers[index - 1] = hodlers[hodlers.length - 1];\r\n            indexOfHodler[hodlers[index - 1]] = index;\r\n        }\r\n        hodlers.length--;\r\n\r\n        delete balanceOf[hodler];\r\n        delete lockedUntil[hodler];\r\n        delete lockedFor[hodler];\r\n        delete indexOfHodler[hodler];\r\n    }\r\n\r\n    // From zeppelin-solidity CanReclaimToken.sol\r\n    function reclaimToken(ERC20Basic token) external onlyOwner {\r\n        uint256 balance = token.balanceOf(this);\r\n        token.transfer(owner, balance);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"hodler\",\"type\":\"address\"}],\"name\":\"partyTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hodlersCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"get2\",\"outputs\":[{\"name\":\"hodler1\",\"type\":\"address\"},{\"name\":\"balance1\",\"type\":\"uint256\"},{\"name\":\"lockedUntil1\",\"type\":\"uint256\"},{\"name\":\"lockedFor1\",\"type\":\"uint256\"},{\"name\":\"hodler2\",\"type\":\"address\"},{\"name\":\"balance2\",\"type\":\"uint256\"},{\"name\":\"lockedUntil2\",\"type\":\"uint256\"},{\"name\":\"lockedFor2\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"party\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"hodlFor3y\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"hodlFor2y\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"hodlFor1y\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"indexOfHodler\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hodlers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedUntil\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"get1\",\"outputs\":[{\"name\":\"hodler1\",\"type\":\"address\"},{\"name\":\"balance1\",\"type\":\"uint256\"},{\"name\":\"lockedUntil1\",\"type\":\"uint256\"},{\"name\":\"lockedFor1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"get3\",\"outputs\":[{\"name\":\"hodler1\",\"type\":\"address\"},{\"name\":\"balance1\",\"type\":\"uint256\"},{\"name\":\"lockedUntil1\",\"type\":\"uint256\"},{\"name\":\"lockedFor1\",\"type\":\"uint256\"},{\"name\":\"hodler2\",\"type\":\"address\"},{\"name\":\"balance2\",\"type\":\"uint256\"},{\"name\":\"lockedUntil2\",\"type\":\"uint256\"},{\"name\":\"lockedFor2\",\"type\":\"uint256\"},{\"name\":\"hodler3\",\"type\":\"address\"},{\"name\":\"balance3\",\"type\":\"uint256\"},{\"name\":\"lockedUntil3\",\"type\":\"uint256\"},{\"name\":\"lockedFor3\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hodler\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"untilTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"Hodl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hodler\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"Party\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hodler\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"elapsed\",\"type\":\"uint256\"}],\"name\":\"Fee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"MyEtherHODL","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f56fa9b2589f86349e02a351d96b2059abd026f8153fbe46f015f2f6c5490f60"}]}