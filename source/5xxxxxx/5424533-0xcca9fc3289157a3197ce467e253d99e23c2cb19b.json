{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity^0.4.21;\r\n/*\r\n *      ##########################################\r\n *      ##########################################\r\n *      ###                                    ###\r\n *      ###          ???? & ??? ?????          ###\r\n *      ###                 at                 ###\r\n *      ###          ??????????.???          ###\r\n *      ###                                    ###\r\n *      ##########################################\r\n *      ##########################################\r\n *\r\n *      Welcome to the ?????????? ??? ????? promotional contract!\r\n *      First you should go and play ?????????? @ ?????://??????????.???\r\n *      Then you'll have earnt free ??? ?????? via this very promotion!\r\n *      Next you should learn about our ??? @ ?????://??????????.???/???\r\n *      Then take part by buying even more ??? ??????! \r\n *      And don't forget to play ?????????? some more because it's brilliant!\r\n *\r\n *      If you want to chat to us you have loads of options:\r\n *      On ???????? @ ?????://?.??/??????????\r\n *      Or on ??????? @ ?????://???????.???/??????????\r\n *      Or on ?????? @ ?????://??????????.??????.???\r\n *\r\n *      ?????????? - the only ????? ????????????? & ?????????? blockchain lottery.\r\n */\r\ncontract EtheraffleInterface {\r\n    uint public tktPrice;\r\n    function getUserNumEntries(address _entrant, uint _week) public view returns (uint) {}\r\n}\r\n\r\ncontract LOTInterface {\r\n    function transfer(address _to, uint _value) public {}\r\n    function balanceOf(address _owner) public view returns (uint) {}\r\n}\r\n\r\ncontract EtheraffleLOTPromo {\r\n    \r\n    bool    public isActive;\r\n    uint    constant public RAFEND     = 500400;     // 7:00pm Saturdays\r\n    uint    constant public BIRTHDAY   = 1500249600; // Etheraffle's birthday <3\r\n    uint    constant public ICOSTART   = 1522281600; // Thur 29th March 2018\r\n    uint    constant public TIER1END   = 1523491200; // Thur 12th April 2018\r\n    uint    constant public TIER2END   = 1525305600; // Thur 3rd May 2018\r\n    uint    constant public TIER3END   = 1527724800; // Thur 31st May 2018\r\n    address constant public ETHERAFFLE = 0x97f535e98cf250CDd7Ff0cb9B29E4548b609A0bd; // ER multisig wallet address\r\n    \r\n    LOTInterface LOTContract;\r\n    EtheraffleInterface etheraffleContract;\r\n\r\n    /* Mapping of  user address to weekNo to claimed bool */\r\n    mapping (address => mapping (uint => bool)) public claimed;\r\n    \r\n    event LogActiveStatus(bool currentStatus, uint atTime);\r\n    event LogTokenDeposit(address fromWhom, uint tokenAmount, bytes data);\r\n    event LogLOTClaim(address whom, uint howMany, uint inWeek, uint atTime);\r\n    /*\r\n     * @dev     Modifier requiring function caller to be the Etheraffle \r\n     *          multisig wallet address\r\n     */\r\n    modifier onlyEtheraffle() {\r\n        require(msg.sender == ETHERAFFLE);\r\n        _;\r\n    }\r\n    /*\r\n     * @dev     Constructor - sets promo running and instantiates required\r\n     *          contracts.\r\n     *\r\n     * @param _LOT      Address of the LOT token contract\r\n     * @param _ER       Address of the Etheraffle contract\r\n     */\r\n    function EtheraffleLOTPromo(address _LOT, address _ER) public {\r\n        isActive           = true;\r\n        LOTContract        = LOTInterface(_LOT);\r\n        etheraffleContract = EtheraffleInterface(_ER);\r\n    }\r\n    \r\n    /*\r\n     * @dev     Function used to redeem promotional LOT owed. Use weekNo of \r\n     *          0 to get current week number. Requires user not to have already \r\n     *          claimed week number in question's earnt promo LOT and for promo \r\n     *          to be active. It calculates LOT owed, and sends them to the \r\n     *          caller. Should contract's LOT balance fall too low, attempts \r\n     *          to redeem will arrest the contract to await a resupply of LOT.\r\n     */\r\n    function redeem(uint _weekNo) public {\r\n        uint week    = _weekNo == 0 ? getWeek() : _weekNo;\r\n        uint entries = getNumEntries(msg.sender, week);\r\n        require(\r\n            !claimed[msg.sender][week] &&\r\n            entries > 0 &&\r\n            isActive\r\n            );\r\n        uint amt = getPromoLOTEarnt(entries);\r\n        if (getLOTBalance(this) < amt) {\r\n            isActive = false;\r\n            emit LogActiveStatus(false, now);\r\n            return;\r\n        }\r\n        claimed[msg.sender][week] = true;\r\n        LOTContract.transfer(msg.sender, amt);\r\n        emit LogLOTClaim(msg.sender, amt, week, now);\r\n    }\r\n    /*\r\n     * @dev     Returns number of entries made in Etheraffle contract by\r\n     *          function caller in whatever the queried week is. \r\n     *\r\n     * @param _address  Address to be queried\r\n     * @param _weekNo   Desired week number. (Use 0 for current week)\r\n     */\r\n    function getNumEntries(address _address, uint _weekNo) public view returns (uint) {\r\n        uint week = _weekNo == 0 ? getWeek() : _weekNo;\r\n        return etheraffleContract.getUserNumEntries(_address, week);\r\n    }\r\n    /*\r\n     * @dev     Toggles promo on & off. Only callable by the Etheraffle\r\n     *          multisig wallet.\r\n     *\r\n     * @param _status   Desired bool status of the promo\r\n     */\r\n    function togglePromo(bool _status) public onlyEtheraffle {\r\n        isActive = _status;\r\n        emit LogActiveStatus(_status, now);\r\n    }\r\n    /*\r\n     * @dev     Same getWeek function as seen in main Etheraffle contract to \r\n     *          ensure parity. Ddefined by number of weeks since Etheraffle's\r\n     *          birthday.\r\n     */\r\n    function getWeek() public view returns (uint) {\r\n        uint curWeek = (now - BIRTHDAY) / 604800;\r\n        if (now - ((curWeek * 604800) + BIRTHDAY) > RAFEND) curWeek++;\r\n        return curWeek;\r\n    }\r\n    /**\r\n     * @dev     ERC223 tokenFallback function allows to receive ERC223 tokens \r\n     *          properly.\r\n     *\r\n     * @param _from  Address of the sender.\r\n     * @param _value Amount of deposited tokens.\r\n     * @param _data  Token transaction data.\r\n     */\r\n    function tokenFallback(address _from, uint256 _value, bytes _data) external {\r\n        if (_value > 0) emit LogTokenDeposit(_from, _value, _data);\r\n    }\r\n    /*\r\n     * @dev     Retrieves current LOT token balance of an address.\r\n     *\r\n     * @param _address Address whose balance is to be queried.\r\n     */\r\n    function getLOTBalance(address _address) internal view returns (uint) {\r\n        return LOTContract.balanceOf(_address);\r\n    }\r\n    /*\r\n     * @dev     Function returns bool re whether or not address in question \r\n     *          has claimed promo LOT for the week in question.\r\n     *\r\n     * @param _address  Ethereum address to be queried\r\n     * @param _weekNo   Week number to be queried (use 0 for current week)\r\n     */\r\n    function hasRedeemed(address _address, uint _weekNo) public view returns (bool) {\r\n        uint week = _weekNo == 0 ? getWeek() : _weekNo;\r\n        return claimed[_address][week];\r\n    }\r\n    /*\r\n     * @dev     Returns current ticket price from the main Etheraffle\r\n     *          contract\r\n     */\r\n    function getTktPrice() public view returns (uint) {\r\n        return etheraffleContract.tktPrice();\r\n    }\r\n    /*\r\n     * @dev     Function returns current ICO tier's exchange rate of LOT\r\n     *          per ETH.\r\n     */\r\n    function getRate() public view returns (uint) {\r\n        if (now <  ICOSTART) return 110000 * 10 ** 6;\r\n        if (now <= TIER1END) return 100000 * 10 ** 6;\r\n        if (now <= TIER2END) return 90000  * 10 ** 6;\r\n        if (now <= TIER3END) return 80000  * 10 ** 6;\r\n        else return 0;\r\n    }\r\n    /*\r\n     * @dev     Returns number of promotional LOT earnt as calculated \r\n     *          based on number of entries, current ICO exchange rate\r\n     *          and the current Etheraffle ticket price. \r\n     */\r\n    function getPromoLOTEarnt(uint _entries) public view returns (uint) {\r\n        return (_entries * getRate() * getTktPrice()) / (1 * 10 ** 18);\r\n    }\r\n    /*\r\n     * @dev     Allows contract addresses to be changed in the event of \r\n     *          future contract upgrades.\r\n     *\r\n     * @param _LOT      Address of the LOT token contract\r\n     * @param _ER       Address of the Etheraffle contract\r\n     */\r\n    function updateAddresses(address _LOT, address _ER) external onlyEtheraffle {\r\n        LOTContract        = LOTInterface(_LOT);\r\n        etheraffleContract = EtheraffleInterface(_ER);\r\n    }\r\n    /*\r\n     * @dev     Scuttles contract, sending any remaining LOT tokens back \r\n     *          to the Etheraffle multisig (by whom it is only callable)\r\n     */\r\n    function scuttle() external onlyEtheraffle {\r\n        LOTContract.transfer(ETHERAFFLE, LOTContract.balanceOf(this));\r\n        selfdestruct(ETHERAFFLE);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"TIER2END\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"scuttle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"togglePromo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTktPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_weekNo\",\"type\":\"uint256\"}],\"name\":\"getNumEntries\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_entries\",\"type\":\"uint256\"}],\"name\":\"getPromoLOTEarnt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWeek\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOSTART\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BIRTHDAY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETHERAFFLE\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_weekNo\",\"type\":\"uint256\"}],\"name\":\"hasRedeemed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_LOT\",\"type\":\"address\"},{\"name\":\"_ER\",\"type\":\"address\"}],\"name\":\"updateAddresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TIER3END\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RAFEND\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TIER1END\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_weekNo\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_LOT\",\"type\":\"address\"},{\"name\":\"_ER\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"currentStatus\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"atTime\",\"type\":\"uint256\"}],\"name\":\"LogActiveStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"fromWhom\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogTokenDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"whom\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"howMany\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"inWeek\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"atTime\",\"type\":\"uint256\"}],\"name\":\"LogLOTClaim\",\"type\":\"event\"}]","ContractName":"EtheraffleLOTPromo","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000afd9473dfe8a49567872f93c1790b74ee7d92a9f00000000000000000000000045c58bbd535b8661110ef5296e6987573d0c8276","Library":"","SwarmSource":"bzzr://d4f99a0b194f6fbaafab201ed85c335813bf0c18898dc123236f246b65c3b0fb"}]}