{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public constant returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public constant returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract PaymentReceiver\r\n{\r\n address private constant taxman = 0xB13D7Dab5505512924CB8E1bE970B849009d34Da;\r\n address private constant store = 0x23859DBF88D714125C65d1B41a8808cADB199D9E;\r\n address private constant pkt = 0x2604fa406be957e542beb89e6754fcde6815e83f;\r\n\r\n  modifier onlyTaxman { require(msg.sender == taxman); _; }\r\n\r\n  function withdrawTokens(uint256 value) external onlyTaxman\r\n  {\r\n    ERC20 token = ERC20(pkt);\r\n    token.transfer(store, value);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"PaymentReceiver","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://37e513c24d750a5c72fa6100074e3380fbddc8579af35a8deaf0485a136dba4a"}]}