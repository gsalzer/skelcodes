{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract ERC20Basic {\r\n  function transfer(address _to, uint256 _value)external returns (bool);\r\n  function balanceOf(address _owner)external constant returns (uint256 balance);\r\n}\r\n\r\ncontract AirDrop is Ownable {\r\n\r\n  ERC20Basic token;\r\n\r\n  event TransferredToken(address indexed to, uint256 value);\r\n\r\n  function AirDrop (address _tokenAddr) public {\r\n      token = ERC20Basic(_tokenAddr);\r\n  }\r\n\r\n  // Function given below is used when you want to send same number of tokens to all the recipients\r\n  function sendTokens(address[] recipient, uint256 value) onlyOwner external {\r\n    for (uint256 i = 0; i < recipient.length; i++) {\r\n        token.transfer(recipient[i],value * 10**8);\r\n        emit TransferredToken(recipient[i], value);\r\n    }\r\n  }\r\n\r\n\r\n  function tokensAvailable()public constant returns (uint256) {\r\n    return token.balanceOf(this);\r\n  }\r\n\r\n\r\n  function destroy() public onlyOwner {\r\n    uint256 balance = tokensAvailable();\r\n    token.transfer(owner, balance);\r\n    selfdestruct(owner);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"tokensAvailable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address[]\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"sendTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferredToken\",\"type\":\"event\"}]","ContractName":"AirDrop","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000b510788cbb9aea54221d3dc8cce2dff629a1dbf7","Library":"","SwarmSource":"bzzr://88c9c9423f0e94dcd12af7dd1a50d9164dec6e07f5eeb721a69f8ba1b2514a5e"}]}