{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract IBancorConverter {\r\n    function getReturn(address _fromToken, address _toToken, uint256 _amount) public view returns (uint256);\r\n}\r\n\r\ncontract IExchange {\r\n    function ethToTokens(uint _ethAmount) public view returns(uint);\r\n    function tokenToEth(uint _amountOfTokens) public view returns(uint);\r\n    function tokenToEthRate() public view returns(uint);\r\n    function ethToTokenRate() public view returns(uint);\r\n}\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\ncontract Exchange is Owned, IExchange {\r\n    using SafeMath for uint;\r\n\r\n    IBancorConverter public bntConverter;\r\n    IBancorConverter public tokenConverter;\r\n\r\n    address public ethToken;\r\n    address public bntToken;\r\n    address public token;\r\n\r\n    event Initialized(address _bntConverter, address _tokenConverter, address _ethToken, address _bntToken, address _token);\r\n\r\n    constructor() public { \r\n    }\r\n\r\n    function initialize(address _bntConverter, address _tokenConverter, address _ethToken, address _bntToken, address _token) external onlyOwner {\r\n       bntConverter = IBancorConverter(_bntConverter);\r\n       tokenConverter = IBancorConverter(_tokenConverter);\r\n\r\n       ethToken = _ethToken;\r\n       bntToken = _bntToken;\r\n       token = _token;\r\n\r\n       emit Initialized(_bntConverter, _tokenConverter, _ethToken, _bntToken, _token);\r\n    }\r\n\r\n    function ethToTokens(uint _ethAmount) public view returns(uint) {\r\n        uint bnt = bntConverter.getReturn(ethToken, bntToken, _ethAmount);\r\n        uint amountOfTokens = tokenConverter.getReturn(bntToken, token, bnt);\r\n        return amountOfTokens;\r\n    }\r\n\r\n    function tokenToEth(uint _amountOfTokens) public view returns(uint) {\r\n        uint bnt = tokenConverter.getReturn(token, bntToken, _amountOfTokens);\r\n        uint eth = bntConverter.getReturn(bntToken, ethToken, bnt);\r\n        return eth;\r\n    }\r\n\r\n    function tokenToEthRate() public view returns(uint) {\r\n        uint eth = tokenToEth(1 ether);\r\n        return eth;\r\n    }\r\n\r\n    function ethToTokenRate() public view returns(uint) {\r\n        uint tkn = ethToTokens(1 ether);\r\n        return tkn;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"bntConverter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bntConverter\",\"type\":\"address\"},{\"name\":\"_tokenConverter\",\"type\":\"address\"},{\"name\":\"_ethToken\",\"type\":\"address\"},{\"name\":\"_bntToken\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenToEthRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amountOfTokens\",\"type\":\"uint256\"}],\"name\":\"tokenToEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ethAmount\",\"type\":\"uint256\"}],\"name\":\"ethToTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenConverter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bntToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethToTokenRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_bntConverter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenConverter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_ethToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_bntToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Exchange","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ad9bbbf9d6366d2d97906bd0e4d658fd2eee1cbd7f7e7395da87c8f545b21577"}]}