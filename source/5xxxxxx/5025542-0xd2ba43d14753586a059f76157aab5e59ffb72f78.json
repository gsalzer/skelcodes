{"status":"1","message":"OK","result":[{"SourceCode":"contract Ownable {\r\n  address public owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract SampleStorage is Ownable {\r\n    \r\n    struct Sample {\r\n        string ipfsHash;\r\n        uint rarity;\r\n    }\r\n    \r\n    mapping (uint => Sample) sampleTypes;\r\n    \r\n    uint public numOfSampleTypes;\r\n    \r\n    uint public numOfCommon;\r\n    uint public numOfRare;\r\n    uint public numOfLegendary;\r\n    uint public numOfMythical;\r\n    \r\n    function addNewSampleType(string _ipfsHash, uint _rarityType) public onlyOwner {\r\n        \r\n        if (_rarityType == 0) {\r\n            numOfCommon++;\r\n        } else if (_rarityType == 1) {\r\n            numOfRare++;\r\n        } else if(_rarityType == 2) {\r\n            numOfLegendary++;\r\n        } else if(_rarityType == 3) {\r\n            numOfMythical++;\r\n        }\r\n        \r\n        sampleTypes[numOfSampleTypes] = Sample({\r\n           ipfsHash: _ipfsHash,\r\n           rarity: _rarityType\r\n        });\r\n        \r\n        numOfSampleTypes++;\r\n    }\r\n    \r\n    function getType(uint _randomNum) public view returns (uint) {\r\n        uint range = 0;\r\n        \r\n        if (_randomNum > 0 && _randomNum < 600) {\r\n            range = 600 / numOfCommon;\r\n            return _randomNum / range;\r\n            \r\n        } else if(_randomNum >= 600 && _randomNum < 900) {\r\n            range = 300 / numOfRare;\r\n            return _randomNum / range;\r\n        } else {\r\n            range = 100 / numOfLegendary;\r\n            return _randomNum / range;\r\n        }\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"numOfCommon\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_randomNum\",\"type\":\"uint256\"}],\"name\":\"getType\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numOfMythical\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numOfRare\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numOfLegendary\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numOfSampleTypes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"name\":\"_rarityType\",\"type\":\"uint256\"}],\"name\":\"addNewSampleType\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"SampleStorage","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://457a37d2504d23ae5171b58da092db5a0926d6e2fbe0395cf35cc48f374a10c4"}]}