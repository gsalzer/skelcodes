{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n//创建一个基础合约，有些操作只能是当前合约的创建者才能操作\r\ncontract owned{\r\n    //声明一个用来接收合约创建者的状态变量\r\n    address public owner;\r\n    //构造函数，把当前交易的发送者（合约的创建者）赋予owner变量\r\n    function owned(){\r\n        owner=msg.sender;\r\n    }\r\n    //声明一个修改器，用于有些方法只有合约的创建者才能操作\r\n    modifier onlyOwner{\r\n        if(msg.sender != owner){\r\n            revert();\r\n        }else{\r\n            _;\r\n        }\r\n    }\r\n    //把该合约的拥有者转移给其他人\r\n    function transferOwner(address newOwner) onlyOwner {\r\n        owner=newOwner;\r\n    }\r\n}\r\n\r\n\r\ncontract tokenDemo is owned{\r\n    string public name;//代币名字\r\n    string public symbol;//代币符号\r\n    uint8 public decimals=18;//代币小数位\r\n    uint public totalSupply;//代币总量\r\n    \r\n    uint public sellPrice=0.01 ether;//卖价，持有的人卖给智能合约持有者\r\n    uint public buyPrice=0.01 ether;//买价，向持有人买代币\r\n    \r\n    //用一个映射类型的变量，来记录所有帐户的代币的余额\r\n    mapping(address => uint) public balanceOf;\r\n    //用一个映射类型的变量，来记录被冻结的帐户\r\n    mapping(address => bool) public frozenAccount;\r\n    \r\n    \r\n    //构造函数，初始化代币的变量和初始化总量\r\n    function tokenDemo(\r\n        uint initialSupply,\r\n        string _name,\r\n        string _symbol,\r\n        address centralMinter\r\n        ) payable {\r\n        //手动指定代币的的拥有者，如果不填，则默认为合约的部署者\r\n        if(centralMinter !=0){\r\n            owner=centralMinter;\r\n        }\r\n        \r\n        totalSupply=initialSupply * 10 ** uint256(decimals);\r\n        balanceOf[owner]=totalSupply;\r\n        name=_name;\r\n        symbol=_symbol;\r\n    }\r\n    \r\n    function rename(string newTokenName,string newSymbolName) public onlyOwner\r\n    {\r\n        name = newTokenName;\r\n        symbol = newSymbolName;\r\n    }\r\n    \r\n    //发行代币，向指定的目标帐户添加代币\r\n    function mintToken(address target,uint mintedAmount) onlyOwner{\r\n        //判断目标帐户是否存在\r\n        if(target !=0){\r\n            //目标帐户增加相应的的代币\r\n            balanceOf[target] += mintedAmount;\r\n            //增加总量\r\n            totalSupply +=mintedAmount;\r\n        }else{\r\n            revert();\r\n        }\r\n    }\r\n    \r\n    //实现帐户的冻结和解冻\r\n    function freezeAccount(address target,bool _bool) onlyOwner{\r\n        if(target != 0){\r\n            frozenAccount[target]=_bool;\r\n        }\r\n    }\r\n        \r\n    function transfer(address _to,uint _value){\r\n        //检测交易的发起者的帐户是不是被冻结了\r\n        if(frozenAccount[msg.sender]){\r\n            revert();\r\n        }\r\n        //检测交易发起者的帐户代币余额是否足够\r\n        if(balanceOf[msg.sender]<_value){\r\n            revert();\r\n        }\r\n        //检测溢出\r\n        if((balanceOf[_to]+_value)<balanceOf[_to]){\r\n            revert();\r\n        }\r\n        //实现代币转移\r\n        balanceOf[msg.sender] -=_value;\r\n        balanceOf[_to] +=_value;\r\n    }\r\n    \r\n    \r\n    //设置代币的买卖价格    \r\n    function setPrice(uint newSellPrice,uint newBuyPrice)onlyOwner{\r\n        sellPrice=newSellPrice;\r\n        buyPrice=newBuyPrice;\r\n    }   \r\n    \r\n    \r\n    //持有代币的用户卖代币给合约的拥有者，以获得以太币\r\n    function sell(uint amount) returns(uint revenue){\r\n        //检测交易的发起者的帐户是不是被冻结\r\n        if(frozenAccount[msg.sender]){\r\n            revert();\r\n        }\r\n        //检测交易发起者的帐户的代币余额是否够用\r\n        if(balanceOf[msg.sender]<amount){\r\n            revert();\r\n        }\r\n        //把相应数量的代币给合约的拥有者\r\n        balanceOf[owner] +=amount;\r\n        //卖家的帐户减去相应的余额\r\n        balanceOf[msg.sender] -=amount;\r\n        //计算对应的以太币的价值 \r\n        revenue=amount*sellPrice;\r\n        //向卖家的的帐户发送对应数量的以太币\r\n        if(msg.sender.send(revenue)){\r\n            return revenue;\r\n            \r\n        }else{\r\n            //如果以太币发送失败，则终止程序，并且恢复状态变量\r\n            revert();\r\n        }\r\n    }\r\n    \r\n    \r\n    //向合约的拥有者购买代币\r\n    function buy() payable returns(uint amount){\r\n        //检测买价是不是大于0\r\n        if(buyPrice<=0){\r\n            //如果不是，则终止\r\n            revert();\r\n        }\r\n        //根据用户发送的以太币的数量和代币的买价，计算出代币的数量\r\n        amount=msg.value/buyPrice;\r\n        //检测合约拥有者是否有足够多的代币\r\n        if(balanceOf[owner]<amount){\r\n            revert();\r\n        }\r\n        //向合约的拥有者转移以太币\r\n        if(!owner.send(msg.value)){\r\n            //如果失败，则终止\r\n            revert();\r\n        }\r\n        //合约拥有者的帐户减去相应的代币\r\n        balanceOf[owner] -=amount;\r\n        //买家的帐户增加相应的代币\r\n        balanceOf[msg.sender] +=amount;\r\n        \r\n        return amount;\r\n    }\r\n    \r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTokenName\",\"type\":\"string\"},{\"name\":\"newSymbolName\",\"type\":\"string\"}],\"name\":\"rename\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"revenue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"centralMinter\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}]","ContractName":"tokenDemo","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b7a636f696e20746f6b656e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000057a636f696e000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://1f463064d9ba99d84b0337068d99af691a44f24a5f2a83cfdc6ddbd9d8451442"}]}