{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n  emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n\r\ncontract ERC721 {\r\n    \r\n    function totalSupply() public view returns (uint256 total);\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function ownerOf(uint256 _tokenId) external view returns (address owner, uint256 tokenId);\r\n    function approve(address _to, uint256 _tokenId) external;\r\n    function transfer(address _to, uint256 _tokenId) external payable;\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) external payable;\r\n\r\n\r\n    event Transfer(address from, address to, uint256 tokenId);\r\n    event Approval(address owner, address approved, uint256 tokenId);\r\n    \r\n    \r\n    \r\n}\r\n\r\n\r\n\r\ncontract JockeyControl  {\r\n\r\n    address public ceoAddress=0xf75Da6b04108394fDD349f47d58452A6c8Aeb236;\r\n    address public ctoAddress=0x833184cE7DF8E56a716B7738548BfC488E428Da5;\r\n \r\n\r\n    modifier onCEO() {\r\n        require(msg.sender == ceoAddress);\r\n        _;\r\n    }\r\n\r\n    modifier onCTO() {\r\n        require(msg.sender == ctoAddress);\r\n        _;\r\n    }\r\n\r\n    modifier onlyC() {\r\n        require(\r\n            msg.sender == ceoAddress ||\r\n            msg.sender == ctoAddress\r\n        );\r\n        _;\r\n    }\r\n\r\n \r\n}\r\n\r\n\r\n\r\n\r\n\r\ncontract HoresBasis is  JockeyControl {\r\n   \r\n    event Birth(address owner, uint256 JockeyId);\r\n   \r\n    event Transfer(address from, address to, uint256 tokenId);\r\n\r\n    struct Jockey {\r\n        uint64 birthTime;\r\n        uint256 dna1;\r\n        uint256 dna2;\r\n        uint256 dna3;\r\n        uint256 dna4;\r\n        uint256 dna5;\r\n        uint256 dna6;\r\n        uint256 dna7;\r\n        uint256 dna8;\r\n        \r\n    }\r\n\r\n\r\n    Jockey[] jockeys;\r\n\r\n    mapping (uint256 => address) jockeyOwnerIndex;\r\n    \r\n    mapping (uint256 => uint256) public jockeyIndexPrice;\r\n    \r\n    mapping (uint256 => uint256) public jockeyHair;\r\n    \r\n    mapping (uint256 => uint256) public jockeySkin;\r\n    \r\n    mapping (uint256 => uint256) public jockeyHLength;\r\n    \r\n    mapping (uint256 => bool)  jockeyIndexForSale;\r\n\r\n    mapping (address => uint256) tokenOwnershipCount;\r\n\r\n\r\n   uint256 public saleFee = 20;\r\n\r\n   \r\n   \r\n \r\n    function _transfer(address _from, address _to, uint256 _tokenId) internal {\r\n        tokenOwnershipCount[_to]++;\r\n        jockeyOwnerIndex[_tokenId] = _to;\r\n        \r\n        if (_from != address(0)) {\r\n            tokenOwnershipCount[_from]--;\r\n         \r\n        }\r\n       emit Transfer(_from, _to, _tokenId);\r\n       \r\n    }\r\n    \r\n    \r\n    function _sell(address _from,  uint256 _tokenId, uint256 value) internal {\r\n     \r\n     if(jockeyIndexForSale[_tokenId]==true){\r\n         \r\n              uint256 price = jockeyIndexPrice[_tokenId];\r\n            \r\n            require(price<=value);\r\n            \r\n         uint256 Fee = price / saleFee;\r\n            \r\n          uint256  oPrice= price - Fee;\r\n            \r\n            address _to = msg.sender;\r\n            \r\n            tokenOwnershipCount[_to]++;\r\n            jockeyOwnerIndex[_tokenId] = _to;\r\n            \r\n            jockeyIndexForSale[_tokenId]=false;\r\n            \r\n            \r\n            if (_from != address(0)) {\r\n                tokenOwnershipCount[_from]--;\r\n               \r\n            }\r\n                 \r\n           emit Transfer(_from, _to, _tokenId);\r\n             \r\n             _from.transfer(oPrice);\r\n             \r\n             ceoAddress.transfer(Fee);\r\n             \r\n            uint256 bidExcess = value - oPrice - Fee;\r\n            _to.transfer(bidExcess);\r\n            \r\n            \r\n     }else{\r\n          _to.transfer(value);\r\n     }\r\n      \r\n    }\r\n    \r\n    \r\n\t\r\n    function _newJockey(\r\n        uint256 _genes1,\r\n        uint256 _genes2,\r\n        uint256 _genes3,\r\n        uint256 _genes4,\r\n        uint256 _genes5,\r\n        uint256 _genes6,\r\n        uint256 _genes7,\r\n        uint256 _genes8,\r\n        address _owner\r\n    )\r\n        internal\r\n        returns (uint)\r\n    {\r\n   \r\n   \r\n   \r\n   \r\n        Jockey memory _jockey = Jockey({\r\n           birthTime: uint64(now),\r\n           \r\n             \r\n        dna1:_genes1,\r\n        dna2: _genes2,\r\n        dna3 : _genes3,\r\n        dna4 : _genes4,\r\n        dna5 : _genes5,\r\n        dna6 : _genes6,\r\n        dna7:_genes7,\r\n        dna8: _genes8\r\n            \r\n        });\r\n       \r\n       \r\n        \r\n       uint256 newJockeyId;\r\n\t   \r\n     newJockeyId = jockeys.push(_jockey)-1;\r\n     \r\n  \r\n        require(newJockeyId == uint256(uint32(newJockeyId)));\r\n\r\n\r\n        \r\n        \r\n       emit Birth(_owner, newJockeyId);\r\n\r\n        _transfer(0, _owner, newJockeyId);\r\n\r\n        return newJockeyId;  \r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\ncontract JockeyOwnership is HoresBasis, ERC721{\r\n\r\n  string public constant  name = \"CryptoJockey\";\r\n    string public constant symbol = \"CHJ\";\r\n     uint8 public constant decimals = 0; \r\n\r\n    function jockeyForSale(uint256 _tokenId, uint256 price) external {\r\n  \r\n     address  ownerof =  jockeyOwnerIndex[_tokenId];\r\n        require(ownerof == msg.sender);\r\n        jockeyIndexPrice[_tokenId] = price;\r\n        jockeyIndexForSale[_tokenId]= true;\r\n\t\t}\r\n\t\t\r\n function changePrice(uint256 _tokenId, uint256 price) external {\r\n  \r\n     address  ownerof =  jockeyOwnerIndex[_tokenId];\r\n        require(ownerof == msg.sender);\r\n        require(jockeyIndexForSale[_tokenId] == true);\r\n       \r\n             \r\n              jockeyIndexPrice[_tokenId] = price;\r\n         \r\n\t\t}\r\n\r\n function jockeyNotForSale(uint256 _tokenId) external {\r\n         address  ownerof =  jockeyOwnerIndex[_tokenId];\r\n            require(ownerof == msg.sender);\r\n        jockeyIndexForSale[_tokenId]= false;\r\n\r\n    }\r\n\r\n\r\n    function _owns(address _applicant, uint256 _tokenId) internal view returns (bool) {\r\n        return jockeyOwnerIndex[_tokenId] == _applicant;\r\n    }\r\n\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 count) {\r\n        return tokenOwnershipCount[_owner];\r\n    }\r\n\r\n    function transfer(\r\n        address _to,\r\n        uint256 _tokenId\r\n    )\r\n        external\r\n        payable\r\n    {\r\n        require(_to != address(0));\r\n\t\t\r\n        require(_to != address(this));\r\n \r\n        require(_owns(msg.sender, _tokenId));\r\n       _transfer(msg.sender, _to, _tokenId);\r\n    }\r\n\r\n    function approve(\r\n        address _to,\r\n        uint256 _tokenId\r\n    )\r\n        external \r\n    {\r\n       require(_owns(msg.sender, _tokenId));\r\n\r\n        emit Approval(msg.sender, _to, _tokenId);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _tokenId ) external payable {\r\n        \r\n        if(_from != msg.sender){\r\n              require(_to == msg.sender);\r\n                 \r\n                require(_from==jockeyOwnerIndex[_tokenId]);\r\n        \r\n               _sell(_from,  _tokenId, msg.value);\r\n            \r\n        }else{\r\n            \r\n          _to.transfer(msg.value);\r\n        }\r\n \r\n    }\r\n\r\n    function totalSupply() public view returns (uint) {\r\n        return jockeys.length;\r\n    }\r\n\r\n    function ownerOf(uint256 _tokenId)  external view returns (address owner, uint256 tokenId)  {\r\n        owner = jockeyOwnerIndex[_tokenId];\r\n        tokenId=_tokenId;\r\n       \r\n       return;\r\n       \r\n    }\r\n\r\n       function jockeyFS(uint256 _tokenId) external view  returns (bool buyable, uint256 tokenId) {\r\n        buyable = jockeyIndexForSale[_tokenId];\r\n        tokenId=_tokenId;\r\n       return;\r\n       \r\n    }\r\n\t\r\n\tfunction jockeyPr(uint256 _tokenId) external view  returns (uint256 price, uint256 tokenId) {\r\n        price = jockeyIndexPrice[_tokenId];\r\n        tokenId=_tokenId;\r\n       return;\r\n       \r\n    }\r\n\r\n function setSaleFee(uint256 val) external onCTO {\r\n        saleFee = val;\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\ncontract JockeyMinting is JockeyOwnership {\r\n\r\n    uint256 public  JOCKEY_LIMIT = 20000;\r\n\r\n\r\n    function createJockey(uint256 _genes1,uint256 _genes2,uint256 _genes3,uint256 _genes4,uint256 _genes5,uint256 _genes6,uint256 _genes7,uint256 _genes8,uint256 jHair,uint256 jHLenth,uint256 jSkin, address _owner) external onlyC {\r\n        address jockeyOwner = _owner;\r\n        \r\n   require(jockeys.length < JOCKEY_LIMIT);\r\n\r\n            \r\n              _newJockey(  _genes1, _genes2, _genes3, _genes4, _genes5, _genes6,_genes7, _genes8,  jockeyOwner);\r\n            \r\n            \r\n        uint256   jId=jockeys.length;\r\n            \r\n        jockeyHair[jId] = jHair;\r\n        jockeyHLength[jId] = jHLenth;\r\n        jockeySkin[jId] = jSkin;\r\n            \r\n        \r\n    }\r\n\r\n   \r\n}\r\n\r\n\r\ncontract GetTheJockey is JockeyMinting {\r\n\r\n\r\n    function getJockey(uint256 _id)\r\n        external\r\n        view\r\n        returns (\r\n        uint256 price,\r\n        uint256 id,\r\n        bool forSale,\r\n        uint256 birthTime,\r\n        uint256 _genes1,\r\n        uint256 _genes2,\r\n        uint256 _genes3,\r\n        uint256 _genes4,\r\n        uint256 _genes5,\r\n        uint256 _genes6,\r\n        uint256 _genes7,\r\n        uint256 _genes8\r\n\t\t\r\n    ) {\r\n\t\tprice = jockeyIndexPrice[_id];\r\n        id = uint256(_id);\r\n\t\tforSale = jockeyIndexForSale[_id];\r\n        Jockey storage horseman = jockeys[_id];\r\n        birthTime = uint256(horseman.birthTime);\r\n        _genes1 = horseman.dna1;\r\n        _genes2 = horseman.dna2;\r\n        _genes3 = horseman.dna3;\r\n        _genes4 = horseman.dna4;\r\n        _genes5 = horseman.dna5;\r\n        _genes6 = horseman.dna6;  \r\n        _genes7 = horseman.dna7;\r\n        _genes8 = horseman.dna8;\r\n\r\n    }\r\n\r\n  \r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"jockeyNotForSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_genes1\",\"type\":\"uint256\"},{\"name\":\"_genes2\",\"type\":\"uint256\"},{\"name\":\"_genes3\",\"type\":\"uint256\"},{\"name\":\"_genes4\",\"type\":\"uint256\"},{\"name\":\"_genes5\",\"type\":\"uint256\"},{\"name\":\"_genes6\",\"type\":\"uint256\"},{\"name\":\"_genes7\",\"type\":\"uint256\"},{\"name\":\"_genes8\",\"type\":\"uint256\"},{\"name\":\"jHair\",\"type\":\"uint256\"},{\"name\":\"jHLenth\",\"type\":\"uint256\"},{\"name\":\"jSkin\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createJockey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ctoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"jockeyHair\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getJockey\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"forSale\",\"type\":\"bool\"},{\"name\":\"birthTime\",\"type\":\"uint256\"},{\"name\":\"_genes1\",\"type\":\"uint256\"},{\"name\":\"_genes2\",\"type\":\"uint256\"},{\"name\":\"_genes3\",\"type\":\"uint256\"},{\"name\":\"_genes4\",\"type\":\"uint256\"},{\"name\":\"_genes5\",\"type\":\"uint256\"},{\"name\":\"_genes6\",\"type\":\"uint256\"},{\"name\":\"_genes7\",\"type\":\"uint256\"},{\"name\":\"_genes8\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"jockeySkin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"jockeyForSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"jockeyPr\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JOCKEY_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"jockeyHLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"jockeyIndexPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"setSaleFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"jockeyFS\",\"outputs\":[{\"name\":\"buyable\",\"type\":\"bool\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"JockeyId\",\"type\":\"uint256\"}],\"name\":\"Birth\",\"type\":\"event\"}]","ContractName":"GetTheJockey","CompilerVersion":"v0.4.21-nightly.2018.2.28+commit.ac5485a2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f21361e6746d686a13e7d8889f74c6619881e6ec7d0050dd0f7b71d6ad825ae5"}]}