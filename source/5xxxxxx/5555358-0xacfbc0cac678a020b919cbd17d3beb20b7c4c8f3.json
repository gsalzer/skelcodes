{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address previousOwner, address newOwner);\r\n\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract StorageBase is Ownable {\r\n\r\n    function withdrawBalance() external onlyOwner returns (bool) {\r\n        // The owner has a method to withdraw balance from multiple contracts together,\r\n        // use send here to make sure even if one withdrawBalance fails the others will still work\r\n        bool res = msg.sender.send(address(this).balance);\r\n        return res;\r\n    }\r\n}\r\n\r\n// owner of ActivityStorage should be ActivityCore contract address\r\ncontract ActivityStorage is StorageBase {\r\n\r\n    struct Activity {\r\n        // accept bid or not\r\n        bool isPause;\r\n        // limit max num of monster buyable per address\r\n        uint16 buyLimit;\r\n        // price (in wei)\r\n        uint128 packPrice;\r\n        // startDate (in seconds)\r\n        uint64 startDate;\r\n        // endDate (in seconds)\r\n        uint64 endDate;\r\n        // packId => address of bid winner\r\n        mapping(uint16 => address) soldPackToAddress;\r\n        // address => number of success bid\r\n        mapping(address => uint16) addressBoughtCount;\r\n    }\r\n\r\n    // limit max activityId to 65536, big enough\r\n    mapping(uint16 => Activity) public activities;\r\n\r\n    function createActivity(\r\n        uint16 _activityId,\r\n        uint16 _buyLimit,\r\n        uint128 _packPrice,\r\n        uint64 _startDate,\r\n        uint64 _endDate\r\n    ) \r\n        external\r\n        onlyOwner\r\n    {\r\n        // activity should not exist and can only be initialized once\r\n        require(activities[_activityId].buyLimit == 0);\r\n\r\n        activities[_activityId] = Activity({\r\n            isPause: false,\r\n            buyLimit: _buyLimit,\r\n            packPrice: _packPrice,\r\n            startDate: _startDate,\r\n            endDate: _endDate\r\n        });\r\n    }\r\n\r\n    function sellPackToAddress(\r\n        uint16 _activityId, \r\n        uint16 _packId, \r\n        address buyer\r\n    ) \r\n        external \r\n        onlyOwner\r\n    {\r\n        Activity storage activity = activities[_activityId];\r\n        activity.soldPackToAddress[_packId] = buyer;\r\n        activity.addressBoughtCount[buyer]++;\r\n    }\r\n\r\n    function pauseActivity(uint16 _activityId) external onlyOwner {\r\n        activities[_activityId].isPause = true;\r\n    }\r\n\r\n    function unpauseActivity(uint16 _activityId) external onlyOwner {\r\n        activities[_activityId].isPause = false;\r\n    }\r\n\r\n    function deleteActivity(uint16 _activityId) external onlyOwner {\r\n        delete activities[_activityId];\r\n    }\r\n\r\n    function getAddressBoughtCount(uint16 _activityId, address buyer) external view returns (uint16) {\r\n        return activities[_activityId].addressBoughtCount[buyer];\r\n    }\r\n\r\n    function getBuyerAddress(uint16 _activityId, uint16 packId) external view returns (address) {\r\n        return activities[_activityId].soldPackToAddress[packId];\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_activityId\",\"type\":\"uint16\"},{\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"getAddressBoughtCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_activityId\",\"type\":\"uint16\"}],\"name\":\"unpauseActivity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_activityId\",\"type\":\"uint16\"},{\"name\":\"_packId\",\"type\":\"uint16\"},{\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"sellPackToAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"activities\",\"outputs\":[{\"name\":\"isPause\",\"type\":\"bool\"},{\"name\":\"buyLimit\",\"type\":\"uint16\"},{\"name\":\"packPrice\",\"type\":\"uint128\"},{\"name\":\"startDate\",\"type\":\"uint64\"},{\"name\":\"endDate\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_activityId\",\"type\":\"uint16\"}],\"name\":\"deleteActivity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_activityId\",\"type\":\"uint16\"},{\"name\":\"_buyLimit\",\"type\":\"uint16\"},{\"name\":\"_packPrice\",\"type\":\"uint128\"},{\"name\":\"_startDate\",\"type\":\"uint64\"},{\"name\":\"_endDate\",\"type\":\"uint64\"}],\"name\":\"createActivity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_activityId\",\"type\":\"uint16\"}],\"name\":\"pauseActivity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_activityId\",\"type\":\"uint16\"},{\"name\":\"packId\",\"type\":\"uint16\"}],\"name\":\"getBuyerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"ActivityStorage","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://964c468b9f0985e000e37ba1c327f723538abeb6f78ff5aeb20d10ffdc24be0e"}]}