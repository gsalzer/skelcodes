{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract Readings {\r\n    \r\n    address private owner;\r\n    mapping (bytes32 => MeterInfo) private meters;\r\n    bool private enabled;\r\n    \r\n    struct MeterInfo {\r\n        uint32 meterId;\r\n        string serialNumber;\r\n        string meterType;\r\n        string latestReading;\r\n    }\r\n    \r\n    function Readings() public {\r\n        owner = msg.sender;\r\n        enabled = true;\r\n    }\r\n \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n    \r\n    function enable() public onlyOwner {\r\n        enabled = true;\r\n    }\r\n    \r\n    function disable() public onlyOwner {\r\n        enabled = false;\r\n    }\r\n    \r\n    function addMeter(uint32 meterId, string serialNumber, string meterType) public onlyOwner {\r\n        require(enabled && meterId > 0);\r\n        meters[keccak256(serialNumber)] = \r\n            MeterInfo({meterId: meterId, serialNumber:serialNumber, meterType:meterType, latestReading:\"\"});\r\n    }\r\n    \r\n    function getMeter(string serialNumber) public view onlyOwner returns(string, uint32, string, string, string, string) {\r\n        bytes32 serialK = keccak256(serialNumber);\r\n        require(enabled && meters[serialK].meterId > 0);\r\n        \r\n        return (\"Id:\", meters[serialK].meterId, \"Серийный номер:\", meters[serialK].serialNumber, \"Тип счетчика:\", meters[serialK].meterType);\r\n    }\r\n    \r\n    function saveReading(string serialNumber, string reading) public onlyOwner {\r\n        bytes32 serialK = keccak256(serialNumber);\r\n        require (enabled && meters[serialK].meterId > 0);\r\n        meters[serialK].latestReading = reading;\r\n    }\r\n    \r\n    function getLatestReading(string serialNumber) public view returns (string, string, string, string, string, string) {\r\n        bytes32 serialK = keccak256(serialNumber);\r\n        require(enabled && meters[serialK].meterId > 0);\r\n        \r\n        return (\r\n            \"Тип счетчика:\", meters[serialK].meterType,\r\n            \"Серийный номер:\", meters[serialK].serialNumber,\r\n            \"Показания:\", meters[serialK].latestReading\r\n        );\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"serialNumber\",\"type\":\"string\"}],\"name\":\"getLatestReading\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"serialNumber\",\"type\":\"string\"}],\"name\":\"getMeter\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"meterId\",\"type\":\"uint32\"},{\"name\":\"serialNumber\",\"type\":\"string\"},{\"name\":\"meterType\",\"type\":\"string\"}],\"name\":\"addMeter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"serialNumber\",\"type\":\"string\"},{\"name\":\"reading\",\"type\":\"string\"}],\"name\":\"saveReading\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Readings","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cb834aa57d1dc784633fd2c014863f656e8c64e0be10e8656e27c883f9253d28"}]}