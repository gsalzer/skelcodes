{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract ERC721Basic {\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);\r\n  event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);\r\n  event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);  \r\n\r\n  function balanceOf(address _owner) public view returns (uint256 _balance);\r\n  function ownerOf(uint256 _tokenId) public view returns (address _owner);\r\n  function exists(uint256 _tokenId) public view returns (bool _exists);\r\n  \r\n  function approve(address _to, uint256 _tokenId) public;\r\n  function getApproved(uint256 _tokenId) public view returns (address _operator);\r\n  \r\n  function setApprovalForAll(address _operator, bool _approved) public;\r\n  function isApprovedForAll(address _owner, address _operator) public view returns (bool);\r\n\r\n  function transferFrom(address _from, address _to, uint256 _tokenId) public;\r\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId) public;  \r\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes _data) public;\r\n}\r\n\r\ncontract ERC721Receiver {\r\n  /**\r\n   * @dev Magic value to be returned upon successful reception of an NFT\r\n   *  Equals to `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`,\r\n   *  which can be also obtained as `ERC721Receiver(0).onERC721Received.selector`\r\n   */\r\n  bytes4 constant ERC721_RECEIVED = 0xf0b9e5ba; \r\n\r\n  /**\r\n   * @notice Handle the receipt of an NFT\r\n   * @dev The ERC721 smart contract calls this function on the recipient\r\n   *  after a `safetransfer`. This function MAY throw to revert and reject the\r\n   *  transfer. This function MUST use 50,000 gas or less. Return of other\r\n   *  than the magic value MUST result in the transaction being reverted.\r\n   *  Note: the contract address is always the message sender.\r\n   * @param _from The sending address \r\n   * @param _tokenId The NFT identifier which is being transfered\r\n   * @param _data Additional data with no specified format\r\n   * @return `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`\r\n   */\r\n  function onERC721Received(address _from, uint256 _tokenId, bytes _data) public returns(bytes4);\r\n}\r\n\r\ncontract DeusMarketplace is Ownable, ERC721Receiver {\r\n  address public owner;\r\n  address public wallet;\r\n  uint256 public fee_percentage;\r\n  ERC721Basic public token;\r\n  \r\n  mapping(uint256 => uint256) public priceList;\r\n  mapping(uint256 => address) public holderList;\r\n  \r\n  event Stored(uint256 indexed id, uint256 price, address seller);\r\n  event Cancelled(uint256 indexed id, address seller);\r\n  event Sold(uint256 indexed id, uint256 price, address seller, address buyer);\r\n  \r\n  event TokenChanged(address old_token, address new_token);\r\n  event WalletChanged(address old_wallet, address new_wallet);\r\n  event FeeChanged(uint256 old_fee, uint256 new_fee);\r\n  \r\n  function DeusMarketplace(address _token, address _wallet) public {\r\n    owner = msg.sender;\r\n    token = ERC721Basic(_token);\r\n    wallet = _wallet;\r\n    fee_percentage = 10;\r\n  }\r\n  \r\n  function setToken(address _token) public onlyOwner {\r\n    address old = token;\r\n    token = ERC721Basic(_token);\r\n    emit TokenChanged(old, token);\r\n  }\r\n  \r\n  function setWallet(address _wallet) public onlyOwner {\r\n    address old = wallet;\r\n    wallet = _wallet;\r\n    emit WalletChanged(old, wallet);\r\n  }\r\n  \r\n  function changeFeePercentage(uint256 _percentage) public onlyOwner {\r\n    uint256 old = fee_percentage;\r\n    fee_percentage = _percentage;\r\n    emit FeeChanged(old, fee_percentage);\r\n  }\r\n  \r\n  function onERC721Received(address _from, uint256 _tokenId, bytes _data) public returns(bytes4) {\r\n    require(msg.sender == address(token));\r\n    \r\n    uint256 _price = uint256(convertBytesToBytes32(_data));\r\n    \r\n    require(_price > 0);\r\n    \r\n    priceList[_tokenId] = _price;\r\n    holderList[_tokenId] = _from;\r\n  \r\n    emit Stored(_tokenId, _price, _from);\r\n    \r\n    return ERC721Receiver.ERC721_RECEIVED;\r\n  }\r\n  \r\n  function cancel(uint256 _id) public returns (bool) {\r\n    require(holderList[_id] == msg.sender);\r\n    \r\n    holderList[_id] = 0x0;\r\n    priceList[_id] = 0;\r\n    \r\n    token.safeTransferFrom(this, msg.sender, _id);\r\n  \r\n    emit Cancelled(_id, msg.sender);\r\n    \r\n    return true;\r\n  }\r\n  \r\n  function buy(uint256 _id) public payable returns (bool) {\r\n    require(priceList[_id] == msg.value);\r\n    \r\n    address oldHolder = holderList[_id];\r\n    uint256 price = priceList[_id];\r\n    \r\n    uint256 toWallet = price / 100 * fee_percentage;\r\n    uint256 toHolder = price - toWallet;\r\n    \r\n    holderList[_id] = 0x0;\r\n    priceList[_id] = 0;\r\n    \r\n    token.safeTransferFrom(this, msg.sender, _id);\r\n    wallet.transfer(toWallet);\r\n    oldHolder.transfer(toHolder);\r\n    \r\n    emit Sold(_id, price, oldHolder, msg.sender);\r\n    \r\n    return true;\r\n  }\r\n  \r\n  function getPrice(uint _id) public view returns(uint256) {\r\n    return priceList[_id];\r\n  }\r\n  \r\n  function convertBytesToBytes32(bytes inBytes) internal returns (bytes32 out) {\r\n    if (inBytes.length == 0) {\r\n      return 0x0;\r\n    }\r\n    \r\n    assembly {\r\n      out := mload(add(inBytes, 32))\r\n    }\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"holderList\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee_percentage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"changeFeePercentage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_wallet\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"Stored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"Cancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"Sold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"old_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"new_token\",\"type\":\"address\"}],\"name\":\"TokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"old_wallet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"new_wallet\",\"type\":\"address\"}],\"name\":\"WalletChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"old_fee\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"new_fee\",\"type\":\"uint256\"}],\"name\":\"FeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"DeusMarketplace","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000b8d1cdcefe47834971067bb0b8249f45433b4157000000000000000000000000b8579b19da2108249d4391d73430abba665515ca","Library":"","SwarmSource":"bzzr://e4b9d17eca82c76382a1d47dcdf64dc4511c75c9cad64d907fe71cd358dda64c"}]}