{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n\r\nlibrary SafeMath {\r\n\t\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tif (a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tuint256 c = a * b;\r\n\t\tassert(c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\t\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a / b;\r\n\t\treturn c;\r\n\t}\r\n\t\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\t\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\ninterface ERC20 {\r\n\tfunction transfer (address _beneficiary, uint256 _tokenAmount) external returns (bool);\r\n\tfunction transferFromICO(address _to, uint256 _value) external returns(bool);\r\n\tfunction balanceOf(address who) external view returns (uint256);\r\n}\r\n\r\ncontract Ownable {\r\n\taddress public owner;\r\n\t\r\n\tconstructor() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\t\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n}\r\n\r\n/*********************************************************************************************************************\r\n* @dev see https://github.com/ethereum/EIPs/issues/20 */\r\n/*************************************************************************************************************/\r\ncontract WhalesburgCrowdsale is Ownable {\r\n\tusing SafeMath for uint256;\r\n\t\r\n\tERC20 public token;\r\n\t\r\n\taddress public constant multisig = 0x5dc5c66eb90dd8c4be285164ca9ea442faa1c2e8;\r\n\taddress constant bounty = 0x96abf0420cffe408ba6bb16699f6748bef01b02b;\r\n\taddress constant privateInvestors = 0x44eedeecc2a6f5f763a18e8876576b29a856d03a;\r\n\taddress developers = 0x8e23cd7ce780e55ace7309b398336443b408c9d4;\r\n\taddress constant founders = 0xd7dadf6149FF75f76f36423CAD1E24c81847E85d;\r\n\t\r\n\tuint256 public startICO = 1528041600; // Sunday, 03-Jun-18 16:00:00 UTC\r\n\tuint256 public endICO = 1530633600;  // Tuesday, 03-Jul-18 16:00:00 UTC\r\n\r\n\tuint256 constant privateSaleTokens = 46988857;\r\n\tuint256 constant foundersReserve = 10000000;\r\n\tuint256 constant developmentReserve = 20500000;\r\n\tuint256 constant bountyReserve = 3500000;\r\n\r\n\tuint256 public individualRoundCap = 1250000000000000000;\r\n\r\n\tuint256 public constant hardCap = 1365000067400000000000; // 1365.0000674 ether\r\n\t\r\n\tuint256 public investors;\r\n\t\r\n\tuint256 public constant buyPrice = 71800000000000; // 0.0000718 Ether\r\n\t\r\n\tbool public isFinalized = false;\r\n\tbool public distribute = false;\r\n\t\r\n\tuint256 public weisRaised;\r\n\t\r\n\tmapping (address => bool) public onChain;\r\n\tmapping (address => bool) whitelist;\r\n\tmapping (address => uint256) public moneySpent;\r\n\t\r\n\taddress[] tokenHolders;\r\n\t\r\n\tevent Finalized();\r\n\tevent Authorized(address wlCandidate, uint256 timestamp);\r\n\tevent Revoked(address wlCandidate, uint256 timestamp);\r\n\t\r\n\tconstructor(ERC20 _token) public {\r\n\t\trequire(_token != address(0));\r\n\t\ttoken = _token;\r\n\t}\r\n\t\r\n\tfunction setVestingAddress(address _newDevPool) public onlyOwner {\r\n\t\tdevelopers = _newDevPool;\r\n\t}\r\n\t\r\n\tfunction distributionTokens() public onlyOwner {\r\n\t\trequire(!distribute);\r\n\t\ttoken.transferFromICO(bounty, bountyReserve*1e18);\r\n\t\ttoken.transferFromICO(privateInvestors, privateSaleTokens*1e18);\r\n\t\ttoken.transferFromICO(developers, developmentReserve*1e18);\r\n\t\ttoken.transferFromICO(founders, foundersReserve*1e18);\r\n\t\tdistribute = true;\r\n\t}\r\n\t\r\n\t/******************-- WhiteList --***************************/\r\n\tfunction authorize(address _beneficiary) public onlyOwner  {\r\n\t\trequire(_beneficiary != address(0x0));\r\n\t\trequire(!isWhitelisted(_beneficiary));\r\n\t\twhitelist[_beneficiary] = true;\r\n\t\temit Authorized(_beneficiary, now);\r\n\t}\r\n\t\r\n\tfunction addManyAuthorizeToWhitelist(address[] _beneficiaries) public onlyOwner {\r\n\t\tfor (uint256 i = 0; i < _beneficiaries.length; i++) {\r\n\t\t\tauthorize(_beneficiaries[i]);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction revoke(address _beneficiary) public  onlyOwner {\r\n\t\twhitelist[_beneficiary] = false;\r\n\t\temit Revoked(_beneficiary, now);\r\n\t}\r\n\t\r\n\tfunction isWhitelisted(address who) public view returns(bool) {\r\n\t\treturn whitelist[who];\r\n\t}\r\n\t\r\n\tfunction finalize() onlyOwner public {\r\n\t\trequire(!isFinalized);\r\n\t\trequire(now >= endICO || weisRaised >= hardCap);\r\n\t\temit Finalized();\r\n\t\tisFinalized = true;\r\n\t\ttoken.transferFromICO(owner, token.balanceOf(this));\r\n\t}\r\n\t\r\n\t/***************************--Payable --*********************************************/\r\n\t\r\n\tfunction () public payable {\r\n\t\tif(isWhitelisted(msg.sender)) {\r\n\t\t\trequire(now >= startICO && now < endICO);\r\n\t\t\tcurrentSaleLimit();\r\n\t\t\tmoneySpent[msg.sender] = moneySpent[msg.sender].add(msg.value);\r\n\t\t\trequire(moneySpent[msg.sender] <= individualRoundCap);\r\n\t\t\tsell(msg.sender, msg.value);\r\n\t\t\tweisRaised = weisRaised.add(msg.value);\r\n\t\t\trequire(weisRaised <= hardCap);\r\n\t\t\tmultisig.transfer(msg.value);\r\n\t\t} else {\r\n\t\t\trevert();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction currentSaleLimit() private {\r\n\t\tif(now >= startICO && now < startICO+7200) {\r\n\t\t\t\r\n\t\t\tindividualRoundCap = 1250000000000000000; // 1.25 ETH\r\n\t\t}\r\n\t\telse if(now >= startICO+7200 && now < startICO+14400) {\r\n\t\t\t\r\n\t\t\tindividualRoundCap = 3750000000000000000; // 3.75 ETH\r\n\t\t}\r\n\t\telse if(now >= startICO+14400 && now < endICO) {\r\n\t\t\t\r\n\t\t\tindividualRoundCap = hardCap; // 1365 ether\r\n\t\t}\r\n\t\telse {\r\n\t\t\trevert();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction sell(address _investor, uint256 amount) private {\r\n\t\tuint256 _amount = amount.mul(1e18).div(buyPrice);\r\n\t\ttoken.transferFromICO(_investor, _amount);\r\n\t\tif (!onChain[msg.sender]) {\r\n\t\t\ttokenHolders.push(msg.sender);\r\n\t\t\tonChain[msg.sender] = true;\r\n\t\t}\r\n\t\tinvestors = tokenHolders.length;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multisig\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFinalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"individualRoundCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"moneySpent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"distributionTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiaries\",\"type\":\"address[]\"}],\"name\":\"addManyAuthorizeToWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weisRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newDevPool\",\"type\":\"address\"}],\"name\":\"setVestingAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"onChain\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distribute\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Finalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wlCandidate\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wlCandidate\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Revoked\",\"type\":\"event\"}]","ContractName":"WhalesburgCrowdsale","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000e2ee1ac57b2e5564522b2de064a47b3f98b0e9c9","Library":"","SwarmSource":"bzzr://f6fbc52fadc8e6fc2914c311d4cce2c3c35599f3f42f19e0ab0c83fa519c5280"}]}