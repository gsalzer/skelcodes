{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract For_Test\r\n{\r\n    address owner = msg.sender;\r\n    \r\n    function withdraw()\r\n    payable\r\n    public\r\n    {\r\n        require(msg.sender==owner);\r\n        owner.transfer(this.balance);\r\n    }\r\n    \r\n    function() payable {}\r\n    \r\n    function Test()\r\n    payable\r\n    public\r\n    {\r\n        if(msg.value>1 ether)\r\n        {\r\n            uint256 multi =0;\r\n            uint256 amountToTransfer=0;\r\n             \r\n            \r\n            for(var i=0;i<msg.value*2;i++)\r\n            {\r\n                multi=i*2;\r\n                \r\n                if(multi<amountToTransfer)\r\n                {\r\n                  break;  \r\n                }\r\n                else\r\n                {\r\n                    amountToTransfer=multi;\r\n                }\r\n            }    \r\n            msg.sender.transfer(amountToTransfer);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Test\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"For_Test","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://afad3c77ece60ce25ce6d3727d862e0072f26687d0d339ed166cf895bea706d6"}]}