{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\ninterface TokenERC20{\r\n    function transfer(address _to, uint256 _value) public;\r\n}\r\ncontract locksdc2{\r\n\r\n    address sdcContractAddr = 0xe85ed250e3d91fde61bf32e22c54f04754e695c5;\r\n    address sdcMainAcc = 0xe7DbCcA8183cb7d67bCFb3DA687Ce7325779c02f;\r\n    TokenERC20 sdcCon = TokenERC20(sdcContractAddr);\r\n    struct accountInputSdc {\r\n        address account;\r\n        uint sdc;\r\n        uint locktime;\r\n        uint createttime;\r\n    }\r\n    \r\n    struct accountOutputSdc {\r\n        address account;\r\n        uint256 sdc;\r\n        uint createttime;\r\n    }\r\n    \r\n    struct accoutInputOutputSdcLog{\r\n        address account;\r\n        uint256 sdc;\r\n        uint locktime;\r\n        bool isIn;\r\n        uint createttime;\r\n    }\r\n    \r\n    mapping(address=>accountInputSdc[]) public accountInputSdcs;\r\n    mapping(address=>accountOutputSdc[]) public accountOutputSdcs;\r\n    mapping(address=>accoutInputOutputSdcLog[]) public accoutInputOutputSdcLogs;\r\n    mapping(address=>uint) public unlockSdc;\r\n    \r\n    event lockLogs(address indexed _controller,address indexed _user,uint256 _sdc,uint _locktime,bool _islock);\r\n    \r\n    function inSdcForAdmin(address _address,uint256 _sdc,uint _locktime) public returns (bool b)   {\r\n        require(msg.sender == sdcMainAcc);\r\n        accountInputSdcs[_address].push(accountInputSdc(_address,_sdc,_locktime,now));\r\n        lockLogs(msg.sender,_address,_sdc,_locktime,true);\r\n        accoutInputOutputSdcLogs[_address].push(accoutInputOutputSdcLog(_address,_sdc,_locktime,true,now));\r\n        return true;\r\n    }\r\n    \r\n    function outSdcForUser(uint256 _sdc) public returns(bool b){\r\n        for(uint i=0;i<accountInputSdcs[msg.sender].length;i++){\r\n            if(now >= accountInputSdcs[msg.sender][i].locktime){\r\n                unlockSdc[msg.sender] = unlockSdc[msg.sender]+accountInputSdcs[msg.sender][i].sdc;\r\n                accountInputSdcs[msg.sender][i] = accountInputSdc(msg.sender,0,999999999999,now);\r\n            }\r\n        }\r\n        require(unlockSdc[msg.sender]>=_sdc);\r\n        sdcCon.transfer(msg.sender,_sdc);   \r\n        unlockSdc[msg.sender] = unlockSdc[msg.sender]-_sdc;\r\n        lockLogs(msg.sender,msg.sender,_sdc,now,false);\r\n        accountOutputSdcs[msg.sender].push(accountOutputSdc(msg.sender,_sdc,now));\r\n        accoutInputOutputSdcLogs[msg.sender].push(accoutInputOutputSdcLog(msg.sender,_sdc,999999999999,false,now));\r\n        return true;\r\n    }\r\n\r\n   function nowInSeconds() constant public returns (uint){\r\n        return now;\r\n    }\r\n    \r\n    function getAccountInputSdcslength() constant public returns(uint b){\r\n        return accountInputSdcs[msg.sender].length;\r\n    }\r\n    function getAccountOutputSdcslength() constant public returns(uint b){\r\n        return accountOutputSdcs[msg.sender].length;\r\n    }\r\n    function getLockSdc() constant public returns(uint b){\r\n        uint tmpLockSdc = 0;\r\n        for(uint i=0;i<accountInputSdcs[msg.sender].length;i++){\r\n            if(now < accountInputSdcs[msg.sender][i].locktime){\r\n                tmpLockSdc = tmpLockSdc + accountInputSdcs[msg.sender][i].sdc;\r\n            }\r\n        }\r\n        return tmpLockSdc;\r\n    }\r\n    function getUnlockSdc() constant public returns(uint b){\r\n        uint tmpUnlockSdc = unlockSdc[msg.sender];\r\n        for(uint i=0;i<accountInputSdcs[msg.sender].length;i++){\r\n            if(now >= accountInputSdcs[msg.sender][i].locktime){\r\n                tmpUnlockSdc = tmpUnlockSdc + accountInputSdcs[msg.sender][i].sdc;\r\n            }\r\n        }\r\n        return tmpUnlockSdc;\r\n    }\r\n    function insetMoney() public returns(bool b){\r\n        for(uint i=0;i<accountInputSdcs[msg.sender].length;i++){\r\n            if(now >= accountInputSdcs[msg.sender][i].locktime){\r\n                unlockSdc[msg.sender] = unlockSdc[msg.sender]+accountInputSdcs[msg.sender][i].sdc;\r\n                accountInputSdcs[msg.sender][i] = accountInputSdc(msg.sender,0,999999999999,now);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    function() payable { }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_sdc\",\"type\":\"uint256\"},{\"name\":\"_locktime\",\"type\":\"uint256\"}],\"name\":\"inSdcForAdmin\",\"outputs\":[{\"name\":\"b\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAccountOutputSdcslength\",\"outputs\":[{\"name\":\"b\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accoutInputOutputSdcLogs\",\"outputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"sdc\",\"type\":\"uint256\"},{\"name\":\"locktime\",\"type\":\"uint256\"},{\"name\":\"isIn\",\"type\":\"bool\"},{\"name\":\"createttime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"insetMoney\",\"outputs\":[{\"name\":\"b\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nowInSeconds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accountInputSdcs\",\"outputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"sdc\",\"type\":\"uint256\"},{\"name\":\"locktime\",\"type\":\"uint256\"},{\"name\":\"createttime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAccountInputSdcslength\",\"outputs\":[{\"name\":\"b\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accountOutputSdcs\",\"outputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"sdc\",\"type\":\"uint256\"},{\"name\":\"createttime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUnlockSdc\",\"outputs\":[{\"name\":\"b\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"unlockSdc\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sdc\",\"type\":\"uint256\"}],\"name\":\"outSdcForUser\",\"outputs\":[{\"name\":\"b\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLockSdc\",\"outputs\":[{\"name\":\"b\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_sdc\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_locktime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_islock\",\"type\":\"bool\"}],\"name\":\"lockLogs\",\"type\":\"event\"}]","ContractName":"locksdc2","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d378e55887773bffc84f03b3c2563d38e0744fba06f4eaf529f5433efa29ac6e"}]}