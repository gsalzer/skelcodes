{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\n//EKN: deploy with Current version:0.4.16+commit.d7661dd9.Emscripten.clang\r\n\r\n// ================= Ownable Contract start =============================\r\n/*\r\n * Ownable\r\n *\r\n * Base contract with an owner.\r\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n}\r\n\r\ncontract SafeMath {\r\n\r\n  function safeAdd(uint256 x, uint256 y) internal returns(uint256) {\r\n    uint256 z = x + y;\r\n    assert((z >= x) && (z >= y));\r\n    return z;\r\n  }\r\n\r\n  function safeSubtract(uint256 x, uint256 y) internal returns(uint256) {\r\n    assert(x >= y);\r\n    uint256 z = x - y;\r\n    return z;\r\n  }\r\n\r\n  function safeMult(uint256 x, uint256 y) internal returns(uint256) {\r\n    uint256 z = x * y;\r\n    assert((x == 0)||(z/x == y));\r\n    return z;\r\n  }\r\n}\r\n\r\n/*\r\n * ERC20 interface\r\n * see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function allowance(address owner, address spender) constant returns (uint);\r\n\r\n  function transfer(address to, uint value) returns (bool ok);\r\n  function transferFrom(address from, address to, uint value) returns (bool ok);\r\n  function approve(address spender, uint value) returns (bool ok);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n  event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\ncontract StandardToken is ERC20, SafeMath {\r\n\r\n  /**\r\n  * @dev Fix for the ERC20 short address attack.\r\n   */\r\n  modifier onlyPayloadSize(uint size) {\r\n    require(msg.data.length >= size + 4) ;\r\n    _;\r\n  }\r\n\r\n  mapping(address => uint) balances;\r\n  mapping (address => mapping (address => uint)) allowed;\r\n\r\n  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32)  returns (bool success){\r\n    balances[msg.sender] = safeSubtract(balances[msg.sender], _value);\r\n    balances[_to] = safeAdd(balances[_to], _value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) returns (bool success) {\r\n    var _allowance = allowed[_from][msg.sender];\r\n\r\n    balances[_to] = safeAdd(balances[_to], _value);\r\n    balances[_from] = safeSubtract(balances[_from], _value);\r\n    allowed[_from][msg.sender] = safeSubtract(_allowance, _value);\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function balanceOf(address _owner) constant returns (uint balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  function approve(address _spender, uint _value) returns (bool success) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) constant returns (uint remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n}\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n  /**\r\n  * @dev modifier to allow actions only when the contract IS paused\r\n  */\r\n  modifier whenNotPaused() {\r\n    require (!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n  * @dev modifier to allow actions only when the contract IS NOT paused\r\n  */\r\n  modifier whenPaused {\r\n    require (paused) ;\r\n    _;\r\n  }\r\n\r\n  /**\r\n  * @dev called by the owner to pause, triggers stopped state\r\n  */\r\n  function pause() onlyOwner whenNotPaused returns (bool) {\r\n    paused = true;\r\n    Pause();\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @dev called by the owner to unpause, returns to normal state\r\n  */\r\n  function unpause() onlyOwner whenPaused returns (bool) {\r\n    paused = false;\r\n    Unpause();\r\n    return true;\r\n  }\r\n}\r\n\r\n// ================= ZIONToken  start =======================\r\n\r\ncontract IcoToken is SafeMath, StandardToken, Pausable {\r\n  string public name;\r\n  string public symbol;\r\n  uint256 public decimals;\r\n  string public version;\r\n  address public icoContract;\r\n  address public developer_BSR;\r\n  address public developer_EKN;\r\n\r\n  //EKN: Reserve initial amount tokens for future ZION projects / Exchanges\r\n  //40 million\r\n  uint256 public constant INITIAL_SUPPLY = 40000000 * 10**18;\r\n  //EKN: Developers share\r\n  //10 million\r\n  uint256 public constant DEVELOPER_SUPPLY = 10000000 * 10**18;\r\n\r\n  function IcoToken() {\r\n\r\n    name = \"ZION Token\";\r\n    symbol = \"ZION\";\r\n    decimals = 18;\r\n    version = \"1.0\";\r\n    developer_BSR = 0xAEf46875Eb00Ce14B5830b8de2e05aB79dC625d9;\r\n    developer_EKN = 0x1dEB6F7f7F2c4807cE287A8627681044547AB00A;\r\n\r\n    balances[msg.sender] = INITIAL_SUPPLY;\r\n    balances[developer_BSR] = DEVELOPER_SUPPLY / 2;\r\n    balances[developer_EKN] = DEVELOPER_SUPPLY / 2;\r\n\r\n    totalSupply = INITIAL_SUPPLY + DEVELOPER_SUPPLY;\r\n\r\n  }\r\n\r\n  function transfer(address _to, uint _value) whenNotPaused returns (bool success) {\r\n    return super.transfer(_to,_value);\r\n  }\r\n\r\n  function approve(address _spender, uint _value) whenNotPaused returns (bool success) {\r\n    return super.approve(_spender,_value);\r\n  }\r\n\r\n  function balanceOf(address _owner) constant returns (uint balance) {\r\n    return super.balanceOf(_owner);\r\n  }\r\n\r\n  function setIcoContract(address _icoContract) onlyOwner {\r\n    if (_icoContract != address(0)) {\r\n      icoContract = _icoContract;\r\n    }\r\n  }\r\n\r\n  function sell(address _recipient, uint256 _value) whenNotPaused returns (bool success) {\r\n      assert(_value > 0);\r\n      require(msg.sender == icoContract);\r\n\r\n      balances[_recipient] += _value;\r\n      totalSupply += _value;\r\n\r\n      Transfer(0x0, owner, _value);\r\n      Transfer(owner, _recipient, _value);\r\n      return true;\r\n  }\r\n}\r\n\r\n// ================= Sale Contract Start ====================\r\n\r\ncontract IcoContract is SafeMath, Pausable {\r\n  IcoToken public ico;\r\n\r\n  uint256 public tokenCreationCap;\r\n  uint256 public totalSupply;\r\n\r\n  address public ethFundDeposit;\r\n  address public tokenAddress;\r\n\r\n  uint256 public fundingStartTime;\r\n\r\n  bool public isFinalized;\r\n  uint256 public tokenExchangeRate;\r\n\r\n  event LogCreateICO(address from, address to, uint256 val);\r\n\r\n  function CreateICO(address to, uint256 val) internal returns (bool success) {\r\n    LogCreateICO(0x0, to, val);\r\n    return ico.sell(to, val);\r\n  }\r\n\r\n  function IcoContract(\r\n    address _ethFundDeposit,\r\n    address _tokenAddress,\r\n    uint256 _tokenCreationCap,\r\n    uint256 _tokenExchangeRate,\r\n    uint256 _fundingStartTime\r\n\r\n  )\r\n  {\r\n    ethFundDeposit = _ethFundDeposit;         //ETH deposit Address\r\n    tokenAddress = _tokenAddress;             //ERC20 Token address\r\n    tokenCreationCap = _tokenCreationCap;     //\"100000000000000000000000000\", // 100.000.000 Token\r\n    tokenExchangeRate = _tokenExchangeRate;   //\"5000\", // Rate: 1 ETH = 5000 Token\r\n    fundingStartTime = _fundingStartTime;     //\"1514764800\", // StartTime 01/01/2018 (unixtimestamp.com)\r\n    ico = IcoToken(tokenAddress);\r\n    isFinalized = false;\r\n\r\n  }\r\n\r\n  function () payable {\r\n    createTokens(msg.sender, msg.value);\r\n  }\r\n\r\n  /// @dev Accepts ether and creates new ICO tokens.\r\n  function createTokens(address _beneficiary, uint256 _value) internal whenNotPaused {\r\n    require (tokenCreationCap > totalSupply);\r\n    require (now >= fundingStartTime);\r\n    require (!isFinalized);\r\n\r\n    uint256 tokens = safeMult(_value, tokenExchangeRate);\r\n    uint256 checkedSupply = safeAdd(totalSupply, tokens);\r\n\r\n    if (tokenCreationCap < checkedSupply) {\r\n      uint256 tokensToAllocate = safeSubtract(tokenCreationCap, totalSupply);\r\n      uint256 tokensToRefund   = safeSubtract(tokens, tokensToAllocate);\r\n      totalSupply = tokenCreationCap;\r\n      uint256 etherToRefund = tokensToRefund / tokenExchangeRate;\r\n\r\n      require(CreateICO(_beneficiary, tokensToAllocate));\r\n      msg.sender.transfer(etherToRefund);\r\n      ethFundDeposit.transfer(this.balance);\r\n      return;\r\n    }\r\n\r\n    totalSupply = checkedSupply;\r\n\r\n    require(CreateICO(_beneficiary, tokens));\r\n    ethFundDeposit.transfer(this.balance);\r\n  }\r\n\r\n  /// @dev Ends the funding period and sends the ETH home\r\n  function finalize() external onlyOwner {\r\n    require (!isFinalized);\r\n    // move to operational\r\n    isFinalized = true;\r\n    ethFundDeposit.transfer(this.balance);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEVELOPER_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"developer_BSR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"developer_EKN\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_icoContract\",\"type\":\"address\"}],\"name\":\"setIcoContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"IcoToken","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://43a0daca631782a2c84f33693f72d488fc4d6b3cba17fb4af70f1d94af01d2fa"}]}