{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\n\r\n/**\r\n\r\n * @title Ownable\r\n\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n\r\n */\r\n\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n\r\n\r\n\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n\r\n   * account.\r\n\r\n   */\r\n\r\n  function Ownable () public {owner = msg.sender;\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n\r\n   * @dev Throws if called by any account other than the owner.\r\n\r\n   */\r\n\r\n  modifier onlyOwner() {\r\n\r\n    require(msg.sender == owner);\r\n\r\n    _;\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n\r\n   * @param newOwner The address to transfer ownership to.\r\n\r\n   */\r\n\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n\r\n    require(newOwner != address(0));\r\n\r\n    OwnershipTransferred(owner, newOwner);\r\n\r\n    owner = newOwner;\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\ncontract token {function transfer (address receiver, uint _amount) public { } }\r\n\r\n\r\n\r\ncontract Distribute is Ownable{\r\n\r\n  \r\n\r\n    token tokenReward = token(0xdd007278B667F6bef52fD0a4c23604aA1f96039a);\r\n\r\n\r\n\r\n  function register(address[] _addrs) public onlyOwner{\r\n\r\n    for(uint i = 0; i < _addrs.length; ++i){\r\n\r\n      tokenReward.transfer(_addrs[i],20*10**8);\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  function withdraw(uint _amount) public onlyOwner {\r\n\r\n    tokenReward.transfer(owner,_amount);\r\n\r\n  }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrs\",\"type\":\"address[]\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Distribute","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://88bd0fb635325427b08bf28c8c77c214c9fc3a769b17c20969dcae2908a6c161"}]}