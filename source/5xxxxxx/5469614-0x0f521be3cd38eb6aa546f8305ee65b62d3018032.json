{"status":"1","message":"OK","result":[{"SourceCode":"contract SFT {\r\n\r\n    string public name = \"Smart First Time 4 Way Distributor\";\r\n    uint8 public decimals = 18;\r\n    string public symbol = \"SFT4\";\r\n\r\n    address public dev = 0xC96CfB18C39DC02FBa229B6EA698b1AD5576DF4c;\r\n    address public foundation = 0x6eBe6E38ba1bDa9131C785f6491B2C8374B968fE;\r\n    address public management = 0x12CD0732249F4c14c7E11B397E28dEF3CF276251;\r\n    address public agency = 0xD02D2cDA1fA2250f809d6E9025e92d30AEd6C002;\r\n\r\n    function SFT() {\r\n\r\n    }\r\n\r\n    // automatically distribute incoming funds to the 4 addresses equally\r\n    function () payable public {\r\n        require(msg.value > 0);\r\n        uint256 share = (msg.value * 2500) / 10000; // split the incoming 4 ways\r\n        dev.transfer(share);\r\n        foundation.transfer(share);\r\n        management.transfer(share);\r\n        agency.transfer(share);\r\n    }\r\n\r\n    function changeDev (address _receiver) public\r\n    {\r\n        require(msg.sender == dev);\r\n        dev = _receiver;\r\n    }\r\n\r\n    function changeFoundation (address _receiver) public\r\n    {\r\n        require(msg.sender == foundation);\r\n        foundation = _receiver;\r\n    }\r\n\r\n    function changeManagement (address _receiver) public\r\n    {\r\n        require(msg.sender == management);\r\n        management = _receiver;\r\n    }\r\n\r\n    function changeAgency (address _receiver) public\r\n    {\r\n        require(msg.sender == agency);\r\n        agency = _receiver;\r\n    }\r\n\r\n    // just in case\r\n    function safeWithdrawal() public {\r\n        uint256 split = (this.balance * 2500) / 10000; // split the incoming 4 ways\r\n        dev.transfer(split);\r\n        foundation.transfer(split);\r\n        management.transfer(split);\r\n        agency.transfer(split);\r\n    }\r\n\r\n    function add(uint a, uint b) internal pure returns (uint) {\r\n        uint c = a + b;\r\n        require(c >= a);\r\n        return c;\r\n    }\r\n\r\n    function div(uint a, uint b) internal pure returns (uint) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"agency\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foundation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"changeFoundation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"changeAgency\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"changeDev\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"management\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"changeManagement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"SFT","CompilerVersion":"v0.4.22+commit.4cb486ee","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://94534ae528225edb0536374cdcb1ba520f95ced60136957ecf4ee40edd20b909"}]}