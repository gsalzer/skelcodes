{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.2;\r\n\r\ncontract MyInterface{\r\n\tfunction zGetGameBalance() public view returns (uint);\r\n\tfunction zReceiveFunds() payable public;\r\n\tfunction zSynchGameID(uint nIndex, uint nExpiration) public;\r\n}\r\n\r\ncontract FantasySports {\r\n\taddress gadrOwner;\r\n\tuint gnGameID = 0;\r\n\taddress gadrOtherContract;\r\n\tMyInterface gobjOtherContract;\r\n\tuint constant gcnWinMultipler = 195;\r\n\tuint constant gcnTransferFee = .0001 ether;\r\n\r\n\tmapping(uint => address[]) gmapGame_addresses;\r\n\tmapping(uint => uint[]) gmapGame_wagers;\r\n\tmapping(uint => uint[]) gmapGame_runningbalances;\r\n\tmapping(uint => uint) gmapGame_balance;\r\n\tmapping(uint => uint) gmapGame_expiration;\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(gadrOwner == msg.sender);\r\n\t\t_;\r\n\r\n\t}\r\n\r\n\tmodifier onlyOtherContract() {\r\n\t\trequire(gadrOtherContract == msg.sender);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction FantasySports () public {\r\n\t\tgadrOwner = msg.sender;\r\n\t}\r\n\r\n\tfunction zReceiveFunds() payable public {\r\n\t}\r\n\r\n\tfunction() payable public {\r\n\t\trequire(msg.value >= .001 ether && block.timestamp < gmapGame_expiration[gnGameID]);\r\n\t\tgmapGame_addresses[gnGameID].push(msg.sender);\r\n\t\tgmapGame_wagers[gnGameID].push(msg.value);\r\n\t\tgmapGame_balance[gnGameID] +=msg.value;\r\n\t\tgmapGame_runningbalances[gnGameID].push(gmapGame_balance[gnGameID]);\r\n\t}\r\n\r\n\tfunction zSynchGameID(uint nIndex, uint nExpiration) onlyOtherContract() public {\r\n\t\tgnGameID = nIndex;\r\n\t\tgmapGame_expiration[gnGameID] = nExpiration;\r\n\t}\r\n\r\n\tfunction zSetGameID(uint nIndex, uint nExpiration) onlyOwner() public {\r\n\t\tgnGameID = nIndex;\r\n\t\tgmapGame_expiration[gnGameID] = nExpiration;\r\n\t\tgobjOtherContract.zSynchGameID(gnGameID, nExpiration);\r\n\t}\r\n\r\n\tfunction zIncrementGameID(uint nExpiration) onlyOwner() public {\r\n\t\tgnGameID++;\r\n\t\tgmapGame_expiration[gnGameID] = nExpiration;\r\n\t\tgobjOtherContract.zSynchGameID(gnGameID, nExpiration);\r\n\t}\r\n\r\n\tfunction zGetGameID() onlyOwner() public view returns (uint) {\r\n\t\treturn gnGameID;\r\n\t}\r\n\r\n\tfunction setOwner (address _owner) onlyOwner() public {\r\n\t\tgadrOwner = _owner;\r\n\t}\r\n\r\n\tfunction setOtherContract (address _othercontract) onlyOwner() public {\r\n\t\tgadrOtherContract = _othercontract;\r\n\t\tgobjOtherContract = MyInterface(gadrOtherContract);\r\n\t}\r\n\r\n\tfunction zgetOwner() onlyOwner() public view returns (address) {\r\n\t\treturn gadrOwner;\r\n\t}\r\n\r\n\tfunction zgetOtherContract() onlyOwner() public view returns (address) {\r\n\t\treturn gadrOtherContract;\r\n\t}\r\n\r\n\tfunction zgetPlayers(uint nIDOfGame) onlyOwner() public view returns (uint, uint, address[],uint[], uint[]) {\r\n\t\treturn (gmapGame_balance[nIDOfGame], gmapGame_expiration[nIDOfGame], gmapGame_addresses[nIDOfGame], gmapGame_wagers[nIDOfGame],gmapGame_runningbalances[nIDOfGame]);\r\n\t}\r\n\r\n\tfunction zGetGameBalance() onlyOtherContract() public view returns (uint) {\r\n\t\treturn (gmapGame_balance[gnGameID]);\r\n\t}\r\n\r\n\tfunction zRefundAllPlayers() onlyOwner() public {\r\n\t\tfor (uint i = 0; i < gmapGame_addresses[gnGameID].length; i++) {\r\n\t\t\tgmapGame_addresses[gnGameID][i].transfer(gmapGame_wagers[gnGameID][i] - gcnTransferFee);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction zGetBothContractBalances() public view onlyOwner() returns (uint, uint) {\r\n\t\tuint nOtherBalance = gobjOtherContract.zGetGameBalance();\r\n\t\treturn (gmapGame_balance[gnGameID], nOtherBalance);\r\n\t}\r\n\r\n\tfunction zTransferFundsToOtherContract(uint nAmount) onlyOwner() public {\r\n\t\tgobjOtherContract.zReceiveFunds.value(nAmount)();\r\n\t}\r\n\r\n\tfunction zTransferFundsToOwner(uint nAmount) onlyOwner() public {\r\n\t\tgadrOwner.transfer(nAmount);\r\n\t}\r\n\r\n\tfunction zTransferLosingBets() onlyOwner() public {\r\n\t\tif (gmapGame_balance[gnGameID] != 0) {\r\n\t\t\tuint nOtherBalance = gobjOtherContract.zGetGameBalance();\r\n\t\t\tif (gmapGame_balance[gnGameID] <= nOtherBalance) {\r\n\t\t\t\tgobjOtherContract.zReceiveFunds.value(gmapGame_balance[gnGameID])();\r\n\t\t\t} else {\r\n\t\t\t\tif (nOtherBalance != 0) {\r\n\t\t\t\t\tgobjOtherContract.zReceiveFunds.value(nOtherBalance)();\r\n\t\t\t\t}\r\n\t\t\t\tfor (uint i = 0; i < gmapGame_addresses[gnGameID].length; i++) {\r\n\t\t\t\t\tif (gmapGame_runningbalances[gnGameID][i] > nOtherBalance) {\r\n\t\t\t\t\t\tif (gmapGame_runningbalances[gnGameID][i] - nOtherBalance < gmapGame_wagers[gnGameID][i]) {\r\n\t\t\t\t\t\t\tgmapGame_addresses[gnGameID][i].transfer( (gmapGame_runningbalances[gnGameID][i] - nOtherBalance) - gcnTransferFee);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tgmapGame_addresses[gnGameID][i].transfer(gmapGame_wagers[gnGameID][i] - gcnTransferFee);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction zTransferWinningBets() onlyOwner() public {\r\n\t\tif (gmapGame_balance[gnGameID] != 0) {\r\n\t\t\tuint nPreviousRunningBalance = 0;\r\n\t\t\tuint nOtherBalance = gobjOtherContract.zGetGameBalance();\r\n\t\t\tfor (uint i = 0; i < gmapGame_addresses[gnGameID].length; i++) {\r\n\t\t\t\tif (gmapGame_runningbalances[gnGameID][i] <= nOtherBalance) {\r\n\t\t\t\t\tgmapGame_addresses[gnGameID][i].transfer((gmapGame_wagers[gnGameID][i] * gcnWinMultipler / 100) - gcnTransferFee);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (nPreviousRunningBalance < nOtherBalance) {\r\n\t\t\t\t\t\tgmapGame_addresses[gnGameID][i].transfer(((nOtherBalance - nPreviousRunningBalance) * gcnWinMultipler / 100) + (gmapGame_wagers[gnGameID][i] - (nOtherBalance - nPreviousRunningBalance)) - gcnTransferFee);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgmapGame_addresses[gnGameID][i].transfer(gmapGame_wagers[gnGameID][i] - gcnTransferFee);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnPreviousRunningBalance = gmapGame_runningbalances[gnGameID][i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction zKill() onlyOwner() public {\r\n\t\tselfdestruct(gadrOwner);\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"zTransferLosingBets\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nAmount\",\"type\":\"uint256\"}],\"name\":\"zTransferFundsToOtherContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"zGetGameBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"zGetGameID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nIndex\",\"type\":\"uint256\"},{\"name\":\"nExpiration\",\"type\":\"uint256\"}],\"name\":\"zSetGameID\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"zRefundAllPlayers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_othercontract\",\"type\":\"address\"}],\"name\":\"setOtherContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"zgetOtherContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"zTransferWinningBets\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"zGetBothContractBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"zgetOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nAmount\",\"type\":\"uint256\"}],\"name\":\"zTransferFundsToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nIDOfGame\",\"type\":\"uint256\"}],\"name\":\"zgetPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"zReceiveFunds\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nExpiration\",\"type\":\"uint256\"}],\"name\":\"zIncrementGameID\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nIndex\",\"type\":\"uint256\"},{\"name\":\"nExpiration\",\"type\":\"uint256\"}],\"name\":\"zSynchGameID\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"zKill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"FantasySports","CompilerVersion":"v0.4.20-nightly.2018.1.6+commit.2548228b","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://51bdc016d09722ee4ea71a84f7fd00372d2bbd6b63d2e5c23ffd7852f972803c"}]}