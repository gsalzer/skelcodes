{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract PrivateDeposit\r\n{\r\n    mapping (address => uint) public balances;\r\n        \r\n    uint public MinDeposit = 1 ether;\r\n    address public owner;\r\n    \r\n    Log TransferLog;\r\n    \r\n    modifier onlyOwner() {\r\n        require(tx.origin == owner);\r\n        _;\r\n    }    \r\n    \r\n    function PrivateDeposit()\r\n    {\r\n        owner = msg.sender;\r\n        TransferLog = new Log();\r\n    }\r\n    \r\n    \r\n    \r\n    function setLog(address _lib) onlyOwner\r\n    {\r\n        TransferLog = Log(_lib);\r\n    }    \r\n    \r\n    function Deposit()\r\n    public\r\n    payable\r\n    {\r\n        if(msg.value >= MinDeposit)\r\n        {\r\n            balances[msg.sender]+=msg.value;\r\n            TransferLog.AddMessage(msg.sender,msg.value,\"Deposit\");\r\n        }\r\n    }\r\n    \r\n    function CashOut(uint _am)\r\n    {\r\n        if(_am<=balances[msg.sender])\r\n        {            \r\n            if(msg.sender.call.value(_am)())\r\n            {\r\n                balances[msg.sender]-=_am;\r\n                TransferLog.AddMessage(msg.sender,_am,\"CashOut\");\r\n            }\r\n        }\r\n    }\r\n    \r\n    function() public payable{}    \r\n    \r\n}\r\n\r\ncontract Log \r\n{\r\n   \r\n    struct Message\r\n    {\r\n        address Sender;\r\n        string  Data;\r\n        uint Val;\r\n        uint  Time;\r\n    }\r\n    \r\n    Message[] public History;\r\n    \r\n    Message LastMsg;\r\n    \r\n    function AddMessage(address _adr,uint _val,string _data)\r\n    public\r\n    {\r\n        LastMsg.Sender = _adr;\r\n        LastMsg.Time = now;\r\n        LastMsg.Val = _val;\r\n        LastMsg.Data = _data;\r\n        History.push(LastMsg);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"MinDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"setLog\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_am\",\"type\":\"uint256\"}],\"name\":\"CashOut\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"PrivateDeposit","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1e308e813b2ae60a85045adb28b2f76ffacd53327b3f8d9a79d6432699ff0f9f"}]}