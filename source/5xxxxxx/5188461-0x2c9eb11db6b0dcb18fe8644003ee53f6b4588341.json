{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract SimpleEthBank {\r\n    address public director;\r\n    mapping (address => uint) accountBalances;\r\n    mapping (address => bool) accountExists;\r\n\r\n    event Deposit(address from, uint amount);\r\n    event Withdrawal(address from, uint amount);\r\n    event Transfer(address from, address to, uint amount);\r\n\r\n    function SimpleEthBank() {\r\n        director = msg.sender;\r\n    }\r\n\r\n    function() public payable {\r\n        deposit();\r\n    }\r\n\r\n    function getBalanceOf(address addr) public constant returns(int) {\r\n        if (accountExists[addr])\r\n            return int(accountBalances[addr]);\r\n        return -1;\r\n    }\r\n\r\n    function deposit() public payable {\r\n        require(msg.value >= 0.5 ether);\r\n        accountBalances[msg.sender] += msg.value;\r\n        accountExists[msg.sender] = true;\r\n        Deposit(msg.sender, msg.value);\r\n    }\r\n    function withdraw(uint amount) public {\r\n        require(accountExists[msg.sender] && accountBalances[msg.sender] >= amount);\r\n        accountBalances[msg.sender] -= amount;\r\n        msg.sender.call.value(amount);\r\n        Withdrawal(msg.sender, amount);\r\n    }\r\n\r\n    function transfer(address to, uint amount) public {\r\n        require(accountExists[msg.sender] && accountExists[to] && accountBalances[msg.sender] >= amount);\r\n        accountBalances[to] += amount;\r\n        Transfer(msg.sender, to, amount);\r\n    }\r\n\r\n    function kill() public {\r\n        require(msg.sender == director);\r\n        selfdestruct(director);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"director\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"SimpleEthBank","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://41e9519e5389b17dee923611ea9e0239868f2ec2474623f36e49abb17465b246"}]}