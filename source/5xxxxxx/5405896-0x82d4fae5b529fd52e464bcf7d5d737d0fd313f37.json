{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\n// This is my best contract so far! Send 69 wei to a random address Wow!\r\n// If you send you get even added to the random pool! Wow!\r\n// If you pay too much Wei it even refunds you the excess Wei! Wow!\r\n\r\ncontract Send69Wei{\r\n    uint256 constant HowMuchWei = 69;\r\n    mapping(uint256=>address) targets;\r\n    uint256 maxval=1;\r\n    \r\n    function Send69Wei() public {\r\n        targets[0] = msg.sender;\r\n    }\r\n    \r\n    function() payable public {\r\n        if (msg.value>=HowMuchWei){\r\n            uint256 ret = msg.value-(HowMuchWei);//69;\r\n            msg.sender.transfer(ret);\r\n            \r\n            // get rand \r\n            uint256 seed = uint256(block.blockhash(block.number - 1));\r\n            uint256 seed1 = uint256(block.timestamp);\r\n            uint256 seed2 = uint256(block.coinbase);\r\n            uint256 id = uint256(keccak256(seed+seed1+seed2)) % maxval;\r\n            \r\n            address who = targets[id];\r\n            who.transfer(HowMuchWei);\r\n            targets[maxval] = msg.sender;    \r\n            \r\n            maxval++;\r\n        }\r\n        else{\r\n            revert();\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Send69Wei","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f5f1177e36230d0f884de4f07681a37d4e488731b4a0e3920e54f43ed907caa8"}]}