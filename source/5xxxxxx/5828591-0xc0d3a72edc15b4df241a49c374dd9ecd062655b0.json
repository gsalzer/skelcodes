{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n/* ==================================================================== */\r\n/* Copyright (c) 2018 The Priate Conquest Project.  All rights reserved.\r\n/* \r\n/* https://www.pirateconquest.com One of the world's slg games of blockchain \r\n/*  \r\n/* authors rainy@livestar.com/Jonny.Fu@livestar.com\r\n/*                 \r\n/* ==================================================================== */\r\ninterface CaptainTokenInterface {\r\n  function CreateCaptainToken(address _owner,uint256 _price, uint32 _captainId, uint32 _color,uint32 _atk, uint32 _defense,uint32 _level,uint256 _exp) public;\r\n}\r\n\r\ninterface CaptainGameConfigInterface {\r\n  function getCardInfo(uint32 cardId) external constant returns (uint32,uint32,uint32, uint32,uint32,uint256,uint256);\r\n  function getSellable(uint32 _captainId) external returns (bool);\r\n}\r\ncontract CaptainSell {\r\n\r\n  address devAddress;\r\n  function CaptainSell() public {\r\n    devAddress = msg.sender;\r\n  }\r\n\r\n  CaptainTokenInterface public captains;\r\n  CaptainGameConfigInterface public config; \r\n  /// @dev The BuyToken event is fired whenever a token is sold.\r\n  event BuyToken(uint256 tokenId, uint256 oldPrice, address prevOwner, address winner);\r\n  \r\n  //mapping\r\n  mapping(uint32 => uint256) captainToCount; \r\n  /// @notice No tipping!\r\n  /// @dev Reject all Ether from being sent here, unless it's from one of the\r\n  ///  two auction contracts. (Hopefully, we can prevent user accidents.)\r\n  function() external payable {\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == devAddress);\r\n    _;\r\n  }\r\n\r\n  //setting configuration\r\n  function setGameConfigContract(address _address) external onlyOwner {\r\n    config = CaptainGameConfigInterface(_address);\r\n  }\r\n\r\n  //setting configuration\r\n  function setCaptainTokenContract(address _address) external onlyOwner {\r\n    captains = CaptainTokenInterface(_address);\r\n  }\r\n\r\n\r\n  function prepurchase(uint32 _captainId) external payable {\r\n    uint32 color;\r\n    uint32 atk;\r\n    uint32 defense;\r\n    uint256 price;\r\n    uint256 captainCount;\r\n    uint256 SellCount = captainToCount[_captainId];\r\n    (color,atk,,,defense,price,captainCount) = config.getCardInfo(_captainId);\r\n    require(config.getSellable(_captainId) == true);\r\n    SellCount += 1;\r\n    require(SellCount<=captainCount);\r\n\r\n    // Safety check to prevent against an unexpected 0x0 default.\r\n    require(msg.sender != address(0));\r\n    \r\n    // Making sure sent amount is greater than or equal to the sellingPrice\r\n    require(msg.value >= price);\r\n    captains.CreateCaptainToken(msg.sender,price,_captainId,color,atk, defense,1,0);\r\n    captainToCount[_captainId] = SellCount;\r\n\r\n    //transfer\r\n    devAddress.transfer(msg.value);\r\n    //event \r\n    BuyToken(_captainId, price,address(this),msg.sender);\r\n  }\r\n\r\n  function getCaptainCount(uint32 _captainId) external constant returns (uint256) {\r\n    return captainToCount[_captainId];\r\n  }\r\n\r\n  //@notice withraw all by dev\r\n  function withdraw() external onlyOwner {\r\n    require(this.balance>0);\r\n    msg.sender.transfer(this.balance);\r\n  }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setGameConfigContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setCaptainTokenContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_captainId\",\"type\":\"uint32\"}],\"name\":\"prepurchase\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"captains\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"config\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_captainId\",\"type\":\"uint32\"}],\"name\":\"getCaptainCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"BuyToken\",\"type\":\"event\"}]","ContractName":"CaptainSell","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ead8210ab49852c2ed9d7ff091b5a047f7a015dab2bc950a7a4897bcd407a686"}]}