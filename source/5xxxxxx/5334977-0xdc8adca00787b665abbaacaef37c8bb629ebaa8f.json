{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\ncontract TopIvy {\r\n\r\n  /*** CONSTANTS ***/\r\n  string public constant NAME = \"TopIvy\";\r\n  uint256 public constant voteCost = 0.001 ether;\r\n  \r\n  // You can use this string to verify the indices correspond to the school order below\r\n  string public constant schoolOrdering = \"BrownColumbiaCornellDartmouthHarvardPennPrincetonYale\";\r\n\r\n  /*** STORAGE ***/\r\n  address public ceoAddress;\r\n  uint256[8] public voteCounts = [1,1,1,1,1,1,1,1];\r\n\r\n  // Sorted alphabetically:\r\n  // 0: Brown\r\n  // 1: Columbia\r\n  // 2: Cornell\r\n  // 3: Dartmouth\r\n  // 4: Harvard\r\n  // 5: Penn\r\n  // 6: Princeton\r\n  // 7: Yale\r\n\r\n  /*** ACCESS MODIFIERS ***/\r\n  /// @dev Access modifier for CEO-only functionality\r\n  modifier onlyCEO() {\r\n    require(msg.sender == ceoAddress);\r\n    _;\r\n  }\r\n\r\n  /*** CONSTRUCTOR ***/\r\n  function TopIvy() public {\r\n    ceoAddress = msg.sender;\r\n  }\r\n\r\n  /*** PUBLIC FUNCTIONS ***/\r\n  /// @dev Transfer contract balance\r\n  /// @param _to The address to receive the payout\r\n  function payout(address _to) public onlyCEO{\r\n    _payout(_to);\r\n  }\r\n\r\n  /// @dev Buys votes for an option, each vote costs voteCost.\r\n  /// @param _id Which side gets the vote\r\n  function buyVotes(uint8 _id) public payable {\r\n      // Ensure at least one vote can be purchased\r\n      require(msg.value >= voteCost);\r\n      // Ensure vote is only for listed Ivys\r\n      require(_id >= 0 && _id <= 7);\r\n      // Calculate number of votes\r\n      uint256 votes = msg.value / voteCost;\r\n      voteCounts[_id] += votes;\r\n      // Don't bother sending remainder back because it is <0.001 eth\r\n  }\r\n\r\n  /// @dev Assigns a new address to act as the CEO. Only available to the current CEO.\r\n  /// @param _newCEO The address of the new CEO\r\n  function setCEO(address _newCEO) public onlyCEO {\r\n    require(_newCEO != address(0));\r\n    ceoAddress = _newCEO;\r\n  }\r\n  \r\n  // @dev Returns the list of vote counts\r\n  function getVotes() public view returns(uint256[8]) {\r\n      return voteCounts;\r\n  }\r\n\r\n  /*** PRIVATE FUNCTIONS ***/\r\n  /// For paying out balance on contract\r\n  function _payout(address _to) private {\r\n    if (_to == address(0)) {\r\n      ceoAddress.transfer(this.balance);\r\n    } else {\r\n      _to.transfer(this.balance);\r\n    }\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"payout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVotes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[8]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCEO\",\"type\":\"address\"}],\"name\":\"setCEO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint8\"}],\"name\":\"buyVotes\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voteCounts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"voteCost\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"schoolOrdering\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"TopIvy","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://eb8dac4a61e10820ab7b337bfb4d5d096c8a4f5eade079defc294f4bdd8e430f"}]}