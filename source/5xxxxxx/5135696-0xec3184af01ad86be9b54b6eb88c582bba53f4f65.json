{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract ERC20 {\r\n  function balanceOf(address _owner) public constant returns (uint balance);\r\n  function transfer(address _to, uint _value) public returns (bool success);\r\n}\r\n\r\ncontract TokenTrust {\r\n\taddress public owner;\r\n\tuint256 start;\r\n\tmapping(address=>uint256) public trust;\r\n\tevent AddTrust(address indexed _token, uint256 indexed _trust);\r\n\tmodifier onlyOwner() {\r\n      if (msg.sender!=owner) revert();\r\n      _;\r\n    }\r\n    \r\n    function TokenTrust() public {\r\n    \towner = msg.sender;\r\n    \tstart = block.number;\r\n    }\r\n    \r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n    \r\n    function getStart() public constant returns(uint256) {\r\n        return start;\r\n    }\r\n    \r\n    function getTokenTrust(address tadr) public constant returns(uint256) {\r\n        return trust[tadr];\r\n    }\r\n    \r\n    function withdrawTokens(address tadr, uint256 tokens) public onlyOwner  {\r\n        if (tokens==0 || ERC20(tadr).balanceOf(address(this))<tokens) revert();\r\n        trust[tadr]+=1;\r\n        AddTrust(tadr,trust[tadr]);\r\n        ERC20(tadr).transfer(owner, tokens);\r\n    }\r\n    \r\n    function addTokenTrust(address tadr) public payable {\r\n        if (msg.value==0 || tadr==address(0) || ERC20(tadr).balanceOf(msg.sender)==0) revert();\r\n        trust[tadr]+=1;\r\n        AddTrust(tadr,trust[tadr]);\r\n        owner.transfer(msg.value);\r\n    }\r\n    \r\n    function () payable public {\r\n        if (msg.value>0) owner.transfer(msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"tadr\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"trust\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tadr\",\"type\":\"address\"}],\"name\":\"addTokenTrust\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tadr\",\"type\":\"address\"}],\"name\":\"getTokenTrust\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_trust\",\"type\":\"uint256\"}],\"name\":\"AddTrust\",\"type\":\"event\"}]","ContractName":"TokenTrust","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5b6c711b9df05700e783d21112bd791acf885e87fdcd7dfac5fbd293a11e58bf"}]}