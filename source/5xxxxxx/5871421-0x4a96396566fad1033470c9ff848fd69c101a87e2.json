{"status":"1","message":"OK","result":[{"SourceCode":"/// @title Public Token Register - Allows to register coins and get it from another contract.\r\n/// @author Global Group - <globalinvestplace@gmail.com>\r\npragma solidity ^0.4.24;\r\n\r\ncontract IPublicTokenRegister {\r\n\tfunction securityReg(address _securityWallet) public;\r\n\tfunction registerCoin(string _name,string _symbol, address coinTokenContract) public;\r\n\tfunction getSymbol(string _coin) public view returns(string _symbol);\r\n\tfunction getCoinAddress(string _coin) public view returns(address _coinTokenContract);\r\n\tfunction getHexSymbol(string _coin) public view returns(bytes4 _hexSymbol);\r\n\tfunction getIsCoinReg(string _coin) public view returns(bool _isReg);\r\n\tfunction getCoinInfo(string _coin) public view returns(string _symbol, address coinAddress, bytes4 _hexSymbol, bool _isReg);\r\n\tfunction getIsSecurityWalletReg(address _wallet) public view returns(bool _isReg);\r\n\r\n\tevent RegisterCoin(string _coin, string _name, string _symbol, address _coinTokenContract);\r\n\tevent SecurityReg(address _securityWallet, bool isRegistered);\r\n}\r\n\r\ncontract Ownable {\r\n\taddress public owner;\r\n\t\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\tconstructor() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n\t\trequire(newOwner != address(0));\r\n\t\temit OwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t}\r\n}\r\n\r\ncontract PublicTokenRegister is IPublicTokenRegister, Ownable {\r\n\tmapping(string => Coin) internal coin;\r\n\tmapping(address => bool) internal registeredSecurity;\r\n\taddress[] internal registeredCoins;\r\n\t\r\n\tmodifier onlySecurity {\r\n\t\trequire(registeredSecurity[msg.sender] == true);\r\n\t\t_;\r\n\t}\r\n    \r\n    // STRUCTS\r\n\tstruct Coin {\r\n\t\tstring symbol;\r\n\t\taddress coinTokenContract;\r\n\t\tbytes4 hexSymbol;\r\n\t\tbool isReg;\r\n\t}\r\n\r\n    function() public payable {\r\n\t\trevert();\r\n    }\r\n    \r\n    constructor() public {\r\n    }\r\n    \r\n    function registerCoin(string _name, string _symbol, address _coinTokenContract) public onlySecurity {\r\n\t\trequire(coin[_name].isReg == false);\r\n\t\tbytes4 _hexSymbol = convertStringToBytes(_name);\r\n        coin[_name] = Coin ({\r\n            symbol: _symbol,\r\n            coinTokenContract: _coinTokenContract,\r\n            hexSymbol: _hexSymbol,\r\n            isReg: true\r\n        });\r\n        registeredCoins.push(_coinTokenContract);\r\n\t\t\r\n\t\temit RegisterCoin(_name, _name, _symbol, _coinTokenContract);\r\n    }\r\n\t\r\n\tfunction removeCoin(string _name) public onlyOwner {\r\n\t\trequire(coin[_name].isReg == true);\r\n\t\tcoin[_name] = Coin({\r\n\t\t\tsymbol: \"\",\r\n\t\t\tcoinTokenContract: 0x0,\r\n\t\t\thexSymbol: 0x0,\r\n\t\t\tisReg: false\r\n\t\t});\r\n\t}\r\n\t\r\n\tfunction securityReg(address _securityWallet) public onlyOwner {\r\n\t\trequire(registeredSecurity[_securityWallet] == false);\r\n\t\tregisteredSecurity[_securityWallet] = true;\r\n\t\temit SecurityReg(_securityWallet, true);\r\n\t}\r\n\t\r\n\tfunction getSymbol(string _coinName) public view returns(string _symbol) {\r\n\t\treturn coin[_coinName].symbol;\r\n\t}\r\n\t\r\n\tfunction getHexSymbol(string _coinName) public view returns(bytes4 _hexSymbol) {\r\n\t\treturn coin[_coinName].hexSymbol;\r\n\t}\r\n\t\r\n   \tfunction getCoinAddress(string _coinName) public view returns(address _coinTokenContract) {\r\n\t\treturn coin[_coinName].coinTokenContract;\r\n\t}\r\n\t\r\n\tfunction getIsCoinReg(string _coinName) public view returns(bool _isCoinReg) {\r\n\t\treturn coin[_coinName].isReg;\r\n\t}\r\n\t\r\n\tfunction getCoinInfo(string _coinName) public view returns(string _symbol, address coinAddress, bytes4 _hexSymbol, bool _isReg) {\r\n\t\treturn (getSymbol(_coinName),getCoinAddress(_coinName),getHexSymbol(_coinName),getIsCoinReg(_coinName));\r\n\t}\r\n\t\r\n\tfunction getIsSecurityWalletReg(address _wallet) public view returns(bool _isReg) {\r\n\t\treturn registeredSecurity[_wallet];\r\n\t}\r\n\t\r\n    function convertStringToBytes(string memory source) internal pure returns (bytes4 result) {\r\n        bytes memory tempEmptyStringTest = bytes(source);\r\n        if (tempEmptyStringTest.length == 0) {\r\n            return 0x0;\r\n        }\r\n        assembly {\r\n            result := mload(add(source, 32))\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_coinTokenContract\",\"type\":\"address\"}],\"name\":\"registerCoin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_coinName\",\"type\":\"string\"}],\"name\":\"getHexSymbol\",\"outputs\":[{\"name\":\"_hexSymbol\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_securityWallet\",\"type\":\"address\"}],\"name\":\"securityReg\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_coinName\",\"type\":\"string\"}],\"name\":\"getSymbol\",\"outputs\":[{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"removeCoin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_coinName\",\"type\":\"string\"}],\"name\":\"getCoinAddress\",\"outputs\":[{\"name\":\"_coinTokenContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"getIsSecurityWalletReg\",\"outputs\":[{\"name\":\"_isReg\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_coinName\",\"type\":\"string\"}],\"name\":\"getCoinInfo\",\"outputs\":[{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"coinAddress\",\"type\":\"address\"},{\"name\":\"_hexSymbol\",\"type\":\"bytes4\"},{\"name\":\"_isReg\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_coinName\",\"type\":\"string\"}],\"name\":\"getIsCoinReg\",\"outputs\":[{\"name\":\"_isCoinReg\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_coin\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_symbol\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_coinTokenContract\",\"type\":\"address\"}],\"name\":\"RegisterCoin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_securityWallet\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isRegistered\",\"type\":\"bool\"}],\"name\":\"SecurityReg\",\"type\":\"event\"}]","ContractName":"PublicTokenRegister","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://de5b838a6914875919aaffb5887adf9546ab9213c3647825e262d154150dd6a0"}]}