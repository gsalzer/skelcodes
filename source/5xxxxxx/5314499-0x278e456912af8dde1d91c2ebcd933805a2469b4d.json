{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        if (msg.sender != owner) revert();\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\ncontract Fund is owned {\r\n\r\n\t/*\r\n     * External contracts\r\n     */\r\n    address public tokenFund;\r\n\r\n\t/*\r\n     * Storage\r\n     */\r\n    address public ethAddress;\r\n    address public multisig;\r\n    address public supportAddress;\r\n    uint public tokenPrice = 1 finney; // 0.001 ETH\r\n}\r\n\r\n\r\ncontract ShowFundOwner {\r\n    function fund_owner() public constant returns (address)  {\r\n        Fund fund = Fund(0xAeb5bC3786A12147C6e3b094116B6563e30E12f2);\r\n        return fund.owner();\r\n    }   \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"fund_owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ShowFundOwner","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b498d5e25b614d9f0ec9f045a899eb599dcaeb58c5db96351b9d73f54fdf44ee"}]}