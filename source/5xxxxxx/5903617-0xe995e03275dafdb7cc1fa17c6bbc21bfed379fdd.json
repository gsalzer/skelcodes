{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract TokenInterface{\r\n    uint256 public totalSupply;\r\n    uint256 public price;\r\n    uint256 public decimals;\r\n    function () public payable;\r\n    function balanceOf(address _owner) view public returns(uint256);\r\n    function transfer(address _to, uint256 _value) public returns(bool);\r\n}\r\n\r\ncontract SWAP{\r\n    \r\n    string public name=\"SWAP\";\r\n    string public symbol=\"SWAP\";\r\n    \r\n    uint256 public totalSupply; \r\n    uint256 public price = 50;\r\n    uint256 public decimals = 18; \r\n\r\n    address MyETHWallet;\r\n    function SWAP() public {  \r\n        MyETHWallet = msg.sender;\r\n        name=\"SWAP\";\r\n        symbol=\"SWAP\";\r\n    }\r\n\r\n    modifier onlyValidAddress(address _to){\r\n        require(_to != address(0x00));\r\n        _;\r\n    }\r\n    mapping (address => uint256) balances; \r\n    mapping (address => mapping (address => uint256)) public allowance; //phu cap\r\n\r\n    function setPrice(uint256 _price) public returns (uint256){\r\n        price = _price;\r\n        return price;\r\n    }\r\n\r\n    function setDecimals(uint256 _decimals) public returns (uint256){\r\n        decimals = _decimals;\r\n        return decimals;\r\n    }\r\n    \r\n    function balanceOf(address _owner) view public returns(uint256){\r\n        return balances[_owner];\r\n    }\r\n    \r\n    //tạo ra một sự kiện công khai trên blockchain sẽ thông báo cho khách hàng\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Withdraw(address to, uint amount); //rut tien\r\n\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(_to != 0x0);\r\n        require(balances[_from] >= _value);\r\n        require(balances[_to] + _value >= balances[_to]);\r\n        \r\n        uint previousBalances = balances[_from] + balances[_to];\r\n        \r\n        balances[_from] -= _value;\r\n        balances[_to] += _value;\r\n        emit Transfer(_from, _to, _value);\r\n        \r\n        assert(balances[_from] + balances[_to] == previousBalances);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]);  \r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public\r\n        returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n   \r\n    function () public payable {\r\n        uint256 token = (msg.value*price)/10**decimals; //1 eth = 10^18 wei\r\n        totalSupply += token;\r\n        balances[msg.sender] = token;\r\n    }\r\n    \r\n    \r\n    modifier onlyMyETHWallet(){\r\n        require(msg.sender == MyETHWallet);\r\n        _;\r\n    }\r\n    \r\n    function withdrawEtherOnlyOwner() external onlyMyETHWallet{\r\n        msg.sender.transfer(address(this).balance);\r\n        emit Withdraw(msg.sender,address(this).balance);\r\n    }\r\n\r\n    function sendEthToAddress(address _address, uint256 _value) external onlyValidAddress(_address){\r\n        _address.transfer(_value);\r\n        emit Withdraw(_address,_value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"setDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawEtherOnlyOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendEthToAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"}]","ContractName":"SWAP","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e25bc84d50c4b9d82176af78279970d97b51e0a43d36c3ec7e9ad7db87d77cdb"}]}