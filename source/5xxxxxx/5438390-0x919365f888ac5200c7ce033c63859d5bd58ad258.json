{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\ncontract Token {\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n}\r\n\r\n/***************************************************************************\\\r\n *   SignalPylon: Signal capturing contract\r\n *\r\n *   Allows token signaling without sub-token generation or transferal\r\n *   The final signal scoring is determined outside the contract and\r\n *   outside the blockchain (by the admin/user interested in the data)\r\n *   and can be parsed/post-processed however is contextually appropriate.\r\n\\***************************************************************************/\r\n\r\ncontract SignalPylon {\r\n    /*************\\\r\n     *  Storage  *\r\n    \\*************/\r\n    address public token;                       // The address of the signal token\r\n    mapping (uint => Signal) public signals;    // Signals captured from users/voters\r\n    uint public signalCount;                    // Total count of signals (index)\r\n\r\n    /*************\\\r\n     *  Structs  *\r\n     *****************************************************************\\\r\n     *  Signal (vote)\r\n     *  @dev Represents a particular vote or signal captured/cast\r\n     *       at a specific blockheight. Note: signaling uses the\r\n     *       entire available token balance of the caller's account.\r\n    \\*****************************************************************/\r\n    struct Signal {\r\n        address signaler;\r\n        bytes32 register;\r\n        uint value;\r\n    }\r\n\r\n    /************\\\r\n     *  Events  *\r\n    \\************/\r\n    event SignalOutput(address signaler, bytes32 register, uint value);\r\n\r\n    /*********************\\\r\n     *  Public functions\r\n     *********************\\\r\n     *  @dev Constructor\r\n    \\*********************/\r\n    function SignalPylon(address _token) public {\r\n        token = _token;\r\n    }\r\n\r\n    /***********************************************\\\r\n     *  @dev User-callable signaling function\r\n     *  @param _register Register which is signaled\r\n    \\***********************************************/\r\n    function sendSignal(bytes32 _register) public {\r\n        uint signalValue = Token(token).balanceOf(msg.sender);\r\n        require(signalValue > 0);\r\n\r\n        // Append to signal list\r\n        signals[signalCount] = Signal({\r\n            signaler: msg.sender,\r\n            register: _register,\r\n            value: signalValue\r\n        });\r\n\r\n        // Update signal count index\r\n        signalCount += 1;\r\n\r\n        // Emit SignalOutput event\r\n        emit SignalOutput(msg.sender, _register, signalValue);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"signals\",\"outputs\":[{\"name\":\"signaler\",\"type\":\"address\"},{\"name\":\"register\",\"type\":\"bytes32\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_register\",\"type\":\"bytes32\"}],\"name\":\"sendSignal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"signalCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"signaler\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"register\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SignalOutput\",\"type\":\"event\"}]","ContractName":"SignalPylon","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000fe213bac9e8308fa05fc7d53926c6c597f97410","Library":"","SwarmSource":"bzzr://07c03b85e3b2df0fc6de7b0bdf6aaadb35b277c1d2da4bab9544f66fa5230a8a"}]}