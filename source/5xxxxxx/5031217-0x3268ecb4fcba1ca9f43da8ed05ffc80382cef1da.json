{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\n\r\ncontract Ownable {\r\n  address owner;\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n}\r\n\r\ncontract AddressLottery is Ownable{\r\n    struct SeedComponents{\r\n        address addr;\r\n        uint additionalSeed1;\r\n        uint additionalSeed2;\r\n        uint additionalSeed3;\r\n    }\r\n    \r\n    uint luckyNumber = 13;\r\n    uint private secretSeed;\r\n    mapping (address => bool) participated;\r\n\r\n\r\n    function AddressLottery() payable {\r\n        reseed(SeedComponents(msg.sender, 0x12345678, 0x123456789, uint256(block.blockhash(block.number - 1))));\r\n    }\r\n    \r\n    function participate() payable { \r\n        require(msg.value == 0.1 ether);\r\n        \r\n        // every address can only win once, obviously\r\n        require(!participated[msg.sender]);\r\n        \r\n        if ( luckyNumberOfAddress(msg.sender) == luckyNumber)\r\n        {\r\n            participated[msg.sender] = true;\r\n            require(msg.sender.call.value(this.balance)());\r\n        }\r\n    }\r\n    \r\n    function luckyNumberOfAddress(address addr) internal returns(uint n){\r\n        // 1 in 16 chance\r\n        n = uint(keccak256(addr, secretSeed)[0]) % 16;\r\n    }\r\n    \r\n    function reseed(SeedComponents components) internal{\r\n        secretSeed = uint256(keccak256(components.addr, components.additionalSeed1, components.additionalSeed2, components.additionalSeed3));\r\n    }\r\n    \r\n    function kill() onlyOwner {\r\n        suicide(owner);\r\n    }\r\n    \r\n    function forceReseed() onlyOwner{\r\n        SeedComponents s;\r\n        s.addr = msg.sender;\r\n        s.additionalSeed1 = tx.gasprice * 13;\r\n        s.additionalSeed2 = block.number * 7;\r\n        s.additionalSeed3 = uint256(block.blockhash(block.number - 1));\r\n        reseed(s);\r\n    }\r\n    \r\n    function () payable {}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"forceReseed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"participate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"AddressLottery","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6a14222e351513fbb0b5eb4355430e494108e985d675d9ce448851b10316289a"}]}