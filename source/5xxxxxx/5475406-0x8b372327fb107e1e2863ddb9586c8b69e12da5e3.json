{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.22;\r\n\r\nlibrary SafeMath {\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Ownable {\r\n  address public ownerAddress;\r\n  address public transferCreditBotAddress;\r\n  address public twitterBotAddress;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  constructor() public {\r\n    ownerAddress = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == ownerAddress);\r\n    _;\r\n  }\r\n\r\n  modifier onlyTransferCreditBot() {\r\n      require(msg.sender == transferCreditBotAddress);\r\n      _;\r\n  }\r\n\r\n  modifier onlyTwitterBot() {\r\n        require(msg.sender == twitterBotAddress);\r\n        _;\r\n    }\r\n\r\n  function setTransferCreditBot(address _newTransferCreditBot) public onlyOwner {\r\n        require(_newTransferCreditBot != address(0));\r\n        transferCreditBotAddress = _newTransferCreditBot;\r\n    }\r\n\r\n  function setTwitterBot(address _newTwitterBot) public onlyOwner {\r\n        require(_newTwitterBot != address(0));\r\n        twitterBotAddress = _newTwitterBot;\r\n    }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(ownerAddress, newOwner);\r\n    ownerAddress = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract EtherZaarTwitter is Ownable {\r\n\r\n  using SafeMath for uint256;\r\n\r\n  event addressRegistration(uint256 twitterId, address ethereumAddress);\r\n  event Transfer(uint256 receiverTwitterId, uint256 senderTwitterId, uint256 ethereumAmount);\r\n  event Withdraw(uint256 twitterId, uint256 ethereumAmount);\r\n  event EthereumDeposit(uint256 twitterId, address ethereumAddress, uint256 ethereumAmount);\r\n  event TransferCreditDeposit(uint256 twitterId, uint256 transferCredits);\r\n\r\n  mapping (uint256 => address) public twitterIdToEthereumAddress;\r\n  mapping (uint256 => uint256) public twitterIdToEthereumBalance;\r\n  mapping (uint256 => uint256) public twitterIdToTransferCredits;\r\n\r\n  function _addEthereumAddress(uint256 _twitterId, address _ethereumAddress) external onlyTwitterBot {\r\n    twitterIdToEthereumAddress[_twitterId] = _ethereumAddress;\r\n\r\n    emit addressRegistration(_twitterId, _ethereumAddress);\r\n  }\r\n\r\n  function _depositEthereum(uint256 _twitterId) external payable{\r\n      twitterIdToEthereumBalance[_twitterId] += msg.value;\r\n      emit EthereumDeposit(_twitterId, twitterIdToEthereumAddress[_twitterId], msg.value);\r\n  }\r\n\r\n  function _depositTransferCredits(uint256 _twitterId, uint256 _transferCredits) external onlyTransferCreditBot{\r\n      twitterIdToTransferCredits[_twitterId] += _transferCredits;\r\n      emit TransferCreditDeposit(_twitterId, _transferCredits);\r\n  }\r\n\r\n  function _transferEthereum(uint256 _senderTwitterId, uint256 _receiverTwitterId, uint256 _ethereumAmount) external onlyTwitterBot {\r\n      require(twitterIdToEthereumBalance[_senderTwitterId] >= _ethereumAmount);\r\n      require(twitterIdToTransferCredits[_senderTwitterId] > 0);\r\n\r\n      twitterIdToEthereumBalance[_senderTwitterId] = twitterIdToEthereumBalance[_senderTwitterId] - _ethereumAmount;\r\n      twitterIdToTransferCredits[_senderTwitterId] = twitterIdToTransferCredits[_senderTwitterId] - 1;\r\n      twitterIdToEthereumBalance[_receiverTwitterId] += _ethereumAmount;\r\n\r\n      emit Transfer(_receiverTwitterId, _senderTwitterId, _ethereumAmount);\r\n  }\r\n\r\n  function _withdrawEthereum(uint256 _twitterId) external {\r\n      require(twitterIdToEthereumBalance[_twitterId] > 0);\r\n      require(twitterIdToEthereumAddress[_twitterId] == msg.sender);\r\n\r\n      uint256 transferAmount = twitterIdToEthereumBalance[_twitterId];\r\n      twitterIdToEthereumBalance[_twitterId] = 0;\r\n\r\n      (msg.sender).transfer(transferAmount);\r\n\r\n      emit Withdraw(_twitterId, transferAmount);\r\n  }\r\n\r\n  function _sendEthereum(uint256 _twitterId) external onlyTwitterBot {\r\n      require(twitterIdToEthereumBalance[_twitterId] > 0);\r\n      require(twitterIdToTransferCredits[_twitterId] > 0);\r\n\r\n      twitterIdToTransferCredits[_twitterId] = twitterIdToTransferCredits[_twitterId] - 1;\r\n      uint256 sendAmount = twitterIdToEthereumBalance[_twitterId];\r\n      twitterIdToEthereumBalance[_twitterId] = 0;\r\n\r\n      (twitterIdToEthereumAddress[_twitterId]).transfer(sendAmount);\r\n\r\n      emit Withdraw(_twitterId, sendAmount);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_twitterId\",\"type\":\"uint256\"},{\"name\":\"_transferCredits\",\"type\":\"uint256\"}],\"name\":\"_depositTransferCredits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"twitterBotAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferCreditBotAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_twitterId\",\"type\":\"uint256\"}],\"name\":\"_sendEthereum\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"twitterIdToTransferCredits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"twitterIdToEthereumAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newTransferCreditBot\",\"type\":\"address\"}],\"name\":\"setTransferCreditBot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_twitterId\",\"type\":\"uint256\"}],\"name\":\"_withdrawEthereum\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_twitterId\",\"type\":\"uint256\"},{\"name\":\"_ethereumAddress\",\"type\":\"address\"}],\"name\":\"_addEthereumAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"twitterIdToEthereumBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_twitterId\",\"type\":\"uint256\"}],\"name\":\"_depositEthereum\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_senderTwitterId\",\"type\":\"uint256\"},{\"name\":\"_receiverTwitterId\",\"type\":\"uint256\"},{\"name\":\"_ethereumAmount\",\"type\":\"uint256\"}],\"name\":\"_transferEthereum\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newTwitterBot\",\"type\":\"address\"}],\"name\":\"setTwitterBot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"twitterId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ethereumAddress\",\"type\":\"address\"}],\"name\":\"addressRegistration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiverTwitterId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"senderTwitterId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ethereumAmount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"twitterId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ethereumAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"twitterId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ethereumAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ethereumAmount\",\"type\":\"uint256\"}],\"name\":\"EthereumDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"twitterId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"transferCredits\",\"type\":\"uint256\"}],\"name\":\"TransferCreditDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"EtherZaarTwitter","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bcc7947ce705a818570f7397518ca1ebb8cb508f9b4fbf3e6ee5af60a37ca8a5"}]}