{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\n// v.1.0.0  2018.04.02\r\ncontract soccerGo {\r\n    address private owner;\r\n    mapping (address => bool) private admins;\r\n    \r\n    uint256 gameId = 0;\r\n    address callAddr = 0x0;\r\n    \r\n    event showPlayerAddress(address);\r\n    event showPlayerBet(uint256);\r\n    event showBetLeft(uint256);\r\n    event showBetRight(uint256);\r\n    event showResult(uint256);\r\n    event showCount(uint256);\r\n    event showTimeStamp(uint256);\r\n    event showWinValue(uint256);\r\n    \r\n    // Win limit\r\n    uint[] private slot_limit;\r\n    \r\n    // Dev fee\r\n    uint256 fee = 99;\r\n    \r\n    // Slot 1~10 win limit settings\r\n    function SetLimit(uint _slot, uint win_limit) onlyAdmins() public {\r\n        require(_slot > 0 && _slot < 12);\r\n        slot_limit[_slot - 1] = win_limit;\r\n    }\r\n    \r\n    function soccerGo() public {\r\n        owner = msg.sender;\r\n        admins[owner] = true;\r\n        \r\n        // RTP 97% ~ 98%\r\n        slot_limit.length = 11;\r\n        slot_limit[0] = 1170;\r\n        slot_limit[1] = 611;\r\n        slot_limit[2] = 416;\r\n        slot_limit[3] = 315;\r\n        slot_limit[4] = 253;\r\n        slot_limit[5] = 212;\r\n        slot_limit[6] = 182;\r\n        slot_limit[7] = 159;\r\n        slot_limit[8] = 141;\r\n        slot_limit[9] = 127;\r\n        slot_limit[10] = 115;\r\n    }\r\n    \r\n    function contractBalance() public view returns (uint256) {\r\n        return this.balance;\r\n    }\r\n    \r\n    // Bet limit\r\n    uint256 private min_value = 0.1 ether;\r\n    uint256 private max_value = 0.3 ether;\r\n    \r\n    // SetBetLimit\r\n    function setBetLimit(uint256 min, uint256 max) public onlyAdmins() {\r\n        uint256 base_bet = 0.1 ether;\r\n        min_value = base_bet * min;\r\n        max_value = base_bet * max;\r\n    }\r\n    \r\n    function setCalleeContract(address _caller) public onlyAdmins() {\r\n        callAddr = _caller;\r\n    }\r\n    \r\n    function playTypes(uint _slot_count) internal returns (uint) {\r\n        return (slot_limit[_slot_count - 1]);\r\n    }\r\n    \r\n    function getRandom(address _call) internal returns(uint) {\r\n        Callee c = Callee(_call);\r\n        return c.random(contractBalance(), msg.value, msg.sender);\r\n    }\r\n    \r\n    function setDevfee(uint256 _value) internal onlyAdmins() {\r\n        fee = _value;\r\n    }\r\n    \r\n    function buy(uint256 _left, uint256 _right)\r\n    public\r\n    payable\r\n    {\r\n        require(_left >= 1 && _left <= 13);\r\n        require(_right >= 1 && _right <= 13);\r\n        require(_right - _left >= 1);\r\n        require(msg.value >= min_value);\r\n        require(msg.value <= max_value);\r\n        \r\n        uint256 betValue = msg.value;\r\n        uint256 result = getRandom(callAddr);\r\n        uint256 types = playTypes(_right - _left - 1);\r\n        uint256 winValue = 0;\r\n        gameId++;\r\n        \r\n        if (result > _left && result < _right) {\r\n            winValue = betValue * types / 100;\r\n            msg.sender.transfer((winValue * fee) / 100);\r\n        }\r\n\r\n        showPlayerAddress(msg.sender);\r\n        showPlayerBet(betValue);\r\n        showBetLeft(_left);\r\n        showBetRight(_right);\r\n        showResult(result);\r\n        showCount(gameId);\r\n        showTimeStamp(now);\r\n        showWinValue(winValue);\r\n    }\r\n    \r\n    /* Depoit */\r\n    function() payable public { }\r\n    \r\n    /* Withdraw */\r\n    function withdrawAll() onlyOwner() \r\n    public \r\n    {\r\n        owner.transfer(this.balance);\r\n    }\r\n\r\n    function withdrawAmount(uint256 _amount) onlyOwner() \r\n    public \r\n    {\r\n        uint256 value = 1.0 ether;\r\n        owner.transfer(_amount * value);\r\n    }\r\n    \r\n    /* Modifiers */\r\n    modifier onlyOwner() \r\n    {\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmins() \r\n    {\r\n        require(admins[msg.sender]);\r\n        _;\r\n    }\r\n  \r\n    /* Owner */\r\n    function setOwner (address _owner) onlyOwner() \r\n    public \r\n    {\r\n        owner = _owner;\r\n    }\r\n    \r\n    function addAdmin (address _admin) onlyOwner() \r\n    public \r\n    {\r\n        admins[_admin] = true;\r\n    }\r\n\r\n    function removeAdmin (address _admin) onlyOwner() \r\n    public \r\n    {\r\n        delete admins[_admin];\r\n    }\r\n}\r\n\r\n\r\ncontract Callee {\r\n    function random(uint256 _balance, uint256 _value, address _player) returns(uint);\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_slot\",\"type\":\"uint256\"},{\"name\":\"win_limit\",\"type\":\"uint256\"}],\"name\":\"SetLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"min\",\"type\":\"uint256\"},{\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"setBetLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_left\",\"type\":\"uint256\"},{\"name\":\"_right\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"setCalleeContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"address\"}],\"name\":\"showPlayerAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"showPlayerBet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"showBetLeft\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"showBetRight\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"showResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"showCount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"showTimeStamp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"showWinValue\",\"type\":\"event\"}]","ContractName":"soccerGo","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://513e04d53b3fecac9f7135bc562e59b9cc8e4570b9d050118eb9e4375d551af8"}]}