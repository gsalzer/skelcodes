{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract Zhoan {\r\n    \r\n    string public name;\r\n    string public symbol;\r\n    //the circulation limit of token\r\n    uint256 public totalSupply;\r\n    //decimal setting\r\n    uint8 public decimals = 18;\r\n    \r\n    //contract admin's address\r\n    address private admin_add;\r\n    //new user can get money when first register\r\n    uint private present_money=0;\r\n    \r\n    //transfer event\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    //save the msg of contract_users\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowances;\r\n    \r\n    // constructor\r\n    constructor(uint256 limit,string token_name,string token_symbol,uint8 token_decimals) public {\r\n        admin_add=msg.sender;\r\n        name=token_name;\r\n        symbol=token_symbol;\r\n        totalSupply=limit * 10 ** uint256(decimals);\r\n        decimals=token_decimals;\r\n        \r\n        balanceOf[admin_add]=totalSupply;\r\n    }\r\n    \r\n    //for admin user to change present_money\r\n    function setPresentMoney (uint money) public{\r\n        address opt_user=msg.sender;\r\n        if(opt_user == admin_add){\r\n            present_money = money;\r\n        }\r\n    }\r\n    \r\n    //add new user to contract\r\n    function approve(address _spender, uint256 value) public returns (bool success){\r\n        allowances[msg.sender][_spender] = value;\r\n        return true;\r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) constant public returns (uint256 remaining){\r\n        return allowances[_owner][_spender];\r\n    }\r\n    \r\n    //admin account transfer money to users\r\n    function adminSendMoneyToUser(address to,uint256 value) public{\r\n        address opt_add=msg.sender;\r\n        if(opt_add == admin_add){\r\n            transferFrom(admin_add,to,value);\r\n        }\r\n    }\r\n    \r\n    //burn account hold money\r\n    function burnAccountMoeny(address add,uint256 value) public{\r\n        address opt_add=msg.sender;\r\n        require(opt_add == admin_add);\r\n        require(balanceOf[add]>value);\r\n        \r\n        balanceOf[add]-=value;\r\n        totalSupply -=value;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success){\r\n        transferFrom(msg.sender,_to,_value);\r\n        return true;\r\n    }\r\n\r\n    //transfer action between users\r\n    function transferFrom(address from,address to,uint256 value) public returns (bool success){\r\n        \r\n        require(value <= allowances[from][msg.sender]);     // Check allowance\r\n        allowances[from][msg.sender] -= value;\r\n        //sure target no be 0x0\r\n        require(to != 0x0);\r\n        //check balance of sender\r\n        require(balanceOf[from] >= value);\r\n        //sure the amount of the transfer is greater than 0\r\n        require(balanceOf[to] + value >= balanceOf[to]);\r\n        \r\n        uint previousBalances = balanceOf[from] + balanceOf[to];\r\n        balanceOf[from] -= value;\r\n        balanceOf[to] += value;\r\n        \r\n        emit Transfer(from,to,value);\r\n        \r\n        assert(balanceOf[from] + balanceOf[to] == previousBalances);\r\n        return true;\r\n    }\r\n    \r\n    //view balance\r\n    function balanceOf(address _owner) public view returns(uint256 balance){\r\n        return balanceOf[_owner];\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"add\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnAccountMoeny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"adminSendMoneyToUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"setPresentMoney\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"limit\",\"type\":\"uint256\"},{\"name\":\"token_name\",\"type\":\"string\"},{\"name\":\"token_symbol\",\"type\":\"string\"},{\"name\":\"token_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Zhoan","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000989680000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000b7a686f616e5f636861696e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035a414e0000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://d16e317eb63001dc704d184c6cf10eab4e273f25e6b061ab12890bb3858b2658"}]}