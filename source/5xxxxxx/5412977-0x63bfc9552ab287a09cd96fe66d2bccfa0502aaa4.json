{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;                  //specify compiler version\r\n//this is a comment!\r\n\r\ncontract Josephtoken {                     //this is a smart contract!\r\n    \r\n    address owner;                       //which account gets the 1000 josephtoken to begin with\r\n    mapping (address => uint) balances;  //keep track of the number of josephtoken in each account\r\n    \r\n    function Josephtoken() public {\r\n        owner = msg.sender;              //msg.sender is the address of the account that called the function\r\n                                         //here, msg.sender is the account that deployed the contract\r\n        balances[owner] = 1000;          //mint the owner 1000 josephtoken and put it in the mapping\r\n    }\r\n    \r\n    function transfer(uint amount, address recipient) public {      //move josephtoken between accounts\r\n        require(balances[msg.sender] >= amount);\r\n        require(balances[msg.sender] - amount <= balances[msg.sender]);\r\n        require(balances[recipient] + amount >= balances[recipient]);\r\n        balances[msg.sender] -= amount;\r\n        balances[recipient] += amount;\r\n        //hmm, how might evil attacker Jennifer try to exploit this function?\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Josephtoken","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f27c6b17eb60f8e904c4eb4216e18f1b8ef3aab66ab8c49ea46732eb00715a5a"}]}