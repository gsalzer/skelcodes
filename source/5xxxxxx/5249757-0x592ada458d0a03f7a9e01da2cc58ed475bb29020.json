{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\ninterface token {\r\n    function transfer(address receiver, uint amount) public;                                    // Transfer function for transferring tokens\r\n    function getBalanceOf(address _owner) public constant returns (uint256 balance);            // Getting the balance from the main contract\r\n}\r\ncontract Presale {\r\n    address public beneficiary;                     // Who is the beneficiary of this contract\r\n    uint public fundingLimit;                       // The maximum ether allowed in this sale\r\n    uint public amountRaised;                       // The total amount raised during presale\r\n    uint public deadline;                           // The deadline for this contract\r\n    uint public tokensPerEther;                     // Tokens received as a reward of participating in this pre sale\r\n    uint public minFinnRequired;                    // Minimum Finney needed to participate in this pre sale\r\n    uint public startTime;                          // StartTime for the presale\r\n    token public tokenReward;                       // The token contract it refers too\r\n    \r\n    mapping(address => uint256) public balanceOf;   // Mapping of all balances in this contract\r\n    event FundTransfer(address backer, uint amount, bool isContribution);   // Event of fund transfer to show each transaction\r\n    /**\r\n     * Constrctor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    function Presale(\r\n        address ifSuccessfulSendTo,\r\n        uint fundingLimitInEthers,\r\n        uint durationInMinutes,\r\n        uint tokensPerEthereum,\r\n        uint minFinneyRequired,\r\n        uint presaleStartTime,\r\n        address addressOfTokenUsedAsReward\r\n    ) public {\r\n        beneficiary = ifSuccessfulSendTo;\r\n        fundingLimit = fundingLimitInEthers * 1 ether;\r\n        deadline = presaleStartTime + durationInMinutes * 1 minutes;\r\n        tokensPerEther = tokensPerEthereum;\r\n        minFinnRequired = minFinneyRequired * 1 finney;\r\n        startTime = presaleStartTime;\r\n        tokenReward = token(addressOfTokenUsedAsReward);\r\n    }\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function () payable public {\r\n        require(startTime <= now);\r\n        require(amountRaised < fundingLimit);\r\n        require(msg.value >= minFinnRequired);\r\n        \r\n        uint amount = msg.value;\r\n        balanceOf[msg.sender] += amount;\r\n        amountRaised += amount;\r\n        tokenReward.transfer(msg.sender, amount * tokensPerEther);\r\n        FundTransfer(msg.sender, amount, true);\r\n    }\r\n    /**\r\n     * Withdraw the funds\r\n     *\r\n     * Checks to see if goal or time limit has been reached, and if so, and the funding goal was reached,\r\n     * sends the entire amount to the beneficiary. If goal was not reached, each contributor can withdraw\r\n     * the amount they contributed.\r\n     */\r\n    function withdrawFundBeneficiary() public {\r\n        require(now >= deadline);\r\n        require(beneficiary == msg.sender);\r\n        uint remaining = tokenReward.getBalanceOf(this);\r\n        if(remaining > 0) {\r\n            tokenReward.transfer(beneficiary, remaining);\r\n        }\r\n        if (beneficiary.send(amountRaised)) {\r\n            FundTransfer(beneficiary, amountRaised, false);\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawFundBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minFinnRequired\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ifSuccessfulSendTo\",\"type\":\"address\"},{\"name\":\"fundingLimitInEthers\",\"type\":\"uint256\"},{\"name\":\"durationInMinutes\",\"type\":\"uint256\"},{\"name\":\"tokensPerEthereum\",\"type\":\"uint256\"},{\"name\":\"minFinneyRequired\",\"type\":\"uint256\"},{\"name\":\"presaleStartTime\",\"type\":\"uint256\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"Presale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000008701db4412a1d59e61bfbc48f9e5db702be1232000000000000000000000000000000000000000000000000000000000000138800000000000000000000000000000000000000000000000000000000000074030000000000000000000000000000000000000000000000000000000000009c400000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000000000000000000000000000005aafb450000000000000000000000000a9d6a1c87422b211014f1009c541600b33344aff","Library":"","SwarmSource":"bzzr://0bf08780fbe4bbde91b01b52b077c8105dfd1f8652dbac87af5b30e9e2beeffa"}]}