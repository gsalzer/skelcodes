{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.18;\r\n\r\ncontract Ownable {\r\n\taddress public owner;\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\tfunction Ownable() {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) onlyOwner public {\r\n\t\trequire(newOwner != address(0));\r\n\t\tOwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t}\r\n}\r\n\r\nlibrary SafeMath {\r\n\tfunction mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a / b;\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\ncontract ERC20 {\r\n\tuint256 public totalSupply;\r\n\tfunction balanceOf(address who) public constant returns (uint256);\r\n\tfunction transfer(address to, uint256 value) public returns (bool);\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n\tfunction allowance(address owner, address spender) public constant returns (uint256);\r\n\tfunction transferFrom(address from, address to, uint256 value) public returns (bool);\r\n\tfunction approve(address spender, uint256 value) public returns (bool);\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract StandardToken is ERC20 {\r\n\tusing SafeMath for uint256;\r\n\r\n\tmapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tTransfer(msg.sender, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) public constant returns (uint256 balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\r\n\t\tuint256 _allowance = allowed[_from][msg.sender];\r\n\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tallowed[_from][msg.sender] = _allowance.sub(_value);\r\n\t\tTransfer(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool) {\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\tApproval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n}\r\n\r\ncontract LBToken is StandardToken {\r\n\tstring public constant name = \"LB Token\";\r\n    string public constant symbol = \"LB\";\r\n    uint8  public constant decimals = 18;\r\n\r\n\taddress public minter; \r\n\tuint    public tokenSaleEndTime; \r\n\r\n\tmodifier onlyMinter {\r\n\t\trequire (msg.sender == minter);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier whenMintable {\r\n\t\trequire (now <= tokenSaleEndTime);\r\n\t\t_;\r\n\t}\r\n\r\n    modifier validDestination(address to) {\r\n        require(to != address(this));\r\n        _;\r\n    }\r\n\r\n\tfunction LBToken(address _minter, uint _tokenSaleEndTime) public {\r\n\t\tminter = _minter;\r\n\t\ttokenSaleEndTime = _tokenSaleEndTime;\r\n    }\r\n\r\n\tfunction transfer(address _to, uint _value)\r\n        public\r\n        validDestination(_to)\r\n        returns (bool) \r\n    {\r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n\tfunction transferFrom(address _from, address _to, uint _value)\r\n        public\r\n        validDestination(_to)\r\n        returns (bool) \r\n    {\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n\tfunction createToken(address _recipient, uint _value)\r\n\t\twhenMintable\r\n\t\tonlyMinter\r\n\t\treturns (bool)\r\n\t{\r\n\t\tbalances[_recipient] += _value;\r\n\t\ttotalSupply += _value;\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\ncontract LBTokenSale is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n\t// token allocation\r\n\tuint public constant TOTAL_LBTOKEN_SUPPLY   = 480000000;\r\n\tuint public constant ALLOC_TEAM             =  72000000e18;\r\n\tuint public constant ALLOC_RESERVED         =  96000000e18;\r\n\tuint public constant ALLOC_COMMUNITY        =  72000000e18;\r\n\tuint public constant ALLOC_ADVISOR          =  24000000e18;\r\n\tuint public constant ALLOC_SALE_CORNERSTONE =  32500000e18; \r\n\tuint public constant ALLOC_SALE_PRIVATE     = 120000000e18; \r\n\tuint public constant ALLOC_SALE_GENERAL_1   =  22500000e18; \r\n\tuint public constant ALLOC_SALE_GENERAL_2   =  21000000e18; \r\n\tuint public constant ALLOC_SALE_GENERAL_3   =  20000000e18; \r\n\r\n\t// Token sale rate from ETH to LB\r\n\tuint public constant RATE_CORNERSTONE  = 3250;\r\n\tuint public constant RATE_PRIVATE      = 3000;\r\n\tuint public constant RATE_CROWDSALE_S1 = 2250;\r\n\tuint public constant RATE_CROWDSALE_S2 = 2100;\r\n\tuint public constant RATE_CROWDSALE_S3 = 2000;\r\n\r\n\t// For token transfer\r\n\taddress public constant WALLET_LB_RESERVED  = 0x2cde024b3dcf68081F0aA03f33e4631D7293544f;\r\n\taddress public constant WALLET_LB_COMMUNITY = 0x60e95CE9A740cF66bE5598B994Ed97D6c143aDE9;\r\n\taddress public constant WALLET_LB_TEAM      = 0x90545665F7Be2DB1880eDA948EA55AE6De2726F3;\r\n\taddress public constant WALLET_LB_ADMIN     = 0x4Db76c3F8d0169ABa7aD5795dA1253231a09a22C;\r\n\r\n\t// For ether transfer\r\n\taddress private constant WALLET_ETH_LB    = 0xc6bc39A8038A9C1dfdFE73ce1df4e5094D30E6f4;\r\n\taddress private constant WALLET_ETH_ADMIN = 0x782872fb9459FC0dbdf8c0EDb5fE3D5f214a6660;\r\n\r\n    LBToken public lbToken; \r\n\r\n\tuint256 public presaleStartTime;\r\n    uint256 public publicStartTime;\r\n    uint256 public publicEndTime;\r\n\tbool public halted;\r\n\r\n\t// stat\r\n\tuint256 public totalLBSold_CORNERSTONE;\r\n\tuint256 public totalLBSold_PRIVATE;\r\n\tuint256 public totalLBSold_GENERAL_1;\r\n\tuint256 public totalLBSold_GENERAL_2;\r\n\tuint256 public totalLBSold_GENERAL_3;\r\n    uint256 public weiRaised;\r\n\tmapping(address=>uint256) public weiContributions;\r\n\r\n\t// whitelisting\r\n\tmapping(address=>bool) public whitelisted_Private;\r\n\tmapping(address=>bool) public whitelisted_Cornerstone;\r\n\tevent WhitelistedPrivateStatusChanged(address target, bool isWhitelisted);\r\n\tevent WhitelistedCornerstoneStatusChanged(address target, bool isWhitelisted);\r\n\r\n    event TokenPurchase(address indexed purchaser, uint256 value, uint256 amount);\r\n\r\n    function LBTokenSale(uint256 _presaleStartTime, uint256 _publicStartTime, uint256 _publicEndTime) {\r\n        presaleStartTime = _presaleStartTime;\r\n        publicStartTime = _publicStartTime;\r\n\t\tpublicEndTime = _publicEndTime;\r\n\r\n        lbToken = new LBToken(address(this), publicEndTime);\r\n\t\tlbToken.createToken(WALLET_LB_RESERVED, ALLOC_RESERVED);\r\n\t\tlbToken.createToken(WALLET_LB_COMMUNITY, ALLOC_COMMUNITY);\r\n\t\tlbToken.createToken(WALLET_LB_TEAM, ALLOC_TEAM);\r\n\t\tlbToken.createToken(WALLET_LB_ADMIN, ALLOC_ADVISOR);\r\n    }\r\n\r\n\r\n    function changeWhitelistPrivateStatus(address _target, bool _isWhitelisted)\r\n        public\r\n        onlyOwner\r\n    {\r\n        whitelisted_Private[_target] = _isWhitelisted;\r\n        WhitelistedPrivateStatusChanged(_target, _isWhitelisted);\r\n    }\r\n\r\n    function changeWhitelistPrivateStatuses(address[] _targets, bool _isWhitelisted)\r\n        public\r\n        onlyOwner\r\n    {\r\n        for (uint i = 0; i < _targets.length; i++) {\r\n            changeWhitelistPrivateStatus(_targets[i], _isWhitelisted);\r\n        }\r\n    }\r\n\r\n\tfunction changeWhitelistCornerstoneStatus(address _target, bool _isWhitelisted)\r\n        public\r\n        onlyOwner\r\n    {\r\n        whitelisted_Cornerstone[_target] = _isWhitelisted;\r\n        WhitelistedCornerstoneStatusChanged(_target, _isWhitelisted);\r\n    }\r\n\r\n    function changeWhitelistCornerstoneStatuses(address[] _targets, bool _isWhitelisted)\r\n        public\r\n        onlyOwner\r\n    {\r\n        for (uint i = 0; i < _targets.length; i++) {\r\n            changeWhitelistCornerstoneStatus(_targets[i], _isWhitelisted);\r\n        }\r\n    }\r\n\r\n    function validPurchase() \r\n        internal \r\n        returns(bool) \r\n    {\r\n\t\tbool nonZeroPurchase = msg.value != 0;\r\n\t\tbool withinSalePeriod = now >= presaleStartTime && now <= publicEndTime;\r\n        bool withinPublicPeriod = now >= publicStartTime && now <= publicEndTime;\r\n\r\n\t\tbool whitelisted = whitelisted_Cornerstone[msg.sender] || whitelisted_Private[msg.sender];\r\n\t\tbool whitelistedCanBuy = whitelisted && withinSalePeriod;\r\n        \r\n        return nonZeroPurchase && (whitelistedCanBuy || withinPublicPeriod);\r\n    }\r\n\r\n    function () \r\n       payable \r\n    {\r\n        buyTokens();\r\n    }\r\n\r\n    function buyTokens() \r\n       payable \r\n    {\r\n\t\trequire(!halted);\r\n        require(validPurchase());\r\n\r\n\t\taddress investor = msg.sender;\r\n        uint256 weiInvested = msg.value;\r\n\t\tuint256 purchaseTokens; \r\n\t\t\r\n\t\tif (whitelisted_Cornerstone[investor]) {\r\n\t\t\tpurchaseTokens = weiInvested.mul(RATE_CORNERSTONE); \r\n\t\t\trequire(ALLOC_SALE_CORNERSTONE - totalLBSold_CORNERSTONE >= purchaseTokens); // buy only if enough supply\r\n\t\t\trequire(lbToken.createToken(investor, purchaseTokens));\r\n\t\t\ttotalLBSold_CORNERSTONE = totalLBSold_CORNERSTONE.add(purchaseTokens); \r\n\t\t} else if (whitelisted_Private[investor]) {\r\n\t\t\tpurchaseTokens = weiInvested.mul(RATE_PRIVATE); \r\n\t\t\trequire(ALLOC_SALE_PRIVATE - totalLBSold_PRIVATE >= purchaseTokens); // buy only if enough supply\r\n\t\t\trequire(lbToken.createToken(investor, purchaseTokens));\r\n\t\t\ttotalLBSold_PRIVATE = totalLBSold_PRIVATE.add(purchaseTokens); \r\n\t\t} else {\r\n\t\t\tpurchaseTokens = _getPurchaseToken(investor, weiInvested);\r\n\t\t\trequire(purchaseTokens > 0);\r\n\t\t\trequire(lbToken.createToken(investor, purchaseTokens));\r\n\t\t}\r\n\r\n\t\tweiRaised = weiRaised.add(weiInvested);\r\n\t\tweiContributions[investor] = weiContributions[investor].add(weiInvested);\r\n\r\n\t\tTokenPurchase(investor, weiInvested, purchaseTokens);\r\n\t\tforwardFunds();\r\n    }\r\n\r\n\tfunction _getPurchaseToken(address sender, uint256 weiInvested)\r\n\t\tinternal\r\n\t\treturns(uint256) \r\n\t{\r\n\t\tuint256 tokenRemain1 = ALLOC_SALE_GENERAL_1 - totalLBSold_GENERAL_1;\r\n\t\tuint256 tokenToPurchase1 = weiInvested.mul(RATE_CROWDSALE_S1);\r\n\t\tif (tokenRemain1 >= tokenToPurchase1) {\r\n\t\t\ttotalLBSold_GENERAL_1 = totalLBSold_GENERAL_1.add(tokenToPurchase1);\r\n\t\t\treturn tokenToPurchase1;\r\n\t\t} else if (tokenRemain1 > 0) {\r\n\t\t\tuint256 weiRemain = weiInvested - tokenRemain1.div(RATE_CROWDSALE_S1); \r\n\t\t\tuint256 tokenToPurchase2 = weiRemain.mul(RATE_CROWDSALE_S2);\r\n\t\t\ttotalLBSold_GENERAL_1 = totalLBSold_GENERAL_1.add(tokenRemain1);\r\n\t\t\ttotalLBSold_GENERAL_2 = totalLBSold_GENERAL_2.add(tokenToPurchase2);\r\n\t\t\treturn tokenRemain1 + tokenToPurchase2;\r\n\t\t}\r\n\r\n\t\tuint256 tokenRemain2 = ALLOC_SALE_GENERAL_2 - totalLBSold_GENERAL_2;\r\n\t\ttokenToPurchase2 = weiInvested.mul(RATE_CROWDSALE_S2);\r\n\t\tif (tokenRemain2 >= tokenToPurchase2) {\r\n\t\t\ttotalLBSold_GENERAL_2 = totalLBSold_GENERAL_2.add(tokenToPurchase2);\r\n\t\t\treturn tokenToPurchase2;\r\n\t\t} else if (tokenRemain2 > 0) {\r\n\t\t\tweiRemain = weiInvested - tokenRemain2.div(RATE_CROWDSALE_S2); \r\n\t\t\tuint256 tokenToPurchase3 = weiRemain.mul(RATE_CROWDSALE_S3);\r\n\t\t\ttotalLBSold_GENERAL_2 = totalLBSold_GENERAL_2.add(tokenRemain2);\r\n\t\t\ttotalLBSold_GENERAL_3 = totalLBSold_GENERAL_3.add(tokenToPurchase3);\r\n\t\t\treturn tokenRemain2 + tokenToPurchase3;\r\n\t\t}\r\n\r\n\t\tuint256 tokenRemain3 = ALLOC_SALE_GENERAL_3 - totalLBSold_GENERAL_3;\r\n\t\ttokenToPurchase3 = weiInvested.mul(RATE_CROWDSALE_S3);\r\n\t\tif (tokenRemain3 >= tokenToPurchase3) {\r\n\t\t\ttotalLBSold_GENERAL_3 = totalLBSold_GENERAL_3.add(tokenToPurchase3);\r\n\t\t\treturn tokenToPurchase3;\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n    function forwardFunds() \r\n       internal \r\n    {\r\n        WALLET_ETH_LB.transfer((msg.value).mul(98).div(100));\r\n\t\tWALLET_ETH_ADMIN.transfer((msg.value).mul(2).div(100));\r\n    }\r\n\r\n    function hasEnded() \r\n        public \r\n        constant \r\n        returns(bool) \r\n    {\r\n        return now > publicEndTime;\r\n    }\r\n\r\n\tfunction toggleHalt(bool _halted)\r\n\t\tpublic\r\n\t\tonlyOwner\r\n\t{\r\n\t\thalted = _halted;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"totalLBSold_GENERAL_1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted_Private\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE_CROWDSALE_S2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targets\",\"type\":\"address[]\"},{\"name\":\"_isWhitelisted\",\"type\":\"bool\"}],\"name\":\"changeWhitelistCornerstoneStatuses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"weiContributions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_SALE_GENERAL_1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_SALE_GENERAL_2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalLBSold_GENERAL_3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publicEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE_CROWDSALE_S3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lbToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_isWhitelisted\",\"type\":\"bool\"}],\"name\":\"changeWhitelistCornerstoneStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_RESERVED\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE_CROWDSALE_S1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publicStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted_Cornerstone\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_SALE_PRIVATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_SALE_GENERAL_3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_halted\",\"type\":\"bool\"}],\"name\":\"toggleHalt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WALLET_LB_TEAM\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WALLET_LB_ADMIN\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WALLET_LB_RESERVED\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalLBSold_CORNERSTONE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOTAL_LBTOKEN_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_TEAM\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_SALE_CORNERSTONE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"halted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_isWhitelisted\",\"type\":\"bool\"}],\"name\":\"changeWhitelistPrivateStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalLBSold_PRIVATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_ADVISOR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalLBSold_GENERAL_2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ALLOC_COMMUNITY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE_PRIVATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WALLET_LB_COMMUNITY\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targets\",\"type\":\"address[]\"},{\"name\":\"_isWhitelisted\",\"type\":\"bool\"}],\"name\":\"changeWhitelistPrivateStatuses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE_CORNERSTONE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_presaleStartTime\",\"type\":\"uint256\"},{\"name\":\"_publicStartTime\",\"type\":\"uint256\"},{\"name\":\"_publicEndTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"WhitelistedPrivateStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"name\":\"WhitelistedCornerstoneStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"LBTokenSale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000005aafa640000000000000000000000000000000000000000000000000000000005ac0c9c0000000000000000000000000000000000000000000000000000000005ae70540","Library":"","SwarmSource":"bzzr://99d832302c6f27a2d3da4a190ed362c3b0594b3b3aa0c3c5cc3f43a5285eae56"}]}