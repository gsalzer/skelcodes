{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract ERC20Interface {\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n}\r\n\r\ncontract HmcDistributor {\r\n\r\n    //add limit to 1 year\r\n    uint64  public constant lockDuration   = 1 years;\r\n    //Bonus amount\r\n    uint256 public constant bonus          = 500*10**18;\r\n    //add limit to 7000000 block height\r\n    uint    public constant minBlockNumber = 7000000;\r\n\r\n    address public owner;\r\n    address public hmcAddress;\r\n\r\n    uint256 public joinCount        = 0;\r\n    uint256 public withdrawCount    = 0;\r\n    uint256 public distributorCount = 0;\r\n\r\n    struct member {\r\n        uint unlockTime;\r\n        bool withdraw;\r\n    }\r\n\r\n    mapping(address => member)   public whitelist;\r\n    mapping(address => bool)     public distributors;\r\n\r\n    modifier onlyDistributor {\r\n        require(distributors[msg.sender] == true);\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function HmcDistributor() public {\r\n        owner = msg.sender;\r\n        distributors[msg.sender] = true;\r\n        hmcAddress = 0xAa0bb10CEc1fa372eb3Abc17C933FC6ba863DD9E;\r\n    }\r\n\r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n\r\n    function setDistributor(address []_addr)\r\n        external\r\n        onlyOwner\r\n    {\r\n        uint256 index;\r\n        for(index = 0;index< _addr.length;index ++) {\r\n            distributors[_addr[index]] = true;\r\n        }\r\n        distributorCount += _addr.length;\r\n    }\r\n\r\n    function setHmcAddress(address _addr)\r\n        external\r\n        onlyOwner\r\n    {\r\n        require(_addr != 0x0);\r\n        hmcAddress = _addr;\r\n    }\r\n\r\n    function distribute(address _addr)\r\n        external\r\n        onlyDistributor\r\n    {\r\n        require(hmcAddress != address(0));\r\n        require(whitelist[_addr].unlockTime == 0);\r\n        whitelist[_addr].unlockTime = now + lockDuration;\r\n        joinCount++;\r\n    }\r\n\r\n    function done(address _owner) external view returns (bool) {\r\n        if(whitelist[_owner].unlockTime == 0   ||\r\n           whitelist[_owner].withdraw   == true) {\r\n            return false;\r\n        }\r\n        if(now >= whitelist[_owner].unlockTime && block.number > minBlockNumber) {\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function withdraw() external {\r\n        require(withdrawCount<joinCount);\r\n        require(whitelist[msg.sender].withdraw == false);\r\n        require(whitelist[msg.sender].unlockTime > 1500000000);\r\n        require(now >= whitelist[msg.sender].unlockTime && block.number > minBlockNumber);\r\n        whitelist[msg.sender].withdraw = true;\r\n        withdrawCount++;\r\n        require(ERC20Interface(hmcAddress).transfer(msg.sender, bonus));\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"joinCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockDuration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distributorCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hmcAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"done\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minBlockNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"name\":\"withdraw\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"distributors\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setHmcAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address[]\"}],\"name\":\"setDistributor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"HmcDistributor","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://70e67d4e3d0dd59869fd818214905a560d5ae00cf23329ddf15605dd91dcbf65"}]}