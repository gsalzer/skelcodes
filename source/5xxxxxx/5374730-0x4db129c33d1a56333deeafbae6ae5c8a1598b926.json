{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.21;\r\n\r\nlibrary SafeMath {\r\n\r\n    /**\r\n    * @dev Multiplies two numbers, throws on overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two numbers, truncating the quotient.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two numbers, throws on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ninterface UnicornManagementInterface {\r\n\r\n    function ownerAddress() external view returns (address);\r\n    function managerAddress() external view returns (address);\r\n    function communityAddress() external view returns (address);\r\n    function dividendManagerAddress() external view returns (address);\r\n    function walletAddress() external view returns (address);\r\n    function unicornTokenAddress() external view returns (address);\r\n    function candyToken() external view returns (address);\r\n    function candyPowerToken() external view returns (address);\r\n    function unicornBreedingAddress() external view returns (address);\r\n\r\n\r\n    function paused() external view returns (bool);\r\n    function locked() external view returns (bool);\r\n    //    function locked() external view returns (bool);\r\n\r\n    //service\r\n    function registerInit(address _contract) external;\r\n\r\n}\r\n\r\n\r\ninterface LandInit {\r\n    function init() external;\r\n}\r\n\r\ncontract LandManagement {\r\n    using SafeMath for uint;\r\n\r\n    UnicornManagementInterface public unicornManagement;\r\n\r\n    //    address public ownerAddress;\r\n    //    address public managerAddress;\r\n    //    address public communityAddress;\r\n    //    address public walletAddress;\r\n    //    address public candyToken;\r\n    //    address public megaCandyToken;\r\n    //    address public dividendManagerAddress; //onlyCommunity\r\n    //address public unicornTokenAddress; //onlyOwner\r\n    address public userRankAddress;\r\n    address public candyLandAddress;\r\n    address public candyLandSaleAddress;\r\n\r\n    mapping(address => bool) unicornContracts;//address\r\n\r\n    bool public ethLandSaleOpen = true;\r\n    bool public presaleOpen = true;\r\n    bool public firstRankForFree = true;\r\n\r\n    uint public landPriceWei = 2412000000000000000;\r\n    uint public landPriceCandy = 720000000000000000000;\r\n\r\n    event AddUnicornContract(address indexed _unicornContractAddress);\r\n    event DelUnicornContract(address indexed _unicornContractAddress);\r\n    event NewUserRankAddress(address userRankAddress);\r\n    event NewCandyLandAddress(address candyLandAddress);\r\n    event NewCandyLandSaleAddress(address candyLandSaleAddress);\r\n    event NewLandPrice(uint _price, uint _candyPrice);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == ownerAddress());\r\n        _;\r\n    }\r\n\r\n    modifier onlyManager() {\r\n        require(msg.sender == managerAddress());\r\n        _;\r\n    }\r\n\r\n\r\n    modifier whenNotPaused() {\r\n        require(!unicornManagement.paused());\r\n        _;\r\n    }\r\n\r\n    modifier whenPaused {\r\n        require(unicornManagement.paused());\r\n        _;\r\n    }\r\n\r\n\r\n    modifier onlyUnicornManagement() {\r\n        require(msg.sender == address(unicornManagement));\r\n        _;\r\n    }\r\n\r\n    modifier whenUnlocked() {\r\n        require(!unicornManagement.locked());\r\n        _;\r\n    }\r\n\r\n\r\n\r\n    function LandManagement(address _unicornManagementAddress) public {\r\n        unicornManagement = UnicornManagementInterface(_unicornManagementAddress);\r\n        unicornManagement.registerInit(this);\r\n    }\r\n\r\n\r\n    function init() onlyUnicornManagement whenPaused external {\r\n        for(uint i = 0; i < initList.length; i++) {\r\n            LandInit(initList[i]).init();\r\n        }\r\n    }\r\n\r\n\r\n    struct InitItem {\r\n        uint listIndex;\r\n        bool exists;\r\n    }\r\n\r\n    mapping (address => InitItem) private initItems;\r\n    address[] private initList;\r\n\r\n    function registerInit(address _contract) external whenPaused {\r\n        require(msg.sender == ownerAddress() || tx.origin == ownerAddress());\r\n\r\n        if (!initItems[_contract].exists) {\r\n            initItems[_contract] = InitItem({\r\n                listIndex: initList.length,\r\n                exists: true\r\n                });\r\n            initList.push(_contract);\r\n        }\r\n    }\r\n\r\n    function unregisterInit(address _contract) external onlyOwner whenPaused {\r\n        require(initItems[_contract].exists && initList.length > 0);\r\n        uint lastIdx = initList.length - 1;\r\n        initItems[initList[lastIdx]].listIndex = initItems[_contract].listIndex;\r\n        initList[initItems[_contract].listIndex] = initList[lastIdx];\r\n        initList.length--;\r\n        delete initItems[_contract];\r\n\r\n    }\r\n\r\n\r\n    function runInit() external onlyOwner whenPaused {\r\n        for(uint i = 0; i < initList.length; i++) {\r\n            LandInit(initList[i]).init();\r\n        }\r\n    }\r\n\r\n\r\n    function ownerAddress() public view returns (address) {\r\n        return unicornManagement.ownerAddress();\r\n    }\r\n\r\n    function managerAddress() public view returns (address) {\r\n        return unicornManagement.managerAddress();\r\n    }\r\n\r\n    function communityAddress() public view returns (address) {\r\n        return unicornManagement.communityAddress();\r\n    }\r\n\r\n    function walletAddress() public view returns (address) {\r\n        return unicornManagement.walletAddress();\r\n    }\r\n\r\n    function candyToken() public view returns (address) {\r\n        return unicornManagement.candyToken();\r\n    }\r\n\r\n    function megaCandyToken() public view returns (address) {\r\n        return unicornManagement.candyPowerToken();\r\n    }\r\n\r\n    function dividendManagerAddress() public view returns (address) {\r\n        return unicornManagement.dividendManagerAddress();\r\n    }\r\n\r\n    function setUnicornContract(address _unicornContractAddress) public onlyOwner whenUnlocked {\r\n        require(_unicornContractAddress != address(0));\r\n        unicornContracts[_unicornContractAddress] = true;\r\n        emit AddUnicornContract(_unicornContractAddress);\r\n    }\r\n\r\n    function delUnicornContract(address _unicornContractAddress) external onlyOwner whenUnlocked{\r\n        require(unicornContracts[_unicornContractAddress]);\r\n        unicornContracts[_unicornContractAddress] = false;\r\n        emit DelUnicornContract(_unicornContractAddress);\r\n    }\r\n\r\n    function isUnicornContract(address _unicornContractAddress) external view returns (bool) {\r\n        return unicornContracts[_unicornContractAddress];\r\n    }\r\n\r\n\r\n\r\n    function setUserRank(address _userRankAddress) external onlyOwner whenPaused whenUnlocked {\r\n        require(_userRankAddress != address(0));\r\n        userRankAddress = _userRankAddress;\r\n        emit NewUserRankAddress(userRankAddress);\r\n    }\r\n\r\n    function setCandyLand(address _candyLandAddress) external onlyOwner whenPaused whenUnlocked {\r\n        require(_candyLandAddress != address(0));\r\n        candyLandAddress = _candyLandAddress;\r\n        setUnicornContract(candyLandAddress);\r\n        emit NewCandyLandAddress(candyLandAddress);\r\n    }\r\n\r\n    function setCandyLandSale(address _candyLandSaleAddress) external onlyOwner whenPaused whenUnlocked {\r\n        require(_candyLandSaleAddress != address(0));\r\n        candyLandSaleAddress = _candyLandSaleAddress;\r\n        setUnicornContract(candyLandSaleAddress);\r\n        emit NewCandyLandSaleAddress(candyLandSaleAddress);\r\n    }\r\n\r\n\r\n    function paused() public view returns(bool) {\r\n        return unicornManagement.paused();\r\n    }\r\n\r\n\r\n    function stopLandEthSale() external onlyOwner {\r\n        require(ethLandSaleOpen);\r\n        ethLandSaleOpen = false;\r\n    }\r\n\r\n    function openLandEthSale() external onlyOwner {\r\n        require(!ethLandSaleOpen);\r\n        ethLandSaleOpen = true;\r\n    }\r\n\r\n    function stopPresale() external onlyOwner {\r\n        require(presaleOpen);\r\n        presaleOpen = false;\r\n    }\r\n\r\n    function setFirstRankForFree(bool _firstRankForFree) external onlyOwner {\r\n        require(firstRankForFree != _firstRankForFree);\r\n        firstRankForFree = _firstRankForFree;\r\n    }\r\n\r\n\r\n    //price in weis\r\n    function setLandPrice(uint _price, uint _candyPrice) external onlyManager {\r\n        landPriceWei = _price;\r\n        landPriceCandy = _candyPrice;\r\n        emit NewLandPrice(_price, _candyPrice);\r\n    }\r\n\r\n    //1% - 100, 10% - 1000 50% - 5000\r\n    function valueFromPercent(uint _value, uint _percent) internal pure returns (uint amount)    {\r\n        uint _amount = _value.mul(_percent).div(10000);\r\n        return (_amount);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_unicornContractAddress\",\"type\":\"address\"}],\"name\":\"setUnicornContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"userRankAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopPresale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userRankAddress\",\"type\":\"address\"}],\"name\":\"setUserRank\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"registerInit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"candyLandAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openLandEthSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_unicornContractAddress\",\"type\":\"address\"}],\"name\":\"delUnicornContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"unregisterInit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dividendManagerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_candyLandSaleAddress\",\"type\":\"address\"}],\"name\":\"setCandyLandSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_unicornContractAddress\",\"type\":\"address\"}],\"name\":\"isUnicornContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"landPriceWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"walletAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"firstRankForFree\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"communityAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"landPriceCandy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unicornManagement\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"runInit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"candyToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_candyLandAddress\",\"type\":\"address\"}],\"name\":\"setCandyLand\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleOpen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopLandEthSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"managerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_firstRankForFree\",\"type\":\"bool\"}],\"name\":\"setFirstRankForFree\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"candyLandSaleAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_candyPrice\",\"type\":\"uint256\"}],\"name\":\"setLandPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethLandSaleOpen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"megaCandyToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_unicornManagementAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_unicornContractAddress\",\"type\":\"address\"}],\"name\":\"AddUnicornContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_unicornContractAddress\",\"type\":\"address\"}],\"name\":\"DelUnicornContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"userRankAddress\",\"type\":\"address\"}],\"name\":\"NewUserRankAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"candyLandAddress\",\"type\":\"address\"}],\"name\":\"NewCandyLandAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"candyLandSaleAddress\",\"type\":\"address\"}],\"name\":\"NewCandyLandSaleAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_price\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_candyPrice\",\"type\":\"uint256\"}],\"name\":\"NewLandPrice\",\"type\":\"event\"}]","ContractName":"LandManagement","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000010cc060f6f9b2e5dcdb23f1361e4b368a7daec73","Library":"","SwarmSource":"bzzr://9cc68d25a3eeb91f22bfe1226bbb8d6c17b5437e5a66acf49f668a1e464a572d"}]}