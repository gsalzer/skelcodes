{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\ncontract Token {\r\n\r\n    uint256 constant private MAX_UINT256 = 2**256 - 1;\r\n    mapping(address => uint) public balances;\r\n    mapping(address => mapping(address => uint)) public allowed;\r\n\r\n    string public description;\r\n    uint8 public decimals;\r\n    string public logoURL;\r\n    string public name;\r\n    string public symbol;\r\n    uint public totalSupply;\r\n\r\n    address public creator;\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    \r\n    event Created(address creator, uint supply);\r\n\r\n    function Token(\r\n        string _description,\r\n        string _logoURL,\r\n        string _name,\r\n        string _symbol,\r\n        uint256 _totalSupply\r\n    ) public\r\n    {\r\n        description = _description;\r\n        logoURL = _logoURL;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = 18;\r\n        totalSupply = _totalSupply;\r\n\r\n        creator = tx.origin;\r\n        Created(creator, _totalSupply);\r\n        balances[creator] = _totalSupply;\r\n    }\r\n\r\n    // Don't let people randomly send ETH to contract\r\n    function() public payable {\r\n        revert();\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        require(balances[msg.sender] >= _value);\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        uint256 allowance = allowed[_from][msg.sender];\r\n        require(balances[_from] >= _value && allowance >= _value);\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        if (allowance < MAX_UINT256) {\r\n            allowed[_from][msg.sender] -= _value;\r\n        }\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    \r\n    function setLogoURL(string url) public {\r\n        require(msg.sender == creator);\r\n        logoURL = url;\r\n    }\r\n}\r\n\r\n// Sample constructor args\r\n// \"0x54686520746f6b656e20666f7220617765736f6d652070656f706c652e\", \"0x68747470733a2f2f692e696d6775722e636f6d2f5a336871756c492e6a7067\", \"0x417765736f6d6520546f6b656e\", \"0x415745\", \"0x52b7d2dcc80cd2e4000000\"\r\n\r\ncontract Coinsling {\r\n\r\n    address public owner;\r\n\r\n    function Coinsling() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    event TokenCreated(address token);\r\n    function sling(\r\n        string _description,\r\n        string _logoURL,\r\n        string _name,\r\n        string _symbol,\r\n        uint   _totalSupply\r\n    ) public payable returns (Token token)\r\n    {\r\n        token = new Token(\r\n            _description,\r\n            _logoURL,\r\n            _name,\r\n            _symbol,\r\n            _totalSupply\r\n        );\r\n\r\n        TokenCreated(token);\r\n        return token;\r\n    }\r\n\r\n    // This allows me to collect the revenue paid into the contract\r\n    function transfer(uint amount, address to) public {\r\n        require(msg.sender == owner);\r\n        to.transfer(amount);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_description\",\"type\":\"string\"},{\"name\":\"_logoURL\",\"type\":\"string\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"name\":\"sling\",\"outputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenCreated\",\"type\":\"event\"}]","ContractName":"Coinsling","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://441d5bc2af0779d09701243898de55cfc1b21a147c2357c6e0c9cb3abea7e7d4"}]}