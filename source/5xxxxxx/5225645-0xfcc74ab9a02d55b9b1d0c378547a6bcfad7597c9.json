{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract token {\r\n    function transfer(address receiver, uint256 amount);\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n}\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n  \r\n}\r\n\r\ncontract WashCrowdsale {\r\n    using SafeMath for uint256;\r\n    \r\n    address public beneficiary;\r\n    uint256 public fundingGoal;\r\n    uint256 public amountRaised;\r\n    uint256 public preSaleStartdate;\r\n    uint256 public preSaleDeadline;\r\n    uint256 public mainSaleStartdate;\r\n    uint256 public mainSaleDeadline;\r\n    uint256 public price;\r\n    uint256 public fundTransferred;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n    bool crowdsaleClosed = false;\r\n\r\n    /**\r\n     * Constrctor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    function WashCrowdsale() {\r\n        beneficiary = 0x7C583E878f851A26A557ba50188Bc8B77d6F0e98;\r\n        fundingGoal = 2100 ether;\r\n        preSaleStartdate = 1523318400;\r\n        preSaleDeadline = 1523836800;\r\n        mainSaleStartdate = 1523923200;\r\n        mainSaleDeadline = 1525564800;\r\n        price = 0.0004166 ether;\r\n        tokenReward = token(0x5b8c5c4835b2B5dAEF18079389FDaEfE9f7a6063);\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function () payable {\r\n        require(!crowdsaleClosed);\r\n        uint256 bonus = 0;\r\n        uint256 amount;\r\n        uint256 ethamount = msg.value;\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].add(ethamount);\r\n        amountRaised = amountRaised.add(ethamount);\r\n        \r\n        //add bounus for funders\r\n        if(now >= preSaleStartdate && now <= preSaleDeadline ){\r\n            amount =  ethamount.div(price);\r\n            bonus = amount.div(8);\r\n            amount = amount.add(bonus);\r\n        }\r\n        else if(now >= mainSaleStartdate && now <= mainSaleDeadline){\r\n            amount =  ethamount.div(price);\r\n        }\r\n        \r\n        amount = amount.mul(1000000000000000000);\r\n        tokenReward.transfer(msg.sender, amount);\r\n        beneficiary.send(ethamount);\r\n        fundTransferred = fundTransferred.add(ethamount);\r\n    }\r\n\r\n    modifier afterDeadline() { if (now >= mainSaleDeadline) _; }\r\n\r\n    /**\r\n     *ends the campaign after deadline\r\n     */\r\n     \r\n    function endCrowdsale() afterDeadline {\r\n\t   if(msg.sender == beneficiary){\r\n         crowdsaleClosed = true;\r\n\t  }\r\n    }\r\n\t\r\n    function ChangeDates(uint256 _preSaleStartdate, uint256 _preSaleDeadline, uint256 _mainSaleStartdate, uint256 _mainSaleDeadline) {\r\n        if(msg.sender == beneficiary){\r\n              if(_preSaleStartdate != 0){\r\n                   preSaleStartdate = _preSaleStartdate;\r\n              }\r\n              if(_preSaleDeadline != 0){\r\n                   preSaleDeadline = _preSaleDeadline;\r\n              }\r\n              if(_mainSaleStartdate != 0){\r\n                   mainSaleStartdate = _mainSaleStartdate;\r\n              }\r\n              if(_mainSaleDeadline != 0){\r\n                   mainSaleDeadline = _mainSaleDeadline; \r\n              }\r\n\t\t\t  \r\n\t\t\t  if(crowdsaleClosed == true){\r\n\t\t\t\t crowdsaleClosed = false;\r\n\t\t\t  }\r\n        }\r\n    }\r\n    \r\n    function getTokensBack() {\r\n        uint256 remaining = tokenReward.balanceOf(this);\r\n        if(msg.sender == beneficiary){\r\n           tokenReward.transfer(beneficiary, remaining); \r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"endCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleDeadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundTransferred\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getTokensBack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleStartdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_preSaleStartdate\",\"type\":\"uint256\"},{\"name\":\"_preSaleDeadline\",\"type\":\"uint256\"},{\"name\":\"_mainSaleStartdate\",\"type\":\"uint256\"},{\"name\":\"_mainSaleDeadline\",\"type\":\"uint256\"}],\"name\":\"ChangeDates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleStartdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleDeadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"WashCrowdsale","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://58067e48ebf49508e46e35dcb60dfa8506ad45f20dd3b4b29f6eb930be90e935"}]}