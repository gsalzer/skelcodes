{"status":"1","message":"OK","result":[{"SourceCode":"/*! mytilcoinstorage.sol | (c) 2018 Develop by BelovITLab LLC (smartcontract.ru), author @stupidlovejoy | License: MIT */\r\n\r\npragma solidity 0.4.21;\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    modifier onlyOwner() { require(msg.sender == owner); _; }\r\n\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        owner = newOwner;\r\n        OwnershipTransferred(owner, newOwner);\r\n    }\r\n}\r\n\r\ncontract Manageable is Ownable {\r\n    mapping(address => bool) public managers;\r\n\r\n    event ManagerAdded(address indexed manager);\r\n    event ManagerRemoved(address indexed manager);\r\n\r\n    modifier onlyManager() { require(managers[msg.sender]); _; }\r\n\r\n    function addManager(address _manager) onlyOwner public {\r\n        require(_manager != address(0));\r\n\r\n        managers[_manager] = true;\r\n\r\n        ManagerAdded(_manager);\r\n    }\r\n\r\n    function removeManager(address _manager) onlyOwner public {\r\n        require(_manager != address(0));\r\n\r\n        managers[_manager] = false;\r\n\r\n        ManagerRemoved(_manager);\r\n    }\r\n}\r\n\r\ncontract MytilcoinStorage is Manageable {\r\n    struct Picture {\r\n        string hash;\r\n        uint32 rows;\r\n        uint32 cols;\r\n        uint32 width;\r\n        uint32 height;\r\n        string image;\r\n        string name;\r\n        string author;\r\n    }\r\n\r\n    struct Segment {\r\n        uint32 row;\r\n        uint32 col;\r\n        string hash;\r\n        string image;\r\n        string email;\r\n        string login;\r\n    }\r\n    \r\n    mapping(bytes32 => Picture) public pictures;\r\n    mapping(bytes32 => mapping(uint32 => mapping(uint32 => Segment))) public segments;\r\n\r\n    event AddPicture(bytes32 indexed hash, uint32 rows, uint32 cols, uint32 width, uint32 height, string image, string name, string author);\r\n    event SetSegment(bytes32 indexed picture, uint32 indexed row, uint32 indexed col, bytes32 hash, string image);\r\n    event SegmentOwner(bytes32 indexed picture, uint32 indexed row, uint32 indexed col, string email, string login);\r\n\r\n    function MytilcoinStorage() public {\r\n        addManager(msg.sender);\r\n        addManager(0x209eba96c917871f78671a3ed3503ecc4144495c);\r\n    }\r\n\r\n    function addPicture(string _hash, uint32 _rows, uint32 _cols, uint32 _width, uint32 _height, string _image, string _name, string _author) onlyManager public returns(bool success) {\r\n        bytes32 key = str_to_bytes32(_hash);\r\n\r\n        require(!(pictures[key].rows > 0));\r\n        require(_rows > 0 && _cols > 0 && _width > 0 && _height > 0);\r\n        \r\n        pictures[key] = Picture({\r\n            hash: _hash,\r\n            rows: _rows,\r\n            cols: _cols,\r\n            width: _width,\r\n            height: _height,\r\n            image: _image,\r\n            name: _name,\r\n            author: _author\r\n        });\r\n\r\n        AddPicture(key, _rows, _cols, _width, _height, _image, _name, _author);\r\n\r\n        return true;\r\n    }\r\n\r\n    function setSegment(string _picture, uint32 _row, uint32 _col, string _hash, string _image, string _email, string _login) onlyManager public returns(bool success) {\r\n        bytes32 key = str_to_bytes32(_picture);\r\n\r\n        require(pictures[key].rows > 0);\r\n        require(_row > 0 && _col > 0 && _row <= pictures[key].rows && _col <= pictures[key].cols);\r\n        require(!(segments[key][_row][_col].row > 0));\r\n        \r\n        segments[key][_row][_col] = Segment({\r\n            row: _row,\r\n            col: _col,\r\n            hash: _hash,\r\n            image: _image,\r\n            email: _email,\r\n            login: _login\r\n        });\r\n\r\n        SetSegment(key, _row, _col, str_to_bytes32(_hash), _image);\r\n        SegmentOwner(key, _row, _col, _email, _login);\r\n\r\n        return true;\r\n    }\r\n\r\n    function setSegmentOwner(string _picture, uint32 _row, uint32 _col, string _email, string _login) onlyManager public returns(bool success) {\r\n        bytes32 key = str_to_bytes32(_picture);\r\n\r\n        require(pictures[key].rows > 0);\r\n        require(_row > 0 && _col > 0 && _row <= pictures[key].rows && _col <= pictures[key].cols);\r\n        require(segments[key][_row][_col].row > 0);\r\n        \r\n        segments[key][_row][_col].email = _email;\r\n        segments[key][_row][_col].login = _login;\r\n\r\n        SegmentOwner(key, _row, _col, _email, _login);\r\n\r\n        return true;\r\n    }\r\n\r\n    function str_to_bytes32(string memory source) private pure returns(bytes32 result) {\r\n        bytes memory tempEmptyStringTest = bytes(source);\r\n        if(tempEmptyStringTest.length == 0) {\r\n            return 0x0;\r\n        }\r\n\r\n        assembly {\r\n            result := mload(add(source, 32))\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_hash\",\"type\":\"string\"},{\"name\":\"_rows\",\"type\":\"uint32\"},{\"name\":\"_cols\",\"type\":\"uint32\"},{\"name\":\"_width\",\"type\":\"uint32\"},{\"name\":\"_height\",\"type\":\"uint32\"},{\"name\":\"_image\",\"type\":\"string\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_author\",\"type\":\"string\"}],\"name\":\"addPicture\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pictures\",\"outputs\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"rows\",\"type\":\"uint32\"},{\"name\":\"cols\",\"type\":\"uint32\"},{\"name\":\"width\",\"type\":\"uint32\"},{\"name\":\"height\",\"type\":\"uint32\"},{\"name\":\"image\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"author\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"addManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_picture\",\"type\":\"string\"},{\"name\":\"_row\",\"type\":\"uint32\"},{\"name\":\"_col\",\"type\":\"uint32\"},{\"name\":\"_hash\",\"type\":\"string\"},{\"name\":\"_image\",\"type\":\"string\"},{\"name\":\"_email\",\"type\":\"string\"},{\"name\":\"_login\",\"type\":\"string\"}],\"name\":\"setSegment\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_picture\",\"type\":\"string\"},{\"name\":\"_row\",\"type\":\"uint32\"},{\"name\":\"_col\",\"type\":\"uint32\"},{\"name\":\"_email\",\"type\":\"string\"},{\"name\":\"_login\",\"type\":\"string\"}],\"name\":\"setSegmentOwner\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"removeManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"segments\",\"outputs\":[{\"name\":\"row\",\"type\":\"uint32\"},{\"name\":\"col\",\"type\":\"uint32\"},{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"image\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"login\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"managers\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"rows\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"cols\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"width\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"height\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"image\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"author\",\"type\":\"string\"}],\"name\":\"AddPicture\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"picture\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"row\",\"type\":\"uint32\"},{\"indexed\":true,\"name\":\"col\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"image\",\"type\":\"string\"}],\"name\":\"SetSegment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"picture\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"row\",\"type\":\"uint32\"},{\"indexed\":true,\"name\":\"col\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"email\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"login\",\"type\":\"string\"}],\"name\":\"SegmentOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ManagerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ManagerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"MytilcoinStorage","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4ef0eb76fc4dbabe54e888bd0cbcfb78ed32d5586b6b8aa61e26e8d2af1381e2"}]}