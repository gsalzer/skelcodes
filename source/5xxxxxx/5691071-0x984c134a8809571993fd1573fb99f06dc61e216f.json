{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n/**\r\n * Overflow aware uint math functions.\r\n *\r\n * Inspired by https://github.com/MakerDAO/maker-otc/blob/master/contracts/simple_market.sol\r\n */\r\ncontract SafeMath {\r\n  //internals\r\n\r\n  function safeMul(uint a, uint b) internal pure returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint a, uint b) internal pure returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint a, uint b) internal pure returns (uint) {\r\n    uint c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n  event Burn(address indexed _from, uint256 _value);\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * ERC 20 token\r\n *\r\n * https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract StandardToken is SafeMath {\r\n\r\n    /**\r\n     * Reviewed:\r\n     * - Interger overflow = OK, checked\r\n     */\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n\r\n        require(_to != 0X0);\r\n\r\n        // 如果 from 地址中 没有那么多的 token， 停止交易\r\n        // 如果 这个转账 数量 是 负数， 停止交易\r\n        if (balances[msg.sender] >= _value && balances[msg.sender] - _value < balances[msg.sender]) {\r\n\r\n            // sender的户头 减去 对应token的数量， 使用 safemath 交易\r\n            balances[msg.sender] = super.safeSub(balances[msg.sender], _value);\r\n            // receiver的户头 增加 对应token的数量， 使用 safemath 交易\r\n            balances[_to] = super.safeAdd(balances[_to], _value);\r\n\r\n            emit Transfer(msg.sender, _to, _value);//呼叫event\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n\r\n        require(_to != 0X0);\r\n\r\n        // 如果 from 地址中 没有那么多的 token， 停止交易\r\n        // 如果 from 地址的owner， 给这个msg.sender的权限没有这么多的token，停止交易\r\n        // 如果 这个转账 数量 是 负数， 停止交易\r\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_from] - _value < balances[_from]) {\r\n\r\n            // 该 交易sender 对 from账户的可用权限 减少 相对应的 数量， 使用 safemath 交易\r\n            allowed[_from][msg.sender] = super.safeSub(allowed[_from][msg.sender], _value);\r\n            // from的户头 减去 对应token的数量， 使用 safemath 交易\r\n            balances[_from] = super.safeSub(balances[_from], _value);\r\n            // to的户头 增加 对应token的数量， 使用 safemath 交易\r\n            balances[_to] = super.safeAdd(balances[_to], _value);\r\n\r\n            emit Transfer(_from, _to, _value);//呼叫event\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        // 该交易的 msg.sender 可以设置 别的spender地址权限\r\n        // 允许spender地址可以使用 msg.sender 地址下的一定数量的token\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n      // 查看 spender 能控制 多少个 owner 账户下的token\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping(address => uint256) balances;\r\n\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    uint256 public totalSupply;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*******************************************************************************\r\n *\r\n * Artchain Token  智能合约.\r\n *\r\n * version 15, 2018-05-28\r\n *\r\n ******************************************************************************/\r\ncontract ArtChainToken is StandardToken {\r\n\r\n    // 我们token的名字， 部署以后不可更改\r\n    string public constant name = \"Artchain Global Token\";\r\n\r\n    // 我们token的代号， 部署以后不可更改\r\n    string public constant symbol = \"ACG\";\r\n\r\n    // 我们的 contract 部署的时候 之前已经有多少数量的 block\r\n    uint public startBlock;\r\n\r\n    //支持 小数点后8位的交易。 e.g. 最小交易量 0.00000001 个 token\r\n    uint public constant decimals = 8;\r\n\r\n    // 我们的 token 的总共的数量 (不用在意 *10**uint(decimals))\r\n    uint256 public totalSupply = 3500000000*10**uint(decimals); // 35亿\r\n\r\n\r\n    // founder账户 - 地址可以更改\r\n    address public founder = 0x3b7ca9550a641B2bf2c60A0AeFbf1eA48891e58b;\r\n    // 部署该合约时，founder_token = founder\r\n    // 相对应的 token 被存入(并根据规则锁定)在这个账户中\r\n    // 更改 founder 地址， token 将保留在 founder_token 地址的中，不会被转移\r\n    // 该 founder_token 的地址在合约部署后将不能被更改，该地址下的token只能按照既定的规则释放\r\n    address public constant founder_token = 0x3b7ca9550a641B2bf2c60A0AeFbf1eA48891e58b;// founder_token=founder;\r\n\r\n\r\n    // 激励团队poi账户 - 地址可以更改\r\n    address public poi = 0x98d95A8178ff41834773D3D270907942F5BE581e;\r\n    // 部署该合约时，poi_token = poi\r\n    // 相对应的 token 被存入(并根据规则锁定)在这个账户中\r\n    // 更改 poi 地址， token 将保留在 poi_token 地址的中，不会被转移\r\n    // 该 poi_token 的地址在合约部署后将不能被更改， 该地址下的token只能按照既定的规则释放\r\n    address public constant poi_token = 0x98d95A8178ff41834773D3D270907942F5BE581e; // poi_token=poi\r\n\r\n\r\n    // 用于私募的账户, 合约部署后不可更改，但是 token 可以随意转移 没有限制\r\n    address public constant privateSale = 0x31F2F3361e929192aB2558b95485329494955aC4;\r\n\r\n\r\n    // 用于冷冻账户转账/交易\r\n    // 大概每14秒产生一个block， 根据block的数量， 确定冷冻的时间，\r\n    // 产生 185143 个 block 大约需要一个月时间\r\n    uint public constant one_month = 185143;// ----   时间标准\r\n    uint public poiLockup = super.safeMul(uint(one_month), 7);  // poi 账户 冻结的时间 7个月\r\n\r\n    // 用于 暂停交易， 只能 founder 账户 才可以更改这个状态\r\n    bool public halted = false;\r\n\r\n\r\n\r\n    /*******************************************************************\r\n     *\r\n     *  部署合约的 主体\r\n     *\r\n     *******************************************************************/\r\n    function ArtChainToken() public {\r\n    //constructor() public {\r\n\r\n        // 部署该合约的时候  startBlock等于最新的 block的数量\r\n        startBlock = block.number;\r\n\r\n        // 给founder 20% 的 token， 35亿的 20% 是7亿  (不用在意 *10**uint(decimals))\r\n        balances[founder] = 700000000*10**uint(decimals); // 7亿\r\n\r\n        // 给poi账户 40% 的 token， 35亿的 40% 是14亿\r\n        balances[poi] = 1400000000*10**uint(decimals);   // 14亿\r\n\r\n        // 给私募账户 40% 的 token， 35亿的 40% 是14亿\r\n        balances[privateSale] = 1400000000*10**uint(decimals); // 14亿\r\n    }\r\n\r\n\r\n    /*******************************************************************\r\n     *\r\n     *  紧急停止所有交易， 只能 founder 账户可以运行\r\n     *\r\n     *******************************************************************/\r\n    function halt() public returns (bool success) {\r\n        if (msg.sender!=founder) return false;\r\n        halted = true;\r\n        return true;\r\n    }\r\n    function unhalt() public returns (bool success) {\r\n        if (msg.sender!=founder) return false;\r\n        halted = false;\r\n        return true;\r\n    }\r\n\r\n\r\n    /*******************************************************************\r\n     *\r\n     * 修改founder/poi的地址， 只能 “现founder” 可以修改\r\n     *\r\n     * 但是 token 还是存在 founder_token 和 poi_token下\r\n     *\r\n     *******************************************************************/\r\n    function changeFounder(address newFounder) public returns (bool success){\r\n        // 只有 \"现founder\" 可以更改 Founder的地址\r\n        if (msg.sender!=founder) return false;\r\n        founder = newFounder;\r\n        return true;\r\n    }\r\n    function changePOI(address newPOI) public returns (bool success){\r\n        // 只有 \"现founder\" 可以更改 poi的地址\r\n        if (msg.sender!=founder) return false;\r\n        poi = newPOI;\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n\r\n    /********************************************************\r\n     *\r\n     *  转移 自己账户中的 token （需要满足 冻结规则的 前提下）\r\n     *\r\n     ********************************************************/\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n\r\n      // 如果 现在是 ”暂停交易“ 状态的话， 拒绝交易\r\n      if (halted==true) return false;\r\n\r\n      // poi_token 中的 token， 判断是否在冻结时间内 冻结时间为一年， 也就是 poiLockup 个block的时间\r\n      if (msg.sender==poi_token && block.number <= startBlock + poiLockup)  return false;\r\n\r\n      // founder_token 中的 token， 根据规则分为48个月释放（初始状态有7亿）\r\n      if (msg.sender==founder_token){\r\n        // 前6个月 不能动 founder_token 账户的 余额 要维持 100% (7亿的100% = 7亿)\r\n        if (block.number <= startBlock + super.safeMul(uint(one_month), 6)  && super.safeSub(balanceOf(msg.sender), _value)<700000000*10**uint(decimals)) return false;\r\n        // 6个月到12个月  founder_token 账户的 余额 至少要 85% (7亿的85% = 5亿9千5百万)\r\n        if (block.number <= startBlock + super.safeMul(uint(one_month), 12) && super.safeSub(balanceOf(msg.sender), _value)<595000000*10**uint(decimals)) return false;\r\n        // 12个月到18个月 founder_token 账户的 余额 至少要 70% (7亿的70% = 4亿9千万)\r\n        if (block.number <= startBlock + super.safeMul(uint(one_month), 18) && super.safeSub(balanceOf(msg.sender), _value)<490000000*10**uint(decimals)) return false;\r\n        // 18个月到24个月 founder_token 账户的 余额 至少要 57.5% (7亿的57.5% = 4亿0千2百5十万)\r\n        if (block.number <= startBlock + super.safeMul(uint(one_month), 24) && super.safeSub(balanceOf(msg.sender), _value)<402500000*10**uint(decimals)) return false;\r\n        // 24个月到30个月 founder_token 账户的 余额 至少要 45% (7亿的45% = 3亿1千5百万)\r\n        if (block.number <= startBlock + super.safeMul(uint(one_month), 30) && super.safeSub(balanceOf(msg.sender), _value)<315000000*10**uint(decimals)) return false;\r\n        // 30个月到36个月 founder_token 账户的 余额 至少要 32.5% (7亿的32.5% = 2亿2千7百5十万)\r\n        if (block.number <= startBlock + super.safeMul(uint(one_month), 36) && super.safeSub(balanceOf(msg.sender), _value)<227500000*10**uint(decimals)) return false;\r\n        // 36个月到42个月 founder_token 账户的 余额 至少要 20% (7亿的20% = 1亿4千万)\r\n        if (block.number <= startBlock + super.safeMul(uint(one_month), 42) && super.safeSub(balanceOf(msg.sender), _value)<140000000*10**uint(decimals)) return false;\r\n        // 42个月到48个月 founder_token 账户的 余额 至少要 10% (7亿的10% = 7千万)\r\n        if (block.number <= startBlock + super.safeMul(uint(one_month), 48) && super.safeSub(balanceOf(msg.sender), _value)< 70000000*10**uint(decimals)) return false;\r\n        // 48个月以后 没有限制\r\n      }\r\n\r\n      //其他情况下， 正常进行交易\r\n      return super.transfer(_to, _value);\r\n    }\r\n\r\n    /********************************************************\r\n     *\r\n     *  转移 别人账户中的 token （需要满足 冻结规则的 前提下）\r\n     *\r\n     ********************************************************/\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        // 如果 现在是 ”暂停交易“ 状态的话， 拒绝交易\r\n        if (halted==true) return false;\r\n\r\n        // poi_token 中的 token， 判断是否在冻结时间内 冻结时间为一年， 也就是 poiLockup 个block的时间\r\n        if (_from==poi_token && block.number <= startBlock + poiLockup) return false;\r\n\r\n        // founder_token 中的 token， 根据规则分为48个月释放（初始状态有7亿）\r\n        if (_from==founder_token){\r\n          // 前6个月 不能动 founder_token 账户的 余额 要维持 100% (7亿的100% = 7亿)\r\n          if (block.number <= startBlock + super.safeMul(uint(one_month), 6)  && super.safeSub(balanceOf(_from), _value)<700000000*10**uint(decimals)) return false;\r\n          // 6个月到12个月  founder_token 账户的 余额 至少要 85% (7亿的85% = 5亿9千5百万)\r\n          if (block.number <= startBlock + super.safeMul(uint(one_month), 12) && super.safeSub(balanceOf(_from), _value)<595000000*10**uint(decimals)) return false;\r\n          // 12个月到18个月 founder_token 账户的 余额 至少要 70% (7亿的70% = 4亿9千万)\r\n          if (block.number <= startBlock + super.safeMul(uint(one_month), 18) && super.safeSub(balanceOf(_from), _value)<490000000*10**uint(decimals)) return false;\r\n          // 18个月到24个月 founder_token 账户的 余额 至少要 57.5% (7亿的57.5% = 4亿0千2百5十万)\r\n          if (block.number <= startBlock + super.safeMul(uint(one_month), 24) && super.safeSub(balanceOf(_from), _value)<402500000*10**uint(decimals)) return false;\r\n          // 24个月到30个月 founder_token 账户的 余额 至少要 45% (7亿的45% = 3亿1千5百万)\r\n          if (block.number <= startBlock + super.safeMul(uint(one_month), 30) && super.safeSub(balanceOf(_from), _value)<315000000*10**uint(decimals)) return false;\r\n          // 30个月到36个月 founder_token 账户的 余额 至少要 32.5% (7亿的32.5% = 2亿2千7百5十万)\r\n          if (block.number <= startBlock + super.safeMul(uint(one_month), 36) && super.safeSub(balanceOf(_from), _value)<227500000*10**uint(decimals)) return false;\r\n          // 36个月到42个月 founder_token 账户的 余额 至少要 20% (7亿的20% = 1亿4千万)\r\n          if (block.number <= startBlock + super.safeMul(uint(one_month), 42) && super.safeSub(balanceOf(_from), _value)<140000000*10**uint(decimals)) return false;\r\n          // 42个月到48个月 founder_token 账户的 余额 至少要 10% (7亿的10% = 7千万)\r\n          if (block.number <= startBlock + super.safeMul(uint(one_month), 48) && super.safeSub(balanceOf(_from), _value)< 70000000*10**uint(decimals)) return false;\r\n          // 48个月以后 没有限制\r\n        }\r\n\r\n        //其他情况下， 正常进行交易\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /***********************************************************、、\r\n     *\r\n     * 销毁 自己账户内的 tokens\r\n     *\r\n     ***********************************************************/\r\n    function burn(uint256 _value) public returns (bool success) {\r\n\r\n      // 如果 现在是 ”暂停交易“ 状态的话， 拒绝交易\r\n      if (halted==true) return false;\r\n\r\n      // poi_token 中的 token， 判断是否在冻结时间内 冻结时间为 poiLockup 个block的时间\r\n      if (msg.sender==poi_token && block.number <= startBlock + poiLockup) return false;\r\n\r\n      // founder_token 中的 token， 不可以被销毁\r\n      if (msg.sender==founder_token) return false;\r\n\r\n\r\n      //如果 该账户 不足 输入的 token 数量， 终止交易\r\n      if (balances[msg.sender] < _value) return false;\r\n      //如果 要销毁的 _value 是负数， 终止交易\r\n      if (balances[msg.sender] - _value > balances[msg.sender]) return false;\r\n\r\n\r\n      // 除了以上的 情况， 下面进行 销毁过程\r\n\r\n      // 账户token数量减小， 使用 safemath\r\n      balances[msg.sender] = super.safeSub(balances[msg.sender], _value);\r\n      // 由于账户token数量 被销毁， 所以 token的总数量也会减少， 使用 safemath\r\n      totalSupply = super.safeSub(totalSupply, _value);\r\n\r\n      emit Burn(msg.sender, _value); //呼叫event\r\n\r\n      return true;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    /***********************************************************、、\r\n     *\r\n     * 销毁 别人账户内的 tokens\r\n     *\r\n     ***********************************************************/\r\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n\r\n      // 如果 现在是 ”暂停交易“ 状态的话， 拒绝交易\r\n      if (halted==true) return false;\r\n\r\n      // 如果 要销毁 poi_token 中的 token，\r\n      // 需要判断是否在冻结时间内 （冻结时间为 poiLockup 个block的时间）\r\n      if (_from==poi_token && block.number <= startBlock + poiLockup) return false;\r\n\r\n      // 如果要销毁 founder_token 下的 token， 停止交易\r\n      // founder_token 中的 token， 不可以被销毁\r\n      if (_from==founder_token) return false;\r\n\r\n\r\n      //如果 该账户 不足 输入的 token 数量， 终止交易\r\n      if (balances[_from] < _value) return false;\r\n      //如果 该账户 给这个 msg.sender 的权限不足 输入的 token 数量， 终止交易\r\n      if (allowed[_from][msg.sender] < _value) return false;\r\n      //如果 要销毁的 _value 是负数， 终止交易\r\n      if (balances[_from] - _value > balances[_from]) return false;\r\n\r\n\r\n      // 除了以上的 情况， 下面进行 销毁过程\r\n\r\n      // from账户中 msg.sender可以支配的 token数量 也减少， 使用 safemath\r\n      allowed[_from][msg.sender] = super.safeSub(allowed[_from][msg.sender], _value);\r\n      // 账户token数量减小， 使用 safemath\r\n      balances[_from] = super.safeSub(balances[_from], _value);\r\n      // 由于账户token数量 被销毁， 所以 token的总数量也会减少， 使用 safemath\r\n      totalSupply = super.safeSub(totalSupply, _value);\r\n\r\n      emit Burn(_from, _value); //呼叫 event\r\n\r\n      return true;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"poi\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"poi_token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"halt\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"one_month\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder_token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newFounder\",\"type\":\"address\"}],\"name\":\"changeFounder\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"halted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"privateSale\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPOI\",\"type\":\"address\"}],\"name\":\"changePOI\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unhalt\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"poiLockup\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"ArtChainToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2b2fb9d6f453895a8eaeee6686a9d87fa9101f3475a4b4099e4536fe5a7469d0"}]}