{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\n\r\nlibrary SafeMath {\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(a <= c);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tassert(a >= b);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a / b;\r\n\t}\r\n}\r\n\r\n\r\ncontract ContractReceiver {\r\n\tfunction tokenFallback(address from, uint256 value, bytes data) public;\r\n}\r\n\r\n\r\ncontract AuctusToken {\r\n\tfunction transfer(address to, uint256 value) public returns (bool);\r\n\tfunction transfer(address to, uint256 value, bytes data) public returns (bool);\r\n\tfunction burn(uint256 value) public returns (bool);\r\n\tfunction setTokenSaleFinished() public;\r\n}\r\n\r\n\r\ncontract AuctusWhitelist {\r\n\tfunction getAllowedAmountToContribute(address addr) view public returns(uint256);\r\n}\r\n\r\n\r\ncontract AuctusTokenSale is ContractReceiver {\r\n\tusing SafeMath for uint256;\r\n\r\n\taddress public auctusTokenAddress = 0xfD89de68b246eB3e21B06e9B65450AC28D222488;\r\n\taddress public auctusWhiteListAddress = 0xA6e728E524c1D7A65fE5193cA1636265DE9Bc982;\r\n\r\n\tuint256 public startTime = 1522159200; //2018-03-27 2 PM UTC\r\n\tuint256 public endTime; \r\n\r\n\tuint256 public basicPricePerEth = 2000;\r\n\r\n\taddress public owner;\r\n\tuint256 public softCap;\r\n\tuint256 public remainingTokens;\r\n\tuint256 public weiRaised;\r\n\tmapping(address => uint256) public invested;\r\n\r\n\tbool public saleWasSet;\r\n\tbool public tokenSaleHalted;\r\n\r\n\tevent Buy(address indexed buyer, uint256 tokenAmount);\r\n\tevent Revoke(address indexed buyer, uint256 investedAmount);\r\n\r\n\tfunction AuctusTokenSale(uint256 minimumCap, uint256 endSaleTime) public {\r\n\t\towner = msg.sender;\r\n\t\tsoftCap = minimumCap;\r\n\t\tendTime = endSaleTime;\r\n\t\tsaleWasSet = false;\r\n\t\ttokenSaleHalted = false;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(owner == msg.sender);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier openSale() {\r\n\t\trequire(saleWasSet && !tokenSaleHalted && now >= startTime && now <= endTime && remainingTokens > 0);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier saleCompletedSuccessfully() {\r\n\t\trequire(weiRaised >= softCap && (now > endTime || remainingTokens == 0));\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier saleFailed() {\r\n\t\trequire(weiRaised < softCap && now > endTime);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) onlyOwner public {\r\n\t\trequire(newOwner != address(0));\r\n\t\towner = newOwner;\r\n\t}\r\n\r\n\tfunction setTokenSaleHalt(bool halted) onlyOwner public {\r\n\t\ttokenSaleHalted = halted;\r\n\t}\r\n\r\n\tfunction setSoftCap(uint256 minimumCap) onlyOwner public {\r\n\t\trequire(now < startTime);\r\n\t\tsoftCap = minimumCap;\r\n\t}\r\n\r\n\tfunction setEndSaleTime(uint256 endSaleTime) onlyOwner public {\r\n\t\trequire(now < endTime);\r\n\t\tendTime = endSaleTime;\r\n\t}\r\n\r\n\tfunction tokenFallback(address, uint256 value, bytes) public {\r\n\t\trequire(msg.sender == auctusTokenAddress);\r\n\t\trequire(!saleWasSet);\r\n\t\tsetTokenSaleDistribution(value);\r\n\t}\r\n\r\n\tfunction()\r\n\t\tpayable\r\n\t\topenSale\r\n\t\tpublic\r\n\t{\r\n\t\tuint256 weiToInvest;\r\n\t\tuint256 weiRemaining;\r\n\t\t(weiToInvest, weiRemaining) = getValueToInvest();\r\n\r\n\t\trequire(weiToInvest > 0);\r\n\r\n\t\tuint256 tokensToReceive = weiToInvest.mul(basicPricePerEth);\r\n\t\tremainingTokens = remainingTokens.sub(tokensToReceive);\r\n\t\tweiRaised = weiRaised.add(weiToInvest);\r\n\t\tinvested[msg.sender] = invested[msg.sender].add(weiToInvest);\r\n\r\n\t\tif (weiRemaining > 0) {\r\n\t\t\tmsg.sender.transfer(weiRemaining);\r\n\t\t}\r\n\t\tassert(AuctusToken(auctusTokenAddress).transfer(msg.sender, tokensToReceive));\r\n\r\n\t\temit Buy(msg.sender, tokensToReceive);\r\n\t}\r\n\r\n\tfunction revoke() saleFailed public {\r\n\t\tuint256 investedValue = invested[msg.sender];\r\n\t\trequire(investedValue > 0);\r\n\r\n\t\tinvested[msg.sender] = 0;\r\n\t\tmsg.sender.transfer(investedValue);\r\n\r\n\t\temit Revoke(msg.sender, investedValue);\r\n\t}\r\n\r\n\tfunction finish() \r\n\t\tonlyOwner\r\n\t\tsaleCompletedSuccessfully \r\n\t\tpublic \r\n\t{\r\n\t\t//40% of the ethers are unvested\r\n\t\tuint256 freeEthers = address(this).balance * 40 / 100;\r\n\t\tuint256 vestedEthers = address(this).balance - freeEthers;\r\n\r\n\t\taddress(0xd1B10607921C78D9a00529294C4b99f1bd250E1c).transfer(freeEthers); //Owner\r\n\t\tassert(address(0x0285d35508e1A1f833142EB5211adb858Bd3323A).call.value(vestedEthers)()); //AuctusEtherVesting SC\r\n\r\n\t\tAuctusToken token = AuctusToken(auctusTokenAddress);\r\n\t\ttoken.setTokenSaleFinished();\r\n\t\tif (remainingTokens > 0) {\r\n\t\t\ttoken.burn(remainingTokens);\r\n\t\t\tremainingTokens = 0;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getValueToInvest() view private returns (uint256, uint256) {\r\n\t\tuint256 allowedValue = AuctusWhitelist(auctusWhiteListAddress).getAllowedAmountToContribute(msg.sender);\r\n\r\n\t\tuint256 weiToInvest;\r\n\t\tif (allowedValue == 0) {\r\n\t\t\tweiToInvest = 0;\r\n\t\t} else if (allowedValue >= invested[msg.sender].add(msg.value)) {\r\n\t\t\tweiToInvest = getAllowedAmount(msg.value);\r\n\t\t} else {\r\n\t\t\tweiToInvest = getAllowedAmount(allowedValue.sub(invested[msg.sender]));\r\n\t\t}\r\n\t\treturn (weiToInvest, msg.value.sub(weiToInvest));\r\n\t}\r\n\r\n\tfunction getAllowedAmount(uint256 value) view private returns (uint256) {\r\n\t\tuint256 maximumValue = remainingTokens / basicPricePerEth;\r\n\t\tif (value > maximumValue) {\r\n\t\t\treturn maximumValue;\r\n\t\t} else {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setTokenSaleDistribution(uint256 totalAmount) private {\r\n\t\t//Auctus core team 20%\r\n\t\tuint256 auctusCoreTeam = totalAmount * 20 / 100;\r\n\t\t//Bounty 2%\r\n\t\tuint256 bounty = totalAmount * 2 / 100;\r\n\t\t//Reserve for Future 18%\r\n\t\tuint256 reserveForFuture = totalAmount * 18 / 100;\r\n\t\t//Partnerships and Advisory free amount 1.8%\r\n\t\tuint256 partnershipsAdvisoryFree = totalAmount * 18 / 1000;\r\n\t\t//Partnerships and Advisory vested amount 7.2%\r\n\t\tuint256 partnershipsAdvisoryVested = totalAmount * 72 / 1000;\r\n\r\n\t\tuint256 privateSales = 2970000000000000000000000;\r\n\t\tuint256 preSale = 2397307557007329968290000;\r\n\r\n\t\ttransferTokens(auctusCoreTeam, bounty, reserveForFuture, preSale, partnershipsAdvisoryVested, partnershipsAdvisoryFree, privateSales);\r\n\t\t\r\n\t\tremainingTokens = totalAmount - auctusCoreTeam - bounty - reserveForFuture - preSale - partnershipsAdvisoryVested - partnershipsAdvisoryFree - privateSales;\r\n\t\tsaleWasSet = true;\r\n\t}\r\n\t\r\n\tfunction transferTokens(\r\n\t\tuint256 auctusCoreTeam,\r\n\t\tuint256 bounty,\r\n\t\tuint256 reserveForFuture,\r\n\t\tuint256 preSale,\r\n\t\tuint256 partnershipsAdvisoryVested,\r\n\t\tuint256 partnershipsAdvisoryFree,\r\n\t\tuint256 privateSales\r\n\t) private {\r\n\t\tAuctusToken token = AuctusToken(auctusTokenAddress);\r\n\t\tbytes memory empty;\r\n\t\tassert(token.transfer(0x6bc58c572d0973cF0EfA1Fe1D7D6c9d7Eea2cd23, auctusCoreTeam, empty)); //AuctusTokenVesting SC\r\n\t\tassert(token.transfer(0x936Cf3e904B83B1D939C41475DC5F7c470419A3E, bounty, empty)); //AuctusBountyDistribution SC\r\n\t\tassert(token.transfer(0xF5ad5fF703D0AD0df3bAb3A1194FbCC5c152bf3b, reserveForFuture, empty)); //AuctusTokenVesting SC\r\n\t\tassert(token.transfer(0x2cE4FAb9F313F1df0978869C5d302768F1bB471d, preSale, empty)); //AuctusPreSaleDistribution SC\r\n\t\tassert(token.transfer(0x03f6278E5c359a5E8947a62E87D85AC394580d13, partnershipsAdvisoryVested, empty)); //AuctusTokenVesting SC\r\n\t\tassert(token.transfer(0x6c89Cc03036193d52e9b8386413b545184BDAb99, partnershipsAdvisoryFree));\r\n\t\tassert(token.transfer(0xd1B10607921C78D9a00529294C4b99f1bd250E1c, privateSales));\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"auctusTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSaleHalted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"invested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basicPricePerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"endSaleTime\",\"type\":\"uint256\"}],\"name\":\"setEndSaleTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleWasSet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"halted\",\"type\":\"bool\"}],\"name\":\"setTokenSaleHalt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auctusWhiteListAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"revoke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remainingTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finish\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"minimumCap\",\"type\":\"uint256\"}],\"name\":\"setSoftCap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"minimumCap\",\"type\":\"uint256\"},{\"name\":\"endSaleTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"investedAmount\",\"type\":\"uint256\"}],\"name\":\"Revoke\",\"type\":\"event\"}]","ContractName":"AuctusTokenSale","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000006c6b935b8bbd400000000000000000000000000000000000000000000000000000000000005abf9460","Library":"","SwarmSource":"bzzr://937c41e240cf2a0d65d5995aa042a19116d448f3d3816402276c691d6b0ee241"}]}