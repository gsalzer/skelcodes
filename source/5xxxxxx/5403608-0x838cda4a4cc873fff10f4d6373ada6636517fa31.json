{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n// copyright contact@Etheremon.com\r\n\r\ncontract BasicAccessControl {\r\n    address public owner;\r\n    // address[] public moderators;\r\n    uint16 public totalModerators = 0;\r\n    mapping (address => bool) public moderators;\r\n    bool public isMaintaining = true;\r\n\r\n    function BasicAccessControl() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyModerators() {\r\n        require(msg.sender == owner || moderators[msg.sender] == true);\r\n        _;\r\n    }\r\n\r\n    modifier isActive {\r\n        require(!isMaintaining);\r\n        _;\r\n    }\r\n\r\n    function ChangeOwner(address _newOwner) onlyOwner public {\r\n        if (_newOwner != address(0)) {\r\n            owner = _newOwner;\r\n        }\r\n    }\r\n\r\n\r\n    function AddModerator(address _newModerator) onlyOwner public {\r\n        if (moderators[_newModerator] == false) {\r\n            moderators[_newModerator] = true;\r\n            totalModerators += 1;\r\n        }\r\n    }\r\n    \r\n    function RemoveModerator(address _oldModerator) onlyOwner public {\r\n        if (moderators[_oldModerator] == true) {\r\n            moderators[_oldModerator] = false;\r\n            totalModerators -= 1;\r\n        }\r\n    }\r\n\r\n    function UpdateMaintaining(bool _isMaintaining) onlyOwner public {\r\n        isMaintaining = _isMaintaining;\r\n    }\r\n}\r\n\r\n\r\ncontract EtheremonRankData is BasicAccessControl {\r\n\r\n    struct PlayerData {\r\n        address trainer;\r\n        uint32 point;\r\n        uint32 energy;\r\n        uint lastClaim;\r\n        uint32 totalWin;\r\n        uint32 totalLose;\r\n        uint64[6] monsters;\r\n    }\r\n    \r\n    mapping(uint32 => PlayerData) players;\r\n    mapping(address => uint32) playerIds;\r\n    \r\n    uint32 public totalPlayer = 0;\r\n    uint32 public startingPoint = 1200;\r\n    \r\n    // only moderators\r\n    /*\r\n    TO AVOID ANY BUGS, WE ALLOW MODERATORS TO HAVE PERMISSION TO ALL THESE FUNCTIONS AND UPDATE THEM IN EARLY BETA STAGE.\r\n    AFTER THE SYSTEM IS STABLE, WE WILL REMOVE OWNER OF THIS SMART CONTRACT AND ONLY KEEP ONE MODERATOR WHICH IS ETHEREMON BATTLE CONTRACT.\r\n    HENCE, THE DECENTRALIZED ATTRIBUTION IS GUARANTEED.\r\n    */\r\n    \r\n    function updateConfig(uint32 _startingPoint) onlyModerators external {\r\n        startingPoint = _startingPoint;\r\n    }\r\n    \r\n    function setPlayer(address _trainer, uint64 _a0, uint64 _a1, uint64 _a2, uint64 _s0, uint64 _s1, uint64 _s2) onlyModerators external returns(uint32 playerId){\r\n        require(_trainer != address(0));\r\n        playerId = playerIds[_trainer];\r\n        \r\n        bool isNewPlayer = false;\r\n        if (playerId == 0) {\r\n            totalPlayer += 1;\r\n            playerId = totalPlayer;\r\n            playerIds[_trainer] = playerId;\r\n            isNewPlayer = true;\r\n        }\r\n        \r\n        PlayerData storage player = players[playerId];\r\n        if (isNewPlayer)\r\n            player.point = startingPoint;\r\n        player.trainer = _trainer;\r\n        player.monsters[0] = _a0;\r\n        player.monsters[1] = _a1;\r\n        player.monsters[2] = _a2;\r\n        player.monsters[3] = _s0;\r\n        player.monsters[4] = _s1;\r\n        player.monsters[5] = _s2;\r\n    }\r\n    \r\n    function updatePlayerPoint(uint32 _playerId, uint32 _totalWin, uint32 _totalLose, uint32 _point) onlyModerators external {\r\n        PlayerData storage player = players[_playerId];\r\n        player.point = _point;\r\n        player.totalWin = _totalWin;\r\n        player.totalLose = _totalLose;\r\n    }\r\n    \r\n    function updateEnergy(uint32 _playerId, uint32 _energy, uint _lastClaim) onlyModerators external {\r\n        PlayerData storage player = players[_playerId];\r\n        player.energy = _energy;\r\n        player.lastClaim = _lastClaim;\r\n    }\r\n    \r\n    // read access \r\n    function getPlayerData(uint32 _playerId) constant external returns(address trainer, uint32 totalWin, uint32 totalLose, uint32 point, \r\n        uint64 a0, uint64 a1, uint64 a2, uint64 s0, uint64 s1, uint64 s2, uint32 energy, uint lastClaim) {\r\n        PlayerData memory player = players[_playerId];\r\n        return (player.trainer, player.totalWin, player.totalLose, player.point, player.monsters[0], player.monsters[1], player.monsters[2], \r\n            player.monsters[3], player.monsters[4], player.monsters[5], player.energy, player.lastClaim);\r\n    }\r\n    \r\n    function getPlayerDataByAddress(address _trainer) constant external returns(uint32 playerId, uint32 totalWin, uint32 totalLose, uint32 point,\r\n        uint64 a0, uint64 a1, uint64 a2, uint64 s0, uint64 s1, uint64 s2, uint32 energy, uint lastClaim) {\r\n        playerId = playerIds[_trainer];\r\n        PlayerData memory player = players[playerId];\r\n        totalWin = player.totalWin;\r\n        totalLose = player.totalLose;\r\n        point = player.point;\r\n        a0 = player.monsters[0];\r\n        a1 = player.monsters[1];\r\n        a2 = player.monsters[2];\r\n        s0 = player.monsters[3];\r\n        s1 = player.monsters[4];\r\n        s2 = player.monsters[5];\r\n        energy = player.energy;\r\n        lastClaim = player.lastClaim;\r\n    }\r\n    \r\n    function isOnBattle(address _trainer, uint64 _objId) constant external returns(bool) {\r\n        uint32 playerId = playerIds[_trainer];\r\n        if (playerId == 0)\r\n            return false;\r\n        PlayerData memory player = players[playerId];\r\n        for (uint i = 0; i < player.monsters.length; i++)\r\n            if (player.monsters[i] == _objId)\r\n                return true;\r\n        return false;\r\n    }\r\n\r\n    function getPlayerPoint(uint32 _playerId) constant external returns(address trainer, uint32 totalWin, uint32 totalLose, uint32 point) {\r\n        PlayerData memory player = players[_playerId];\r\n        return (player.trainer, player.totalWin, player.totalLose, player.point);\r\n    }\r\n    \r\n    function getPlayerId(address _trainer) constant external returns(uint32 playerId) {\r\n        return playerIds[_trainer];\r\n    }\r\n\r\n    function getPlayerEnergy(uint32 _playerId) constant external returns(address trainer, uint32 energy, uint lastClaim) {\r\n        PlayerData memory player = players[_playerId];\r\n        trainer = player.trainer;\r\n        energy = player.energy;\r\n        lastClaim = player.lastClaim;\r\n    }\r\n    \r\n    function getPlayerEnergyByAddress(address _trainer) constant external returns(uint32 playerId, uint32 energy, uint lastClaim) {\r\n        playerId = playerIds[_trainer];\r\n        PlayerData memory player = players[playerId];\r\n        energy = player.energy;\r\n        lastClaim = player.lastClaim;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_playerId\",\"type\":\"uint32\"},{\"name\":\"_totalWin\",\"type\":\"uint32\"},{\"name\":\"_totalLose\",\"type\":\"uint32\"},{\"name\":\"_point\",\"type\":\"uint32\"}],\"name\":\"updatePlayerPoint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"moderators\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_playerId\",\"type\":\"uint32\"}],\"name\":\"getPlayerData\",\"outputs\":[{\"name\":\"trainer\",\"type\":\"address\"},{\"name\":\"totalWin\",\"type\":\"uint32\"},{\"name\":\"totalLose\",\"type\":\"uint32\"},{\"name\":\"point\",\"type\":\"uint32\"},{\"name\":\"a0\",\"type\":\"uint64\"},{\"name\":\"a1\",\"type\":\"uint64\"},{\"name\":\"a2\",\"type\":\"uint64\"},{\"name\":\"s0\",\"type\":\"uint64\"},{\"name\":\"s1\",\"type\":\"uint64\"},{\"name\":\"s2\",\"type\":\"uint64\"},{\"name\":\"energy\",\"type\":\"uint32\"},{\"name\":\"lastClaim\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_trainer\",\"type\":\"address\"}],\"name\":\"getPlayerDataByAddress\",\"outputs\":[{\"name\":\"playerId\",\"type\":\"uint32\"},{\"name\":\"totalWin\",\"type\":\"uint32\"},{\"name\":\"totalLose\",\"type\":\"uint32\"},{\"name\":\"point\",\"type\":\"uint32\"},{\"name\":\"a0\",\"type\":\"uint64\"},{\"name\":\"a1\",\"type\":\"uint64\"},{\"name\":\"a2\",\"type\":\"uint64\"},{\"name\":\"s0\",\"type\":\"uint64\"},{\"name\":\"s1\",\"type\":\"uint64\"},{\"name\":\"s2\",\"type\":\"uint64\"},{\"name\":\"energy\",\"type\":\"uint32\"},{\"name\":\"lastClaim\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_startingPoint\",\"type\":\"uint32\"}],\"name\":\"updateConfig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_trainer\",\"type\":\"address\"},{\"name\":\"_objId\",\"type\":\"uint64\"}],\"name\":\"isOnBattle\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_isMaintaining\",\"type\":\"bool\"}],\"name\":\"UpdateMaintaining\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_trainer\",\"type\":\"address\"},{\"name\":\"_a0\",\"type\":\"uint64\"},{\"name\":\"_a1\",\"type\":\"uint64\"},{\"name\":\"_a2\",\"type\":\"uint64\"},{\"name\":\"_s0\",\"type\":\"uint64\"},{\"name\":\"_s1\",\"type\":\"uint64\"},{\"name\":\"_s2\",\"type\":\"uint64\"}],\"name\":\"setPlayer\",\"outputs\":[{\"name\":\"playerId\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalModerators\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_trainer\",\"type\":\"address\"}],\"name\":\"getPlayerEnergyByAddress\",\"outputs\":[{\"name\":\"playerId\",\"type\":\"uint32\"},{\"name\":\"energy\",\"type\":\"uint32\"},{\"name\":\"lastClaim\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newModerator\",\"type\":\"address\"}],\"name\":\"AddModerator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_playerId\",\"type\":\"uint32\"}],\"name\":\"getPlayerEnergy\",\"outputs\":[{\"name\":\"trainer\",\"type\":\"address\"},{\"name\":\"energy\",\"type\":\"uint32\"},{\"name\":\"lastClaim\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oldModerator\",\"type\":\"address\"}],\"name\":\"RemoveModerator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startingPoint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_playerId\",\"type\":\"uint32\"}],\"name\":\"getPlayerPoint\",\"outputs\":[{\"name\":\"trainer\",\"type\":\"address\"},{\"name\":\"totalWin\",\"type\":\"uint32\"},{\"name\":\"totalLose\",\"type\":\"uint32\"},{\"name\":\"point\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalPlayer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_trainer\",\"type\":\"address\"}],\"name\":\"getPlayerId\",\"outputs\":[{\"name\":\"playerId\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_playerId\",\"type\":\"uint32\"},{\"name\":\"_energy\",\"type\":\"uint32\"},{\"name\":\"_lastClaim\",\"type\":\"uint256\"}],\"name\":\"updateEnergy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isMaintaining\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"EtheremonRankData","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://04603fb9dd9060a18d51f5e716bad2e640e85d2300225c5234c83c1b27d4563d"}]}