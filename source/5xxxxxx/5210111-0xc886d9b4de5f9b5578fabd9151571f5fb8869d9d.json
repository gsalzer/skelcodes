{"status":"1","message":"OK","result":[{"SourceCode":"// KpopCeleb is a ERC-721 celeb (https://github.com/ethereum/eips/issues/721)\r\n// Kpop celebrity cards as digital collectibles\r\n// Kpop.io is the official website\r\n\r\npragma solidity ^0.4.18;\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract ERC721 {\r\n  function approve(address _to, uint _celebId) public;\r\n  function balanceOf(address _owner) public view returns (uint balance);\r\n  function implementsERC721() public pure returns (bool);\r\n  function ownerOf(uint _celebId) public view returns (address addr);\r\n  function takeOwnership(uint _celebId) public;\r\n  function totalSupply() public view returns (uint total);\r\n  function transferFrom(address _from, address _to, uint _celebId) public;\r\n  function transfer(address _to, uint _celebId) public;\r\n\r\n  event Transfer(address indexed from, address indexed to, uint celebId);\r\n  event Approval(address indexed owner, address indexed approved, uint celebId);\r\n}\r\n\r\ncontract KpopCeleb is ERC721 {\r\n  using SafeMath for uint;\r\n\r\n  address public author;\r\n  address public coauthor;\r\n\r\n  string public constant NAME = \"KpopCeleb\";\r\n  string public constant SYMBOL = \"KpopCeleb\";\r\n\r\n  uint public GROWTH_BUMP = 0.5 ether;\r\n  uint public MIN_STARTING_PRICE = 0.002 ether;\r\n  uint public PRICE_INCREASE_SCALE = 120; // 120% of previous price\r\n\r\n  struct Celeb {\r\n    string name;\r\n  }\r\n\r\n  Celeb[] public celebs;\r\n\r\n  mapping(uint => address) public celebIdToOwner;\r\n  mapping(uint => uint) public celebIdToPrice; // in wei\r\n  mapping(address => uint) public userToNumCelebs;\r\n  mapping(uint => address) public celebIdToApprovedRecipient;\r\n  mapping(uint => uint[6]) public celebIdToTraitValues;\r\n  mapping(uint => uint[6]) public celebIdToTraitBoosters;\r\n\r\n  address public KPOP_ARENA_CONTRACT_ADDRESS = 0x0;\r\n\r\n  event Transfer(address indexed from, address indexed to, uint celebId);\r\n  event Approval(address indexed owner, address indexed approved, uint celebId);\r\n  event CelebSold(uint celebId, uint oldPrice, uint newPrice, string celebName, address prevOwner, address newOwner);\r\n\r\n  function KpopCeleb() public {\r\n    author = msg.sender;\r\n    coauthor = msg.sender;\r\n  }\r\n\r\n  function _transfer(address _from, address _to, uint _celebId) private {\r\n    require(ownerOf(_celebId) == _from);\r\n    require(!isNullAddress(_to));\r\n    require(balanceOf(_from) > 0);\r\n\r\n    uint prevBalances = balanceOf(_from) + balanceOf(_to);\r\n    celebIdToOwner[_celebId] = _to;\r\n    userToNumCelebs[_from]--;\r\n    userToNumCelebs[_to]++;\r\n\r\n    // Clear outstanding approvals\r\n    delete celebIdToApprovedRecipient[_celebId];\r\n\r\n    Transfer(_from, _to, _celebId);\r\n\r\n    assert(balanceOf(_from) + balanceOf(_to) == prevBalances);\r\n  }\r\n\r\n  function buy(uint _celebId) payable public {\r\n    address prevOwner = ownerOf(_celebId);\r\n    uint currentPrice = celebIdToPrice[_celebId];\r\n\r\n    require(prevOwner != msg.sender);\r\n    require(!isNullAddress(msg.sender));\r\n    require(msg.value >= currentPrice);\r\n\r\n    // Take a cut off the payment\r\n    uint payment = uint(SafeMath.div(SafeMath.mul(currentPrice, 92), 100));\r\n    uint leftover = SafeMath.sub(msg.value, currentPrice);\r\n    uint newPrice;\r\n\r\n    _transfer(prevOwner, msg.sender, _celebId);\r\n\r\n    if (currentPrice < GROWTH_BUMP) {\r\n      newPrice = SafeMath.mul(currentPrice, 2);\r\n    } else {\r\n      newPrice = SafeMath.div(SafeMath.mul(currentPrice, PRICE_INCREASE_SCALE), 100);\r\n    }\r\n\r\n    celebIdToPrice[_celebId] = newPrice;\r\n\r\n    if (prevOwner != address(this)) {\r\n      prevOwner.transfer(payment);\r\n    }\r\n\r\n    CelebSold(_celebId, currentPrice, newPrice,\r\n      celebs[_celebId].name, prevOwner, msg.sender);\r\n\r\n    msg.sender.transfer(leftover);\r\n  }\r\n\r\n  function balanceOf(address _owner) public view returns (uint balance) {\r\n    return userToNumCelebs[_owner];\r\n  }\r\n\r\n  function ownerOf(uint _celebId) public view returns (address addr) {\r\n    return celebIdToOwner[_celebId];\r\n  }\r\n\r\n  function totalSupply() public view returns (uint total) {\r\n    return celebs.length;\r\n  }\r\n\r\n  function transfer(address _to, uint _celebId) public {\r\n    _transfer(msg.sender, _to, _celebId);\r\n  }\r\n\r\n  /** START FUNCTIONS FOR AUTHORS **/\r\n\r\n  function createCeleb(string _name, uint _price, uint[6] _traitValues, uint[6] _traitBoosters) public onlyAuthors {\r\n    require(_price >= MIN_STARTING_PRICE);\r\n\r\n    uint celebId = celebs.push(Celeb(_name)) - 1;\r\n    celebIdToOwner[celebId] = author;\r\n    celebIdToPrice[celebId] = _price;\r\n    celebIdToTraitValues[celebId] = _traitValues;\r\n    celebIdToTraitBoosters[celebId] = _traitBoosters;\r\n    userToNumCelebs[author]++;\r\n  }\r\n\r\n  function updateCeleb(uint _celebId, uint[6] _traitValues, uint[6] _traitBoosters) public onlyAuthors {\r\n    require(_celebId >= 0 && _celebId < totalSupply());\r\n\r\n    celebIdToTraitValues[_celebId] = _traitValues;\r\n    celebIdToTraitBoosters[_celebId] = _traitBoosters;\r\n  }\r\n\r\n  function withdraw(uint _amount, address _to) public onlyAuthors {\r\n    require(!isNullAddress(_to));\r\n    require(_amount <= this.balance);\r\n\r\n    _to.transfer(_amount);\r\n  }\r\n\r\n  function withdrawAll() public onlyAuthors {\r\n    require(author != 0x0);\r\n    require(coauthor != 0x0);\r\n\r\n    uint halfBalance = uint(SafeMath.div(this.balance, 2));\r\n\r\n    author.transfer(halfBalance);\r\n    coauthor.transfer(halfBalance);\r\n  }\r\n\r\n  function setCoAuthor(address _coauthor) public onlyAuthor {\r\n    require(!isNullAddress(_coauthor));\r\n\r\n    coauthor = _coauthor;\r\n  }\r\n\r\n  function setKpopArenaContractAddress(address _address) public onlyAuthors {\r\n    require(!isNullAddress(_address));\r\n\r\n    KPOP_ARENA_CONTRACT_ADDRESS = _address;\r\n  }\r\n\r\n  function updateTraits(uint _celebId) public onlyArena {\r\n    require(_celebId < totalSupply());\r\n\r\n    for (uint i = 0; i < 6; i++) {\r\n      uint booster = celebIdToTraitBoosters[_celebId][i];\r\n      celebIdToTraitValues[_celebId][i] = celebIdToTraitValues[_celebId][i].add(booster);\r\n    }\r\n  }\r\n\r\n  /** END FUNCTIONS FOR AUTHORS **/\r\n\r\n  function getCeleb(uint _celebId) public view returns (\r\n    string name,\r\n    uint price,\r\n    address owner,\r\n    uint[6] traitValues,\r\n    uint[6] traitBoosters\r\n  ) {\r\n    name = celebs[_celebId].name;\r\n    price = celebIdToPrice[_celebId];\r\n    owner = celebIdToOwner[_celebId];\r\n    traitValues = celebIdToTraitValues[_celebId];\r\n    traitBoosters = celebIdToTraitBoosters[_celebId];\r\n  }\r\n\r\n  /** START FUNCTIONS RELATED TO EXTERNAL CONTRACT INTERACTIONS **/\r\n\r\n  function approve(address _to, uint _celebId) public {\r\n    require(msg.sender == ownerOf(_celebId));\r\n\r\n    celebIdToApprovedRecipient[_celebId] = _to;\r\n\r\n    Approval(msg.sender, _to, _celebId);\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint _celebId) public {\r\n    require(ownerOf(_celebId) == _from);\r\n    require(isApproved(_to, _celebId));\r\n    require(!isNullAddress(_to));\r\n\r\n    _transfer(_from, _to, _celebId);\r\n  }\r\n\r\n  function takeOwnership(uint _celebId) public {\r\n    require(!isNullAddress(msg.sender));\r\n    require(isApproved(msg.sender, _celebId));\r\n\r\n    address currentOwner = celebIdToOwner[_celebId];\r\n\r\n    _transfer(currentOwner, msg.sender, _celebId);\r\n  }\r\n\r\n  /** END FUNCTIONS RELATED TO EXTERNAL CONTRACT INTERACTIONS **/\r\n\r\n  function implementsERC721() public pure returns (bool) {\r\n    return true;\r\n  }\r\n\r\n  /** MODIFIERS **/\r\n\r\n  modifier onlyAuthor() {\r\n    require(msg.sender == author);\r\n    _;\r\n  }\r\n\r\n  modifier onlyAuthors() {\r\n    require(msg.sender == author || msg.sender == coauthor);\r\n    _;\r\n  }\r\n\r\n  modifier onlyArena() {\r\n    require(msg.sender == author || msg.sender == coauthor || msg.sender == KPOP_ARENA_CONTRACT_ADDRESS);\r\n    _;\r\n  }\r\n\r\n  /** FUNCTIONS THAT WONT BE USED FREQUENTLY **/\r\n\r\n  function setMinStartingPrice(uint _price) public onlyAuthors {\r\n    MIN_STARTING_PRICE = _price;\r\n  }\r\n\r\n  function setGrowthBump(uint _bump) public onlyAuthors {\r\n    GROWTH_BUMP = _bump;\r\n  }\r\n\r\n  function setPriceIncreaseScale(uint _scale) public onlyAuthors {\r\n    PRICE_INCREASE_SCALE = _scale;\r\n  }\r\n\r\n  /** PRIVATE FUNCTIONS **/\r\n\r\n  function isApproved(address _to, uint _celebId) private view returns (bool) {\r\n    return celebIdToApprovedRecipient[_celebId] == _to;\r\n  }\r\n\r\n  function isNullAddress(address _addr) private pure returns (bool) {\r\n    return _addr == 0x0;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_celebId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"celebs\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bump\",\"type\":\"uint256\"}],\"name\":\"setGrowthBump\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementsERC721\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"celebIdToPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"total\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_INCREASE_SCALE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_celebId\",\"type\":\"uint256\"}],\"name\":\"getCeleb\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"traitValues\",\"type\":\"uint256[6]\"},{\"name\":\"traitBoosters\",\"type\":\"uint256[6]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_celebId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_celebId\",\"type\":\"uint256\"}],\"name\":\"updateTraits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coauthor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_traitValues\",\"type\":\"uint256[6]\"},{\"name\":\"_traitBoosters\",\"type\":\"uint256[6]\"}],\"name\":\"createCeleb\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_coauthor\",\"type\":\"address\"}],\"name\":\"setCoAuthor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_celebId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"celebIdToApprovedRecipient\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setMinStartingPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_STARTING_PRICE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_celebId\",\"type\":\"uint256\"},{\"name\":\"_traitValues\",\"type\":\"uint256[6]\"},{\"name\":\"_traitBoosters\",\"type\":\"uint256[6]\"}],\"name\":\"updateCeleb\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"celebIdToTraitValues\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"celebIdToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"author\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_celebId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_scale\",\"type\":\"uint256\"}],\"name\":\"setPriceIncreaseScale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_celebId\",\"type\":\"uint256\"}],\"name\":\"takeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GROWTH_BUMP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setKpopArenaContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_celebId\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"celebIdToTraitBoosters\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"KPOP_ARENA_CONTRACT_ADDRESS\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userToNumCelebs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"celebId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"celebId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"celebId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"celebName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"CelebSold\",\"type\":\"event\"}]","ContractName":"KpopCeleb","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://12d9c33af1c4ed32daf1cbcd33706e4553cf9ae93a9c90b232b6b9a46a519d39"}]}