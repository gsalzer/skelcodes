{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n \r\n \r\n \r\n contract ProgressiveJackpotLottery {\r\n     \r\n     address owner;\r\n     string public constant name = \"PROGRESSIVE JACKPOT ETHEREUM LOTTERY\";\r\n     uint public tickets;\r\n     uint public round;\r\n     uint contractProfitBalance;\r\n     uint public jackpot;\r\n     uint public lastJackpotPayout;\r\n     uint public lastJackpotRound;\r\n     uint eachJackpotPayout;\r\n     string public status;\r\n     string public constant about = \"Send exactly 0.1 ether directly to this contract address to buy a lottery ticket. Once 12 tickets are sold this contract will pick a random winner and pay the lucky winner 1 Ether, rounds have a 1/1500 chance of the Jackpot being hit, and pays 70% of jackpot value is shared with all tickets in that round.\";\r\n     uint public lastWiningTicketNumber;\r\n     address public lastWinner;\r\n     address ticket1;\r\n     address ticket2;\r\n     address ticket3;\r\n     address ticket4;\r\n     address ticket5;\r\n     address ticket6;\r\n     address ticket7;\r\n     address ticket8;\r\n     address ticket9;\r\n     address ticket10;\r\n     address ticket11;\r\n     address ticket12;\r\n     uint winner;\r\n     uint random_number;\r\n     uint random_jackpot_number;\r\n     uint constant price = 0.1 ether; \r\n     uint constant amount = 1; \r\n     \r\n     \r\n     \r\n     function ProgressiveJackpotLottery() {\r\n         \r\n         owner = msg.sender;\r\n         tickets = 12;\r\n         round = 1;\r\n         lastWinner = 0;\r\n         lastWiningTicketNumber = 0;\r\n         status = \"Running\";\r\n         ticket1 = 0;\r\n         ticket2 = 0;\r\n         ticket3 = 0;\r\n         ticket4 = 0;\r\n         ticket5 = 0;\r\n         ticket6 = 0;\r\n         ticket7 = 0;\r\n         ticket8 = 0;\r\n         ticket9 = 0;\r\n         ticket10 = 0;\r\n         ticket11 = 0;\r\n         ticket12 = 0;\r\n         lastJackpotPayout = 0;\r\n         jackpot = 0;\r\n     }\r\n     \r\n     event purchasedTicket(address a); \r\n     event winningTicket(address a); \r\n     event winningTicketNumber(uint a); \r\n     event jackpotRoundNumber(uint a); \r\n     \r\n     modifier onlyOwner {\r\n         \r\n         require(msg.sender == owner);\r\n         _;\r\n     }\r\n     \r\n     function changeStatus(string w) onlyOwner {\r\n         status = w;\r\n     }\r\n     \r\n     function () payable {\r\n         \r\n         buyTickets();\r\n     }\r\n     \r\n     function buyTickets() payable {\r\n         \r\n         if (msg.value != (price)) {\r\n             \r\n             throw;\r\n         }\r\n\r\n         \r\n         if (ticket1 == 0) {\r\n             ticket1 = msg.sender;\r\n         }\r\n         else if(ticket2 == 0) {\r\n             ticket2 = msg.sender;\r\n         }\r\n         else if(ticket3 == 0) {\r\n             ticket3 = msg.sender;\r\n         }\r\n         else if(ticket4 == 0) {\r\n             ticket4 = msg.sender;\r\n         }\r\n         else if(ticket5 == 0) {\r\n             ticket5 = msg.sender;\r\n         }\r\n         else if(ticket6 == 0) {\r\n             ticket6 = msg.sender;\r\n         }\r\n         else if(ticket7 == 0) {\r\n             ticket7 = msg.sender;\r\n         }\r\n         else if(ticket8 == 0) {\r\n             ticket8 = msg.sender;\r\n         }\r\n         else if(ticket9 == 0) {\r\n             ticket9 = msg.sender;\r\n         }\r\n         else if(ticket10 == 0) {\r\n             ticket10 = msg.sender;\r\n         }\r\n         else if(ticket11 == 0) {\r\n             ticket11 = msg.sender;\r\n         }\r\n         else if(ticket12 == 0) {\r\n             ticket12 = msg.sender;\r\n         }\r\n         \r\n         tickets -= amount;\r\n         \r\n         \r\n         \r\n         purchasedTicket(msg.sender); \r\n         \r\n         if (tickets == 0) {\r\n             \r\n\r\n             tickets = 12; \r\n             round += 1; \r\n             \r\n            \r\n            random_number = uint(block.blockhash(block.number-1))%12 + 1;\r\n            random_jackpot_number = uint(block.blockhash(block.number-2))%1500 + 1;\r\n            lastWiningTicketNumber = random_number; \r\n            winningTicketNumber(random_number); \r\n            if (random_jackpot_number == 1) {\r\n                \r\n                lastJackpotRound = (round);\r\n                jackpotRoundNumber(round);\r\n                lastJackpotPayout = (jackpot * 70/100); \r\n                jackpot -= (jackpot * 75/100); \r\n                eachJackpotPayout = (lastJackpotPayout * 1/12);\r\n                \r\n                \r\n                \r\n                ticket1.transfer(eachJackpotPayout); \r\n                ticket2.transfer(eachJackpotPayout); \r\n                ticket3.transfer(eachJackpotPayout); \r\n                ticket4.transfer(eachJackpotPayout); \r\n                ticket5.transfer(eachJackpotPayout); \r\n                ticket6.transfer(eachJackpotPayout); \r\n                ticket7.transfer(eachJackpotPayout); \r\n                ticket8.transfer(eachJackpotPayout); \r\n                ticket9.transfer(eachJackpotPayout); \r\n                ticket10.transfer(eachJackpotPayout); \r\n                ticket11.transfer(eachJackpotPayout); \r\n                ticket12.transfer(eachJackpotPayout); \r\n            }\r\n            else {\r\n                \r\n                jackpot += price;\r\n            }\r\n            \r\n            \r\n            if (random_number == 1) {\r\n                ticket1.transfer(price * 10); \r\n                winningTicket(ticket1); \r\n                lastWinner = ticket1; \r\n             }\r\n             else if(random_number == 2) {\r\n                 ticket2.transfer(price * 10); \r\n                 winningTicket(ticket2); \r\n                 lastWinner = ticket2; \r\n             }\r\n             else if(random_number == 3) {\r\n                 ticket3.transfer(price * 10); \r\n                 winningTicket(ticket3); \r\n                 lastWinner = ticket3; \r\n             }\r\n             else if(random_number == 4) {\r\n                 ticket4.transfer(price * 10); \r\n                 winningTicket(ticket4); \r\n                 lastWinner = ticket4; \r\n             }\r\n             else if(random_number == 5) {\r\n                 ticket5.transfer(price * 10); \r\n                 winningTicket(ticket5); \r\n                 lastWinner = ticket5; \r\n             }\r\n             else if(random_number == 6) {\r\n                 ticket6.transfer(price * 10); \r\n                 winningTicket(ticket6); \r\n                 lastWinner = ticket6; \r\n             }\r\n             else if(random_number == 7) {\r\n                 ticket7.transfer(price * 10);\r\n                 winningTicket(ticket7); \r\n                 lastWinner = ticket7; \r\n             }\r\n             else if(random_number == 8) {\r\n                 ticket8.transfer(price * 10); \r\n                 winningTicket(ticket8); \r\n                 lastWinner = ticket8; \r\n             }\r\n             else if(random_number == 9) {\r\n                 ticket9.transfer(price * 10); \r\n                 winningTicket(ticket9); \r\n                 lastWinner = ticket9; \r\n             }\r\n             else if(random_number == 10) {\r\n                 ticket10.transfer(price * 10); \r\n                 winningTicket(ticket10); \r\n                 lastWinner = ticket10; \r\n             }\r\n             else if(random_number == 11) {\r\n                 ticket11.transfer(price * 10); \r\n                 winningTicket(ticket11); \r\n                 lastWinner = ticket11; \r\n             }\r\n             else if(random_number == 12) {\r\n                 ticket12.transfer(price * 10); \r\n                 winningTicket(ticket12); \r\n                 lastWinner = ticket12; \r\n             }\r\n            \r\n            \r\n            contractProfitBalance = (this.balance - jackpot);\r\n            owner.transfer((contractProfitBalance) * 8/10); \r\n            if ((contractProfitBalance) > 1 ether) {\r\n                owner.transfer((contractProfitBalance)* 5/10); \r\n            }\r\n            \r\n            \r\n            \r\n             ticket1 = 0;\r\n             ticket2 = 0;\r\n             ticket3 = 0;\r\n             ticket4 = 0;\r\n             ticket5 = 0;\r\n             ticket6 = 0;\r\n             ticket7 = 0;\r\n             ticket8 = 0;\r\n             ticket9 = 0;\r\n             ticket10 = 0;\r\n             ticket11 = 0;\r\n             ticket12 = 0;\r\n            \r\n            \r\n            if (keccak256(status) != keccak256(\"Running\")) {\r\n                \r\n                selfdestruct(owner);\r\n            }\r\n             \r\n         }\r\n     }\r\n     \r\n     \r\n }","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"round\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tickets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastWiningTicketNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"about\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"jackpot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastJackpotPayout\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"w\",\"type\":\"string\"}],\"name\":\"changeStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTickets\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastJackpotRound\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastWinner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"a\",\"type\":\"address\"}],\"name\":\"purchasedTicket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"a\",\"type\":\"address\"}],\"name\":\"winningTicket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"winningTicketNumber\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"jackpotRoundNumber\",\"type\":\"event\"}]","ContractName":"ProgressiveJackpotLottery","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1f4e64bd8324fc0315051f58ff60044306affe13e096abb25ec602d4a4aaeec3"}]}