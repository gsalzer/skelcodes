{"status":"1","message":"OK","result":[{"SourceCode":"// Tarka Pre-Sale token smart contract.\r\n// Developed by Phenom.Team <info@phenom.team>\r\n\r\npragma solidity ^0.4.15;\r\n\r\n\r\n/**\r\n *   @title SafeMath\r\n *   @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal constant returns(uint256) {\r\n        assert(b > 0);\r\n        uint256 c = a / b;\r\n        assert(a == b * c + a % b);\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal constant returns(uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal constant returns(uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract PreSalePTARK {\r\n    using SafeMath for uint256;\r\n    //Owner address\r\n    address public owner;\r\n    //Public variables of the token\r\n    string public name  = \"Tarka Pre-Sale Token\";\r\n    string public symbol = \"PTARK\";\r\n    uint8 public decimals = 18;\r\n    uint256 public totalSupply = 0;\r\n    mapping (address => uint256) public balances;\r\n    // Events Log\r\n    event Transfer(address _from, address _to, uint256 amount); \r\n    event Burned(address _from, uint256 amount);\r\n    // Modifiers\r\n    // Allows execution by the contract owner only\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }  \r\n\r\n   /**\r\n    *   @dev Contract constructor function sets owner address\r\n    */\r\n    function PreSalePTARK() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n   /**\r\n    *   @dev Allows owner to transfer ownership of contract\r\n    *   @param _newOwner      newOwner address\r\n    */\r\n    function transferOwnership(address _newOwner) external onlyOwner {\r\n        require(_newOwner != address(0));\r\n        owner = _newOwner;\r\n    }\r\n\r\n   /**\r\n    *   @dev Get balance of investor\r\n    *   @param _investor     investor's address\r\n    *   @return              balance of investor\r\n    */\r\n    function balanceOf(address _investor) public constant returns(uint256) {\r\n        return balances[_investor];\r\n    }\r\n\r\n   /**\r\n    *   @dev Mint tokens\r\n    *   @param _investor     beneficiary address the tokens will be issued to\r\n    *   @param _mintedAmount number of tokens to issue\r\n    */\r\n    function mintTokens(address _investor, uint256 _mintedAmount) external onlyOwner {\r\n        require(_mintedAmount > 0);\r\n        balances[_investor] = balances[_investor].add(_mintedAmount);\r\n        totalSupply = totalSupply.add(_mintedAmount);\r\n        Transfer(this, _investor, _mintedAmount);\r\n        \r\n    }\r\n\r\n   /**\r\n    *   @dev Burn Tokens\r\n    *   @param _investor     token holder address which the tokens will be burnt\r\n    */\r\n    function burnTokens(address _investor) external onlyOwner {   \r\n        require(balances[_investor] > 0);\r\n        uint256 tokens = balances[_investor];\r\n        balances[_investor] = 0;\r\n        totalSupply = totalSupply.sub(tokens);\r\n        Burned(_investor, tokens);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"burnTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"},{\"name\":\"_mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"}]","ContractName":"PreSalePTARK","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fa54845ef9ba2397bfe6b885775aa4c89f58909c0a1d16ff9b17bce48252374e"}]}