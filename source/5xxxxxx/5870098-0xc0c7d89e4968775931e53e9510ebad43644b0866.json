{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n// joojinta fund: collecting fund for our company\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n    \r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract joojinta is Ownable {\r\n    uint constant minContribution = 200000000000000000; // 0.2 ETH\r\n    address public owner;\r\n    mapping (address => uint) public contributors;\r\n\r\n    modifier onlyContributor() {\r\n        require(contributors[msg.sender] > 0);\r\n        _;\r\n    }\r\n    \r\n    function joojinta() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function withdraw_funds() public onlyOwner {\r\n        // only owner can withdraw funds at the end of program\r\n        msg.sender.transfer(this.balance);\r\n    }\r\n\r\n    function () public payable {\r\n        if (msg.value > minContribution) {\r\n            // contribution must be greater than a minimum allowed\r\n            contributors[msg.sender] += msg.value;\r\n        }\r\n    }\r\n    \r\n    function exit() public onlyContributor(){\r\n        uint amount;\r\n        amount = contributors[msg.sender] / 10; // charging 10% org fee if contributor exits\r\n        if (contributors[msg.sender] >= amount){\r\n            contributors[msg.sender] = 0;\r\n            msg.sender.transfer(amount); // transfer must be last\r\n        }\r\n    }\r\n\r\n    function changeOwner(address newOwner) public onlyContributor() {\r\n        // only owner can transfer ownership\r\n        owner = newOwner;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw_funds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"joojinta","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://39d89c2ecef265c6733d2a3620fb4c24661436c9c7ef695342f2336f08df7af8"}]}