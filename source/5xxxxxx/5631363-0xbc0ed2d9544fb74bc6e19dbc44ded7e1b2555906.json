{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.23;\r\n\r\n/**\r\n * eMangir Token\r\n * www.emangir.com\r\n*/\r\n\r\n\r\n// @title Abstract ERC20 token interface\r\ncontract AbstractToken {\r\n\tfunction balanceOf(address owner) public view returns (uint256 balance);\r\n\tfunction transfer(address to, uint256 value) public returns (bool success);\r\n\tfunction transferFrom(address from, address to, uint256 value) public returns (bool success);\r\n\tfunction approve(address spender, uint256 value) public returns (bool success);\r\n\tfunction allowance(address owner, address spender) public view returns (uint256 remaining);\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Owned {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n// @title SafeMath contract - Math operations with safety checks.\r\n// @author OpenZeppelin: https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/math/SafeMath.sol\r\ncontract SafeMath {\r\n\t/**\r\n\t* @dev Multiplies two numbers, throws on overflow.\r\n\t*/\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tif (a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tuint256 c = a * b;\r\n\t\tassert(c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\t/**\r\n\t* @dev Integer division of two numbers, truncating the quotient.\r\n\t*/\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a / b;\r\n\t}\r\n\r\n\t/**\r\n\t* @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n\t*/\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\t/**\r\n\t* @dev Adds two numbers, throws on overflow.\r\n\t*/\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n\r\n\t/**\r\n\t* @dev Raises `a` to the `b`th power, throws on overflow.\r\n\t*/\r\n\tfunction pow(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a ** b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\n/// Implements ERC 20 Token standard: https://github.com/ethereum/EIPs/issues/20\r\ncontract StandardToken is AbstractToken, Owned, SafeMath {\r\n\r\n\t/*\r\n\t *  Data structures\r\n\t */\r\n\tmapping (address => uint256) internal balances;\r\n\tmapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n\t/*\r\n\t *  Read and write storage functions\r\n\t */\r\n\t/// @dev Transfers sender's tokens to a given address. Returns success.\r\n\t/// @param _to Address of token receiver.\r\n\t/// @param _value Number of tokens to transfer.\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool success) {\r\n\t\treturn _transfer(msg.sender, _to, _value);\r\n\t}\r\n\r\n\t/// @dev Allows allowed third party to transfer tokens from one address to another. Returns success.\r\n\t/// @param _from Address from where tokens are withdrawn.\r\n\t/// @param _to Address to where tokens are sent.\r\n\t/// @param _value Number of tokens to transfer.\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n\t\trequire(allowed[_from][msg.sender] >= _value);\r\n\t\tallowed[_from][msg.sender] -= _value;\r\n\r\n\t\treturn _transfer(_from, _to, _value);\r\n\t}\r\n\r\n\t/// @dev Returns number of tokens owned by given address.\r\n\t/// @param _owner Address of token owner.\r\n\tfunction balanceOf(address _owner) public view returns (uint256 balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\r\n\t/// @dev Sets approved amount of tokens for spender. Returns success.\r\n\t/// @param _spender Address of allowed account.\r\n\t/// @param _value Number of approved tokens.\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool success) {\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*\r\n\t * Read storage functions\r\n\t */\r\n\t/// @dev Returns number of allowed tokens for given address.\r\n\t/// @param _owner Address of token owner.\r\n\t/// @param _spender Address of token spender.\r\n\tfunction allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n\t/**\r\n\t* @dev Private transfer, can only be called by this contract.\r\n\t* @param _from The address of the sender.\r\n\t* @param _to The address of the recipient.\r\n\t* @param _value The amount to send.\r\n\t* @return success True if the transfer was successful, or throws.\r\n\t*/\r\n\tfunction _transfer(address _from, address _to, uint256 _value) private returns (bool success) {\r\n\t\trequire(_to != address(0));\r\n\t\trequire(balances[_from] >= _value);\r\n\t\tbalances[_from] -= _value;\r\n\t\tbalances[_to] = add(balances[_to], _value);\r\n\t\temit Transfer(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\n/// @title Token contract - Implements Standard ERC20 with additional features.\r\ncontract eMangirToken is StandardToken {\r\n\r\n\t// Time of the contract creation\r\n\tuint256 public creationTime;\r\n   // Token MetaData\r\n\tstring constant public name = 'eMangir';\r\n\tstring constant public symbol = 'EMG';\r\n\tuint8  public decimals = 18;\r\n\tuint256 public totalSupply = 1000000000e18;\r\n\r\n\tconstructor() public {\r\n\t\t/* solium-disable-next-line security/no-block-members */\r\n\t\tcreationTime = now;\r\n\t\tbalances[msg.sender] = totalSupply;\r\n\t}\r\n\r\n\t/// @dev Owner can transfer out any accidentally sent ERC20 tokens\r\n\tfunction transferERC20Token(AbstractToken _token, address _to, uint256 _value)\r\n\t\tpublic\r\n\t\tonlyOwner\r\n\t\treturns (bool success)\r\n\t{\r\n\t\trequire(_token.balanceOf(address(this)) >= _value);\r\n\t\tuint256 receiverBalance = _token.balanceOf(_to);\r\n\t\trequire(_token.transfer(_to, _value));\r\n\r\n\t\tuint256 receiverNewBalance = _token.balanceOf(_to);\r\n\t\tassert(receiverNewBalance == add(receiverBalance, _value));\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/// @dev Increases approved amount of tokens for spender. Returns success.\r\n\tfunction increaseApproval(address _spender, uint256 _value) public returns (bool success) {\r\n\t\tallowed[msg.sender][_spender] = add(allowed[msg.sender][_spender], _value);\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/// @dev Decreases approved amount of tokens for spender. Returns success.\r\n\tfunction decreaseApproval(address _spender, uint256 _value) public returns (bool success) {\r\n\t\tuint256 oldValue = allowed[msg.sender][_spender];\r\n\t\tif (_value > oldValue) {\r\n\t\t\tallowed[msg.sender][_spender] = 0;\r\n\t\t} else {\r\n\t\t\tallowed[msg.sender][_spender] = sub(oldValue, _value);\r\n\t\t}\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t\treturn true;\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"eMangirToken","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0b77ffda1bf79450fd114312d588ec34984d33b5c196e4cb62e030753124ac9a"}]}