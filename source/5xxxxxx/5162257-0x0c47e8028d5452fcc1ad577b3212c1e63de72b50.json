{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n/**\r\n * @title ERC721 interface\r\n * @dev see https://github.com/ethereum/eips/issues/721\r\n */\r\n\r\n\r\ncontract AccessControl {\r\n    address public creatorAddress;\r\n    uint16 public totalSeraphims = 0;\r\n    mapping (address => bool) public seraphims;\r\n\r\n    bool public isMaintenanceMode = true;\r\n \r\n    modifier onlyCREATOR() {\r\n        require(msg.sender == creatorAddress);\r\n        _;\r\n    }\r\n\r\n    modifier onlySERAPHIM() {\r\n        require(seraphims[msg.sender] == true);\r\n        _;\r\n    }\r\n    \r\n    modifier isContractActive {\r\n        require(!isMaintenanceMode);\r\n        _;\r\n    }\r\n    \r\n    // Constructor\r\n    function AccessControl() public {\r\n        creatorAddress = msg.sender;\r\n    }\r\n    \r\n\r\n    function addSERAPHIM(address _newSeraphim) onlyCREATOR public {\r\n        if (seraphims[_newSeraphim] == false) {\r\n            seraphims[_newSeraphim] = true;\r\n            totalSeraphims += 1;\r\n        }\r\n    }\r\n    \r\n    function removeSERAPHIM(address _oldSeraphim) onlyCREATOR public {\r\n        if (seraphims[_oldSeraphim] == true) {\r\n            seraphims[_oldSeraphim] = false;\r\n            totalSeraphims -= 1;\r\n        }\r\n    }\r\n\r\n    function updateMaintenanceMode(bool _isMaintaining) onlyCREATOR public {\r\n        isMaintenanceMode = _isMaintaining;\r\n    }\r\n\r\n  \r\n} \r\n\r\ncontract SafeMath {\r\n    function safeAdd(uint x, uint y) pure internal returns(uint) {\r\n      uint z = x + y;\r\n      assert((z >= x) && (z >= y));\r\n      return z;\r\n    }\r\n\r\n    function safeSubtract(uint x, uint y) pure internal returns(uint) {\r\n      assert(x >= y);\r\n      uint z = x - y;\r\n      return z;\r\n    }\r\n\r\n    function safeMult(uint x, uint y) pure internal returns(uint) {\r\n      uint z = x * y;\r\n      assert((x == 0)||(z/x == y));\r\n      return z;\r\n    }\r\n\r\n    function getRandomNumber(uint16 maxRandom, uint8 min, address privateAddress) constant public returns(uint8) {\r\n        uint256 genNum = uint256(block.blockhash(block.number-1)) + uint256(privateAddress);\r\n        return uint8(genNum % (maxRandom - min + 1)+min);\r\n    }\r\n}\r\n\r\ncontract Enums {\r\n    enum ResultCode {\r\n        SUCCESS,\r\n        ERROR_CLASS_NOT_FOUND,\r\n        ERROR_LOW_BALANCE,\r\n        ERROR_SEND_FAIL,\r\n        ERROR_NOT_OWNER,\r\n        ERROR_NOT_ENOUGH_MONEY,\r\n        ERROR_INVALID_AMOUNT\r\n    }\r\n\r\n    enum AngelAura { \r\n        Blue, \r\n        Yellow, \r\n        Purple, \r\n        Orange, \r\n        Red, \r\n        Green \r\n    }\r\n}\r\n\r\ncontract IAngelCardData is AccessControl, Enums {\r\n    uint8 public totalAngelCardSeries;\r\n    uint64 public totalAngels;\r\n\r\n    \r\n    // write\r\n    // angels\r\n    function createAngelCardSeries(uint8 _angelCardSeriesId, uint _basePrice,  uint64 _maxTotal, uint8 _baseAura, uint16 _baseBattlePower, uint64 _liveTime) onlyCREATOR external returns(uint8);\r\n    function updateAngelCardSeries(uint8 _angelCardSeriesId, uint64 _newPrice, uint64 _newMaxTotal) onlyCREATOR external;\r\n    function setAngel(uint8 _angelCardSeriesId, address _owner, uint _price, uint16 _battlePower) onlySERAPHIM external returns(uint64);\r\n    function addToAngelExperienceLevel(uint64 _angelId, uint _value) onlySERAPHIM external;\r\n    function setAngelLastBattleTime(uint64 _angelId) onlySERAPHIM external;\r\n    function setAngelLastVsBattleTime(uint64 _angelId) onlySERAPHIM external;\r\n    function setLastBattleResult(uint64 _angelId, uint16 _value) onlySERAPHIM external;\r\n    function addAngelIdMapping(address _owner, uint64 _angelId) private;\r\n    function transferAngel(address _from, address _to, uint64 _angelId) onlySERAPHIM public returns(ResultCode);\r\n    function ownerAngelTransfer (address _to, uint64 _angelId)  public;\r\n    function updateAngelLock (uint64 _angelId, bool newValue) public;\r\n    function removeCreator() onlyCREATOR external;\r\n\r\n    // read\r\n    function getAngelCardSeries(uint8 _angelCardSeriesId) constant public returns(uint8 angelCardSeriesId, uint64 currentAngelTotal, uint basePrice, uint64 maxAngelTotal, uint8 baseAura, uint baseBattlePower, uint64 lastSellTime, uint64 liveTime);\r\n    function getAngel(uint64 _angelId) constant public returns(uint64 angelId, uint8 angelCardSeriesId, uint16 battlePower, uint8 aura, uint16 experience, uint price, uint64 createdTime, uint64 lastBattleTime, uint64 lastVsBattleTime, uint16 lastBattleResult, address owner);\r\n    function getOwnerAngelCount(address _owner) constant public returns(uint);\r\n    function getAngelByIndex(address _owner, uint _index) constant public returns(uint64);\r\n    function getTotalAngelCardSeries() constant public returns (uint8);\r\n    function getTotalAngels() constant public returns (uint64);\r\n    function getAngelLockStatus(uint64 _angelId) constant public returns (bool);\r\n}\r\n \r\ncontract AngelWrapper721 is AccessControl, Enums {\r\n  //Events\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);\r\n  event MarketplaceTransfer(address indexed _from, address indexed _to, uint256 _tokenId, address _marketplace);\r\n  event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);\r\n\r\n\r\n//Storage\r\n \r\n   \r\n    address public angelCardDataContract = 0x6d2e76213615925c5fc436565b5ee788ee0e86dc;\r\n    \r\n    struct Angel {\r\n        uint64 angelId;\r\n        uint8 angelCardSeriesId;\r\n        address owner;\r\n        uint16 battlePower;\r\n        AngelAura aura;\r\n        uint16 experience;\r\n        uint price;\r\n        uint64 createdTime;\r\n        uint64 lastBattleTime;\r\n        uint64 lastVsBattleTime;\r\n        uint16 lastBattleResult;\r\n        bool ownerLock;\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n    function SetAngelCardDataContact(address _angelCardDataContract) onlyCREATOR external {\r\n       angelCardDataContract = _angelCardDataContract;\r\n    }\r\n\r\n  function balanceOf(address _owner) public view returns (uint256 _balance) {\r\n           IAngelCardData angelCardData = IAngelCardData(angelCardDataContract);\r\n           return angelCardData.getOwnerAngelCount(_owner);\r\n  }\r\n  \r\n  function ownerOf(uint256 _tokenId) public view returns (address _owner) {\r\n            IAngelCardData angelCardData = IAngelCardData(angelCardDataContract);\r\n            address owner;\r\n        (,,,,,,,,,,owner) = angelCardData.getAngel(uint64(_tokenId));\r\n            return owner;\r\n  }\r\n  \r\n  function getTokenByIndex (address _owner, uint index) constant public returns (uint64) {\r\n      //returns the angel number of the index-th item in that addresses angel list. \r\n             IAngelCardData angelCardData = IAngelCardData(angelCardDataContract);\r\n        return uint64(angelCardData.getAngelByIndex(_owner, index));\r\n        \r\n  }\r\n\t\r\n\r\n        \r\n         function getAngel(uint64 _angelId) constant public returns(uint64 angelId, uint8 angelCardSeriesId, uint16 battlePower, uint8 aura, uint16 experience, uint price, address owner) {\r\n        IAngelCardData angelCardData = IAngelCardData(angelCardDataContract);\r\n        (angelId,angelCardSeriesId, battlePower, aura,experience,price,,,,, owner) = angelCardData.getAngel(_angelId);\r\n      \r\n    }\r\n        \r\n        \r\n       \r\n    \r\n    function getTokenLockStatus(uint64 _tokenId) constant public returns (bool) {\r\n       IAngelCardData angelCardData = IAngelCardData(angelCardDataContract);\r\n       return angelCardData.getAngelLockStatus(_tokenId);\r\n       \r\n    }\r\n    \r\n   \r\n \r\n  function transfer(address _to, uint256 _tokenId) public {\r\n      \r\n        IAngelCardData angelCardData = IAngelCardData(angelCardDataContract);\r\n       address owner;\r\n       (,,,,,,,,, owner) = angelCardData.getAngel(uint64(_tokenId));\r\n      \r\n       if ((seraphims[msg.sender] == true)  || (owner == msg.sender))\r\n       {\r\n         angelCardData.transferAngel(owner,_to, uint64 (_tokenId)) ;\r\n         Transfer(owner, _to, _tokenId);\r\n         MarketplaceTransfer(owner,  _to, _tokenId, msg.sender);\r\n           \r\n       }\r\n      else {revert();}\r\n  }\r\n  function approve(address _to, uint256 _tokenId) public\r\n  {\r\n      //this function should never be called - instead, use updateAccessoryLock from the accessoryData contract;\r\n      revert();\r\n      \r\n  }\r\n  function takeOwnership(uint256 _tokenId) public\r\n  { \r\n     //this function should never be called - instead use transfer\r\n     revert();\r\n  }\r\n    function kill() onlyCREATOR external {\r\n        selfdestruct(creatorAddress);\r\n    }\r\n    }","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_angelCardDataContract\",\"type\":\"address\"}],\"name\":\"SetAngelCardDataContact\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"seraphims\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_isMaintaining\",\"type\":\"bool\"}],\"name\":\"updateMaintenanceMode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isMaintenanceMode\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oldSeraphim\",\"type\":\"address\"}],\"name\":\"removeSERAPHIM\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint64\"}],\"name\":\"getTokenLockStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_angelId\",\"type\":\"uint64\"}],\"name\":\"getAngel\",\"outputs\":[{\"name\":\"angelId\",\"type\":\"uint64\"},{\"name\":\"angelCardSeriesId\",\"type\":\"uint8\"},{\"name\":\"battlePower\",\"type\":\"uint16\"},{\"name\":\"aura\",\"type\":\"uint8\"},{\"name\":\"experience\",\"type\":\"uint16\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"takeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSeraphims\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSeraphim\",\"type\":\"address\"}],\"name\":\"addSERAPHIM\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"angelCardDataContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creatorAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_marketplace\",\"type\":\"address\"}],\"name\":\"MarketplaceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"AngelWrapper721","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c4e228de0540d23e2294ae6bf2e58035fd43a2e3ea8d0f37217ddc4dac8fd650"}]}