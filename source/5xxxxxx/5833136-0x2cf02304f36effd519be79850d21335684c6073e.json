{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract Ownable {\r\n\r\n  // public variables\r\n  address public owner;\r\n\r\n  // internal variables\r\n\r\n  // events\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  // public functions\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n  // internal functions\r\n}\r\n\r\ncontract AccEthRegCenter  is Ownable {\r\n    \r\n    struct User {\r\n        address useraddress;\r\n        uint useramount;\r\n        bool lastTransfer;\r\n    }\r\n    \r\n  // events\r\n    event TransferTo(address indexed to, uint256 value);\r\n    event TransferToName(address indexed to,string name, uint256 value);\r\n    mapping(string => User) recievermap ;\r\n    \r\n    string[] public recieverList ;\r\n    \r\n    function() public payable\r\n    {\r\n        \r\n    }\r\n    \r\n    function AddUser(string user,address add,uint amount) onlyOwner public {\r\n        require(recievermap[user].useraddress == address(0));\r\n        recieverList.push(user);\r\n        recievermap[user].useraddress = add;\r\n        recievermap[user].useramount = amount;\r\n    }\r\n    \r\n    function SetAddress(string user,address add) onlyOwner public {\r\n        require(recievermap[user].useraddress!= address(0));\r\n        recievermap[user].useraddress = add;\r\n    }\r\n    \r\n    function SetAmount(string user,uint amount) onlyOwner public {\r\n        require(recievermap[user].useraddress!= address(0));\r\n        recievermap[user].useramount = amount;\r\n        \r\n    }\r\n    \r\n    function GetUser(string key) public constant returns(address add,uint amount,bool lastTransfer)\r\n    {\r\n        add = recievermap[key].useraddress;\r\n        lastTransfer = recievermap[key].lastTransfer;\r\n        amount = recievermap[key].useramount;\r\n    }\r\n    \r\n    function TransferToAllAccounts() onlyOwner public {\r\n        for(uint i=0;i<recieverList.length;i++)\r\n        {\r\n            recievermap[recieverList[i]].lastTransfer = false;\r\n            address to = recievermap[recieverList[i]].useraddress;\r\n            uint256 val = recievermap[recieverList[i]].useramount;\r\n            require(address(this).balance >= val);\r\n            if(val>0)\r\n            {\r\n                \r\n                 to.transfer(val);\r\n                 emit TransferTo(to, val);\r\n                 recievermap[recieverList[i]].lastTransfer = true;\r\n            }\r\n        }\r\n    }\r\n    \r\n    function ResetAllAmount() onlyOwner public {\r\n        for(uint i=0;i<recieverList.length;i++)\r\n        {\r\n            recievermap[recieverList[i]].useramount = 0;\r\n        }\r\n    }\r\n    \r\n    function transfer(address to,uint val) onlyOwner public {\r\n        require(address(this).balance >= val);\r\n        to.transfer( val);\r\n        emit TransferTo(to, val);\r\n        \r\n    }\r\n    \r\n    function transfertoacc(string key,uint val) onlyOwner public {\r\n        recievermap[key].lastTransfer = false;\r\n        require(address(this).balance >= val);\r\n        address to = recievermap[key].useraddress;\r\n         to.transfer(val);\r\n        emit TransferToName(to,key, val);\r\n        recievermap[key].lastTransfer = true;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"string\"},{\"name\":\"add\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AddUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recieverList\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"GetUser\",\"outputs\":[{\"name\":\"add\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"lastTransfer\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"transfertoacc\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"TransferToAllAccounts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ResetAllAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"string\"},{\"name\":\"add\",\"type\":\"address\"}],\"name\":\"SetAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SetAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferToName\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"AccEthRegCenter","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c18664b02d27e4bfaec184b4fbb76e269e69aabd18d582d793a8ca979f50825b"}]}