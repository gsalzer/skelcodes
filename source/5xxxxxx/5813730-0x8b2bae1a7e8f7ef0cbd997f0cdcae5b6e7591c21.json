{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\n// Token abstract definitioin\r\ncontract Token {\r\n    function transfer(address to, uint256 value) returns (bool success);\r\n    function transferFrom(address from, address to, uint256 value) returns (bool success);\r\n    function approve(address spender, uint256 value) returns (bool success);\r\n\r\n    function totalSupply() constant returns (uint256 totalSupply) {}\r\n    function balanceOf(address owner) constant returns (uint256 balance);\r\n    function allowance(address owner, address spender) constant returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\ncontract WaltonTokenLocker {\r\n\r\n    address public beneficiary;\r\n    uint256 public releaseTime;\r\n    string constant public name = \"team locker\";\r\n\r\n    Token public token = Token('0xb7cB1C96dB6B22b0D3d9536E0108d062BD488F74');\r\n\r\n    function WaltonTokenLocker() public {\r\n        // team account\r\n        beneficiary = address('0x732f589BA0b134DC35454716c4C87A06C890445b');\r\n        releaseTime = 1563379200;     // 2019-07-18 00:00\r\n    }\r\n\r\n    // when releaseTime reached, and release() has been called\r\n    // WaltonTokenLocker release all eth and wtc to beneficiary\r\n    function release() public {\r\n        if (block.timestamp < releaseTime)\r\n            throw;\r\n\r\n        uint256 totalTokenBalance = token.balanceOf(this);\r\n        if (totalTokenBalance > 0)\r\n            if (!token.transfer(beneficiary, totalTokenBalance))\r\n                throw;\r\n    }\r\n    // release token by token contract address\r\n    function releaseToken(address _tokenContractAddress) public {\r\n        if (block.timestamp < releaseTime)\r\n            throw;\r\n\r\n        Token _token = Token(_tokenContractAddress);\r\n        uint256 totalTokenBalance = _token.balanceOf(this);\r\n        if (totalTokenBalance > 0)\r\n            if (!_token.transfer(beneficiary, totalTokenBalance))\r\n                throw;\r\n    }\r\n\r\n\r\n    // help functions\r\n    function releaseTimestamp() public constant returns (uint timestamp) {\r\n        return releaseTime;\r\n    }\r\n\r\n    function currentTimestamp() public constant returns (uint timestamp) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function secondsRemaining() public constant returns (uint timestamp) {\r\n        if (block.timestamp < releaseTime)\r\n            return releaseTime - block.timestamp;\r\n        else\r\n            return 0;\r\n    }\r\n\r\n    function tokenLocked() public constant returns (uint amount) {\r\n        return token.balanceOf(this);\r\n    }\r\n\r\n    // functions for debug\r\n    // function setReleaseTime(uint256 _releaseTime) public {\r\n    //     releaseTime = _releaseTime;\r\n    // }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseTimestamp\",\"outputs\":[{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentTimestamp\",\"outputs\":[{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenLocked\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondsRemaining\",\"outputs\":[{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContractAddress\",\"type\":\"address\"}],\"name\":\"releaseToken\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"WaltonTokenLocker","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://37da7c32f868aca4c022846667c158a4aca70b264052d9a6dfe73ad8cfe73f2b"}]}