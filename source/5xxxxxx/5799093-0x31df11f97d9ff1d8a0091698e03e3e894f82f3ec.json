{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\nlibrary SafeMath {\r\n\tfunction mul(uint a, uint b) internal returns(uint) {\r\n\t\tuint c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint a, uint b) internal returns(uint) {\r\n\t\tuint c = a / b;\r\n\t\treturn c; \r\n\t}\r\n\r\n\tfunction sub(uint a, uint b) internal returns(uint) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint a, uint b) internal returns(uint) {\r\n\t\tuint c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n\tfunction max64(uint64 a, uint64 b) internal constant returns(uint64) {\r\n\t\treturn a >= b ? a : b;\r\n\t}\r\n\r\n\tfunction min64(uint64 a, uint64 b) internal constant returns(uint64) {\r\n\t\treturn a < b ? a : b;\r\n\t}\r\n\r\n\tfunction max256(uint256 a, uint256 b) internal constant returns(uint256) {\r\n\t\treturn a >= b ? a : b;\r\n\t}\r\n\r\n\tfunction min256(uint256 a, uint256 b) internal constant returns(uint256) {\r\n\t\treturn a < b ? a : b;\r\n\t}\r\n\r\n\tfunction assert(bool assertion) internal {\r\n\t\tif(!assertion) {\r\n\t\t\tthrow;\r\n\t\t}\r\n\t}\r\n}\r\n\r\ncontract ERC20Basic {\r\n\tuint public totalSupply;\r\n\tfunction balanceOf(address who) constant returns(uint);\r\n\tfunction transfer(address to, uint value);\r\n\tevent Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\ncontract BasicToken is ERC20Basic {\r\n\tusing SafeMath \tfor uint;\r\n\tmapping(address => uint) balances;\r\n\r\n\tmodifier onlyPayloadSize(uint size) {\r\n\t\tif(msg.data.length < size + 4) {\r\n\t\t\tthrow;\r\n\t\t}\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint _value) onlyPayloadSize(2 * 32) {\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tTransfer(msg.sender, _to, _value);\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) constant returns(uint balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n\tfunction allowance(address owner, address spender) constant returns(uint);\r\n\tfunction transferFrom(address from, address to, uint value);\r\n\tfunction approve(address spender, uint value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\ncontract StandardToken is BasicToken, ERC20 {\r\n\tmapping(address => mapping(address => uint)) allowed;\r\n\tfunction transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) {\r\n\t\tvar _allowance = allowed[_from][msg.sender];\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tallowed[_from][msg.sender] = _allowance.sub(_value);\r\n\t\tTransfer(_from, _to, _value);\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint _value) {\r\n\t\tif((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\tApproval(msg.sender, _spender, _value);\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) constant returns(uint remaining) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n}\r\n\r\ncontract CCtestToken is StandardToken {\r\n\tstring public constant symbol = \"CCtest\";\r\n\tstring public constant name = \"Coffee College\";\r\n\tuint8 public constant decimals = 18;\r\n\taddress public target;\r\n\t\r\n\tevent InvalidCaller(address caller);\r\n\r\n\tmodifier onlyOwner {\r\n\t\tif(target == msg.sender) {\r\n\t\t\t_;\r\n\t\t} else {\r\n\t\t\tInvalidCaller(msg.sender);\r\n\t\t\tthrow;\r\n\t\t}\r\n\t}\r\n\tfunction CCtestToken(address _target) {\r\n\t\ttarget = _target;\r\n\t\ttotalSupply = 10000 * 10 ** 18;\r\n\t\tbalances[target] = totalSupply;\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"InvalidCaller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"CCtestToken","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000530c433bb76afca79999166df7f8804692aeb4e2","Library":"","SwarmSource":"bzzr://12a5a4e7f984346b989cd2b0bdac5803c19240b9910ddce3a843384627028a10"}]}