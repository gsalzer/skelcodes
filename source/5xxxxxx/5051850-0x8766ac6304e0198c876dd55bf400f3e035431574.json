{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract Ownable {\r\n    \r\n\taddress public owner;// Адрес владельца\r\n    \r\n\tfunction Ownable() public { // Конструктор, создаль является владельцем\r\n    \towner = msg.sender;\r\n\t}\r\n \r\n\tmodifier onlyOwner() { // Модификатор \"Только владелец\"\r\n    \trequire(msg.sender == owner);\r\n    \t_;\r\n\t}\r\n \r\n\tfunction transferOwnership(address _owner) public onlyOwner { // Передача права собственности на контракт токена\r\n    \towner = _owner;\r\n\t}\r\n    \r\n}\r\n\r\ncontract KVCoin is Ownable{\r\n\r\n  string public name; // Название\r\n  string public symbol; // Символ\r\n  uint8 public decimals; // Знаков после запятой\r\n\t \r\n  uint256 public tokenTotalSupply;// Общее количество токенов\r\n\r\n  function totalSupply() constant returns (uint256 _totalSupply){ // Функция, которая возвращает общее количество токенов\r\n  \treturn tokenTotalSupply;\r\n\t}\r\n   \r\n  mapping (address => uint256) public balances; // Хранение токенов (у кого сколько)\r\n  mapping (address => mapping (address => uint256)) public allowed; // Разрешение на перевод эфиров обратно\r\n\r\n  function balanceOf(address _owner) public constant returns (uint balance) { // Функция, возвращающая количество токенов на запрашиваемом счёте\r\n  \treturn balances[_owner];\r\n  }\r\n\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value); // Событие, сигнализирующее о переводе\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value); // Событие, сигнализируещее об одобрении перевода эфиров обратно\r\n  event Mint(address indexed _to, uint256 _amount); // Выпустить токены\r\n  event Burn(address indexed _from, uint256 _value); // Событие, сигнализируещее о сжигании\r\n\r\n  function KVCoin () {\r\n\tname = \"KVCoin\"; // Имя токена\r\n\tsymbol = \"KVC\"; // Символ токена\r\n\tdecimals = 0; // Число знаков после запятой\r\n   \t \r\n\ttokenTotalSupply = 0; // Пока не создано ни одного токена\r\n\t}\r\n\r\n  function _transfer(address _from, address _to, uint256 _value) internal returns (bool){ // Вспомогательная функция перевода токенов\r\n\trequire (_to != 0x0); // Адрес назначения не нулевой\r\n\trequire(balances[_from] >= _value); // У переводящего достаточно токенов\r\n\trequire(balances[_to] + _value >= balances[_to]); // У принимающего не случится переполнения\r\n\r\n\tbalances[_from] -= _value; // Списание токенов у отправителя\r\n\tbalances[_to] += _value; // Зачисление токенов получателю\r\n\r\n\tTransfer(_from, _to, _value);\r\n\tif (_to == address(this)){ // Если монетки переведены на счёт контракта токена, они сжигаются\r\n  \treturn burn();\r\n\t}\r\n\treturn true;\r\n  }\r\n\r\n  function serviceTransfer(address _from, address _to, uint256 _value) { // Функция перевода токенов, для владельца, чтобы исправлять косяки, например\r\n\trequire((msg.sender == owner)||(msg.sender == saleAgent)); // Если вызывающий владелец контракта, или контракт-продавец\r\n\t_transfer(_from, _to, _value);        \t \r\n  }\r\n\r\n    \r\n  function transfer(address _to, uint256 _value) returns (bool success) { // Функция для перевода своих токенов\r\n\treturn _transfer(msg.sender, _to, _value);\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) { // Функция для перевода токенов с чужого счёта  \r\n\trequire(_value <= allowed[_from][_to]);// Проверка, что токены были выделены аккаунтом _from для аккаунта _to\r\n\tallowed[_from][_to] -= _value; // Снятие разрешения перевода\r\n\treturn _transfer(_from, _to, _value);//Отправка токенов\r\n  }\r\n \r\n  function approve(address _spender, uint256 _value) returns (bool success){ // Функция разрешения перевода токенов со своего счёта\r\n\tallowed[msg.sender][_spender] += _value;\r\n\tApproval(msg.sender, _spender, _value);\r\n\treturn true;\r\n  }\r\n\r\n  address public saleAgent; // Адрес контракта продавца, который уполномочен выпускать токены\r\n \r\n\tfunction setSaleAgent(address newSaleAgnet) public { // Установка адреса контракта продавца\r\n  \trequire(msg.sender == saleAgent || msg.sender == owner);\r\n  \tsaleAgent = newSaleAgnet;\r\n\t}\r\n    \r\n    \r\n  function mint(address _to, uint256 _amount) public returns (bool) { // Выпуск токенов\r\n\trequire(msg.sender == saleAgent);\r\n\ttokenTotalSupply += _amount;\r\n\tbalances[_to] += _amount;\r\n\tMint(_to, _amount);\r\n\tif (_to == address(this)){ // Если монетки созданы на счёте контракта токена, они сжигаются\r\n  \treturn burn();\r\n\t}\r\n\treturn true;\r\n  }\r\n \r\n  function() external payable {\r\n\towner.transfer(msg.value);\r\n  }\r\n\r\n  function burn() internal returns (bool success) { // Функция для уничтожения токенов, которые появились на счёте контракта токена\r\n\tuint256 burningTokensAmmount = balances[address(this)]; // Запоминаем количество сжигаемых токенов\r\n\ttokenTotalSupply -= burningTokensAmmount; // Общее количество выпущенных токенов сокращается на количество сжигаемых токенов\r\n\tbalances[address(this)] = 0;                  \t// Количество монет на счёте контракта токена обнуляется\r\n    \r\n\tBurn(msg.sender, burningTokensAmmount);\r\n\treturn true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) constant returns (uint256 remaining){ // Функция, возвращающая значение токенов, которым _owner разрешил управлять _spender`у\r\n\treturn allowed[_owner][_spender];\r\n  }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newSaleAgnet\",\"type\":\"address\"}],\"name\":\"setSaleAgent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"serviceTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleAgent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"KVCoin","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4129c9bd13554b4667c2d0cde5f496abb9ca27fd3d2b1e2c91b3b83250573062"}]}