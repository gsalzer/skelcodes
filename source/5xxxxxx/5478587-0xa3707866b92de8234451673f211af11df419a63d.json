{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.21;\r\n\r\n/// @title ERC20 ERC20 Interface\r\n/// @dev see https://github.com/ethereum/EIPs/issues/20\r\n/// @author Chenyo\r\ncontract ERC20 {\r\n    uint public totalSupply;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    function balanceOf(address who) view public returns (uint256);\r\n    function allowance(address owner, address spender) view public returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract AirDropContract {\r\n\r\n    event AirDropped(address addr, uint amount);\r\n\r\n    function drop(\r\n        address tokenAddress,\r\n        address conTokenAddress,  //额外token条件地址,如不需要,保持和tokenAddress相同即可\r\n        uint amount,\r\n        uint[2] minmaxTokenBalance,\r\n        uint[2] minmaxConBalance,  //额外token min-max条件\r\n        uint[2] minmaxEthBalance,\r\n        address[] recipients) public {\r\n\r\n        require(tokenAddress != 0x0);\r\n        require(conTokenAddress != 0x0);\r\n        require(amount > 0);\r\n        require(minmaxTokenBalance[1] >= minmaxTokenBalance[0]);\r\n        require(minmaxConBalance[1] >= minmaxConBalance[0]);\r\n        require(minmaxEthBalance[1] >= minmaxEthBalance[0]);\r\n\r\n        ERC20 token = ERC20(tokenAddress);\r\n        ERC20 contoken = ERC20(conTokenAddress);\r\n\r\n        uint balance = token.balanceOf(msg.sender);\r\n        uint allowance = token.allowance(msg.sender, address(this));\r\n        uint available = balance > allowance ? allowance : balance;\r\n\r\n        for (uint i = 0; i < recipients.length; i++) {\r\n            require(available >= amount);\r\n            address recipient = recipients[i];\r\n            if (isQualitifiedAddress(\r\n                token,\r\n                contoken,\r\n                recipient,\r\n                minmaxTokenBalance,\r\n                minmaxConBalance,\r\n                minmaxEthBalance\r\n            )) {\r\n                available -= amount;\r\n                require(token.transferFrom(msg.sender, recipient, amount));\r\n\r\n                AirDropped(recipient, amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isQualitifiedAddress(\r\n        ERC20 token,\r\n        ERC20 contoken,\r\n        address addr,\r\n        uint[2] minmaxTokenBalance,\r\n        uint[2] minmaxConBalance,\r\n        uint[2] minmaxEthBalance\r\n        )\r\n        public\r\n        view\r\n        returns (bool result)\r\n    {\r\n        result = addr != 0x0 && addr != msg.sender && !isContract(addr);\r\n\r\n        uint ethBalance = addr.balance;\r\n        uint tokenBbalance = token.balanceOf(addr);\r\n        uint conTokenBalance = contoken.balanceOf(addr);\r\n\r\n        result = result && (ethBalance>= minmaxEthBalance[0] &&\r\n            ethBalance <= minmaxEthBalance[1] &&\r\n            tokenBbalance >= minmaxTokenBalance[0] &&\r\n            tokenBbalance <= minmaxTokenBalance[1] &&\r\n            conTokenBalance >= minmaxConBalance[0] &&\r\n            conTokenBalance <= minmaxConBalance[1]);\r\n    }\r\n\r\n    function isContract(address addr) internal view returns (bool) {\r\n        uint size;\r\n        assembly { size := extcodesize(addr) }\r\n        return size > 0;\r\n    }\r\n\r\n    function () payable public {\r\n        revert();\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"conTokenAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"minmaxTokenBalance\",\"type\":\"uint256[2]\"},{\"name\":\"minmaxConBalance\",\"type\":\"uint256[2]\"},{\"name\":\"minmaxEthBalance\",\"type\":\"uint256[2]\"},{\"name\":\"recipients\",\"type\":\"address[]\"}],\"name\":\"drop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"contoken\",\"type\":\"address\"},{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"minmaxTokenBalance\",\"type\":\"uint256[2]\"},{\"name\":\"minmaxConBalance\",\"type\":\"uint256[2]\"},{\"name\":\"minmaxEthBalance\",\"type\":\"uint256[2]\"}],\"name\":\"isQualitifiedAddress\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirDropped\",\"type\":\"event\"}]","ContractName":"AirDropContract","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6d484bf2e8fe45561fb374f596545d4763cdfcd1f1070922f4f5dacaeeb5a937"}]}