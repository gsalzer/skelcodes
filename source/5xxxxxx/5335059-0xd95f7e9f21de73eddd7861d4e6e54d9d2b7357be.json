{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.2;\r\n\r\ncontract Numa {\r\n    mapping(address => bytes32) public users;\r\n    Message[] public messages;\r\n\r\n    struct Message {\r\n        address sender;\r\n        bytes32 ipfsHash;\r\n    }\r\n\r\n    event UserUpdated(\r\n        address indexed sender,\r\n        bytes32 indexed ipfsHash\r\n    );\r\n\r\n    event MessageCreated(\r\n        uint indexed id,\r\n        address indexed sender,\r\n        bytes32 indexed ipfsHash\r\n    );\r\n    \r\n    event MessageUpdated(\r\n        uint indexed id,\r\n        address indexed sender,\r\n        bytes32 indexed ipfsHash\r\n    );\r\n\r\n    function Numa() public { }\r\n\r\n    function messagesLength() public view returns (uint) {\r\n        return messages.length;\r\n    }\r\n\r\n    function createMessage(bytes32 ipfsHash) public {\r\n        messages.length++;\r\n        uint index = messages.length - 1;\r\n\r\n        messages[index].ipfsHash = ipfsHash;\r\n        messages[index].sender = msg.sender;\r\n\r\n        MessageCreated(index, msg.sender, ipfsHash);\r\n    }\r\n\r\n    function updateMessage(uint id, bytes32 ipfsHash) public {\r\n        require(messages.length > id);\r\n        require(messages[id].sender == msg.sender);\r\n        \r\n        messages[id].ipfsHash = ipfsHash;\r\n\r\n        MessageUpdated(id, msg.sender, ipfsHash);\r\n    }\r\n\r\n    function updateUser(bytes32 ipfsHash) public {\r\n        users[msg.sender] = ipfsHash;\r\n        UserUpdated(msg.sender, ipfsHash);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"messages\",\"outputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"updateMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"createMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"updateUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"messagesLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"UserUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"MessageCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"ipfsHash\",\"type\":\"bytes32\"}],\"name\":\"MessageUpdated\",\"type\":\"event\"}]","ContractName":"Numa","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://433afe0d1a50702e576e97afabea26fe4fe2422951a6e6af4d145ef227bea8b3"}]}