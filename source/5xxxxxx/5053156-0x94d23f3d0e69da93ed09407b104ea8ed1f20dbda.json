{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\nhttps://lovcoin.github.io/\r\n\r\nBETA/DRAFT - NOT TESTED !!! - DO NOT USE THIS SOURCE FOR LIVE-REVARD\r\n\r\nDraft 0.1 - 08.feb.2018\r\n\r\n*/\r\n\r\n\r\n\r\n// ---\r\n// Main LoveLock class\r\n//\r\ncontract LoveLock\r\n{\r\naddress public owner;                    // The owner of this contract\r\n\r\nuint    public lastrecordindex;          // The highest record index, number of lovelocks\r\nuint    public lovelock_price;           // Lovelock price (starts with ~ $9.99 in ETH, 0.0119 ETH)\r\n\r\naddress public last_buyer;               // Last buyer of a lovelock.\r\nbytes32 public last_hash;                // Last index hash\r\n\r\n\r\n//\r\n// Datasets for the lovelocks.\r\n//\r\nstruct DataRecord\r\n{\r\nstring name1;\r\nstring name2;\r\nstring lovemessage;\r\nuint   locktype;\r\n} // struct DataRecord\r\n\r\nmapping(bytes32 => DataRecord) public DataRecordStructs;\r\n\r\n\r\n\r\n\r\n\r\n// ---\r\n// Constructor\r\n// \r\nfunction LoveLock () public\r\n{\r\n// Today 08.Feb.2018 - 1 ETH=$836, 0.0119 ~ $9.99\r\n\r\n//lovelock_price           = 11900000000000000;\r\n// (much smaller for testing)\r\nlovelock_price             = 1100000000000000;\r\nowner                    = msg.sender;\r\nlastrecordindex          = 0;\r\n} // Constructor\r\n \r\n\r\n\r\n\r\n// ---\r\n// withdraw_to_reward_contract\r\n// \r\nfunction withdraw_to_reward_contract() public constant returns (bool)\r\n{\r\naddress reward_contract = 0xF711233A0Bec76689FEA4870cc6f4224334DB9c3;\r\nreward_contract.transfer( this.balance );\r\nreturn(true);\r\n} // withdraw_to_reward_contract\r\n\r\n\r\n\r\n// ---\r\n// number_to_hash\r\n//\r\nfunction number_to_hash( uint param ) public constant returns (bytes32)\r\n{\r\nbytes32 ret = keccak256(param);\r\nreturn(ret);\r\n} // number_to_hash\r\n\r\n\r\n\r\n\r\n\r\n// ---\r\n// Web3 event 'LovelockPayment'\r\n//\r\nevent LovelockPayment\r\n(\r\naddress indexed _from,\r\nbytes32 hashindex,\r\nuint _value2\r\n);\r\n    \r\n    \r\n// ---\r\n// buy lovelock\r\n//\r\nfunction buy_lovelock( string name1, string name2, string lovemessage, uint locktype ) public payable returns (uint)\r\n{\r\nlast_buyer = msg.sender;\r\n\r\n// only if payed the full price.\r\nif ( msg.value >= lovelock_price )\r\n   {\r\n   // Increment the record index.\r\n   lastrecordindex = lastrecordindex + 1;  \r\n       \r\n   // calculate the hash of this index.   \r\n   last_hash = keccak256(lastrecordindex);  \r\n        \r\n   // Store the lovelock data into the record for the eternity.\r\n   DataRecordStructs[last_hash].name1       = name1;\r\n   DataRecordStructs[last_hash].name2       = name2;\r\n   DataRecordStructs[last_hash].lovemessage = lovemessage;\r\n   DataRecordStructs[last_hash].locktype    = locktype;\r\n   \r\n   // The Web3-Event!!!\r\n   LovelockPayment(msg.sender, last_hash, lastrecordindex);  \r\n   \r\n   return(1);\r\n   } else\r\n     {\r\n     revert();\r\n     }\r\n\r\n \r\nreturn(0);\r\n} \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// DEBUG - REMOVE, if going life!!!\r\n// Kill (owner only)\r\n//\r\nfunction kill () public\r\n{\r\nif (msg.sender != owner) return;\r\n\r\n/*\r\n// Transfer tokens back to owner\r\nuint256 balance = TokenContract.balanceOf(this);\r\nassert(balance > 0);\r\nTokenContract.transfer(owner, balance);\r\n */\r\nowner.transfer( this.balance );\r\nselfdestruct(owner);\r\n} // kill\r\n\r\n\r\n\r\n} // contract LoveLock","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"lastrecordindex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lovelock_price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"param\",\"type\":\"uint256\"}],\"name\":\"number_to_hash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"last_buyer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdraw_to_reward_contract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"last_hash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name1\",\"type\":\"string\"},{\"name\":\"name2\",\"type\":\"string\"},{\"name\":\"lovemessage\",\"type\":\"string\"},{\"name\":\"locktype\",\"type\":\"uint256\"}],\"name\":\"buy_lovelock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"DataRecordStructs\",\"outputs\":[{\"name\":\"name1\",\"type\":\"string\"},{\"name\":\"name2\",\"type\":\"string\"},{\"name\":\"lovemessage\",\"type\":\"string\"},{\"name\":\"locktype\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"hashindex\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_value2\",\"type\":\"uint256\"}],\"name\":\"LovelockPayment\",\"type\":\"event\"}]","ContractName":"LoveLock","CompilerVersion":"v0.4.20-nightly.2018.1.19+commit.eba46a65","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1b41ea4727934b41ae78d9329caf5707c85332f6bdfdde3cd16b227cccdabd5b"}]}