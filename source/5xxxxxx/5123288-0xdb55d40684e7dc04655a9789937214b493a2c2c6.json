{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.19;\r\n\r\n\r\n/// @title Ethereum Claims Registry - A repository storing claims issued\r\n///        from any Ethereum account to any other Ethereum account.\r\ncontract EthereumClaimsRegistry {\r\n\r\n    mapping(address => mapping(address => mapping(bytes32 => bytes32))) public registry;\r\n\r\n    event ClaimSet(\r\n        address indexed issuer,\r\n        address indexed subject,\r\n        bytes32 indexed key,\r\n        bytes32 value,\r\n        uint updatedAt);\r\n\r\n    event ClaimRemoved(\r\n        address indexed issuer,\r\n        address indexed subject,\r\n        bytes32 indexed key,\r\n        uint removedAt);\r\n\r\n    /// @dev Create or update a claim\r\n    /// @param subject The address the claim is being issued to\r\n    /// @param key The key used to identify the claim\r\n    /// @param value The data associated with the claim\r\n    function setClaim(address subject, bytes32 key, bytes32 value) public {\r\n        registry[msg.sender][subject][key] = value;\r\n        ClaimSet(msg.sender, subject, key, value, now);\r\n    }\r\n\r\n    /// @dev Create or update a claim about yourself\r\n    /// @param key The key used to identify the claim\r\n    /// @param value The data associated with the claim\r\n    function setSelfClaim(bytes32 key, bytes32 value) public {\r\n        setClaim(msg.sender, key, value);\r\n    }\r\n\r\n    /// @dev Allows to retrieve claims from other contracts as well as other off-chain interfaces\r\n    /// @param issuer The address of the issuer of the claim\r\n    /// @param subject The address to which the claim was issued to\r\n    /// @param key The key used to identify the claim\r\n    function getClaim(address issuer, address subject, bytes32 key) public constant returns(bytes32) {\r\n        return registry[issuer][subject][key];\r\n    }\r\n\r\n    /// @dev Allows to remove a claims from the registry.\r\n    ///      This can only be done by the issuer or the subject of the claim.\r\n    /// @param issuer The address of the issuer of the claim\r\n    /// @param subject The address to which the claim was issued to\r\n    /// @param key The key used to identify the claim\r\n    function removeClaim(address issuer, address subject, bytes32 key) public {\r\n        require(msg.sender == issuer || msg.sender == subject);\r\n        require(registry[issuer][subject][key] != 0);\r\n        delete registry[issuer][subject][key];\r\n        ClaimRemoved(msg.sender, subject, key, now);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes32\"},{\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"setSelfClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"subject\",\"type\":\"address\"},{\"name\":\"key\",\"type\":\"bytes32\"},{\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"setClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"issuer\",\"type\":\"address\"},{\"name\":\"subject\",\"type\":\"address\"},{\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"issuer\",\"type\":\"address\"},{\"name\":\"subject\",\"type\":\"address\"},{\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"subject\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"ClaimSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"subject\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"removedAt\",\"type\":\"uint256\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"}]","ContractName":"EthereumClaimsRegistry","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0ea8a9224bcc8d15453c0273dd9e5f6d15f2a601d61ecebb0208640123464b22"}]}