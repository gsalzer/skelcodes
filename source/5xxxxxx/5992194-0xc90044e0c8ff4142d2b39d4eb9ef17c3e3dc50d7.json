{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\ncontract DI {\r\n    function ap(address u_) external;\r\n    function rb(address u_) external;\r\n    function ico(uint i_, address x_, uint c_) external;\r\n    function sco(uint i_, address x_, uint c_) external;\r\n    function gco(uint i_, address x_) public view returns (uint _c);\r\n    function gcp(uint ci_) public view returns (uint _c);\r\n    function cpn(uint ci_) external;\r\n    function gur(address x_, address y_) external returns (address _z);\r\n    function gcmp(uint i_, uint c_) public view returns (uint _c);\r\n    function cmpn(uint i_, uint c_) external;\r\n    function cg(address x_, uint gpc_, uint mg_, uint gc_) external;\r\n    function ggc(address x_) public view returns (uint _c);\r\n    function ggcd(address x_) public view returns (uint _c);\r\n    function guhb(address x_) public view returns (bool _c);\r\n    function gcsc(uint ci_) public view returns (uint _c);\r\n    function gcpn(uint ci_) public view returns (uint _c);\r\n    function gcpm(uint ci_) public view returns (uint _c);\r\n    function gcpa(uint ci_) public view returns (uint _c);\r\n    function gcsp(uint ci_) public view returns (uint _c);\r\n    function sc(uint ci_, uint csp_, uint cpm_, uint cpa_, uint csc_) external;\r\n    function irbg(address x_, uint c_) external;\r\n    function grg(address x_) public view returns (uint _c);\r\n}\r\n\r\ncontract Presale {\r\n    event EventBc(address x_, uint ci_);\r\n    event EventBmc(address x_, uint ci_, uint c_);\r\n    event EventCg(address x_);\r\n\r\n    uint rb = 10;\r\n    uint GC = 10;\r\n    uint MG = 50;\r\n    uint GPC = 3;\r\n    uint npb = 50;\r\n\r\n    DI di;\r\n    address public opAddr;\r\n    address private newOpAddr;\r\n\r\n    function Presale() public {\r\n        opAddr = msg.sender;\r\n    }\r\n\r\n\r\n    function bc(uint ci_, address ref_) public payable {\r\n        uint cp_ = di.gcp(ci_);\r\n        require(cp_ > 0);\r\n        cp_ = cp_ * pf(msg.sender)/10000;\r\n        require(msg.value >= cp_);\r\n\r\n        uint excessMoney = msg.value - cp_;\r\n\r\n        di.cpn(ci_);\r\n        di.ico(ci_, msg.sender, 1);\r\n\r\n        di.ap(msg.sender);\r\n        di.rb(msg.sender);\r\n\r\n        EventBc(msg.sender, ci_);\r\n\r\n        address rr = di.gur(msg.sender, ref_);\r\n        if(rr != address(0))\r\n            rr.transfer(cp_ * rb / 100);\r\n\r\n        msg.sender.transfer(excessMoney);\r\n    }\r\n\r\n    function bmc(uint ci_, uint c_, address ref_) public payable {\r\n        require(di.gcp(ci_) > 0);\r\n\r\n        uint cmp_ = di.gcmp(ci_, c_);\r\n        cmp_ = cmp_ * pf(msg.sender)/10000;\r\n        require(msg.value >= cmp_);\r\n\r\n        uint excessMoney = msg.value - cmp_;\r\n            \r\n\r\n\r\n        di.cmpn(ci_, c_);\r\n        di.ico(ci_, msg.sender, c_);\r\n\r\n        di.ap(msg.sender);\r\n        di.rb(msg.sender);\r\n\r\n        EventBmc(msg.sender, ci_, c_);\r\n\r\n        address rr = di.gur(msg.sender, ref_);\r\n        if(rr != address(0)) {\r\n            uint rrb = cmp_ * rb / 100;\r\n            di.irbg(rr, rrb);\r\n            rr.transfer(rrb);\r\n        }\r\n        msg.sender.transfer(excessMoney);\r\n    }\r\n    \r\n    function cg() public {\r\n        di.cg(msg.sender, GPC, MG, GC);\r\n        di.ap(msg.sender);\r\n        EventCg(msg.sender);\r\n    }\r\n\r\n    function pf(address u_) public view returns (uint c) {\r\n        c = 10000;\r\n        if(!di.guhb(u_)) {\r\n            c = c * (100 - npb) / 100;\r\n        }\r\n        uint _gc = di.ggc(u_);\r\n        if(_gc > 0) {\r\n            c = c * (100 - _gc) / 100;\r\n        }\r\n    }\r\n\r\n    function cd1(address x_) public view returns (uint _gc, uint _gcd, bool _uhb, uint _npb, uint _ggcd, uint _mg, uint _gpc, uint _rb, uint _rg) {\r\n        _gc = di.ggc(x_);\r\n        _gcd = di.ggcd(x_);\r\n        _uhb = di.guhb(x_);\r\n        _npb = npb;\r\n        _ggcd = GC;\r\n        _mg = MG;\r\n        _gpc = GPC;\r\n        _rb = rb;\r\n        _rg = di.grg(x_);\r\n    }\r\n    function cd() public view returns (uint _gc, uint _gcd, bool _uhb, uint _npb, uint _ggcd, uint _mg, uint _gpc, uint _rb, uint _rg) {\r\n        return cd1(msg.sender);\r\n    }\r\n    function gcard(uint ci_, address co_) public view returns (uint _coc, uint _csc, uint _cp, uint _cpn, uint _cpm, uint _cpa, uint _csp) {\r\n        _coc = di.gco(ci_, co_);\r\n        _csc = di.gcsc(ci_);\r\n        _cp = di.gcp(ci_);\r\n        _cpn = di.gcpn(ci_);\r\n        _cpm = di.gcpm(ci_);\r\n        _cpa = di.gcpa(ci_);\r\n        _csp = di.gcsp(ci_);\r\n    }\r\n\r\n\r\n    function sc(uint ci_, uint csp_, uint cpm_, uint cpa_, uint csc_) public onlyOp {\r\n        di.sc(ci_, csp_, cpm_, cpa_, csc_);\r\n    }\r\n    function srb(uint rb_) external onlyOp {\r\n        rb = rb_;\r\n    }\r\n    function sgc(uint GC_) public onlyOp {\r\n        GC = GC_;\r\n    }\r\n    function smg(uint MG_) public onlyOp {\r\n        MG = MG_;\r\n    }   \r\n    function sgpc(uint GPC_) public onlyOp {\r\n        GPC = GPC_;\r\n    }    \r\n    function snpb(uint npb_) public onlyOp {\r\n        npb = npb_;\r\n    }\r\n\r\n    function payout(address to_) public onlyOp {\r\n        payoutX(to_, this.balance);\r\n    }\r\n    function payoutX(address to_, uint value_) public onlyOp {\r\n        require(address(0) != to_);\r\n        if(value_ > this.balance)\r\n            to_.transfer(this.balance);\r\n        else\r\n            to_.transfer(value_);\r\n    }\r\n\r\n    function sdc(address dc_) public onlyOp {\r\n        if(dc_ != address(0))\r\n            di = DI(dc_);\r\n    }\r\n    modifier onlyOp() {\r\n        require(msg.sender == opAddr);\r\n        _;\r\n    }\r\n    function setOp(address newOpAddr_) public onlyOp {\r\n        require(newOpAddr_ != address(0));\r\n        newOpAddr = newOpAddr_;\r\n    }\r\n    function acceptOp() public {\r\n        require(msg.sender == newOpAddr);\r\n        require(address(0) != newOpAddr);\r\n        opAddr = newOpAddr;\r\n        newOpAddr = address(0);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"to_\",\"type\":\"address\"}],\"name\":\"payout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cd\",\"outputs\":[{\"name\":\"_gc\",\"type\":\"uint256\"},{\"name\":\"_gcd\",\"type\":\"uint256\"},{\"name\":\"_uhb\",\"type\":\"bool\"},{\"name\":\"_npb\",\"type\":\"uint256\"},{\"name\":\"_ggcd\",\"type\":\"uint256\"},{\"name\":\"_mg\",\"type\":\"uint256\"},{\"name\":\"_gpc\",\"type\":\"uint256\"},{\"name\":\"_rb\",\"type\":\"uint256\"},{\"name\":\"_rg\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"u_\",\"type\":\"address\"}],\"name\":\"pf\",\"outputs\":[{\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ci_\",\"type\":\"uint256\"},{\"name\":\"c_\",\"type\":\"uint256\"},{\"name\":\"ref_\",\"type\":\"address\"}],\"name\":\"bmc\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"npb_\",\"type\":\"uint256\"}],\"name\":\"snpb\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ci_\",\"type\":\"uint256\"},{\"name\":\"ref_\",\"type\":\"address\"}],\"name\":\"bc\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"opAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ci_\",\"type\":\"uint256\"},{\"name\":\"co_\",\"type\":\"address\"}],\"name\":\"gcard\",\"outputs\":[{\"name\":\"_coc\",\"type\":\"uint256\"},{\"name\":\"_csc\",\"type\":\"uint256\"},{\"name\":\"_cp\",\"type\":\"uint256\"},{\"name\":\"_cpn\",\"type\":\"uint256\"},{\"name\":\"_cpm\",\"type\":\"uint256\"},{\"name\":\"_cpa\",\"type\":\"uint256\"},{\"name\":\"_csp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"GC_\",\"type\":\"uint256\"}],\"name\":\"sgc\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x_\",\"type\":\"address\"}],\"name\":\"cd1\",\"outputs\":[{\"name\":\"_gc\",\"type\":\"uint256\"},{\"name\":\"_gcd\",\"type\":\"uint256\"},{\"name\":\"_uhb\",\"type\":\"bool\"},{\"name\":\"_npb\",\"type\":\"uint256\"},{\"name\":\"_ggcd\",\"type\":\"uint256\"},{\"name\":\"_mg\",\"type\":\"uint256\"},{\"name\":\"_gpc\",\"type\":\"uint256\"},{\"name\":\"_rb\",\"type\":\"uint256\"},{\"name\":\"_rg\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dc_\",\"type\":\"address\"}],\"name\":\"sdc\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to_\",\"type\":\"address\"},{\"name\":\"value_\",\"type\":\"uint256\"}],\"name\":\"payoutX\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"GPC_\",\"type\":\"uint256\"}],\"name\":\"sgpc\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"MG_\",\"type\":\"uint256\"}],\"name\":\"smg\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOpAddr_\",\"type\":\"address\"}],\"name\":\"setOp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cg\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ci_\",\"type\":\"uint256\"},{\"name\":\"csp_\",\"type\":\"uint256\"},{\"name\":\"cpm_\",\"type\":\"uint256\"},{\"name\":\"cpa_\",\"type\":\"uint256\"},{\"name\":\"csc_\",\"type\":\"uint256\"}],\"name\":\"sc\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rb_\",\"type\":\"uint256\"}],\"name\":\"srb\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"x_\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ci_\",\"type\":\"uint256\"}],\"name\":\"EventBc\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"x_\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ci_\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"c_\",\"type\":\"uint256\"}],\"name\":\"EventBmc\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"x_\",\"type\":\"address\"}],\"name\":\"EventCg\",\"type\":\"event\"}]","ContractName":"Presale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://92ceb1318123b55d460bb54681da0dc3fc0c60047679d9f4e3434d0b5fa8184e"}]}