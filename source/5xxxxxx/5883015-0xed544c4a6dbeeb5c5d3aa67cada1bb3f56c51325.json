{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n/**\r\n * Changes by https://www.docademic.com/\r\n */\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tif (a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tuint256 c = a * b;\r\n\t\tassert(c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\t\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\t// assert(b > 0); // Solidity automatically throws when dividing by 0\r\n\t\tuint256 c = a / b;\r\n\t\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\t\treturn c;\r\n\t}\r\n\t\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\t\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\n/**\r\n * Changes by https://www.docademic.com/\r\n */\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n\taddress public owner;\r\n\t\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\t\r\n\t/**\r\n\t * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n\t * account.\r\n\t */\r\n\tfunction Ownable() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @dev Throws if called by any account other than the owner.\r\n\t */\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n\t * @param _newOwner The address to transfer ownership to.\r\n\t */\r\n\tfunction transferOwnership(address _newOwner) public onlyOwner {\r\n\t\trequire(_newOwner != address(0));\r\n\t\temit OwnershipTransferred(owner, _newOwner);\r\n\t\towner = _newOwner;\r\n\t}\r\n}\r\n\r\ncontract Destroyable is Ownable {\r\n\t/**\r\n\t * @notice Allows to destroy the contract and return the tokens to the owner.\r\n\t */\r\n\tfunction destroy() public onlyOwner {\r\n\t\tselfdestruct(owner);\r\n\t}\r\n}\r\n\r\ninterface Token {\r\n\tfunction balanceOf(address who) view external returns (uint256);\r\n\t\r\n\tfunction transfer(address _to, uint256 _value) external returns (bool);\r\n}\r\n\r\ncontract BrokerBank is Ownable, Destroyable {\r\n\tusing SafeMath for uint256;\r\n\t\r\n\tToken public token;\r\n\tuint256 public commission;\r\n\taddress public broker;\r\n\taddress public beneficiary;\r\n\t\r\n\tevent CommissionChanged(uint256 _previousCommission, uint256 _commision);\r\n\tevent BrokerChanged(address _previousBroker, address _broker);\r\n\tevent BeneficiaryChanged(address _previousBeneficiary, address _beneficiary);\r\n\tevent Withdrawn(uint256 _balance);\r\n\t\r\n\t/**\r\n\t * @dev Constructor.\r\n\t * @param _token The token address\r\n\t * @param _commission The percentage of the commission 0-100\r\n\t * @param _broker The broker address\r\n\t * @param _beneficiary The beneficiary address\r\n\t */\r\n\tfunction BrokerBank (address _token, uint256 _commission, address _broker, address _beneficiary) public {\r\n\t\trequire(_token != address(0));\r\n\t\ttoken = Token(_token);\r\n\t\tcommission = _commission;\r\n\t\tbroker = _broker;\r\n\t\tbeneficiary = _beneficiary;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @dev Get the token balance of the contract.\r\n\t * @return _balance The token balance of this contract in wei\r\n\t */\r\n\tfunction Balance() view public returns (uint256 _balance) {\r\n\t\treturn token.balanceOf(address(this));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @dev Allows the owner to destroy the contract and return the tokens to the owner.\r\n\t */\r\n\tfunction destroy() public onlyOwner {\r\n\t\ttoken.transfer(owner, token.balanceOf(address(this)));\r\n\t\tselfdestruct(owner);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @dev Allows the owner to withdraw the token funds.\r\n\t */\r\n\tfunction withdraw() public onlyOwner {\r\n\t\tuint256 balance = token.balanceOf(address(this));\r\n\t\tuint256 hundred = 100;\r\n\t\tuint256 brokerWithdraw = (balance.div(hundred)).mul(commission);\r\n\t\tuint256 beneficiaryWithdraw = balance.sub(brokerWithdraw);\r\n\t\ttoken.transfer(beneficiary, beneficiaryWithdraw);\r\n\t\ttoken.transfer(broker, brokerWithdraw);\r\n\t\temit Withdrawn(balance);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @dev Allows the owner to withdraw the balance of the tokens.\r\n\t * @param _commission The percentage of the commission 0-100\r\n\t */\r\n\tfunction changeCommission(uint256 _commission) public onlyOwner {\r\n\t\temit CommissionChanged(commission, _commission);\r\n\t\tcommission = _commission;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @dev Allows the owner to change the broker.\r\n\t * @param _broker The broker address\r\n\t */\r\n\tfunction changeBroker(address _broker) public onlyOwner {\r\n\t\temit BrokerChanged(broker, _broker);\r\n\t\tbroker = _broker;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @dev Allows the owner to change the beneficiary.\r\n\t * @param _beneficiary The broker address\r\n\t */\r\n\tfunction changeBeneficiary(address _beneficiary) public onlyOwner {\r\n\t\temit BeneficiaryChanged(beneficiary, _beneficiary);\r\n\t\tbeneficiary = _beneficiary;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"Balance\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_broker\",\"type\":\"address\"}],\"name\":\"changeBroker\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"broker\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"changeBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_commission\",\"type\":\"uint256\"}],\"name\":\"changeCommission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commission\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_commission\",\"type\":\"uint256\"},{\"name\":\"_broker\",\"type\":\"address\"},{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_previousCommission\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_commision\",\"type\":\"uint256\"}],\"name\":\"CommissionChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_previousBroker\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_broker\",\"type\":\"address\"}],\"name\":\"BrokerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_previousBeneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"BeneficiaryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"BrokerBank","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000905e337c6c8645263d3521205aa37bf4d034e7450000000000000000000000000000000000000000000000000000000000000050000000000000000000000000797726c7c3156b4a479e95b31865ef98d4d468f4000000000000000000000000a9958ed59bafcfe2e156748222ca325b75388881","Library":"","SwarmSource":"bzzr://4214f3dc510be599d30546a7d0ec75ab775695cc3cdeda229ddfaa2beb5f5516"}]}