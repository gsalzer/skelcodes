{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() public {  owner = msg.sender;  }\r\n    modifier onlyOwner {  require (msg.sender == owner);    _;   }\r\n    function transferOwnership(address newOwner) onlyOwner public{  owner = newOwner;  }\r\n}\r\n\r\ncontract HSCToken is owned {\r\n    string public name; \r\n    string public symbol; \r\n    uint8 public decimals = 18;\r\n    uint256 public totalSupply; \r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => uint256) public lockOf;\r\n\tmapping (address => bool) public frozenAccount; \r\n\t\r\n    event Transfer(address indexed from, address indexed to, uint256 value); \r\n    event Burn(address indexed from, uint256 value); \r\n    \r\n    function HSCToken(uint256 initialSupply, string tokenName, string tokenSymbol, address centralMinter) public {\r\n        if(centralMinter != 0 ) \r\n\t\t\towner = centralMinter; \r\n\t\telse\r\n\t\t\towner = msg.sender;\r\n\t\t\r\n        totalSupply = initialSupply * 10 ** uint256(decimals); \r\n        balanceOf[owner] = totalSupply; \r\n\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint256 _value) internal {\r\n        require (_to != 0x0); \r\n        require (balanceOf[_from] > _value); \r\n        require (balanceOf[_to] + _value > balanceOf[_to]);\r\n\t\trequire( balanceOf[_from] - _value >= lockOf[_from] );\r\n        require(!frozenAccount[_from]); \r\n        require(!frozenAccount[_to]);\r\n\r\n\t\tuint256 previousBalances = balanceOf[_from] +balanceOf[_to]; \r\n        \r\n        balanceOf[_from] -= _value; \r\n        balanceOf[_to] +=  _value; \r\n\t\tassert(balanceOf[_from] + balanceOf[_to] == previousBalances); \r\n\t\temit Transfer(_from, _to, _value); \r\n    }\r\n\t\r\n    function transfer(address _to, uint256 _value) public {   _transfer(msg.sender, _to, _value);   }\r\n\r\n    function mintToken(address target, uint256 mintedAmount) public onlyOwner  {\r\n\t\tbalanceOf[target] += mintedAmount; \r\n        totalSupply += mintedAmount;\r\n        emit Transfer(0, owner, mintedAmount);\r\n        emit Transfer(owner, target, mintedAmount);\r\n    }\r\n\r\n    function lockAccount(address _spender, uint256 _value) public onlyOwner returns (bool success) {\r\n        lockOf[_spender] = _value*10 ** uint256(decimals);\r\n        return true;\r\n    }\r\n\r\n    function freezeAccount(address target, bool freeze) public onlyOwner {\r\n        frozenAccount[target] = freeze;\r\n    }\r\n\r\n    function burn(uint256 _value) public onlyOwner returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);   \r\n\r\n\t\tbalanceOf[msg.sender] -= _value; \r\n        totalSupply -= _value; \r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\t\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"lockAccount\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"centralMinter\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"HSCToken","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000002540be400000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000caa37403889b76eef83f3960cacd643ecc94259800000000000000000000000000000000000000000000000000000000000000034853430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a486f75736520436f696e00000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://8e60cf62694c4a74548bd7bd3920be408ac060d9cccaac7d84d3ee2eabe3c898"}]}