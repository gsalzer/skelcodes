{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.22;\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n/**\r\n * A standard interface allows any tokens on Ethereum to be re-used by \r\n * other applications: from wallets to decentralized exchanges.\r\n */\r\ncontract ERC20 {\r\n\r\n    // optional functions\r\n    function name() public view returns (string);\r\n    function symbol() public view returns (string);\r\n    function decimals() public view returns (uint8);\r\n\r\n    // required functios\r\n    function balanceOf(address user) public view returns (uint256);\r\n    function allowance(address user, address spender) public view returns (uint256);\r\n    function totalSupply() public view returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool); \r\n    function approve(address spender, uint256 value) public returns (bool); \r\n\r\n    // required events\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed user, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract TokenCC is ERC20 {\r\n    using SafeMath for uint256;\r\n\r\n    address private _owner;\r\n    bool private _isStopped = false;\r\n    string private _name = \"CChain CCHN\";\r\n    string private _symbol = \"CCHN\";\r\n    uint8 private _decimals = 18;\r\n    uint256 private _totalSupply;\r\n\r\n    mapping (address => uint256) private _balanceOf;\r\n    mapping (address => mapping (address => uint256)) private _allowance;\r\n\r\n    event Mint(address indexed from, uint256 value);\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    constructor(uint256 tokenSupply) public {\r\n        _owner = msg.sender;\r\n        _totalSupply = tokenSupply * 10 ** uint256(_decimals);\r\n        _balanceOf[msg.sender] = _totalSupply;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == _owner);\r\n        _;\r\n    }\r\n\r\n    modifier unstopped() {\r\n        require(msg.sender == _owner || _isStopped == false);\r\n        _;\r\n    }\r\n\r\n    function owner() public view returns (address){\r\n        return _owner;\r\n    }\r\n\r\n    function start() public onlyOwner {\r\n        if(_isStopped) {\r\n            _isStopped = false;\r\n        }\r\n    }\r\n\r\n    function stop() public onlyOwner {\r\n        if(_isStopped == false) {\r\n            _isStopped = true;\r\n        }\r\n    }\r\n\r\n    function isStopped() public view returns (bool) {\r\n        return _isStopped;\r\n    }\r\n\r\n    function name() public view returns (string) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function balanceOf(address user) public view returns (uint256) {\r\n        return _balanceOf[user];\r\n    }\r\n\r\n    function allowance(address user, address spender) public view returns (uint256) {\r\n        return _allowance[user][spender];\r\n    }\r\n    \r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function transferImpl(address from, address to, uint256 value) internal {\r\n        require(to != 0x0);\r\n        require(value > 0);\r\n        require(_balanceOf[from] >= value);\r\n        _balanceOf[from] = _balanceOf[from].sub(value);\r\n        _balanceOf[to] = _balanceOf[to].add(value);\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public unstopped returns (bool) {\r\n        transferImpl(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) public unstopped returns (bool) {\r\n        require(value <= _allowance[from][msg.sender]);\r\n        _allowance[from][msg.sender] = _allowance[from][msg.sender].sub(value);\r\n        transferImpl(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public unstopped returns (bool) {\r\n        _allowance[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n    \r\n    function mint(uint256 value) public onlyOwner {\r\n        _totalSupply = _totalSupply.add(value);\r\n        _balanceOf[owner()] = _balanceOf[owner()].add(value);\r\n        emit Mint(owner(), value);\r\n    }\r\n\r\n    function burn(uint256 value) public unstopped returns (bool) {\r\n        require(_balanceOf[msg.sender] >= value);\r\n        _balanceOf[msg.sender] = _balanceOf[msg.sender].sub(value);\r\n        _totalSupply = _totalSupply.sub(value);\r\n        emit Burn(msg.sender, value);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isStopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"TokenCC","CompilerVersion":"v0.4.22+commit.4cb486ee","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000007d2b7500","Library":"","SwarmSource":"bzzr://06d39cadf3e3e9075dd11c8a006311dc877594aeecc21f15afb05d84c6f9f500"}]}