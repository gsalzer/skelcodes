{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.4;\r\n\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() public{\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\ncontract ERC20Token {\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract StandardToken is ERC20Token {\r\n\r\n    function transfer(address _to, uint _value) public returns (bool success) {\r\n        //Default assumes totalSupply can't be over max (2^256 - 1).\r\n        //If your token leaves out totalSupply and can issue more tokens as time goes on, you need to check if it doesn't wrap.\r\n        //Replace the if with this one instead.\r\n        //if (balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\r\n\r\n        if (balances[msg.sender] >= _value && _value > 0) {\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success) {\r\n        //same as above. Replace this line with the following if you want to protect against wrapping uints.\r\n        //if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\r\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n            balances[_to] += _value;\r\n            balances[_from] -= _value;\r\n            allowed[_from][msg.sender] -= _value;\r\n            Transfer(_from, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\r\n    function balanceOf(address _owner) public constant  returns (uint balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint _value) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping (address => uint) balances;\r\n    mapping (address => mapping (address => uint)) allowed;\r\n    uint public _supply;\r\n\r\n    function totalSupply() public constant returns (uint supply) {\r\n    return _supply;\r\n  }\r\n\r\n}\r\n\r\n\r\ncontract CWVToken is StandardToken,owned {\r\n\r\n\r\n    uint public time_on_trademarket; // when to lock , the day when cwv on trade market\r\n\r\n    uint public time_end_sale; // day when finished open sales, time to calc team lock day.\r\n    \r\n    uint public angels_lock_days; // days  to lock angel , 90 days\r\n\r\n    uint public team_total_lock_days; // days to local team , 24 month\r\n\r\n    uint public team_release_epoch; // epoch to release teams\r\n\r\n    string public name = \"CryptoWorldVip  Token\";\r\n    string public symbol = \"CWV\";\r\n    string public version = \"V1.0.0\";\r\n    uint public decimals = 18;\r\n\r\n\r\n    mapping (address => uint) angels_locks;//all lock 3 months,\r\n    \r\n\r\n    \r\n    address public team_address;\r\n    \r\n    uint public team_lock_count ; // team lock count\r\n    uint public last_release_date ; // last team lock date\r\n    uint public epoch_release_count; // total release epoch count\r\n\r\n    uint calc_unit = 1 days ;// days\r\n\r\n    function CWVToken() public{\r\n        \r\n        time_on_trademarket = 0;\r\n        time_end_sale = 0;\r\n\r\n\r\n//change times\r\n        \r\n\r\n        angels_lock_days = 90 * calc_unit; //lock 3 mongth ,\r\n\r\n        team_total_lock_days = 720 * calc_unit;\r\n\r\n        team_release_epoch = 90  * calc_unit;\r\n\r\n        _supply = 10000000000 * 10 ** uint256(decimals);\r\n\r\n        balances[msg.sender] = _supply;\r\n\r\n        team_lock_count = _supply * 15 / 100;\r\n\r\n        owner = msg.sender;\r\n\r\n        last_release_date = now;\r\n        \r\n        epoch_release_count = team_lock_count/(team_total_lock_days/team_release_epoch);//10000, 360*2=730, 30*3=90\r\n\r\n    }\r\n\r\n    function setOnlineTime() public onlyOwner {\r\n        //require (time_on_trademarket == 0);\r\n        time_on_trademarket = now;\r\n    \r\n    }\r\n\r\n    function transfer(address _to, uint _value) public returns (bool success) {\r\n\r\n        require (_to != 0x0 && msg.sender != team_address && _value >0 );\r\n\r\n        if (angels_locks[msg.sender] != 0 )\r\n        { // before lock days \r\n            if(time_on_trademarket == 0)\r\n            {\r\n                //cannot transfer before time_on_trademarket\r\n                return false;\r\n            }\r\n            if( now < time_on_trademarket + angels_lock_days &&\r\n                 balances[msg.sender] - angels_locks[msg.sender] < _value )\r\n            {\r\n                // not have enough values to sender\r\n                return false;\r\n            }\r\n        }\r\n\r\n        require (balances[msg.sender] >= _value && _value > 0);\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    //3 month lock up\r\n    function earlyAngelSales(address _to, uint256 _value) public onlyOwner returns (bool success)   {\r\n        require (_to != 0x0 && _value > 0 && _to !=team_address);\r\n        \r\n        uint v = _value * 10 ** uint256(decimals);\r\n        require (balances[msg.sender] >= v && v > 0) ;\r\n\r\n        balances[msg.sender] -= v;\r\n        balances[_to] += v;\r\n        angels_locks [ _to ]  += v;\r\n\r\n        Transfer(msg.sender, _to, v);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    function batchEarlyAngelSales(address []_tos, uint256 []_values) public onlyOwner returns (bool success)   {\r\n        require( _tos.length == _values.length );\r\n        for (uint256 i = 0; i < _tos.length; i++) {\r\n            earlyAngelSales(_tos[i], _values[i]);\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    function angelSales(address _to, uint256 _value) public onlyOwner returns (bool success)   {\r\n        require (_to != 0x0 && _value > 0 && _to !=team_address);\r\n        \r\n        uint v = _value * 10 ** uint256(decimals);\r\n        require (balances[msg.sender] >= v && v > 0) ;\r\n\r\n        balances[msg.sender] -= v;\r\n        balances[_to] += v;\r\n        angels_locks[_to] += v/2;\r\n\r\n        Transfer(msg.sender, _to, v);\r\n\r\n        return true;\r\n    }\r\n\r\n    function batchAngelSales(address []_tos, uint256 []_values) public onlyOwner returns (bool success)   {\r\n        require( _tos.length == _values.length );\r\n        for (uint256 i = 0; i < _tos.length; i++) {\r\n            angelSales(_tos[i], _values[i]);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function unlockAngelAccounts(address[] _batchOfAddresses) public onlyOwner returns (bool success)   {\r\n        \r\n        require( time_on_trademarket != 0 );\r\n        require( now > time_on_trademarket + angels_lock_days );//after 3months\r\n\r\n        address holder;\r\n\r\n        for (uint256 i = 0; i < _batchOfAddresses.length; i++) {\r\n            holder = _batchOfAddresses[i];\r\n            if(angels_locks[holder]>0){                \r\n                angels_locks[holder] = 0;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    function frozen_team(address _to) public onlyOwner returns (bool success)   {\r\n\r\n        require (team_address == 0);\r\n\r\n        team_address = _to;\r\n        \r\n        uint v = team_lock_count;\r\n\r\n        balances[msg.sender] -= v;\r\n        balances[_to] += v;\r\n        Transfer(msg.sender, _to, v);\r\n        return true;\r\n    }\r\n\r\n    function changeTeamAddress(address _new)  public onlyOwner returns (bool success)   {\r\n\r\n        require (_new != 0 && team_address != 0);\r\n        address old_team_address = team_address;\r\n\r\n        uint team_remains = balances[team_address];\r\n        balances[team_address] -= team_remains;\r\n        balances[_new] += team_remains;\r\n\r\n        team_address = _new;\r\n        Transfer(old_team_address, _new, team_remains);\r\n\r\n        return true;\r\n    }\r\n\r\n    function epochReleaseTeam(address _to) public onlyOwner returns (bool success)   {\r\n        require (balances[team_address] > 0);\r\n        require (now > last_release_date + team_release_epoch );\r\n        \r\n        uint current_release_count = (now - last_release_date)  / (team_release_epoch ) * epoch_release_count;\r\n       \r\n        if(balances[team_address]>current_release_count){\r\n            current_release_count = current_release_count;\r\n        }else{\r\n            current_release_count = balances[team_address];\r\n        }\r\n        \r\n        balances[team_address] -= current_release_count;\r\n        balances[_to] += current_release_count;\r\n\r\n        last_release_date += (current_release_count / epoch_release_count ) * team_release_epoch;\r\n\r\n        team_lock_count -= current_release_count;\r\n\r\n        Transfer(team_address, _to, current_release_count);\r\n        return true;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_batchOfAddresses\",\"type\":\"address[]\"}],\"name\":\"unlockAngelAccounts\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"angels_lock_days\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"time_on_trademarket\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"last_release_date\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"changeTeamAddress\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"angelSales\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tos\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"batchEarlyAngelSales\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tos\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"batchAngelSales\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setOnlineTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team_total_lock_days\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team_lock_count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"epoch_release_count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"epochReleaseTeam\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"time_end_sale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"earlyAngelSales\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"frozen_team\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"team_release_epoch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"CWVToken","CompilerVersion":"v0.4.21-nightly.2018.2.28+commit.ac5485a2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5e9ad28c858c2fb74a57437343cae501540aa84eed16a32173a1734f293e99c1"}]}