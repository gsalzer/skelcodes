{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\ncontract EtherCashLink {\r\n\r\n\r\n    struct Payment {\r\n        bool paid;\r\n        bytes32 verification;\r\n        uint amount;\r\n        bool exists;\r\n        address sender;\r\n    }\r\n\r\n    mapping(bytes32 => Payment) public payments;\r\n    \r\n\r\n    event GotPaid(address sender, address receiver, uint amount, bytes32 verification); // Event\r\n    event LinkCreated(address sender, uint amount, bytes32 verification); // Event\r\n\r\n    modifier onlyIfValidCode(string _passcode) {\r\n        require(keccak256(_passcode) == payments[keccak256(_passcode)].verification);\r\n        _;\r\n    }\r\n\r\n    modifier onlyIfNotPaid(string _passcode) {\r\n        require(!payments[keccak256(_passcode)].paid);\r\n        _;\r\n    }\r\n\r\n    function createLink(bytes32 _verification) public payable {\r\n        require(!payments[_verification].exists);\r\n        require(msg.value > 0);\r\n        var newPayment = payments[_verification];\r\n        newPayment.paid = false;\r\n        newPayment.verification = _verification;\r\n        newPayment.amount = msg.value;\r\n        newPayment.exists = true;\r\n        newPayment.sender = msg.sender;\r\n        emit LinkCreated(newPayment.sender, newPayment.amount,  newPayment.verification);\r\n\r\n    }\r\n\r\n    function getPaid(string _passcode, address _receiver) \r\n        onlyIfValidCode(_passcode) \r\n        onlyIfNotPaid(_passcode) \r\n        public returns (bool) {\r\n        payments[keccak256(_passcode)].paid = true;\r\n        _receiver.transfer(payments[keccak256(_passcode)].amount);\r\n        return true;\r\n        emit GotPaid(payments[keccak256(_passcode)].sender, _receiver,payments[keccak256(_passcode)].amount, payments[keccak256(_passcode)].verification);\r\n    }\r\n    \r\n    function wasPaid(bytes32 _verification) public view returns (bool) {\r\n        return (payments[_verification].paid);\r\n    }\r\n\r\n   \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"payments\",\"outputs\":[{\"name\":\"paid\",\"type\":\"bool\"},{\"name\":\"verification\",\"type\":\"bytes32\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"exists\",\"type\":\"bool\"},{\"name\":\"sender\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_verification\",\"type\":\"bytes32\"}],\"name\":\"wasPaid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_verification\",\"type\":\"bytes32\"}],\"name\":\"createLink\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_passcode\",\"type\":\"string\"},{\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"getPaid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"verification\",\"type\":\"bytes32\"}],\"name\":\"GotPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"verification\",\"type\":\"bytes32\"}],\"name\":\"LinkCreated\",\"type\":\"event\"}]","ContractName":"EtherCashLink","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ef285b2c737178c41f7fc23e4af02c33c99201afe8ba46ac3a0dc64fe7db6f71"}]}