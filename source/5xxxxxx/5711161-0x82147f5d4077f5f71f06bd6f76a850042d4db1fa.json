{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract owned {\r\n\r\n    address owner;\r\n\r\n    /*this function is executed at initialization and sets the owner of the contract */\r\n    constructor() public { owner = msg.sender; }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\ncontract mortal is owned {\r\n\r\n    /* Function to recover the funds on the contract */\r\n    function kill() public onlyOwner() {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n}\r\n\r\ncontract CryptoCows is owned, mortal {\r\n   \r\n    struct Cow {\r\n        uint32 milk;\r\n        uint32 readyTime;\r\n    }\r\n\r\n    event GetCowEvent(uint id);\r\n    event GetMilkEvent(uint32 milk, uint32 timestamp);\r\n    \r\n    Cow[] public cows;\r\n    uint public allMilk;\r\n    \r\n    mapping(uint => address) public owners;\r\n    mapping(address => uint) public count;\r\n    mapping(address => uint) public ownerCow;\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function getCow(uint _cowId) public view returns (uint32, uint32) {\r\n        Cow storage _cow = cows[_cowId];\r\n        return (_cow.milk, _cow.readyTime);\r\n    }\r\n    \r\n    function countCows() public view returns(uint) {\r\n        return cows.length;\r\n    }\r\n    \r\n    function countMilk() public view returns(uint) {\r\n        return allMilk;\r\n    }\r\n    \r\n    function buyCow() public {\r\n        require(count[msg.sender] == 0);\r\n        uint id = cows.length;\r\n        cows.push(Cow(0, uint32(now)));\r\n        owners[id] = msg.sender;\r\n        count[msg.sender] = 1;\r\n        ownerCow[msg.sender] = id;\r\n        emit GetCowEvent(id);\r\n    }\r\n    \r\n    function removeCooldown() public payable {\r\n        require(msg.value == 0.001 ether);\r\n        require(count[msg.sender] == 1);\r\n        uint _cowId = ownerCow[msg.sender];\r\n        Cow storage currentCow = cows[_cowId];\r\n        require(_isReady(currentCow) == false);\r\n        currentCow.readyTime = uint32(now);\r\n        emit GetCowEvent(_cowId);\r\n    }\r\n    \r\n    function _isReady(Cow storage _cow) internal view returns (bool) {\r\n        return (_cow.readyTime <= now);\r\n    }    \r\n    \r\n    function getMilk() public {\r\n        require(count[msg.sender] == 1);\r\n        uint _cowId = ownerCow[msg.sender];\r\n        Cow storage currentCow = cows[_cowId];\r\n        require(_isReady(currentCow));\r\n        uint32 addMilk = uint32(random());\r\n        allMilk = allMilk + uint(addMilk);\r\n        currentCow.milk += addMilk;\r\n        currentCow.readyTime = uint32(now + 1 hours);\r\n        emit GetMilkEvent(addMilk, currentCow.readyTime);\r\n    }\r\n    \r\n    function random() private view returns (uint8) {\r\n        return uint8(uint256(keccak256(block.timestamp, block.difficulty))%221);\r\n    }    \r\n    \r\n    function withDraw() public onlyOwner {\r\n        uint amount = getBalance();\r\n        owner.transfer(amount);\r\n    }\r\n    \r\n    function getBalance() public view returns (uint){\r\n        return address(this).balance;\r\n    }    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_cowId\",\"type\":\"uint256\"}],\"name\":\"getCow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"},{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countCows\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cows\",\"outputs\":[{\"name\":\"milk\",\"type\":\"uint32\"},{\"name\":\"readyTime\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyCow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allMilk\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countMilk\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"removeCooldown\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getMilk\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerCow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"GetCowEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"milk\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint32\"}],\"name\":\"GetMilkEvent\",\"type\":\"event\"}]","ContractName":"CryptoCows","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d5ed5358b5c9ad2c02f0ce12da76bb0826a113fb99f32252d6bae4c4998c4790"}]}