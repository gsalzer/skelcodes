{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract BdpBaseData {\r\n\r\n\taddress public ownerAddress;\r\n\r\n\taddress public managerAddress;\r\n\r\n\taddress[16] public contracts;\r\n\r\n\tbool public paused = false;\r\n\r\n\tbool public setupComplete = false;\r\n\r\n\tbytes8 public version;\r\n\r\n}\r\nlibrary BdpContracts {\r\n\r\n\tfunction getBdpEntryPoint(address[16] _contracts) pure internal returns (address) {\r\n\t\treturn _contracts[0];\r\n\t}\r\n\r\n\tfunction getBdpController(address[16] _contracts) pure internal returns (address) {\r\n\t\treturn _contracts[1];\r\n\t}\r\n\r\n\tfunction getBdpControllerHelper(address[16] _contracts) pure internal returns (address) {\r\n\t\treturn _contracts[3];\r\n\t}\r\n\r\n\tfunction getBdpDataStorage(address[16] _contracts) pure internal returns (address) {\r\n\t\treturn _contracts[4];\r\n\t}\r\n\r\n\tfunction getBdpImageStorage(address[16] _contracts) pure internal returns (address) {\r\n\t\treturn _contracts[5];\r\n\t}\r\n\r\n\tfunction getBdpOwnershipStorage(address[16] _contracts) pure internal returns (address) {\r\n\t\treturn _contracts[6];\r\n\t}\r\n\r\n\tfunction getBdpPriceStorage(address[16] _contracts) pure internal returns (address) {\r\n\t\treturn _contracts[7];\r\n\t}\r\n\r\n}\r\n\r\ncontract BdpBase is BdpBaseData {\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == ownerAddress);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyAuthorized() {\r\n\t\trequire(msg.sender == ownerAddress || msg.sender == managerAddress);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier whenContractActive() {\r\n\t\trequire(!paused && setupComplete);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier storageAccessControl() {\r\n\t\trequire(\r\n\t\t\t(! setupComplete && (msg.sender == ownerAddress || msg.sender == managerAddress))\r\n\t\t\t|| (setupComplete && !paused && (msg.sender == BdpContracts.getBdpEntryPoint(contracts)))\r\n\t\t);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction setOwner(address _newOwner) external onlyOwner {\r\n\t\trequire(_newOwner != address(0));\r\n\t\townerAddress = _newOwner;\r\n\t}\r\n\r\n\tfunction setManager(address _newManager) external onlyOwner {\r\n\t\trequire(_newManager != address(0));\r\n\t\tmanagerAddress = _newManager;\r\n\t}\r\n\r\n\tfunction setContracts(address[16] _contracts) external onlyOwner {\r\n\t\tcontracts = _contracts;\r\n\t}\r\n\r\n\tfunction pause() external onlyAuthorized {\r\n\t\tpaused = true;\r\n\t}\r\n\r\n\tfunction unpause() external onlyOwner {\r\n\t\tpaused = false;\r\n\t}\r\n\r\n\tfunction setSetupComplete() external onlyOwner {\r\n\t\tsetupComplete = true;\r\n\t}\r\n\r\n\tfunction kill() public onlyOwner {\r\n\t\tselfdestruct(ownerAddress);\r\n\t}\r\n\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract BdpImageStorage is BdpBase {\r\n\r\n\tusing SafeMath for uint256;\r\n\r\n\tstruct Image {\r\n\t\taddress owner;\r\n\t\tuint256 regionId;\r\n\t\tuint256 currentRegionId;\r\n\t\tmapping(uint16 => uint256[1000]) data;\r\n\t\tmapping(uint16 => uint16) dataLength;\r\n\t\tuint16 partsCount;\r\n\t\tuint16 width;\r\n\t\tuint16 height;\r\n\t\tuint16 imageDescriptor;\r\n\t\tuint256 blurredAt;\r\n\t}\r\n\r\n\tuint256 public lastImageId = 0;\r\n\r\n\tmapping(uint256 => Image) public images;\r\n\r\n\r\n\tfunction getLastImageId() view public returns (uint256) {\r\n\t\treturn lastImageId;\r\n\t}\r\n\r\n\tfunction getNextImageId() public storageAccessControl returns (uint256) {\r\n\t\tlastImageId = lastImageId.add(1);\r\n\t\treturn lastImageId;\r\n\t}\r\n\r\n\tfunction createImage(address _owner, uint256 _regionId, uint16 _width, uint16 _height, uint16 _partsCount, uint16 _imageDescriptor) public storageAccessControl returns (uint256) {\r\n\t\trequire(_owner != address(0) && _width > 0 && _height > 0 && _partsCount > 0 && _imageDescriptor > 0);\r\n\t\tuint256 id = getNextImageId();\r\n\t\timages[id].owner = _owner;\r\n\t\timages[id].regionId = _regionId;\r\n\t\timages[id].width = _width;\r\n\t\timages[id].height = _height;\r\n\t\timages[id].partsCount = _partsCount;\r\n\t\timages[id].imageDescriptor = _imageDescriptor;\r\n\t\treturn id;\r\n\t}\r\n\r\n\tfunction imageExists(uint256 _imageId) view public returns (bool) {\r\n\t\treturn _imageId > 0 && images[_imageId].owner != address(0);\r\n\t}\r\n\r\n\tfunction deleteImage(uint256 _imageId) public storageAccessControl {\r\n\t\trequire(imageExists(_imageId));\r\n\t\tdelete images[_imageId];\r\n\t}\r\n\r\n\tfunction getImageOwner(uint256 _imageId) public view returns (address) {\r\n\t\trequire(imageExists(_imageId));\r\n\t\treturn images[_imageId].owner;\r\n\t}\r\n\r\n\tfunction setImageOwner(uint256 _imageId, address _owner) public storageAccessControl {\r\n\t\trequire(imageExists(_imageId));\r\n\t\timages[_imageId].owner = _owner;\r\n\t}\r\n\r\n\tfunction getImageRegionId(uint256 _imageId) public view returns (uint256) {\r\n\t\trequire(imageExists(_imageId));\r\n\t\treturn images[_imageId].regionId;\r\n\t}\r\n\r\n\tfunction setImageRegionId(uint256 _imageId, uint256 _regionId) public storageAccessControl {\r\n\t\trequire(imageExists(_imageId));\r\n\t\timages[_imageId].regionId = _regionId;\r\n\t}\r\n\r\n\tfunction getImageCurrentRegionId(uint256 _imageId) public view returns (uint256) {\r\n\t\trequire(imageExists(_imageId));\r\n\t\treturn images[_imageId].currentRegionId;\r\n\t}\r\n\r\n\tfunction setImageCurrentRegionId(uint256 _imageId, uint256 _currentRegionId) public storageAccessControl {\r\n\t\trequire(imageExists(_imageId));\r\n\t\timages[_imageId].currentRegionId = _currentRegionId;\r\n\t}\r\n\r\n\tfunction getImageData(uint256 _imageId, uint16 _part) view public returns (uint256[1000]) {\r\n\t\trequire(imageExists(_imageId));\r\n\t\treturn images[_imageId].data[_part];\r\n\t}\r\n\r\n\tfunction setImageData(uint256 _imageId, uint16 _part, uint256[] _data) public storageAccessControl {\r\n\t\trequire(imageExists(_imageId));\r\n\t\timages[_imageId].dataLength[_part] = uint16(_data.length);\r\n\t\tfor (uint256 i = 0; i < _data.length; i++) {\r\n\t\t\timages[_imageId].data[_part][i] = _data[i];\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getImageDataLength(uint256 _imageId, uint16 _part) view public returns (uint16) {\r\n\t\trequire(imageExists(_imageId));\r\n\t\treturn images[_imageId].dataLength[_part];\r\n\t}\r\n\r\n\tfunction setImageDataLength(uint256 _imageId, uint16 _part, uint16 _dataLength) public storageAccessControl {\r\n\t\trequire(imageExists(_imageId));\r\n\t\timages[_imageId].dataLength[_part] = _dataLength;\r\n\t}\r\n\r\n\tfunction getImagePartsCount(uint256 _imageId) view public returns (uint16) {\r\n\t\trequire(imageExists(_imageId));\r\n\t\treturn images[_imageId].partsCount;\r\n\t}\r\n\r\n\tfunction setImagePartsCount(uint256 _imageId, uint16 _partsCount) public storageAccessControl {\r\n\t\trequire(imageExists(_imageId));\r\n\t\timages[_imageId].partsCount = _partsCount;\r\n\t}\r\n\r\n\tfunction getImageWidth(uint256 _imageId) view public returns (uint16) {\r\n\t\trequire(imageExists(_imageId));\r\n\t\treturn images[_imageId].width;\r\n\t}\r\n\r\n\tfunction setImageWidth(uint256 _imageId, uint16 _width) public storageAccessControl {\r\n\t\trequire(imageExists(_imageId));\r\n\t\timages[_imageId].width = _width;\r\n\t}\r\n\r\n\tfunction getImageHeight(uint256 _imageId) view public returns (uint16) {\r\n\t\trequire(imageExists(_imageId));\r\n\t\treturn images[_imageId].height;\r\n\t}\r\n\r\n\tfunction setImageHeight(uint256 _imageId, uint16 _height) public storageAccessControl {\r\n\t\trequire(imageExists(_imageId));\r\n\t\timages[_imageId].height = _height;\r\n\t}\r\n\r\n\tfunction getImageDescriptor(uint256 _imageId) view public returns (uint16) {\r\n\t\trequire(imageExists(_imageId));\r\n\t\treturn images[_imageId].imageDescriptor;\r\n\t}\r\n\r\n\tfunction setImageDescriptor(uint256 _imageId, uint16 _imageDescriptor) public storageAccessControl {\r\n\t\trequire(imageExists(_imageId));\r\n\t\timages[_imageId].imageDescriptor = _imageDescriptor;\r\n\t}\r\n\r\n\tfunction getImageBlurredAt(uint256 _imageId) view public returns (uint256) {\r\n\t\treturn images[_imageId].blurredAt;\r\n\t}\r\n\r\n\tfunction setImageBlurredAt(uint256 _imageId, uint256 _blurredAt) public storageAccessControl {\r\n\t\timages[_imageId].blurredAt = _blurredAt;\r\n\t}\r\n\r\n\tfunction imageUploadComplete(uint256 _imageId) view public returns (bool) {\r\n\t\trequire(imageExists(_imageId));\r\n\t\tfor (uint16 i = 1; i <= images[_imageId].partsCount; i++) {\r\n\t\t\tif(images[_imageId].data[i].length == 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction BdpImageStorage(bytes8 _version) public {\r\n\t\townerAddress = msg.sender;\r\n\t\tmanagerAddress = msg.sender;\r\n\t\tversion = _version;\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"},{\"name\":\"_partsCount\",\"type\":\"uint16\"}],\"name\":\"setImagePartsCount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setImageOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"}],\"name\":\"getImageBlurredAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contracts\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"},{\"name\":\"_imageDescriptor\",\"type\":\"uint16\"}],\"name\":\"setImageDescriptor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"},{\"name\":\"_blurredAt\",\"type\":\"uint256\"}],\"name\":\"setImageBlurredAt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"}],\"name\":\"imageUploadComplete\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastImageId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastImageId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"}],\"name\":\"getImageCurrentRegionId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"images\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"regionId\",\"type\":\"uint256\"},{\"name\":\"currentRegionId\",\"type\":\"uint256\"},{\"name\":\"partsCount\",\"type\":\"uint16\"},{\"name\":\"width\",\"type\":\"uint16\"},{\"name\":\"height\",\"type\":\"uint16\"},{\"name\":\"imageDescriptor\",\"type\":\"uint16\"},{\"name\":\"blurredAt\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"}],\"name\":\"deleteImage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"},{\"name\":\"_part\",\"type\":\"uint16\"},{\"name\":\"_dataLength\",\"type\":\"uint16\"}],\"name\":\"setImageDataLength\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"},{\"name\":\"_part\",\"type\":\"uint16\"}],\"name\":\"getImageDataLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"},{\"name\":\"_height\",\"type\":\"uint16\"}],\"name\":\"setImageHeight\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"}],\"name\":\"getImageHeight\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setSetupComplete\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"}],\"name\":\"getImageOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"}],\"name\":\"getImageWidth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"}],\"name\":\"getImageDescriptor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"}],\"name\":\"getImagePartsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"setupComplete\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"},{\"name\":\"_part\",\"type\":\"uint16\"},{\"name\":\"_data\",\"type\":\"uint256[]\"}],\"name\":\"setImageData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"},{\"name\":\"_regionId\",\"type\":\"uint256\"}],\"name\":\"setImageRegionId\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"},{\"name\":\"_currentRegionId\",\"type\":\"uint256\"}],\"name\":\"setImageCurrentRegionId\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_regionId\",\"type\":\"uint256\"},{\"name\":\"_width\",\"type\":\"uint16\"},{\"name\":\"_height\",\"type\":\"uint16\"},{\"name\":\"_partsCount\",\"type\":\"uint16\"},{\"name\":\"_imageDescriptor\",\"type\":\"uint16\"}],\"name\":\"createImage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"},{\"name\":\"_part\",\"type\":\"uint16\"}],\"name\":\"getImageData\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[1000]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"managerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"}],\"name\":\"getImageRegionId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"},{\"name\":\"_width\",\"type\":\"uint16\"}],\"name\":\"setImageWidth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getNextImageId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_imageId\",\"type\":\"uint256\"}],\"name\":\"imageExists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contracts\",\"type\":\"address[16]\"}],\"name\":\"setContracts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_version\",\"type\":\"bytes8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"BdpImageStorage","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"3263343163626620000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://acd3a5d66ad6c0da87998544c0bac6752028f5fcc6e92a012325c4c6265cbe45"}]}