{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    // uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return a / b;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n    c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract Claimable is Ownable {\r\n  address public pendingOwner;\r\n\r\n  /**\r\n   * @dev Modifier throws if called by any account other than the pendingOwner.\r\n   */\r\n  modifier onlyPendingOwner() {\r\n    require(msg.sender == pendingOwner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to set the pendingOwner address.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner{\r\n    pendingOwner = newOwner;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the pendingOwner address to finalize the transfer.\r\n   */\r\n  function claimOwnership() onlyPendingOwner public {\r\n    OwnershipTransferred(owner, pendingOwner);\r\n    owner = pendingOwner;\r\n    pendingOwner = address(0);\r\n  }\r\n}\r\n\r\ncontract ComissionList is Claimable {\r\n  using SafeMath for uint256;\r\n\r\n  struct Transfer {\r\n    uint256 stat;\r\n    uint256 perc;\r\n  }\r\n\r\n  mapping (string => Transfer) refillPaySystemInfo;\r\n  mapping (string => Transfer) widthrawPaySystemInfo;\r\n\r\n  Transfer transferInfo;\r\n\r\n  event RefillCommisionIsChanged(string _paySystem, uint256 stat, uint256 perc);\r\n  event WidthrawCommisionIsChanged(string _paySystem, uint256 stat, uint256 perc);\r\n  event TransferCommisionIsChanged(uint256 stat, uint256 perc);\r\n\r\n  // установить информацию по комиссии для пополняемой платёжной системы\r\n  function setRefillFor(string _paySystem, uint256 _stat, uint256 _perc) public onlyOwner returns (uint256) {\r\n    refillPaySystemInfo[_paySystem].stat = _stat;\r\n    refillPaySystemInfo[_paySystem].perc = _perc;\r\n\r\n    RefillCommisionIsChanged(_paySystem, _stat, _perc);\r\n  }\r\n\r\n  // установить информацию по комиссии для снимаеомй платёжной системы\r\n  function setWidthrawFor(string _paySystem,uint256 _stat, uint256 _perc) public onlyOwner returns (uint256) {\r\n    widthrawPaySystemInfo[_paySystem].stat = _stat;\r\n    widthrawPaySystemInfo[_paySystem].perc = _perc;\r\n\r\n    WidthrawCommisionIsChanged(_paySystem, _stat, _perc);\r\n  }\r\n\r\n  // установить информацию по комиссии для перевода\r\n  function setTransfer(uint256 _stat, uint256 _perc) public onlyOwner returns (uint256) {\r\n    transferInfo.stat = _stat;\r\n    transferInfo.perc = _perc;\r\n\r\n    TransferCommisionIsChanged(_stat, _perc);\r\n  }\r\n\r\n  // взять процент по комиссии для пополняемой платёжной системы\r\n  function getRefillStatFor(string _paySystem) public view returns (uint256) {\r\n    return refillPaySystemInfo[_paySystem].perc;\r\n  }\r\n\r\n  // взять фикс по комиссии для пополняемой платёжной системы\r\n  function getRefillPercFor(string _paySystem) public view returns (uint256) {\r\n    return refillPaySystemInfo[_paySystem].stat;\r\n  }\r\n\r\n  // взять процент по комиссии для снимаемой платёжной системы\r\n  function getWidthrawStatFor(string _paySystem) public view returns (uint256) {\r\n    return widthrawPaySystemInfo[_paySystem].perc;\r\n  }\r\n\r\n  // взять фикс по комиссии для снимаемой платёжной системы\r\n  function getWidthrawPercFor(string _paySystem) public view returns (uint256) {\r\n    return widthrawPaySystemInfo[_paySystem].stat;\r\n  }\r\n\r\n  // взять процент по комиссии для перевода\r\n  function getTransferPerc() public view returns (uint256) {\r\n    return transferInfo.perc;\r\n  }\r\n  \r\n  // взять фикс по комиссии для перевода\r\n  function getTransferStat() public view returns (uint256) {\r\n    return transferInfo.stat;\r\n  }\r\n\r\n  // рассчитать комиссию со снятия для платёжной системы и суммы\r\n  function calcWidthraw(string _paySystem, uint256 _value) public view returns(uint256) {\r\n    uint256 _totalComission;\r\n    _totalComission = widthrawPaySystemInfo[_paySystem].stat + (_value / 100 ) * widthrawPaySystemInfo[_paySystem].perc;\r\n\r\n    return _totalComission;\r\n  }\r\n\r\n  // рассчитать комиссию с пополнения для платёжной системы и суммы\r\n  function calcRefill(string _paySystem, uint256 _value) public view returns(uint256) {\r\n    uint256 _totalComission;\r\n    _totalComission = refillPaySystemInfo[_paySystem].stat + (_value / 100 ) * refillPaySystemInfo[_paySystem].perc;\r\n\r\n    return _totalComission;\r\n  }\r\n\r\n  // рассчитать комиссию с перевода для платёжной системы и суммы\r\n  function calcTransfer(uint256 _value) public view returns(uint256) {\r\n    uint256 _totalComission;\r\n    _totalComission = transferInfo.stat + (_value / 100 ) * transferInfo.perc;\r\n\r\n    return _totalComission;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_paySystem\",\"type\":\"string\"}],\"name\":\"getWidthrawStatFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"calcTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_paySystem\",\"type\":\"string\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"calcWidthraw\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_paySystem\",\"type\":\"string\"},{\"name\":\"_stat\",\"type\":\"uint256\"},{\"name\":\"_perc\",\"type\":\"uint256\"}],\"name\":\"setRefillFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_paySystem\",\"type\":\"string\"},{\"name\":\"_stat\",\"type\":\"uint256\"},{\"name\":\"_perc\",\"type\":\"uint256\"}],\"name\":\"setWidthrawFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_paySystem\",\"type\":\"string\"}],\"name\":\"getWidthrawPercFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTransferPerc\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stat\",\"type\":\"uint256\"},{\"name\":\"_perc\",\"type\":\"uint256\"}],\"name\":\"setTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_paySystem\",\"type\":\"string\"}],\"name\":\"getRefillPercFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_paySystem\",\"type\":\"string\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"calcRefill\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_paySystem\",\"type\":\"string\"}],\"name\":\"getRefillStatFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTransferStat\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_paySystem\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"stat\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"perc\",\"type\":\"uint256\"}],\"name\":\"RefillCommisionIsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_paySystem\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"stat\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"perc\",\"type\":\"uint256\"}],\"name\":\"WidthrawCommisionIsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"stat\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"perc\",\"type\":\"uint256\"}],\"name\":\"TransferCommisionIsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"ComissionList","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e41471d6005770f8cf3af36cab05d7e64dbe4a4d50a11cef681ee03b3b16fd7e"}]}