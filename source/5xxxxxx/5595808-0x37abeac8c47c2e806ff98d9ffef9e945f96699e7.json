{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n// File: contracts/Crowdsale/CrowdsaleToken.sol\r\n\r\ninterface CrowdsaleToken {\r\n    function transfer(address destination, uint amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint);\r\n    function burn(uint amount) external;\r\n}\r\n\r\n// File: contracts/Token/CrowdsaleState.sol\r\n\r\ninterface CrowdsaleState {\r\n    function isCrowdsaleSuccessful() external view returns(bool);\r\n}\r\n\r\n// File: contracts/Token/HardCap.sol\r\n\r\ninterface HardCap {\r\n    function getHardCap() external pure returns(uint);\r\n}\r\n\r\n// File: contracts/Utils/Ownable.sol\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function isOwner() view public returns (bool) {\r\n        return msg.sender == owner;\r\n    }\r\n\r\n    modifier grantOwner {\r\n        require(isOwner());\r\n        _;\r\n    }\r\n}\r\n\r\n// File: contracts/Proxy/ERC20Allowance.sol\r\n\r\ninterface ERC20Allowance\r\n{\r\n    function transferFrom(address source, address destination, uint amount) external returns (bool);\r\n}\r\n\r\n// File: contracts/Proxy/CryptoPoliceProxy.sol\r\n\r\ncontract CryptoPoliceProxy is Ownable\r\n{\r\n    address public token;\r\n    address public crowdsale;\r\n    mapping(address => bool) public allowanceProxyAccess;\r\n\r\n    constructor(address _token) public {\r\n        token = _token;\r\n    }\r\n\r\n    function grantAllowanceProxyAccess(address allowanceOwner) grantOwner public {\r\n        allowanceProxyAccess[allowanceOwner] = true;\r\n    }\r\n\r\n    function denyAllowanceProxyAccess(address allowanceOwner) grantOwner public {\r\n        allowanceProxyAccess[allowanceOwner] = false;\r\n    }\r\n\r\n    function transferAllowance(address destination, uint amount) public returns (bool) {\r\n        require(allowanceProxyAccess[msg.sender], \"Sender must have allowance proxy access\");\r\n        return ERC20Allowance(token).transferFrom(owner, destination, amount);\r\n    }\r\n\r\n    function setCrowdsale(address _crowdsale) grantOwner public {\r\n        crowdsale = _crowdsale;\r\n    }\r\n\r\n    function transfer(address destination, uint amount) grantCrowdsale public returns (bool)\r\n    {\r\n        return CrowdsaleToken(token).transfer(destination, amount);\r\n    }\r\n\r\n    function balanceOf(address account) grantCrowdsale public view returns (uint)\r\n    {\r\n        if (account == crowdsale) {\r\n            return CrowdsaleToken(token).balanceOf(address(this));\r\n        } else {\r\n            return CrowdsaleToken(token).balanceOf(account);\r\n        }\r\n    }\r\n\r\n    function burn(uint amount) grantCrowdsale public\r\n    {\r\n        CrowdsaleToken(token).burn(amount);\r\n    }\r\n\r\n    modifier grantCrowdsale {\r\n        require(crowdsale != 0x0, \"Crowdsale not set\");\r\n        require(msg.sender == crowdsale, \"Sender must be crowdsale\");\r\n        _;\r\n    }\r\n\r\n    function getHardCap() public pure returns(uint)\r\n    {\r\n        return 510000000e18;\r\n    }\r\n\r\n    function isCrowdsaleSuccessful() public view returns(bool)\r\n    {\r\n        return CrowdsaleState(crowdsale).isCrowdsaleSuccessful();\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowanceProxyAccess\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_crowdsale\",\"type\":\"address\"}],\"name\":\"setCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"allowanceOwner\",\"type\":\"address\"}],\"name\":\"denyAllowanceProxyAccess\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"destination\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsale\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"allowanceOwner\",\"type\":\"address\"}],\"name\":\"grantAllowanceProxyAccess\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"destination\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getHardCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isCrowdsaleSuccessful\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"CryptoPoliceProxy","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000004bd3aac60b2e8893913b8398edda362e6b46dd98","Library":"","SwarmSource":"bzzr://1db2726cc5743aa514685016549d95dc5bb81667ab7d4a45179975c8967300c0"}]}