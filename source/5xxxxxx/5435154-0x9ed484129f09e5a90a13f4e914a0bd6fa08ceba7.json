{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.21;\r\n\r\ncontract ERC20Interface {\r\n    function totalSupply() public constant returns (uint256);\r\n    function balanceOf(address tokenOwner) public constant returns (uint256 balance);\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint256 remaining);\r\n    function transfer(address to, uint256 tokens) public returns (bool success);\r\n    function approve(address spender, uint256 tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint256 tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract P3D {\r\n    function withdraw() public;\r\n    function buy(address) public payable returns(uint256);\r\n}\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public ownerCandidate;\r\n\r\n    function Owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    function changeOwner(address _newOwner) public onlyOwner {\r\n        ownerCandidate = _newOwner;\r\n    }\r\n    \r\n    function acceptOwnership() public {\r\n        require(msg.sender == ownerCandidate);  \r\n        owner = ownerCandidate;\r\n    }\r\n    \r\n}\r\n\r\ncontract BoomerangLiquidity is Owned {\r\n    \r\n    modifier onlyOwner(){\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    P3D internal constant p3dContract = P3D(address(0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe));\r\n    address internal constant sk2xContract = address(0xAfd87E1E1eCe09D18f4834F64F63502718d1b3d4);\r\n    \r\n    function() payable public {\r\n        invest();\r\n    }\r\n    \r\n    function invest() public {\r\n        uint256 amountToSend = address(this).balance;\r\n        if(amountToSend > 1){\r\n            uint256 half = amountToSend / 2;\r\n            sk2xContract.call(half);\r\n            p3dContract.buy.value(half)(msg.sender);\r\n        }\r\n    }\r\n\r\n    function withdraw(address withdrawAddress) public {\r\n        P3D(withdrawAddress).withdraw();\r\n        invest();\r\n    }\r\n    \r\n    function withdraw() public {\r\n        p3dContract.withdraw();\r\n        invest();\r\n    }\r\n    \r\n    function withdrawAndSend() public {\r\n        p3dContract.withdraw();\r\n        invest();\r\n    }\r\n    \r\n    function donate() payable public {\r\n        sk2xContract.call(msg.value);\r\n    }\r\n    \r\n    function donate(address withdrawAddress) payable public {\r\n        p3dContract.buy.value(msg.value)(msg.sender);\r\n    }\r\n    \r\n    function donateP3D() payable public {\r\n        p3dContract.buy.value(msg.value)(msg.sender);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerCandidate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"donateP3D\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAndSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"invest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"BoomerangLiquidity","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b17ff462b29bdf91c1db02a82af0602dc04c5a1e0c9fb4246d832c2214bf4f68"}]}