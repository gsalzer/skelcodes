{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract CryptoflipCar {\r\nstring version = '1.1';\r\naddress ownerAddress = 0x3177Abbe93422c9525652b5d4e1101a248A99776;\r\naddress foundTeamAddress = 0x30A38029bEd78159B0342FF9722C3B56479328D8;\r\n\r\nstruct WhaleCard {\r\n   address ownerAddress;\r\n   uint256 curPrice;\r\n}\r\n\r\nstruct Car {\r\n    string name;\r\n    address[4] ownerAddresses;\r\n    uint256 curPrice;\r\n    uint256 companyId;\r\n    uint256 makeId;\r\n    bool is_released;\r\n    string adv_link;\r\n    string adv_text;\r\n    address adv_owner;\r\n    uint256 adv_price;\r\n}\r\n    \r\nstruct Company {\r\n    string name;\r\n    address ownerAddress;\r\n    uint256 curPrice;\r\n    bool is_released;\r\n    string adv_link;\r\n    string adv_text;\r\n    address adv_owner;\r\n    uint256 adv_price;\r\n}\r\n\r\nstruct Make {\r\n    string name;\r\n    address ownerAddress;\r\n    uint256 curPrice;\r\n    uint256 companyId;\r\n    bool is_released;\r\n    string adv_link;\r\n    string adv_text;\r\n    address adv_owner;\r\n    uint256 adv_price;\r\n}\r\n\r\nCompany[] companies;\r\nMake[] makes;\r\nCar[] cars;\r\nWhaleCard whalecard;\r\n\r\nmodifier onlyOwner() {\r\nrequire (msg.sender == ownerAddress);\r\n_;\r\n}\r\n\r\nbool companiesAreInitiated = false;\r\nbool makesAreInitiated = false;\r\nbool carsAreInitiated = false;\r\nbool whalecardAreInitiated = false;\r\nbool isPaused = false;\r\n\r\n/*\r\nWe use the following functions to pause and unpause the game.\r\n*/\r\nfunction pauseGame() public onlyOwner {\r\n  isPaused = true;\r\n}\r\n\r\nfunction playGame() public onlyOwner {\r\n  isPaused = false;\r\n}\r\n\r\nfunction GetIsPauded() public view returns(bool) {\r\n  return(isPaused);\r\n}\r\n\r\nfunction purchaseCarAdv(uint256 _cardId, string _text, string _link) public payable {\r\n  require(msg.value >= cars[_cardId].adv_price);\r\n  require(isPaused == false);\r\n  require(cars[_cardId].is_released == true);\r\n  uint256 totalpercent = 160;\r\n  uint256 commission5percent = div(mul(msg.value, 5), totalpercent);\r\n  foundTeamAddress.transfer(commission5percent);\r\n  uint256 commissionOwner = msg.value - commission5percent;\r\n  cars[_cardId].ownerAddresses[0].transfer(commission5percent);\r\n  commissionOwner = commissionOwner - commission5percent;\r\n  cars[_cardId].adv_owner.transfer(commissionOwner);\r\n  cars[_cardId].adv_owner = msg.sender;\r\n  cars[_cardId].adv_price = div(mul(cars[_cardId].adv_price, totalpercent), 100);\r\n  cars[_cardId].adv_text = _text;\r\n  cars[_cardId].adv_link = _link;  \r\n}\r\n\r\nfunction purchaseCompanyAdv(uint256 _cardId, string _text, string _link) public payable {\r\n  require(msg.value >= companies[_cardId].adv_price);\r\n  require(isPaused == false);\r\n  require(companies[_cardId].is_released == true);\r\n  uint256 totalpercent = 160;\r\n  uint256 commission5percent = div(mul(msg.value, 5), totalpercent);\r\n  foundTeamAddress.transfer(commission5percent);\r\n  uint256 commissionOwner = msg.value - commission5percent;\r\n  companies[_cardId].ownerAddress.transfer(commission5percent);\r\n  commissionOwner = commissionOwner - commission5percent;\r\n  companies[_cardId].adv_owner.transfer(commissionOwner);\r\n  companies[_cardId].adv_owner = msg.sender;\r\n  companies[_cardId].adv_price = div(mul(companies[_cardId].adv_price, totalpercent), 100);\r\n  companies[_cardId].adv_text = _text;\r\n  companies[_cardId].adv_link = _link;  \r\n}\r\n\r\nfunction purchaseMakeAdv(uint256 _cardId, string _text, string _link) public payable {\r\n  require(msg.value >= makes[_cardId].adv_price);\r\n  require(isPaused == false);\r\n  require(makes[_cardId].is_released == true);\r\n  uint256 totalpercent = 160;\r\n  uint256 commission5percent = div(mul(msg.value, 5), totalpercent);\r\n  foundTeamAddress.transfer(commission5percent);\r\n  uint256 commissionOwner = msg.value - commission5percent;\r\n  makes[_cardId].ownerAddress.transfer(commission5percent);\r\n  commissionOwner = commissionOwner - commission5percent;\r\n  makes[_cardId].adv_owner.transfer(commissionOwner);\r\n  makes[_cardId].adv_owner = msg.sender;\r\n  makes[_cardId].adv_price = div(mul(makes[_cardId].adv_price, totalpercent), 100);\r\n  makes[_cardId].adv_text = _text;\r\n  makes[_cardId].adv_link = _link;  \r\n}\r\n\r\nfunction purchaseWhaleCard() public payable {\r\n    require(msg.value >= whalecard.curPrice);\r\n    require(isPaused == false);\r\n    require(whalecardAreInitiated == true);\r\n    uint256 totalpercent = 155;\r\n    uint256 commission5percent = div(mul(msg.value, 5) , totalpercent);\r\n    foundTeamAddress.transfer(commission5percent);    \r\n    uint256 commissionOwner = msg.value - commission5percent;\r\n    whalecard.ownerAddress.transfer(commissionOwner);    \r\n    whalecard.ownerAddress = msg.sender;\r\n    whalecard.curPrice = div(mul(whalecard.curPrice, totalpercent), 100);\r\n}\r\n\r\nfunction purchaseCarCard(uint256 _cardId) public payable {\r\n  require(isPaused == false);   \r\n  require(msg.value >= cars[_cardId].curPrice);\r\n  require(cars[_cardId].is_released == true);\r\n  require(carsAreInitiated == true);\r\n  uint256 totalpercent = 150 + 5 + 2 + 2;\r\n  uint256 commission1percent = div(mul(msg.value, 1) , totalpercent);  \r\n  uint256 commissionOwner = msg.value;\r\n  if (whalecardAreInitiated == true){\r\n    totalpercent = totalpercent + 1;\r\n    whalecard.ownerAddress.transfer(commission1percent);\r\n    commissionOwner = commissionOwner - commission1percent;    \r\n  }\r\n  uint256 commission5percent = mul(commission1percent, 5);\r\n  foundTeamAddress.transfer(commission5percent);\r\n  commissionOwner = commissionOwner - commission5percent;\r\n  uint256 commission2percent = mul(commission1percent, 2);\r\n  uint256 companyId = cars[_cardId].companyId;\r\n  companies[companyId].ownerAddress.transfer(commission2percent);\r\n  commissionOwner = commissionOwner - commission2percent;\r\n  uint256 makeId = cars[_cardId].makeId;\r\n  makes[makeId].ownerAddress.transfer(commission2percent);\r\n  commissionOwner = commissionOwner - commission2percent;\r\n  if (cars[_cardId].ownerAddresses[3] != 0){\r\n      cars[_cardId].ownerAddresses[3].transfer(commission2percent);\r\n      commissionOwner = commissionOwner - commission2percent;\r\n      totalpercent = totalpercent + 2;\r\n  }\r\n  cars[_cardId].ownerAddresses[3] = cars[_cardId].ownerAddresses[2];\r\n  if (cars[_cardId].ownerAddresses[2] != 0){\r\n      cars[_cardId].ownerAddresses[2].transfer(commission2percent);\r\n      commissionOwner = commissionOwner - commission2percent;\r\n      totalpercent = totalpercent + 2;\r\n  }\r\n  cars[_cardId].ownerAddresses[2] = cars[_cardId].ownerAddresses[1];\r\n  if (cars[_cardId].ownerAddresses[1] != 0){\r\n      cars[_cardId].ownerAddresses[1].transfer(commission2percent);\r\n      commissionOwner = commissionOwner - commission2percent;\r\n      totalpercent = totalpercent + 2;\r\n  }\r\n  cars[_cardId].ownerAddresses[1] = cars[_cardId].ownerAddresses[0];\r\n  cars[_cardId].ownerAddresses[0].transfer(commissionOwner);\r\n  cars[_cardId].ownerAddresses[0] = msg.sender;\r\n  totalpercent = totalpercent + 2;\r\n  cars[_cardId].curPrice = div(mul(cars[_cardId].curPrice, totalpercent), 100);\r\n}\r\n\r\nfunction purchaseMakeCard(uint256 _cardId) public payable {\r\n  require(isPaused == false);   \r\n  require(msg.value >= makes[_cardId].curPrice);\r\n  require(makes[_cardId].is_released == true);\r\n  require(makesAreInitiated == true);\r\n  uint256 totalpercent = 150 + 5 + 2;\r\n  uint256 commission1percent = div(mul(msg.value, 1) , totalpercent);  \r\n  uint256 commissionOwner = msg.value;\r\n  if (whalecardAreInitiated == true){\r\n    totalpercent = totalpercent + 1;\r\n    whalecard.ownerAddress.transfer(commission1percent);\r\n    commissionOwner = commissionOwner - commission1percent;    \r\n  }\r\n  uint256 commission5percent = mul(commission1percent, 5);\r\n  foundTeamAddress.transfer(commission5percent);\r\n  commissionOwner = commissionOwner - commission5percent;\r\n  uint256 commission2percent = mul(commission1percent, 2);\r\n  uint256 companyId = makes[_cardId].companyId;\r\n  companies[companyId].ownerAddress.transfer(commission2percent);\r\n  commissionOwner = commissionOwner - commission2percent;\r\n  makes[_cardId].ownerAddress.transfer(commissionOwner);\r\n  makes[_cardId].ownerAddress = msg.sender;\r\n  makes[_cardId].curPrice = div(mul(makes[_cardId].curPrice, totalpercent), 100);\r\n}\r\n\r\nfunction purchaseCompanyCard(uint256 _cardId) public payable {\r\n  require(isPaused == false);   \r\n  require(msg.value >= companies[_cardId].curPrice);\r\n  require(companies[_cardId].is_released == true);\r\n  require(companiesAreInitiated == true);\r\n  uint256 totalpercent = 150 + 5;\r\n  uint256 commission1percent = div(mul(msg.value, 1) , totalpercent);  \r\n  uint256 commissionOwner = msg.value;\r\n  if (whalecardAreInitiated == true){\r\n    totalpercent = totalpercent + 1;\r\n    whalecard.ownerAddress.transfer(commission1percent);\r\n    commissionOwner = commissionOwner - commission1percent;    \r\n  }\r\n  uint256 commission5percent = mul(commission1percent, 5);\r\n  foundTeamAddress.transfer(commission5percent);\r\n  commissionOwner = commissionOwner - commission5percent;\r\n  companies[_cardId].ownerAddress.transfer(commissionOwner);\r\n  companies[_cardId].ownerAddress = msg.sender;\r\n  companies[_cardId].curPrice = div(mul(companies[_cardId].curPrice, totalpercent), 100);\r\n}\r\n// This function will return all of the details of our company\r\nfunction getCompanyCount() public view returns (uint) {\r\n  return companies.length;\r\n}\r\n\r\nfunction getMakeCount() public view returns (uint) {\r\n  return makes.length;\r\n}\r\n\r\nfunction getCarCount() public view returns (uint) {\r\n  return cars.length;\r\n}\r\n\r\nfunction getWhaleCard() public view returns (\r\naddress ownerAddress1,\r\nuint256 curPrice\r\n){\r\n    ownerAddress1 = whalecard.ownerAddress;\r\n    curPrice = whalecard.curPrice;    \r\n}\r\n\r\n// This function will return all of the details of our company\r\nfunction getCompany(uint256 _companyId) public view returns (\r\nstring name,\r\naddress ownerAddress1,\r\nuint256 curPrice,\r\nbool is_released,\r\nstring adv_text,\r\nstring adv_link,\r\nuint256 adv_price,\r\naddress adv_owner,\r\nuint id\r\n) {\r\n  Company storage _company = companies[_companyId];\r\n  name = _company.name;\r\n  ownerAddress1 = _company.ownerAddress;\r\n  curPrice = _company.curPrice;\r\n  is_released = _company.is_released;\r\n  id = _companyId;\r\n  adv_text = _company.adv_text;\r\n  adv_link = _company.adv_link;\r\n  adv_price = _company.adv_price;\r\n  adv_owner = _company.adv_owner;\r\n}\r\n\r\nfunction getMake(uint _makeId) public view returns (\r\nstring name,\r\naddress ownerAddress1,\r\nuint256 curPrice,\r\nuint256 companyId,\r\nbool is_released,\r\nstring adv_text,\r\nstring adv_link,\r\nuint256 adv_price,\r\naddress adv_owner,\r\nuint id\r\n) {\r\n  Make storage _make = makes[_makeId];\r\n  name = _make.name;\r\n  ownerAddress1 = _make.ownerAddress;\r\n  curPrice = _make.curPrice;\r\n  companyId = _make.companyId;\r\n  is_released = _make.is_released;\r\n  id = _makeId;\r\n  adv_text = _make.adv_text;\r\n  adv_link = _make.adv_link;\r\n  adv_price = _make.adv_price;\r\n  adv_owner = _make.adv_owner;\r\n}\r\n\r\nfunction getCar(uint _carId) public view returns (\r\nstring name,\r\naddress[4] ownerAddresses,\r\nuint256 curPrice,\r\nuint256 companyId,\r\nuint256 makeId,\r\nbool is_released,\r\nstring adv_text,\r\nstring adv_link,\r\nuint256 adv_price,\r\naddress adv_owner,\r\nuint id\r\n) {\r\n  Car storage _car = cars[_carId];\r\n  name = _car.name;\r\n  ownerAddresses = _car.ownerAddresses;\r\n  curPrice = _car.curPrice;\r\n  makeId = _car.makeId;\r\n  companyId = _car.companyId;\r\n  is_released = _car.is_released;\r\n  id = _carId;\r\n  adv_text = _car.adv_text;\r\n  adv_link = _car.adv_link;\r\n  adv_price = _car.adv_price;\r\n  adv_owner = _car.adv_owner;\r\n}\r\n\r\n\r\n/**\r\n@dev Multiplies two numbers, throws on overflow. => From the SafeMath library\r\n*/\r\nfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\nif (a == 0) {\r\nreturn 0;\r\n}\r\nuint256 c = a * b;\r\nreturn c;\r\n}\r\n\r\n/**\r\n@dev Integer division of two numbers, truncating the quotient. => From the SafeMath library\r\n*/\r\nfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n// assert(b > 0); // Solidity automatically throws when dividing by 0\r\nuint c = a / b;\r\n// assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\nreturn c;\r\n}\r\n\r\n\r\n\r\nfunction InitiateCompanies() public onlyOwner {\r\n  require(companiesAreInitiated == false);\r\n  addCompany(\"Aston Martin\", 0xe7eca2a94e9d59848f3c1e1ffaacd881d4c3a4f2, 592240896000000000 ,true);\r\n  addCompany(\"BMW\", 0x327bfb6286026bd1a017ba6693e0f47c8b98731b, 592240896000000000 ,true);\r\n  addCompany(\"Ferrari\", 0xef764bac8a438e7e498c2e5fccf0f174c3e3f8db, 379641600000000000 ,true);\r\n  addCompany(\"Honda\", 0xef764bac8a438e7e498c2e5fccf0f174c3e3f8db, 243360000000000000 ,true);\r\n  companies[0].adv_text=\"BurnUP!!!\";\r\n  companies[0].adv_link=\"https://burnup.io/?r=0x049bEd1598655b64F09E4835084fBc502ab1aD86\";\r\n  companies[0].adv_owner=0x049bed1598655b64f09e4835084fbc502ab1ad86;\r\n  companies[0].adv_price=8000000000000000;\r\n  companiesAreInitiated = true;\r\n}\r\n\r\nfunction addCompany(string name, address address1, uint256 price, bool is_released) public onlyOwner {\r\n  uint companyId = companies.length++;\r\n  companies[companyId].name = name;\r\n  companies[companyId].curPrice   = price;\r\n  companies[companyId].ownerAddress = address1;\r\n  companies[companyId].is_released   = is_released;\r\n  companies[companyId].adv_text = 'Your Ad here';\r\n  companies[companyId].adv_link = 'http://cryptoflipcars.site/';\r\n  companies[companyId].adv_price   = 5000000000000000;\r\n  companies[companyId].adv_owner = address1;\r\n}\r\n\r\nfunction setReleaseCompany(uint256 _companyId, bool is_released) public onlyOwner {\r\n  companies[_companyId].is_released = is_released;\r\n}\r\n\r\nfunction InitiateMakes() public onlyOwner {\r\n  require(makesAreInitiated == false);\r\n  addMake(\"DB5\", 0x7396176ac6c1ef05d57180e7733b9188b3571d9a, 98465804768000000 ,0, true);\r\n  addMake(\"DB6\", 0x3130259deedb3052e24fad9d5e1f490cb8cccaa0, 62320129600000000 ,0, true);\r\n  addMake(\"DB9\", 0xa2381223639181689cd6c46d38a1a4884bb6d83c, 39443120000000000 ,0, true);\r\n  addMake(\"One-77\", 0xa2381223639181689cd6c46d38a1a4884bb6d83c, 39443120000000000 ,0, true);\r\n  addMake(\"BMW 507\", 0x049bed1598655b64f09e4835084fbc502ab1ad86, 98465804768000000 ,1, false);\r\n  addMake(\"BMW Z8\", 0xd17e2bfe196470a9fefb567e8f5992214eb42f24, 98465804768000000 ,1, false);\r\n  addMake(\"Fererrari LaFerrari\", 0x7396176ac6c1ef05d57180e7733b9188b3571d9a, 24964000000000000 ,2, true);\r\n  addMake(\"Ferrari California\", 0xa2381223639181689cd6c46d38a1a4884bb6d83c, 15800000000000000 ,2, true);\r\n  addMake(\"Honda Accord\", 0x7396176ac6c1ef05d57180e7733b9188b3571d9a, 24964000000000000 ,3, true);\r\n  addMake(\"Honda Civic\", 0xa2381223639181689cd6c46d38a1a4884bb6d83c, 15800000000000000 ,3, false);\r\n  makesAreInitiated = true;\r\n}\r\n\r\nfunction addMake(string name, address address1, uint256 price, uint256 companyId,  bool is_released) public onlyOwner {\r\n  uint makeId = makes.length++;\r\n  makes[makeId].name = name;\r\n  makes[makeId].curPrice   = price;\r\n  makes[makeId].ownerAddress = address1;\r\n  makes[makeId].companyId   = companyId;\r\n  makes[makeId].is_released   = is_released;\r\n  makes[makeId].adv_text = 'Your Ad here';\r\n  makes[makeId].adv_link = 'http://cryptoflipcars.site/';\r\n  makes[makeId].adv_price   = 5000000000000000;\r\n  makes[makeId].adv_owner = address1;\r\n}\r\n\r\n\r\n\r\nfunction InitiateCars() public onlyOwner {\r\n  require(carsAreInitiated == false);\r\n  addCar(\"1964 DB5 James Bond Edition\", 0x5c035bb4cb7dacbfee076a5e61aa39a10da2e956, 8100000000000000 ,0, 0, true);\r\n  addCar(\"Blue 1965\" , 0x71f35825a3b1528859dfa1a64b24242bc0d12990, 8100000000000000 ,0, 0, true);\r\n  addCar(\"1964 DB5 James Bond Edition\", 0x71f35825a3b1528859dfa1a64b24242bc0d12990, 8100000000000000 ,0, 0, true);\r\n  addCar(\"Blue 1965\" , 0x71f35825a3b1528859dfa1a64b24242bc0d12990, 8100000000000000 ,0, 0, true);\r\n  addCar(\"Z8 2003\", 0x3177abbe93422c9525652b5d4e1101a248a99776, 10000000000000000 ,1, 5, true);\r\n  addCar(\"DB6 Chocolate\", 0x3177abbe93422c9525652b5d4e1101a248a99776, 10000000000000000 ,0, 1, true);\r\n  addCar(\"507 Black\", 0x3177abbe93422c9525652b5d4e1101a248a99776, 10000000000000000 ,1, 4, true);\r\n  addCar(\"507 Silver\", 0x62d5be95c330b512b35922e347319afd708da981, 16200000000000000 ,1, 4, true);\r\n  addCar(\"Z8 Black with Red Interior\", 0x3177abbe93422c9525652b5d4e1101a248a99776, 10000000000000000 ,1, 5, true);\r\n  addCar(\"Gordon Ramsey's Grey LaFerrari\", 0x3177abbe93422c9525652b5d4e1101a248a99776, 10000000000000000 ,2, 6, true);\r\n  carsAreInitiated = true;\r\n}\r\n\r\nfunction InitiateWhaleCard() public onlyOwner {\r\n    require(whalecardAreInitiated == false);\r\n    whalecard.ownerAddress = ownerAddress;\r\n    whalecard.curPrice = 100000000000000000;\r\n    whalecardAreInitiated = true;\r\n}\r\n\r\nfunction addCar(string name, address address1, uint256 price, uint256 companyId, uint256 makeId,  bool is_released) public onlyOwner {\r\n  uint carId = cars.length++;\r\n  cars[carId].name = name;\r\n  cars[carId].curPrice   = price;\r\n  cars[carId].ownerAddresses[0] = address1;\r\n  cars[carId].companyId   = companyId;\r\n  cars[carId].makeId   = makeId;\r\n  cars[carId].is_released   = is_released;\r\n  cars[carId].adv_text = 'Your Ad here';\r\n  cars[carId].adv_link = 'http://cryptoflipcars.site/';\r\n  cars[carId].adv_price   = 5000000000000000;\r\n  cars[carId].adv_owner = address1;\r\n}\r\n\r\nfunction setReleaseCar(uint256 _carId, bool is_released) public onlyOwner {\r\n  cars[_carId].is_released = is_released;\r\n}\r\n\r\nfunction setReleaseMake(uint256 _makeId, bool is_released) public onlyOwner {\r\n  makes[_makeId].is_released = is_released;\r\n}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_cardId\",\"type\":\"uint256\"}],\"name\":\"purchaseCompanyCard\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cardId\",\"type\":\"uint256\"}],\"name\":\"purchaseCarCard\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"address1\",\"type\":\"address\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"companyId\",\"type\":\"uint256\"},{\"name\":\"is_released\",\"type\":\"bool\"}],\"name\":\"addMake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCarCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"address1\",\"type\":\"address\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"is_released\",\"type\":\"bool\"}],\"name\":\"addCompany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"InitiateWhaleCard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pauseGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"InitiateCars\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cardId\",\"type\":\"uint256\"}],\"name\":\"purchaseMakeCard\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_companyId\",\"type\":\"uint256\"}],\"name\":\"getCompany\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"ownerAddress1\",\"type\":\"address\"},{\"name\":\"curPrice\",\"type\":\"uint256\"},{\"name\":\"is_released\",\"type\":\"bool\"},{\"name\":\"adv_text\",\"type\":\"string\"},{\"name\":\"adv_link\",\"type\":\"string\"},{\"name\":\"adv_price\",\"type\":\"uint256\"},{\"name\":\"adv_owner\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_carId\",\"type\":\"uint256\"}],\"name\":\"getCar\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"ownerAddresses\",\"type\":\"address[4]\"},{\"name\":\"curPrice\",\"type\":\"uint256\"},{\"name\":\"companyId\",\"type\":\"uint256\"},{\"name\":\"makeId\",\"type\":\"uint256\"},{\"name\":\"is_released\",\"type\":\"bool\"},{\"name\":\"adv_text\",\"type\":\"string\"},{\"name\":\"adv_link\",\"type\":\"string\"},{\"name\":\"adv_price\",\"type\":\"uint256\"},{\"name\":\"adv_owner\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"InitiateCompanies\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWhaleCard\",\"outputs\":[{\"name\":\"ownerAddress1\",\"type\":\"address\"},{\"name\":\"curPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cardId\",\"type\":\"uint256\"},{\"name\":\"_text\",\"type\":\"string\"},{\"name\":\"_link\",\"type\":\"string\"}],\"name\":\"purchaseCarAdv\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_makeId\",\"type\":\"uint256\"}],\"name\":\"getMake\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"ownerAddress1\",\"type\":\"address\"},{\"name\":\"curPrice\",\"type\":\"uint256\"},{\"name\":\"companyId\",\"type\":\"uint256\"},{\"name\":\"is_released\",\"type\":\"bool\"},{\"name\":\"adv_text\",\"type\":\"string\"},{\"name\":\"adv_link\",\"type\":\"string\"},{\"name\":\"adv_price\",\"type\":\"uint256\"},{\"name\":\"adv_owner\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_makeId\",\"type\":\"uint256\"},{\"name\":\"is_released\",\"type\":\"bool\"}],\"name\":\"setReleaseMake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cardId\",\"type\":\"uint256\"},{\"name\":\"_text\",\"type\":\"string\"},{\"name\":\"_link\",\"type\":\"string\"}],\"name\":\"purchaseMakeAdv\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetIsPauded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_carId\",\"type\":\"uint256\"},{\"name\":\"is_released\",\"type\":\"bool\"}],\"name\":\"setReleaseCar\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"playGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_companyId\",\"type\":\"uint256\"},{\"name\":\"is_released\",\"type\":\"bool\"}],\"name\":\"setReleaseCompany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cardId\",\"type\":\"uint256\"},{\"name\":\"_text\",\"type\":\"string\"},{\"name\":\"_link\",\"type\":\"string\"}],\"name\":\"purchaseCompanyAdv\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMakeCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"address1\",\"type\":\"address\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"companyId\",\"type\":\"uint256\"},{\"name\":\"makeId\",\"type\":\"uint256\"},{\"name\":\"is_released\",\"type\":\"bool\"}],\"name\":\"addCar\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCompanyCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"InitiateMakes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"purchaseWhaleCard\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"CryptoflipCar","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1f08ff7c9b369c303ddf0a993cf2cf6123bdf47a19f8ce419a762ca0e80355f3"}]}