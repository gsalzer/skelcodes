{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n/**\r\n * @title ERC721 interface\r\n * @dev see https://github.com/ethereum/eips/issues/721\r\n */\r\n\r\n\r\ncontract AccessControl {\r\n    address public creatorAddress;\r\n    uint16 public totalSeraphims = 0;\r\n    mapping (address => bool) public seraphims;\r\n\r\n    bool public isMaintenanceMode = true;\r\n \r\n    modifier onlyCREATOR() {\r\n        require(msg.sender == creatorAddress);\r\n        _;\r\n    }\r\n\r\n    modifier onlySERAPHIM() {\r\n        require(seraphims[msg.sender] == true);\r\n        _;\r\n    }\r\n    \r\n    modifier isContractActive {\r\n        require(!isMaintenanceMode);\r\n        _;\r\n    }\r\n    \r\n    // Constructor\r\n    function AccessControl() public {\r\n        creatorAddress = msg.sender;\r\n    }\r\n    \r\n\r\n    function addSERAPHIM(address _newSeraphim) onlyCREATOR public {\r\n        if (seraphims[_newSeraphim] == false) {\r\n            seraphims[_newSeraphim] = true;\r\n            totalSeraphims += 1;\r\n        }\r\n    }\r\n    \r\n    function removeSERAPHIM(address _oldSeraphim) onlyCREATOR public {\r\n        if (seraphims[_oldSeraphim] == true) {\r\n            seraphims[_oldSeraphim] = false;\r\n            totalSeraphims -= 1;\r\n        }\r\n    }\r\n\r\n    function updateMaintenanceMode(bool _isMaintaining) onlyCREATOR public {\r\n        isMaintenanceMode = _isMaintaining;\r\n    }\r\n\r\n  \r\n} \r\n\r\ncontract SafeMath {\r\n    function safeAdd(uint x, uint y) pure internal returns(uint) {\r\n      uint z = x + y;\r\n      assert((z >= x) && (z >= y));\r\n      return z;\r\n    }\r\n\r\n    function safeSubtract(uint x, uint y) pure internal returns(uint) {\r\n      assert(x >= y);\r\n      uint z = x - y;\r\n      return z;\r\n    }\r\n\r\n    function safeMult(uint x, uint y) pure internal returns(uint) {\r\n      uint z = x * y;\r\n      assert((x == 0)||(z/x == y));\r\n      return z;\r\n    }\r\n\r\n    function getRandomNumber(uint16 maxRandom, uint8 min, address privateAddress) constant public returns(uint8) {\r\n        uint256 genNum = uint256(block.blockhash(block.number-1)) + uint256(privateAddress);\r\n        return uint8(genNum % (maxRandom - min + 1)+min);\r\n    }\r\n}\r\n\r\ncontract Enums {\r\n    enum ResultCode {\r\n        SUCCESS,\r\n        ERROR_CLASS_NOT_FOUND,\r\n        ERROR_LOW_BALANCE,\r\n        ERROR_SEND_FAIL,\r\n        ERROR_NOT_OWNER,\r\n        ERROR_NOT_ENOUGH_MONEY,\r\n        ERROR_INVALID_AMOUNT\r\n    }\r\n\r\n    enum AngelAura { \r\n        Blue, \r\n        Yellow, \r\n        Purple, \r\n        Orange, \r\n        Red, \r\n        Green \r\n    }\r\n}\r\n\r\ncontract IAccessoryData is AccessControl, Enums {\r\n    uint8 public totalAccessorySeries;    \r\n    uint32 public totalAccessories;\r\n    \r\n \r\n    /*** FUNCTIONS ***/\r\n    //*** Write Access ***//\r\n    function createAccessorySeries(uint8 _AccessorySeriesId, uint32 _maxTotal, uint _price) onlyCREATOR public returns(uint8) ;\r\n\tfunction setAccessory(uint8 _AccessorySeriesId, address _owner) onlySERAPHIM external returns(uint64);\r\n   function addAccessoryIdMapping(address _owner, uint64 _accessoryId) private;\r\n\tfunction transferAccessory(address _from, address _to, uint64 __accessoryId) onlySERAPHIM public returns(ResultCode);\r\n    function ownerAccessoryTransfer (address _to, uint64 __accessoryId)  public;\r\n    function updateAccessoryLock (uint64 _accessoryId, bool newValue) public;\r\n    function removeCreator() onlyCREATOR external;\r\n    \r\n    //*** Read Access ***//\r\n    function getAccessorySeries(uint8 _accessorySeriesId) constant public returns(uint8 accessorySeriesId, uint32 currentTotal, uint32 maxTotal, uint price) ;\r\n\tfunction getAccessory(uint _accessoryId) constant public returns(uint accessoryID, uint8 AccessorySeriesID, address owner);\r\n\tfunction getOwnerAccessoryCount(address _owner) constant public returns(uint);\r\n\tfunction getAccessoryByIndex(address _owner, uint _index) constant public returns(uint) ;\r\n    function getTotalAccessorySeries() constant public returns (uint8) ;\r\n    function getTotalAccessories() constant public returns (uint);\r\n    function getAccessoryLockStatus(uint64 _acessoryId) constant public returns (bool);\r\n}\r\n\r\n\r\n \r\ncontract AccessoryWrapper721 {\r\n  //Events\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);\r\n  event MarketplaceTransfer(address indexed _from, address indexed _to, uint256 _tokenId, address _marketplace);\r\n  event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);\r\n\r\n\r\n//Storage\r\n    address public ownerAddress;\r\n    uint16 public totalMarketplaces = 0;\r\n    mapping (address => bool) public marketplaces;\r\n    address public accessoryDataContract = 0x466c44812835f57b736ef9F63582b8a6693A14D0;\r\n    \r\n        struct Accessory {\r\n        uint32 accessoryId;\r\n        uint8 accessorySeriesId;\r\n        address owner;\r\n        bool ownerLock;\r\n    }\r\n\r\n      // Constructor\r\n    function AcceessoryWrapper721() public {\r\n        ownerAddress = msg.sender;\r\n    }\r\n    \r\n\r\n    modifier onlyOWNER() {\r\n        require(msg.sender == ownerAddress);\r\n        _;\r\n    }\r\n\r\n function addMARKETPLACE(address _newMarketplace) onlyOWNER public {\r\n        if (marketplaces[_newMarketplace] == false) {\r\n           marketplaces[_newMarketplace] = true;\r\n           totalMarketplaces += 1;\r\n        }\r\n    }\r\n    \r\n     function removeMARKETPLACE(address _oldMarketplace) onlyOWNER public {\r\n        if (marketplaces[_oldMarketplace] == true) {\r\n            marketplaces[_oldMarketplace] = false;\r\n            totalMarketplaces -= 1;\r\n        }\r\n    }\r\n    \r\n    function SetAccessoryDataContact(address _accessoryDataContract) onlyOWNER external {\r\n       accessoryDataContract = _accessoryDataContract;\r\n    }\r\n\r\n  function balanceOf(address _owner) public view returns (uint256 _balance) {\r\n           IAccessoryData accessoryData = IAccessoryData(accessoryDataContract);\r\n           return accessoryData.getOwnerAccessoryCount(_owner);\r\n  }\r\n  \r\n  function ownerOf(uint256 _tokenId) public view returns (address _owner) {\r\n            IAccessoryData accessoryData = IAccessoryData(accessoryDataContract);\r\n            address owner;\r\n            (,,owner) = accessoryData.getAccessory(_tokenId);\r\n            return owner;\r\n  }\r\n  \r\n  function getTokenByIndex (address _owner, uint index) constant public returns (uint64) {\r\n      //returns the accessory number of the index-th item in that addresses accessory list. \r\n        IAccessoryData accessoryData = IAccessoryData(accessoryDataContract);\r\n        return uint64(accessoryData.getAccessoryByIndex(_owner, index));\r\n        \r\n  }\r\n\t\r\n\tfunction getAccessory(uint _accessoryId) constant public returns(uint accessoryID, uint8 AccessorySeriesID, address owner) {\r\n       \r\n        IAccessoryData accessoryData = IAccessoryData(accessoryDataContract);\r\n        (accessoryID, AccessorySeriesID, owner) = accessoryData.getAccessory(_accessoryId);\r\n       \r\n    }\r\n    function getTokenLockStatus(uint64 _tokenId) constant public returns (bool) {\r\n       IAccessoryData accessoryData = IAccessoryData(accessoryDataContract);\r\n       return accessoryData.getAccessoryLockStatus(_tokenId);\r\n       \r\n    }\r\n    \r\n   \r\n\r\n \r\n  function transfer(address _to, uint256 _tokenId) public {\r\n      \r\n       IAccessoryData accessoryData = IAccessoryData(accessoryDataContract);\r\n       address owner;\r\n        (,, owner) = accessoryData.getAccessory(_tokenId);\r\n      \r\n       if ((marketplaces[msg.sender] == true)  || (owner == msg.sender))\r\n       {\r\n         accessoryData.transferAccessory(owner,_to, uint64 (_tokenId)) ;\r\n         Transfer(owner, _to, _tokenId);\r\n         MarketplaceTransfer(owner,  _to, _tokenId, msg.sender);\r\n           \r\n       }\r\n      else {revert();}\r\n  }\r\n  function approve(address _to, uint256 _tokenId) public\r\n  {\r\n      //this function should never be called - instead, use updateAccessoryLock from the accessoryData contract;\r\n      revert();\r\n      \r\n  }\r\n  function takeOwnership(uint256 _tokenId) public\r\n  { \r\n     //this function should never be called - instead use transfer\r\n     revert();\r\n  }\r\n    function kill() onlyOWNER external {\r\n        selfdestruct(ownerAddress);\r\n    }\r\n    }","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_newMarketplace\",\"type\":\"address\"}],\"name\":\"addMARKETPLACE\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_accessoryId\",\"type\":\"uint256\"}],\"name\":\"getAccessory\",\"outputs\":[{\"name\":\"accessoryID\",\"type\":\"uint256\"},{\"name\":\"AccessorySeriesID\",\"type\":\"uint8\"},{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"AcceessoryWrapper721\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_accessoryDataContract\",\"type\":\"address\"}],\"name\":\"SetAccessoryDataContact\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketplaces\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMarketplaces\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint64\"}],\"name\":\"getTokenLockStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oldMarketplace\",\"type\":\"address\"}],\"name\":\"removeMARKETPLACE\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"accessoryDataContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"takeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_marketplace\",\"type\":\"address\"}],\"name\":\"MarketplaceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"AccessoryWrapper721","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c908a25a41302d03cedfcf83aae789d11b1fc53bc524ad22e3f4701b006fa827"}]}