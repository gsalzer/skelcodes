{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n//**양종만**정병두**//180419~\r\n/*모든 행위는 1wei단위로 되기때문에 주의해야됨\r\nex :\r\n총 발행 토큰 111\r\n소수점18자리로 했을때 토탈 토큰 111 000 000 000 000 000 000(wei단위임)\r\n1토큰 전송\r\n남은 토큰 110999999999999999999\r\n토큰Value * 10 ** uint256(소수점자리수)로 미리 계산하면 1토큰 전송시 110 000 000 000 000 000 000\r\n*/\r\n//기본 소수점 자리 18 / 변경되면 payable , transfer에서 달라질수 있으니 주의\r\n//들어오는 이더리움 단위는 1ETH=1000000000000000000Wei 이더 소수점 단위18이기 때문에 소수점 단위가18이 아니면 payable, transfer 함수 주의 해야됨\r\n//** public이 들어간 변수,함수는 일반 사용자들도 볼수있음**//\r\ncontract TokenERC20\r\n{\r\n  //토큰 이름\r\n  string public name;\r\n  //토큰 심볼(단위)\r\n  string public symbol;\r\n  //토큰 단위 소수점 표현\r\n  uint8 public decimals;\r\n  //wei 단위를 편하게 하기 위한 변수\r\n  uint256 _decimals;\r\n  //이더*2=토큰\r\n  uint256 public tokenReward;\r\n  //총 토큰 발행 갯수\r\n  uint256 public totalSupply;\r\n  //토큰 admin\r\n  address public owner;\r\n  //토큰 상태 (text로 보여주기 위한것) ex :  private ,  public , test , demo\r\n  string public status;\r\n  //이더 입금 제한 타임스탬프 (시작시간) // http://www.4webhelp.net/us/timestamp.php 에서 확인가능\r\n  uint256 public start_token_time;\r\n  //이더 입금 제한 타임스탬프 (종료시간)\r\n  uint256 public stop_token_time;\r\n  ///////GMB 토큰은 3자끼리 토큰 이동을 미지원 할것이기 때문에 추가함!!\r\n  uint256 public transferLock;\r\n\r\n  //owner인지 검사하는 부분\r\n  modifier isOwner\r\n  {\r\n    assert(owner == msg.sender);\r\n    _;\r\n  }\r\n\r\n  //외부에서 호출할수 있게 하는것(MIST UI로 확인가능)\r\n  mapping (address => uint256) public balanceOf;\r\n\r\n  //이벤트 기록을 위한것\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event token_Burn(address indexed from, uint256 value);\r\n  event token_Add(address indexed from, uint256 value);\r\n  event Deposit(address _sender, uint amount ,string status);\r\n  event change_Owner(string newOwner);\r\n  event change_Status(string newStatus);\r\n  event change_Name(string newName);\r\n  event change_Symbol(string newSymbol);\r\n  event change_TokenReward(uint256 newTokenReward);\r\n  event change_Time_Stamp(uint256 change_start_time_stamp,uint256 change_stop_time_stamp);\r\n\r\n  //토큰 초기화 함수\r\n  function TokenERC20() public\r\n  {\r\n    //토큰 이름 초기화\r\n    name = \"GMB\";\r\n    //토큰 심볼(단위) 초기화\r\n    symbol = \"MAS\";\r\n    //소수점 자리 초기화\r\n    decimals = 18;\r\n    //wei 단위를 편하게 하기 위한 변수\r\n    _decimals = 10 ** uint256(decimals);\r\n    //ETH , 토큰 환산비율\r\n    tokenReward = 0;\r\n    //토큰 발행 갯수 초기화\r\n    totalSupply =  _decimals * 10000000000; //1백억개\r\n    //토큰 상태 초기화\r\n    status = \"Private\";\r\n    //타임스탬프 초기화 (시작시간) 2018.1.1 00:00:00 (Gmt+9)\r\n    start_token_time = 1514732400;\r\n    //타임스탬프 초기화 (종료시간)  2018.12.31 23:59:59 (Gmt+9)\r\n    stop_token_time = 1546268399;\r\n    //토큰 관리자 지갑 주소 초기화\r\n    owner = msg.sender;\r\n    //발행된 토큰갯수를 토큰생성지갑에 입력\r\n    balanceOf[msg.sender] = totalSupply;\r\n    ///////GMB 토큰은 제3자끼리 토큰 이동을 미지원 할것이기 때문에 추가함!!\r\n    transferLock = 1; //0일때만 transfer 가능\r\n  }\r\n  //*이더 받으면 토큰 전송*//\r\n  function() payable public\r\n  {\r\n    //환산값 변수\r\n    uint256 cal;\r\n    //이더 입금 제한 타임스탬프 (시작시간)\r\n    require(start_token_time < block.timestamp);\r\n    //이더 입금 제한 타임스탬프 (종료시간)\r\n    require(stop_token_time > block.timestamp);\r\n    //ETH보낸사람,ETH코인수 이벤트에 기록\r\n    emit Deposit(msg.sender, msg.value, status);\r\n    //토큰=이더*2\r\n    cal = (msg.value)*tokenReward;\r\n    //토큰 지갑에서 남아있는 토큰수가 보내려는 토큰보다 많은지 검사\r\n    require(balanceOf[owner] >= cal);\r\n    //오버플로어 검사\r\n    require(balanceOf[msg.sender] + cal >= balanceOf[msg.sender]);\r\n    //토큰지갑에서 차감\r\n    balanceOf[owner] -= cal;\r\n    //받는 사람지갑에 토큰 저장\r\n    balanceOf[msg.sender] += cal;\r\n    //이벤트 기록을 남김\r\n    emit Transfer(owner, msg.sender, cal);\r\n  }\r\n  //*토큰 전송*// ex : 1토큰 추가시 1 000 000 000 000 000 000(Mist UI 관리자 페이지에서도 동일, Mist UI 일반 사용자 보내기에서는 1)\r\n  function transfer(address _to, uint256 _value) public\r\n  {\r\n    ///////GMB 토큰은 제3자끼리 토큰 이동을 미지원 할것이기 때문에 추가함!!\r\n    require(transferLock == 0); //0일때만 transfer 가능\r\n    //토큰 지갑에서 남아있는 토큰수가 보내려는 토큰보다 많은지 검사\r\n    require(balanceOf[msg.sender] >= _value);\r\n    //오버플로어 검사\r\n    require((balanceOf[_to] + _value) >= balanceOf[_to]);\r\n    //토큰지갑에서 차감\r\n    balanceOf[msg.sender] -= _value;\r\n    //받는 사람지갑에 토큰 저장\r\n    balanceOf[_to] += _value;\r\n    //이벤트 기록을 남김\r\n    emit Transfer(msg.sender, _to, _value);\r\n  }\r\n  //*토큰 전송 geth에서 편하게 보내기위해 __decimals을 붙여줌*// ex : 1토큰 전송시 1\r\n  function admin_transfer(address _to, uint256 _value) public isOwner\r\n  {\r\n    //tokenValue = _value;\r\n    //토큰 지갑에서 남아있는 토큰수가 보내려는 토큰보다 많은지 검사\r\n    require(balanceOf[msg.sender] >= _value*_decimals);\r\n    //오버플로어 검사\r\n    require(balanceOf[_to] + (_value *_decimals)>= balanceOf[_to]);\r\n    //토큰지갑에서 차감\r\n    balanceOf[msg.sender] -= _value*_decimals;\r\n    //받는 사람지갑에 토큰 저장\r\n    balanceOf[_to] += _value*_decimals;\r\n    //이벤트 기록을 남김\r\n    emit Transfer(msg.sender, _to, _value*_decimals);\r\n  }\r\n  //*지갑에서 지갑으로 토큰 이동* 회수용// ex : 1토큰 회수시 1\r\n  function admin_from_To_transfer(address _from, address _to, uint256 _value) public isOwner\r\n  {\r\n    //tokenValue = _value;\r\n    //토큰 지갑에서 남아있는 토큰수가 보내려는 토큰보다 많은지 검사\r\n    require(balanceOf[_from] >= _value*_decimals);\r\n    //오버플로어 검사\r\n    require(balanceOf[_to] + (_value *_decimals)>= balanceOf[_to]);\r\n    //토큰지갑에서 차감\r\n    balanceOf[_from] -= _value*_decimals;\r\n    //받는 사람지갑에 토큰 저장\r\n    balanceOf[_to] += _value*_decimals;\r\n    //이벤트 기록을 남김\r\n    emit Transfer(_from, _to, _value*_decimals);\r\n  }\r\n  //*총 발행 토큰 소각*// ex : 1토큰 소각시 1\r\n  function admin_token_burn(uint256 _value) public isOwner returns (bool success)\r\n  {\r\n    //남아있는 토큰수보다 소각하려는 토큰수가 많은지 검사\r\n    require(balanceOf[msg.sender] >= _value*_decimals);\r\n    //토큰 지갑에서 차감\r\n    balanceOf[msg.sender] -= _value*_decimals;\r\n    //총 발행 토큰에서 차감\r\n    totalSupply -= _value*_decimals;\r\n    //이벤트 기록을 남김\r\n    emit token_Burn(msg.sender, _value*_decimals);\r\n    return true;\r\n  }\r\n  //*총 발행 토큰 추가*// ex : 1토큰 추가시 1\r\n  function admin_token_add(uint256 _value) public  isOwner returns (bool success)\r\n  {\r\n    require(balanceOf[msg.sender] >= _value*_decimals);\r\n    //토큰 지갑에서 더함\r\n    balanceOf[msg.sender] += _value*_decimals;\r\n    //총 발행 토큰에서 더함\r\n    totalSupply += _value*_decimals;\r\n    //이벤트 기록을 남김\r\n    emit token_Add(msg.sender, _value*_decimals);\r\n    return true;\r\n  }\r\n  //*이름 변경*//  ***토큰으로 등록된 후에는 이더스캔에서 반영이 안됨(컨트랙트 등록 상태에서는 괜찮음)***\r\n  function change_name(string _tokenName) public isOwner returns (bool success)\r\n  {\r\n    //name 변경해준다\r\n    name = _tokenName;\r\n    //이벤트 기록을 남김\r\n    emit change_Name(name);\r\n    return true;\r\n  }\r\n  //*심볼 변경*//  ***토큰으로 등록된 후에는 이더스캔에서 반영이 안됨(컨트랙트 등록 상태에서는 괜찮음)***\r\n  function change_symbol(string _symbol) public isOwner returns (bool success)\r\n  {\r\n    //symbol 변경해준다\r\n    symbol = _symbol;\r\n    //이벤트 기록을 남김\r\n    emit change_Symbol(symbol);\r\n    return true;\r\n  }\r\n  //*status변경*//\r\n  function change_status(string _status) public isOwner returns (bool success)\r\n  {\r\n    //status 변경해준다\r\n    status = _status;\r\n    //이벤트 기록을 남김\r\n    emit change_Status(status);\r\n    return true;\r\n  }\r\n  //*배율 변경*//\r\n  function change_tokenReward(uint256 _tokenReward) public isOwner returns (bool success)\r\n  {\r\n    //tokenReward 변경해준다\r\n    tokenReward = _tokenReward;\r\n    //이벤트 기록을 남김\r\n    emit change_TokenReward(tokenReward);\r\n    return true;\r\n  }\r\n  //*ETH출금*//\r\n  function ETH_withdraw(uint256 amount) public isOwner returns(bool)\r\n  {\r\n    //소수점까지 출금해야되기 때문에 wei단위로 출금 //1ETH 출금시 1 000 000 000 000 000 000 입력 해야됨\r\n    owner.transfer(amount);\r\n    //출금하는건 일반 사용자가 알아야될 필요가 없기때문에 emit 이벤트를 실행하지 않음\r\n    return true;\r\n  }\r\n  //*time_stamp변경*//\r\n  function change_time_stamp(uint256 _start_token_time,uint256 _stop_token_time) public isOwner returns (bool success)\r\n  {\r\n    //start_token_time을 변경해준다\r\n    start_token_time = _start_token_time;\r\n    //stop_token_time을 변경해준다\r\n    stop_token_time = _stop_token_time;\r\n\r\n    //이벤트 기록을 남김\r\n    emit change_Time_Stamp(start_token_time,stop_token_time);\r\n    return true;\r\n  }\r\n  //*owner변경*//\r\n  function change_owner(address to_owner) public isOwner returns (bool success)\r\n  {\r\n    //owner를 변경해준다\r\n    owner = to_owner;\r\n    //이벤트 기록을 남김\r\n    emit change_Owner(\"Owner_change\");\r\n    return true;\r\n  }\r\n  //*transferLock변경*// 0일때만 lock 풀림\r\n  function setTransferLock(uint256 transferLock_status) public isOwner returns (bool success)\r\n  {\r\n    //transferLock 변경해준다\r\n    transferLock = transferLock_status;\r\n    //transferLock은 일반 사용자가 알아야될 필요가 없기때문에 emit 이벤트를 실행하지 않음\r\n    return true;\r\n  }\r\n  //*time_stamp변경,status 변경*//\r\n  function change_time_stamp_status(uint256 _start_token_time,uint256 _stop_token_time,string _status) public isOwner returns (bool success)\r\n  {\r\n    //start_token_time을 변경해준다\r\n    start_token_time = _start_token_time;\r\n    //stop_token_time을 변경해준다\r\n    stop_token_time = _stop_token_time;\r\n    //status 변경해준다\r\n    status = _status;\r\n    //이벤트 기록을 남김\r\n    emit change_Time_Stamp(start_token_time,stop_token_time);\r\n    //이벤트 기록을 남김\r\n    emit change_Status(status);\r\n    return true;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"admin_transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to_owner\",\"type\":\"address\"}],\"name\":\"change_owner\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start_token_time\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_start_token_time\",\"type\":\"uint256\"},{\"name\":\"_stop_token_time\",\"type\":\"uint256\"},{\"name\":\"_status\",\"type\":\"string\"}],\"name\":\"change_time_stamp_status\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stop_token_time\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"admin_token_burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_status\",\"type\":\"string\"}],\"name\":\"change_status\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferLock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"transferLock_status\",\"type\":\"uint256\"}],\"name\":\"setTransferLock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ETH_withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_start_token_time\",\"type\":\"uint256\"},{\"name\":\"_stop_token_time\",\"type\":\"uint256\"}],\"name\":\"change_time_stamp\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"admin_from_To_transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenName\",\"type\":\"string\"}],\"name\":\"change_name\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenReward\",\"type\":\"uint256\"}],\"name\":\"change_tokenReward\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"admin_token_add\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"change_symbol\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"token_Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"token_Add\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"status\",\"type\":\"string\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"string\"}],\"name\":\"change_Owner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newStatus\",\"type\":\"string\"}],\"name\":\"change_Status\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"change_Name\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newSymbol\",\"type\":\"string\"}],\"name\":\"change_Symbol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newTokenReward\",\"type\":\"uint256\"}],\"name\":\"change_TokenReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"change_start_time_stamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"change_stop_time_stamp\",\"type\":\"uint256\"}],\"name\":\"change_Time_Stamp\",\"type\":\"event\"}]","ContractName":"TokenERC20","CompilerVersion":"v0.4.23-nightly.2018.4.17+commit.5499db01","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b3efae9c0fdefb835b7fa6f2cce5d115bec85396832a8897aac4a0b83adbfec5"}]}