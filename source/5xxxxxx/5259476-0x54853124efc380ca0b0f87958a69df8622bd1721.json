{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract SafeMath {\r\n  function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b > 0);\r\n    uint256 c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n\r\n}\r\ncontract ERC20 {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address _owner)public constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value)public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value)public returns (bool success);\r\n    function approve(address _spender, uint256 _value)public returns (bool success);\r\n    function allowance(address _owner, address _spender)public constant returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n}\r\n\r\n\r\ncontract StdToken is ERC20,SafeMath {\r\n\r\n    // validates an address - currently only checks that it isn't null\r\n   modifier validAddress(address _address) {\r\n        require(_address != 0x0);\r\n        _;\r\n    }\r\n\r\n  mapping(address => uint) balances;\r\n  mapping (address => mapping (address => uint)) allowed;\r\n  \r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    \r\n  function transfer(address _to, uint _value) public validAddress(_to)  returns (bool success){\r\n    if(msg.sender != _to){\r\n    balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n    balances[_to] = safeAdd(balances[_to], _value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n    }\r\n  }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value)public validAddress(_to)  returns (bool success) {\r\n        if (_value <= 0) revert();\r\n        if (balances[_from] < _value) revert();\r\n        if (balances[_to] + _value < balances[_to]) revert();\r\n        if (_value > allowed[_from][msg.sender]) revert();\r\n        balances[_from] = safeSub(balances[_from], _value);                           \r\n        balances[_to] = safeAdd(balances[_to], _value);\r\n        allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n  function balanceOf(address _owner)public constant returns (uint balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  function approve(address _spender, uint _value)public returns (bool success) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender)public constant returns (uint remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n}\r\n\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  function Ownable()public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner)public onlyOwner {\r\n    if (newOwner != owner) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n}\r\n\r\n\r\ncontract RAM_Token is StdToken,Ownable{\r\n    string public name=\"RAM Token\";\r\n    string public symbol=\"RAM\";\r\n    uint public decimals = 18;\r\n    uint256 TokenValue;\r\n    uint256 public minToken=1000;\r\n    uint256 public rate;\r\n    address stockWallet=0x7F5C9d6C36AB4BCC7Abd0054809bA88CF9Fed513;\r\n    address EthWallet=0x82FF0759301dd646C2bE5e27FDEcDF53a43568fd;\r\n    uint256 public limit;\r\n    uint public startTime;\r\n    uint public endTime;\r\n    bool public active;\r\n\r\n    \r\n    modifier isActive{\r\n        if(now>=startTime && now<=endTime && limit>0){\r\n        _;\r\n        }else{ if(now>endTime  || limit==0){\r\n                active=false;\r\n            }\r\n        revert();\r\n        }\r\n    }\r\n    function changeRate(uint _rate)external onlyOwner{\r\n        rate= _rate;\r\n    }\r\n    function changeMinToken(uint _minToken)external onlyOwner{\r\n        minToken=_minToken;\r\n    }\r\n    function activeEnd()external onlyOwner{\r\n        active=false;\r\n        startTime=0;\r\n        endTime=0;\r\n        limit=0;\r\n    }\r\n    \r\n    function RAM_Token()public onlyOwner{\r\n        rate=15000;\r\n        totalSupply= 700 * (10**6) * (10**decimals);\r\n        balances[stockWallet]= 200 * (10**6) * (10**decimals);\r\n        balances[owner] = 500 * (10**6) * (10**decimals);\r\n    }    \r\n    \r\n    function Mint(uint _value)public onlyOwner returns(uint256){\r\n        if(_value>0){\r\n        balances[owner] = safeAdd(balances[owner],_value);\r\n        totalSupply =safeAdd(totalSupply, _value);\r\n        return totalSupply;\r\n        }\r\n    }\r\n        \r\n    function burn(uint _value)public onlyOwner returns(uint256){\r\n        if(_value>0 && balances[msg.sender] >= _value){\r\n            balances[owner] = safeSub(balances[owner],_value);\r\n            totalSupply = safeSub(totalSupply,_value);\r\n            return totalSupply;\r\n        }\r\n    }\r\n   \r\n    function wihtdraw()public onlyOwner returns(bool success){\r\n        if(this.balance > 0){\r\n            msg.sender.transfer(this.balance);\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    function crowdsale(uint256 _limit,uint _startTime,uint _endTime)external onlyOwner{\r\n    if(active){ revert();}\r\n        endTime = _endTime;\r\n    if(now>=endTime){ revert();}\r\n    if(_limit==0 || _limit > balances[owner]){revert();}\r\n        startTime= _startTime;\r\n        limit = _limit * (10**decimals);\r\n        active=true;\r\n    }\r\n\r\n    function ()public isActive payable{\r\n        if(!active)revert();\r\n        if(msg.value<=0)revert();\r\n        TokenValue=msg.value*rate;\r\n        if(TokenValue<minToken*(10**decimals))revert();\r\n        if(limit -TokenValue<0)revert();\r\n        balances[msg.sender]=safeAdd(balances[msg.sender],TokenValue);\r\n        balances[owner]=safeSub(balances[owner],TokenValue);\r\n        limit = safeSub(limit,TokenValue);\r\n        Transfer(owner,msg.sender,TokenValue);\r\n        EthWallet.transfer(msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minToken\",\"type\":\"uint256\"}],\"name\":\"changeMinToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_limit\",\"type\":\"uint256\"},{\"name\":\"_startTime\",\"type\":\"uint256\"},{\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"crowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"changeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"limit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"activeEnd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"wihtdraw\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"RAM_Token","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f97da45a45c3c2ace3a8353416a0e47104ec5a2490e2dbcadade74db69d82480"}]}