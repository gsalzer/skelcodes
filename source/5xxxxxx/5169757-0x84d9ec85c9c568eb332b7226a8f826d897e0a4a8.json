{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n/// @author Bowen Sanders\r\n/// sections built on the work of Jordi Baylina (Owned, data structure)\r\n/// smartwedindex.sol contains a simple index of contract address, couple name, actual marriage date, bool displayValues to\r\n/// be used to create an array of all SmartWed contracts that are deployed \r\n/// contract 0wned is licesned under GNU-3\r\n\r\n/// @dev `Owned` is a base level contract that assigns an `owner` that can be\r\n///  later changed\r\ncontract Owned {\r\n\r\n    /// @dev `owner` is the only address that can call a function with this\r\n    /// modifier\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    address public owner;\r\n\r\n    /// @notice The Constructor assigns the message sender to be `owner`\r\n    function Owned() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    address public newOwner;\r\n\r\n    /// @notice `owner` can step down and assign some other address to this role\r\n    /// @param _newOwner The address of the new owner\r\n    ///  an unowned neutral vault, however that cannot be undone\r\n    function changeOwner(address _newOwner) onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    /// @notice `newOwner` has to accept the ownership before it is transferred\r\n    ///  Any account or any contract with the ability to call `acceptOwnership`\r\n    ///  can be used to accept ownership of this contract, including a contract\r\n    ///  with no other functions\r\n    function acceptOwnership() {\r\n        if (msg.sender == newOwner) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n\r\n    // This is a general safty function that allows the owner to do a lot\r\n    //  of things in the unlikely event that something goes wrong\r\n    // _dst is the contract being called making this like a 1/1 multisig\r\n    function execute(address _dst, uint _value, bytes _data) onlyOwner {\r\n        _dst.call.value(_value)(_data);\r\n    }\r\n}\r\n\r\n// contract WedIndex \r\n\r\ncontract WedIndex is Owned {\r\n\r\n    // declare index data variables\r\n    string public wedaddress;\r\n    string public partnernames;\r\n    uint public indexdate;\r\n    uint public weddingdate;\r\n    uint public displaymultisig;\r\n\r\n    IndexArray[] public indexarray;\r\n\r\n    struct IndexArray {\r\n        uint indexdate;\r\n        string wedaddress;\r\n        string partnernames;\r\n        uint weddingdate;\r\n        uint displaymultisig;\r\n    }\r\n    \r\n    function numberOfIndex() constant public returns (uint) {\r\n        return indexarray.length;\r\n    }\r\n\r\n\r\n    // make functions to write and read index entries and nubmer of entries\r\n    function writeIndex(uint indexdate, string wedaddress, string partnernames, uint weddingdate, uint displaymultisig) {\r\n        indexarray.push(IndexArray(now, wedaddress, partnernames, weddingdate, displaymultisig));\r\n        IndexWritten(now, wedaddress, partnernames, weddingdate, displaymultisig);\r\n    }\r\n\r\n    // declare events\r\n    event IndexWritten (uint time, string contractaddress, string partners, uint weddingdate, uint display);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"numberOfIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"indexdate\",\"type\":\"uint256\"},{\"name\":\"wedaddress\",\"type\":\"string\"},{\"name\":\"partnernames\",\"type\":\"string\"},{\"name\":\"weddingdate\",\"type\":\"uint256\"},{\"name\":\"displaymultisig\",\"type\":\"uint256\"}],\"name\":\"writeIndex\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"partnernames\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wedaddress\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"indexdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"indexarray\",\"outputs\":[{\"name\":\"indexdate\",\"type\":\"uint256\"},{\"name\":\"wedaddress\",\"type\":\"string\"},{\"name\":\"partnernames\",\"type\":\"string\"},{\"name\":\"weddingdate\",\"type\":\"uint256\"},{\"name\":\"displaymultisig\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dst\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weddingdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"displaymultisig\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"contractaddress\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"partners\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"weddingdate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"display\",\"type\":\"uint256\"}],\"name\":\"IndexWritten\",\"type\":\"event\"}]","ContractName":"WedIndex","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a38720af746ee3ca082b073a9850e51129cc5e8221bb964366709b65d8e83516"}]}