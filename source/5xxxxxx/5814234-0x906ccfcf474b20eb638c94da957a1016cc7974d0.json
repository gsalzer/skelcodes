{"status":"1","message":"OK","result":[{"SourceCode":"contract BitSTDView{\r\n    function symbol()constant  public returns(string) {}\r\n    function migration(address add) public{}\r\n    function transfer(address _to, uint256 _value) public {}\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}\r\n}\r\ncontract airDrop{\r\n    /**\r\n     *\r\n     *This is a fixed airdrop\r\n     *\r\n     * @param contractaddress this is Address of airdrop token contract\r\n     * @param dsts this is Batch acceptance address\r\n     * @param value this is Issuing number\r\n     */\r\n    function airDrop_(address contractaddress,address[] dsts,uint256 value) public {\r\n\r\n        uint count= dsts.length;\r\n        require(value>0);\r\n        BitSTDView View= BitSTDView(contractaddress);\r\n        for(uint i = 0; i < count; i++){\r\n           View.transfer(dsts[i],value);\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * This is a multi-value airdrop\r\n     *\r\n     * @param contractaddress this is Address of airdrop token contract\r\n     * @param dsts this is Batch acceptance address\r\n     * @param values This is the distribution number array\r\n     */\r\n    function airDropValues(address contractaddress,address[] dsts,uint256[] values) public {\r\n\r\n        uint count= dsts.length;\r\n        BitSTDView View= BitSTDView(contractaddress);\r\n        for(uint i = 0; i < count; i++){\r\n           View.transfer(dsts[i],values[i]);\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * This is a multi-value airdrop\r\n     *\r\n     * @param contractaddress this is Address of airdrop token contract\r\n     * @param dsts This is the address where the data needs to be migrated\r\n     */\r\n    function dataMigration(address contractaddress,address[] dsts)public{\r\n        uint count= dsts.length;\r\n        BitSTDView View= BitSTDView(contractaddress);\r\n        for(uint i = 0; i < count; i++){\r\n           View.migration(dsts[i]);\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     *This is Authorization drop\r\n     * @param _from Assigned address\r\n     * @param contractaddress this is Address of airdrop token contract\r\n     * @param dsts this is Batch acceptance address\r\n     * @param value this is Issuing number\r\n     */\r\n    function transferFrom(address contractaddress,address _from, address[] dsts, uint256 value) public returns (bool success) {\r\n        uint count= dsts.length;\r\n        BitSTDView View= BitSTDView(contractaddress);\r\n        for(uint i = 0; i < count; i++){\r\n           View.transferFrom(_from,dsts[i],value);\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"contractaddress\",\"type\":\"address\"},{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"dsts\",\"type\":\"address[]\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractaddress\",\"type\":\"address\"},{\"name\":\"dsts\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"airDropValues\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractaddress\",\"type\":\"address\"},{\"name\":\"dsts\",\"type\":\"address[]\"}],\"name\":\"dataMigration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractaddress\",\"type\":\"address\"},{\"name\":\"dsts\",\"type\":\"address[]\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"airDrop_\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"airDrop","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e04d169a33a553a8a388401da5e109125a0864d18f526b0d5b4a19318d4f8707"}]}