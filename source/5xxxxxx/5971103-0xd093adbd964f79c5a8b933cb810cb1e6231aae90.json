{"status":"1","message":"OK","result":[{"SourceCode":"contract EtherModifierMoops\r\n{\r\n    struct Person \r\n    {\r\n        address etherAddress;\r\n        uint amount;\r\n    }\r\n\r\n    Person[] public persons;\r\n\r\n    uint public payoutIdx = 0;\r\n    uint public collectedFees;\r\n    uint public balance = 0;\r\n    uint amount;\r\n    uint maximum = (1 ether)/40 ;\r\n    uint minimum = (1 ether)/100;\r\n    \r\n    address public owner;\r\n    address public developer=0xC99B66E5Cb46A05Ea997B0847a1ec50Df7fe8976;\r\n\r\n    modifier _onlyowner\r\n    {\r\n        if (msg.sender == owner) \r\n        _\r\n    }\r\n    function EtherModifierMoops() \r\n    {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function() \r\n    {\r\n        enter();\r\n    }\r\n  \r\n    function enter()\r\n    {\r\n        if (msg.value >= minimum && msg.value <= maximum) //if value is between 0.01 and 0.025\r\n        {\r\n\t        //if value is correct\r\n            collectedFees += msg.value/10;\r\n\t        owner.send(collectedFees/2);\r\n\t        developer.send(collectedFees/2);\r\n\t        collectedFees = 0;\r\n\t        amount = msg.value;\r\n\t        canSort();\r\n        }\r\n\t    else\r\n\t    {\r\n            //if value isnt correct\r\n\t\t    collectedFees += msg.value / 10; //add fee to fee counter\r\n\t        owner.send(collectedFees/2);    //send halved fee to owner\r\n\t        developer.send(collectedFees/2);//send halved fee to developer\r\n\t        collectedFees = 0;\r\n\t        msg.sender.send(msg.value - msg.value/10); //return icome - fee to sender\r\n\t    }\r\n    }\r\n    function canSort()\r\n    {\r\n        uint idx = persons.length;\r\n        persons.length += 1;\r\n        persons[idx].etherAddress = msg.sender;\r\n        persons[idx].amount = amount;\r\n        balance += amount - amount/10;\r\n    \r\n        while (balance > persons[payoutIdx].amount / 100 * 111) \r\n        {\r\n            uint transactionAmount = persons[payoutIdx].amount / 100 * 111;\r\n            persons[payoutIdx].etherAddress.send(transactionAmount);\r\n    \r\n            balance -= transactionAmount;\r\n            payoutIdx += 1;\r\n        }\r\n    }\r\n    function setOwner(address _owner) _onlyowner \r\n    {\r\n        owner = _owner;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collectedFees\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"canSort\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"persons\",\"outputs\":[{\"name\":\"etherAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"payoutIdx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"developer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[],\"type\":\"constructor\"}]","ContractName":"EtherModifierMoops","CompilerVersion":"v0.2.1+commit.91a6b35","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}