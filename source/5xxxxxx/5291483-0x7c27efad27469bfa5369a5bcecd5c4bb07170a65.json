{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\ncontract Refund {\r\n\r\n    address owner;\r\n\r\n    function Refund() {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    mapping (address => uint256) public balances;\r\n\r\n    function add_addys(address[] _addys, uint256[] _values) onlyOwner {\r\n        for (uint i = 0; i < _addys.length ; i++) {\r\n            balances[_addys[i]] += (_values[i]);\r\n        }\r\n    }\r\n\r\n    function refund() {\r\n        uint256 eth_to_withdraw = balances[msg.sender];\r\n        balances[msg.sender] = 0;\r\n        msg.sender.transfer(eth_to_withdraw);\r\n    }\r\n\r\n    function direct_refunds(address[] _addys, uint256[] _values) onlyOwner {\r\n        for (uint i = 0; i < _addys.length ; i++) {\r\n            uint256 to_refund = (_values[i]);\r\n            balances[_addys[i]] = 0;\r\n            _addys[i].transfer(to_refund);\r\n        }\r\n    }\r\n\r\n    function change_specific_addy(address _addy, uint256 _val) onlyOwner {\r\n        balances[_addy] = (_val);\r\n    }\r\n\r\n    function () payable {}\r\n\r\n    function withdraw_ether() onlyOwner {\r\n        owner.transfer(this.balance);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_addys\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"add_addys\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw_ether\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addys\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"direct_refunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addy\",\"type\":\"address\"},{\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"change_specific_addy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Refund","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://123ce79c3b84de8660e9b26b69a6d26b41723468fab7cba8db5f8198f2d82560"}]}