{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public constant returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public constant returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract TokenSender {\r\n\r\n    event TransferFail(uint256 index, address receiver, uint256 amount);\r\n\r\n    function bulkTransfer(address[] receivers, uint256[] amounts, address token) external {\r\n        address sender = msg.sender;\r\n        uint256 length = receivers.length;\r\n        for (uint256 i = 0; i < length; i++) {\r\n            if (!ERC20(token).transferFrom(sender, receivers[i], amounts[i])) {\r\n                emit TransferFail(i, receivers[i], amounts[i]);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    function bulkTransferEther(address[] receivers, uint256[] amounts) external payable {\r\n        uint256 length = receivers.length;\r\n        uint256 totalSend = 0;\r\n        for (uint256 i = 0; i < length; i++){\r\n            if (!receivers[i].send(amounts[i])) {\r\n                emit TransferFail(i, receivers[i], amounts[i]);\r\n                return;\r\n            }\r\n            totalSend += amounts[i];\r\n        }\r\n        uint256 balances = msg.value - totalSend;\r\n        if (balances > 0) {\r\n            msg.sender.transfer(balances);\r\n        }\r\n        require(this.balance == 0);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"receivers\",\"type\":\"address[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"bulkTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receivers\",\"type\":\"address[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"bulkTransferEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferFail\",\"type\":\"event\"}]","ContractName":"TokenSender","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5189806fe34531db20de3d49ee0ce88d7717b85e103b0403ae1b0c6348e91d1c"}]}