{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n \r\ninterface ERC20 {\r\n\t//ERC-20 Token Standard https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\r\n\t\r\n\tfunction name() public view returns (string);\r\n\tfunction symbol() public view returns (string);\r\n\tfunction decimals() public view returns (uint8);\r\n\tfunction totalSupply() public view returns (uint256);\r\n\tfunction balanceOf(address _owner) public view returns (uint256);\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool success);\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool success);\r\n\tfunction allowance(address _owner, address _spender) public view returns (uint256);\r\n\t\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ninterface TokenRecipient { \r\n\tfunction receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; \r\n}\r\n\r\ninterface ERC223Receiver {\r\n    function tokenFallback(address _from, uint256 _value, bytes _data) public;\r\n}\r\n\r\ncontract ERC223 is ERC20 {\r\n\t//ERC223 token standard https://github.com/Dexaran/ERC223-token-standard\r\n\t\r\n\tfunction transfer(address _to, uint256 _value, bytes _data) public returns (bool success);\r\n\tfunction transfer(address _to, uint256 _value, bytes _data, string _customFallback) public returns (bool success);\r\n\t\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value, bytes _data);\r\n}\r\n\r\ncontract NGToken is ERC223 {\r\n\tstring constant private NAME \t\t\t= \"NEO Genesis Token\";\r\n\tstring constant private SYMBOL\t \t\t= \"NGT\";\r\n\tuint8 constant private DECIMALS \t\t= 18;\r\n\tuint256 constant private INITIAL_SUPPLY\t= 20000000000 * (10 ** uint256(DECIMALS));\r\n\tuint256 private totalBurned\t\t\t\t= 0;\r\n\tmapping(address => uint256) private balances;\r\n\tmapping(address => mapping(address => uint256)) private allowed;\r\n\t\r\n\tfunction NGToken() public {\r\n\t  balances[msg.sender] = INITIAL_SUPPLY;\r\n\t}\r\n\t\r\n\t//ERC20\r\n\tfunction name() public view returns (string) {\r\n\t\treturn NAME;\r\n\t}\r\n\t\r\n\tfunction symbol() public view returns (string) {\r\n\t\treturn SYMBOL;\r\n\t}\r\n\t\r\n\tfunction decimals() public view returns (uint8) {\r\n\t\treturn DECIMALS;\r\n\t}\r\n\t\r\n\tfunction totalSupply() public view returns (uint256) {\r\n\t\treturn INITIAL_SUPPLY - totalBurned;\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) public view returns (uint256) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\t\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool success) {\r\n\t\tif (isContract(_to)) {\r\n\t\t\tbytes memory empty;\r\n\t\t\treturn transferToContract(_to, _value, empty);\r\n\t\t} else {\r\n\t\t\trequire(_to != address(0x0));\r\n\t\t\trequire(balances[msg.sender] >= _value);\r\n\t\t\tbalances[msg.sender] -= _value;\r\n\t\t\tbalances[_to] += _value;\r\n\t\t\tTransfer(msg.sender, _to, _value);\r\n\t\t\t// Transfer(msg.sender, _to, _value, _data);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction multipleTransfer(address[] _to, uint256 _value) public returns (bool success) {\r\n\t\trequire(_value * _to.length > 0);\r\n\t\trequire(balances[msg.sender] >= _value * _to.length);\r\n\t\tbalances[msg.sender] -= _value * _to.length;\r\n\t\tfor (uint256 i = 0; i < _to.length; ++i) {\r\n\t\t \tbalances[_to[i]] += _value;\r\n\t\t \tTransfer(msg.sender, _to[i], _value);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction batchTransfer(address[] _to, uint256[] _value) public returns (bool success) {\r\n\t\trequire(_to.length > 0);\r\n\t\trequire(_value.length > 0);\r\n\t\trequire(_to.length == _value.length);\r\n\t\tfor (uint256 i = 0; i < _to.length; ++i) {\r\n\t\t\taddress to = _to[i];\r\n\t\t\tuint256 value = _value[i];\r\n\t\t\trequire(balances[msg.sender] >= value);\r\n\t\t\tbalances[msg.sender] -= value;\r\n\t\t \tbalances[to] += value;\r\n\t\t \tTransfer(msg.sender, to, value);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n\t\trequire(_to != address(0x0));\r\n        require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value);\r\n        balances[_from] -= _value;\r\n        balances[_to] += _value;\r\n\t\tallowed[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n\t\tbytes memory empty;\r\n\t\tTransfer(_from, _to, _value, empty);\r\n        return true;\r\n\t}\r\n\t\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool success) {\r\n\t\t//https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/\r\n\t\t//force to 0 before calling \"approve\" again\r\n\t\trequire((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n\t\t\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\tApproval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\r\n        TokenRecipient spender = TokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n\t\treturn false;\r\n    }\r\n\r\n\tfunction increaseApproval(address _spender, uint256 _addValue) public returns (bool) {\r\n\t\tallowed[msg.sender][_spender] += _addValue;\r\n\t\tApproval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction decreaseApproval(address _spender, uint256 _subValue) public returns (bool) {\r\n\t\tif (_subValue > allowed[msg.sender][_spender]) {\r\n\t\t  allowed[msg.sender][_spender] = 0;\r\n\t\t} else {\r\n\t\t  allowed[msg.sender][_spender] -= _subValue;\r\n\t\t}\r\n\t\tApproval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t\treturn true;\r\n\t}\t\r\n\t\r\n\tfunction allowance(address _owner, address _spender) public view returns (uint256) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\t\r\n\t//ERC233\r\n\tfunction transfer(address _to, uint256 _value, bytes _data) public returns (bool success) {\r\n\t\tif (isContract(_to)) {\r\n\t\t\treturn transferToContract(_to, _value, _data);\r\n\t\t} else {\r\n\t\t\treturn transferToAddress(_to, _value, _data);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _value, bytes _data, string _customFallback) public returns (bool success) {\r\n\t\tif (isContract(_to)) {\r\n\t\t\trequire(_to != address(0x0));\r\n\t\t\trequire(balances[msg.sender] >= _value);\r\n\t\t\tbalances[msg.sender] -= _value;\r\n\t\t\tbalances[_to] += _value;\r\n\t\t\tassert(_to.call.value(0)(bytes4(keccak256(_customFallback)), msg.sender, _value, _data));\r\n\t\t\tTransfer(msg.sender, _to, _value);\r\n\t\t\tTransfer(msg.sender, _to, _value, _data);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn transferToAddress(_to, _value, _data);\r\n\t\t}\r\n\t}\r\n\r\n    function transferToAddress(address _to, uint256 _value, bytes _data) private returns (bool success) {\r\n\t\trequire(_to != address(0x0));\r\n\t\trequire(balances[msg.sender] >= _value);\r\n\t\tbalances[msg.sender] -= _value;\r\n\t\tbalances[_to] += _value;\r\n\t\tTransfer(msg.sender, _to, _value);\r\n\t\tTransfer(msg.sender, _to, _value, _data);\r\n\t\treturn true;\r\n    }\r\n\r\n    function transferToContract(address _to, uint256 _value, bytes _data) private returns (bool success) {\r\n\t\trequire(_to != address(0x0));\r\n\t\trequire(balances[msg.sender] >= _value);\r\n\t\tbalances[msg.sender] -= _value;\r\n\t\tbalances[_to] += _value;\r\n\t\tERC223Receiver receiver = ERC223Receiver(_to);\r\n\t\treceiver.tokenFallback(msg.sender, _value, _data);\r\n        Transfer(msg.sender, _to, _value);\r\n        Transfer(msg.sender, _to, _value, _data);\r\n        return true;\r\n    }\r\n\r\n\tfunction isContract(address _addr) private view returns (bool) {\r\n        // if (_addr == address(0x0))\r\n\t\t// \treturn false;\r\n        uint256 length;\r\n        assembly {\r\n            length := extcodesize(_addr)\r\n        }\r\n\t\treturn (length > 0);\r\n    }\r\n\t\r\n\t//Burn\r\n    event Burn(address indexed burner, uint256 value, uint256 currentSupply, bytes data);\r\n\r\n    function burn(uint256 _value, bytes _data) public returns (bool success) {\r\n\t\trequire(balances[msg.sender] >= _value);\r\n\t\tbalances[msg.sender] -= _value;\r\n\t\ttotalBurned += _value;\r\n\t\tBurn(msg.sender, _value, totalSupply(), _data);\r\n\t\treturn true;\r\n    }\r\n\r\n    function burnFrom(address _from, uint256 _value, bytes _data) public returns (bool success) {\r\n\t\tif (transferFrom(_from, msg.sender, _value)) {\r\n\t\t\treturn burn(_value, _data);\r\n\t\t}\r\n        return false;\r\n    }\r\n\r\n\tfunction initialSupply() public pure returns (uint256) {\r\n\t\treturn INITIAL_SUPPLY;\r\n\t}\r\n\r\n\tfunction currentBurned() public view returns (uint256) {\r\n\t\treturn totalBurned;\r\n\t}\r\n\r\n\t//Stop\r\n\tfunction () public {\r\n        require(false);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"multipleTransfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_customFallback\",\"type\":\"string\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentBurned\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"currentSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"NGToken","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bf0796e95fec4661ae5e961fa8479b25ecb4689bcb71a48cd2a87c61080f6e5d"}]}