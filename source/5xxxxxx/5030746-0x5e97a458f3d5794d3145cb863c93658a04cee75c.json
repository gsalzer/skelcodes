{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n/*\r\n                        ...........:??I7ZZ:......                               \r\n                        ......=??????7IIOOZZ=~...                               \r\n                   .  ..,I+?????????I7II==?ZZZO:,.. .......   .. .              \r\n                   ..??I:=~:~?????I7++++~:++++=?Z7~,.....,...........           \r\n                   .???.,,~:::::~+++++++~~=++++++++??+++?++???+.....            \r\n                   .?=,,,,,::::~~~+++++~~~~=+++++++I+?++?+?????????,.           \r\n              .....?,,,,,,,,:~:~~~?++??~~~~~++++++=??+++++?++++??+????~.......  \r\n              .....,,,,,,,,:?::~~~~+++~~~~~~~++++=I~:$++?+?++??+???????7?+....  \r\n              ...,=~~~~~~~~+I+++:~~:++=~~~~~:~+++++::::??+++++++?+????7II++.... \r\n              ...?~~~~~~?+?II++++?+=?~~~~~~~~~~?+I=::::7+===+?+=+++??7III7?I... \r\n              ..+?~~~~~???I??+++++++++++++~~~~~~+?:::::7===========+7IIIII7I?.. \r\n              .~+~~~++???+???++++???I7?+++++++=+O,,::::I===========+I7II7777II. \r\n         .....:++:~??????+?+I++??????77++++++$7~:::::::7=========?+?I777777+I?,.\r\n         .....?+?I++++++:7$??????????777?++Z$=:~:::::::7I++=====++?+I777777+??+.\r\n         ... ~???++++?,::777?I?IIII?ZZ+?$$?ZZ+~~~~::::?I7=====+?+++?7I7777?++I?.\r\n. ...........+??=?++~,::::IZ?II7IIOZI????+7ZZI~~~~~:::7I7+==?+++++?+III77I+++??.\r\n...      .,=+~??+=?,::::,:Z???7~.7I77Z???+ZZZZ~~~~~~::II7=++++++++?+III77++????.\r\n,=??++++,,:=,,,:,,:,:,,.O7.......,III$$Z+?ZZZO~~~~~~+:I777II++++??+IIII7I??????~\r\n.:?_1517702400_ZZI=:,7?$$........~?I777$$$?III???=~~~=$77II????????7II7$???????+\r\n .. ..........?=+=+~I+7Z....... ..I?I?7ZZZIIII+++++++?I77IIII?????III$ZZ???????.\r\n..............=====?IIZ.. ..... ..II??I7IZIIII++++++??+I7IIIII?I?7I$Z$ZZ??????+.\r\n. ..   ...  ..+++++=I?, .....    .7I???IIZI7II+++++????77IIIIIIII$ZZZ$ZZ?????+I.\r\n            ..=+++++II=.          7?I??I7ZIIII+++=+????+ZZZZ$ZZZOZZZZZZZ??????+.\r\n              =+=++=?I+.          $II??II$IIII+++++++++?$ZZ$ZOZ77777IZOZ?????+..\r\n              ,=+++=+II           +??I?7IIIIII?++??+++??....7III7777IIII?III?7..\r\n              .+++++??7.          ,II?I7I7ZIIII+++?+?+??....7III7777III7I+?++I. \r\n              .+=++?+??.          .?III7IIZIIII+??????+?.....7III777IIIII++?+?. \r\n              .+++I7???:          .IIII7IIIIIII???????+:.....I7II777III$II++I?. \r\n              ..???????+.....     .=III7IIIIII?I???????.......7II77IIII7II+???. \r\n              ...?I?????,.....    ..??I777III?II???????.... ..7II7II?I$$III???. \r\n              ....:?I???II?77  .  ..??I7777IIIII?I????+.......:7I7II?I7$III+??. \r\n                 ...???I++?++$......7II7I777III??????+,.......II7I+??$$$???$?I..\r\n                   ..?IIII?+?=......+III?I???????????+.......?I$$???I$?I=+~~II:.\r\n                   ........=?......~+=II??I7?$~~~~~:+I.......=I$Z$??IOI~====II7.\r\n                                  .==+?I?7I77:~:~~~~~I.....       ...Z======II. \r\n                                  .:+=+I$7~?$~~~+~~~I?.....         .... ...... \r\n                                  .........O:~~~~==:II.....         ..........  \r\n                                          ....,::~=:..                PolyETH         \r\n*/\r\n\r\ncontract ERC20Interface {\r\n    function totalSupply() public constant returns (uint256 supply);\r\n    function balance() public constant returns (uint256);\r\n    function balanceOf(address _owner) public constant returns (uint256);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract Polyion is ERC20Interface {\r\n    string public constant symbol = \"PLYN\";\r\n    string public constant name = \"Polyion\";\r\n    uint8 public constant decimals = 2;\r\n\r\n    uint256 _totalSupply = 0;\r\n    uint256 _airdropAmount = 1000000;\r\n    uint256 _cutoff = _airdropAmount * 10000;\r\n\r\n    mapping(address => uint256) balances;\r\n    mapping(address => bool) initialized;\r\n\r\n    // Owner of account approves the transfer of an amount to another account\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n\r\n    function  Polyion() public {\r\n        initialized[msg.sender] = true;\r\n        balances[msg.sender] = _airdropAmount * 1000;\r\n        _totalSupply = balances[msg.sender];\r\n    }\r\n\r\n    function totalSupply() public constant returns (uint256 supply) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    // What's my balance?\r\n    function balance() public constant returns (uint256) {\r\n        return getBalance(msg.sender);\r\n    }\r\n\r\n    // What is the balance of a particular account?\r\n    function balanceOf(address _address) public constant returns (uint256) {\r\n        return getBalance(_address);\r\n    }\r\n\r\n    // Transfer the balance from owner's account to another account\r\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\r\n        initialize(msg.sender);\r\n\r\n        if (balances[msg.sender] >= _amount\r\n            && _amount > 0) {\r\n            initialize(_to);\r\n            if (balances[_to] + _amount > balances[_to]) {\r\n\r\n                balances[msg.sender] -= _amount;\r\n                balances[_to] += _amount;\r\n\r\n                Transfer(msg.sender, _to, _amount);\r\n\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Send _value amount of tokens from address _from to address _to\r\n    // The transferFrom method is used for a withdraw workflow, allowing contracts to send\r\n    // tokens on your behalf, for example to \"deposit\" to a contract address and/or to charge\r\n    // fees in sub-currencies; the command should fail unless the _from account has\r\n    // deliberately authorized the sender of the message via some mechanism; we propose\r\n    // these standardized APIs for approval:\r\n    function transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\r\n        initialize(_from);\r\n\r\n        if (balances[_from] >= _amount\r\n            && allowed[_from][msg.sender] >= _amount\r\n            && _amount > 0) {\r\n            initialize(_to);\r\n            if (balances[_to] + _amount > balances[_to]) {\r\n\r\n                balances[_from] -= _amount;\r\n                allowed[_from][msg.sender] -= _amount;\r\n                balances[_to] += _amount;\r\n\r\n                Transfer(_from, _to, _amount);\r\n\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Allow _spender to withdraw from your account, multiple times, up to the _value amount.\r\n    // If this function is called again it overwrites the current allowance with _value.\r\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    // internal private functions\r\n    function initialize(address _address) internal returns (bool success) {\r\n        if (_totalSupply < _cutoff && !initialized[_address]) {\r\n            initialized[_address] = true;\r\n            balances[_address] = _airdropAmount;\r\n            _totalSupply += _airdropAmount;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function getBalance(address _address) internal returns (uint256) {\r\n        if (_totalSupply < _cutoff && !initialized[_address]) {\r\n            return balances[_address] + _airdropAmount;\r\n        }\r\n        else {\r\n            return balances[_address];\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Polyion","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9540332a1029c7097176dc546c7069ba3c569fbd4e31f0ef3a2b276edb25b767"}]}