{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract owned {\r\n    address public owner;\r\n    function owned() public {owner = msg.sender;}\r\n    modifier onlyOwner {require(msg.sender == owner);_;}\r\n    function transferOwnership(address newOwner) onlyOwner public {owner = newOwner;}\r\n}\r\n\r\ncontract WithdrawalContract is owned {\r\n    address public richest;\r\n    uint public mostSent;\r\n    mapping (address => uint) pendingWithdrawals;\r\n    function WithdrawalContract() public payable {\r\n        richest = msg.sender;\r\n        mostSent = msg.value;\r\n    }\r\n    function becomeRichest() public payable returns (bool) {\r\n        if (msg.value > mostSent) {\r\n            pendingWithdrawals[richest] += msg.value;\r\n            richest = msg.sender;\r\n            mostSent = msg.value;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    function withdraw() public onlyOwner {\r\n        uint amount = pendingWithdrawals[msg.sender];\r\n        pendingWithdrawals[msg.sender] = 0;\r\n        msg.sender.transfer(amount);\r\n    }\r\n    function setMostSent(uint _newMostSent) public onlyOwner {\r\n        mostSent = _newMostSent;\r\n    }\r\n}\r\n\r\ncontract SimpleMarket is owned, WithdrawalContract {\r\n\r\n    uint public    startPrice;\r\n    uint public    fixPrice  = 0.1 ether;\r\n    uint internal  decimals  = 0;\r\n    bytes32 public productId = 0x0;\r\n\r\n\tstruct UserStruct {\r\n\t\tuint userListPointer;\r\n\t\tbytes32[] productKeys;\r\n\t\tbytes32 userEmail;\r\n\t\tbytes32 userName;\r\n\t\tmapping(bytes32 => uint) productKeyPointers;\r\n\t}\r\n\r\n\tmapping(bytes32 => UserStruct) public userStructs;\r\n\tbytes32[] public userList;\r\n\r\n\tstruct ProductStruct {\r\n\t\tuint productListPointer;\r\n\t\tbytes32 userKey;\r\n\t\tbytes32 size;\r\n\t\tuint productPrice;\r\n\t\tstring delivery;\r\n\t\tbool inSale;\r\n\t\taddress[] historyUser;\r\n\t\tuint[] historyDate;\r\n\t\tuint[] historyPrice;\r\n\t}\r\n\r\n\tmapping(bytes32 => ProductStruct) public productStructs;\r\n\tbytes32[] public productList;\r\n\r\n\tevent LogNewUser(address sender, bytes32 userId);\r\n\tevent LogNewProduct(address sender, bytes32 productId, bytes32 userId);\r\n\tevent LogUserDeleted(address sender, bytes32 userId);\r\n\tevent LogProductDeleted(address sender, bytes32 productId);\r\n\r\n\tfunction getUserCount() public constant returns(uint userCount) {\r\n\t\treturn userList.length;\r\n\t}\r\n\r\n\tfunction getProductCount() public constant returns(uint productCount){\r\n\t\treturn productList.length;\r\n\t}\r\n\t\r\n\tfunction getUserProductsKeys(bytes32 _userId) public view returns(bytes32[]){\r\n\t    require(isUser(_userId));\r\n\t    return userStructs[_userId].productKeys;\r\n\t}\r\n\r\n\tfunction getProductHistoryUser(bytes32 _productId) public view returns(address[]) {\r\n\t    return productStructs[_productId].historyUser;\r\n\t}\r\n\r\n\tfunction getProductHistoryDate(bytes32 _productId) public view returns(uint[]) {\r\n\t    return productStructs[_productId].historyDate;\r\n\t}\r\n\r\n\tfunction getProductHistoryPrice(bytes32 _productId) public view returns(uint[]) {\r\n\t    return productStructs[_productId].historyPrice;\r\n\t}\r\n\r\n\tfunction isUser(bytes32 userId) public constant returns(bool isIndeed) {\r\n\t\tif(userList.length==0) return false;\r\n\t\treturn userList[userStructs[userId].userListPointer] == userId;\r\n\t}\r\n\r\n\tfunction isProduct(bytes32 _productId) public constant returns(bool isIndeed) {\r\n\t\tif(productList.length==0) return false;\r\n\t\treturn productList[productStructs[_productId].productListPointer] == _productId;\r\n\t}\r\n\r\n\tfunction isUserProduct(bytes32 _productId, bytes32 _userId) public constant returns(bool isIndeed) {\r\n\r\n\t\tif(productList.length==0) return false;\r\n\t\tif(userList.length==0) return false;\r\n\r\n\t\treturn productStructs[_productId].userKey == _userId;\r\n\t}\r\n\r\n\tfunction getUserProductCount(bytes32 userId) public constant returns(uint productCount) {\r\n\t\trequire(isUser(userId));\r\n\t\treturn userStructs[userId].productKeys.length;\r\n\t}\r\n\r\n\tfunction getUserProductAtIndex(bytes32 userId, uint row) public constant returns(bytes32 productKey) {\r\n\t\trequire(isUser(userId));\r\n\t\treturn userStructs[userId].productKeys[row];\r\n\t}\r\n\r\n\tfunction createUser(bytes32 _userName, bytes32 _userEmail) public {\r\n\t    require(msg.sender != 0);\r\n        bytes32 userId = bytes32(msg.sender);\r\n\t\trequire(!isUser(userId));\r\n\r\n\t\tuserStructs[userId].userListPointer = userList.push(userId)-1;\r\n\t\tuserStructs[userId].userEmail       = _userEmail;\r\n\t\tuserStructs[userId].userName        = _userName;\r\n\r\n\t\tLogNewUser(msg.sender, userId);\r\n\t}\r\n\r\n\tfunction createProduct(bytes32 _size, string delivery, bytes32 _userName, bytes32 _userEmail) public payable returns(bool success) {\r\n\t\t\r\n\t\trequire(msg.sender != 0);\r\n        require(startPrice != 0);\r\n        require(msg.value  >= startPrice);\r\n        require(productList.length <= 100);\r\n        \r\n\t\tbytes32 userId    = bytes32(msg.sender);\r\n\t\tuint productCount = productList.length + 1;\r\n\t\tproductId         = bytes32(productCount);\r\n\r\n        if(!isUser(userId)) {\r\n            require(_userName !=0);\r\n            require(_userEmail !=0);\r\n            createUser(_userName, _userEmail);\r\n        }\r\n\r\n\t\trequire(isUser(userId));\r\n\t\trequire(!isProduct(productId));\r\n\r\n\t\tproductStructs[productId].productListPointer = productList.push(productId)-1;\r\n\t\tproductStructs[productId].userKey            = userId;\r\n\t\tproductStructs[productId].size               = _size;\r\n\t\tproductStructs[productId].productPrice       = startPrice;\r\n\t\tproductStructs[productId].delivery           = delivery;\r\n\t\tproductStructs[productId].inSale             = false;\r\n\r\n\t\tproductStructs[productId].historyUser.push(msg.sender);\r\n\t\tproductStructs[productId].historyDate.push(now);\r\n\t\tproductStructs[productId].historyPrice.push(startPrice);\r\n\t\t\r\n\t\tuserStructs[userId].productKeyPointers[productId] = userStructs[userId].productKeys.push(productId) - 1;\r\n\t\t\r\n\t\tLogNewProduct(msg.sender, productId, userId);\r\n\t\t\r\n\t\tuint oddMoney = msg.value - startPrice;\r\n\r\n        this.transfer(startPrice);\r\n        uint countProduct = getProductCount();\r\n        startPrice        = ((countProduct * fixPrice) + fixPrice) * 10 ** decimals;\r\n\r\n        msg.sender.transfer(oddMoney);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction deleteUser(bytes32 userId) public onlyOwner returns(bool succes) {\r\n\r\n\t\trequire(isUser(userId));\r\n\t\trequire(userStructs[userId].productKeys.length <= 0);\r\n\r\n\t\tuint rowToDelete  = userStructs[userId].userListPointer;\r\n\t\tbytes32 keyToMove = userList[userList.length-1];\r\n\r\n\t\tuserList[rowToDelete]                  = keyToMove;\r\n\t\tuserStructs[keyToMove].userListPointer = rowToDelete;\r\n\t\tuserStructs[keyToMove].userEmail       = 0x0;\r\n\t\tuserStructs[keyToMove].userName        = 0x0;\r\n\r\n\t\tuserList.length--;\r\n\r\n\t\tLogUserDeleted(msg.sender, userId);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction deleteProduct(bytes32 _productId) public onlyOwner returns(bool success) {\r\n\t\t\r\n\t\trequire(isProduct(_productId));\r\n\t\t\r\n\t\tuint rowToDelete                              = productStructs[_productId].productListPointer;\r\n\t\tbytes32 keyToMove                             = productList[productList.length-1];\r\n\r\n\t\tproductList[rowToDelete]                      = keyToMove;\r\n\t\tproductStructs[_productId].productListPointer = rowToDelete;\r\n\t\t\r\n\t\tproductList.length--;\r\n\r\n\t\tbytes32 userId = productStructs[_productId].userKey;\r\n\t\trowToDelete    = userStructs[userId].productKeyPointers[_productId];\r\n\t\tkeyToMove      = userStructs[userId].productKeys[userStructs[userId].productKeys.length-1];\r\n\r\n\t\tuserStructs[userId].productKeys[rowToDelete]      = keyToMove;\r\n\t\tuserStructs[userId].productKeyPointers[keyToMove] = rowToDelete;\r\n\t\t\r\n\t\tuserStructs[userId].productKeys.length--;\r\n\t\t\r\n\t\tLogProductDeleted(msg.sender, _productId);\r\n\t\tuint countProduct = getProductCount();\r\n\t\tproductId = bytes32(countProduct - 1);\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction changeOwner(\r\n\t    bytes32 _productId, \r\n\t    bytes32 _oldOwner, \r\n\t    bytes32 _newOwner, \r\n\t    address oldOwner, \r\n\t    string _newDelivery,\r\n\t    bytes32 _userName,\r\n\t    bytes32 _userEmail\r\n\t    ) public payable returns (bool success) {\r\n\r\n\t    require(isProduct(_productId));\r\n\t    require(isUser(_oldOwner));\r\n\t    require(msg.value >= productStructs[_productId].productPrice);\r\n\r\n\t    if(isUserProduct(_productId, _newOwner)) return false;\r\n\r\n\t    if(!isUser(_newOwner)) {\r\n            require(_userName !=0);\r\n            require(_userEmail !=0);\r\n            createUser(_userName, _userEmail);\r\n        }\r\n\r\n\t    productStructs[_productId].userKey  = _newOwner;\r\n\t\tproductStructs[_productId].delivery = _newDelivery;\r\n\t\tproductStructs[_productId].inSale   = false;\r\n\r\n\t\tproductStructs[_productId].historyUser.push(msg.sender);\r\n\t\tproductStructs[_productId].historyDate.push(now);\r\n\t\tproductStructs[_productId].historyPrice.push(productStructs[_productId].productPrice);\r\n\t\t\r\n    \tuserStructs[_newOwner].productKeyPointers[_productId] = userStructs[_newOwner].productKeys.push(_productId) - 1;\r\n\r\n        bool start = false;\r\n\r\n    \tfor(uint i=0;i<userStructs[_oldOwner].productKeys.length;i++) {\r\n    \t    if((i+1) == userStructs[_oldOwner].productKeys.length){\r\n    \t        userStructs[_oldOwner].productKeys[i] = 0x0;\r\n    \t    }else{\r\n    \t        if(userStructs[_oldOwner].productKeys[i] == _productId || start){\r\n    \t            userStructs[_oldOwner].productKeys[i] = userStructs[_oldOwner].productKeys[i+1];\r\n    \t            start = true;\r\n    \t        }\r\n    \t    }\r\n\t\t}\r\n\t\t\r\n\t\tdelete userStructs[_oldOwner].productKeyPointers[_productId];\r\n\t\tdelete userStructs[_oldOwner].productKeys[userStructs[_oldOwner].productKeys.length-1];\r\n        userStructs[_oldOwner].productKeys.length--;\r\n\t\t\r\n\t\tthis.transfer(msg.value);\r\n\t\toldOwner.transfer(msg.value);\r\n\r\n\t    return true;\r\n\t}\r\n\t\r\n\tfunction changeInSale(bytes32 _productId, bytes32 _userId, uint _newPrice) public payable returns(bool success) {\r\n\r\n\t   require(isProduct(_productId));\r\n\t   require(isUser(_userId));\r\n\r\n\t   productStructs[_productId].productPrice = _newPrice;\r\n\t   productStructs[_productId].inSale       = true;\r\n\r\n\t   return true;\r\n\t}\r\n\r\n    function setPrices(uint _newPrice) internal {\r\n        require(_newPrice != 0);\r\n        if(startPrice == 0) {\r\n            startPrice = (1 ether / _newPrice) * 10 ** decimals;\r\n        } else {\r\n            uint countProduct = getProductCount();\r\n            startPrice = (1 ether / (countProduct * _newPrice)) * 10 ** decimals;\r\n        }\r\n    }\r\n\r\n    function setFixPrice(uint _newFixPrice) public payable onlyOwner returns(bool success) {\r\n        require(msg.sender   != 0);\r\n        require(_newFixPrice != 0);\r\n        fixPrice = _newFixPrice;\r\n        return true;\r\n    }\r\n\r\n    function setDecimals(uint _newDecimals) public payable onlyOwner returns(bool success) {\r\n        require(msg.sender != 0);\r\n        decimals = _newDecimals;\r\n        return true;\r\n    }\r\n\r\n    function() public payable {}\r\n\r\n    function SimpleMarket() public payable {\r\n        startPrice = 0.1 ether;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"richest\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"userId\",\"type\":\"bytes32\"}],\"name\":\"getUserProductCount\",\"outputs\":[{\"name\":\"productCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_userId\",\"type\":\"bytes32\"}],\"name\":\"getUserProductsKeys\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_productId\",\"type\":\"bytes32\"}],\"name\":\"getProductHistoryUser\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProductCount\",\"outputs\":[{\"name\":\"productCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"productList\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"userStructs\",\"outputs\":[{\"name\":\"userListPointer\",\"type\":\"uint256\"},{\"name\":\"userEmail\",\"type\":\"bytes32\"},{\"name\":\"userName\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_productId\",\"type\":\"bytes32\"}],\"name\":\"getProductHistoryPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"productStructs\",\"outputs\":[{\"name\":\"productListPointer\",\"type\":\"uint256\"},{\"name\":\"userKey\",\"type\":\"bytes32\"},{\"name\":\"size\",\"type\":\"bytes32\"},{\"name\":\"productPrice\",\"type\":\"uint256\"},{\"name\":\"delivery\",\"type\":\"string\"},{\"name\":\"inSale\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_productId\",\"type\":\"bytes32\"}],\"name\":\"getProductHistoryDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"userId\",\"type\":\"bytes32\"}],\"name\":\"deleteUser\",\"outputs\":[{\"name\":\"succes\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_productId\",\"type\":\"bytes32\"}],\"name\":\"isProduct\",\"outputs\":[{\"name\":\"isIndeed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mostSent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"becomeRichest\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fixPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"userId\",\"type\":\"bytes32\"}],\"name\":\"isUser\",\"outputs\":[{\"name\":\"isIndeed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newMostSent\",\"type\":\"uint256\"}],\"name\":\"setMostSent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newDecimals\",\"type\":\"uint256\"}],\"name\":\"setDecimals\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_productId\",\"type\":\"bytes32\"}],\"name\":\"deleteProduct\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_size\",\"type\":\"bytes32\"},{\"name\":\"delivery\",\"type\":\"string\"},{\"name\":\"_userName\",\"type\":\"bytes32\"},{\"name\":\"_userEmail\",\"type\":\"bytes32\"}],\"name\":\"createProduct\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userList\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userName\",\"type\":\"bytes32\"},{\"name\":\"_userEmail\",\"type\":\"bytes32\"}],\"name\":\"createUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_productId\",\"type\":\"bytes32\"},{\"name\":\"_userId\",\"type\":\"bytes32\"}],\"name\":\"isUserProduct\",\"outputs\":[{\"name\":\"isIndeed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUserCount\",\"outputs\":[{\"name\":\"userCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_productId\",\"type\":\"bytes32\"},{\"name\":\"_userId\",\"type\":\"bytes32\"},{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"changeInSale\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"productId\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"userId\",\"type\":\"bytes32\"},{\"name\":\"row\",\"type\":\"uint256\"}],\"name\":\"getUserProductAtIndex\",\"outputs\":[{\"name\":\"productKey\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFixPrice\",\"type\":\"uint256\"}],\"name\":\"setFixPrice\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_productId\",\"type\":\"bytes32\"},{\"name\":\"_oldOwner\",\"type\":\"bytes32\"},{\"name\":\"_newOwner\",\"type\":\"bytes32\"},{\"name\":\"oldOwner\",\"type\":\"address\"},{\"name\":\"_newDelivery\",\"type\":\"string\"},{\"name\":\"_userName\",\"type\":\"bytes32\"},{\"name\":\"_userEmail\",\"type\":\"bytes32\"}],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"userId\",\"type\":\"bytes32\"}],\"name\":\"LogNewUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"productId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"userId\",\"type\":\"bytes32\"}],\"name\":\"LogNewProduct\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"userId\",\"type\":\"bytes32\"}],\"name\":\"LogUserDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"productId\",\"type\":\"bytes32\"}],\"name\":\"LogProductDeleted\",\"type\":\"event\"}]","ContractName":"SimpleMarket","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://599a8a3b6d71595e874ecbe54613c3e7d9f38e86ed3e820ad43bfc2631c68df2"}]}