{"status":"1","message":"OK","result":[{"SourceCode":"// ECE 398 SC - Smart Contracts and Blockchain Security\r\n// http://soc1024.ece.illinois.edu/teaching/ece398sc/spring2018/\r\n// March 28, 2018\r\n\r\n// This is an extra credit smart contract Pinata. It contains a puzzle \r\n// involving hash functions (you should be able to solve it pretty easily)\r\n\r\npragma solidity ^0.4.21;\r\ncontract TestContract {\r\n    function SHA256(string s) public pure returns(bytes32) {\r\n        return(sha256(s));\r\n    }\r\n\r\n    mapping ( bytes32 => uint ) public amount;\r\n    \r\n    // Pay for a preimage\r\n    function commitTo(bytes32 hash) public payable {\r\n        amount[hash] = msg.value;\r\n    }\r\n    \r\n    // Claim a hash preimage\r\n    \r\n    // On mainnet, for the class Spring 2018,\r\n    // The contract's address is 0x9faf31f1546ec47e99321045bbfda8ab5ef60b74\r\n    //\r\n    // A value has already been committed to ($10 of ETH)\r\n    // The is the hash of a string, of the form \"word1 word2 word3\", where\r\n    // word1,2,3 are randomly chosen words from the BIP39 word list.\r\n    // Call the view\r\n    // \"amount(0xee67868e1463033b8cf103066b1d476b1698ca9a3e60c068430c520d2725b246)\"\r\n    // to check whether it has been taken or not!\r\n    // \r\n    // The first person to solve it wins the prize! The game is not too fun\r\n    // for anyone else unfortunately :(\r\n    \r\n    event BountyClaimed(string note, uint);\r\n    function claim(string s) public payable {\r\n        emit BountyClaimed(\"bounty claimed for eth amount:\", amount[sha256(s)]);\r\n        msg.sender.transfer( amount[sha256(s)] );\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"commitTo\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"s\",\"type\":\"string\"}],\"name\":\"SHA256\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"s\",\"type\":\"string\"}],\"name\":\"claim\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"note\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"BountyClaimed\",\"type\":\"event\"}]","ContractName":"TestContract","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0bdecf3738e0c30861e0c8ecf483c6a960e5581c1c41bde3235ec2361e2b1030"}]}