{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        require(newOwner != address(0));\r\n        OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract WorldCupTeam {\r\n\r\n    EtherWorldCup etherWorldCup;\r\n    string public teamName;\r\n    address public parentAddr;\r\n    uint256 public endTime = 1528988400; // 1528988400 - 2018-6-14 15:00 GMT\r\n\r\n    function WorldCupTeam(address _parent, string _name) public {\r\n        parentAddr = _parent;\r\n        etherWorldCup = EtherWorldCup(parentAddr);\r\n        teamName = _name;\r\n    }\r\n\r\n    // deposit will be transfered to the main pool in the parent contract\r\n    function () \r\n        public\r\n        payable \r\n    {\r\n        require(now <= endTime, \"Betting period has ended\");\r\n\r\n        parentAddr.transfer(msg.value);\r\n        etherWorldCup.UpdateBetOnTeams(teamName, msg.sender, msg.value);\r\n    }\r\n}\r\n\r\ncontract EtherWorldCup is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address=>bool) public isWorldCupTeam;\r\n    uint public numOfTeam;\r\n\r\n    mapping(string=>mapping(address=>uint256)) playersBetOnTeams; // address that bet on each team\r\n    mapping(string=>address[]) playersPick; // player addresses on each team\r\n    mapping(string=>uint256) PlayersBet; // bets on each team\r\n    uint public commission = 90; // number in percent\r\n\r\n    uint256 public sharingPool;\r\n    uint256 totalShare = 50; \r\n\r\n    // EVENTS\r\n    event UpdatedBetOnTeams(string team, address whom, uint256 betAmt);\r\n\r\n    // FUNCTIONS\r\n\r\n    function EtherWorldCup() public {}\r\n\r\n    function permitChildContract(address[] _teams)\r\n        public\r\n        onlyOwner\r\n    {\r\n        for (uint i = 0; i < _teams.length; i++) {\r\n            if (!isWorldCupTeam[_teams[i]]) numOfTeam++;\r\n            isWorldCupTeam[_teams[i]] = true;\r\n        }\r\n    }\r\n\r\n    function () payable {}\r\n\t\r\n    // update the bets by child contract only\r\n    function UpdateBetOnTeams(string _team, address _addr, uint256 _betAmt) \r\n    {   \r\n        require(isWorldCupTeam[msg.sender]);\r\n\r\n        if (playersBetOnTeams[_team][_addr] == 0) playersPick[_team].push(_addr); // prevent duplicate address\r\n        playersBetOnTeams[_team][_addr] = playersBetOnTeams[_team][_addr].add(_betAmt);\r\n        PlayersBet[_team] = PlayersBet[_team].add(_betAmt);\r\n        sharingPool = sharingPool.add(_betAmt);\r\n        UpdatedBetOnTeams(_team, _addr, _betAmt);\r\n    }\r\n\r\n    uint256 public numOfWinner;\r\n    address[] public winners;\r\n    uint256 public distributeAmount;\r\n\r\n    // distribute fund to winners\r\n    function distributeWinnerPool(string _winTeam, uint256 _share) \r\n        public \r\n        onlyOwner\r\n    {\r\n        distributeAmount = sharingPool.mul(commission).div(100).mul(_share).div(totalShare);\r\n        winners = playersPick[_winTeam]; // number of ppl bet on the winning team\r\n        numOfWinner = winners.length;\r\n\r\n        // for each address, to distribute the prize according to the ratio\r\n        for (uint i = 0; i < winners.length; i++) {\r\n            uint256 sendAmt = distributeAmount.mul(playersBetOnTeams[_winTeam][winners[i]]).div(PlayersBet[_winTeam]);\r\n            winners[i].transfer(sendAmt);\r\n        }\r\n    }\r\n\r\n    function getPlayerBet(string _team, address _addr) \r\n        public\r\n        returns (uint256)\r\n    {\r\n        return playersBetOnTeams[_team][_addr];\r\n    }\r\n\r\n    function getPlayersPick(string _team) \r\n        public\r\n        returns (address[])\r\n    {\r\n        return playersPick[_team];\r\n    }\r\n\r\n    function getTeamBet(string _team) \r\n        public \r\n        returns (uint256)\r\n    {\r\n        return PlayersBet[_team];\r\n    }\r\n\r\n    function updateCommission(uint _newPercent) \r\n        public \r\n        onlyOwner\r\n    {\r\n        commission = _newPercent;\r\n    }\r\n\r\n    function safeDrain() \r\n        public \r\n        onlyOwner \r\n    {\r\n        owner.transfer(this.balance);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"parentAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_parent\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"WorldCupTeam","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000c91370a1c69f9d48f40c30f5a18eb2d60baba7be00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000007456e676c616e6400000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://db112e2b92456d187a6b1427dd1d2356d11dc8fdf14487a7f37e89e0846cfdbc"}]}