{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract EthMashChain {\r\n\r\n    address public owner;\r\n    mapping (address => uint) public withdrawals;\r\n\r\n    int round;\r\n    mapping (int => address[3]) public participants;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        round = 1;\r\n        participants[1][0] = owner;\r\n    }\r\n\r\n    function publicGetBalance(address player) view public returns (uint) {\r\n        return withdrawals[player];\r\n    }\r\n\r\n    function publicGetState() view public returns (address[3][7]) {\r\n        return [\r\n            participants[round - 6],\r\n            participants[round - 5],\r\n            participants[round - 4],\r\n            participants[round - 3],\r\n            participants[round - 2],\r\n            participants[round - 1],\r\n            participants[round]\r\n        ];\r\n    }\r\n\r\n    function userWithdraw() public {\r\n        require(withdrawals[msg.sender] > 0);\r\n        uint amount = withdrawals[msg.sender];\r\n        withdrawals[msg.sender] = 0;\r\n        msg.sender.transfer(amount);\r\n    }\r\n\r\n    function userRegister() public payable {\r\n        require(msg.value == 105 finney);\r\n        \r\n        withdrawals[owner] += 5 finney;\r\n        participants[round][1] = msg.sender;\r\n\r\n        uint random = (uint(blockhash(block.number - 1)) + uint(participants[round][0]) + uint(participants[round][1]));\r\n\r\n        if (random % 2 == 0) {\r\n            participants[round][2] = participants[round][0];\r\n            withdrawals[participants[round][0]] += 100 finney;\r\n        } else {\r\n            participants[round][2] = participants[round][1];\r\n            withdrawals[participants[round][1]] += 100 finney;\r\n        }\r\n        \r\n        round++;\r\n        participants[round][0] = msg.sender;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participants\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"userRegister\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"userWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"publicGetBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"publicGetState\",\"outputs\":[{\"name\":\"\",\"type\":\"address[3][7]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"EthMashChain","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://db7174c9d9ea46ef339a8abdaab977ee7fc391af24323c1269c3680639ed095b"}]}