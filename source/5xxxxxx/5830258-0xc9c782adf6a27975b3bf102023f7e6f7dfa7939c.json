{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; }\r\n\r\ncontract FootCoin {\r\n    // Variáveis públicas do token\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals = 8;\r\n    // 8 casas decimais\r\n    uint256 public totalSupply;\r\n\r\n    // Criação de uma matriz com todos os saldos\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    // Geração de um evento público no blockchain que notificará os clientes\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    // Notificação aos clientes sobre a quantidade queimada\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    /**\r\n     * Função Constrctor\r\n     *\r\n     * Inicializa o contrato com número inicial dos tokens para o criador do contrato\r\n     */\r\n    function FootCoin(\r\n        uint256 initialSupply,\r\n        string tokenName,\r\n        string tokenSymbol\r\n    ) public {\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);  // Atualiza a oferta total com os valores decimais\r\n        balanceOf[msg.sender] = totalSupply;                // Envia ao criador todos os tokens iniciais\r\n        name = tokenName;                                   // Define o nome para fins de exibição\r\n        symbol = tokenSymbol;                               //  Definir o símbolo para fins de exibição\r\n    }\r\n\r\n    /**\r\n     * Transferência interna, só pode ser chamada por este contrato\r\n     */\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        // Impede a transferência para o endereço 0x0\r\n        require(_to != 0x0);\r\n        // Verifica o saldo do remetente\r\n        require(balanceOf[_from] >= _value);\r\n        // Verifica overflows\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n        // Guarda para conferência futura\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        // Subtrai do remetente\r\n        balanceOf[_from] -= _value;\r\n        // Adiciona o mesmo valor ao destinatário\r\n        balanceOf[_to] += _value;\r\n        Transfer(_from, _to, _value);\r\n        // Verificação usada para usar a análise estática do contrato, elas nunca devem falhar\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n\r\n    /**\r\n     * Transferência dos tokens\r\n     *\r\n     * Envio `_value` tokens para `_to` da sua conta\r\n     *\r\n     * @param _to O endereço do destinatário\r\n     * @param _value O valor a enviar\r\n     */\r\n    function transfer(address _to, uint256 _value) public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n    /**\r\n     * Destruição dos Tokens\r\n     *\r\n     * Remove `_value` tokens do sistema irreversivelmente\r\n     *\r\n     * @param _value O valor a ser queimado\r\n     */\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);   // Verifique se tem o suficiente\r\n        balanceOf[msg.sender] -= _value;            // Subtrair do remetente\r\n        totalSupply -= _value;                      // Atualiza o totalSupply\r\n        Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"FootCoin","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000012a05f200000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000008466f6f74436f696e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004464f4f5400000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://ab676cdd927511d7d3b45f8526c16d57672efc81b3a10a479a36e5e3d221cc9a"}]}