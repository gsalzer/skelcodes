{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\ncontract ExternalCurrencyPrice {\r\n    struct CurrencyValue {\r\n        uint64 value;\r\n        uint8 decimals;\r\n    }\r\n\r\n    struct Transaction {\r\n        string currency;\r\n        uint64 value;\r\n        string transactionId;\r\n        uint64 price;\r\n        uint8  decimals;\r\n    }\r\n\r\n    struct RefundTransaction {\r\n        uint sourceTransaction;\r\n        uint88 refundAmount;\r\n    }\r\n\r\n    mapping(string => CurrencyValue) prices;\r\n\r\n    Transaction[] public transactions;\r\n    RefundTransaction[] public refundTransactions;\r\n\r\n    address owner;\r\n\r\n    event NewTransaction(string currency, uint64 value, string transactionId,\r\n                                                            uint64 price, uint8 decimals);\r\n    event NewRefundTransaction(uint sourceTransaction, uint88 refundAmount);\r\n    event PriceSet(string currency, uint64 value, uint8 decimals);\r\n\r\n    modifier onlyAdministrator() {\r\n        require(tx.origin == owner);\r\n        _;\r\n    }\r\n\r\n    function ExternalCurrencyPrice()\r\n        public\r\n    {\r\n        owner = tx.origin;\r\n    }\r\n\r\n    //Example: 0.00007115 BTC will be setPrice(\"BTC\", 7115, 8)\r\n    function setPrice(string currency, uint64 value, uint8 decimals)\r\n        public\r\n        onlyAdministrator\r\n    {\r\n        prices[currency].value = value;\r\n        prices[currency].decimals = decimals;\r\n        PriceSet(currency, value, decimals);\r\n    }\r\n\r\n    function getPrice(string currency)\r\n        public\r\n        view\r\n        returns(uint64 value, uint8 decimals)\r\n    {\r\n        value = prices[currency].value;\r\n        decimals = prices[currency].decimals;\r\n    }\r\n\r\n    //Value is returned with accuracy of 18 decimals (same as token)\r\n    //Example: to calculate value of 1 BTC call\r\n    // should look like calculateAmount(\"BTC\", 100000000)\r\n    // See setPrice example (8 decimals)\r\n    function calculateAmount(string currency, uint64 value)\r\n        public\r\n        view\r\n        returns (uint88 amount)\r\n    {\r\n        require(prices[currency].value > 0);\r\n        require(value >= prices[currency].value);\r\n\r\n        amount = uint88( ( uint(value) * ( 10**18 ) ) / prices[currency].value );\r\n    }\r\n\r\n    function calculatePrice(string currency, uint88 amount)\r\n        public\r\n        view\r\n        returns (uint64 price)\r\n    {\r\n        require(prices[currency].value > 0);\r\n\r\n        price = uint64( amount * prices[currency].value );\r\n    }\r\n\r\n    function addTransaction(string currency, uint64 value, string transactionId)\r\n        public\r\n        onlyAdministrator\r\n        returns (uint newTransactionId)\r\n    {\r\n        require(prices[currency].value > 0);\r\n\r\n        newTransactionId = transactions.length;\r\n\r\n        Transaction memory transaction;\r\n\r\n        transaction.currency = currency;\r\n        transaction.value = value;\r\n        transaction.decimals = prices[currency].decimals;\r\n        transaction.price = prices[currency].value;\r\n        transaction.transactionId = transactionId;\r\n\r\n        transactions.push(transaction);\r\n\r\n        NewTransaction(transaction.currency, transaction.value, transaction.transactionId,\r\n            transaction.price, transaction.decimals);\r\n    }\r\n\r\n    function getNumTransactions()\r\n        public\r\n        constant\r\n        returns(uint length)\r\n    {\r\n        length = transactions.length;\r\n    }\r\n\r\n    function addRefundTransaction(uint sourceTransaction, uint88 refundAmount)\r\n        public\r\n        onlyAdministrator\r\n        returns (uint newTransactionId)\r\n    {\r\n        require(sourceTransaction < transactions.length);\r\n\r\n        newTransactionId = refundTransactions.length;\r\n\r\n        RefundTransaction memory transaction;\r\n\r\n        transaction.sourceTransaction = sourceTransaction;\r\n        transaction.refundAmount = refundAmount;\r\n\r\n        refundTransactions.push(transaction);\r\n\r\n        NewRefundTransaction(transaction.sourceTransaction, transaction.refundAmount);\r\n    }\r\n\r\n    function getNumRefundTransactions()\r\n        public\r\n        constant\r\n        returns(uint length)\r\n    {\r\n        length = refundTransactions.length;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getNumRefundTransactions\",\"outputs\":[{\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumTransactions\",\"outputs\":[{\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"currency\",\"type\":\"string\"}],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint64\"},{\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"refundTransactions\",\"outputs\":[{\"name\":\"sourceTransaction\",\"type\":\"uint256\"},{\"name\":\"refundAmount\",\"type\":\"uint88\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"uint64\"},{\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"uint64\"},{\"name\":\"transactionId\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint64\"},{\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"calculateAmount\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint88\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"uint64\"},{\"name\":\"transactionId\",\"type\":\"string\"}],\"name\":\"addTransaction\",\"outputs\":[{\"name\":\"newTransactionId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sourceTransaction\",\"type\":\"uint256\"},{\"name\":\"refundAmount\",\"type\":\"uint88\"}],\"name\":\"addRefundTransaction\",\"outputs\":[{\"name\":\"newTransactionId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint88\"}],\"name\":\"calculatePrice\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"currency\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"transactionId\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"NewTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sourceTransaction\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"refundAmount\",\"type\":\"uint88\"}],\"name\":\"NewRefundTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"currency\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"PriceSet\",\"type\":\"event\"}]","ContractName":"ExternalCurrencyPrice","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e0beabce5e5006c7da68e17c6ddc31835f640110e9699d18b7e2e6ab0791308f"}]}