{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n// ----------------------------------------------------------------------------\r\n// 'NTS' Nauticus Token Fixed Supply\r\n//\r\n// Symbol      : NTS\r\n// Name        : NauticusToken\r\n// Total supply: 2,500,000,000.000000000000000000\r\n// Decimals    : 18\r\n//\r\n// (c) Nauticus \r\n// ----------------------------------------------------------------------------\r\n\r\n/**\r\n * @dev the Permission contract provides basic access control.\r\n */\r\ncontract Permission {\r\n    address public owner;\r\n\tfunction Permission() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\tmodifier onlyOwner() { \r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction changeOwner(address newOwner) onlyOwner public returns (bool) {\r\n\t\trequire(newOwner != address(0));\r\n\t\towner = newOwner;\r\n        return true;\r\n\t}\r\n\t\t\r\n}\t\r\n\r\n/**\r\n * @dev maintains the safety of mathematical operations.\r\n */\r\nlibrary Math {\r\n\r\n\tfunction add(uint a, uint b) internal pure returns (uint c) {\r\n\t\tc = a + b;\r\n\t\t//require(c >= a);\r\n\t\t//require(c >= b);\r\n\t}\r\n\r\n\tfunction sub(uint a, uint b) internal pure returns (uint c) {\r\n\t\trequire(b <= a);\r\n\t\tc = a - b;\r\n\t}\r\n\r\n\tfunction mul(uint a, uint b) internal pure returns (uint c) {\r\n\t\tc = a * b;\r\n\t\trequire(a == 0 || c / a == b);\r\n\t}\r\n\r\n\tfunction div(uint a, uint b) internal pure returns (uint c) {\r\n\t\trequire(b > 0);\r\n\t\tc = a / b;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * @dev implements ERC20 standard, contains the token logic.\r\n */\r\ncontract NauticusToken is Permission {\r\n\r\n    //Transfer and Approval events\r\n    event Approval(address indexed owner, address indexed spender, uint val);\r\n    event Transfer(address indexed sender, address indexed recipient, uint val);\r\n\r\n    //implement Math lib for safe mathematical transactions.\r\n    using Math for uint;\r\n    \r\n    //Inception and Termination of Nauticus ICO\r\n    //          DD/MM/YYYY\r\n    // START    18/03/2018 NOON GMT\r\n    // END      18/05/2018 NOON GMT\r\n    //          \r\n    uint public constant inception = 1521331200;\r\n    uint public constant termination = 1526601600;\r\n\r\n    //token details\r\n    string public constant name = \"NauticusToken\";\r\n\tstring public constant symbol = \"NTS\";\r\n\tuint8 public constant decimals = 18;\r\n\r\n    //number of tokens that exist, totally.\r\n    uint public totalSupply;\r\n    \r\n    //if the tokens have been minted.\r\n    bool public minted = false;\r\n\r\n    //hardcap, maximum amount of tokens that can exist\r\n    uint public constant hardCap = 2500000000000000000000000000;\r\n    \r\n    //if if users are able to transfer tokens between each toher.\r\n    bool public transferActive = false;\r\n    \r\n    //mappings for token balances and allowances.\r\n    mapping(address => uint) balances;\r\n    mapping(address => mapping(address => uint)) allowed;\r\n    \r\n    /*\r\n        MODIFIERS\r\n    */\r\n\tmodifier canMint(){\r\n\t    require(!minted);\r\n\t    _;\r\n\t}\r\n\t\r\n\t/*modifier ICOActive() { \r\n\t\trequire(now > inception * 1 seconds && now < termination * 1 seconds); \r\n\t\t_; \r\n\t}*/\r\n\t\r\n\tmodifier ICOTerminated() {\r\n\t    require(now > termination * 1 seconds);\r\n\t    _;\r\n\t}\r\n\r\n\tmodifier transferable() { \r\n\t\t//if you are NOT owner\r\n\t\tif(msg.sender != owner) {\r\n\t\t\trequire(transferActive);\r\n\t\t}\r\n\t\t_;\r\n\t}\r\n\t\r\n    /*\r\n        FUNCTIONS\r\n    */  \r\n    /**\r\n        @dev approves a spender to spend an amount.\r\n        @param spender address of the spender\r\n        @param val the amount they will be approved to spend.\r\n        @return true\r\n     */\r\n    function approve(address spender, uint val) public returns (bool) {\r\n        allowed[msg.sender][spender] = val;\r\n        Approval(msg.sender, spender, val);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n        @dev function to transfer tokens inter-user\r\n        @param to address of the recipient of the tokens\r\n        @param val the amount to transfer\r\n        @return true\r\n     */\r\n\tfunction transfer(address to, uint val) transferable ICOTerminated public returns (bool) {\r\n\t\t//only send to a valid address\r\n\t\trequire(to != address(0));\r\n\t\trequire(val <= balances[msg.sender]);\r\n\r\n\t\t//deduct the val from sender\r\n\t\tbalances[msg.sender] = balances[msg.sender] - val;\r\n\r\n\t\t//give the val to the recipient\r\n\t\tbalances[to] = balances[to] + val;\r\n\r\n\t\t//emit transfer event \r\n\t\tTransfer(msg.sender, to, val);\r\n\t\treturn true;\r\n\t}\r\n\r\n    /**\r\n        @dev returns the balance of NTS for an address\r\n        @return balance NTS balance\r\n     */\r\n\tfunction balanceOf(address client) public constant returns (uint) {\r\n\t\treturn balances[client];\r\n\t}\r\n\r\n    /**\r\n        @dev transfer tokens from one address to another, independant of executor.\r\n        @param from the address of the sender of the tokens.\r\n        @param recipient the recipient of the tokens\r\n        @param val the amount of tokens\r\n        @return true\r\n     */\r\n\tfunction transferFrom(address from, address recipient, uint val) transferable ICOTerminated public returns (bool) {\r\n\t\t//to and from must be valid addresses\r\n\t\trequire(recipient != address(0));\r\n\t\trequire(from != address(0));\r\n\t\t//tokens must exist in from account\r\n\t\trequire(val <= balances[from]);\r\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(val);\r\n\t\tbalances[from] = balances[from] - val;\r\n\t\tbalances[recipient] = balances[recipient] + val;\r\n\r\n\t\tTransfer(from,recipient,val);\r\n        return true;\r\n\t}\r\n\t\r\n    /**\r\n        @dev allows Nauticus to toggle disable all inter-user transfers, ICE.\r\n        @param newTransferState whether inter-user transfers are allowed.\r\n        @return true\r\n     */\r\n\tfunction toggleTransfer(bool newTransferState) onlyOwner public returns (bool) {\r\n\t    require(newTransferState != transferActive);\r\n\t    transferActive = newTransferState;\r\n\t    return true;\r\n\t}\r\n\t\r\n    /**\r\n        @dev mint the appropriate amount of tokens, which is relative to tokens sold, unless hardcap is reached.\r\n        @param tokensToExist the amount of tokens purchased on the Nauticus platform.\r\n        @return true\r\n     */\r\n\tfunction mint(uint tokensToExist) onlyOwner ICOTerminated canMint public returns (bool) {\r\n\t    tokensToExist > hardCap ? totalSupply = hardCap : totalSupply = tokensToExist;\r\n\t    balances[owner] = balances[owner].add(totalSupply);\r\n        minted = true;\r\n        transferActive = true;\r\n\t    return true;\r\n\t    \r\n\t}\r\n    /**\r\n        @dev allocate an allowance to a user\r\n        @param holder person who holds the allowance\r\n        @param recipient the recipient of a transfer from the holder\r\n        @return remaining tokens left in allowance\r\n     */\r\n\t\r\n    function allowance(address holder, address recipient) public constant returns (uint) {\r\n        return allowed[holder][recipient];\r\n    }\r\n    \r\n    /**\r\n        @dev constructor, nothing needs to happen upon contract creation, left blank.\r\n     */\r\n    function NauticusToken () public {}\r\n\t\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTransferState\",\"type\":\"bool\"}],\"name\":\"toggleTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"termination\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"client\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"inception\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokensToExist\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"NauticusToken","CompilerVersion":"v0.4.22-nightly.2018.3.21+commit.8fd53c1c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fc209ce9e279bdaeff43db26aefe2af36e84d6a8113e75fc38a34041ae58a345"}]}