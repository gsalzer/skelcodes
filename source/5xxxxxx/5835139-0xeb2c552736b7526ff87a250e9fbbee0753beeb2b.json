{"status":"1","message":"OK","result":[{"SourceCode":"//Compatible Solidity Compiler Version\r\n\r\npragma solidity ^0.4.15;\r\n\r\n\r\n\r\n/*\r\nThis Ace Equity Token contract is based on the ERC20 token contract standard. Additional\r\nfunctionality has been integrated:\r\n\r\n*/\r\n\r\n\r\ncontract AceEquityToken  {\r\n    //AceEquityToken\r\n    string public name;\r\n    \r\n    //AceEquityToken Official Symbol\r\n\tstring public symbol;\r\n\t\r\n\t//AceEquityToken Decimals\r\n\tuint8 public decimals; \r\n  \r\n  //database to match user Accounts and their respective balances\r\n  mapping(address => uint) _balances;\r\n  mapping(address => mapping( address => uint )) _approvals;\r\n  \r\n  \r\n\r\n  address public dev;\r\n  \r\n  //Number of AceEquityToken in existence\r\n  uint public _supply;\r\n  \r\n\r\n  event TokenSwapOver();\r\n  \r\n  event Transfer(address indexed from, address indexed to, uint value );\r\n  event Approval(address indexed owner, address indexed spender, uint value );\r\n \r\n \r\n\r\n  //initialize AceEquityToken\r\n  //pass Ace Configurations to the Constructor\r\n function AceEquityToken(uint initial_balance, string tokenName, string tokenSymbol, uint8 decimalUnits) {\r\n    \r\n   \r\n    _supply += initial_balance;\r\n    _balances[msg.sender] = initial_balance;\r\n    \r\n    decimals = decimalUnits;\r\n\tsymbol = tokenSymbol;\r\n\tname = tokenName;\r\n\t\r\n\tdev = msg.sender;\r\n \r\n    \r\n  }\r\n\r\n//retrieve number of all AceEquityToken in existence\r\nfunction totalSupply() constant returns (uint supply) {\r\n    return _supply;\r\n  }\r\n\r\n//check Ace Token balance of an Ethereum account\r\nfunction balanceOf(address who) constant returns (uint value) {\r\n    return _balances[who];\r\n  }\r\n\r\n//check how many Ace Tokens a spender is allowed to spend from an owner\r\nfunction allowance(address _owner, address spender) constant returns (uint _allowance) {\r\n    return _approvals[_owner][spender];\r\n  }\r\n\r\n  // A helper to notify if overflow occurs\r\nfunction safeToAdd(uint a, uint b) internal returns (bool) {\r\n    return (a + b >= a && a + b >= b);\r\n  }\r\n\r\n//transfer an amount of Ace Tokens to an Ethereum address\r\nfunction transfer(address to, uint value) returns (bool ok) {\r\n\r\n    if(_balances[msg.sender] < value) revert();\r\n    \r\n    if(!safeToAdd(_balances[to], value)) revert();\r\n    \r\n\r\n    _balances[msg.sender] -= value;\r\n    _balances[to] += value;\r\n    Transfer(msg.sender, to, value);\r\n    return true;\r\n  }\r\n\r\n//spend Ace Tokens from another Ethereum account that approves you as spender\r\nfunction transferFrom(address from, address to, uint value) returns (bool ok) {\r\n    // if you don't have enough balance, throw\r\n    if(_balances[from] < value) revert();\r\n\r\n    // if you don't have approval, throw\r\n    if(_approvals[from][msg.sender] < value) revert();\r\n    \r\n    if(!safeToAdd(_balances[to], value)) revert();\r\n    \r\n    // transfer and return true\r\n    _approvals[from][msg.sender] -= value;\r\n    _balances[from] -= value;\r\n    _balances[to] += value;\r\n    Transfer(from, to, value);\r\n    return true;\r\n  }\r\n  \r\n  \r\n//allow another Ethereum account to spend Ace Tokens from your Account\r\nfunction approve(address spender, uint value)\r\n    \r\n    returns (bool ok) {\r\n    _approvals[msg.sender][spender] = value;\r\n    Approval(msg.sender, spender, value);\r\n    return true;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"_allowance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"initial_balance\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TokenSwapOver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"AceEquityToken","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000001d1de3d2d5c712f0000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000104143452045515549545920544f4b454e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034145540000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://c0719bf87e16508456533dde361f3eed6b4104bdd0e2df91349e8409cc70d3ab"}]}