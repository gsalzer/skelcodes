{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n/*\r\n!!! THIS CONTRACT IS EXPLOITABLE AND FOR EDUCATIONAL PURPOSES ONLY !!!\r\n\r\nThis smart contract allows a user to (insecurely) store funds\r\nin this smart contract and withdraw them at any later point in time\r\n*/\r\n\r\ncontract keepMyEther {\r\n    mapping(address => uint256) public balances;\r\n    \r\n    function () payable public {\r\n        balances[msg.sender] += msg.value;\r\n    }\r\n    \r\n    function withdraw() public {\r\n        msg.sender.call.value(balances[msg.sender])();\r\n        balances[msg.sender] = 0;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"keepMyEther","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cbb2a58492b707ffa322cdac1b00b7e206cc9cda634ebf0a5687a9c2cd29f388"}]}