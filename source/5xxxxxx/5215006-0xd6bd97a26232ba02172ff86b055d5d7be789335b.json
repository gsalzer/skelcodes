{"status":"1","message":"OK","result":[{"SourceCode":"contract TokenRecipient { \r\n\tfunction receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; \r\n} \r\n\r\ncontract IERC20Token {     \r\n\r\n\t/// @return total amount of tokens     \r\n\tfunction totalSupply() constant returns (uint256 totalSupply);     \r\n\r\n\t/// @param _owner The address from which the balance will be retrieved     \r\n\t/// @return The balance     \r\n\tfunction balanceOf(address _owner) constant returns (uint256 balance) {}     \r\n\r\n\t/// @notice send `_value` token to `_to` from `msg.sender`     \r\n\t/// @param _to The address of the recipient     \r\n\t/// @param _value The amount of token to be transferred     \r\n\t/// @return Whether the transfer was successful or not     \r\n\tfunction transfer(address _to, uint256 _value) returns (bool success) {}     \r\n\r\n\t/// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`     \r\n\t/// @param _from The address of the sender     \r\n\t/// @param _to The address of the recipient     \r\n\t/// @param _value The amount of token to be transferred     \r\n\t/// @return Whether the transfer was successful or not     \r\n\tfunction transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}     \r\n\r\n\t/// @notice `msg.sender` approves `_addr` to spend `_value` tokens     \r\n\t/// @param _spender The address of the account able to transfer the tokens     \r\n\t/// @param _value The amount of wei to be approved for transfer     \r\n\t/// @return Whether the approval was successful or not     \r\n\tfunction approve(address _spender, uint256 _value) returns (bool success) {}     \r\n\r\n\t/// @param _owner The address of the account owning tokens     \r\n\t/// @param _spender The address of the account able to transfer the tokens     \r\n\t/// @return Amount of remaining tokens allowed to spent     \r\n\tfunction allowance(address _owner, address _spender) constant returns (uint256 remaining) {}       \r\n\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);     \r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value); \r\n} \r\n\r\ncontract OrmeCash is IERC20Token {         \r\n  \r\n\tstring public name = \"OrmeCash\";\r\n\tstring public symbol = \"OMC\";\r\n\tuint8 public decimals = 18;\r\n\tuint256 public tokenFrozenUntilBlock;\r\n\taddress public owner;\r\n\tuint public mintingCap = 2000000000 * 10**18;\r\n   \r\n\tuint256 supply = 0;\r\n\tmapping (address => uint256) balances;\r\n\tmapping (address => mapping (address => uint256)) allowances;\r\n\tmapping (address => bool) restrictedAddresses;\r\n   \r\n\tevent Mint(address indexed _to, uint256 _value);\r\n\tevent Burn(address indexed _from, uint256 _value);\r\n\tevent TokenFrozen(uint256 _frozenUntilBlock);\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction OrmeCash() public {\r\n\t\trestrictedAddresses[0x0] = true;\r\n\t\trestrictedAddresses[address(this)] = true;\r\n\t\towner = msg.sender;\r\n\t}         \r\n  \r\n\tfunction totalSupply() constant public returns (uint256 totalSupply) {         \r\n\t\treturn supply;     \r\n\t}         \r\n\r\n\tfunction balanceOf(address _owner) constant public returns (uint256 balance) {         \r\n\t\treturn balances[_owner];     \r\n\t}     \r\n \r\n\tfunction transfer(address _to, uint256 _value) public returns (bool success) {     \t\r\n\t\trequire (block.number >= tokenFrozenUntilBlock);\r\n\t\trequire (!restrictedAddresses[_to]);\r\n\t\trequire (balances[msg.sender] >= _value);\r\n\t\trequire (balances[_to] + _value > balances[_to]);\r\n\t\tbalances[msg.sender] -= _value;\r\n\t\tbalances[_to] += _value;\r\n\t\tTransfer(msg.sender, _to, _value);       \r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool success) {     \t\r\n\t\trequire (block.number >= tokenFrozenUntilBlock);\r\n\t\tallowances[msg.sender][_spender] = _value;\r\n\t\tApproval(msg.sender, _spender, _value);\r\n\t\treturn true;     \r\n\t}     \r\n\r\n\tfunction approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {            \r\n\t\tTokenRecipient spender = TokenRecipient(_spender);      \r\n\t\tapprove(_spender, _value);\r\n\t\tspender.receiveApproval(msg.sender, _value, this, _extraData);    \r\n\t\treturn true;     \r\n\t}     \r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {     \t\r\n\t\trequire (block.number >= tokenFrozenUntilBlock);\r\n\t\trequire (!restrictedAddresses[_to]);\r\n\t\trequire (balances[_from] >= _value); \r\n\t\trequire (balances[_to] + _value >= balances[_to]);     \r\n\t\trequire (_value <= allowances[_from][msg.sender]);     \r\n\t\tbalances[_from] -= _value;\r\n\t\tbalances[_to] += _value;    \r\n\t\tallowances[_from][msg.sender] -= _value; \r\n\t\tTransfer(_from, _to, _value);  \r\n\t\treturn true;\r\n\t}         \r\n\r\n\tfunction allowance(address _owner, address _spender) constant public returns (uint256 remaining) {         \r\n\t\treturn allowances[_owner][_spender];     \r\n\t}         \r\n    \r\n\tfunction mintTokens(address _to, uint256 _amount) onlyOwner public {\r\n\t\trequire (!restrictedAddresses[_to]);\r\n\t\trequire (_amount != 0);\r\n\t\trequire (balances[_to] + _amount > balances[_to]);\r\n\t\trequire (mintingCap >= supply + _amount);\r\n\t\tsupply += _amount;\r\n\t\tbalances[_to] += _amount;\r\n\t\tMint(_to, _amount);\r\n\t\tTransfer(0x0, _to, _amount);\r\n\t}\r\n\r\n\tfunction burnTokens(uint _amount) public {\r\n\t\trequire(_amount <= balanceOf(msg.sender));\r\n\t\tsupply -= _amount;\r\n\t\tbalances[msg.sender] -= _amount;\r\n\t\tTransfer(msg.sender, 0x0, _amount);\r\n\t\tBurn(msg.sender, _amount);\r\n\t}\r\n\r\n\tfunction freezeTransfersUntil(uint256 _frozenUntilBlock) onlyOwner public {     \t\r\n\t\ttokenFrozenUntilBlock = _frozenUntilBlock;     \t\r\n\t\tTokenFrozen(_frozenUntilBlock);     \r\n\t}     \r\n\r\n\tfunction editRestrictedAddress(address _newRestrictedAddress) onlyOwner public {\r\n\t\trestrictedAddresses[_newRestrictedAddress] = !restrictedAddresses[_newRestrictedAddress];\r\n\t}\r\n\r\n\tfunction isRestrictedAddress(address _querryAddress) constant public returns (bool answer){\r\n\t\treturn restrictedAddresses[_querryAddress];\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) onlyOwner public {\r\n\t\towner = newOwner;\r\n\t}\r\n\r\n\tfunction killContract() onlyOwner public {\r\n\t\tselfdestruct(msg.sender);\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_querryAddress\",\"type\":\"address\"}],\"name\":\"isRestrictedAddress\",\"outputs\":[{\"name\":\"answer\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"killContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintingCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newRestrictedAddress\",\"type\":\"address\"}],\"name\":\"editRestrictedAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFrozenUntilBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_frozenUntilBlock\",\"type\":\"uint256\"}],\"name\":\"freezeTransfersUntil\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_frozenUntilBlock\",\"type\":\"uint256\"}],\"name\":\"TokenFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"OrmeCash","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://85406c19c343816062711111e2034bb119cb831ea1653b8081d427485007ebf9"}]}