{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n\r\ncontract ERC820Registry {\r\n    function getManager(address addr) public view returns(address);\r\n    function setManager(address addr, address newManager) public;\r\n    function getInterfaceImplementer(address addr, bytes32 iHash) public constant returns (address);\r\n    function setInterfaceImplementer(address addr, bytes32 iHash, address implementer) public;\r\n}\r\n\r\ncontract ERC820Implementer {\r\n    ERC820Registry erc820Registry = ERC820Registry(0x991a1bcb077599290d7305493c9A630c20f8b798);\r\n\r\n    function setInterfaceImplementation(string ifaceLabel, address impl) internal {\r\n        bytes32 ifaceHash = keccak256(ifaceLabel);\r\n        erc820Registry.setInterfaceImplementer(this, ifaceHash, impl);\r\n    }\r\n\r\n    function interfaceAddr(address addr, string ifaceLabel) internal constant returns(address) {\r\n        bytes32 ifaceHash = keccak256(ifaceLabel);\r\n        return erc820Registry.getInterfaceImplementer(addr, ifaceHash);\r\n    }\r\n\r\n    function delegateManagement(address newManager) internal {\r\n        erc820Registry.setManager(this, newManager);\r\n    }\r\n}\r\n\r\ninterface ERC777TokensRecipient {\r\n    function tokensReceived(address operator, address from, address to, uint amount, bytes userData, bytes operatorData) external;\r\n}\r\n\r\ncontract BurnableToken {\r\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes userData, bytes operatorData);\r\n    function burn(uint256 _amount, bytes _userData) public {\r\n        emit Burned(msg.sender, msg.sender, _amount, _userData, \"\");\r\n    }\r\n}\r\n\r\n/**\r\n * The Pay contract helps people to burn JaroCoin tokens (pay for Jaro services)\r\n * without knowing how to touch `burn` function from JaroCoin Token smart contract.\r\n */\r\ncontract Pay is ERC820Implementer, ERC777TokensRecipient {\r\n    BurnableToken public token;\r\n\r\n    event Payed(address operator, address from, address to, uint amount, bytes userData, bytes operatorData);\r\n\r\n    constructor(address _token) public {\r\n        setInterfaceImplementation(\"ERC777TokensRecipient\", this);\r\n        token = BurnableToken(_token);\r\n    }\r\n\r\n    // ERC777 tokens receiver callback\r\n    function tokensReceived(address operator, address from, address to, uint amount, bytes userData, bytes operatorData) external {\r\n        token.burn(amount, userData);\r\n        emit Payed(operator, from, to, amount, userData, operatorData);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"userData\",\"type\":\"bytes\"},{\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"userData\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Payed\",\"type\":\"event\"}]","ContractName":"Pay","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000002e5fb91975c3fb6f6d61c5859314e7c53af07912","Library":"","SwarmSource":"bzzr://7eee92589120327f405f444b8b39f0332565f0f1a4a9e17e9aa924540fd23d13"}]}