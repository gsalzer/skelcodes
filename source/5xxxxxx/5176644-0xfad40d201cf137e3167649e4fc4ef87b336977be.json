{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n/*\r\nThis is the pre-sale contract for MyEtherCity's lands. You can join our pre-sale on https://myethercity.com/  \r\nGame Name: MyEtherCity\r\nGame Link: https://myethercity.com/\r\n*/\r\n\r\ncontract MyEtherCity {\r\n\r\n    address ceoAddress = 0x699dE541253f253a4eFf0D3c006D70c43F2E2DaE;\r\n    address cfoAddress = 0x50f75eAD8CEE4376704d39842B14F400b4263cca;\r\n    \r\n    modifier onlyCeo() {\r\n        require (msg.sender == ceoAddress);\r\n        _;\r\n    }\r\n\r\n    uint256 curPriceLand = 1000000000000000;\r\n    uint256 stepPriceLand = 2000000000000000;\r\n    \r\n    // How many lands an addres own\r\n    mapping (address => uint) public addressLandsCount;\r\n    \r\n    struct Land {\r\n        address ownerAddress;\r\n        uint256 pricePaid;\r\n        uint256 curPrice;\r\n        bool isForSale;\r\n    }\r\n    Land[] lands;\r\n\r\n    /*\r\n    This function allows players to purchase lands during our pre-sale.\r\n    The price of lands is raised by 0.002 eth after each successful purchase.\r\n    */\r\n    function purchaseLand() public payable {\r\n        // We verify that the amount paid is the right amount\r\n        require(msg.value == curPriceLand);\r\n        \r\n        // We verify that we don't create more than 300 lands\r\n        require(lands.length < 300);\r\n        \r\n        // We create the land\r\n        lands.push(Land(msg.sender, msg.value, 0, false));\r\n        addressLandsCount[msg.sender]++;\r\n        \r\n        // We increase the price of the lands\r\n        curPriceLand = curPriceLand + stepPriceLand;\r\n        \r\n        // We transfer the amount paid to the cfo\r\n        cfoAddress.transfer(msg.value);\r\n    }\r\n    \r\n    \r\n    // These functions will return the details of a piece of land\r\n    function getLand(uint _landId) public view returns (\r\n        address ownerAddress,\r\n        uint256 pricePaid,\r\n        uint256 curPrice,\r\n        bool isForSale\r\n    ) {\r\n        Land storage _land = lands[_landId];\r\n\r\n        ownerAddress = _land.ownerAddress;\r\n        pricePaid = _land.pricePaid;\r\n        curPrice = _land.curPrice;\r\n        isForSale = _land.isForSale;\r\n    }\r\n    \r\n    // Get all the lands owned by a specific address\r\n    function getSenderLands(address _senderAddress) public view returns(uint[]) {\r\n        uint[] memory result = new uint[](addressLandsCount[_senderAddress]);\r\n        uint counter = 0;\r\n        for (uint i = 0; i < lands.length; i++) {\r\n          if (lands[i].ownerAddress == _senderAddress) {\r\n            result[counter] = i;\r\n            counter++;\r\n          }\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    // This function will return the data about the pre-sale (how many lands purchased, current price)\r\n    function getPreSaleData() public view returns(uint, uint256) {\r\n        return(lands.length, curPriceLand);\r\n    } \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"purchaseLand\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressLandsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPreSaleData\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_senderAddress\",\"type\":\"address\"}],\"name\":\"getSenderLands\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_landId\",\"type\":\"uint256\"}],\"name\":\"getLand\",\"outputs\":[{\"name\":\"ownerAddress\",\"type\":\"address\"},{\"name\":\"pricePaid\",\"type\":\"uint256\"},{\"name\":\"curPrice\",\"type\":\"uint256\"},{\"name\":\"isForSale\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"MyEtherCity","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://96110998dabe3ed9173c102027fcb53b7494e31a8652690d8ac9bbef5c435b9d"}]}