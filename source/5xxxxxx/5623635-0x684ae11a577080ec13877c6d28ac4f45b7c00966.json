{"status":"1","message":"OK","result":[{"SourceCode":"/*! mytilcoinstorage.sol | (c) 2018 Develop by BelovITLab LLC (smartcontract.ru), author @stupidlovejoy | License: MIT */\r\n\r\npragma solidity 0.4.21;\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    modifier onlyOwner() { require(msg.sender == owner); _; }\r\n\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        owner = newOwner;\r\n        OwnershipTransferred(owner, newOwner);\r\n    }\r\n}\r\n\r\ncontract Manageable is Ownable {\r\n    mapping(address => bool) public managers;\r\n\r\n    event ManagerAdded(address indexed manager);\r\n    event ManagerRemoved(address indexed manager);\r\n\r\n    modifier onlyManager() { require(managers[msg.sender]); _; }\r\n\r\n    function addManager(address _manager) onlyOwner public {\r\n        require(_manager != address(0));\r\n\r\n        managers[_manager] = true;\r\n\r\n        ManagerAdded(_manager);\r\n    }\r\n\r\n    function removeManager(address _manager) onlyOwner public {\r\n        require(_manager != address(0));\r\n\r\n        managers[_manager] = false;\r\n\r\n        ManagerRemoved(_manager);\r\n    }\r\n}\r\n\r\ncontract MytilcoinStorage is Manageable {\r\n    struct Picture {\r\n        string hash;\r\n        uint32 rows;\r\n        uint32 cols;\r\n        uint32 width;\r\n        uint32 height;\r\n        string image;\r\n        string name;\r\n        string author;\r\n    }\r\n\r\n    mapping(bytes32 => Picture) public pictures;\r\n    mapping(bytes32 => bool) public hashes;\r\n\r\n    event AddPicture(bytes32 indexed hash, uint32 rows, uint32 cols, uint32 width, uint32 height, string image, string name, string author);\r\n    event SetHash(bytes32 indexed hash);\r\n\r\n    function MytilcoinStorage() public {\r\n        addManager(msg.sender);\r\n        addManager(0x73b1046A185bF68c11b4c90d79Cffc2E07519951);\r\n        addManager(0x7b15d3e5418E5140fF827127Ee1f44d2d65F8710);\r\n        addManager(0x977482e6f7Ad897Ee70c33A20f30c369f4BF7265);\r\n        addManager(0xa611D8C5183E533e13ecfFb3E9F9628e9dEF2755);\r\n        addManager(0xe16BBd0Cf49F4cC1Eb92fFBbaa71d7580b966097);\r\n        addManager(0x5c9E1b25113A5c18fBFd7655cCd5C160bf79B51E);\r\n        addManager(0x0812B7182aC1C5285E10644CdF5E9BB6234d0AF0);\r\n        addManager(0x52e5689a151CA40B56C217B5dB667F66A197e7Bb);\r\n        addManager(0xA71396Fcb7efd57AeC5FaD1Eb7e5503cDE136123);\r\n        addManager(0xF3f90257dAd60f8c4496D35117e04eAbb507b713);\r\n        addManager(0x63B182305Bd56f0b250a4974Cc872169ab706c53);\r\n        addManager(0x28d2446cE3F1F99B477DD77F9C6361f5b57DcFd8);\r\n        addManager(0x5c3770785Ebd50Ef7bC91b8afC8a7F86F014c54E);\r\n        addManager(0x0fDdAe9D4E6670e3699bdBA3058a84b92DFf95b2);\r\n        addManager(0x5CB547C3fA7abd51E508C980470fb86B731cd0bf);\r\n        addManager(0xEB9e2e0a32BD1De66762cCaef5438586C6C9ac3c);\r\n        addManager(0x6dBA00A685e0E4485A838E31A3a7EB63A5935702);\r\n        addManager(0x2EF9a68D2A9fB9aC4919e2D85cf22780e5EBFCfD);\r\n        addManager(0x7e4FD70e4F8c355d51E2CCFb15aF87d47e6D2167);\r\n        addManager(0x51ce146F1128Ff424Dc918441B46Cb56cC95a172);\r\n        addManager(0x2f2eb8766EC9EaAc7EBa6E851794DB3B45669D2A);\r\n    }\r\n\r\n    function addPicture(string _hash, uint32 _rows, uint32 _cols, uint32 _width, uint32 _height, string _image, string _name, string _author) onlyManager public returns(bool success) {\r\n        bytes32 key = str_to_bytes32(_hash);\r\n\r\n        require(!(pictures[key].rows > 0));\r\n        require(_rows > 0 && _cols > 0 && _width > 0 && _height > 0);\r\n        \r\n        pictures[key] = Picture({\r\n            hash: _hash,\r\n            rows: _rows,\r\n            cols: _cols,\r\n            width: _width,\r\n            height: _height,\r\n            image: _image,\r\n            name: _name,\r\n            author: _author\r\n        });\r\n\r\n        AddPicture(key, _rows, _cols, _width, _height, _image, _name, _author);\r\n\r\n        return true;\r\n    }\r\n\r\n    function setHash(string _hash) onlyManager public returns(bool success) {\r\n        bytes32 key = str_to_bytes32(_hash);\r\n\r\n        hashes[key] = true;\r\n\r\n        SetHash(key);\r\n\r\n        return true;\r\n    }\r\n    \r\n    function str_to_bytes32(string memory source) private pure returns(bytes32 result) {\r\n        bytes memory tempEmptyStringTest = bytes(source);\r\n        if(tempEmptyStringTest.length == 0) {\r\n            return 0x0;\r\n        }\r\n\r\n        assembly {\r\n            result := mload(add(source, 32))\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_hash\",\"type\":\"string\"},{\"name\":\"_rows\",\"type\":\"uint32\"},{\"name\":\"_cols\",\"type\":\"uint32\"},{\"name\":\"_width\",\"type\":\"uint32\"},{\"name\":\"_height\",\"type\":\"uint32\"},{\"name\":\"_image\",\"type\":\"string\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_author\",\"type\":\"string\"}],\"name\":\"addPicture\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pictures\",\"outputs\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"rows\",\"type\":\"uint32\"},{\"name\":\"cols\",\"type\":\"uint32\"},{\"name\":\"width\",\"type\":\"uint32\"},{\"name\":\"height\",\"type\":\"uint32\"},{\"name\":\"image\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"author\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setHash\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"addManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"removeManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"hashes\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"managers\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"rows\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"cols\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"width\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"height\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"image\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"author\",\"type\":\"string\"}],\"name\":\"AddPicture\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"SetHash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ManagerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ManagerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"MytilcoinStorage","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://910666684e0759207b63a3faf1624f5b46b4c38b76c69a4f2bec4503d2b31d9f"}]}