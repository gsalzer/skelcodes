{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract TestERC721 {\r\n    \r\n    address private _admin;\r\n\r\n    uint256 private _totalSupply;\r\n    mapping(address => uint) private balances;\r\n    uint256 private index;\r\n\r\n    mapping(uint256 => address) private tokenOwners;\r\n    mapping(uint256 => bool) private tokenExists;\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n    mapping(uint256 => token) tokens;\r\n\r\n    struct token {\r\n        string name;\r\n        string link;\r\n        uint256 price;\r\n    }\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);\r\n    event Approval(address indexed _from, address indexed _to, uint256 _tokenId);\r\n\r\n    function TestERC721() public {\r\n        _admin = msg.sender;\r\n    }\r\n    \r\n    function admin() public constant returns (address) {\r\n        return _admin;\r\n    }\r\n    \r\n    function name() public pure returns (string) {\r\n        return \"Test Token\";\r\n    }\r\n\r\n    function symbol() public pure returns (string) {\r\n        return \"TTE\";\r\n    }\r\n\r\n    function totalSupply() public constant returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address _address) public constant returns (uint) {\r\n        return balances[_address];\r\n    }\r\n\r\n    function changeAdmin(address _address) public {\r\n        require(msg.sender == _admin);\r\n        _admin = _address;\r\n    }\r\n    function ownerOf(uint256 _tokenId) public constant returns (address) {\r\n        require(tokenExists[_tokenId]);\r\n        return tokenOwners[_tokenId];\r\n    }\r\n\r\n    function approve(address _to, uint256 _tokenId) public {\r\n        require(msg.sender == ownerOf(_tokenId));\r\n        require(msg.sender != _to);\r\n        allowed[msg.sender][_to] = _tokenId;\r\n        emit Approval(msg.sender, _to, _tokenId);\r\n    }\r\n\r\n    function takeOwnership(uint256 _tokenId) public {\r\n        require(tokenExists[_tokenId]);\r\n        address oldOwner = ownerOf(_tokenId);\r\n        address newOwner = msg.sender;\r\n        require(newOwner != oldOwner);\r\n        require(allowed[oldOwner][newOwner] == _tokenId);\r\n        balances[oldOwner] -= 1;\r\n        tokenOwners[_tokenId] = newOwner;\r\n        balances[newOwner] += 1;\r\n        emit Transfer(oldOwner, newOwner, _tokenId);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _tokenId) public {\r\n        address currentOwner = msg.sender;\r\n        address newOwner = _to;\r\n        require(tokenExists[_tokenId]);\r\n        require(currentOwner == ownerOf(_tokenId));\r\n        require(currentOwner != newOwner);\r\n        require(newOwner != address(0));\r\n        balances[currentOwner] -= 1;\r\n        tokenOwners[_tokenId] = newOwner;\r\n        balances[newOwner] += 1;\r\n        emit Transfer(currentOwner, newOwner, _tokenId);\r\n    }\r\n\r\n    function tokenMetadata(uint256 _tokenId) public constant returns (string, string, uint256) {\r\n        return (tokens[_tokenId].name, tokens[_tokenId].link, tokens[_tokenId].price);\r\n    }\r\n    \r\n    function createtoken(string _name, string _link, uint256 _price) public returns (bool success) {\r\n        tokens[index] = token(_name, _link, _price);\r\n        tokenOwners[index] = msg.sender;\r\n        tokenExists[index] = true;\r\n        index += 1;\r\n        balances[msg.sender] += 1;\r\n        _totalSupply += 1;\r\n        return true;\r\n    }\r\n\r\n    function updatetoken(uint256 _tokenId, string _name, string _link, uint256 _price) public returns (bool success) {\r\n        require(tokenExists[_tokenId]);\r\n        tokens[_tokenId] = token(_name, _link, _price);\r\n        return true;\r\n    }\r\n\r\n    function buytoken(uint256 _tokenId) payable public {\r\n        address newOwner = msg.sender;\r\n        address oldOwner = tokenOwners[_tokenId];\r\n        require(tokenExists[_tokenId]);\r\n        require(newOwner != ownerOf(_tokenId));\r\n        require(msg.value >= tokens[_tokenId].price);\r\n        uint256 _remainder = msg.value - tokens[_tokenId].price;\r\n        newOwner.transfer(_remainder);\r\n        uint256 price20 = tokens[_tokenId].price/5;\r\n        _admin.transfer(price20/20);\r\n        oldOwner.transfer(tokens[_tokenId].price - price20/20);\r\n        tokens[_tokenId].price += price20; \r\n        tokenOwners[_tokenId] = newOwner;\r\n        balances[oldOwner] -= 1;\r\n        balances[newOwner] += 1;\r\n        emit Transfer(oldOwner, newOwner, _tokenId);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buytoken\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenMetadata\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_link\",\"type\":\"string\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"createtoken\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"takeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_link\",\"type\":\"string\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updatetoken\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"TestERC721","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://17ac4c882b1893b8aee5d42765b8a75e9027e1e762fed3c3c2f62c0cc68fdcf1"}]}