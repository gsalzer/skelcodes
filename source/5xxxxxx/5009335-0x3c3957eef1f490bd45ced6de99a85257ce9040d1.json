{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract PreSale {\r\n    \r\n    event Pause();\r\n    event Unpause();\r\n\r\n    address public adminAddress;\r\n\r\n    bool public paused = false;\r\n    \r\n    modifier onlyAdmin() {\r\n        require(msg.sender == adminAddress);\r\n        _;\r\n    }\r\n    \r\n    modifier whenNotPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n\r\n    modifier whenPaused() {\r\n        require(paused);\r\n        _;\r\n    }\r\n    \r\n    function pause() public onlyAdmin whenNotPaused returns(bool) {\r\n        paused = true;\r\n        Pause();\r\n        return true;\r\n    }\r\n\r\n    function unpause() public onlyAdmin whenPaused returns(bool) {\r\n        paused = false;\r\n        Unpause();\r\n        return true;\r\n    }\r\n    \r\n    function PreSale() public {\r\n        paused = true;\r\n        adminAddress = msg.sender;\r\n    }\r\n    \r\n    function withdrawBalance() external onlyAdmin {\r\n        adminAddress.transfer(this.balance);\r\n    }\r\n    \r\n    function _random(uint _lower, uint _range, uint _jump) internal view returns (uint) {\r\n        uint number = uint(block.blockhash(block.number - _jump)) % _range;\r\n        if (number < _lower) {\r\n            number = _lower;\r\n        }\r\n        return number;\r\n    }\r\n    \r\n    event preSaleCreated(uint saleId, uint heroId, uint price);\r\n    event preSaleSuccess(address buyer, uint saleId, uint heroId, uint price);\r\n    event autoPreSaleSuccess(address buyer, uint heroId);\r\n    event priceChanged(uint saleId, uint newPrice);\r\n    event auctionCreated(uint auctionId, uint heroId, uint startPrice);\r\n    event bidSuccess(uint auctionId, address bidder, uint bidAmount);\r\n    event drawItemLottery(address player, uint numOfItem);\r\n    event drawHeroLottery(address player, bool win);\r\n\r\n    \r\n    struct Sale {\r\n        uint heroId;\r\n        uint price;\r\n        bool ifSold;\r\n    }\r\n    \r\n    struct Auction {\r\n        uint heroId;\r\n        uint currentPrice;\r\n        address bidder;\r\n    }\r\n    \r\n    Sale[] sales;\r\n    Auction[] auctions;\r\n    \r\n    uint public oneEth = 1 ether;\r\n    \r\n    mapping (uint => address) public heroIdToBuyer;\r\n    mapping (address => uint) public BuyerLotteryTimes;\r\n    mapping (address => uint) public playerWinItems;\r\n    mapping (address => uint) public playerWinHeroes;\r\n    \r\n    function createPreSale(\r\n        uint _heroId,\r\n        uint _price\r\n    ) \r\n        public \r\n        onlyAdmin \r\n        returns (uint)\r\n    {\r\n        Sale memory _sale = Sale({\r\n            heroId: _heroId,\r\n            price: _price,\r\n            ifSold: false\r\n        });\r\n        \r\n        uint newSaleId = sales.push(_sale) - 1;\r\n        \r\n        preSaleCreated(newSaleId, _heroId, _price);\r\n        \r\n        return newSaleId;\r\n    }\r\n    \r\n    function multiCreate(uint _startId, uint _amount, uint _price) public onlyAdmin {\r\n        for (uint i; i < _amount; i++) {\r\n            createPreSale(_startId + i, _price);\r\n        }\r\n    }\r\n    \r\n    function changePrice(uint _saleId, uint _price) public onlyAdmin {\r\n        Sale storage sale = sales[_saleId];\r\n        require(sale.ifSold == false);\r\n        sale.price = _price;\r\n        priceChanged(_saleId, _price);\r\n    }\r\n    \r\n    function totalSales() public view returns (uint) {\r\n        return sales.length;\r\n    }\r\n    \r\n    function buyPreSale(uint _saleId) \r\n        public\r\n        payable\r\n        whenNotPaused\r\n    {\r\n        Sale storage _sale = sales[_saleId];\r\n        \r\n        require(_sale.ifSold == false);\r\n        uint _heroId = _sale.heroId;\r\n        uint _price = _sale.price;\r\n        require(msg.value >= _price);\r\n        require(heroIdToBuyer[_heroId] == address(0));\r\n        \r\n        heroIdToBuyer[_heroId] = msg.sender;\r\n        _sale.ifSold = true;\r\n        uint lotteryTime = _price/oneEth + 1;\r\n        BuyerLotteryTimes[msg.sender] += lotteryTime;\r\n        \r\n        preSaleSuccess(msg.sender, _saleId, _heroId, _price);\r\n        \r\n    }\r\n    uint public standFeeBefore500 = 800 finney;\r\n    uint public standFeeAfter500 = 500 finney;\r\n    function setAutoBuyFee(uint _fee, uint _pick) public onlyAdmin returns (uint) {\r\n        require(_pick == 0 || _pick == 1);\r\n        if (_pick == 0) {\r\n            standFeeBefore500 = _fee;\r\n            return standFeeBefore500;\r\n        } else if (_pick == 1) {\r\n            standFeeAfter500 = _fee;\r\n            return standFeeAfter500;\r\n        }\r\n    }\r\n    \r\n    \r\n    function autoBuy(uint _heroId) public payable whenNotPaused{\r\n        require(heroIdToBuyer[_heroId] == address(0));\r\n        require(_heroId >= 101 && _heroId <= 998);\r\n        require(_heroId != 200 && _heroId != 300 && _heroId != 400 && _heroId != 500 && _heroId != 600 && _heroId != 700 && _heroId != 800 && _heroId != 900);\r\n        require(_heroId != 111 && _heroId != 222 && _heroId != 333 && _heroId != 444 && _heroId != 555 && _heroId != 666 && _heroId != 777 && _heroId != 888 && _heroId != 999);\r\n        \r\n        if (_heroId < 500) {\r\n            require(msg.value >= standFeeBefore500);\r\n            heroIdToBuyer[_heroId] = msg.sender;\r\n        } else {\r\n            require(msg.value >= standFeeAfter500);\r\n            heroIdToBuyer[_heroId] = msg.sender;\r\n        }\r\n        \r\n        BuyerLotteryTimes[msg.sender] ++;\r\n        autoPreSaleSuccess(msg.sender, _heroId);\r\n    }\r\n    \r\n    function getPreSale(uint _saleId) public view returns(\r\n        uint heroId,\r\n        uint price,\r\n        address buyer\r\n    ) {\r\n        Sale memory sale = sales[_saleId];\r\n        \r\n        heroId = sale.heroId;\r\n        price = sale.price;\r\n        buyer = heroIdToBuyer[heroId];\r\n    }\r\n    \r\n    function createAuction(uint _heroId, uint _startPrice) public onlyAdmin returns (uint) {\r\n        Auction memory auction = Auction({\r\n            heroId: _heroId,\r\n            currentPrice: _startPrice,\r\n            bidder: address(0)\r\n        });\r\n        uint newAuctionId = auctions.push(auction) - 1;\r\n        \r\n        auctionCreated(newAuctionId, _heroId, _startPrice);\r\n        \r\n        return newAuctionId;\r\n    }\r\n    \r\n    uint public transferFee = 10 finney;\r\n    \r\n    function setTransferFee(uint _fee) public onlyAdmin {\r\n        transferFee = _fee;\r\n    }\r\n    \r\n    function bidAuction(uint _auctionId) public payable whenNotPaused{\r\n        Auction storage auction = auctions[_auctionId];\r\n        require(auction.bidder != msg.sender);\r\n        require(msg.value > auction.currentPrice);\r\n        if (auction.bidder != address(0)) {\r\n            address lastBidder = auction.bidder;\r\n            lastBidder.transfer(auction.currentPrice - transferFee);\r\n        }\r\n        auction.currentPrice = msg.value;\r\n        auction.bidder = msg.sender;\r\n        BuyerLotteryTimes[msg.sender] ++;\r\n        \r\n        bidSuccess(_auctionId, msg.sender, msg.value);\r\n    }\r\n    \r\n    function getAuction(uint _auctionId) public view returns (\r\n        uint heroId,\r\n        uint currentPrice,\r\n        address bidder\r\n    ) {\r\n        Auction memory auction = auctions[_auctionId];\r\n        \r\n        heroId = auction.heroId;\r\n        currentPrice = auction.currentPrice;\r\n        bidder = auction.bidder;\r\n    }\r\n    \r\n    function totalAuctions() public view returns (uint) {\r\n        return auctions.length;\r\n    }\r\n    \r\n    function _ItemRandom(uint _jump) internal view returns (uint) {\r\n        uint num = _random(0,1000,_jump);\r\n        if (num >= 0 && num <= 199) {\r\n            return 2;\r\n        } else if (num >= 200 && num <= 449) {\r\n            return 1;\r\n        } else if (num >= 450 && num <= 649) {\r\n            return 0;\r\n        } else if (num >= 650 && num <= 799) {\r\n            return 3;\r\n        } else if (num >= 800 && num <= 899) {\r\n            return 4;\r\n        } else if (num >= 900 && num <= 969) {\r\n            return 5;\r\n        } else if (num >= 970 && num <= 999) {\r\n            return 6;\r\n        }\r\n    }\r\n    \r\n    uint rad = _random(1,13,1);\r\n    \r\n    function itemLottery() public whenNotPaused returns (uint) {\r\n        require(BuyerLotteryTimes[msg.sender] >= 1);\r\n        uint _jump = _random(1, 89, rad);\r\n        if (rad < 13) {\r\n            rad ++;\r\n        } else {\r\n            rad = 1;\r\n        }\r\n        BuyerLotteryTimes[msg.sender] --;\r\n        uint result = _ItemRandom(_jump);\r\n        playerWinItems[msg.sender] += result;\r\n        drawItemLottery(msg.sender, result);\r\n        return result;\r\n    }\r\n    \r\n    function heroLottery() public whenNotPaused returns (bool) {\r\n        require(BuyerLotteryTimes[msg.sender] >= 1);\r\n        uint _jump = _random(1, 89, rad);\r\n        if (rad < 13) {\r\n            rad ++;\r\n        } else {\r\n            rad = 1;\r\n        }\r\n        BuyerLotteryTimes[msg.sender] --;\r\n        bool result = false;\r\n        uint lottery = _random(10, 100, _jump);\r\n        if (lottery == 10) {\r\n            result = true;\r\n            playerWinHeroes[msg.sender] ++;\r\n        }\r\n        drawHeroLottery(msg.sender, result);\r\n        return result;\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_heroId\",\"type\":\"uint256\"},{\"name\":\"_startPrice\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"heroLottery\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oneEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerWinItems\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerWinHeroes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_saleId\",\"type\":\"uint256\"}],\"name\":\"buyPreSale\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAuctions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"heroIdToBuyer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"itemLottery\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standFeeBefore500\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"BuyerLotteryTimes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_heroId\",\"type\":\"uint256\"}],\"name\":\"autoBuy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_auctionId\",\"type\":\"uint256\"}],\"name\":\"bidAuction\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSales\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_auctionId\",\"type\":\"uint256\"}],\"name\":\"getAuction\",\"outputs\":[{\"name\":\"heroId\",\"type\":\"uint256\"},{\"name\":\"currentPrice\",\"type\":\"uint256\"},{\"name\":\"bidder\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"},{\"name\":\"_pick\",\"type\":\"uint256\"}],\"name\":\"setAutoBuyFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setTransferFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_saleId\",\"type\":\"uint256\"}],\"name\":\"getPreSale\",\"outputs\":[{\"name\":\"heroId\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"buyer\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_startId\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"multiCreate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standFeeAfter500\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_saleId\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_heroId\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"createPreSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"heroId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"preSaleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"heroId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"preSaleSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"heroId\",\"type\":\"uint256\"}],\"name\":\"autoPreSaleSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"priceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"heroId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"startPrice\",\"type\":\"uint256\"}],\"name\":\"auctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"bidSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"numOfItem\",\"type\":\"uint256\"}],\"name\":\"drawItemLottery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"win\",\"type\":\"bool\"}],\"name\":\"drawHeroLottery\",\"type\":\"event\"}]","ContractName":"PreSale","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5f8b9661f99bb98853d07e30d8c1da33cd685e383c2b4b08f397007c53e438fe"}]}