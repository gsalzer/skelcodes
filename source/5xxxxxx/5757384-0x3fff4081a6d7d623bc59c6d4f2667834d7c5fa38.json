{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.24;\r\n\r\n/// @title An optional contract that allows us to associate metadata to our cards.\r\n/// @author The CryptoStrikers Team\r\ncontract StrikersMetadata {\r\n\r\n  /// @dev The base url for the API where we fetch the metadata.\r\n  ///   ex: https://us-central1-cryptostrikers-api.cloudfunctions.net/cards/\r\n  string public apiUrl;\r\n\r\n  constructor(string _apiUrl) public {\r\n    apiUrl = _apiUrl;\r\n  }\r\n\r\n  /// @dev Returns the API URL for a given token Id.\r\n  ///   ex: https://us-central1-cryptostrikers-api.cloudfunctions.net/cards/22\r\n  ///   Right now, this endpoint returns a JSON blob conforming to OpenSea's spec.\r\n  ///   see: https://docs.opensea.io/docs/2-adding-metadata\r\n  function tokenURI(uint256 _tokenId) external view returns (string) {\r\n    string memory _id = uint2str(_tokenId);\r\n    return strConcat(apiUrl, _id);\r\n  }\r\n\r\n  // String helpers below were taken from Oraclize.\r\n  // https://github.com/oraclize/ethereum-api/blob/master/oraclizeAPI_0.4.sol\r\n\r\n  function strConcat(string _a, string _b) internal pure returns (string) {\r\n    bytes memory _ba = bytes(_a);\r\n    bytes memory _bb = bytes(_b);\r\n    string memory ab = new string(_ba.length + _bb.length);\r\n    bytes memory bab = bytes(ab);\r\n    uint k = 0;\r\n    for (uint i = 0; i < _ba.length; i++) bab[k++] = _ba[i];\r\n    for (i = 0; i < _bb.length; i++) bab[k++] = _bb[i];\r\n    return string(bab);\r\n  }\r\n\r\n  function uint2str(uint i) internal pure returns (string) {\r\n    if (i == 0) return \"0\";\r\n    uint j = i;\r\n    uint len;\r\n    while (j != 0) {\r\n      len++;\r\n      j /= 10;\r\n    }\r\n    bytes memory bstr = new bytes(len);\r\n    uint k = len - 1;\r\n    while (i != 0) {\r\n      bstr[k--] = byte(48 + i % 10);\r\n      i /= 10;\r\n    }\r\n    return string(bstr);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"apiUrl\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_apiUrl\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"StrikersMetadata","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004068747470733a2f2f75732d63656e7472616c312d63727970746f737472696b6572732d70726f642e636c6f756466756e6374696f6e732e6e65742f6361726473","Library":"","SwarmSource":"bzzr://42c5143d55e8a45fe01982898fa22ade5b8b07e1347e27b07961c7b4d464a754"}]}