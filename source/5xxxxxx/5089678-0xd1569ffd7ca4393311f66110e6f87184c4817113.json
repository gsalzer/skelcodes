{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * Ludum - mean \"For gaming\" in Latin. Play, earn, live full of life. In Game.\r\n * LDM will show you new generation of Gaming.\r\n * LDM is in-game cyrrency of Privateers.Life game.\r\n * https://privateers.life\r\n */\r\n\r\n\r\npragma solidity ^0.4.18;\r\n\r\n\r\ncontract Ownable {\r\n\r\n\taddress public owner;\r\n\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\tfunction Ownable() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n\t\trequire(newOwner != address(0));\r\n\t\tOwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t}\r\n\r\n}\r\n\r\n\r\ninterface Token {\r\n\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool);\r\n\tfunction balanceOf(address _owner) public constant returns (uint256 balance);\r\n\r\n}\r\n\r\n\r\ncontract LudumAirdrop is Ownable {\r\n\r\n\tToken token;\r\n\r\n\tevent TransferredToken(address indexed to, uint256 value);\r\n\tevent FailedTransfer(address indexed to, uint256 value);\r\n\r\n\tmodifier whenDropIsActive() {\r\n\t\tassert(isActive());\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction LudumAirdrop () public {\r\n\t    address _tokenAddr = 0x28a40acF39b1D3C932f42dD8068ad00A5Ad6448F;\r\n\t    token = Token(_tokenAddr);\r\n\t}\r\n\r\n\tfunction isActive() public constant returns (bool) {\r\n\t\treturn (\r\n\t\t\ttokensAvailable() > 0 // Tokens must be available to send\r\n\t\t);\r\n\t}\r\n\r\n\t//below function can be used when you want to send every recipeint with different number of tokens\r\n\tfunction sendLudumToMany(address[] dests, uint256[] values) whenDropIsActive onlyOwner external {\r\n\t\tuint256 i = 0;\r\n\t\twhile (i < dests.length) {\r\n\t\t\t//uint256 toSend = values[i] * 10**18;\r\n\t\t\tuint256 toSend = values[i];\r\n\t\t\tsendInternally(dests[i] , toSend, values[i]);\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\t// this function can be used when you want to send same number of tokens to all the recipients\r\n\tfunction sendLudumToSingle(address[] dests, uint256 value) whenDropIsActive onlyOwner external {\r\n\t\tuint256 i = 0;\r\n\t\t//uint256 toSend = value * 10**18;\r\n\t\tuint256 toSend = value;\r\n\t\twhile (i < dests.length) {\r\n\t\t\tsendInternally(dests[i] , toSend, value);\r\n\t\t\ti++;\r\n\t\t}\r\n\t}  \r\n\r\n\tfunction sendInternally(address recipient, uint256 tokensToSend, uint256 valueToPresent) internal {\r\n\t\tif(recipient == address(0)) return;\r\n\r\n\t\tif(tokensAvailable() >= tokensToSend) {\r\n\t\t\ttoken.transfer(recipient, tokensToSend);\r\n\t\t\tTransferredToken(recipient, valueToPresent);\r\n\t\t} else {\r\n\t\t\tFailedTransfer(recipient, valueToPresent); \r\n\t\t}\r\n\t}   \r\n\r\n\r\n\tfunction tokensAvailable() public constant returns (uint256) {\r\n\t\treturn token.balanceOf(this);\r\n\t}\r\n\r\n\tfunction sendRemainsToOwner() public onlyOwner {\r\n\t\tuint256 balance = tokensAvailable();\r\n\t\trequire (balance > 0);\r\n\t\ttoken.transfer(owner, balance);\r\n\t\t//selfdestruct(owner);\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensAvailable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sendRemainsToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"sendLudumToMany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"sendLudumToSingle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferredToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FailedTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"LudumAirdrop","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f72b26d974ad5d5cb54ad6d91974acf91b231b7dd9627de5ec2abf2739883231"}]}