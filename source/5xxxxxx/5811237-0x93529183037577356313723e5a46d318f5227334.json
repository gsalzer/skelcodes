{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\nlibrary SafeMath {\r\n    \r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n \r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n \r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n \r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n  \r\n}\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    function Owned() {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner() {\r\n        assert(msg.sender == owner);\r\n        _;\r\n    }\r\n    function transferOwnership(address newOwner) external onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n}\r\n\r\ncontract SmartConvas is Owned{\r\n    \r\n    using SafeMath for uint256;\r\n    \r\n    event paintEvent(address sender, uint x, uint y, uint r, uint g, uint b);\r\n    \r\n    struct Pixel {\r\n        address currentOwner;\r\n        uint r;\r\n        uint g;\r\n        uint b;\r\n        uint currentPrice;\r\n    }\r\n    \r\n    //переменная стоимости пикселя\r\n    uint defaultPrice = 1069120000000000; //1 $ по курсу 937p/eth  in wei\r\n    uint priceInOneEther = 1000000000000000000;\r\n    \r\n    Pixel [1000][1000] pixels;\r\n    \r\n    function getAddress(uint x, uint y) constant returns (address) {\r\n        Pixel memory p = pixels[x][y];\r\n        return p.currentOwner;\r\n    }\r\n    \r\n    function getColor(uint x, uint y) constant returns(uint[3])\r\n    {\r\n        return ([pixels[x][y].r, pixels[x][y].g, pixels[x][y].b]);\r\n    }\r\n    \r\n    function getCurrentPrice(uint x, uint y) constant returns (uint)\r\n    {\r\n        Pixel memory p = pixels[x][y];\r\n        return p.currentPrice;\r\n    }\r\n    \r\n    function addPixelPayable(uint x, uint y, uint r, uint g, uint b) payable  {\r\n\r\n        Pixel memory px = pixels[x][y];\r\n        \r\n        if(msg.value<px.currentPrice)\r\n        {\r\n            revert();\r\n        }\r\n        \r\n\r\n       \r\n        px.r = r;\r\n        px.g = g;\r\n        px.b = b;\r\n        \r\n        if(px.currentOwner>0)\r\n        {\r\n            px.currentOwner.transfer(msg.value.mul(75).div(100));\r\n        }\r\n        \r\n        px.currentOwner = msg.sender;\r\n        if(px.currentPrice ==0)\r\n        {\r\n            px.currentPrice = defaultPrice;\r\n        }\r\n        else\r\n        {\r\n            px.currentPrice = px.currentPrice.mul(2);\r\n        }\r\n        \r\n        pixels[x][y] = px;\r\n        \r\n        emit paintEvent(msg.sender,x,y,r,g,b);\r\n  \r\n    }\r\n    function GetBalance() constant returns (uint)\r\n    {\r\n        return address(this).balance;\r\n    }\r\n    function GetOwner() constant returns (address)\r\n    {\r\n        return owner;\r\n    }\r\n    \r\n    function withdraw() onlyOwner returns(bool) {\r\n        msg.sender.transfer(address(this).balance);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"},{\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"getCurrentPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"},{\"name\":\"y\",\"type\":\"uint256\"},{\"name\":\"r\",\"type\":\"uint256\"},{\"name\":\"g\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"addPixelPayable\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"},{\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"},{\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"getColor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[3]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"x\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"y\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"r\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"g\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"paintEvent\",\"type\":\"event\"}]","ContractName":"SmartConvas","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://53cdba9eb6bceaca4c0c6399b7c85bbc97e4b765c1a3d1c9c5857ab6e5ed365c"}]}