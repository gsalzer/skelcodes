{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract SafeMath {\r\n  function mulSafe(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n       return 0;\r\n     }\r\n     uint256 c = a * b;\r\n     assert(c / a == b);\r\n     return c;\r\n   }\r\n\r\n  function divSafe(uint256 a, uint256 b) internal pure returns (uint256) {\r\n     uint256 c = a / b;\r\n     return c;\r\n  }\r\n\r\n  function subSafe(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n     return a - b;\r\n   }\r\n\r\n  function addSafe(uint256 a, uint256 b) internal pure returns (uint256) {\r\n     uint256 c = a + b;\r\n    assert(c >= a);\r\n     return c;\r\n   }\r\n}\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n    function Constructor() public { owner = msg.sender; }\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\ncontract ERC20 {\r\n   uint256 public totalSupply;\r\n   function balanceOf(address who) public view returns (uint256);\r\n   function transfer(address to, uint256 value) public returns (bool);\r\n   event Transfer(address indexed from, address indexed to, uint256 value);\r\n   function allowance(address owner, address spender) public view returns (uint256);\r\n   function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n   function approve(address spender, uint256 value) public returns (bool);\r\n   event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract ERC223 {\r\n    function transfer(address to, uint value, bytes data) public;\r\n    event Transfer(address indexed from, address indexed to, uint value, bytes indexed data);\r\n}\r\n\r\ncontract ERC223ReceivingContract { \r\n    function tokenFallback(address _from, uint _value, bytes _data) public;\r\n}\r\n\r\ncontract StandardToken is ERC20, ERC223, SafeMath, Owned {\r\n  event ReleaseSupply(address indexed receiver, uint256 value, uint256 releaseTime);\r\n  mapping(address => uint256) balances;\r\n  mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[msg.sender]);\r\n    balances[msg.sender] = subSafe(balances[msg.sender], _value);\r\n    balances[_to] = addSafe(balances[_to], _value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n    return balances[_owner];\r\n   }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[_from]);\r\n    require(_value <= allowed[_from][msg.sender]);\r\n\r\n    balances[_from] = subSafe(balances[_from], _value);\r\n     balances[_to] = addSafe(balances[_to], _value);\r\n     allowed[_from][msg.sender] = subSafe(allowed[_from][msg.sender], _value);\r\n    Transfer(_from, _to, _value);\r\n     return true;\r\n   }\r\n\r\n   function approve(address _spender, uint256 _value) public returns (bool) {\r\n     allowed[msg.sender][_spender] = _value;\r\n     Approval(msg.sender, _spender, _value);\r\n     return true;\r\n   }\r\n\r\n  function allowance(address _owner, address _spender) public view returns (uint256) {\r\n     return allowed[_owner][_spender];\r\n   }\r\n\r\n   function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n     allowed[msg.sender][_spender] = addSafe(allowed[msg.sender][_spender], _addedValue);\r\n     Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n     return true;\r\n   }\r\n\r\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n     uint oldValue = allowed[msg.sender][_spender];\r\n     if (_subtractedValue > oldValue) {\r\n       allowed[msg.sender][_spender] = 0;\r\n     } else {\r\n       allowed[msg.sender][_spender] = subSafe(oldValue, _subtractedValue);\r\n    }\r\n     Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n     return true;\r\n   }\r\n\r\n    function transfer(address _to, uint _value, bytes _data) public {\r\n        require(_value > 0 );\r\n        if(isContract(_to)) {\r\n            ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\r\n            receiver.tokenFallback(msg.sender, _value, _data);\r\n        }\r\n        balances[msg.sender] = subSafe(balances[msg.sender], _value);\r\n        balances[_to] = addSafe(balances[_to], _value);\r\n        Transfer(msg.sender, _to, _value, _data);\r\n    }\r\n\r\n    function isContract(address _addr) private view returns (bool is_contract) {\r\n      uint length;\r\n      assembly {\r\n            //retrieve the size of the code on target address, this needs assembly\r\n            length := extcodesize(_addr)\r\n      }\r\n      return (length>0);\r\n    }\r\n\r\n}\r\n\r\ncontract TBToken is StandardToken {\r\n  string public name = 'TBToken';\r\n  string public symbol = 'TB';\r\n  uint public decimals = 18;\r\n\r\n  uint256 public createTime         = 1527436800;  //20180528 //1528128000;  //20180605 00:00:00\r\n  uint256 public bonusEnds          = 1528646400;  //20180611 00:00:00\r\n  uint256 public endDate            = 1529078400;  //20180616 00:00:00\r\n  uint256 firstAnnual               = 1559318400;\r\n  uint256 secondAnnual              = 1590940800;\r\n  uint256 thirdAnnual               = 1622476800;\r\n\r\n  uint256 public INITIAL_SUPPLY     = 1000000000;\r\n  uint256 public frozenForever      =  400000000;\r\n\r\n  uint256 firstAnnualReleasedAmount =  150000000;\r\n  uint256 secondAnnualReleasedAmount=  150000000;\r\n  uint256 thirdAnnualReleasedAmount =  100000000;\r\n\r\n  function TBToken() public {\r\n    totalSupply = 200000000 ; \r\n    balances[msg.sender] = totalSupply * 10 ** uint256(decimals);\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function releaseSupply() public onlyOwner returns(uint256 _actualRelease) {\r\n    uint256 releaseAmount = getReleaseAmount();\r\n    require(releaseAmount > 0);\r\n    balances[owner] = addSafe(balances[owner], releaseAmount * 10 ** uint256(decimals));\r\n    totalSupply = addSafe(totalSupply, releaseAmount);\r\n    Transfer(address(0), msg.sender, releaseAmount);\r\n    return releaseAmount;\r\n  }\r\n\r\n  function getReleaseAmount() internal returns(uint256 _actualRelease) {\r\n        uint256 _amountToRelease;\r\n        if (    now >= firstAnnual\r\n             && now < secondAnnual\r\n             && firstAnnualReleasedAmount > 0) {\r\n            _amountToRelease = firstAnnualReleasedAmount;\r\n            firstAnnualReleasedAmount = 0;\r\n        } else if (    now >= secondAnnual \r\n                    && now < thirdAnnual\r\n                    && secondAnnualReleasedAmount > 0) {\r\n            _amountToRelease = secondAnnualReleasedAmount;\r\n            secondAnnualReleasedAmount = 0;\r\n        } else if (    now >= thirdAnnual \r\n                    && thirdAnnualReleasedAmount > 0) {\r\n            _amountToRelease = thirdAnnualReleasedAmount;\r\n            thirdAnnualReleasedAmount = 0;\r\n        } else {\r\n            _amountToRelease = 0;\r\n        }\r\n        return _amountToRelease;\r\n    }\r\n\r\n    function () public payable {\r\n        require(now >= createTime && now <= endDate);\r\n        uint tokens;\r\n        if (now <= bonusEnds) {\r\n            tokens = msg.value * 2480;\r\n        } else {\r\n            tokens = msg.value * 2000;\r\n        }\r\n        require(tokens <= balances[owner]);\r\n        balances[msg.sender] = addSafe(balances[msg.sender], tokens);\r\n        balances[owner] = subSafe(balances[owner], tokens);\r\n        //_totalSupply = addSafe(_totalSupply, tokens);\r\n        Transfer(address(0), msg.sender, tokens);\r\n        owner.transfer(msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusEnds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"frozenForever\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Constructor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseSupply\",\"outputs\":[{\"name\":\"_actualRelease\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"ReleaseSupply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"TBToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9d53b087c75459527e38fccfe8bcd31d247681398bc1c2c77a54d5992ac3f289"}]}