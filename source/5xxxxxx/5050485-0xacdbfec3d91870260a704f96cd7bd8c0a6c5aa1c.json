{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract DollarAuction {\r\n\r\n  struct Bid {\r\n    address sender;\r\n    uint amount;\r\n    uint time;\r\n  }\r\n\r\n  Bid[] bids;\r\n  uint bidsPtr = 0;\r\n  uint interval = 60;\r\n  uint step = 1;\r\n  uint minBid = 10000000000000000;\r\n  uint total = 0;\r\n\r\n  event LogBidMade(address accountAddress, uint amount, uint time);\r\n  event LogBidFailed(address accountAddress, uint amount, uint time);\r\n  event LogBidFinal(address accountAddress, uint amount, uint time, uint profit);\r\n  event LogBidReturned(address accountAddress, uint amount, uint time);\r\n  event LogPayoutFailed(address accountAddress, uint amount, uint time);\r\n  event BidSaved(Bid bid);\r\n\r\n  function DollarAuction() {\r\n    bids.length = 100000;\r\n  }\r\n\r\n  function bid() public payable returns (bool success) {\r\n      //if (bidsPtr == bids.length -1) bids.length = bids.length + 100;\r\n      uint amount = msg.value;\r\n      uint lastBidAmount = getLastBidAmount();\r\n      address sender = msg.sender;\r\n      uint time = now;\r\n      require(amount > minBid);\r\n      require(amount > (lastBidAmount + step));\r\n      bids[bidsPtr] = Bid({time: now, sender: sender, amount: amount});\r\n      bidsPtr = bidsPtr + 1;\r\n      total = total + amount;\r\n      LogBidMade(sender, amount, time);\r\n      if (isBidFinal()) {\r\n        uint payout = total;\r\n        total = 0;\r\n        if (!sender.send(payout)) {\r\n          total = payout;\r\n          LogPayoutFailed(sender, amount, time);\r\n          return false;\r\n        }\r\n        bidsPtr = 0;\r\n        LogBidFinal(sender, amount, time, total);\r\n      }\r\n      return true;\r\n  }\r\n\r\n  function getLastBidAmount() constant public returns (uint lastBidAmount) {\r\n    if (bidsPtr == 0) return 0;\r\n    else return bids[bidsPtr-1].amount;\r\n  }\r\n\r\n  function getTotalBidded() constant public returns (uint totalBidded) {\r\n    return total;\r\n  }\r\n\r\n  function isBidFinal() constant public returns (bool isFinal) {\r\n    if (bidsPtr <= 1) return false;\r\n    return ((bids[bidsPtr-1].time - bids[bidsPtr-2].time) > interval);\r\n  }\r\n\r\n  function getTimeOfLastBid() constant public returns (uint time) {\r\n    if (bidsPtr == 0) return now;\r\n    return bids[bidsPtr-1].time;\r\n  }\r\n\r\n  function getMinBid() constant public returns (uint minimumBid) {\r\n    return minBid;\r\n  }\r\n\r\n  function () public payable {\r\n    revert();\r\n  }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"bid\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTimeOfLastBid\",\"outputs\":[{\"name\":\"time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalBidded\",\"outputs\":[{\"name\":\"totalBidded\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMinBid\",\"outputs\":[{\"name\":\"minimumBid\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastBidAmount\",\"outputs\":[{\"name\":\"lastBidAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isBidFinal\",\"outputs\":[{\"name\":\"isFinal\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"accountAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"LogBidMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"accountAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"LogBidFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"accountAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"profit\",\"type\":\"uint256\"}],\"name\":\"LogBidFinal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"accountAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"LogBidReturned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"accountAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"LogPayoutFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"time\",\"type\":\"uint256\"}],\"indexed\":false,\"name\":\"bid\",\"type\":\"tuple\"}],\"name\":\"BidSaved\",\"type\":\"event\"}]","ContractName":"DollarAuction","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8e8968fcd0dfb5d921a7745e51595d55d15ee6e649b7c1eed689631841ac2a57"}]}