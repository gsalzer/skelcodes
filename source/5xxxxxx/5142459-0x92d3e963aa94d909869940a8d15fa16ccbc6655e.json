{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Ownable {\r\naddress public owner;\r\n\r\n\r\nevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\nfunction Ownable() public {\r\nowner = msg.sender;\r\n}\r\n\r\nmodifier onlyOwner() {\r\nrequire(msg.sender == owner);\r\n_;\r\n}\r\n\r\nfunction transferOwnership(address newOwner) public onlyOwner {\r\nrequire(newOwner != address(0));\r\nOwnershipTransferred(owner, newOwner);\r\nowner = newOwner;\r\n}\r\n}\r\n\r\ncontract Pausable is Ownable {\r\nevent Pause();\r\nevent Unpause();\r\n\r\nbool public paused = false;\r\n\r\nmodifier whenNotPaused() {\r\nrequire(!paused);\r\n_;\r\n}\r\n\r\nmodifier whenPaused() {\r\nrequire(paused);\r\n_;\r\n}\r\n\r\nfunction pause() onlyOwner whenNotPaused public {\r\npaused = true;\r\nPause();\r\n}\r\n\r\nfunction unpause() onlyOwner whenPaused public {\r\npaused = false;\r\nUnpause();\r\n}\r\n\r\nfunction kill() onlyOwner public {\r\n    if (msg.sender == owner) selfdestruct(owner);\r\n}\r\n}\r\n\r\ncontract ERC20Basic {\r\nuint256 public totalSupply;\r\nfunction balanceOf(address who) public view returns (uint256);\r\nfunction transfer(address to, uint256 value) public returns (bool);\r\nevent Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n\r\ncontract ERC20 is ERC20Basic {\r\nfunction allowance(address owner, address spender) public view returns (uint256);\r\nfunction transferFrom(address from, address to, uint256 value) public returns (bool);\r\nfunction approve(address spender, uint256 value) public returns (bool);\r\nevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\nfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\nif (a == 0) {\r\nreturn 0;\r\n}\r\nuint256 c = a * b;\r\nassert(c / a == b);\r\nreturn c;\r\n}\r\n\r\nfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\nuint256 c = a / b;\r\nreturn c;\r\n}\r\n\r\nfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\nassert(b <= a);\r\nreturn a - b;\r\n}\r\n\r\nfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\nuint256 c = a + b;\r\nassert(c >= a);\r\nreturn c;\r\n}\r\n}\r\n\r\n\r\ncontract BasicToken is ERC20Basic {\r\nusing SafeMath for uint256;\r\n\r\nmapping(address => uint256) balances;\r\n\r\nfunction transfer(address _to, uint256 _value) public returns (bool) {\r\nrequire(_to != address(0));\r\nrequire(_value <= balances[msg.sender]);\r\n\r\nbalances[msg.sender] = balances[msg.sender].sub(_value);\r\nbalances[_to] = balances[_to].add(_value);\r\nTransfer(msg.sender, _to, _value);\r\nreturn true;\r\n}\r\n\r\nfunction balanceOf(address _owner) public view returns (uint256 balance) {\r\nreturn balances[_owner];\r\n}\r\n}\r\n\r\ncontract StandardToken is ERC20, BasicToken {\r\n\r\nmapping (address => mapping (address => uint256)) internal allowed;\r\n\r\nfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\nrequire(_to != address(0));\r\nrequire(_value <= balances[_from]);\r\nrequire(_value <= allowed[_from][msg.sender]);\r\n\r\nbalances[_from] = balances[_from].sub(_value);\r\nbalances[_to] = balances[_to].add(_value);\r\nallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\nTransfer(_from, _to, _value);\r\nreturn true;\r\n}\r\n\r\nfunction approve(address _spender, uint256 _value) public returns (bool) {\r\nallowed[msg.sender][_spender] = _value;\r\nApproval(msg.sender, _spender, _value);\r\nreturn true;\r\n}\r\n\r\nfunction allowance(address _owner, address _spender) public view returns (uint256) {\r\nreturn allowed[_owner][_spender];\r\n}\r\n\r\nfunction increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\nallowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\nApproval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\nreturn true;\r\n}\r\n\r\nfunction decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\nuint oldValue = allowed[msg.sender][_spender];\r\nif (_subtractedValue > oldValue) {\r\nallowed[msg.sender][_spender] = 0;\r\n} else {\r\nallowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n}\r\nApproval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\nreturn true;\r\n}\r\n}\r\n\r\ncontract MintableToken is StandardToken, Ownable {\r\nevent Mint(address indexed to, uint256 amount);\r\nevent MintFinished();\r\n\r\nbool public mintingFinished = false;\r\n\r\n\r\nmodifier canMint() {\r\nrequire(!mintingFinished);\r\n_;\r\n}\r\n\r\nfunction mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {\r\ntotalSupply = totalSupply.add(_amount);\r\nbalances[_to] = balances[_to].add(_amount);\r\nMint(_to, _amount);\r\nTransfer(address(0), _to, _amount);\r\nreturn true;\r\n}\r\n\r\nfunction finishMinting() onlyOwner canMint public returns (bool) {\r\nmintingFinished = true;\r\nMintFinished();\r\nreturn true;\r\n}\r\n}\r\n\r\ncontract TokenConfig {\r\n\r\nstring  public constant TOKEN_SYMBOL   = \"GYM\";\r\nstring  public constant TOKEN_NAME     = \"GYM Rewards\";\r\nuint8   public constant TOKEN_DECIMALS = 18;\r\n\r\nuint256 public constant DECIMALSFACTOR = 10**uint256(TOKEN_DECIMALS);\r\n}\r\n\r\ncontract TokenSaleConfig is TokenConfig {\r\n\r\nuint256 public constant START_TIME                = 1519689601; \r\nuint256 public constant PHASE2_START_TIME         = 1519862401;\r\nuint256 public constant PHASE3_START_TIME         = 1522540801; \r\nuint256 public constant PHASE4_START_TIME         = 1523750401;\r\nuint256 public constant PHASE5_START_TIME         = 1525046401; \r\nuint256 public constant END_TIME                  = 1526428799; \r\n\r\nuint256 public constant TIER1_RATE                  =  16000;\r\nuint256 public constant TIER2_RATE                  =  15000;\r\nuint256 public constant TIER3_RATE                  =  14000;\r\nuint256 public constant TIER4_RATE                  =  12000;\r\nuint256 public constant TIER5_RATE                  =  10000;\r\n\r\n\r\nuint256 public constant CONTRIBUTION_MIN          = 1 * 10 ** 16; \r\nuint256 public constant CONTRIBUTION_MAX          = 100000 ether;\r\n\r\nuint256 public constant MAX_TOKENS_SALE               = 1660000000  * DECIMALSFACTOR;  \r\nuint256 public constant MAX_TOKENS_FOUNDERS           =  100000000  * DECIMALSFACTOR; \r\nuint256 public constant MAX_TOKENS_RESERVE\t      =  100000000  * DECIMALSFACTOR; \r\nuint256 public constant MAX_TOKENS_AIRDROPS_BOUNTIES  =   80000000  * DECIMALSFACTOR; \r\nuint256 public constant MAX_TOKENS_ADVISORS_PARTNERS  =   60000000  * DECIMALSFACTOR; \r\n\r\n}\r\n\r\n\r\n\r\ncontract GYMRewardsToken is MintableToken, TokenConfig {\r\n\tstring public constant name = TOKEN_NAME;\r\n\tstring public constant symbol = TOKEN_SYMBOL;\r\n\tuint8 public constant decimals = TOKEN_DECIMALS;\r\n}\r\n\r\ncontract GYMRewardsCrowdsale is Pausable, TokenSaleConfig {\r\n\tusing SafeMath for uint256;\r\n\r\n\tGYMRewardsToken public token;\r\n\r\n\tuint256 public startTime;\r\n\tuint256 public tier2Time;\r\n\tuint256 public tier3Time;\r\n\tuint256 public tier4Time;\r\n\tuint256 public tier5Time;\r\n\tuint256 public endTime;\r\n\r\n\taddress public wallet = 0xE38cc3F48b4F98Cb3577aC75bB96DBBc87bc57d6;\r\n\taddress public airdrop_wallet = 0x5Fec898d08801Efd884A1162Fd159474757D422F;\r\n\taddress public reserve_wallet = 0x2A0Fc31cDE12a74143D7B9642423a2D8a3453b07;\r\n\taddress public founders_wallet = 0x5C11b5aF9f1b4CDEeab9f6BebEd4EdbAe67900C3;\r\n\taddress public advisors_wallet = 0xD8A1a54DcECe365C56B98EbDb9078Bdb2FA609da;\r\n\r\n\tuint256 public weiRaised;\r\n\r\n\tuint256 public tokensMintedForSale;\r\n\tuint256 public tokensMintedForOperations;\r\n\tbool public isFinalized = false;\r\n\tbool public opMinted = false;\r\n\r\n\r\n\tevent Finalized();\r\n\r\n\tmodifier onlyDuringSale() {\r\n\t\trequire(hasStarted() && !hasEnded());\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyAfterSale() {\r\n\t\trequire(hasEnded());\r\n\t\t_;\r\n\t}\r\n\r\n\tevent TokenPurchase(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\tevent BountiesMinted(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\tevent LongTermReserveMinted(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\tevent CoreTeamMinted(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\tevent AdvisorsAndPartnersMinted(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n\r\n\tfunction GYMRewardsCrowdsale() public {\r\n\t\r\n\t\ttoken = createTokenContract();\r\n\t\tstartTime = START_TIME;\r\n\t\ttier2Time = PHASE2_START_TIME;\r\n\t\ttier3Time = PHASE3_START_TIME;\r\n\t\ttier4Time = PHASE4_START_TIME;\r\n\t\ttier5Time = PHASE5_START_TIME;\r\n\t\tendTime = END_TIME;\r\n\r\n\t\tmintBounties();\r\n\t}\r\n\r\n\tfunction createTokenContract() internal returns (GYMRewardsToken) {\r\n\t\treturn new GYMRewardsToken();\r\n\t}\r\n\r\n\tfunction () public payable whenNotPaused onlyDuringSale {\r\n\t\tbuyTokens(msg.sender);\r\n\t}\r\n\r\n\tfunction mintBounties() public onlyOwner{\r\n\t\tif (opMinted == false)\r\n\t\t{\r\n\t\t\topMinted = true;\r\n\t\t\ttokensMintedForOperations = tokensMintedForOperations.add(MAX_TOKENS_AIRDROPS_BOUNTIES);\r\n\t\t\ttoken.mint(airdrop_wallet, MAX_TOKENS_AIRDROPS_BOUNTIES);\r\n\r\n\t\t\ttokensMintedForOperations = tokensMintedForOperations.add(MAX_TOKENS_RESERVE);\r\n\t\t\ttoken.mint(reserve_wallet, MAX_TOKENS_RESERVE);\r\n\r\n\t\t\ttokensMintedForOperations = tokensMintedForOperations.add(MAX_TOKENS_FOUNDERS);\r\n\t\t\ttoken.mint(founders_wallet, MAX_TOKENS_FOUNDERS);\r\n\r\n\t\t\ttokensMintedForOperations = tokensMintedForOperations.add(MAX_TOKENS_ADVISORS_PARTNERS);\r\n\t\t\ttoken.mint(advisors_wallet, MAX_TOKENS_ADVISORS_PARTNERS);\r\n\r\n\t\t\tBountiesMinted(owner, airdrop_wallet, MAX_TOKENS_AIRDROPS_BOUNTIES, MAX_TOKENS_AIRDROPS_BOUNTIES);\r\n\t\t\tLongTermReserveMinted(owner, reserve_wallet, MAX_TOKENS_RESERVE, MAX_TOKENS_RESERVE);\r\n\t\t\tCoreTeamMinted(owner, founders_wallet, MAX_TOKENS_FOUNDERS, MAX_TOKENS_FOUNDERS);\r\n\t\t\tAdvisorsAndPartnersMinted(owner, advisors_wallet, MAX_TOKENS_ADVISORS_PARTNERS, MAX_TOKENS_ADVISORS_PARTNERS);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction buyTokens(address beneficiary) public payable whenNotPaused onlyDuringSale {\r\n\t\trequire(beneficiary != address(0));\r\n\t\trequire(msg.value > 0); \r\n\r\n\r\n\t\tuint256 weiAmount = msg.value;\r\n\r\n\t\tuint256 exchangeRate = calculateTierBonus();\r\n\t\tuint256 tokens = weiAmount.mul(exchangeRate);\r\n\r\n\t\trequire (tokensMintedForSale <= MAX_TOKENS_SALE);\r\n\r\n\r\n\t\tweiRaised = weiRaised.add(weiAmount); \r\n\t\ttokensMintedForSale = tokensMintedForSale.add(tokens); \r\n\r\n\t\ttoken.mint(beneficiary, tokens);\r\n\r\n\t\tTokenPurchase(msg.sender, beneficiary, weiAmount, tokens);\r\n\r\n\t\tif (tokensMintedForSale >= MAX_TOKENS_SALE) {\r\n\t\t\tfinalizeInternal();\r\n\t\t}\r\n\r\n\t\tforwardFunds();\r\n\t}\r\n\r\n\tfunction calculateTierBonus() public view returns (uint256){\r\n\t\t\tif(now >= startTime && now < tier2Time){\r\n\t\t\treturn TIER1_RATE;\r\n\t\t\t}\r\n\r\n\t\t\tif(now >= tier2Time && now < tier3Time){\r\n\t\t\treturn TIER2_RATE;\r\n\t\t\t}\r\n\r\n\t\t\tif(now >= tier3Time && now <= tier4Time){\r\n\t\t\treturn TIER3_RATE;\r\n\t\t\t}\r\n\r\n\t\t\tif(now >= tier4Time && now <= tier5Time){\r\n\t\t\treturn TIER4_RATE;\r\n\t\t\t}\r\n\r\n\t\t\tif(now >= tier5Time && now <= endTime){\r\n\t\t\treturn TIER5_RATE;\r\n\t\t\t}\r\n\t}\r\n\r\n\tfunction finalizeInternal() internal returns (bool) {\r\n\t\trequire(!isFinalized);\r\n\r\n\t\tisFinalized = true;\r\n\t\tFinalized();\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction forwardFunds() internal {\r\n\t\twallet.transfer(msg.value);\r\n\t}\r\n\r\n\tfunction hasEnded() public constant returns (bool) {\r\n\t\tbool _saleIsOver = now > endTime;\r\n\t\treturn _saleIsOver || isFinalized;\r\n\t}\r\n\r\n\tfunction hasStarted() public constant returns (bool) {\r\n\t\treturn now >= startTime;\r\n\t}\r\n\r\n\tfunction tellTime() public constant returns (uint) {\r\n\t\treturn now;\r\n\t}\r\n\r\n\tfunction totalSupply() public constant returns(uint256)\r\n\t{\r\n\t\treturn tokensMintedForSale + tokensMintedForOperations;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_SYMBOL\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DECIMALSFACTOR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"GYMRewardsToken","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e6136b3a6a729576697f20465cc8bce5a8313340643fafe1e9ea8c7c35ad6a79"}]}