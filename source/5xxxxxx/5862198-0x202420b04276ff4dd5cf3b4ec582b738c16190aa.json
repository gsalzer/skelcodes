{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;      // 指定Compiler版本\r\n\r\ncontract ERC20_token {   // 使用 is 繼承 ERC20_interface\r\n    uint256 public totalSupply;\r\n    \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value, string _text); \r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    \r\n    uint256 constant private MAX_UINT256 = 2**256 - 1; // 避免超過uint256最大可能的值，產生overflow\r\n    mapping (address => uint256) public balances;   // 之後可使用 balances[地址] 查詢特定地址的餘額\r\n    mapping (address => mapping (address => uint256)) public allowed;  // 可用 allowed[地址][地址]，查詢特定地址可以給另一個地址的轉帳配額\r\n\r\n    string public name;             // 幫合約取名稱\r\n    uint8  public decimals = 18;    // 小數點，官方建議為18\r\n    string public symbol;           // e.g. ^_^\r\n    address owner;\r\n    uint256 public buyPrice;   // 一單位Ether可以換多少token\r\n    uint private weiToEther = 10 ** 18; // 把單位從wei轉為Ether\r\n\r\n    // 建構子，一開始即會執行，需要提供總量、價格、名稱、標誌\r\n    constructor (\r\n        uint256 _initialSupply,\r\n        uint256 _buyPrice,\r\n        string _tokenName,\r\n        string _tokenSymbol\r\n    ) public {\r\n        totalSupply = _initialSupply * 10 ** uint256(decimals); // token總量\r\n        balances[msg.sender] = totalSupply;                    // 將所有Token先全部分配給合約部屬者      \r\n\r\n        name = _tokenName;                                   // token名稱\r\n        symbol = _tokenSymbol;                               // token 標誌\r\n        owner = msg.sender;                                  // 合約擁有人\r\n        buyPrice = _buyPrice;                                // 每單位 ether 之價格\r\n    }\r\n    \r\n    // 限定只有合約部屬人才能執行特定function\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    // 查詢餘額\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n      return balances[_owner];\r\n    }\r\n\r\n    // 從合約擁有人地址轉帳\r\n    function transfer(address _to, uint256 _value, string _text) public returns (bool success) {\r\n        require(balances[msg.sender] >= _value);\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        emit Transfer(msg.sender, _to, _value, _text);\r\n        return true;\r\n    }\r\n\r\n    // 從某一人地址轉給另一人地址，需要其轉帳配額有被同意，可想像為小明(msg.sender)用爸爸的副卡(_from)轉帳給別人(_to)\r\n    function transferFrom(address _from, address _to, uint256 _value, string _text) public returns (bool success) {\r\n        uint256 allowance = allowed[_from][msg.sender];\r\n        require(balances[_from] >= _value && allowance >= _value);\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        if (allowance < MAX_UINT256) {\r\n            allowed[_from][msg.sender] -= _value;\r\n        }\r\n        emit Transfer(_from, _to, _value, _text);\r\n        return true;\r\n    }\r\n\r\n    // 給予特定帳號轉帳配額  類似小明的爸爸(msg.sender)給小明(_spender)一張信用卡副卡，額度為value\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    // 查詢特定帳號轉給另一帳號之轉帳配額\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }   \r\n\r\n    // 設定token購買價格，只有合約部屬者可以設定\r\n    function setPrice(uint _price) public onlyOwner {\r\n        buyPrice = _price;\r\n    }\r\n\r\n    // 購買token\r\n    function buy() public payable {\r\n        uint amount;\r\n        amount = msg.value * buyPrice * 10 ** uint256(decimals) / weiToEther;    // 購買多少token\r\n        require(balances[owner] >= amount);              // 檢查還有沒有足夠token可以賣\r\n        balances[msg.sender] += amount;                  // 增加購買者token   \r\n        balances[owner] -= amount;                        // 減少擁有者token\r\n        emit Transfer(msg.sender, owner, amount, 'Buy token');               // 產生token轉帳log\r\n    }\r\n\r\n    // 從合約轉出Ether到部屬者帳戶\r\n    function withdraw(uint amount) public onlyOwner {\r\n        owner.transfer(amount * weiToEther);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_text\",\"type\":\"string\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_text\",\"type\":\"string\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_buyPrice\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_text\",\"type\":\"string\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"ERC20_token","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000001e84800000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000352534d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035e5f5e0000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://5eb3443d8d33f72a6efdec953e661354a84e9c30aaef755641a03e6c4942d562"}]}