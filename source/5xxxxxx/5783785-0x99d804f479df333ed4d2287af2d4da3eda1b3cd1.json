{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\n/**\r\n * @title EthealSplit\r\n * @dev Split ether evenly on the fly.\r\n * @author thesved, viktor.tabori at etheal.com\r\n */\r\ncontract EthealSplit {\r\n    /// @dev Split evenly among addresses, no safemath is needed for divison\r\n    function split(address[] _to) public payable {\r\n        uint256 _val = msg.value / _to.length;\r\n        for (uint256 i=0; i < _to.length; i++) {\r\n            _to[i].send(_val);\r\n        }\r\n\r\n        if (address(this).balance > 0) {\r\n            msg.sender.transfer(address(this).balance);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address[]\"}],\"name\":\"split\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"EthealSplit","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b67d5db68e6f19065f6932bba47bfc86eef7ba62f51b7000173d06b28bc61e16"}]}