{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\ncontract SafeMath {\r\n    function safeAdd(uint a, uint b) public pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function safeSub(uint a, uint b) public pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function safeMul(uint a, uint b) public pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function safeDiv(uint a, uint b) public pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\ncontract ERC20Interface {\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\r\n}\r\ncontract owned {\r\n\r\n\r\n\t    address public owner;\r\n\r\n\r\n\t    function owned() payable public {\r\n\t        owner = msg.sender;\r\n\t    }\r\n\t    \r\n\t    modifier onlyOwner {\r\n\t        require(owner == msg.sender);\r\n\t        _;\r\n\t    }\r\n\r\n\r\n\t    function changeOwner(address _owner) onlyOwner public {\r\n\t        owner = _owner;\r\n\t    }\r\n\t}\r\ncontract Crowdsale is owned {\r\n\t    \r\n\t    uint256 public totalSupply;\r\n\t    mapping (address => uint256) public balanceOf;\r\n\r\n\r\n\t    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n\r\n\t    function Crowdsale() payable owned() public {\r\n\t        totalSupply = 10000000000;\r\n\t        balanceOf[this] = 1000000000;\r\n\t        balanceOf[owner] = totalSupply - balanceOf[this];\r\n\t        Transfer(this, owner, balanceOf[owner]);\r\n\t    }\r\n\r\n\r\n\r\n\r\n\t    function () payable public {\r\n\t        require(balanceOf[this] > 0);\r\n\t        uint256 tokensPerOneEther = 10000;\r\n\t        uint256 tokens = tokensPerOneEther * msg.value / 1000000000000000000;\r\n\t        if (tokens > balanceOf[this]) {\r\n\t            tokens = balanceOf[this];\r\n\t            uint valueWei = tokens * 1000000000000000000 / tokensPerOneEther;\r\n\t            msg.sender.transfer(msg.value - valueWei);\r\n\t        }\r\n\t        require(tokens > 0);\r\n\t        balanceOf[msg.sender] += tokens;\r\n\t        balanceOf[this] -= tokens;\r\n\t        Transfer(this, msg.sender, tokens);\r\n\t    }\r\n\t}\r\ncontract MyToken is Crowdsale {\r\n\t    \r\n\t    string  public standard    = 'Token 0.1';\r\n\t    string  public name        = 'MARIO Fans Token';\r\n\t    string  public symbol      = \"MARIO\";\r\n\t    uint8   public decimals    = 0;\r\n\r\n\r\n\t    function MyToken() payable Crowdsale() public {}\r\n\r\n\r\n\t    function transfer(address _to, uint256 _value) public {\r\n\t        require(balanceOf[msg.sender] >= _value);\r\n\t        balanceOf[msg.sender] -= _value;\r\n\t        balanceOf[_to] += _value;\r\n\t        Transfer(msg.sender, _to, _value);\r\n\t    }\r\n\t}\r\ncontract MyCrowdsale is MyToken {\r\n\r\n\r\n\t    function MyCrowdsale() payable MyToken() public {}\r\n\t    \r\n\t    function withdraw() public onlyOwner {\r\n\t        owner.transfer(this.balance);\r\n\t    }\r\n\t    \r\n\t    function killMe() public onlyOwner {\r\n\t        selfdestruct(owner);\r\n\t    }\r\n\t}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"killMe\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"MyCrowdsale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5db33fcc50bae79fc0b174f8ac5c7c760847d71fd67963b0bd4d0b8a68895c11"}]}