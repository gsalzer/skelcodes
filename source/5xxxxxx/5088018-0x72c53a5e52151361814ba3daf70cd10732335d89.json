{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract EthereuMMM {\r\n\taddress public owner;\r\n\tuint public allInvestments;\r\n\tuint public lastID;\r\n\t\r\n\tstruct Invest {uint amount; bool used;}\r\n\tstruct Refs {address addr; bool used;}\r\n\t\r\n\tmapping(address => Invest) public investments;\r\n    mapping(address => uint) public investorWallet;\r\n\tmapping(uint => address) public investorsIndex;\r\n\tmapping(address => Refs) public Referrals;\r\n\r\n    function EthereuMMM() public {\r\n        owner = msg.sender;\r\n\t\tlastID = 0;\r\n    }\r\n    \r\n\tfunction withdraw() public {\r\n        require(investorWallet[msg.sender] != 0);\r\n        uint tempWithdraw = investorWallet[msg.sender];\r\n\r\n\t\tinvestorWallet[msg.sender] = 0;\r\n\t\tallInvestments -= investments[msg.sender].amount;\r\n\t\tinvestments[msg.sender].amount = 0;\r\n\t\t\r\n\t\tif(this.balance < tempWithdraw) tempWithdraw = this.balance;\r\n\r\n\t\tmsg.sender.transfer(tempWithdraw);\r\n\t}\r\n    \r\n    function bytesToAddress(bytes source) internal pure returns(address) {\r\n        uint result;\r\n        uint mul = 1;\r\n        for(uint i = 20; i > 0; i--) {\r\n            result += uint8(source[i-1])*mul;\r\n            mul = mul*256;\r\n        }\r\n        return address(result);\r\n    }\r\n\t\r\n\tfunction () public payable {\r\n        uint baseBalance = (msg.value * 4) / 5;\r\n\t\t\r\n\t\tif(!investments[msg.sender].used){\r\n\t\t\tinvestorsIndex[lastID] = msg.sender;\r\n\t\t\tinvestments[msg.sender].used = true;\r\n\t\t\t++lastID;\r\n\t\t}\r\n        \r\n\t\tinvestments[msg.sender].amount += baseBalance;\r\n\t\tinvestorWallet[msg.sender] += baseBalance;\r\n\t\tallInvestments += baseBalance;\r\n        \r\n        uint rewardToInvestors;\r\n\t\t\r\n\t\tif(!Referrals[msg.sender].used && msg.data.length == 20) {\r\n            address referer = bytesToAddress(bytes(msg.data));\r\n            if(referer != msg.sender){\r\n\t\t\t\tReferrals[msg.sender].addr = referer;\r\n\t\t\t\tReferrals[msg.sender].used = true;\r\n\t\t\t}\r\n        }\r\n\t\t\r\n\t\tif(Referrals[msg.sender].used){\r\n\t\t\tinvestorWallet[referer] += msg.value / 20;\r\n\t\t\tinvestorWallet[msg.sender] += msg.value / 40;\r\n\t\t\trewardToInvestors = (msg.value * 3) / 40;\r\n\t\t} else {\r\n            rewardToInvestors = (msg.value * 3) / 20;\r\n        }\r\n\t\t\r\n\t\tfor(uint i = 0; i <= lastID; ++i){\r\n\t\t\tinvestorWallet[investorsIndex[i]] += (rewardToInvestors * investments[investorsIndex[i]].amount) / allInvestments;\r\n\t\t}\r\n\t\t\r\n        owner.transfer(msg.value / 20);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Referrals\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"used\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investorsIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investments\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"used\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investorWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allInvestments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"EthereuMMM","CompilerVersion":"v0.4.19-nightly.2017.11.30+commit.f5a2508e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a453f48f536f4fe500a4d1d7a31240099049bee305581b5e9299ae7732443df4"}]}