{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\ncontract WelCoinICO is Ownable {\r\n\r\n  using SafeMath for uint256;\r\n\r\n  // start and end timestamps where main-investments are allowed (both inclusive)\r\n  uint256 public mainSaleStartTime;\r\n  uint256 public mainSaleEndTime;\r\n\r\n  // maximum amout of wei for  main sale\r\n  //uint256 public mainSaleWeiCap;\r\n\r\n  // maximum amout of wei to allow for investors\r\n  uint256 public mainSaleMinimumWei;\r\n\r\n  // address where funds are collected\r\n  address public wallet;\r\n\r\n  // address of erc20 token contract\r\n  address public token;\r\n\r\n  // how many token units a buyer gets per wei\r\n  uint256 public rate;\r\n\r\n  // bonus percent to apply\r\n  uint256 public percent;\r\n\r\n  // amount of raised money in wei\r\n  //uint256 public weiRaised;\r\n\r\n  event TokenPurchase(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n  function WelCoinICO(uint256 _mainSaleStartTime, uint256 _mainSaleEndTime, address _wallet, address _token) public {\r\n\r\n    // the end of main sale can't happen before it's start\r\n    require(_mainSaleStartTime < _mainSaleEndTime);\r\n    require(_wallet != 0x0);\r\n\r\n    mainSaleStartTime = _mainSaleStartTime;\r\n    mainSaleEndTime = _mainSaleEndTime;\r\n    wallet = _wallet;\r\n    token = _token;\r\n    rate = 2500;\r\n    percent = 0;\r\n    mainSaleMinimumWei = 100000000000000000; // 0.1\r\n  }\r\n\r\n  // fallback function can be used to buy tokens\r\n  function () external payable {\r\n    buyTokens(msg.sender);\r\n  }\r\n\r\n  // low level token purchase function\r\n  function buyTokens(address beneficiary) public payable {\r\n\r\n    require(beneficiary != 0x0);\r\n    require(msg.value != 0x0);\r\n    require(msg.value >= mainSaleMinimumWei);\r\n    require(now >= mainSaleStartTime && now <= mainSaleEndTime);\r\n\r\n    uint256 weiAmount = msg.value;\r\n\r\n    // calculate token amount to be created\r\n    uint256 tokens = weiAmount.mul(rate);\r\n\r\n    // add bonus to tokens depends on the period\r\n    uint256 bonusedTokens = applyBonus(tokens, percent);\r\n\r\n    require(token.call(bytes4(keccak256(\"transfer(address,uint256)\")), beneficiary, bonusedTokens));\r\n\r\n    // token.mint(beneficiary, bonusedTokens);\r\n    TokenPurchase(msg.sender, beneficiary, weiAmount, bonusedTokens);\r\n\r\n    forwardFunds();\r\n  }\r\n\r\n  // set new dates for main-sale (emergency case)\r\n  function setMainSaleParameters(uint256 _mainSaleStartTime, uint256 _mainSaleEndTime, uint256 _mainSaleMinimumWei) public onlyOwner {\r\n    require(_mainSaleStartTime < _mainSaleEndTime);\r\n    mainSaleStartTime = _mainSaleStartTime;\r\n    mainSaleEndTime = _mainSaleEndTime;\r\n    mainSaleMinimumWei = _mainSaleMinimumWei;\r\n  }\r\n\r\n  // set new wallets (emergency case)\r\n  function setWallet(address _wallet) public onlyOwner {\r\n    require(_wallet != 0x0);\r\n    wallet = _wallet;\r\n  }\r\n\r\n    // set new rate (emergency case)\r\n  function setRate(uint256 _rate) public onlyOwner {\r\n    require(_rate > 0);\r\n    rate = _rate;\r\n  }\r\n\r\n  // send tokens to specified wallet wallet\r\n  function transferTokens(address _wallet, uint256 _amount) public onlyOwner {\r\n    require(_wallet != 0x0);\r\n    require(_amount != 0);\r\n    require(token.call(bytes4(keccak256(\"transfer(address,uint256)\")), _wallet, _amount));\r\n  }\r\n\r\n\r\n  // @return true if main sale event has ended\r\n  function mainSaleHasEnded() external constant returns (bool) {\r\n    return now > mainSaleEndTime;\r\n  }\r\n\r\n  // send ether to the fund collection wallet\r\n  function forwardFunds() internal {\r\n    wallet.transfer(msg.value);\r\n  }\r\n\r\n\r\n  function applyBonus(uint256 tokens, uint256 percentToApply) internal pure returns (uint256 bonusedTokens) {\r\n    uint256 tokensToAdd = tokens.mul(percentToApply).div(100);\r\n    return tokens.add(tokensToAdd);\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleMinimumWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mainSaleStartTime\",\"type\":\"uint256\"},{\"name\":\"_mainSaleEndTime\",\"type\":\"uint256\"},{\"name\":\"_mainSaleMinimumWei\",\"type\":\"uint256\"}],\"name\":\"setMainSaleParameters\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleHasEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_mainSaleStartTime\",\"type\":\"uint256\"},{\"name\":\"_mainSaleEndTime\",\"type\":\"uint256\"},{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"WelCoinICO","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000005abadaff000000000000000000000000000000000000000000000000000000005b0b467f00000000000000000000000077e7baf7119e5f45fc6059251edc74a5f69230fb000000000000000000000000697b2658eb4085445625d6aeece29bd117c58c62","Library":"","SwarmSource":"bzzr://577e0bf3903f709903863ccf7c9030e711f2a722a5e5d1d1d96022da7653d5f7"}]}