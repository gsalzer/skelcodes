{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\n// File: contracts/ownership/Ownable.sol\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n// File: contracts/KnowYourCustomer.sol\r\n\r\ncontract KnowYourCustomer is Ownable\r\n{\r\n    //\r\n    // with this structure\r\n    //\r\n    struct Contributor {\r\n        // kyc cleared or not\r\n        bool cleared;\r\n\r\n        // % more for the contributor bring on board in 1/100 of %\r\n        // 2.51 % --> 251\r\n        // 100% --> 10000\r\n        uint16 contributor_get;\r\n\r\n        // eth address of the referer if any - the contributor address is the key of the hash\r\n        address ref;\r\n\r\n        // % more for the referrer\r\n        uint16 affiliate_get;\r\n    }\r\n\r\n\r\n    mapping (address => Contributor) public whitelist;\r\n    //address[] public whitelistArray;\r\n\r\n    /**\r\n    *    @dev Populate the whitelist, only executed by whiteListingAdmin\r\n    *  whiteListingAdmin /\r\n    */\r\n\r\n    function setContributor(address _address, bool cleared, uint16 contributor_get, uint16 affiliate_get, address ref) onlyOwner public{\r\n\r\n        // not possible to give an exorbitant bonus to be more than 100% (100x100 = 10000)\r\n        require(contributor_get<10000);\r\n        require(affiliate_get<10000);\r\n\r\n        Contributor storage contributor = whitelist[_address];\r\n\r\n        contributor.cleared = cleared;\r\n        contributor.contributor_get = contributor_get;\r\n\r\n        contributor.ref = ref;\r\n        contributor.affiliate_get = affiliate_get;\r\n\r\n    }\r\n\r\n    function getContributor(address _address) view public returns (bool, uint16, address, uint16 ) {\r\n        return (whitelist[_address].cleared, whitelist[_address].contributor_get, whitelist[_address].ref, whitelist[_address].affiliate_get);\r\n    }\r\n\r\n    function getClearance(address _address) view public returns (bool) {\r\n        return whitelist[_address].cleared;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"cleared\",\"type\":\"bool\"},{\"name\":\"contributor_get\",\"type\":\"uint16\"},{\"name\":\"affiliate_get\",\"type\":\"uint16\"},{\"name\":\"ref\",\"type\":\"address\"}],\"name\":\"setContributor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getContributor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint16\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getClearance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"cleared\",\"type\":\"bool\"},{\"name\":\"contributor_get\",\"type\":\"uint16\"},{\"name\":\"ref\",\"type\":\"address\"},{\"name\":\"affiliate_get\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"KnowYourCustomer","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7bcf3c60cd38a4758b5d02e7a04f9b910a85a7c9b92823136e686d0f6b8f345f"}]}