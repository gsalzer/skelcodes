{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ninterface BancorConverter {\r\n    // _path is actually IERC20Token[] type\r\n    function quickConvert(address[] _path, uint256 _amount, uint256 _minReturn) public payable returns (uint256);\r\n}\r\n\r\ncontract BancorHandler {\r\n    // State variables\r\n    uint256 public MAX_UINT = 2**256 -1;\r\n    BancorConverter public exchange;\r\n    // address public bancorQuickConvertAddress = address(0xcf1cc6ed5b653def7417e3fa93992c3ffe49139b);\r\n\r\n    // Constructor\r\n    function BancorHandler(address _exchange) public {\r\n        exchange = BancorConverter(_exchange);\r\n    }\r\n\r\n    // Public functions\r\n    function getAvailableAmount(\r\n        address[21] orderAddresses, // conversion path (max length 21)\r\n        uint256[6] orderValues, // [amountToGive, minReturn, EMPTY, EMPTY, EMPTY, EMPTY]\r\n        uint256 exchangeFee, // ignore\r\n        uint8 v, // ignore\r\n        bytes32 r, // ignore\r\n        bytes32 s // ignore\r\n    ) external returns (uint256) {\r\n        // Just return a massive number, as there's nothing else we can do here\r\n        return MAX_UINT;\r\n    }\r\n\r\n    function performBuy(\r\n        address[21] orderAddresses, // conversion path (max length 21)\r\n        uint256[6] orderValues, // [amountToGive, minReturn, EMPTY, EMPTY, EMPTY, EMPTY]\r\n        uint256 exchangeFee, // ignore\r\n        uint256 amountToFill, // ignore\r\n        uint8 v, // ignore\r\n        bytes32 r, // ignore\r\n        bytes32 s // ignore\r\n    ) external payable returns (uint256) {\r\n        return trade(orderAddresses, orderValues);\r\n    }\r\n\r\n    function performSell(\r\n        address[21] orderAddresses, // conversion path (max length 21)\r\n        uint256[6] orderValues, // [amountToGive, minReturn, EMPTY, EMPTY, EMPTY, EMPTY]\r\n        uint256 exchangeFee, // ignore\r\n        uint256 amountToFill, // ignore\r\n        uint8 v, // ignore\r\n        bytes32 r, // ignore\r\n        bytes32 s // ignore\r\n    ) external returns (uint256) {\r\n        return trade(orderAddresses, orderValues);\r\n    }\r\n\r\n    function trade(\r\n        address[21] orderAddresses, // conversion path (max length 21)\r\n        uint256[6] orderValues // [amountToGive, minReturn, EMPTY, EMPTY, EMPTY, EMPTY]\r\n    ) internal returns (uint256) {\r\n        // Find the length of the conversion path\r\n        uint256 len = 0;\r\n        for(; len < orderAddresses.length; len++) {\r\n            if(orderAddresses[len] == 0) {\r\n                break;\r\n            }\r\n        }\r\n        // Create an array of that length\r\n        address[] memory conversionPath = new address[](len);\r\n\r\n        // Move the contents from orderAddresses to conversionPath\r\n        for(uint256 i = 0; i < len; i++) {\r\n            conversionPath[i] = orderAddresses[i];\r\n        }\r\n\r\n        return exchange.quickConvert.value(msg.value)(conversionPath, orderValues[0], orderValues[1]);\r\n    }\r\n\r\n    function() public payable {\r\n        // require(msg.sender == bancorQuickConvertAddress);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"orderAddresses\",\"type\":\"address[21]\"},{\"name\":\"orderValues\",\"type\":\"uint256[6]\"},{\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"getAvailableAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderAddresses\",\"type\":\"address[21]\"},{\"name\":\"orderValues\",\"type\":\"uint256[6]\"},{\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"name\":\"amountToFill\",\"type\":\"uint256\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"performBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderAddresses\",\"type\":\"address[21]\"},{\"name\":\"orderValues\",\"type\":\"uint256[6]\"},{\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"name\":\"amountToFill\",\"type\":\"uint256\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"performSell\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchange\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_exchange\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"BancorHandler","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000c6725ae749677f21e4d8f85f41cfb6de49b9db29","Library":"","SwarmSource":"bzzr://2b6d8cc8eebf2797327a4e4b4b01e0bf1c2d3a1249e236ff365f5dac06905480"}]}