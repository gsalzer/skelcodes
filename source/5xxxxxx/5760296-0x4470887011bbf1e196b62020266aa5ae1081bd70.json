{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) external returns(bool);\r\n    function balanceOf(address who) external returns(uint256);\r\n    function transferFrom(address _from, address _to, uint256 _value) external returns(bool);\r\n}\r\n\r\ninterface AddressRegistry {\r\n    function getAddr(string AddrName) external returns(address);\r\n}\r\n\r\ncontract Registry {\r\n    address public RegistryAddress;\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == getAddress(\"admin\"));\r\n        _;\r\n    }\r\n    function getAddress(string AddressName) internal view returns(address) {\r\n        AddressRegistry aRegistry = AddressRegistry(RegistryAddress);\r\n        address realAddress = aRegistry.getAddr(AddressName);\r\n        require(realAddress != address(0));\r\n        return realAddress;\r\n    }\r\n}\r\n\r\ncontract Deposit is Registry {\r\n\r\n    bool public Paused;\r\n    function setPause(bool isPaused) onlyAdmin public {\r\n        Paused = isPaused;\r\n    }\r\n    modifier paused() {\r\n        require(!Paused);\r\n        _;\r\n    }\r\n\r\n    event eDeposit(address Investor, uint value);\r\n\r\n    // wei per MTU // rate will be 0 to stop minting\r\n    uint256 public claimRate;\r\n    uint256 public ethRaised;\r\n    uint256 public unClaimedEther;\r\n    uint256 public ClaimingTimeLimit;\r\n    bool public isCharged = true;\r\n\r\n    mapping(address => uint256) public Investors;\r\n\r\n    function setCharge(bool chargeBool) onlyAdmin public {\r\n        isCharged = chargeBool;\r\n    }\r\n\r\n    function SetClaimRate(uint256 weiAmt) onlyAdmin public {\r\n        claimRate = weiAmt;\r\n        // 7 days into seconds to currenct time in unix epoch seconds\r\n        ClaimingTimeLimit = block.timestamp + 7 * 24 * 60 * 60;\r\n    }\r\n\r\n    // accepting deposits\r\n    function () paused public payable {\r\n        require(block.timestamp > ClaimingTimeLimit);\r\n        Investors[msg.sender] += msg.value;\r\n        unClaimedEther += msg.value;\r\n        emit eDeposit(msg.sender, msg.value);\r\n    }\r\n\r\n    function getClaimEst(address Claimer) public view returns(uint256 ClaimEstimate) {\r\n        uint NoOfMTU = Investors[Claimer] / claimRate;\r\n        return NoOfMTU;\r\n    }\r\n\r\n    // claim your MTU or Ether\r\n    function ClaimMTU(bool claim) paused public {\r\n        uint256 ethVal = Investors[msg.sender];\r\n        require(ethVal >= claimRate);\r\n        if (claim) {\r\n            require(claimRate > 0);\r\n            require(block.timestamp < ClaimingTimeLimit);\r\n            ethRaised += ethVal;\r\n            uint256 claimTokens = ethVal / claimRate;\r\n            address tokenAddress = getAddress(\"unit\");\r\n            token tokenTransfer = token(tokenAddress);\r\n            tokenTransfer.transfer(msg.sender, claimTokens);\r\n            if (isCharged) {getAddress(\"team\").transfer(ethVal / 20);}\r\n        } else {\r\n            msg.sender.transfer(ethVal);\r\n        }\r\n        Investors[msg.sender] -= ethVal;\r\n        unClaimedEther -= ethVal;\r\n    }\r\n\r\n}\r\n\r\ncontract Redeem is Deposit {\r\n\r\n    event eAllowedMTU(address LeavingAway, uint NoOfTokens);\r\n    event eRedeem(address Investor, uint NoOfTokens, uint withdrawVal);\r\n\r\n    // wei per MTU // rate will be 0 to stop redeeming\r\n    uint256 public redeemRate;\r\n    uint256 public ethRedeemed;\r\n    uint256 public unRedeemedMTU;\r\n    uint256 public RedeemingTimeLimit;\r\n\r\n    mapping(address => uint256) public Redeemer;    \r\n    \r\n    function SetRedeemRate(uint256 weiAmt) onlyAdmin public {\r\n        redeemRate = weiAmt;\r\n        // 7 days into seconds to currenct time in unix epoch seconds\r\n        RedeemingTimeLimit = block.timestamp + 7 * 24 * 60 * 60;\r\n    }\r\n\r\n    // allow MTU transfer\r\n    function DepositMTU(uint256 NoOfTokens) paused public {\r\n        require(block.timestamp > RedeemingTimeLimit);\r\n        address tokenAddress = getAddress(\"unit\");\r\n        token tokenFunction = token(tokenAddress);\r\n        tokenFunction.transferFrom(msg.sender, address(this), NoOfTokens);\r\n        unRedeemedMTU += NoOfTokens;\r\n        Redeemer[msg.sender] += NoOfTokens;\r\n        emit eAllowedMTU(msg.sender, NoOfTokens);\r\n    }\r\n\r\n    // redeem MTU\r\n    function RedeemMTU(bool redeem) paused public {\r\n        uint256 AppliedUnits = Redeemer[msg.sender];\r\n        require(AppliedUnits > 0);\r\n        address tokenAddress = getAddress(\"unit\");\r\n        token tokenFunction = token(tokenAddress);\r\n        if (redeem) {\r\n            require(block.timestamp < RedeemingTimeLimit);\r\n            require(redeemRate > 0);\r\n            uint256 withdrawVal = AppliedUnits * redeemRate;\r\n            ethRedeemed += withdrawVal;\r\n            msg.sender.transfer(withdrawVal);\r\n            emit eRedeem(msg.sender, AppliedUnits, withdrawVal);\r\n        } else {\r\n            tokenFunction.transfer(msg.sender, AppliedUnits);\r\n        }\r\n        Redeemer[msg.sender] = 0;\r\n        unRedeemedMTU -= AppliedUnits;\r\n    }\r\n\r\n    function getRedeemEst(address Claimer, uint256 NoOfTokens) public view returns(uint256 RedeemEstimate) {\r\n        uint WithdrawEther = redeemRate * NoOfTokens;\r\n        return WithdrawEther;\r\n    }\r\n\r\n}\r\n\r\ncontract MoatFund is Redeem {\r\n\r\n    event eNonIssueDeposits(address sender, uint value);\r\n\r\n    constructor(uint256 PrevRaisedEther, address rAddress) public {\r\n        ethRaised = PrevRaisedEther; // the ether raised value of previous smart contract\r\n        RegistryAddress = rAddress;\r\n    }\r\n\r\n    // for non issuance deposits\r\n    function NonIssueDeposits() public payable {\r\n        emit eNonIssueDeposits(msg.sender, msg.value);\r\n    }\r\n\r\n    function SendEtherToBoard(uint256 weiAmt) onlyAdmin public {\r\n        require(address(this).balance > unClaimedEther);        \r\n        getAddress(\"board\").transfer(weiAmt);\r\n    }\r\n\r\n    function SendEtherToAsset(uint256 weiAmt) onlyAdmin public {\r\n        require(address(this).balance > unClaimedEther);\r\n        getAddress(\"asset\").transfer(weiAmt);\r\n    }\r\n\r\n    function SendEtherToDex(uint256 weiAmt) onlyAdmin public {\r\n        require(address(this).balance > unClaimedEther);        \r\n        getAddress(\"dex\").transfer(weiAmt);\r\n    }\r\n\r\n    function SendERC20ToAsset(address tokenAddress) onlyAdmin public {\r\n        token tokenFunctions = token(tokenAddress);\r\n        uint256 tokenBal = tokenFunctions.balanceOf(address(this));\r\n        tokenFunctions.transfer(getAddress(\"asset\"), tokenBal);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"NonIssueDeposits\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"redeemRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"Claimer\",\"type\":\"address\"},{\"name\":\"NoOfTokens\",\"type\":\"uint256\"}],\"name\":\"getRedeemEst\",\"outputs\":[{\"name\":\"RedeemEstimate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"redeem\",\"type\":\"bool\"}],\"name\":\"RedeemMTU\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isCharged\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"weiAmt\",\"type\":\"uint256\"}],\"name\":\"SetClaimRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"Claimer\",\"type\":\"address\"}],\"name\":\"getClaimEst\",\"outputs\":[{\"name\":\"ClaimEstimate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"weiAmt\",\"type\":\"uint256\"}],\"name\":\"SendEtherToDex\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"weiAmt\",\"type\":\"uint256\"}],\"name\":\"SendEtherToBoard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"chargeBool\",\"type\":\"bool\"}],\"name\":\"setCharge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RegistryAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"claim\",\"type\":\"bool\"}],\"name\":\"ClaimMTU\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unRedeemedMTU\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"claimRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Redeemer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethRedeemed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unClaimedEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"weiAmt\",\"type\":\"uint256\"}],\"name\":\"SendEtherToAsset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ClaimingTimeLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"weiAmt\",\"type\":\"uint256\"}],\"name\":\"SetRedeemRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"NoOfTokens\",\"type\":\"uint256\"}],\"name\":\"DepositMTU\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RedeemingTimeLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Investors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"SendERC20ToAsset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"PrevRaisedEther\",\"type\":\"uint256\"},{\"name\":\"rAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"eNonIssueDeposits\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"LeavingAway\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"NoOfTokens\",\"type\":\"uint256\"}],\"name\":\"eAllowedMTU\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Investor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"NoOfTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"withdrawVal\",\"type\":\"uint256\"}],\"name\":\"eRedeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Investor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"eDeposit\",\"type\":\"event\"}]","ContractName":"MoatFund","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000219f6dfec2722f0e60000000000000000000000008836dc78baa218017dcc0cf6ced6669614b9dd9b","Library":"","SwarmSource":"bzzr://7847550ee4771c14c8caaeedb782f77773e97c0ba6a3bf757ef588111f2012e8"}]}