{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;        \r\n\r\n// ----------------------------------------------------------------------------------------------\r\n// Project Delta \r\n// DELTA - New Crypto-Platform with own cryptocurrency, verified smart contracts and multi blockchains!\r\n// For 1 DELTA token in future you will get 1 DELTA coin!\r\n// Site: http://delta.money\r\n// Telegram Chat: @deltacoin\r\n// Telegram News: @deltaico\r\n// CEO Nechesov Andrey http://facebook.com/Nechesov     \r\n// Telegram: @Nechesov\r\n// Ltd. \"Delta\"\r\n// Working with ERC20 contract https://etherscan.io/address/0xf85a2e95fa30d005f629cbe6c6d2887d979fff2a                  \r\n// ----------------------------------------------------------------------------------------------\r\n   \r\ncontract Delta {     \r\n\r\n\taddress public c = 0xF85A2E95FA30d005F629cBe6c6d2887D979ffF2A; \r\n\taddress public owner = 0x788c45dd60ae4dbe5055b5ac02384d5dc84677b0;\t\r\n\taddress public owner2 = 0x0C6561edad2017c01579Fd346a58197ea01A0Cf3;\t\r\n\tuint public active = 1;\t\r\n\r\n\tuint public token_price = 10**18*1/1000; \t\r\n\r\n\t//default function for buy tokens      \r\n\tfunction() payable {        \r\n\t    tokens_buy();        \r\n\t}\r\n\r\n\t/**\r\n\t* Buy tokens\r\n\t*/\r\n    function tokens_buy() payable returns (bool) {         \r\n        \r\n        require(active > 0);\r\n        require(msg.value >= token_price);        \r\n\r\n        uint tokens_buy = msg.value*10**18/token_price;\r\n\r\n        require(tokens_buy > 0);\r\n\r\n        if(!c.call(bytes4(sha3(\"transferFrom(address,address,uint256)\")),owner, msg.sender,tokens_buy)){\r\n        \treturn false;\r\n        }\r\n\r\n        uint sum2 = msg.value * 3 / 10;           \r\n\r\n        owner2.send(sum2);\r\n\r\n        return true;\r\n      }     \r\n\r\n      //Withdraw money from contract balance to owner\r\n      function withdraw(uint256 _amount) onlyOwner returns (bool result) {\r\n          uint256 balance;\r\n          balance = this.balance;\r\n          if(_amount > 0) balance = _amount;\r\n          owner.send(balance);\r\n          return true;\r\n      }\r\n\r\n      //Change token\r\n      function change_token_price(uint256 _token_price) onlyOwner returns (bool result) {\r\n        token_price = _token_price;\r\n        return true;\r\n      }\r\n\r\n      //Change active\r\n      function change_active(uint256 _active) onlyOwner returns (bool result) {\r\n        active = _active;\r\n        return true;\r\n      }\r\n\r\n      // Functions with this modifier can only be executed by the owner\r\n    \tmodifier onlyOwner() {\r\n        if (msg.sender != owner) {\r\n            throw;\r\n        }\r\n        _;\r\n    }        \t\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_active\",\"type\":\"uint256\"}],\"name\":\"change_active\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"tokens_buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token_price\",\"type\":\"uint256\"}],\"name\":\"change_token_price\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"c\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Delta","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e34a3bfa5a910b1d3851f5ecb701413b7d37e3807d66c936be7391190cdfb984"}]}