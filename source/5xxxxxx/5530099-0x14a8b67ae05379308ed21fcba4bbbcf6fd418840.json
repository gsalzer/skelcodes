{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract LoversForLife {\r\n    struct Lovers {\r\n        string lover1;\r\n        string lover2;\r\n        string whyDoYouLove;\r\n        uint worth;\r\n        \r\n        \r\n    }\r\n    \r\n    uint minPrice = 500000000000000;\r\n    uint maxPrice = 500000000000000000;\r\n    address creator;\r\n    Lovers[] public loverList;\r\n    uint public amountOfLovers = 0;\r\n    mapping(address => uint) loverNumber;\r\n\r\n    constructor() public {\r\n        creator = msg.sender;\r\n    }\r\n\r\n    function setPrice(uint price) public{\r\n        require(msg.sender == creator);\r\n        minPrice = price;\r\n    }\r\n    \r\n    function createLover(string l1, string l2, string message) public payable{\r\n        require(msg.value >= minPrice);\r\n        require(msg.value <= maxPrice);\r\n        Lovers memory newLover = Lovers ({\r\n            lover1: l1,\r\n            lover2: l2,\r\n            whyDoYouLove: message,\r\n            worth: msg.value\r\n            \r\n            \r\n        });\r\n        \r\n        loverList.push(newLover);\r\n        loverNumber[msg.sender] = amountOfLovers;\r\n        amountOfLovers++;\r\n       \r\n        creator.transfer(msg.value);\r\n    }\r\n    \r\n    function findLover(address user) public view returns (uint){\r\n        return loverNumber[user];\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"amountOfLovers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"l1\",\"type\":\"string\"},{\"name\":\"l2\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"}],\"name\":\"createLover\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loverList\",\"outputs\":[{\"name\":\"lover1\",\"type\":\"string\"},{\"name\":\"lover2\",\"type\":\"string\"},{\"name\":\"whyDoYouLove\",\"type\":\"string\"},{\"name\":\"worth\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"findLover\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"LoversForLife","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f0708de3b6f43e35d2c8400e27feb82640e6892c5140f7ec2917adcc75067d29"}]}