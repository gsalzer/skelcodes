{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n///////////////////////////////////////////////////\r\n//  \r\n//  `iCashweb` ICW Token Contract\r\n//\r\n//  Total Tokens: 300,000,000.000000000000000000\r\n//  Name: iCashweb\r\n//  Symbol: ICWeb\r\n//  Decimal Scheme: 18\r\n//  \r\n//  by Nishad Vadgama\r\n///////////////////////////////////////////////////\r\n\r\nlibrary iMath {\r\n    function mul(\r\n        uint256 a, uint256 b\r\n    ) \r\n    internal \r\n    pure \r\n    returns(uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(\r\n        uint256 a, uint256 b\r\n    ) \r\n    internal \r\n    pure \r\n    returns(uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(\r\n        uint256 a, uint256 b\r\n    ) \r\n    internal \r\n    pure \r\n    returns(uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(\r\n        uint256 a, uint256 b\r\n    ) \r\n    internal \r\n    pure \r\n    returns(uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\ncontract iSimpleContract {\r\n    function changeRate(\r\n        uint256 value\r\n    ) \r\n    public \r\n    returns(bool);\r\n\r\n    function startMinting(\r\n        bool status\r\n    ) \r\n    public \r\n    returns(bool);  \r\n\r\n    function changeOwnerShip(\r\n        address toWhom\r\n    ) \r\n    public \r\n    returns(bool);\r\n\r\n    function releaseMintTokens() \r\n    public \r\n    returns(bool);\r\n\r\n    function transferMintTokens(\r\n        address to, uint256 value\r\n    ) \r\n    public \r\n    returns(bool);\r\n\r\n    function moveMintTokens(\r\n        address from, address to, uint256 value\r\n    ) \r\n    public \r\n    returns(bool);\r\n\r\n    function manageOperable(\r\n        address _from, bool _value\r\n    ) \r\n    public \r\n    returns(bool);\r\n\r\n    function isOperable(\r\n        address _from\r\n    ) \r\n    public \r\n    view \r\n    returns(bool);\r\n\r\n    event Release(\r\n        address indexed from, uint256 value\r\n    );\r\n\r\n    event Operable(\r\n        address indexed from, address indexed to, bool value\r\n    );\r\n}\r\ncontract iERC01Basic is iSimpleContract {\r\n    function totalSupply() \r\n    public \r\n    view \r\n    returns(uint256);\r\n\r\n    function balanceOf(\r\n        address who\r\n    ) \r\n    public \r\n    view \r\n    returns(uint256);\r\n\r\n    function transfer(\r\n        address to, uint256 value\r\n    ) \r\n    public \r\n    returns(bool);\r\n\r\n    function transferTokens()\r\n    public \r\n    payable;\r\n\r\n    event Transfer(\r\n        address indexed from, address indexed to, uint256 value\r\n    );\r\n}\r\ncontract iERC20 is iERC01Basic {\r\n    function allowance(\r\n        address owner, address spender\r\n    ) \r\n    public \r\n    view \r\n    returns(uint256);\r\n\r\n    function transferFrom(\r\n        address from, address to, uint256 value\r\n    ) \r\n    public \r\n    returns(bool);\r\n\r\n    function approve(\r\n        address spender, uint256 value\r\n    ) \r\n    public \r\n    returns(bool);\r\n    event Approval(\r\n        address indexed owner, address indexed spender, uint256 value\r\n    );\r\n}\r\ncontract ICWToken is iERC01Basic {\r\n    using iMath for uint256;\r\n    mapping(address => uint256)     balances;\r\n    mapping(address => bool)        operable;\r\n    address public                  contractModifierAddress;\r\n    uint256                         _totalSupply;\r\n    uint256                         _totalMintSupply;\r\n    uint256                         _maxMintable;\r\n    uint256                         _rate = 100;\r\n    bool                            _mintingStarted;\r\n    bool                            _minted;\r\n\r\n    uint8 public constant           decimals = 18;\r\n    uint256 public constant         INITIAL_SUPPLY = 150000000 * (10 ** uint256(decimals));\r\n\r\n    modifier onlyByOwned() \r\n    {\r\n        require(msg.sender == contractModifierAddress || operable[msg.sender] == true);\r\n        _;\r\n    }\r\n\r\n    function getMinted() \r\n    public \r\n    view \r\n    returns(bool) {\r\n        return _minted;\r\n    }\r\n\r\n    function getOwner() \r\n    public \r\n    view \r\n    returns(address) {\r\n        return contractModifierAddress;\r\n    }\r\n    \r\n    function getMintingStatus() \r\n    public \r\n    view \r\n    returns(bool) {\r\n        return _mintingStarted;\r\n    }\r\n\r\n    function getRate() \r\n    public \r\n    view \r\n    returns(uint256) {\r\n        return _rate;\r\n    }\r\n\r\n    function totalSupply() \r\n    public \r\n    view \r\n    returns(uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function totalMintSupply() \r\n    public \r\n    view \r\n    returns(uint256) {\r\n        return _totalMintSupply;\r\n    }\r\n\r\n    function balanceOf(\r\n        address _owner\r\n    ) \r\n    public \r\n    view \r\n    returns(uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function destroyContract() \r\n    public {\r\n        require(msg.sender == contractModifierAddress);\r\n        selfdestruct(contractModifierAddress);\r\n    }\r\n\r\n    function changeRate(\r\n        uint256 _value\r\n    ) \r\n    public \r\n    onlyByOwned \r\n    returns(bool) {\r\n        require(_value > 0);\r\n        _rate = _value;\r\n        return true;\r\n    }\r\n\r\n    function startMinting(\r\n        bool status_\r\n    ) \r\n    public \r\n    onlyByOwned \r\n    returns(bool) {\r\n        _mintingStarted = status_;\r\n        return true;\r\n    }\r\n\r\n    function changeOwnerShip(\r\n        address _to\r\n    ) \r\n    public \r\n    onlyByOwned \r\n    returns(bool) {\r\n        address oldOwner = contractModifierAddress;\r\n        uint256 balAmount = balances[oldOwner];\r\n        balances[_to] = balances[_to].add(balAmount);\r\n        balances[oldOwner] = 0;\r\n        contractModifierAddress = _to;\r\n        emit Transfer(oldOwner, contractModifierAddress, balAmount);\r\n        return true;\r\n    }\r\n\r\n    function releaseMintTokens() \r\n    public \r\n    onlyByOwned \r\n    returns(bool) {\r\n        require(_minted == false);\r\n        uint256 releaseAmount = _maxMintable.sub(_totalMintSupply);\r\n        uint256 totalReleased = _totalMintSupply.add(releaseAmount);\r\n        require(_maxMintable >= totalReleased);\r\n        _totalMintSupply = _totalMintSupply.add(releaseAmount);\r\n        balances[contractModifierAddress] = balances[contractModifierAddress].add(releaseAmount);\r\n        emit Transfer(0x0, contractModifierAddress, releaseAmount);\r\n        emit Release(contractModifierAddress, releaseAmount);\r\n        return true;\r\n    }\r\n\r\n    function transferMintTokens(\r\n        address _to, uint256 _value\r\n    ) \r\n    public \r\n    onlyByOwned\r\n    returns(bool) {\r\n        uint totalToken = _totalMintSupply.add(_value);\r\n        require(_maxMintable >= totalToken);\r\n        balances[_to] = balances[_to].add(_value);\r\n        _totalMintSupply = _totalMintSupply.add(_value);\r\n        emit Transfer(0x0, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function moveMintTokens(\r\n        address _from, address _to, uint256 _value\r\n    ) \r\n    public \r\n    onlyByOwned \r\n    returns(bool) {\r\n        require(_to != _from);\r\n        require(_value <= balances[_from]);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function manageOperable(\r\n        address _from, bool _value\r\n    ) \r\n    public returns(bool) {\r\n        require(msg.sender == contractModifierAddress);\r\n        operable[_from] = _value;\r\n        emit Operable(msg.sender, _from, _value);\r\n        return true;\r\n    }\r\n\r\n    function isOperable(\r\n        address _from\r\n    ) \r\n    public \r\n    view \r\n    returns(bool) {\r\n        return operable[_from];\r\n    }\r\n\r\n    function transferTokens()\r\n    public \r\n    payable {\r\n        require(_mintingStarted == true && msg.value > 0);\r\n        uint tokens = msg.value.mul(_rate);\r\n        uint totalToken = _totalMintSupply.add(tokens);\r\n        require(_maxMintable >= totalToken);\r\n        balances[msg.sender] = balances[msg.sender].add(tokens);\r\n        _totalMintSupply = _totalMintSupply.add(tokens);\r\n        contractModifierAddress.transfer(msg.value);\r\n        emit Transfer(0x0, msg.sender, tokens);\r\n    }\r\n\r\n    function transfer(\r\n        address _to, uint256 _value\r\n    ) \r\n    public \r\n    returns(bool) {\r\n        require(_to != msg.sender);\r\n        require(_value <= balances[msg.sender]);\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n}\r\ncontract iCashwebToken is iERC20, ICWToken {\r\n    mapping(\r\n        address => mapping(address => uint256)\r\n    ) internal _allowed;\r\n\r\n    function transferFrom(\r\n        address _from, address _to, uint256 _value\r\n    ) \r\n    public \r\n    returns(bool) {\r\n        require(_to != msg.sender);\r\n        require(_value <= balances[_from]);\r\n        require(_value <= _allowed[_from][msg.sender]);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        _allowed[_from][msg.sender] = _allowed[_from][msg.sender].sub(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(\r\n        address _spender, uint256 _value\r\n    ) \r\n    public \r\n    returns(bool) {\r\n        _allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(\r\n        address _owner, address _spender\r\n    ) \r\n    public \r\n    view \r\n    returns(uint256) {\r\n        return _allowed[_owner][_spender];\r\n    }\r\n\r\n    function increaseApproval(\r\n        address _spender, uint _addedValue\r\n    ) \r\n    public \r\n    returns(bool) {\r\n        _allowed[msg.sender][_spender] = _allowed[msg.sender][_spender].add(_addedValue);\r\n        emit Approval(msg.sender, _spender, _allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseApproval(\r\n        address _spender, uint _subtractedValue\r\n    ) \r\n    public \r\n    returns(bool) {\r\n        uint oldValue = _allowed[msg.sender][_spender];\r\n        if (_subtractedValue > oldValue) {\r\n            _allowed[msg.sender][_spender] = 0;\r\n        } else {\r\n            _allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n        }\r\n        emit Approval(msg.sender, _spender, _allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract iCashweb is iCashwebToken {\r\n    string public constant name = \"iCashweb\";\r\n    string public constant symbol = \"ICWeb\";\r\n    constructor() \r\n    public {\r\n        _mintingStarted = false;\r\n        _minted = false;\r\n        contractModifierAddress = msg.sender;\r\n        _totalSupply = INITIAL_SUPPLY * 2;\r\n        _maxMintable = INITIAL_SUPPLY;\r\n        balances[msg.sender] = INITIAL_SUPPLY;\r\n    }\r\n    function () \r\n    public \r\n    payable {\r\n        transferTokens();\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"changeOwnerShip\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroyContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferMintTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"manageOperable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transferTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractModifierAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseMintTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"isOperable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"moveMintTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"changeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMintSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMintingStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"status_\",\"type\":\"bool\"}],\"name\":\"startMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Release\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"Operable\",\"type\":\"event\"}]","ContractName":"iCashweb","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1a2794e8cea0985ea3ff2ff5fbe76674b398e60c018c73e577c430d58fdb11a7"}]}