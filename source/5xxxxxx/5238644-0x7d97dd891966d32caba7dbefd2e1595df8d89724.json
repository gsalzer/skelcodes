{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ninterface CCCRCoin {\r\n    function transfer(address receiver, uint amount);\r\n}\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n  address public manager;\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n    manager = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    owner = newOwner;\r\n  }\r\n  \r\n  modifier onlyManager() {\r\n    require(msg.sender == manager || msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferManagment(address newManager) public onlyOwner {\r\n    require(newManager != address(0));\r\n    manager = newManager;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n\r\n  bool public paused = false;\r\n  bool public finished = false;\r\n  \r\n  modifier whenSaleNotFinish() {\r\n    require(!finished);\r\n    _;\r\n  }\r\n\r\n  modifier whenSaleFinish() {\r\n    require(finished);\r\n    _;\r\n  }\r\n\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  function pause() onlyOwner whenNotPaused public {\r\n    paused = true;\r\n  }\r\n\r\n  function unpause() onlyOwner whenPaused public {\r\n    paused = false;\r\n  }\r\n}\r\n\r\ncontract CCCRSale is Pausable {\r\n    using SafeMath for uint256;\r\n\r\n    address public investWallet = 0xbb2efFab932a4c2f77Fc1617C1a563738D71B0a7;\r\n    CCCRCoin public tokenReward; \r\n    uint256 public tokenPrice = 723; // 1ETH / 1$\r\n    uint256 zeroAmount = 10000000000; // 10 zero\r\n    uint256 startline = 1510736400; // 15.11.17 12:00\r\n    uint256 public minCap = 300000000000000;\r\n    uint256 public totalRaised = 207038943697300;\r\n    uint256 public etherOne = 1000000000000000000;\r\n    uint256 public minimumTokens = 10;\r\n\r\n    function CCCRSale(address _tokenReward) {\r\n        tokenReward = CCCRCoin(_tokenReward);\r\n    }\r\n\r\n    function bytesToAddress(bytes source) internal pure returns(address) {\r\n        uint result;\r\n        uint mul = 1;\r\n        for(uint i = 20; i > 0; i--) {\r\n            result += uint8(source[i-1])*mul;\r\n            mul = mul*256;\r\n        }\r\n        return address(result);\r\n    }\r\n\r\n    function () whenNotPaused whenSaleNotFinish payable {\r\n\r\n      require(msg.value >= etherOne.div(tokenPrice).mul(minimumTokens));\r\n        \r\n      uint256 amountWei = msg.value;        \r\n      uint256 amount = amountWei.div(zeroAmount);\r\n      uint256 tokens = amount.mul(getRate());\r\n      \r\n      if(msg.data.length == 20) {\r\n          address referer = bytesToAddress(bytes(msg.data));\r\n          require(referer != msg.sender);\r\n          referer.transfer(amountWei.div(100).mul(20));\r\n      }\r\n      \r\n      tokenReward.transfer(msg.sender, tokens);\r\n      investWallet.transfer(this.balance);\r\n      totalRaised = totalRaised.add(tokens);\r\n\r\n      if (totalRaised >= minCap) {\r\n          finished = true;\r\n      }\r\n    }\r\n\r\n    function getRate() constant internal returns (uint256) {\r\n        if      (block.timestamp < startline + 19 days) return tokenPrice.mul(138).div(100);\r\n        else if (block.timestamp <= startline + 46 days) return tokenPrice.mul(123).div(100);\r\n        else if (block.timestamp <= startline + 60 days) return tokenPrice.mul(115).div(100);\r\n        else if (block.timestamp <= startline + 74 days) return tokenPrice.mul(109).div(100);\r\n        return tokenPrice;\r\n    }\r\n\r\n    function updatePrice(uint256 _tokenPrice) external onlyManager {\r\n        tokenPrice = _tokenPrice;\r\n    }\r\n\r\n    function transferTokens(uint256 _tokens) external onlyManager {\r\n        tokenReward.transfer(msg.sender, _tokens); \r\n    }\r\n\r\n    function newMinimumTokens(uint256 _minimumTokens) external onlyManager {\r\n        minimumTokens = _minimumTokens; \r\n    }\r\n\r\n    function getWei(uint256 _etherAmount) external onlyManager {\r\n        uint256 etherAmount = _etherAmount.mul(etherOne);\r\n        investWallet.transfer(etherAmount); \r\n    }\r\n\r\n    function airdrop(address[] _array1, uint256[] _array2) external whenSaleNotFinish onlyManager {\r\n       address[] memory arrayAddress = _array1;\r\n       uint256[] memory arrayAmount = _array2;\r\n       uint256 arrayLength = arrayAddress.length.sub(1);\r\n       uint256 i = 0;\r\n       \r\n      while (i <= arrayLength) {\r\n           tokenReward.transfer(arrayAddress[i], arrayAmount[i]);\r\n           i = i.add(1);\r\n      }  \r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"transferManagment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_array1\",\"type\":\"address[]\"},{\"name\":\"_array2\",\"type\":\"uint256[]\"}],\"name\":\"airdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etherOne\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_etherAmount\",\"type\":\"uint256\"}],\"name\":\"getWei\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minimumTokens\",\"type\":\"uint256\"}],\"name\":\"newMinimumTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenReward\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"CCCRSale","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000003cfce5b9e9109f3f13ead2579b867418b7c13bf1","Library":"","SwarmSource":"bzzr://174b8f4e4904680dacedec1ce6de280ba32986bf834c45e0fb04db72236f66aa"}]}