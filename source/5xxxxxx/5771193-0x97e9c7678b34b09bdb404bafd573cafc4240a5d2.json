{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n// assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n// assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ninterface TokenContract {\r\n  function transfer(address _recipient, uint256 _amount) external returns (bool);\r\n  function balanceOf(address _holder) external view returns (uint256);\r\n  function transferFrom(address _from, address _to, uint256 _value) external returns (bool);\r\n}\r\n\r\ncontract VfSE_Token_Exchange is Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  uint256 public buyPrice;\r\n  uint256 public sellPrice;\r\n  address public tokenAddress;\r\n  uint256 private fullEther = 1 ether;\r\n\r\n\r\n  constructor() public {\r\n    buyPrice = 360;\r\n    sellPrice = 300;\r\n    tokenAddress = 0xeDc2f2077252c2E9B5CB5b5713CC74A071A4d298;\r\n  }\r\n\r\n  function setBuyPrice(uint256 _price) onlyOwner public {\r\n    buyPrice = _price;\r\n  }\r\n\r\n  function setSellPrice(uint256 _price) onlyOwner public {\r\n    sellPrice = _price;\r\n  }\r\n\r\n  function() payable public {\r\n    sellTokens();\r\n  }\r\n\r\n  function sellTokens() payable public {\r\n    TokenContract tkn = TokenContract(tokenAddress);\r\n    uint256 tokensToSell = msg.value.mul(sellPrice);\r\n    tokensToSell = tokensToSell.div(100);\r\n    require(tkn.balanceOf(address(this)) >= tokensToSell);\r\n    tkn.transfer(msg.sender, tokensToSell);\r\n    emit SellTransaction(msg.value, tokensToSell);\r\n  }\r\n\r\n  function buyTokens(uint256 _amount) public {\r\n    address seller = msg.sender;\r\n    TokenContract tkn = TokenContract(tokenAddress);\r\n    uint256 transactionPrice = _amount.div(buyPrice);\r\n    transactionPrice = transactionPrice.mul(100);\r\n    require (address(this).balance >= transactionPrice);\r\n    require (tkn.transferFrom(msg.sender, address(this), _amount));\r\n    seller.transfer(transactionPrice);\r\n    emit BuyTransaction(transactionPrice, _amount);\r\n  }\r\n\r\n  function getBalance(uint256 _amount) onlyOwner public {\r\n    msg.sender.transfer(_amount);\r\n  }\r\n\r\n  function getTokens(uint256 _amount) onlyOwner public {\r\n    TokenContract tkn = TokenContract(tokenAddress);\r\n    tkn.transfer(msg.sender, _amount);\r\n  }\r\n\r\n  function killMe() onlyOwner public {\r\n    TokenContract tkn = TokenContract(tokenAddress);\r\n    uint256 tokensLeft = tkn.balanceOf(address(this));\r\n    tkn.transfer(msg.sender, tokensLeft);\r\n    msg.sender.transfer(address(this).balance);\r\n    selfdestruct(owner);\r\n  }\r\n\r\n  function changeToken(address _address) onlyOwner public {\r\n    tokenAddress = _address;\r\n  }\r\n\r\n  event SellTransaction(uint256 ethAmount, uint256 tokenAmount);\r\n  event BuyTransaction(uint256 ethAmount, uint256 tokenAmount);\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setBuyPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"changeToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sellTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"killMe\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setSellPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"SellTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"BuyTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"VfSE_Token_Exchange","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://20f3101d6b65b6df4d7b2fe5e66ab7ab399b02cc15a9bb26c7407d8e069dd39e"}]}