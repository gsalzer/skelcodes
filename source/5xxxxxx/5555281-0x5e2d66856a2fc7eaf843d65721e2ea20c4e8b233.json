{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address previousOwner, address newOwner);\r\n\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract StorageBase is Ownable {\r\n\r\n    function withdrawBalance() external onlyOwner returns (bool) {\r\n        // The owner has a method to withdraw balance from multiple contracts together,\r\n        // use send here to make sure even if one withdrawBalance fails the others will still work\r\n        bool res = msg.sender.send(address(this).balance);\r\n        return res;\r\n    }\r\n}\r\n\r\ncontract CryptoStorage is StorageBase {\r\n\r\n    struct Monster {\r\n        uint32 matronId;\r\n        uint32 sireId;\r\n        uint32 siringWithId;\r\n        uint16 cooldownIndex;\r\n        uint16 generation;\r\n        uint64 cooldownEndBlock;\r\n        uint64 birthTime;\r\n        uint16 monsterId;\r\n        uint32 monsterNum;\r\n        bytes properties;\r\n    }\r\n\r\n    // ERC721 tokens\r\n    Monster[] internal monsters;\r\n\r\n    // total number of monster created from system instead of breeding\r\n    uint256 public promoCreatedCount;\r\n\r\n    // total number of monster created by system sale address\r\n    uint256 public systemCreatedCount;\r\n\r\n    // number of monsters in pregnant\r\n    uint256 public pregnantMonsters;\r\n    \r\n    // monsterId => total number\r\n    mapping (uint256 => uint32) public monsterCurrentNumber;\r\n    \r\n    // tokenId => owner address\r\n    mapping (uint256 => address) public monsterIndexToOwner;\r\n\r\n    // owner address => balance of tokens\r\n    mapping (address => uint256) public ownershipTokenCount;\r\n\r\n    // tokenId => approved address\r\n    mapping (uint256 => address) public monsterIndexToApproved;\r\n\r\n    function CryptoStorage() public {\r\n        // placeholder to make the first available monster to have a tokenId starts from 1\r\n        createMonster(0, 0, 0, 0, 0, \"\");\r\n    }\r\n\r\n    function createMonster(\r\n        uint256 _matronId,\r\n        uint256 _sireId,\r\n        uint256 _generation,\r\n        uint256 _birthTime,\r\n        uint256 _monsterId,\r\n        bytes _properties\r\n    ) \r\n        public \r\n        onlyOwner\r\n        returns (uint256)\r\n    {\r\n        require(_matronId == uint256(uint32(_matronId)));\r\n        require(_sireId == uint256(uint32(_sireId)));\r\n        require(_generation == uint256(uint16(_generation)));\r\n        require(_birthTime == uint256(uint64(_birthTime)));\r\n        require(_monsterId == uint256(uint16(_monsterId)));\r\n\r\n        monsterCurrentNumber[_monsterId]++;\r\n\r\n        Monster memory monster = Monster({\r\n            matronId: uint32(_matronId),\r\n            sireId: uint32(_sireId),\r\n            siringWithId: 0,\r\n            cooldownIndex: 0,\r\n            generation: uint16(_generation),\r\n            cooldownEndBlock: 0,\r\n            birthTime: uint64(_birthTime),\r\n            monsterId: uint16(_monsterId),\r\n            monsterNum: monsterCurrentNumber[_monsterId],\r\n            properties: _properties\r\n        });\r\n        uint256 tokenId = monsters.push(monster) - 1;\r\n\r\n        // overflow check\r\n        require(tokenId == uint256(uint32(tokenId)));\r\n\r\n        return tokenId;\r\n    }\r\n\r\n    function getMonster(uint256 _tokenId)\r\n        external\r\n        view\r\n        returns (\r\n            bool isGestating,\r\n            bool isReady,\r\n            uint16 cooldownIndex,\r\n            uint64 nextActionAt,\r\n            uint32 siringWithId,\r\n            uint32 matronId,\r\n            uint32 sireId,\r\n            uint64 cooldownEndBlock,\r\n            uint16 generation,\r\n            uint64 birthTime,\r\n            uint32 monsterNum,\r\n            uint16 monsterId,\r\n            bytes properties\r\n        ) \r\n    {\r\n        Monster storage monster = monsters[_tokenId];\r\n\r\n        isGestating = (monster.siringWithId != 0);\r\n        isReady = (monster.cooldownEndBlock <= block.number);\r\n        cooldownIndex = monster.cooldownIndex;\r\n        nextActionAt = monster.cooldownEndBlock;\r\n        siringWithId = monster.siringWithId;\r\n        matronId = monster.matronId;\r\n        sireId = monster.sireId;\r\n        cooldownEndBlock = monster.cooldownEndBlock;\r\n        generation = monster.generation;\r\n        birthTime = monster.birthTime;\r\n        monsterNum = monster.monsterNum;\r\n        monsterId = monster.monsterId;\r\n        properties = monster.properties;\r\n    }\r\n\r\n    function getMonsterCount() external view returns (uint256) {\r\n        return monsters.length - 1;\r\n    }\r\n\r\n    function getMatronId(uint256 _tokenId) external view returns (uint32) {\r\n        return monsters[_tokenId].matronId;\r\n    }\r\n\r\n    function getSireId(uint256 _tokenId) external view returns (uint32) {\r\n        return monsters[_tokenId].sireId;\r\n    }\r\n\r\n    function getSiringWithId(uint256 _tokenId) external view returns (uint32) {\r\n        return monsters[_tokenId].siringWithId;\r\n    }\r\n    \r\n    function setSiringWithId(uint256 _tokenId, uint32 _siringWithId) external onlyOwner {\r\n        monsters[_tokenId].siringWithId = _siringWithId;\r\n    }\r\n\r\n    function deleteSiringWithId(uint256 _tokenId) external onlyOwner {\r\n        delete monsters[_tokenId].siringWithId;\r\n    }\r\n\r\n    function getCooldownIndex(uint256 _tokenId) external view returns (uint16) {\r\n        return monsters[_tokenId].cooldownIndex;\r\n    }\r\n\r\n    function setCooldownIndex(uint256 _tokenId) external onlyOwner {\r\n        monsters[_tokenId].cooldownIndex += 1;\r\n    }\r\n\r\n    function getGeneration(uint256 _tokenId) external view returns (uint16) {\r\n        return monsters[_tokenId].generation;\r\n    }\r\n\r\n    function getCooldownEndBlock(uint256 _tokenId) external view returns (uint64) {\r\n        return monsters[_tokenId].cooldownEndBlock;\r\n    }\r\n\r\n    function setCooldownEndBlock(uint256 _tokenId, uint64 _cooldownEndBlock) external onlyOwner {\r\n        monsters[_tokenId].cooldownEndBlock = _cooldownEndBlock;\r\n    }\r\n\r\n    function getBirthTime(uint256 _tokenId) external view returns (uint64) {\r\n        return monsters[_tokenId].birthTime;\r\n    }\r\n\r\n    function getMonsterId(uint256 _tokenId) external view returns (uint16) {\r\n        return monsters[_tokenId].monsterId;\r\n    }\r\n\r\n    function getMonsterNum(uint256 _tokenId) external view returns (uint32) {\r\n        return monsters[_tokenId].monsterNum;\r\n    }\r\n\r\n    function getProperties(uint256 _tokenId) external view returns (bytes) {\r\n        return monsters[_tokenId].properties;\r\n    }\r\n\r\n    function updateProperties(uint256 _tokenId, bytes _properties) external onlyOwner {\r\n        monsters[_tokenId].properties = _properties;\r\n    }\r\n    \r\n    function setMonsterIndexToOwner(uint256 _tokenId, address _owner) external onlyOwner {\r\n        monsterIndexToOwner[_tokenId] = _owner;\r\n    }\r\n\r\n    function increaseOwnershipTokenCount(address _owner) external onlyOwner {\r\n        ownershipTokenCount[_owner]++;\r\n    }\r\n\r\n    function decreaseOwnershipTokenCount(address _owner) external onlyOwner {\r\n        ownershipTokenCount[_owner]--;\r\n    }\r\n\r\n    function setMonsterIndexToApproved(uint256 _tokenId, address _approved) external onlyOwner {\r\n        monsterIndexToApproved[_tokenId] = _approved;\r\n    }\r\n    \r\n    function deleteMonsterIndexToApproved(uint256 _tokenId) external onlyOwner {\r\n        delete monsterIndexToApproved[_tokenId];\r\n    }\r\n\r\n    function increasePromoCreatedCount() external onlyOwner {\r\n        promoCreatedCount++;\r\n    }\r\n\r\n    function increaseSystemCreatedCount() external onlyOwner {\r\n        systemCreatedCount++;\r\n    }\r\n\r\n    function increasePregnantCounter() external onlyOwner {\r\n        pregnantMonsters++;\r\n    }\r\n\r\n    function decreasePregnantCounter() external onlyOwner {\r\n        pregnantMonsters--;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getMonsterId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"promoCreatedCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_properties\",\"type\":\"bytes\"}],\"name\":\"updateProperties\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getProperties\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"decreaseOwnershipTokenCount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"setCooldownIndex\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_cooldownEndBlock\",\"type\":\"uint64\"}],\"name\":\"setCooldownEndBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_approved\",\"type\":\"address\"}],\"name\":\"setMonsterIndexToApproved\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setMonsterIndexToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"increasePromoCreatedCount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getMonsterNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getBirthTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"decreasePregnantCounter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getGeneration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"increaseSystemCreatedCount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getMonster\",\"outputs\":[{\"name\":\"isGestating\",\"type\":\"bool\"},{\"name\":\"isReady\",\"type\":\"bool\"},{\"name\":\"cooldownIndex\",\"type\":\"uint16\"},{\"name\":\"nextActionAt\",\"type\":\"uint64\"},{\"name\":\"siringWithId\",\"type\":\"uint32\"},{\"name\":\"matronId\",\"type\":\"uint32\"},{\"name\":\"sireId\",\"type\":\"uint32\"},{\"name\":\"cooldownEndBlock\",\"type\":\"uint64\"},{\"name\":\"generation\",\"type\":\"uint16\"},{\"name\":\"birthTime\",\"type\":\"uint64\"},{\"name\":\"monsterNum\",\"type\":\"uint32\"},{\"name\":\"monsterId\",\"type\":\"uint16\"},{\"name\":\"properties\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"increaseOwnershipTokenCount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getSiringWithId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"monsterIndexToApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_matronId\",\"type\":\"uint256\"},{\"name\":\"_sireId\",\"type\":\"uint256\"},{\"name\":\"_generation\",\"type\":\"uint256\"},{\"name\":\"_birthTime\",\"type\":\"uint256\"},{\"name\":\"_monsterId\",\"type\":\"uint256\"},{\"name\":\"_properties\",\"type\":\"bytes\"}],\"name\":\"createMonster\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMonsterCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getSireId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"deleteMonsterIndexToApproved\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getCooldownEndBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"deleteSiringWithId\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"systemCreatedCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"monsterIndexToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getMatronId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pregnantMonsters\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"increasePregnantCounter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownershipTokenCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getCooldownIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"monsterCurrentNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_siringWithId\",\"type\":\"uint32\"}],\"name\":\"setSiringWithId\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"CryptoStorage","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://985a9f04610a62f34e43bb90768a347658acba666a76ba76005f56dfc2105540"}]}