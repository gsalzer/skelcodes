{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Jackpot {\r\n\r\n    uint64 public nextJackpotTime;\r\n    bool public jackpotPaused;\r\n    address public owner;\r\n    uint public jackpotPersent = 100;\r\n    uint public  winnerLimit = 1;\r\n    uint public JackpotPeriods = 1;\r\n    address public diceRollAddress;\r\n\r\n    mapping (uint=>address) public winnerHistory;\r\n    address[] public tempPlayer;\r\n\r\n    event SendJackpotSuccesss(address indexed winner, uint amount, uint JackpotPeriods);\r\n    event OwnerTransfer(address SentToAddress, uint AmountTransferred);\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyDiceRoll {\r\n        require(msg.sender == diceRollAddress);\r\n        _;\r\n    }\r\n\r\n    modifier jackpotAreActive {\r\n        require(!jackpotPaused);\r\n        _;\r\n    }\r\n\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n\r\n    function() external payable {\r\n\r\n    }\r\n\r\n    function getWinnerHistory(uint periods) external view returns(address){\r\n        return winnerHistory[periods];\r\n    }\r\n\r\n    function addPlayer(address add) public onlyDiceRoll jackpotAreActive{\r\n        tempPlayer.push(add);\r\n        \r\n    }\r\n\r\n    function createWinner() public onlyOwner jackpotAreActive {\r\n        require(tempPlayer.length > 0);\r\n        uint random = rand() % tempPlayer.length;\r\n        address winner = tempPlayer[random];\r\n        winnerHistory[JackpotPeriods] = winner;\r\n        uint64 tmNow = uint64(block.timestamp);\r\n        nextJackpotTime = tmNow + 72000;\r\n        tempPlayer.length = 0;\r\n        sendJackpot(winner, address(this).balance * jackpotPersent / 1000);\r\n        JackpotPeriods += 1;\r\n    }\r\n\r\n\r\n    function sendJackpot(address winner, uint256 amount) internal {\r\n        require(address(this).balance > amount);\r\n        emit SendJackpotSuccesss(winner, amount,JackpotPeriods);\r\n        winner.transfer(amount);\r\n        \r\n    }\r\n\r\n    function seTJackpotPersent(uint newPersent) external onlyOwner{\r\n        require(newPersent > 0 && newPersent < 1000);\r\n        jackpotPersent = newPersent;\r\n    }\r\n\r\n    function rand() internal view returns (uint256) {\r\n        return uint256(keccak256(msg.sender, blockhash(block.number - 1), block.coinbase, block.difficulty));\r\n    }\r\n\r\n\r\n    function ownerPauseJackpot(bool newStatus) public onlyOwner{\r\n        jackpotPaused = newStatus;\r\n    }\r\n\r\n    function ownerSetdiceRollAddress(address add) public onlyOwner {\r\n        diceRollAddress = add;\r\n    }\r\n\r\n    function ownerTransferEther(address sendTo, uint amount) public onlyOwner{    \r\n        sendTo.transfer(amount);\r\n        emit OwnerTransfer(sendTo, amount);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tempPlayer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"diceRollAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createWinner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"jackpotPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"add\",\"type\":\"address\"}],\"name\":\"ownerSetdiceRollAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextJackpotTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"jackpotPersent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winnerHistory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sendTo\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ownerTransferEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newStatus\",\"type\":\"bool\"}],\"name\":\"ownerPauseJackpot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newPersent\",\"type\":\"uint256\"}],\"name\":\"seTJackpotPersent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"add\",\"type\":\"address\"}],\"name\":\"addPlayer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"periods\",\"type\":\"uint256\"}],\"name\":\"getWinnerHistory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JackpotPeriods\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"JackpotPeriods\",\"type\":\"uint256\"}],\"name\":\"SendJackpotSuccesss\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"SentToAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"AmountTransferred\",\"type\":\"uint256\"}],\"name\":\"OwnerTransfer\",\"type\":\"event\"}]","ContractName":"Jackpot","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://25322d539fa5c77cad8092d256e008db251561bf60e6219cfb795276726a175a"}]}