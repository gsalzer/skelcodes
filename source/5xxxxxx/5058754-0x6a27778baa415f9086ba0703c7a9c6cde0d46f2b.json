{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract SafeMath{\r\n  function safeMul(uint a, uint b) internal returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint a, uint b) internal returns (uint) {\r\n    assert(b > 0);\r\n    uint c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\t\r\n\tfunction safeSub(uint a, uint b) internal returns (uint) {\r\n    \tassert(b <= a);\r\n    \treturn a - b;\r\n  }\r\n\r\n\tfunction safeAdd(uint a, uint b) internal returns (uint) {\r\n    \tuint c = a + b;\r\n    \tassert(c >= a);\r\n    \treturn c;\r\n  }\r\n\tfunction assert(bool assertion) internal {\r\n\t    if (!assertion) {\r\n\t      throw;\r\n\t    }\r\n\t}\r\n}\r\n\r\n\r\ncontract ERC20{\r\n\r\n \tfunction totalSupply() constant returns (uint256 totalSupply) {}\r\n\tfunction balanceOf(address _owner) constant returns (uint256 balance) {}\r\n\tfunction transfer(address _recipient, uint256 _value) returns (bool success) {}\r\n\tfunction transferFrom(address _from, address _recipient, uint256 _value) returns (bool success) {}\r\n\tfunction approve(address _spender, uint256 _value) returns (bool success) {}\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\r\n\r\n\tevent Transfer(address indexed _from, address indexed _recipient, uint256 _value);\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n\r\n}\r\n\r\ncontract XtremcoinToken is ERC20, SafeMath{\r\n\r\n\t\r\n\tmapping(address => uint256) balances;\r\n\r\n\tstring \tpublic name = \"Xtremcoin\";\r\n\tstring \tpublic symbol = \"XTR\";\r\n\tuint \tpublic decimals = 8;\r\n\tuint256 public CIR_SUPPLY;\r\n\tuint256 public totalSupply;\r\n\tuint256 public price;\r\n\taddress public owner;\r\n\tuint256 public endTime;\r\n\tuint256 public startTime;\r\n\r\n\tfunction XtremcoinToken(uint256 _initial_supply, uint256 _price, uint256 _cir_supply) {\r\n\t\ttotalSupply = _initial_supply;\r\n\t\tbalances[msg.sender] = _initial_supply;  // Give all of the initial tokens to the contract deployer.\r\n\t\tCIR_SUPPLY = _cir_supply;\r\n\t\tendTime = now + 17 weeks;\r\n\t\tstartTime = now + 15 days;\r\n\t\towner \t= msg.sender;\r\n\t\tprice \t= _price;\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) constant returns (uint256 balance) {\r\n\t    return balances[_owner];\r\n\t}\r\n    \r\n\tfunction transfer(address _to, uint256 _value) returns (bool success){\r\n\t    require (_to != 0x0);                               // Prevent transfer to 0x0 address. Use burn() instead\r\n        require (balances[msg.sender] > _value);                // Check if the sender has enough\r\n        require (safeAdd(balances[_to], _value) > balances[_to]); // Check for overflows\r\n\t    balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n\t    balances[_to] = safeAdd(balances[_to], _value);\r\n\t    Transfer(msg.sender, _to, _value);\r\n\t    return true;\r\n\t}\r\n\r\n\tmapping (address => mapping (address => uint256)) allowed;\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) returns (bool success){\r\n\t    var _allowance = allowed[_from][msg.sender];\r\n\t    require (_value < _allowance);\r\n\t    \r\n\t    require (_to != 0x0);                               // Prevent transfer to 0x0 address. Use burn() instead\r\n        require (balances[msg.sender] > _value);                // Check if the sender has enough\r\n        require (safeAdd(balances[_to], _value) > balances[_to]); // Check for overflows\r\n\t    balances[_to] = safeAdd(balances[_to], _value);\r\n\t    balances[_from] = safeSub(balances[_from], _value);\r\n\t    allowed[_from][msg.sender] = safeSub(_allowance, _value);\r\n\t    Transfer(_from, _to, _value);\r\n\t    return true;\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _value) returns (bool success) {\r\n\t    allowed[msg.sender][_spender] = _value;\r\n\t    Approval(msg.sender, _spender, _value);\r\n\t    return true;\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n\t    return allowed[_owner][_spender];\r\n\t}\r\n\r\n\r\n\tmodifier during_offering_time(){\r\n\t\tif (now < startTime || now >= endTime){\r\n\t\t\tthrow;\r\n\t\t}else{\r\n\t\t\t_;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction () payable during_offering_time {\r\n\t\tcreateTokens(msg.sender);\r\n\t}\r\n\r\n\tfunction createTokens(address recipient) payable {\r\n\t\tif (msg.value == 0) {\r\n\t\t  throw;\r\n\t\t}\r\n\t\tuint tokens = safeDiv(safeMul(msg.value, price), 1 ether);\r\n        if(safeSub(balances[owner],tokens)>safeSub(totalSupply, CIR_SUPPLY)){\r\n            balances[owner] = safeSub(balances[owner], tokens);\r\n\t\t    balances[recipient] = safeAdd(balances[recipient], tokens);   \r\n        }else{\r\n            throw;\r\n        }\r\n\r\n\t\tif (!owner.send(msg.value)) {\r\n\t\t  throw;\r\n\t\t}\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"CIR_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"createTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initial_supply\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_cir_supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"XtremcoinToken","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000007300a3c56c3e00000000000000000000000000000000000000000000000000000000c07b234270000000000000000000000000000000000000000000000000000000c07b23427","Library":"","SwarmSource":"bzzr://a34c920482f04e133767b001de965becbaa3de630c24cf48c0f86dcfcada3c87"}]}