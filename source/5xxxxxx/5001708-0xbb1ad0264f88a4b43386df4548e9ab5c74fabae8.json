{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.19;\r\n\r\n\r\ncontract Ownable {\r\naddress public owner;\r\n\r\n\r\nevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n/**\r\n* @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n* account.\r\n*/\r\nfunction Ownable() public {\r\nowner = msg.sender;\r\n}\r\n\r\n\r\n/**\r\n* @dev Throws if called by any account other than the owner.\r\n*/\r\nmodifier onlyOwner() {\r\nrequire(msg.sender == owner);\r\n_;\r\n}\r\n\r\n\r\n/**\r\n* @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n* @param newOwner The address to transfer ownership to.\r\n*/\r\nfunction transferOwnership(address newOwner) public onlyOwner {\r\nrequire(newOwner != address(0));\r\nOwnershipTransferred(owner, newOwner);\r\nowner = newOwner;\r\n}\r\n\r\n}\r\n\r\n/**\r\n* @title Pausable\r\n* @dev Base contract which allows children to implement an emergency stop mechanism.\r\n*/\r\ncontract Pausable is Ownable {\r\nevent Pause();\r\nevent Unpause();\r\n\r\nbool public paused = false;\r\n\r\n\r\n/**\r\n* @dev Modifier to make a function callable only when the contract is not paused.\r\n*/\r\nmodifier whenNotPaused() {\r\nrequire(!paused);\r\n_;\r\n}\r\n\r\n/**\r\n* @dev Modifier to make a function callable only when the contract is paused.\r\n*/\r\nmodifier whenPaused() {\r\nrequire(paused);\r\n_;\r\n}\r\n\r\n/**\r\n* @dev called by the owner to pause, triggers stopped state\r\n*/\r\nfunction pause() onlyOwner whenNotPaused public {\r\npaused = true;\r\nPause();\r\n}\r\n\r\n/**\r\n* @dev called by the owner to unpause, returns to normal state\r\n*/\r\nfunction unpause() onlyOwner whenPaused public {\r\npaused = false;\r\nUnpause();\r\n}\r\n}\r\n\r\n\r\ncontract BetContract is Pausable{\r\n\r\n//This contract is owned and desgined by etherbets.io\r\n\r\n//Our contract has only 5 transfer function calls,\r\n//the first two are used to return all bets without collecting a fee\r\n//in case something goes wrong.\r\n//The next two are used to pay to the A team or B team respectively and after everything is payed,\r\n//the left over balance (fee) is sent in the last transfer function call.\r\n\r\n//Its also important to note that we have to other contracts that are used to receive funds\r\n//and send them directly to the main contract to the correct team, the main contract owns this two other contracts.\r\n//This was made to make it easier to place bets.\r\n\r\n\r\n\r\nuint minAmount;\r\nuint feePercentage;\r\nuint AteamAmount = 0;\r\nuint BteamAmount = 0;\r\n\r\naddress Acontract;\r\naddress Bcontract;\r\naddress fundCollection;\r\nuint public transperrun;\r\n\r\nteam[] public AteamBets;\r\nteam[] public BteamBets;\r\n\r\nstruct team{\r\naddress betOwner;\r\nuint amount;\r\nuint date;\r\n\r\n\r\n}\r\n\r\n\r\n\r\nfunction BetContract() public {\r\n\r\nminAmount = 0.02 ether;\r\nfeePercentage = 9500;\r\n\r\nfundCollection = owner;\r\ntransperrun = 25;\r\nAcontract = new BetA(this,minAmount,\"A\");\r\nBcontract = new BetB(this,minAmount,\"B\");\r\n\r\n}\r\n\r\n\r\n\r\nfunction changeFundCollection(address _newFundCollection) public onlyOwner{\r\nfundCollection = _newFundCollection;\r\n}\r\n\r\nfunction contractBalance () public view returns(uint balance){\r\n\r\nreturn this.balance;\r\n\r\n}\r\n\r\n\r\nfunction contractFeeMinAmount () public view returns (uint _feePercentage, uint _minAmount){\r\nreturn (feePercentage, minAmount);\r\n}\r\n\r\nfunction betALenght() public view returns(uint lengthA){\r\nreturn AteamBets.length;\r\n}\r\n\r\nfunction betBLenght() public view returns(uint lengthB){\r\nreturn BteamBets.length;\r\n}\r\n\r\nfunction teamAmounts() public view returns(uint A,uint B){\r\nreturn(AteamAmount,BteamAmount);\r\n}\r\nfunction BetAnB() public view returns(address A, address B){\r\nreturn (Acontract,Bcontract);\r\n}\r\n\r\nfunction setTransperRun(uint _transperrun) public onlyOwner{\r\ntransperrun = _transperrun;\r\n}\r\n\r\nfunction cancelBet() public onlyOwner returns(uint _balance){\r\nrequire(this.balance > 0);\r\n//uint i;\r\nteam memory tempteam;\r\nuint p;\r\n\r\n\r\nif (AteamBets.length < transperrun)\r\np = AteamBets.length;\r\nelse\r\np = transperrun;\r\n\r\n//i = 0;\r\nwhile (p > 0){\r\n\r\ntempteam = AteamBets[p-1];\r\nAteamBets[p-1] = AteamBets[AteamBets.length -1];\r\ndelete AteamBets[AteamBets.length - 1 ];\r\nAteamBets.length --;\r\np --;\r\n//i ++;\r\nAteamAmount = AteamAmount - tempteam.amount;\r\n//****************TRANSFER***************\r\ntempteam.betOwner.transfer(tempteam.amount);\r\ntempteam.amount = 0;\r\n\r\n\r\n}\r\n\r\nif (BteamBets.length < transperrun)\r\np = BteamBets.length;\r\nelse\r\np = transperrun;\r\n//i= 0;\r\nwhile (p > 0){\r\n\r\ntempteam = BteamBets[p-1];\r\nBteamBets[p-1] = BteamBets[BteamBets.length - 1];\r\ndelete BteamBets[BteamBets.length - 1];\r\nBteamBets.length --;\r\np--;\r\n//i++;\r\nBteamAmount = BteamAmount - tempteam.amount;\r\n//****************TRANSFER***************\r\ntempteam.betOwner.transfer(tempteam.amount);\r\ntempteam.amount = 0;\r\n\r\n\r\n}\r\n\r\n\r\nreturn this.balance;\r\n\r\n\r\n\r\n}\r\n\r\nfunction result(uint _team) public onlyOwner returns (uint _balance){\r\nrequire(this.balance > 0);\r\nrequire(checkTeamValue(_team));\r\n\r\n//uint i;\r\nuint transferAmount = 0;\r\nteam memory tempteam;\r\nuint p;\r\n\r\nif(_team == 1){\r\n\r\n\r\n\r\nif (AteamBets.length < transperrun)\r\np = AteamBets.length;\r\nelse\r\np = transperrun;\r\n\r\n//i = 0;\r\nwhile (p > 0){\r\ntransferAmount = AteamBets[p-1].amount + (AteamBets[p-1].amount * BteamAmount / AteamAmount);\r\ntempteam = AteamBets[p-1];\r\n\r\nAteamBets[p-1] = AteamBets[AteamBets.length -1];\r\ndelete AteamBets[AteamBets.length - 1 ];\r\nAteamBets.length --;\r\np --;\r\n//i++;\r\n\r\n//AteamAmount = AteamAmount - tempteam.amount;\r\n\r\n//****************TRANSFER***************\r\ntempteam.betOwner.transfer(transferAmount * feePercentage/10000);\r\ntempteam.amount = 0;\r\ntransferAmount = 0;\r\n\r\n}\r\n\r\n\r\n}else{\r\n\r\nif (BteamBets.length < transperrun)\r\np = BteamBets.length;\r\nelse\r\np = transperrun;\r\n//i = 0;\r\nwhile (p > 0){\r\ntransferAmount = BteamBets[p-1].amount + (BteamBets[p-1].amount * AteamAmount / BteamAmount);\r\ntempteam = BteamBets[p-1];\r\nBteamBets[p-1] = BteamBets[BteamBets.length - 1];\r\ndelete BteamBets[BteamBets.length - 1];\r\nBteamBets.length --;\r\np--;\r\n//i++;\r\n//BteamAmount = BteamAmount - tempteam.amount;\r\n//****************TRANSFER***************\r\ntempteam.betOwner.transfer(transferAmount * feePercentage/10000);\r\ntempteam.amount = 0;\r\ntransferAmount = 0;\r\n\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n//****************TRANSFER***************\r\nif (AteamBets.length == 0 || BteamBets.length == 0){\r\nfundCollection.transfer(this.balance);\r\n}\r\n\r\nif(this.balance == 0){\r\ndelete AteamBets;\r\ndelete BteamBets;\r\nAteamAmount = 0;\r\nBteamAmount = 0;\r\n}\r\nreturn this.balance;\r\n\r\n\r\n\r\n}\r\n\r\nfunction checkTeamValue(uint _team) private pure returns (bool ct){\r\nbool correctteam = false;\r\nif (_team == 1){\r\ncorrectteam = true;\r\n}else{\r\nif (_team == 2){\r\ncorrectteam = true;\r\n}\r\n}\r\nreturn correctteam;\r\n}\r\n\r\n\r\nfunction bet(uint _team,address _betOwner) payable public returns (bool success){\r\nrequire(paused == false);\r\nrequire(msg.value >= minAmount);\r\n\r\n\r\nrequire(checkTeamValue(_team));\r\n\r\nbool _success = false;\r\n\r\n\r\nuint finalBetAmount = msg.value;\r\n\r\nif (_team == 1){\r\nAteamBets.push(team(_betOwner,finalBetAmount,now));\r\nAteamAmount = AteamAmount + finalBetAmount;\r\n_success = true;\r\n}\r\n\r\nif(_team == 2){\r\nBteamBets.push(team(_betOwner,finalBetAmount,now));\r\nBteamAmount = BteamAmount + finalBetAmount;\r\n_success = true;\r\n}\r\n\r\nreturn _success;\r\n\r\n}\r\n}\r\ncontract TeamBet{\r\nuint minAmount;\r\n\r\nstring teamName;\r\n\r\n\r\nBetContract ownerContract;\r\n\r\nfunction showTeam() public view returns(string team){\r\nreturn teamName;\r\n}\r\n\r\nfunction showOwnerContract() public view returns(address _ownerContract) {\r\n\r\nreturn ownerContract;\r\n}\r\n\r\n\r\n}\r\ncontract BetA is TeamBet{\r\n\r\nfunction BetA(BetContract _BetContract,uint _minAmount, string _teamName) public{\r\n\r\nownerContract = _BetContract;\r\nminAmount = _minAmount;\r\nteamName = _teamName;\r\n}\r\n\r\n\r\nfunction() public payable {\r\n//****************TRANSFER TO MAIN CONTRACT***************\r\nrequire(ownerContract.bet.value(msg.value)(1,msg.sender));\r\n\r\n}\r\n\r\n}\r\n\r\ncontract BetB is TeamBet{\r\n\r\nfunction BetB(BetContract _BetContract,uint _minAmount, string _teamName) public{\r\n\r\nownerContract = _BetContract;\r\nminAmount = _minAmount;\r\nteamName = _teamName;\r\n}\r\n\r\nfunction() public payable {\r\n//****************TRANSFER TO MAIN CONTRACT***************\r\nrequire(ownerContract.bet.value(msg.value)(2,msg.sender));\r\n\r\n}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_newFundCollection\",\"type\":\"address\"}],\"name\":\"changeFundCollection\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamAmounts\",\"outputs\":[{\"name\":\"A\",\"type\":\"uint256\"},{\"name\":\"B\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"BteamBets\",\"outputs\":[{\"name\":\"betOwner\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"date\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_team\",\"type\":\"uint256\"}],\"name\":\"result\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AteamBets\",\"outputs\":[{\"name\":\"betOwner\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"date\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractFeeMinAmount\",\"outputs\":[{\"name\":\"_feePercentage\",\"type\":\"uint256\"},{\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_team\",\"type\":\"uint256\"},{\"name\":\"_betOwner\",\"type\":\"address\"}],\"name\":\"bet\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"betBLenght\",\"outputs\":[{\"name\":\"lengthB\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cancelBet\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transperrun\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"betALenght\",\"outputs\":[{\"name\":\"lengthA\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BetAnB\",\"outputs\":[{\"name\":\"A\",\"type\":\"address\"},{\"name\":\"B\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_transperrun\",\"type\":\"uint256\"}],\"name\":\"setTransperRun\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"BetContract","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f3140ffde85b2d8772f220c0984429fd0985c2d27b302a335250c1d02a92340a"}]}