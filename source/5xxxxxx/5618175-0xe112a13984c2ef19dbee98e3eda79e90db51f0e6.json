{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n\r\ncontract AddressProxy {\r\n\r\n    struct ContractAddress {\r\n        bytes32 id;\r\n        string name;\r\n        address at;\r\n        uint createdTime;\r\n        uint updatedTime;\r\n    }\r\n\r\n    address public owner;\r\n    mapping(bytes32 => ContractAddress) private contractsAddress;\r\n    bytes32[] public availableIds;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    event AddressCreated(bytes32 id, string name, address at, uint createdTime, uint updatedTime);\r\n    event AddressUpdated(bytes32 id, string name, address at, uint createdTime, uint updatedTime);\r\n\r\n    function AddressProxy() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function getAvailableIds() public view returns (bytes32[]) {\r\n        return availableIds;\r\n    }\r\n\r\n    //  Adds or updates an address\r\n    //  @params {string} name - the name of the contract Address\r\n    //  @params {address} newAddress\r\n    function addAddress(string name, address newAddress) public onlyOwner {\r\n        bytes32 contAddId = stringToBytes32(name);\r\n\r\n        uint nowInMilliseconds = now * 1000;\r\n\r\n        if (contractsAddress[contAddId].id == 0x0) {\r\n            ContractAddress memory newContractAddress;\r\n            newContractAddress.id = contAddId;\r\n            newContractAddress.name = name;\r\n            newContractAddress.at = newAddress;\r\n            newContractAddress.createdTime = nowInMilliseconds;\r\n            newContractAddress.updatedTime = nowInMilliseconds;\r\n            availableIds.push(contAddId);\r\n            contractsAddress[contAddId] = newContractAddress;\r\n\r\n            emit AddressCreated(newContractAddress.id, newContractAddress.name, newContractAddress.at, newContractAddress.createdTime, newContractAddress.updatedTime);\r\n        } else {\r\n            ContractAddress storage contAdd = contractsAddress[contAddId];\r\n            contAdd.at = newAddress;\r\n            contAdd.updatedTime = nowInMilliseconds;\r\n\r\n            emit AddressUpdated(contAdd.id, contAdd.name, contAdd.at, contAdd.createdTime, contAdd.updatedTime);\r\n        }\r\n    }\r\n\r\n    function getContractNameById(bytes32 id) public view returns(string) {\r\n        return contractsAddress[id].name;\r\n    }\r\n\r\n    function getContractAddressById(bytes32 id) public view returns(address) {\r\n        return contractsAddress[id].at;\r\n    }\r\n\r\n    function getContractCreatedTimeById(bytes32 id) public view returns(uint) {\r\n        return contractsAddress[id].createdTime;\r\n    }\r\n\r\n    function getContractUpdatedTimeById(bytes32 id) public view returns(uint) {\r\n        return contractsAddress[id].updatedTime;\r\n    }\r\n\r\n    //  @params {string} source\r\n    //  @return {bytes32}\r\n    function stringToBytes32(string source) internal pure returns (bytes32 result) {\r\n        bytes memory tempEmptyStringTest = bytes(source);\r\n        if (tempEmptyStringTest.length == 0) {\r\n            return 0x0;\r\n        }\r\n\r\n        assembly {\r\n            result := mload(add(source, 32))\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getContractUpdatedTimeById\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAvailableIds\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getContractNameById\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"addAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"availableIds\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getContractCreatedTimeById\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getContractAddressById\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"at\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"createdTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"updatedTime\",\"type\":\"uint256\"}],\"name\":\"AddressCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"at\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"createdTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"updatedTime\",\"type\":\"uint256\"}],\"name\":\"AddressUpdated\",\"type\":\"event\"}]","ContractName":"AddressProxy","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b7cbe0fa0fefeaa52569e1a625c4b2b34170cad3910dc961fa62cf9de62cb09b"}]}