{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n/**\r\n* @dev EtherLands PreSale contract.\r\n*\r\n*/\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract PreSale is Ownable {\r\n    uint256 constant public INCREASE_RATE = 700000000000000;\r\n    uint256 constant public START_TIME = 1520972971;\r\n    uint256 constant public END_TIME =   1552508971;\r\n\r\n    uint256 public landsSold;\r\n    mapping (address => uint32) public lands;\r\n\r\n    bool private paused = false; \r\n\r\n    function PreSale() payable public {\r\n    }\r\n\r\n    event landsPurchased(address indexed purchaser, uint256 value, uint32 quantity);\r\n    \r\n    event landsRedeemed(address indexed sender, uint256 lands);\r\n\r\n    function bulkPurchageLand() payable public {\r\n        require(now > START_TIME);\r\n        require(now < END_TIME);\r\n        require(paused == false);\r\n        require(msg.value >= (landPriceCurrent() * 5));\r\n        lands[msg.sender] = lands[msg.sender] + 5;\r\n        landsSold = landsSold + 5;\r\n        landsPurchased(msg.sender, msg.value, 5);\r\n    }\r\n    \r\n    function purchaseLand() payable public {\r\n        require(now > START_TIME);\r\n        require(now < END_TIME);\r\n        require(paused == false);\r\n        require(msg.value >= landPriceCurrent());\r\n\r\n        lands[msg.sender] = lands[msg.sender] + 1;\r\n        landsSold = landsSold + 1;\r\n        \r\n        landsPurchased(msg.sender, msg.value, 1);\r\n    }\r\n    \r\n    function redeemLand(address targetUser) public onlyOwner returns(uint256) {\r\n        require(paused == false);\r\n        require(lands[targetUser] > 0);\r\n\r\n        landsRedeemed(targetUser, lands[targetUser]);\r\n\r\n        uint256 userlands = lands[targetUser];\r\n        lands[targetUser] = 0;\r\n        return userlands;\r\n    }\r\n\r\n    function landPriceCurrent() view public returns(uint256) {\r\n        return (landsSold + 1) * INCREASE_RATE;\r\n    }\r\n     \r\n    function landPricePrevious() view public returns(uint256) {\r\n        return (landsSold) * INCREASE_RATE;\r\n    }\r\n\r\n    function withdrawal() onlyOwner public {\r\n        owner.transfer(this.balance);\r\n    }\r\n\r\n    function pause() onlyOwner public {\r\n        paused = true;\r\n    }\r\n    \r\n    function resume() onlyOwner public {\r\n        paused = false;\r\n    }\r\n\r\n    function isPaused () onlyOwner public view returns(bool) {\r\n        return paused;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"landPricePrevious\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resume\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"purchaseLand\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lands\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"END_TIME\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"landPriceCurrent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"landsSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"bulkPurchageLand\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INCREASE_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"START_TIME\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"targetUser\",\"type\":\"address\"}],\"name\":\"redeemLand\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"quantity\",\"type\":\"uint32\"}],\"name\":\"landsPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"lands\",\"type\":\"uint256\"}],\"name\":\"landsRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"PreSale","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2a7345e39eb5be5086ce7d33e8fe387314de1aa4f6b26a0999d5a44dc783ab43"}]}