{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.23;\r\n/**\r\n* @notice IAD Wallet Token Contract\r\n* @dev ERC-20 Standard Compliant Token handler\r\n*/\r\n\r\n/**\r\n* @title Admin parameters\r\n* @dev Define administration parameters for this contract\r\n*/\r\ncontract admined { //This token contract is administered\r\n    address public admin; //Admin address is public\r\n\r\n    /**\r\n    * @dev Contract constructor\r\n    * define initial administrator\r\n    */\r\n    constructor() internal {\r\n        admin = msg.sender; //Set initial admin to contract creator\r\n        emit Admined(admin);\r\n    }\r\n\r\n    modifier onlyAdmin() { //A modifier to define admin-only functions\r\n        require(msg.sender == admin);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev Function to set new admin address\r\n    * @param _newAdmin The address to transfer administration to\r\n    */\r\n    function transferAdminship(address _newAdmin) onlyAdmin public { //Admin can be transfered\r\n        require(_newAdmin != 0);\r\n        admin = _newAdmin;\r\n        emit TransferAdminship(admin);\r\n    }\r\n\r\n    //All admin actions have a log for public review\r\n    event TransferAdminship(address newAdminister);\r\n    event Admined(address administer);\r\n\r\n}\r\n\r\n/**\r\n* @title ERC20 interface\r\n* @dev see https://github.com/ethereum/EIPs/issues/20\r\n*/\r\ncontract ERC20 {\r\n    function name() public view returns (string);\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address who) public view returns (uint256);\r\n    function transfer(address to, uint256 value) public;\r\n    function allowance(address owner, address spender) public view;\r\n    function transferFrom(address from, address to, uint256 value) public;\r\n    function approve(address spender, uint256 value) public;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/**\r\n* @title Token wallet\r\n* @dev ERC20 Token compliant\r\n*/\r\ncontract TokenWallet is admined {\r\n\r\n    /**\r\n    * @notice token contructor.\r\n    */\r\n    constructor() public {    \r\n    }\r\n\r\n    event LogTokenAddedToDirectory(uint256 _index, string _name);\r\n    event LogTokenTransfer(address _token, address _to, uint256 _amount);\r\n    event LogTokenAllowanceApprove(address _token, address _to, uint256 _value);\r\n\r\n    ERC20[] public tokenDirectory;\r\n    string[] public tokenDirectoryName;\r\n\r\n    /***************************\r\n    * Token Directory functions*\r\n    ****************************/\r\n\r\n    function addTokenToDirectory(ERC20 _tokenContractAddress) onlyAdmin public returns (uint256){\r\n        require(_tokenContractAddress != address(0));\r\n        require(_tokenContractAddress.totalSupply() !=0 );\r\n        uint256 index = tokenDirectory.push(_tokenContractAddress) - 1;\r\n        tokenDirectoryName.push(_tokenContractAddress.name());\r\n        emit LogTokenAddedToDirectory(index,_tokenContractAddress.name());\r\n        return index;\r\n\r\n    }\r\n    \r\n    function replaceDirectoryToken(ERC20 _tokenContractAddress, uint256 _directoryIndex) onlyAdmin public returns (uint256){\r\n        require(_tokenContractAddress != address(0));\r\n        require(_tokenContractAddress.totalSupply() !=0 );\r\n        tokenDirectory[_directoryIndex] = _tokenContractAddress;\r\n        tokenDirectoryName[_directoryIndex]= _tokenContractAddress.name();\r\n        emit LogTokenAddedToDirectory(_directoryIndex,_tokenContractAddress.name());\r\n    }\r\n\r\n    function balanceOfDirectoryToken(uint256 _index) public view returns (uint256) {\r\n        ERC20 token = tokenDirectory[_index];\r\n        return token.balanceOf(address(this));\r\n    }\r\n\r\n    function transferDirectoryToken(uint256 _index, address _to, uint256 _amount) public onlyAdmin{\r\n        ERC20 token = tokenDirectory[_index];\r\n        //require(token.transfer(_to,_amount));\r\n        token.transfer(_to,_amount);\r\n        emit LogTokenTransfer(token,_to,_amount);\r\n    }\r\n\r\n    function batchTransferDirectoryToken(uint256 _index,address[] _target,uint256[] _amount) onlyAdmin public {\r\n        require(_target.length >= _amount.length);\r\n        uint256 length = _target.length;\r\n        ERC20 token = tokenDirectory[_index];\r\n\r\n        for (uint i=0; i<length; i++) { //It moves over the array\r\n            token.transfer(_target[i],_amount[i]);\r\n            emit LogTokenTransfer(token,_target[i],_amount[i]);       \r\n        }\r\n    }\r\n\r\n    function giveDirectoryTokenAllowance(uint256 _index, address _spender, uint256 _value) onlyAdmin public{\r\n        ERC20 token = tokenDirectory[_index];\r\n        token.approve(_spender, _value);\r\n        emit LogTokenAllowanceApprove(token,_spender, _value);\r\n    }\r\n\r\n    /*************************\r\n    * General Token functions*\r\n    **************************/\r\n\r\n    function balanceOfToken (ERC20 _tokenContractAddress) public view returns (uint256) {\r\n        ERC20 token = _tokenContractAddress;\r\n        return token.balanceOf(this);\r\n    }\r\n\r\n    function transferToken(ERC20 _tokenContractAddress, address _to, uint256 _amount) public onlyAdmin{\r\n        ERC20 token = _tokenContractAddress;\r\n        //require(token.transfer(_to,_amount));\r\n        token.transfer(_to,_amount);\r\n        emit LogTokenTransfer(token,_to,_amount);\r\n    }\r\n\r\n    function batchTransferToken(ERC20 _tokenContractAddress,address[] _target,uint256[] _amount) onlyAdmin public {\r\n        require(_target.length >= _amount.length);\r\n        uint256 length = _target.length;\r\n        ERC20 token = _tokenContractAddress;\r\n\r\n        for (uint i=0; i<length; i++) { //It moves over the array\r\n            token.transfer(_target[i],_amount[i]);\r\n            emit LogTokenTransfer(token,_target[i],_amount[i]);       \r\n        }\r\n    }\r\n\r\n    function giveTokenAllowance(ERC20 _tokenContractAddress, address _spender, uint256 _value) onlyAdmin public{\r\n        ERC20 token = _tokenContractAddress;\r\n        token.approve(_spender, _value);\r\n        emit LogTokenAllowanceApprove(token,_spender, _value);\r\n    }\r\n\r\n\r\n    /**\r\n    * @notice this contract will revert on direct non-function calls, also it's not payable\r\n    * @dev Function to handle callback calls to contract\r\n    */\r\n    function() public {\r\n        revert();\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferDirectoryToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContractAddress\",\"type\":\"address\"},{\"name\":\"_target\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContractAddress\",\"type\":\"address\"},{\"name\":\"_directoryIndex\",\"type\":\"uint256\"}],\"name\":\"replaceDirectoryToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContractAddress\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"giveTokenAllowance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenDirectory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"balanceOfDirectoryToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"},{\"name\":\"_target\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferDirectoryToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenContractAddress\",\"type\":\"address\"}],\"name\":\"balanceOfToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenDirectoryName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContractAddress\",\"type\":\"address\"}],\"name\":\"addTokenToDirectory\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContractAddress\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"giveDirectoryTokenAllowance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"LogTokenAddedToDirectory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"LogTokenTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"LogTokenAllowanceApprove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAdminister\",\"type\":\"address\"}],\"name\":\"TransferAdminship\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"administer\",\"type\":\"address\"}],\"name\":\"Admined\",\"type\":\"event\"}]","ContractName":"TokenWallet","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b0acb8bdd805b0c572c8b6353f7695ccda6f862ae81a32c9f434e3fe06e3281e"}]}