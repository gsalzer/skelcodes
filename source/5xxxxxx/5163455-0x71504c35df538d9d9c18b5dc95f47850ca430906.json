{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract token {\r\n    function transfer(address receiver, uint256 amount);\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n}\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n  \r\n}\r\n\r\ncontract bkfkCrowdsale {\r\n    using SafeMath for uint256;\r\n    \r\n    address public beneficiary;\r\n    uint256 public fundingGoal;\r\n    uint256 public amountRaised;\r\n    uint256 public preSaleStartdate;\r\n    uint256 public preSaleDeadline;\r\n    uint256 public mainSaleStartdate;\r\n    uint256 public mainSaleDeadline;\r\n    uint256 public preSaleprice;\r\n    uint256 public mainSaleprice;\r\n    uint256 public fundTransferred;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n    bool fundingGoalReached = false;\r\n    bool crowdsaleClosed = false;\r\n\r\n    //event GoalReached(address recipient, uint256 totalAmountRaised);\r\n    //event FundTransfer(address backer, uint256 amount, bool isContribution);\r\n\r\n    /**\r\n     * Constrctor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    function bkfkCrowdsale() {\r\n        beneficiary = 0x007FB3e94dCd7C441CAA5b87621F275d199Dff81;\r\n        fundingGoal = 5720 ether;\r\n        preSaleStartdate = 1522972800;\r\n        preSaleDeadline = 1524268800;\r\n        mainSaleStartdate = 1524787200;\r\n        mainSaleDeadline = 1528502400;\r\n        preSaleprice = 0.00001 ether;\r\n        mainSaleprice = 0.00003 ether;\r\n        tokenReward = token(0xE6AcB21DE14c12086663b442120F8504093635D9);\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function () payable {\r\n        require(!crowdsaleClosed);\r\n        uint256 bonus;\r\n        uint256 amount = msg.value;\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].add(amount);\r\n        amountRaised = amountRaised.add(amount);\r\n        \r\n        //add bounus for funders\r\n        if(now >= preSaleStartdate && now <= preSaleDeadline ){\r\n            amount =  amount.div(preSaleprice);\r\n        }\r\n        else if(now >= mainSaleStartdate && now <= mainSaleStartdate + 24 hours ){\r\n            amount =  amount.div(mainSaleprice);\r\n            bonus = amount.mul(40).div(100);\r\n            amount = amount.add(bonus);\r\n        }\r\n        else if(now > mainSaleStartdate + 24 hours && now <= mainSaleStartdate + 24 hours + 1 weeks ){\r\n            amount =  amount.div(mainSaleprice);\r\n            bonus = amount.mul(30).div(100);\r\n            amount = amount.add(bonus);\r\n        }\r\n        else if(now > mainSaleStartdate + 24 hours + 1 weeks && now <= mainSaleStartdate + 24 hours + 2 weeks ){\r\n            amount =  amount.div(mainSaleprice);\r\n            bonus = amount.mul(25).div(100);\r\n            amount = amount.add(bonus);\r\n        } \r\n        else if(now > mainSaleStartdate + 24 hours + 2 weeks && now <= mainSaleStartdate + 24 hours + 3 weeks ){\r\n            amount =  amount.div(mainSaleprice);\r\n            bonus = amount.mul(20).div(100);\r\n            amount = amount.add(bonus);\r\n        } \r\n        else if(now > mainSaleStartdate + 24 hours + 3 weeks && now <= mainSaleStartdate + 24 hours + 4 weeks ){\r\n            amount =  amount.div(mainSaleprice);\r\n            bonus = amount.mul(15).div(100);\r\n            amount = amount.add(bonus);\r\n        }\r\n        else if(now > mainSaleStartdate + 24 hours + 4 weeks && now <= mainSaleStartdate + 24 hours + 5 weeks ){\r\n            amount =  amount.div(mainSaleprice);\r\n            bonus = amount.mul(10).div(100);\r\n            amount = amount.add(bonus);\r\n        } else {\r\n            amount =  amount.div(mainSaleprice);\r\n            bonus = amount.mul(5).div(100);\r\n            amount = amount.add(bonus);\r\n        }\r\n        \r\n        amount = amount.mul(100000000);\r\n        tokenReward.transfer(msg.sender, amount);\r\n        //FundTransfer(msg.sender, amount, true);\r\n    }\r\n\r\n    modifier afterDeadline() { if (now >= mainSaleDeadline) _; }\r\n\r\n    /**\r\n     *ends the campaign after deadline\r\n     */\r\n     \r\n    function endCrowdsale() afterDeadline {\r\n        crowdsaleClosed = true;\r\n    }\r\n    \r\n    function getTokensBack() {\r\n        uint256 remaining = tokenReward.balanceOf(this);\r\n        if(msg.sender == beneficiary){\r\n           tokenReward.transfer(beneficiary, remaining); \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Withdraw the funds\r\n     */\r\n    function safeWithdrawal() {\r\n        if (beneficiary == msg.sender) {\r\n            if(fundTransferred != amountRaised){\r\n               uint256 transferfund;\r\n               transferfund = amountRaised.sub(fundTransferred);\r\n               fundTransferred = fundTransferred.add(transferfund);\r\n               beneficiary.send(transferfund);\r\n            } \r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"endCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleprice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleDeadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundTransferred\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getTokensBack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleprice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleStartdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleStartdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleDeadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"bkfkCrowdsale","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d0314f167d2467a5f254913b91bb18d5e5862d164d8af3949330ef74f47d43b0"}]}