{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract AirDropToken {\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint256 tokens);\r\n\r\n    string _name;\r\n    string _symbol;\r\n    uint8 _decimals;\r\n\r\n    uint256 _totalSupply;\r\n\r\n    bytes32 _rootHash;\r\n\r\n    mapping (address => uint256) _balances;\r\n    mapping (address => mapping(address => uint256)) _allowed;\r\n\r\n    mapping (uint256 => uint256) _redeemed;\r\n\r\n    function AirDropToken(string name, string symbol, uint8 decimals, bytes32 rootHash, uint256 premine) public {\r\n        _name = name;\r\n        _symbol = symbol;\r\n        _decimals = decimals;\r\n        _rootHash = rootHash;\r\n\r\n        if (premine > 0) {\r\n            _balances[msg.sender] = premine;\r\n            _totalSupply = premine;\r\n            Transfer(0, msg.sender, premine);\r\n        }\r\n    }\r\n\r\n    function name() public constant returns (string name) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public constant returns (string symbol) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public constant returns (uint8 decimals) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public constant returns (uint256 totalSupply) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address tokenOwner) public constant returns (uint256 balance) {\r\n         return _balances[tokenOwner];\r\n    }\r\n\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint256 remaining) {\r\n        return _allowed[tokenOwner][spender];\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) public returns (bool success) {\r\n        if (_balances[msg.sender] < amount) { return false; }\r\n\r\n        _balances[msg.sender] -= amount;\r\n        _balances[to] += amount;\r\n\r\n        Transfer(msg.sender, to, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount) public returns (bool success) {\r\n\r\n        if (_allowed[from][msg.sender] < amount || _balances[from] < amount) {\r\n            return false;\r\n        }\r\n\r\n        _balances[from] -= amount;\r\n        _allowed[from][msg.sender] -= amount;\r\n        _balances[to] += amount;\r\n\r\n        Transfer(from, to, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public returns (bool success) {\r\n        _allowed[msg.sender][spender] = amount;\r\n\r\n        Approval(msg.sender, spender, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function redeemed(uint256 index) public constant returns (bool redeemed) {\r\n        uint256 redeemedBlock = _redeemed[index / 256];\r\n        uint256 redeemedMask = (uint256(1) << uint256(index % 256));\r\n        return ((redeemedBlock & redeemedMask) != 0);\r\n    }\r\n\r\n    function redeemPackage(uint256 index, address recipient, uint256 amount, bytes32[] merkleProof) public {\r\n\r\n        // Make sure this package has not already been claimed (and claim it)\r\n        uint256 redeemedBlock = _redeemed[index / 256];\r\n        uint256 redeemedMask = (uint256(1) << uint256(index % 256));\r\n        require((redeemedBlock & redeemedMask) == 0);\r\n        _redeemed[index / 256] = redeemedBlock | redeemedMask;\r\n\r\n        // Compute the merkle root\r\n        bytes32 node = keccak256(index, recipient, amount);\r\n        uint256 path = index;\r\n        for (uint16 i = 0; i < merkleProof.length; i++) {\r\n            if ((path & 0x01) == 1) {\r\n                node = keccak256(merkleProof[i], node);\r\n            } else {\r\n                node = keccak256(node, merkleProof[i]);\r\n            }\r\n            path /= 2;\r\n        }\r\n\r\n        // Check the merkle proof\r\n        require(node == _rootHash);\r\n\r\n        // Redeem!\r\n        _balances[recipient] += amount;\r\n        _totalSupply += amount;\r\n\r\n        Transfer(0, recipient, amount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"redeemPackage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"redeemed\",\"outputs\":[{\"name\":\"redeemed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"},{\"name\":\"rootHash\",\"type\":\"bytes32\"},{\"name\":\"premine\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"AirDropToken","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000012dc03b7993bad736ad595eb9e3ba51877ac17ecc31d2355f8f270125b9427ece700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011506920446179204e30306220546f6b656e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035049450000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://24bc33c3b6a7849beac05e6431c62a81a1c6ffa851a90da75f8e3b071b33c88b"}]}