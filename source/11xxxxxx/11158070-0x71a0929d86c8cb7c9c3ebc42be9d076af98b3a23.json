{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(owner, address(0));\r\n        owner = address(0);\r\n    }\r\n}\r\n\r\ncontract Pausable is Ownable {\r\n    bool public paused;\r\n    \r\n    event Paused(address account);\r\n    event Unpaused(address account);\r\n\r\n    constructor() internal {\r\n        paused = false;\r\n    }\r\n\r\n    modifier whenNotPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n\r\n    modifier whenPaused() {\r\n        require(paused);\r\n        _;\r\n    }\r\n\r\n    function pause() public onlyOwner whenNotPaused {\r\n        paused = true;\r\n        emit Paused(msg.sender);\r\n    }\r\n\r\n    function unpause() public onlyOwner whenPaused {\r\n        paused = false;\r\n        emit Unpaused(msg.sender);\r\n    }\r\n}\r\n\r\ncontract BaseToken is Pausable {\r\n    using SafeMath for uint256;\r\n\r\n    string constant public name = 'Postage Stamp Collection Olympic Games 29';\r\n    string constant public symbol = 'PSCOG';\r\n    uint8 constant public decimals = 18;\r\n    uint256 public totalSupply = 8.94e26;\r\n    uint256 constant public _totalLimit = 1e32;\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    function _transfer(address from, address to, uint value) internal {\r\n        require(to != address(0));\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    function _mint(address account, uint256 value) internal {\r\n        require(account != address(0));\r\n        totalSupply = totalSupply.add(value);\r\n        require(_totalLimit >= totalSupply);\r\n        balanceOf[account] = balanceOf[account].add(value);\r\n        emit Transfer(address(0), account, value);\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public whenNotPaused returns (bool) {\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) public whenNotPaused returns (bool) {\r\n        allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public whenNotPaused returns (bool) {\r\n        require(spender != address(0));\r\n        allowance[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) public whenNotPaused returns (bool) {\r\n        require(spender != address(0));\r\n        allowance[msg.sender][spender] = allowance[msg.sender][spender].add(addedValue);\r\n        emit Approval(msg.sender, spender, allowance[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public whenNotPaused returns (bool) {\r\n        require(spender != address(0));\r\n        allowance[msg.sender][spender] = allowance[msg.sender][spender].sub(subtractedValue);\r\n        emit Approval(msg.sender, spender, allowance[msg.sender][spender]);\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract BurnToken is BaseToken {\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    function burn(uint256 value) public whenNotPaused returns (bool) {\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(value);\r\n        totalSupply = totalSupply.sub(value);\r\n        emit Burn(msg.sender, value);\r\n        return true;\r\n    }\r\n\r\n    function burnFrom(address from, uint256 value) public whenNotPaused returns (bool) {\r\n        allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        totalSupply = totalSupply.sub(value);\r\n        emit Burn(from, value);\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract BatchToken is BaseToken {\r\n    \r\n    function batchTransfer(address[] addressList, uint256[] amountList) public returns (bool) {\r\n        uint256 length = addressList.length;\r\n        require(addressList.length == amountList.length);\r\n        require(length > 0 && length <= 20);\r\n\r\n        for (uint256 i = 0; i < length; i++) {\r\n            transfer(addressList[i], amountList[i]);\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract LockToken is BaseToken {\r\n\r\n    struct LockItem {\r\n        uint256 endtime;\r\n        uint256 remain;\r\n    }\r\n\r\n    struct LockMeta {\r\n        uint8 lockType;\r\n        LockItem[] lockItems;\r\n    }\r\n\r\n    mapping (address => LockMeta) public lockData;\r\n\r\n    event Lock(address indexed lockAddress, uint8 indexed lockType, uint256[] endtimeList, uint256[] remainList);\r\n\r\n    function _transfer(address from, address to, uint value) internal {\r\n        uint8 lockType = lockData[from].lockType;\r\n        if (lockType != 0) {\r\n            uint256 remain = balanceOf[from].sub(value);\r\n            uint256 length = lockData[from].lockItems.length;\r\n            for (uint256 i = 0; i < length; i++) {\r\n                LockItem storage item = lockData[from].lockItems[i];\r\n                if (block.timestamp < item.endtime && remain < item.remain) {\r\n                    revert();\r\n                }\r\n            }\r\n        }\r\n        super._transfer(from, to, value);\r\n    }\r\n\r\n    function lock(address lockAddress, uint8 lockType, uint256[] endtimeList, uint256[] remainList) public onlyOwner returns (bool) {\r\n        require(lockAddress != address(0));\r\n        require(lockType == 0 || lockType == 1 || lockType == 2);\r\n        require(lockData[lockAddress].lockType != 1);\r\n\r\n        lockData[lockAddress].lockItems.length = 0;\r\n\r\n        lockData[lockAddress].lockType = lockType;\r\n        if (lockType == 0) {\r\n            emit Lock(lockAddress, lockType, endtimeList, remainList);\r\n            return true;\r\n        }\r\n\r\n        require(endtimeList.length == remainList.length);\r\n        uint256 length = endtimeList.length;\r\n        require(length > 0 && length <= 12);\r\n        uint256 thisEndtime = endtimeList[0];\r\n        uint256 thisRemain = remainList[0];\r\n        lockData[lockAddress].lockItems.push(LockItem({endtime: thisEndtime, remain: thisRemain}));\r\n        for (uint256 i = 1; i < length; i++) {\r\n            require(endtimeList[i] > thisEndtime && remainList[i] < thisRemain);\r\n            lockData[lockAddress].lockItems.push(LockItem({endtime: endtimeList[i], remain: remainList[i]}));\r\n            thisEndtime = endtimeList[i];\r\n            thisRemain = remainList[i];\r\n        }\r\n\r\n        emit Lock(lockAddress, lockType, endtimeList, remainList);\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract AirdropToken is BaseToken {\r\n    uint256 constant public airMax = 0;\r\n    uint256 public airTotal = 0;\r\n    uint256 public airBegintime = 1604020591;\r\n    uint256 public airEndtime = 1604020591;\r\n    uint256 public airOnce = 0;\r\n    uint256 public airLimitCount = 1;\r\n\r\n    mapping (address => uint256) public airCountOf;\r\n\r\n    event Airdrop(address indexed from, uint256 indexed count, uint256 tokenValue);\r\n    event AirdropSetting(uint256 airBegintime, uint256 airEndtime, uint256 airOnce, uint256 airLimitCount);\r\n\r\n    function airdrop() public payable {\r\n        require(block.timestamp >= airBegintime && block.timestamp <= airEndtime);\r\n        require(msg.value == 0);\r\n        require(airOnce > 0);\r\n        airTotal = airTotal.add(airOnce);\r\n        if (airMax > 0 && airTotal > airMax) {\r\n            revert();\r\n        }\r\n        if (airLimitCount > 0 && airCountOf[msg.sender] >= airLimitCount) {\r\n            revert();\r\n        }\r\n        _mint(msg.sender, airOnce);\r\n        airCountOf[msg.sender] = airCountOf[msg.sender].add(1);\r\n        emit Airdrop(msg.sender, airCountOf[msg.sender], airOnce);\r\n    }\r\n\r\n    function changeAirdropSetting(uint256 newAirBegintime, uint256 newAirEndtime, uint256 newAirOnce, uint256 newAirLimitCount) public onlyOwner {\r\n        airBegintime = newAirBegintime;\r\n        airEndtime = newAirEndtime;\r\n        airOnce = newAirOnce;\r\n        airLimitCount = newAirLimitCount;\r\n        emit AirdropSetting(newAirBegintime, newAirEndtime, newAirOnce, newAirLimitCount);\r\n    }\r\n\r\n}\r\n\r\ncontract CustomToken is BaseToken, BurnToken, BatchToken, LockToken, AirdropToken {\r\n    constructor() public {\r\n        balanceOf[0x766E72da5c64Bd9416467bFfD577ACa555450352] = totalSupply;\r\n        emit Transfer(address(0), 0x766E72da5c64Bd9416467bFfD577ACa555450352, totalSupply);\r\n\r\n        owner = 0x766E72da5c64Bd9416467bFfD577ACa555450352;\r\n    }\r\n\r\n    function() public payable {\r\n        airdrop();\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"airMax\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAirBegintime\",\"type\":\"uint256\"},{\"name\":\"newAirEndtime\",\"type\":\"uint256\"},{\"name\":\"newAirOnce\",\"type\":\"uint256\"},{\"name\":\"newAirLimitCount\",\"type\":\"uint256\"}],\"name\":\"changeAirdropSetting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"airdrop\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"lockAddress\",\"type\":\"address\"},{\"name\":\"lockType\",\"type\":\"uint8\"},{\"name\":\"endtimeList\",\"type\":\"uint256[]\"},{\"name\":\"remainList\",\"type\":\"uint256[]\"}],\"name\":\"lock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addressList\",\"type\":\"address[]\"},{\"name\":\"amountList\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"airCountOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airOnce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airEndtime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airBegintime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airLimitCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockData\",\"outputs\":[{\"name\":\"lockType\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"count\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenValue\",\"type\":\"uint256\"}],\"name\":\"Airdrop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"airBegintime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"airEndtime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"airOnce\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"airLimitCount\",\"type\":\"uint256\"}],\"name\":\"AirdropSetting\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"lockAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"lockType\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"endtimeList\",\"type\":\"uint256[]\"},{\"indexed\":false,\"name\":\"remainList\",\"type\":\"uint256[]\"}],\"name\":\"Lock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"CustomToken","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://a2e2a09a7e3c3b439b44f7a9b2391166885c3ed5593002d30d02ba71df79eaba"}]}