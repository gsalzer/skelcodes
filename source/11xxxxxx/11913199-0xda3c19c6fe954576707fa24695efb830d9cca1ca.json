{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.12;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\ncontract MultiCall {\r\n    \r\n    struct Call {\r\n        address to;\r\n        bytes data;\r\n    }\r\n    \r\n   function multicall(Call[] memory calls) public returns (bytes[] memory results, bool[] memory success) {\r\n        results = new bytes[](calls.length);\r\n        success = new bool[](calls.length);\r\n        for (uint i = 0; i < calls.length; i++) {\r\n            (success[i], results[i]) = calls[i].to.call(calls[i].data);\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCall.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"},{\"internalType\":\"bool[]\",\"name\":\"success\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MultiCall","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f346ca8f4fbe1e8f42389d43067bd6230d9b92d8bc154d8202738c5b893a4201"}]}