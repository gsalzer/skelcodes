{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n_____________ThePvPGameRevolutions(V3)\r\n\r\n\r\n░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\r\n░█████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\r\n░██░░░░░░█████░░░░░░░░░░░░░░░░░░░░░░░░░░\r\n░██░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░\r\n░██░░░░░░░░░░░██░░░░░░░░░░░░░░░░░░░░░░░░\r\n░██░░░░░░░░████░░░░░░░░░░░░░░░░░░░░░░░░░\r\n████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░\r\n░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\r\n░██░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░\r\n░██░░░░░░░░░░░░░░░░░░░░░░░░░███████░░░░░\r\n░██░░░░░░░█░░░░░░░░░░░░███░░░░░░░██░░░░░\r\n░██░░░░░░░█░░░░░░░░░░░░███░░░░████░░░░░░\r\n░██░░░░░░░██░░░░░░░░░░███░██░░░░░██░░░░░\r\n░██░░░░░░░██░░░░░░░░░░██░░█░░░░░░░█░░░░░\r\n░██░░░░░░░██░░░░░░░░░██░░░████████░░░░░░\r\n░██░░░░░░░██░░░░░░░░███░░░░░░░░░░░░░░░░░\r\n░░░░░░░░░░███░░░░░░██░░░░░░░░░░░░░░░░░░░\r\n░░░░░░░░░░███░░░░░██░░░░░░░░░░░░░░░░░░░░\r\n░░░░░░░░░░░██░░░░███░░░░░░░░░░░░░░░░░░░░\r\n░░░░░░░░░░░██░░░██░░████████████████████\r\n░░░░░░░░░░░███░██░░░░██░░░░░░░░░░░░░░███\r\n░░░░░░░░░░░░████░░░░░██░░░░░░░░░░░░░░███\r\n░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░███\r\n░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░███\r\n░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░███\r\n░░░░░░░░░░░░░░░░░░░░░███████████████████\r\n░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░\r\n░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░\r\n░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░\r\n░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░░░░░░░░░░\r\n\r\nTelegram:\r\nhttps://t.me/thepvpgamerevolutions\r\n\r\nWebsite:\r\nthe-pvp-game.com\r\n\r\n*/\r\n\r\npragma solidity ^0.4.15;\r\n\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n\r\n\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    require(newOwner != address(0));\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\n\r\ninterface Token {\r\n  function transfer(address _to, uint256 _value) returns (bool);\r\n  function balanceOf(address _owner) constant returns (uint256 balance);\r\n}\r\n\r\ncontract PvPBuyInContract is Ownable {\r\n\r\n  using SafeMath for uint256;\r\n\r\n  Token public token;\r\n\r\n  uint256 public constant RATE = 1; // Number of tokens per Ether\r\n  uint256 public constant CAP = 65; // Cap in Ether\r\n  uint256 public constant initialTokens = 65 * 10**18; // Initial number of tokens available\r\n  bool public initialized = false;\r\n  uint256 public raisedAmount = 0;\r\n\r\n  event BoughtTokens(address indexed to, uint256 value);\r\n  \r\n    modifier whenSaleIsActive() {\r\n    \r\n    assert(isActive());\r\n\r\n    _;\r\n    }\r\n\r\n\r\n  function PvPBuyInContract(address _tokenAddr) {\r\n      require(_tokenAddr != 0);\r\n      token = Token(_tokenAddr);\r\n  }\r\n  \r\n  function initialize() onlyOwner {\r\n      require(initialized == false);\r\n      require(tokensAvailable() >= initialTokens);\r\n      initialized = true;\r\n  }\r\n\r\n  function isActive() constant returns (bool) {\r\n    return (\r\n        initialized == true &&\r\n        goalReached() == false\r\n    );\r\n  }\r\n\r\n  function goalReached() constant returns (bool) {\r\n    return (raisedAmount >= CAP * 1 ether);\r\n  }\r\n\r\n  function () payable {\r\n    buyTokens();\r\n  }\r\n\r\n \r\n  function buyTokens() payable {\r\n      \r\nif ( msg.value == 1000000000000000000 || msg.value == 2000000000000000000 )\r\n   {\r\n  \r\n\r\n    // Calculate tokens to sell\r\n    uint256 weiAmount = msg.value;\r\n    uint256 tokens = weiAmount.mul(RATE);\r\n\r\n    BoughtTokens(msg.sender, tokens);\r\n\r\n    // Increment raised amount\r\n    raisedAmount = raisedAmount.add(msg.value);\r\n    \r\n    // Send tokens to buyer\r\n    token.transfer(msg.sender, tokens);\r\n    \r\n    // Send money to owner\r\n    owner.transfer(msg.value);\r\n    \r\n}\r\n\r\nelse\r\n          {\r\n          revert();\r\n          }\r\n    \r\n       \r\n}\r\n\r\n \r\n  function tokensAvailable() constant returns (uint256) {\r\n    return token.balanceOf(this);\r\n  }\r\n\r\n \r\n  function destroy() onlyOwner {\r\n    \r\n    uint256 balance = token.balanceOf(this);\r\n    assert(balance > 0);\r\n    token.transfer(owner, balance);\r\n\r\n    \r\n    selfdestruct(owner);\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensAvailable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"goalReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"raisedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BoughtTokens\",\"type\":\"event\"}]","ContractName":"PvPBuyInContract","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000c56de641c91658c948720afcfe8df5b011812b8d","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://15bb47583f924e524058a559eadd02ec0c194e976e432524d61b359fc126071b"}]}