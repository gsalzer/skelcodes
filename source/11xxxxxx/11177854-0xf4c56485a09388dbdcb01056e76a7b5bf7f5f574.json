{"status":"1","message":"OK","result":[{"SourceCode":"{\"ownable.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\\ncontract Owned is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\"},\"priceCalculatorInterface.sol\":{\"content\":\"pragma solidity \\u003e= 0.6.6;\\n\\ninterface priceCalculatorInterface {\\n  function getUpdatedPrice(\\n    address vault,\\n    uint256 latestRoundId\\n  )\\n    external\\n    view\\n    returns(\\n      uint256[6] memory latestPrice,\\n      uint256 rRoundId,\\n      bool updated\\n  );\\n  function getKFactor(\\n    uint256 targetEquity,\\n    uint256 bullEquity,\\n    uint256 bearEquity,\\n    uint256 totalEquity\\n  )\\n  external\\n  view\\n  returns(uint256 kFactor);\\n}\\n\"},\"priceCalculatorProxy.sol\":{\"content\":\"//////////////////////////////////////////////////\\n//SYNLEV price calculator proxy V 1.0.0\\n//////////////////////////\\n\\npragma solidity \\u003e= 0.6.4;\\n\\nimport \\u0027./ownable.sol\\u0027;\\nimport \\u0027./priceCalculatorInterface.sol\\u0027;\\n\\ncontract priceCalculatorProxy is Owned {\\n\\n  priceCalculatorInterface public priceCalculator;\\n  address public priceCalculatorPropose;\\n\\n  function getUpdatedPrice(address vault, uint256 latestRoundId)\\n  public\\n  view\\n  virtual\\n  returns(\\n    uint256[6] memory latestPrice,\\n    uint256 rRoundId,\\n    bool updated\\n  ) {\\n\\n    return(priceCalculator.getUpdatedPrice(vault, latestRoundId));\\n  }\\n\\n\\n\\n  function proposePriceCalculator(address account) public onlyOwner() {\\n    priceCalculatorPropose = account;\\n  }\\n  function updatePriceCalculator() public {\\n    priceCalculator = priceCalculatorInterface(priceCalculatorPropose);\\n    priceCalculatorPropose = address(0);\\n  }\\n\\n}\\n\"}}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"latestRoundId\",\"type\":\"uint256\"}],\"name\":\"getUpdatedPrice\",\"outputs\":[{\"internalType\":\"uint256[6]\",\"name\":\"latestPrice\",\"type\":\"uint256[6]\"},{\"internalType\":\"uint256\",\"name\":\"rRoundId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"updated\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceCalculator\",\"outputs\":[{\"internalType\":\"contract priceCalculatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceCalculatorPropose\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"proposePriceCalculator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePriceCalculator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"priceCalculatorProxy","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://494e2a68945b05101939fefd52661bff90453acfcf66ed9c359481fc8bc363fe"}]}