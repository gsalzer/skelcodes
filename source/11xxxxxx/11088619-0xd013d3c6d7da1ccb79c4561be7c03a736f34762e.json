{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.7.0;\r\n\r\ninterface IERC20 {\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address who) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n    external view returns (uint256);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function approve(address spender, uint256 value)\r\n    external returns (bool);\r\n\r\n    function transferFrom(address from, address to, uint256 value)\r\n    external returns (bool);\r\n\r\n}\r\n\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract OTBCPreSale  {\r\n    using SafeMath for uint256;\r\n    IERC20 internal lock = IERC20(address(0xB9464ef80880c5aeA54C7324c0b8Dd6ca6d05A90));\r\n\r\n    uint256 constant MIN_BUY = 5 * 10 ** 17;\r\n    uint256 constant MAX_BUY = 10 * 10**18;\r\n    uint256 constant  PRICE = 10 * 10**14;\r\n    uint256 public  HARD_CAP = 1500 * 10**18 ;\r\n\r\n    address payable  owner ;\r\n \r\n    uint256 public totalSold   = 0;\r\n    uint256 public totalRaised = 0;\r\n\r\n    event onBuy(address buyer , uint256 amount);\r\n\r\n    mapping(address => uint256) public boughtOf;\r\n    mapping(address => bool) public unlocked;\r\n    \r\n    constructor() public {\r\n      owner = msg.sender;\r\n    }\r\n    \r\n     function unlock () public {\r\n        require(!unlocked[msg.sender]);\r\n        require(lock.transferFrom(msg.sender, address(this), 10 * 10 ** 18) == true, \"transfer must succeed\");\r\n        \r\n        lock.transfer(address(owner),lock.balanceOf(address(this)));\r\n        unlocked[msg.sender] = true;\r\n    }\r\n    \r\n\r\n    function buyToken() public payable {\r\n        require(msg.value >= MIN_BUY , \"MINIMUM IS .5 ETH\");\r\n        require(msg.value <= MAX_BUY , \"MAXIMUM IS 10 ETH\");\r\n        require( unlocked[msg.sender] , \"LOCKED\");\r\n        require(totalRaised + msg.value <= HARD_CAP , \"HARD CAP REACHED\");\r\n\r\n        uint256 amount = (msg.value.div(PRICE)) * 10 ** 18;\r\n\r\n        boughtOf[msg.sender] += amount;\r\n        totalSold += amount;\r\n        totalRaised += msg.value;\r\n        \r\n        owner.transfer(msg.value);\r\n\r\n        emit onBuy(msg.sender , amount);\r\n    }\r\n     \r\n     function buyTokenByOwner() public payable {\r\n        require(msg.sender == owner , \"NOT_OWNER\");\r\n        require(totalRaised + msg.value <= HARD_CAP , \"HARD CAP REACHED\");\r\n\r\n        uint256 amount = (msg.value.div(PRICE)) * 10 ** 18;\r\n\r\n        boughtOf[msg.sender] += amount;\r\n        totalSold += amount;\r\n        totalRaised += msg.value;\r\n        \r\n        owner.transfer(msg.value);\r\n\r\n        emit onBuy(msg.sender , amount);\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"onBuy\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"HARD_CAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"boughtOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokenByOwner\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"OTBCPreSale","CompilerVersion":"v0.7.0+commit.9e61f92b","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://68e4cb6feb6c557bd224931add87281958a665fb4e794d512c2abb1ec92bdf88"}]}