{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20Token {\r\n    function transfer(address _to, uint256 _value) external  returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\r\n}\r\n\r\ninterface IERC721 {\r\n\r\n    function mint(address to, uint32 _assetType, uint32 _customDetails) external returns (bool success);\r\n\r\n}\r\ncontract Ownable {\r\n\r\n    address private owner;\r\n    \r\n    event OwnerSet(address indexed oldOwner, address indexed newOwner);\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Caller is not owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        owner = msg.sender; // 'msg.sender' is sender of current call, contract deployer for a constructor\r\n        emit OwnerSet(address(0), owner);\r\n    }\r\n\r\n\r\n    function changeOwner(address newOwner) public onlyOwner {\r\n        emit OwnerSet(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    function getOwner() external view returns (address) {\r\n        return owner;\r\n    }\r\n}\r\n\r\ncontract POLNSeller is Ownable {\r\n    \r\n    address public tokenAddress;\r\n    address public nftAddress;\r\n    address public sellingWallet;\r\n    \r\n    mapping(uint => uint) public assetPrice;\r\n    \r\n    constructor() {\r\n        sellingWallet = 0xAD334543437EF71642Ee59285bAf2F4DAcBA613F;\r\n        nftAddress = 0x57E9a39aE8eC404C08f88740A9e6E306f50c937f;\r\n        tokenAddress = 0xaA8330FB2B4D5D07ABFE7A72262752a8505C6B37;\r\n        assetPrice[1] = 1500 ether;\r\n        assetPrice[2] = 3000 ether;\r\n        assetPrice[3] = 7500 ether;\r\n        assetPrice[4] = 10000 ether;\r\n        assetPrice[5] = 15000 ether;\r\n        assetPrice[6] = 75000 ether;\r\n        assetPrice[7] = 65500 ether;\r\n        assetPrice[8] = 40000 ether;\r\n        assetPrice[9] = 90000 ether;\r\n        assetPrice[10] = 55000 ether;\r\n        assetPrice[11] = 105000 ether;\r\n        assetPrice[12] = 50000 ether;\r\n        assetPrice[13] = 22500 ether;\r\n        assetPrice[14] = 30000 ether;\r\n        assetPrice[15] = 45000 ether;\r\n    }\r\n    \r\n    \r\n    function bytesToUint(bytes memory b) private pure returns (uint256){\r\n        uint256 number;\r\n        for(uint i=0;i<b.length;i++){\r\n            number = number + uint(uint8(b[i]))*(2**(8*(b.length-(i+1))));\r\n        }\r\n        return number;\r\n    }\r\n    \r\n    function receiveApproval(address _from, uint256 _value, address _token, bytes memory _extraData) public returns (bool success) {\r\n        require(tokenAddress == _token);\r\n        uint assetType = bytesToUint(_extraData);\r\n        require(assetPrice[assetType] <= _value);\r\n        IERC20Token token = IERC20Token(tokenAddress);\r\n        require(token.transferFrom(_from, sellingWallet, assetPrice[assetType]), \"ERC20 Transfer error\");\r\n        IERC721 nft = IERC721(nftAddress);\r\n        uint32 assetDetail = uint32(assetType * 1000000);\r\n        require(nft.mint(_from, uint32(assetType), assetDetail));\r\n        return true;\r\n    }\r\n    \r\n    function setPrice(uint256 _assetId, uint256 _newPrice) public onlyOwner {\r\n        assetPrice[_assetId] = _newPrice;\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"POLNSeller","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://4fe0b800427a6cb2e2ad41d40e754384d4d7f4497b55ffc1a7ffcd0acced203a"}]}