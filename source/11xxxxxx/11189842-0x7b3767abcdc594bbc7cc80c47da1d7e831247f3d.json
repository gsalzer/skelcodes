{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.8;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface TokenInterface {\r\n    function balanceOf(address) external view returns (uint);\r\n    function delegates(address) external view returns (address);\r\n}\r\n\r\n\r\ncontract InstaAtlasBatchResolver {\r\n    struct Balances {\r\n        address owner;\r\n        uint balance;\r\n        address delegates;\r\n    }\r\n\r\n    function getBalances(address token, address[] memory holders) public view returns (Balances[] memory) {\r\n        Balances[] memory tokensBal = new Balances[](holders.length);\r\n        TokenInterface tokenContract = TokenInterface(token);\r\n        for (uint i = 0; i < holders.length; i++) {\r\n            address holder = holders[i];\r\n            tokensBal[i] = Balances({\r\n                owner: holder,\r\n                balance: tokenContract.balanceOf(holder),\r\n                delegates: tokenContract.delegates(holder)\r\n            });\r\n        }\r\n        return tokensBal;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"holders\",\"type\":\"address[]\"}],\"name\":\"getBalances\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegates\",\"type\":\"address\"}],\"internalType\":\"struct InstaAtlasBatchResolver.Balances[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"InstaAtlasBatchResolver","CompilerVersion":"v0.6.8+commit.0bbfe453","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://08d4806c943eb1a3692c6a79d9b8d3f8d265d274dcd7cb330e1a7fe28b155283"}]}