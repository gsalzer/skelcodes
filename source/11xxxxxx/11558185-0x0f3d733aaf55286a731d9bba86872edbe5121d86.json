{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity <=0.6.2;\r\n\r\ninterface IRelease {\r\n    function release() external;\r\n}\r\n\r\ninterface IWhirlpool {\r\n    function getAllInfoFor(address _user) external view returns (bool isActive, uint256[12] memory info);\r\n}\r\n\r\ncontract LeviathanWhirlpoolTask {\r\n    address private constant _leviathanWhirlpool = 0x4f2CCc35F791e763779f711168424b766Ba3468F;\r\n    address private constant _whirlpool = 0x999b1e6EDCb412b59ECF0C5e14c20948Ce81F40b;\r\n\r\n    function check(uint _requirement)\r\n    external view returns (uint256) {\r\n        (, uint256[12] memory userData) = IWhirlpool(_whirlpool).getAllInfoFor(_leviathanWhirlpool);\r\n\r\n        if(userData[10] >= _requirement)\r\n            return 0;\r\n        else\r\n            return _requirement - userData[10];\r\n    }\r\n\r\n    function execute()\r\n    external {\r\n        IRelease(_leviathanWhirlpool).release();\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requirement\",\"type\":\"uint256\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"LeviathanWhirlpoolTask","CompilerVersion":"v0.6.2+commit.bacdbe57","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://e243593476f2deed67f46f24628f7d0b8d1a83f4e3cf16af5e1d721317f2ddf6"}]}