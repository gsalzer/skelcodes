{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/X2AppOwner.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./interfaces/IX2ETHFactory.sol\\\";\\nimport \\\"./interfaces/IX2PriceFeed.sol\\\";\\n\\ncontract X2AppOwner {\\n    address public gov;\\n    mapping (bytes32 => bool) public marketHashes;\\n\\n    event CreateMarket(\\n        address priceFeed,\\n        uint256 multiplierBasisPoints,\\n        uint256 maxProfitBasisPoints,\\n        uint256 fundingDivisor,\\n        uint256 appFeeBasisPoints,\\n        address market,\\n        address bullToken,\\n        address bearToken,\\n        address aggregator,\\n        string note\\n    );\\n\\n    modifier onlyGov() {\\n        require(msg.sender == gov, \\\"X2AppOwner: forbidden\\\");\\n        _;\\n    }\\n\\n    constructor() public {\\n        gov = msg.sender;\\n    }\\n\\n    function setAppFee(address _factory, address _market, uint256 _appFeeBasisPoints) external onlyGov {\\n        IX2ETHFactory(_factory).setAppFee(_market, _appFeeBasisPoints);\\n    }\\n\\n    function createMarket(\\n        address _factory,\\n        address _priceFeed,\\n        uint256 _multiplierBasisPoints,\\n        string calldata _note\\n    ) external {\\n        require(_multiplierBasisPoints % 5000 == 0, \\\"X2AppOwner: invalid multiplierBasisPoints\\\");\\n        {\\n        bytes32 marketHash = keccak256(abi.encodePacked(\\n            _factory,\\n            _priceFeed,\\n            _multiplierBasisPoints\\n        ));\\n        require(!marketHashes[marketHash], \\\"X2AppOwner: market already created\\\");\\n        marketHashes[marketHash] = true;\\n        }\\n\\n        (address market, address bullToken, address bearToken) = IX2ETHFactory(_factory).createMarket(\\n            _priceFeed,\\n            _multiplierBasisPoints,\\n            9000, // _maxProfitBasisPoints\\n            5000, // _fundingDivisor\\n            10 // _appFeeBasisPoints\\n        );\\n\\n        emit CreateMarket(\\n            _priceFeed,\\n            _multiplierBasisPoints,\\n            9000,\\n            5000,\\n            10,\\n            market,\\n            bullToken,\\n            bearToken,\\n            IX2PriceFeed(_priceFeed).aggregator(),\\n            _note\\n        );\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/IX2ETHFactory.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IX2ETHFactory {\\n    function marketsLength() external view returns (uint256);\\n    function markets(uint256 index) external view returns (address);\\n    function feeReceiver() external view returns (address);\\n    function interestReceiver() external view returns (address);\\n    function setAppFee(address market, uint256 appFeeBasisPoints) external;\\n    function createMarket(\\n        address _priceFeed,\\n        uint256 _multiplierBasisPoints,\\n        uint256 _maxProfitBasisPoints,\\n        uint256 _fundingDivisor,\\n        uint256 _appFeeBasisPoints\\n    ) external returns (address, address, address);\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/IX2PriceFeed.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IX2PriceFeed {\\n    function description() external view returns (string memory);\\n    function aggregator() external view returns (address);\\n    function latestAnswer() external view returns (int256);\\n    function latestRound() external view returns (uint80);\\n    function getRoundData(uint80 roundId) external view returns (uint80, int256, uint256, uint256, uint80);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"multiplierBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxProfitBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fundingDivisor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"appFeeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bullToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bearToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"note\",\"type\":\"string\"}],\"name\":\"CreateMarket\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_multiplierBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_note\",\"type\":\"string\"}],\"name\":\"createMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"marketHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_market\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_appFeeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setAppFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"X2AppOwner","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}