{"status":"1","message":"OK","result":[{"SourceCode":"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//                                                                                                                                   //\r\n//   █████╗ ███╗   ██╗ █████╗ ██████╗  ██████╗██╗  ██╗██╗   ██╗    ████████╗██╗███╗   ███╗███████╗██╗      ██████╗  ██████╗██╗  ██╗  //\r\n//  ██╔══██╗████╗  ██║██╔══██╗██╔══██╗██╔════╝██║  ██║╚██╗ ██╔╝    ╚══██╔══╝██║████╗ ████║██╔════╝██║     ██╔═══██╗██╔════╝██║ ██╔╝  //\r\n//  ███████║██╔██╗ ██║███████║██████╔╝██║     ███████║ ╚████╔╝        ██║   ██║██╔████╔██║█████╗  ██║     ██║   ██║██║     █████╔╝   //\r\n//  ██╔══██║██║╚██╗██║██╔══██║██╔══██╗██║     ██╔══██║  ╚██╔╝         ██║   ██║██║╚██╔╝██║██╔══╝  ██║     ██║   ██║██║     ██╔═██╗   //\r\n//  ██║  ██║██║ ╚████║██║  ██║██║  ██║╚██████╗██║  ██║   ██║          ██║   ██║██║ ╚═╝ ██║███████╗███████╗╚██████╔╝╚██████╗██║  ██╗  //\r\n//  ╚═╝  ╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝   ╚═╝          ╚═╝   ╚═╝╚═╝     ╚═╝╚══════╝╚══════╝ ╚═════╝  ╚═════╝╚═╝  ╚═╝  //\r\n//                                                                                                                                   // \r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////                                                                                                        \r\npragma solidity ^0.4.18;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Timelock {\r\n  using SafeMath for uint256;\r\n\r\n  // The token being locked\r\n  ERC20 public token;\r\n\r\n  // TeamWallet Address where funds are released\r\n  address public teamWallet;\r\n  \r\n  // MarketingWallet Address where funds are released\r\n  address public marketingWallet;\r\n  \r\n  // deployer\r\n  address deployer;\r\n\r\n  // lockedTime\r\n  uint256 public lockTime;\r\n  \r\n  // token release flag\r\n  bool public teamToken1stReleased;\r\n  bool public teamToken2ndReleased;\r\n  bool public teamToken3rdReleased;\r\n  bool public teamToken4thReleased;\r\n\r\n  bool public marketingTokenReleased;\r\n\r\n  function Timelock() public {\r\n    // Anarchy token contract address\r\n    token = ERC20(0xD5f1F1338f7de2FdE3aA132667cbAA671860B9FC);\r\n    \r\n    marketingWallet = 0xE18A44813FB456c79fc79Ad1418bA03A7FEaBfe0;\r\n    teamWallet = 0x827dDdF45B819dEaF6a5cc8f5D0486B131A778cE;\r\n    \r\n    teamToken1stReleased = false;\r\n    teamToken2ndReleased = false;\r\n    teamToken3rdReleased = false;\r\n    teamToken4thReleased = false;\r\n    \r\n    marketingTokenReleased = false;\r\n    lockTime = block.timestamp;\r\n    deployer = msg.sender;\r\n  }\r\n\r\n  function releaseMarketingToken() external returns (bool) {\r\n    require(msg.sender == marketingWallet);\r\n    require(marketingTokenReleased == false);\r\n    require(block.timestamp > lockTime + 30 days);\r\n    \r\n    token.transfer(marketingWallet, 5E21);\r\n    marketingTokenReleased == true;\r\n    return true;\r\n  }\r\n  \r\n  function releaseTeamToken1st() external returns (bool) {\r\n    require(msg.sender == teamWallet);\r\n    require(teamToken1stReleased == false);\r\n    require(block.timestamp > lockTime + 90 days);\r\n\r\n    token.transfer(teamWallet, 1250E18);\r\n    teamToken1stReleased = true;\r\n    return true;\r\n  }\r\n  \r\n  function releaseTeamToken2nd() external returns (bool) {\r\n    require(msg.sender == teamWallet);\r\n    require(teamToken2ndReleased == false);\r\n    require(block.timestamp > lockTime + 180 days);\r\n\r\n    token.transfer(teamWallet, 1250E18);\r\n    teamToken2ndReleased = true;\r\n    return true;\r\n  }\r\n  \r\n  function releaseTeamToken3rd() external returns (bool) {\r\n    require(msg.sender == teamWallet);  \r\n    require(block.timestamp > lockTime + 270 days);\r\n    require(teamToken3rdReleased == false);\r\n\r\n    token.transfer(teamWallet, 1250E18);\r\n    teamToken3rdReleased = true;\r\n    return true;\r\n  }\r\n  \r\n  function releaseTeamToken4th() external returns (bool) {\r\n    require(msg.sender == teamWallet);\r\n    require(block.timestamp > lockTime + 360 days);\r\n    require(teamToken4thReleased == false);\r\n\r\n    token.transfer(teamWallet, 1250E18);\r\n    teamToken4thReleased = true;\r\n    return true;\r\n  }\r\n  \r\n  function wallet(address _teamWallet, address _marketingWallet) external returns (bool) {\r\n    require(msg.sender == deployer);\r\n    require(_teamWallet != address(0));\r\n    require(_marketingWallet != address(0));\r\n    \r\n    teamWallet = _teamWallet;\r\n    marketingWallet = _marketingWallet;\r\n    return true;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketingTokenReleased\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseTeamToken2nd\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseTeamToken3rd\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamToken1stReleased\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamToken2ndReleased\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamToken4thReleased\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_teamWallet\",\"type\":\"address\"},{\"name\":\"_marketingWallet\",\"type\":\"address\"}],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseTeamToken4th\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseMarketingToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamToken3rdReleased\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseTeamToken1st\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Timelock","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://073bc9d1efa1a7a742cce079b7296b34560dca717aadd5de46bc67ef1042e178"}]}