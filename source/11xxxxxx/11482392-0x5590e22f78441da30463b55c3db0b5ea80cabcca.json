{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.26;\r\n\r\n/**\r\n* @title SafeMath\r\n* @dev Math operations with safety checks that throw on error\r\n*/\r\ncontract SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n        return 0;\r\n    }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n  \r\n    function percent(uint value,uint numerator, uint denominator, uint precision) internal pure  returns(uint quotient) {\r\n        uint _numerator  = numerator * 10 ** (precision+1);\r\n        uint _quotient =  ((_numerator / denominator) + 5) / 10;\r\n        return (value*_quotient/1000000000000000000);\r\n    }\r\n}\r\n\r\ncontract RUBYCURRENCY is SafeMath {\r\n    string public constant name                         = \"RUBY CURRENCY\";                  // Name of the token\r\n    string public constant symbol                       = \"RBC\";                            // Symbol of token\r\n    uint256 public constant decimals                    = 18;                               // Decimal of token\r\n    uint256 public _totalsupply                         = 300000000 * 10 ** decimals;       // Total supply\r\n    uint256 public _circulatingSupply                   = 20000000 * 10 ** decimals;        // Circulating supply\r\n    uint256 public _initialTransfer                     = 40000000 * 10 ** decimals;        // Initiral tokens\r\n    address public owner                                = msg.sender;                       // Owner of smart contract\r\n    uint256 public _price_token                         = 60000;                            // 1 Ether = 60000 tokens in ICO\r\n    uint256 no_of_tokens;\r\n    address public admin                                = 0x4CA958C30C9c5e85a9D0916796382326a68F9bDE;   \r\n    uint256 public _contractTime                        = now;   \r\n    uint256 public _unholdtime                          = now; \r\n    uint256 public _ICOstarttime                        = 0;\r\n    uint256 public _totalUnhold                         = 0;\r\n    uint256 public eth_received;                                                            // Total ether received in the contract\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint)) private _allowances;\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval (address indexed _owner, address indexed spender, uint value);\r\n    \r\n    // Only owner can access the function\r\n    modifier onlyOwner() {\r\n        if (msg.sender != owner) {\r\n            revert();\r\n        }\r\n        _;\r\n    }\r\n    \r\n    // Only admin can access the function\r\n    modifier onlyAdmin() {\r\n        if (msg.sender != admin) {\r\n            revert();\r\n        }\r\n        _;\r\n    }\r\n    \r\n    constructor() public {\r\n        balances[admin]             = _initialTransfer;\r\n        balances[address(this)]     = _circulatingSupply;\r\n        emit Transfer(0, admin, _initialTransfer);\r\n    }\r\n    \r\n    function () public payable {\r\n        require(now <= (_ICOstarttime + 45 days) && _ICOstarttime != 0); // 45 days\r\n        no_of_tokens                = mul(msg.value, _price_token); \r\n        eth_received                = add(eth_received, msg.value);\r\n        transferTokens(msg.sender,no_of_tokens);\r\n    }\r\n    \r\n    function start_ICO() public onlyAdmin\r\n    {\r\n        _ICOstarttime = now + 45 days; // 45 days\r\n    }\r\n    \r\n    function stop_ICO() public onlyAdmin\r\n    {\r\n        _ICOstarttime           = 0;\r\n        transferTokens(admin,balances[address(this)]);\r\n        emit Transfer(0, admin, balances[address(this)]);\r\n    }\r\n    \r\n    function unholdTokens() public onlyAdmin\r\n    {\r\n        require(now >= (_unholdtime + 365 days) && _totalUnhold <= 240000000*10**18); // 365 days\r\n        _unholdtime             = now;\r\n        uint256 _unholdamount   = 12000000*10**18;\r\n        balances[admin]         = add(balances[admin], _unholdamount);\r\n        emit Transfer(0, admin, _unholdamount);\r\n    }\r\n    \r\n    // Show token balance of address owner\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n    \r\n    // Token transfer function\r\n    // Token amount should be in 18 decimals (eg. 199 * 10 ** 18)\r\n    function transfer(address _to, uint256 _amount ) public {\r\n        require(balances[msg.sender] >= _amount && _amount >= 0);\r\n        balances[msg.sender]            = sub(balances[msg.sender], _amount);\r\n        balances[_to]                   = add(balances[_to], _amount);\r\n        emit Transfer(msg.sender, _to, _amount);\r\n    }\r\n    \r\n    // Transfer the balance from owner's account to another account\r\n    function transferTokens(address _to, uint256 _amount) private returns (bool success) {\r\n        require( _to != 0x0);       \r\n        require(balances[address(this)] >= _amount && _amount > 0);\r\n        balances[address(this)] = sub(balances[address(this)], _amount);\r\n        balances[_to] = add(balances[_to], _amount);\r\n        emit Transfer(address(this), _to, _amount);\r\n        return true;\r\n    }\r\n    \r\n    function allowance(address _owner, address spender) public view returns (uint) {\r\n        return _allowances[_owner][spender];\r\n    }\r\n    \r\n    function approve(address spender, uint amount) public returns (bool) {\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address sender, address recipient, uint amount) public returns (bool) {\r\n        require(balances[sender] >= amount && amount >= 0);\r\n        balances[sender]                = sub(balances[sender], amount);\r\n        balances[recipient]             = add(balances[recipient], amount);\r\n        emit Transfer(sender, recipient, amount);\r\n        _approve(sender, msg.sender, sub(_allowances[sender][msg.sender], amount));\r\n        return true;\r\n    }\r\n    \r\n    function increaseAllowance(address spender, uint addedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, add(_allowances[msg.sender][spender],addedValue));\r\n        return true;\r\n    }\r\n    \r\n    function decreaseAllowance(address spender, uint subtractedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, sub(_allowances[msg.sender][spender],subtractedValue));\r\n        return true;\r\n    }\r\n    \r\n    function _approve(address _owner, address spender, uint amount) internal {\r\n        require(_owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[_owner][spender] = amount;\r\n        emit Approval(_owner, spender, amount);\r\n    }\r\n    \r\n    function totalSupply() public view returns (uint256 total_Supply) {\r\n        total_Supply = _totalsupply;\r\n    }\r\n    \r\n    function changeAdmin(address _newAdminAddress) external onlyOwner {\r\n        admin = _newAdminAddress;\r\n    }\r\n \r\n    function drain() external onlyAdmin {\r\n        admin.transfer(this.balance);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"total_Supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalUnhold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_contractTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_unholdtime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_ICOstarttime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unholdTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop_ICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start_ICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eth_received\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdminAddress\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_initialTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drain\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_circulatingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalsupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_price_token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"RUBYCURRENCY","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://5cbdd34d6dffc14a691f335f02df950d48fb7eec8ad2b89b45686405ad316bfb"}]}