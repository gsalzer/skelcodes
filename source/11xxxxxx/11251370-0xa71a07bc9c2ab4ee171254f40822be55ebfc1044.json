{"status":"1","message":"OK","result":[{"SourceCode":"interface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface yVaultInterface is IERC20 {\r\n    function token() external view returns (address);\r\n    function balance() external view returns (uint);\r\n    function deposit(uint _amount) external;\r\n    function withdraw(uint _shares) external;\r\n    function getPricePerFullShare() external view returns (uint);\r\n}\r\n\r\ninterface Uni {\r\n    function swapExactTokensForTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n}\r\n\r\n\r\nlibrary UniformRandomNumber {\r\n  /// @author Brendan Asselstine\r\n  /// @notice Select a random number without modulo bias using a random seed and upper bound\r\n  /// @param _entropy The seed for randomness\r\n  /// @param _upperBound The upper bound of the desired number\r\n  /// @return A random number less than the _upperBound\r\n  function uniform(uint256 _entropy, uint256 _upperBound) internal pure returns (uint256) {\r\n    uint256 min = -_upperBound % _upperBound;\r\n    uint256 random = _entropy;\r\n    while (true) {\r\n      if (random >= min) {\r\n        break;\r\n      }\r\n      random = uint256(keccak256(abi.encodePacked(random)));\r\n    }\r\n    return random % _upperBound;\r\n  }\r\n}\r\n\r\ncontract Distributor {\r\n\tUni public constant uniswap = Uni(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n\tyVaultInterface public constant vault = yVaultInterface(0x5dbcF33D8c2E976c6b560249878e6F1491Bca25c);\r\n\taddress public constant WETH = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\r\n\t\r\n\tfunction shitcoinMenu(uint entropy) public pure returns (address) { \r\n\t\tuint idx = UniformRandomNumber.uniform(\r\n\t\t\tentropy,\r\n\t\t\t11 /* WARNING: ADJUST BASED ON TOKEN COUNT!! */\r\n\t\t);\r\n\t\tif (idx == 0) return address(0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984); // UNI \r\n\t\tif (idx == 1) return address(0x62359Ed7505Efc61FF1D56fEF82158CcaffA23D7); // CORE\r\n\t\tif (idx == 2) return address(0x1494CA1F11D487c2bBe4543E90080AeBa4BA3C2b); // DPI\r\n\t\tif (idx == 3) return address(0x429881672B9AE42b8EbA0E26cD9C73711b891Ca5); // PICKLE\r\n\t\tif (idx == 4) return address(0xa0246c9032bC3A600820415aE600c6388619A14D); // FARM\r\n\t\tif (idx == 5) return address(0x514910771AF9Ca656af840dff83E8264EcF986CA); // LINK\r\n\t\tif (idx == 6) return address(0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9); // AAVE\r\n\t\tif (idx == 7) return address(0x1cEB5cB57C4D4E2b2433641b95Dd330A33185A44); // KP3R\r\n\t\tif (idx == 8) return address(0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD); // LRC\r\n\t\tif (idx == 9) return address(0x584bC13c7D411c00c01A62e8019472dE68768430); // HEGIC\r\n\t\tif (idx == 10) return address(0x69692D3345010a207b759a7D1af6fc7F38b35c5E); // CHADS\r\n\t\t// @TODO POO - 2x chance to get that\r\n\t\treturn address(0);\r\n\t}\r\n\t\r\n\tfunction distribute(uint entropy, address winner) external {\r\n\t\taddress[] memory path = new address[](3);\r\n\t\tpath[0] = address(vault);\r\n\t\tpath[1] = WETH;\r\n\t\tpath[2] = shitcoinMenu(entropy);\r\n\t\tuniswap.swapExactTokensForTokens(vault.balanceOf(address(this)), uint(0), path, winner, block.timestamp);\r\n\t}\r\n}","ABI":"[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entropy\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entropy\",\"type\":\"uint256\"}],\"name\":\"shitcoinMenu\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswap\",\"outputs\":[{\"internalType\":\"contract Uni\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract yVaultInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Distributor","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://87b70c5101f7c044d621c32e4019972833b4f55bfbecdd636a32e76ec85695ee"}]}