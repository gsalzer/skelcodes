{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.6.0;\r\n\r\ninterface IERC1155 {\r\n    function balanceOf(address _owner, uint256 _id) external view returns (uint256);\r\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\r\n    function mint(\r\n    \taddress _to,\r\n    \tuint256 _id,\r\n    \tuint256 _quantity,\r\n    \tbytes calldata _data\r\n    ) external;\r\n}\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address _owner) external view returns (uint256);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract yTSLAFuelStation {\r\n  IERC1155 public dmc = IERC1155(0x6E91869090a430e6ba6fFa7c585742E56Fed2247);\r\n  IERC20 public ytsla = IERC20(0x5322A3556F979cE2180B30e689a9436fDDCB1021);\r\n\r\n    function mint() public {\r\n        require(ytsla.balanceOf(msg.sender) >= 99 ether);\r\n        ytsla.transferFrom(msg.sender, address(this), 99 ether);\r\n        if (dmc.balanceOf(address(this), 11) >= 1) {\r\n            dmc.safeTransferFrom(address(this), msg.sender, 11, 1, \"\");\r\n        } else {\r\n            dmc.mint(msg.sender, 11, 1, \"\");\r\n        }\r\n    }\r\n    function redeem() public {\r\n        require(dmc.balanceOf(msg.sender, 11) >= 1);\r\n        dmc.safeTransferFrom(msg.sender, address(this), 11, 1, \"\");\r\n        ytsla.transfer(msg.sender, 99 ether);\r\n    }\r\n  \r\n  \tfunction onERC1155Received(\r\n\t\taddress _operator,\r\n\t\taddress, // _from\r\n\t\tuint256, // _id\r\n\t\tuint256, // _amount\r\n\t\tbytes memory // _data\r\n\t) public view returns (bytes4) {\r\n\t\trequire(msg.sender == address(dmc), \"onERC1155BatchReceived:: invalid token address\");\r\n\t\trequire(_operator == address(this), \"onERC1155BatchReceived:: operator must be fuel station contract\");\r\n\r\n\t\t// Return success\r\n\t\treturn this.onERC1155Received.selector;\r\n\t}\r\n    function supportsInterface(bytes4 interfaceID) external pure returns (bool) {\r\n    \treturn\r\n    \t\tinterfaceID == 0x01ffc9a7 || // ERC-165 support\r\n    \t\tinterfaceID == 0x4e2312e0; // ERC-1155 `ERC1155TokenReceiver` support\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"name\":\"dmc\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ytsla\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"yTSLAFuelStation","CompilerVersion":"v0.6.2+commit.bacdbe57","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://26f2fa59459f60d6a6c45c3d12459b1994fdd22d5b3df01c60443906936de076"}]}