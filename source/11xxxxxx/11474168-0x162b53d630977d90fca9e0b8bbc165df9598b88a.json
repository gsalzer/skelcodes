{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: --ðŸ¥º--\r\npragma solidity =0.7.0;\r\n\r\ncontract RefundSponsor {\r\n\r\n    address public refundSponsor;\r\n    address public sponsoredContract;\r\n    bool public isPaused;\r\n    uint256 public flushNonce;\r\n    uint256 public payoutPercent;\r\n\r\n    mapping (bytes32 => uint256) public refundAmount;\r\n    mapping (address => uint256) public sponsoredAmount;\r\n\r\n    event RefundIssued(\r\n        address refundedTo,\r\n        uint256 amount\r\n    );\r\n\r\n    event SponsoredContribution(\r\n        address sponsor,\r\n        uint256 amount\r\n    );\r\n\r\n    modifier onlySponsor() {\r\n        require(\r\n            msg.sender == refundSponsor,\r\n            'RefundSponsor: not a sponsor'\r\n        );\r\n        _;\r\n    }\r\n\r\n    receive()\r\n        external\r\n        payable\r\n    {\r\n        sponsoredAmount[msg.sender] += msg.value;\r\n        emit SponsoredContribution(\r\n            msg.sender,\r\n            msg.value\r\n        );\r\n    }\r\n\r\n    constructor() {\r\n        refundSponsor = msg.sender;\r\n        payoutPercent = 70;\r\n    }\r\n\r\n    function changePayoutPercent(\r\n        uint256 _newPauoutPercent\r\n    )\r\n        external\r\n        onlySponsor\r\n    {\r\n        payoutPercent = _newPauoutPercent;\r\n    }\r\n\r\n    function setSponsoredContract(address _s)\r\n        onlySponsor\r\n        external\r\n    {\r\n        sponsoredContract = _s;\r\n    }\r\n\r\n    function addGasRefund(address _a, uint256 _g)\r\n        external\r\n    {\r\n        if (msg.sender == sponsoredContract && isPaused == false) {\r\n            refundAmount[getHash(_a)] += _g;\r\n        }\r\n    }\r\n\r\n    function setGasRefund(address _a, uint256 _g)\r\n        external\r\n        onlySponsor\r\n    {\r\n        refundAmount[getHash(_a)] = _g;\r\n    }\r\n\r\n    function requestGasRefund()\r\n        external\r\n    {\r\n        require(\r\n            isPaused == false,\r\n            'RefundSponsor: refunds paused'\r\n        );\r\n\r\n        bytes32 sender = getHash(msg.sender);\r\n\r\n        require(\r\n            refundAmount[sender] > 0,\r\n            'RefundSponsor: nothing to refund'\r\n        );\r\n\r\n        uint256 amount = getRefundAmount(msg.sender);\r\n        refundAmount[sender] = 0;\r\n\r\n        msg.sender.transfer(amount);\r\n\r\n        emit RefundIssued(\r\n            msg.sender,\r\n            amount\r\n        );\r\n    }\r\n\r\n    function myRefundAmount()\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return getRefundAmount(msg.sender) * payoutPercent / 100;\r\n    }\r\n\r\n    function getRefundAmount(address x)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return refundAmount[getHash(x)] * payoutPercent / 100;\r\n    }\r\n\r\n    function getHash(address x)\r\n        public\r\n        view\r\n        returns (bytes32)\r\n    {\r\n        return keccak256(\r\n            abi.encodePacked(x, flushNonce)\r\n        );\r\n    }\r\n\r\n    function pause()\r\n        external\r\n        onlySponsor\r\n    {\r\n        isPaused = true;\r\n    }\r\n\r\n    function resume()\r\n        external\r\n        onlySponsor\r\n    {\r\n        isPaused = false;\r\n    }\r\n\r\n    function flush()\r\n        external\r\n        onlySponsor\r\n    {\r\n        flushNonce += 1;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"refundedTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SponsoredContribution\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_g\",\"type\":\"uint256\"}],\"name\":\"addGasRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPauoutPercent\",\"type\":\"uint256\"}],\"name\":\"changePayoutPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flush\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flushNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"getRefundAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myRefundAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payoutPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"refundAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundSponsor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestGasRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resume\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_a\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_g\",\"type\":\"uint256\"}],\"name\":\"setGasRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_s\",\"type\":\"address\"}],\"name\":\"setSponsoredContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sponsoredAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sponsoredContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"RefundSponsor","CompilerVersion":"v0.7.0+commit.9e61f92b","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://981256a11bd92cc1909852d989a99b543e2bb493e885d18e6ac624667bd092ab"}]}