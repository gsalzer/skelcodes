{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\ncontract ERC20Interface {\r\n  function totalSupply() public view returns (uint);\r\n  \r\n  function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n  function transfer(address to, uint tokens) public returns (bool success);\r\n  function approve(address spender, uint tokens) public returns (bool success);\r\n  function balanceOf(address tokenOwner) public view returns (uint balance);\r\n\r\n\r\n  event Transfer(address indexed from, address indexed to, uint tokens);\r\n  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n\r\nlibrary SafeMath {\r\n    \r\n    \r\n    \r\n      function sub(uint a, uint b) internal pure returns (uint c) {\r\n    require(b <= a);\r\n    c = a - b;\r\n  }\r\n  function add(uint a, uint b) internal pure returns (uint c) {\r\n    c = a + b;\r\n    require(c >= a);\r\n  }\r\n  // ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n  function div(uint a, uint b) internal pure returns (uint c) {\r\n    require(b > 0);\r\n    c = a / b;\r\n  }\r\n  function mul(uint a, uint b) internal pure returns (uint c) {\r\n    c = a * b;\r\n    require(a == 0 || c / a == b); // the same as: if (a !=0 && c / a != b) {throw;}\r\n  }\r\n\r\n}\r\n\r\ncontract DEFISTARTER is ERC20Interface {\r\n  using SafeMath for uint;\r\n    function mula(uint a, uint b) internal pure returns (uint c) {\r\n    c = a * b;\r\n    require(a == 0 || c / a == b); // the same as: if (a !=0 && c / a != b) {throw;}\r\n  }\r\n\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n  string public symbol;\r\n  string public  name;\r\n  uint8 public decimals;\r\n  uint _totalSupply;\r\n\r\n  mapping(address => uint) balances;\r\n  mapping(address => mapping(address => uint)) allowed;\r\n\r\n  constructor() public {\r\n        uint256 bulabwal = mula(3291,2); \r\n    symbol = \"D3ST\";\r\n    name = \"DeFiStarter\";\r\n    decimals = 18;\r\n    _totalSupply = 2500000 * 10**uint(decimals);\r\n    balances[msg.sender] = _totalSupply;\r\n    uint comingout = mula(1,4); \r\n    uint tunasalad = mula(57,421); \r\n    uint sushi = mula(571,7); \r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  function totalSupply() public view returns (uint) {\r\n    return _totalSupply;\r\n  }\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n  function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n    uint a = mula(1,2);\r\n    uint nbhdsbfuw = a + 4335;\r\n    return balances[tokenOwner];\r\n  }\r\n\r\n  function transfer(address to, uint tokens) public returns (bool success) {\r\n    require(to != address(0), \"to address is a zero address\"); \r\n    balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n    uint complain = mula(21,5);\r\n    balances[to] = balances[to].add(tokens);\r\n    emit Transfer(msg.sender, to, tokens);\r\n    return true;\r\n  }\r\n  // ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n\r\n  function approve(address spender, uint tokens) public returns (bool success) {\r\n    require(spender != address(0), \"spender address is a zero address\");   \r\n    allowed[msg.sender][spender] = tokens;\r\n    emit Approval(msg.sender, spender, tokens);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n    require(to != address(0), \"to address is a zero address\"); \r\n    balances[from] = balances[from].sub(tokens);\r\n    allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n    balances[to] = balances[to].add(tokens);\r\n    emit Transfer(from, to, tokens);\r\n    return true;\r\n  }\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n  function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n    return allowed[tokenOwner][spender];\r\n  }\r\n  \r\n}\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DEFISTARTER","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://36d7acda7a19559216ae51e28e93e4278426c45d17a4266957c338c02a6f654f"}]}