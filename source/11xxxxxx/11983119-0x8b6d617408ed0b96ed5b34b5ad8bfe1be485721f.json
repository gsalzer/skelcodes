{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/Users/stephanmeier/Workspace/airdrops/contracts/Airdrop.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERCX {\\n  function balanceOf(address owner) external view returns (uint);\\n  function transferFrom(address from, address to, uint256 value) external;\\n  function name() external view returns (string memory);\\n\\tfunction symbol() external view returns (string memory);\\n\\tfunction decimals() external view returns (uint8);\\n}\\n\\ncontract Airdrop {\\n\\n  struct Data {\\n    address from;\\n    address token;\\n    uint128 valuePerClaim;\\n    uint128 timestamp;\\n  }\\n\\n  struct ERCData {\\n    string name;\\n    string symbol;\\n    uint8 decimals;\\n  }\\n\\n\\taddress public owner;\\n  uint32 public latestRef;\\n\\n\\tmapping (uint32 => Data) public refData;\\n\\tmapping (uint32 => mapping (address => uint32)) public claimable;\\n\\tmapping (address => uint32[]) private drops;\\n\\n\\tconstructor() {\\n\\t\\towner = msg.sender;\\n\\t}\\n\\n\\tmodifier ensureOwner {\\n\\t\\trequire(owner == msg.sender); _;\\n\\t}\\n\\n\\tevent Dropped(uint32 ref, address indexed token);\\n\\tevent Claimed(uint32 ref, address indexed token, address indexed to);\\n\\n\\tfunction drop(uint32 ref, address from, address token, uint128 valuePerClaim, address[] calldata owners) ensureOwner external {\\n\\t\\trequire(refData[ref].timestamp == 0, 'ref');\\n    latestRef = ref;\\n\\t\\trefData[ref] = Data({\\n\\t\\t\\tfrom: from,\\n\\t\\t\\ttoken: token,\\n\\t\\t\\tvaluePerClaim: valuePerClaim,\\n\\t\\t\\ttimestamp: uint128(block.timestamp)\\n\\t\\t});\\n\\t\\tfor (uint i = 0; i < owners.length; i++) {\\n\\t\\t\\tdrops[owners[i]].push(ref);\\n      claimable[ref][owners[i]] = 1;\\n\\t\\t}\\n\\n\\t\\temit Dropped(ref, token);\\n\\t}\\n\\n\\tfunction claim(uint32 ref) external {\\n\\t\\trequire(claimable[ref][msg.sender] == 1, 'claim');\\n\\t\\tclaimable[ref][msg.sender] = uint32(block.timestamp);\\n\\n\\t\\tIERCX(refData[ref].token).transferFrom(refData[ref].from, msg.sender, refData[ref].valuePerClaim);\\n\\n\\t\\temit Claimed(ref, refData[ref].token, msg.sender);\\n\\t}\\n\\n\\tfunction setOwner(address _owner) ensureOwner external {\\n\\t\\towner = _owner;\\n\\t}\\n\\n\\tfunction dropsOf(address _owner) external view returns (uint32[] memory, Data[] memory, ERCData[] memory, uint[] memory) {\\n\\t\\tData[] memory _refDatas = new Data[](drops[_owner].length);\\n    ERCData[] memory _ercDatas = new ERCData[](drops[_owner].length);\\n\\t\\tuint[] memory _claims = new uint[](drops[_owner].length);\\n\\n\\t\\tfor (uint i = 0; i < drops[_owner].length; i++) {\\n\\t\\t\\t_refDatas[i] = refData[drops[_owner][i]];\\n      _ercDatas[i] = ERCData({\\n        name: IERCX(refData[drops[_owner][i]].token).name(),\\n        symbol: IERCX(refData[drops[_owner][i]].token).symbol(),\\n        decimals: refData[drops[_owner][i]].valuePerClaim == 1 ? 0 : IERCX(refData[drops[_owner][i]].token).decimals()\\n      });\\n\\t\\t\\t_claims[i] = claimable[drops[_owner][i]][_owner];\\n\\t\\t}\\n\\n\\t\\treturn (drops[_owner], _refDatas, _ercDatas, _claims);\\n\\t}\\n\\n\\tfunction balancesOf(address _owner, address[] calldata tokens) external view returns (uint[] memory) {\\n\\t\\tuint[] memory b = new uint[](tokens.length);\\n\\t\\tfor (uint i = 0; i < b.length; i++) {\\n\\t\\t\\tb[i] = IERCX(tokens[i]).balanceOf(_owner);\\n\\t\\t}\\n\\n\\t\\treturn b;\\n\\t}\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 999999\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"ref\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"ref\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"Dropped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"balancesOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"ref\",\"type\":\"uint32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimable\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"ref\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"valuePerClaim\",\"type\":\"uint128\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"}],\"name\":\"drop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"dropsOf\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"valuePerClaim\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"timestamp\",\"type\":\"uint128\"}],\"internalType\":\"struct Airdrop.Data[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"internalType\":\"struct Airdrop.ERCData[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRef\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"refData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"valuePerClaim\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"timestamp\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Airdrop","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"999999","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}