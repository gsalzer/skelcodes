{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ninterface token {\r\nfunction transfer(address receiver, uint amount) external;\r\n}\r\n\r\ncontract Crowdsale {\r\naddress public beneficiary;\r\nuint public fundingGoal;\r\nuint public amountRaised;\r\nuint public deadline;\r\nuint public price;\r\ntoken public tokenReward;\r\nmapping(address => uint256) public balanceOf;\r\nbool fundingGoalReached = false;\r\nbool crowdsaleClosed = false;\r\nbool fundingTransferFail = false;\r\n\r\nevent GoalReached(address recipient, uint totalAmountRaised);\r\nevent FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n/**\r\n * Constructor function\r\n *\r\n * Setup the owner\r\n */\r\nconstructor(\r\n\r\n) public {\r\n    beneficiary = 0x9882E5f04D4aa38F902983E3749196F1B1F76Ea3;\r\n    fundingGoal = 40 * 1 ether;\r\n    deadline = now + 20 * 1 minutes;\r\n    price = 1 * 1 ether;\r\n    tokenReward = token(0x01BF2C6FF1C43135086e925Ad236fa9218e4F9D2);\r\n}\r\n\r\n/**\r\n * Fallback function\r\n *\r\n * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n */\r\nfunction () payable public {\r\n    require(msg.value == 500000000000000000);\r\n    require(balanceOf[msg.sender] == 0);\r\n    require(amountRaised < fundingGoal);\r\n    uint amount = msg.value;\r\n    balanceOf[msg.sender] += amount;\r\n    amountRaised += amount;\r\n    tokenReward.transfer(msg.sender, (amount * 1 ether) / price);\r\n    emit FundTransfer(msg.sender, amount, true);\r\n}\r\n\r\nfunction getGoalReached() public view returns(bool) {\r\n    return fundingGoalReached;\r\n}\r\n\r\nfunction getCrowdsaleClosed() public view returns(bool) {\r\n    return crowdsaleClosed;\r\n}\r\n\r\nmodifier afterDeadline() { if (now >= deadline) _; }\r\n\r\n/**\r\n * Check if goal was reached\r\n *\r\n * Checks if the goal or time limit has been reached and ends the campaign\r\n */\r\nfunction checkGoalReached() public {\r\n    require(beneficiary == msg.sender);\r\n    if (beneficiary == msg.sender){\r\n        fundingGoalReached = true;\r\n        crowdsaleClosed = true;\r\n        emit GoalReached(beneficiary, amountRaised);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Withdraw the funds\r\n *\r\n * Checks to see if goal or time limit has been reached, and if so, and the funding goal was reached,\r\n * sends the entire amount to the beneficiary. If goal was not reached, each contributor can withdraw\r\n * the amount they contributed.\r\n */\r\nfunction safeWithdrawal() public {\r\n    require(beneficiary == msg.sender || balanceOf[msg.sender] > 0);\r\n    if (crowdsaleClosed) {\r\n        uint amount = balanceOf[msg.sender];\r\n        balanceOf[msg.sender] = 0;\r\n        if (amount > 0) {\r\n            if (msg.sender.send(amount)) {\r\n               emit FundTransfer(msg.sender, amount, false);\r\n            } else {\r\n                balanceOf[msg.sender] = amount;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (beneficiary == msg.sender) {\r\n        if (beneficiary.send(amountRaised)) {\r\n           emit FundTransfer(beneficiary, amountRaised, false);\r\n           amountRaised = 0;\r\n        } else {\r\n            //If we fail to send the funds to beneficiary, unlock funders balance\r\n            fundingTransferFail = true;\r\n        }\r\n    }\r\n}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"checkGoalReached\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getGoalReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCrowdsaleClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalAmountRaised\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://7de3b0246169c8b1019aa3604a811f332e5e07862616ca287f2889a4f8cdfb75"}]}