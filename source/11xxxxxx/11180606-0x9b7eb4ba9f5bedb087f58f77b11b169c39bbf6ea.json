{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.6;\r\n\r\ninterface IKP4R { function acceptGovernance() external; }\r\n\r\ncontract NoOwner {\r\n\r\n    IKP4R kp4r = IKP4R(0xA89ac6e529aCf391CfbBD377F3aC9D93eae9664e);\r\n    address mother = 0x86B0F5060Ed1A098bF1FE0508EA4E5a2e3311211;\r\n\r\n    function disableGovernance() public {\r\n        require(msg.sender == mother, \"only KP4R mother can disable governance!\");\r\n        // Once this is called Governance will be disabled forever!\r\n        // Due to community decision, ownership has been renounced.\r\n        // - No KP4R can be minted.\r\n        // - KP4R governance can never be transfered.\r\n        // - Theres no going back.\r\n        //\r\n        // You asked, we listened!\r\n        kp4r.acceptGovernance();\r\n    }\r\n\r\n    /* ðŸš€ ðŸŒ• - FUD can't keep us down. */\r\n}","ABI":"[{\"inputs\":[],\"name\":\"disableGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"NoOwner","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://727c132a84a34b96873b30e0e0a3bdc2f0fbf060e1cb553389fb7e9697409ed9"}]}