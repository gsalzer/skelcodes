{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2020-10-27\r\n*/\r\n\r\n// SPDX-License-Identifier: GPL-3.0\r\n// forked from Compound's autonomous proposal Factory @0x524B54a6A7409A2Ac5b263Fb2A41DAC9d155ae71\r\n// refactored by the penguin party @penguinparty.eth\r\n\r\npragma solidity ^0.6.10;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface IUni {\r\n    function delegate(address delegatee) external;\r\n    function balanceOf(address account) external view returns (uint);\r\n    function transfer(address dst, uint rawAmount) external returns (bool);\r\n    function transferFrom(address src, address dst, uint rawAmount) external returns (bool);\r\n}\r\n\r\ninterface IGovernorAlpha {\r\n    function propose(address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description) external returns (uint);\r\n    function castVote(uint proposalId, bool support) external;\r\n}\r\n\r\ncontract CrowdProposal {\r\n    /// @notice The crowd proposal author\r\n    address payable public immutable author;\r\n\r\n    /// @notice Governance proposal data\r\n    address[] public targets;\r\n    uint[] public values;\r\n    string[] public signatures;\r\n    bytes[] public calldatas;\r\n    string public description;\r\n\r\n    /// @notice UNI token contract address\r\n    address public immutable uni;\r\n    /// @notice Uniswap protocol `GovernorAlpha` contract address\r\n    address public immutable governor;\r\n\r\n    /// @notice Governance proposal id\r\n    uint public govProposalId;\r\n    /// @notice Terminate flag\r\n    bool public terminated;\r\n\r\n    /// @notice An event emitted when the governance proposal is created\r\n    event CrowdProposalProposed(address indexed proposal, address indexed author, uint proposalId);\r\n    /// @notice An event emitted when the crowd proposal is terminated\r\n    event CrowdProposalTerminated(address indexed proposal, address indexed author);\r\n    /// @notice An event emitted when delegated votes are transfered to the governance proposal\r\n    event CrowdProposalVoted(address indexed proposal, uint proposalId);\r\n\r\n    /**\r\n    * @notice Construct crowd proposal\r\n    * @param author_ The crowd proposal author\r\n    * @param targets_ The ordered list of target addresses for calls to be made\r\n    * @param values_ The ordered list of values (i.e. msg.value) to be passed to the calls to be made\r\n    * @param signatures_ The ordered list of function signatures to be called\r\n    * @param calldatas_ The ordered list of calldata to be passed to each call\r\n    * @param description_ The block at which voting begins: holders must delegate their votes prior to this block\r\n    * @param uni_ `UNI` token contract address\r\n    * @param governor_ Uniswap protocol `GovernorAlpha` contract address\r\n    */\r\n    constructor(address payable author_,\r\n                address[] memory targets_,\r\n                uint[] memory values_,\r\n                string[] memory signatures_,\r\n                bytes[] memory calldatas_,\r\n                string memory description_,\r\n                address uni_,\r\n                address governor_) public {\r\n                    author = author_;\r\n\r\n                    // Save proposal data\r\n                    targets = targets_;\r\n                    values = values_;\r\n                    signatures = signatures_;\r\n                    calldatas = calldatas_;\r\n                    description = description_;\r\n\r\n                    // Save Uniswap contracts data\r\n                    uni = uni_;\r\n                    governor = governor_;\r\n\r\n                    terminated = false;\r\n\r\n                    // Delegate votes to the crowd proposal\r\n                    IUni(uni_).delegate(address(this));\r\n                }\r\n\r\n                /// @notice Create governance proposal\r\n                function propose() external returns (uint) {\r\n                    require(govProposalId == 0, 'CrowdProposal::propose: gov proposal already exists');\r\n                    require(!terminated, 'CrowdProposal::propose: proposal has been terminated');\r\n\r\n                    // Create governance proposal and save proposal id\r\n                    govProposalId = IGovernorAlpha(governor).propose(targets, values, signatures, calldatas, description);\r\n                    emit CrowdProposalProposed(address(this), author, govProposalId);\r\n\r\n                    return govProposalId;\r\n                }\r\n\r\n                /// @notice Terminate the crowd proposal, send back staked UNI tokens\r\n                function terminate() external {\r\n                    require(msg.sender == author, 'CrowdProposal::terminate: only author can terminate');\r\n                    require(!terminated, 'CrowdProposal::terminate: proposal has been already terminated');\r\n\r\n                    terminated = true;\r\n\r\n                    // Transfer staked UNI tokens from the crowd proposal contract back to the author\r\n                    IUni(uni).transfer(author, IUni(uni).balanceOf(address(this)));\r\n\r\n                    emit CrowdProposalTerminated(address(this), author);\r\n                }\r\n\r\n                /// @notice Vote for the governance proposal with all delegated votes\r\n                function vote() external {\r\n                    require(govProposalId > 0, 'CrowdProposal::vote: gov proposal has not been created yet');\r\n                    IGovernorAlpha(governor).castVote(govProposalId, true);\r\n\r\n                    emit CrowdProposalVoted(address(this), govProposalId);\r\n                }\r\n}\r\n\r\n\r\ncontract CrowdProposalFactory {\r\n    /// @notice `UNI` token contract address\r\n    address public immutable uni;\r\n    /// @notice Uniswap protocol `GovernorAlpha` contract address\r\n    address public immutable governor;\r\n    /// @notice Minimum uni tokens required to create a crowd proposal\r\n    uint public immutable uniStakeAmount;\r\n\r\n    /// @notice An event emitted when a crowd proposal is created\r\n    event CrowdProposalCreated(address indexed proposal, address indexed author, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, string description);\r\n\r\n    /**\r\n    * @notice Construct a proposal factory for crowd proposals\r\n    * @param uni_ `UNI` token contract address\r\n    * @param governor_ Uniswap protocol `GovernorAlpha` contract address\r\n    * @param uniStakeAmount_ The minimum amount of uni tokes required for creation of a crowd proposal\r\n        */\r\n    constructor(address uni_,\r\n                address governor_,\r\n                uint uniStakeAmount_) public {\r\n                    uni = uni_;\r\n                    governor = governor_;\r\n                    uniStakeAmount = uniStakeAmount_;\r\n                }\r\n\r\n                /**\r\n                * @notice Create a new crowd proposal\r\n                * @notice Call `uni.approve(factory_address, uniStakeAmount)` before calling this method\r\n                * @param targets The ordered list of target addresses for calls to be made\r\n                * @param values The ordered list of values (i.e. msg.value) to be passed to the calls to be made\r\n                * @param signatures The ordered list of function signatures to be called\r\n                * @param calldatas The ordered list of calldata to be passed to each call\r\n                * @param description The block at which voting begins: holders must delegate their votes prior to this block\r\n                */\r\n                function createCrowdProposal(address[] memory targets,\r\n                                             uint[] memory values,\r\n                                             string[] memory signatures,\r\n                                             bytes[] memory calldatas,\r\n                                             string memory description) external {\r\n                                                 CrowdProposal proposal = new CrowdProposal(msg.sender, targets, values, signatures, calldatas, description, uni, governor);\r\n                                                 emit CrowdProposalCreated(address(proposal), msg.sender, targets, values, signatures, calldatas, description);\r\n\r\n                                                 // Stake UNI and force proposal to delegate votes to itself\r\n                                                 IUni(uni).transferFrom(msg.sender, address(proposal), uniStakeAmount);\r\n                                             }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"author_\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"targets_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values_\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures_\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas_\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"uni_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governor_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"CrowdProposalProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"}],\"name\":\"CrowdProposalTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"CrowdProposalVoted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"author\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"calldatas\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"signatures\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"targets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terminate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terminated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uni\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"values\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"CrowdProposal","CompilerVersion":"v0.6.11+commit.5ef660b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000007e9b3179a40e021cd21fcb524815b10040f510d400000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002e000000000000000000000000000000000000000000000000000000000000004e00000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f9840000000000000000000000005e4be8bc9637f0eaa1a755019e06a68ce081d58f00000000000000000000000000000000000000000000000000000000000000030000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f984000000000000000000000000c722a3f999983325c611e7e1d967a3c27063f8b0000000000000000000000000c722a3f999983325c611e7e1d967a3c27063f8ba00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000c722a3f999983325c611e7e1d967a3c27063f8b00000000000000000000000000000000000000000000422ca8b0a00a425000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064cfda5478000000000000000000000000d3d2e2692501a5c9ca623199d38826e513033a170000000000000000000000000000000000000000000422ca8b0a00a42500000000000000000000000000000000000000000000000000000000000000004f1a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002481e16298000000000000000000000000d3d2e2692501a5c9ca623199d38826e513033a17000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000264232046756e6420612036302064617920554e492d455448206c6971756964697479206d696e696e6720706f6f6c207769746820354d20554e490a20546869732070726f706f73616c2063726561746573206120554e492d455448206c6971756964697479206d696e696e6720706f6f6c2077697468207468652073616d6520636f6e66696775726174696f6e206173207468652063757272656e7420706f6f6c73202835206d696c6c696f6e20554e49206f7665722036302064617973292e0a2057652062656c69657665207468617420746869732070726f706f73616c2077696c6c2072657475726e2076616c756520746f20554e4920686f6c64657273206279206372656174696e6720696e63656e746976657320746f20686f6c6420554e4920616e6420627920696e6372656173696e6720554e49206c69717569646974792e20546869732070726f706f73616c20686173207468652061646465642062656e65666974206f662064726177696e6720554e492066726f6d2063656e7472616c697365642065786368616e6765732074686174206d617920686176652074686520696e63656e7469766520746f20766f746520616761696e737420746865206265737420696e74657265737473206f6620556e69737761702e200a2052756e20612073696d756c6174696f6e206f6620746869732070726f706f73616c205b686572655d2868747470733a2f2f6769746875622e636f6d2f627573696e657373667269656e646c79757365726e616d652f4554482d554e492d706f6f6c2d70726f706f73616c290a0a207369676e65642070656e6775696e70617274792e65746800000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f65b8458f41ef423f33964c206db001e362effce395af20896f066977a9fa7f8"}]}