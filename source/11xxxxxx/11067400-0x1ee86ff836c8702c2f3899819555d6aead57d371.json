{"status":"1","message":"OK","result":[{"SourceCode":"// File: @openzeppelin/contracts/GSN/Context.sol\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/access/Ownable.sol\r\n\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () internal {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/math/SafeMath.sol\r\n\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/math/Math.sol\r\n\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow, so we distribute\r\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\r\n    }\r\n}\r\n\r\n// File: contracts/interfaces/IERC20.sol\r\n\r\n\r\npragma solidity ^0.6.12;\r\n\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address from) external view returns (uint256);\r\n    function transferFrom(address from, address to, uint tokens) external returns (bool);\r\n    function transfer(address to, uint tokens) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function burn(uint256 amount) external;\r\n}\r\n\r\n// File: contracts/interfaces/IERC721Collection.sol\r\n\r\n\r\npragma solidity ^0.6.12;\r\n\r\n\r\ninterface IERC721Collection {\r\n    function issueToken(address _beneficiary, string calldata _wearableId) external;\r\n    function getWearableKey(string calldata _wearableId) external view returns (bytes32);\r\n    function issued(bytes32 _wearableKey) external view returns (uint256);\r\n    function maxIssuance(bytes32 _wearableKey) external view returns (uint256);\r\n    function issueTokens(address[] calldata _beneficiaries, bytes32[] calldata _wearableIds) external;\r\n    function owner() external view returns (address);\r\n    function wearables(uint256 _index) external view returns (string memory);\r\n    function wearablesCount() external view returns (uint256);\r\n}\r\n\r\n// File: contracts/markets/v1/CollectionStoreV1.sol\r\n\r\n\r\npragma solidity ^0.6.12;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\n\r\n\r\n\r\n\r\ncontract CollectionStoreV1 is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    struct CollectionData {\r\n        address beneficiary;\r\n        mapping (uint256 => uint256) pricePerOptionId;\r\n        mapping (uint256 => uint256) availableQtyPerOptionId;\r\n    }\r\n\r\n    IERC20 public acceptedToken;\r\n\r\n    mapping (address => CollectionData) collectionsData;\r\n\r\n    event Bought(address indexed _collectionAddress, uint256[] _optionIds, address _beneficiary, uint256 _price);\r\n    event SetCollectionData(address indexed _collectionAddress, address _collectionBeneficiary, uint256[] _optionIds, uint256[] _availableQtys, uint256[] _prices);\r\n\r\n    /**\r\n    * @notice Constructor of the contract.\r\n    * @param _acceptedToken - Address of the ERC20 token accepted\r\n    * @param _collectionAddresses - collection addresses\r\n    * @param _collectionBeneficiaries - collection beneficiaries\r\n    * @param _collectionOptionIds - collection option ids\r\n    * @param _collectionAvailableQtys - collection available qtys for sale\r\n    * @param _collectionPrices - collection prices\r\n    */\r\n    constructor(\r\n        IERC20 _acceptedToken,\r\n        address[] memory _collectionAddresses,\r\n        address[] memory _collectionBeneficiaries,\r\n        uint256[][] memory _collectionOptionIds,\r\n        uint256[][] memory _collectionAvailableQtys,\r\n        uint256[][] memory _collectionPrices\r\n      )\r\n      public {\r\n        acceptedToken = _acceptedToken;\r\n\r\n        for (uint256 i = 0; i < _collectionAddresses.length; i++) {\r\n            _setCollectionData(\r\n                _collectionAddresses[i],\r\n                _collectionBeneficiaries[i],\r\n                _collectionOptionIds[i],\r\n                _collectionAvailableQtys[i],\r\n                _collectionPrices[i]\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @notice Buy Wearables NFTs.\r\n    * @dev that there is a maximum amount of NFTs that can be issued per call.\r\n    * @param _collectionAddress - collectionn address\r\n    * @param _optionIds - collection option id\r\n    * @param _beneficiary - beneficiary address\r\n    */\r\n    function buy(address _collectionAddress, uint256[] calldata _optionIds, address _beneficiary) external {\r\n        CollectionData storage collection = collectionsData[_collectionAddress];\r\n\r\n        uint256 amount = _optionIds.length;\r\n        uint256 finalPrice = 0;\r\n        address[] memory beneficiaries = new address[](amount);\r\n        bytes32[] memory items = new bytes32[](amount);\r\n\r\n        for (uint256 i = 0; i < amount; i++) {\r\n            uint256 optionId = _optionIds[i];\r\n            require(collection.availableQtyPerOptionId[optionId] > 0, \"Sold out item\");\r\n\r\n            // Add price\r\n            uint256 itemPrice = collection.pricePerOptionId[optionId];\r\n            finalPrice = finalPrice.add(itemPrice);\r\n\r\n            // Add beneneficiary\r\n            beneficiaries[i] = _beneficiary;\r\n\r\n            // Add item\r\n            string memory item = itemByOptionId(_collectionAddress, optionId);\r\n            bytes32 itemAsBytes32;\r\n            // solium-disable-next-line security/no-inline-assembly\r\n            assembly {\r\n                itemAsBytes32 := mload(add(item, 32))\r\n            }\r\n            items[i] = itemAsBytes32;\r\n            collection.availableQtyPerOptionId[optionId] = collection.availableQtyPerOptionId[optionId].sub(1);\r\n        }\r\n\r\n        // Transfer `price` from sender to collection beneficiary\r\n        require(\r\n            acceptedToken.transferFrom(msg.sender, collection.beneficiary, finalPrice),\r\n            \"CSV1#buy: TRANSFER_TOKENS_FAILED\"\r\n        );\r\n\r\n        // Mint NFT\r\n        IERC721Collection(_collectionAddress).issueTokens(beneficiaries, items);\r\n\r\n        emit Bought(_collectionAddress, _optionIds, _beneficiary, finalPrice);\r\n    }\r\n\r\n    /**\r\n    * @notice Returns whether the wearable can be minted.\r\n    * @param _collectionAddress - collectionn address\r\n    * @param _optionId - item option id\r\n    * @return whether a wearable can be minted\r\n    */\r\n    function canMint(address _collectionAddress, uint256 _optionId, uint256 _amount) public view returns (bool) {\r\n        CollectionData storage collection = collectionsData[_collectionAddress];\r\n\r\n        return collection.availableQtyPerOptionId[_optionId] >= _amount;\r\n    }\r\n\r\n    /**\r\n     * @notice Returns a wearable's available supply .\r\n     * Throws if the option ID does not exist. May return 0.\r\n     * @param _collectionAddress - collectionn address\r\n     * @param _optionId - item option id\r\n     * @return wearable's available supply\r\n     */\r\n    function balanceOf(address _collectionAddress, uint256 _optionId) public view returns (uint256) {\r\n        CollectionData storage collection = collectionsData[_collectionAddress];\r\n\r\n        return collection.availableQtyPerOptionId[_optionId];\r\n    }\r\n\r\n    /**\r\n    * @notice Get item id by option id\r\n    * @param _collectionAddress - collectionn address\r\n    * @param _optionId - collection option id\r\n    * @return string of the item id\r\n    */\r\n    function itemByOptionId(address _collectionAddress, uint256 _optionId) public view returns (string memory) {\r\n       /* solium-disable-next-line */\r\n        (bool success, bytes memory data) = address(_collectionAddress).staticcall(\r\n            abi.encodeWithSelector(\r\n                IERC721Collection(_collectionAddress).wearables.selector,\r\n                _optionId\r\n            )\r\n        );\r\n\r\n        require(success, \"Invalid wearable\");\r\n\r\n        return abi.decode(data, (string));\r\n    }\r\n\r\n    /**\r\n    * @notice Get collection data by option id\r\n    * @param _collectionAddress - collectionn address\r\n    * @param _optionId - collection option id\r\n    * @return beneficiary - collection beneficiary\r\n    * @return availableQty - collection option id available qty\r\n    * @return price - collection option id price\r\n    */\r\n    function collectionData(address _collectionAddress, uint256 _optionId) external view returns (\r\n        address beneficiary, uint256 availableQty, uint256 price\r\n    ) {\r\n        beneficiary = collectionsData[_collectionAddress].beneficiary;\r\n        availableQty = collectionsData[_collectionAddress].availableQtyPerOptionId[_optionId];\r\n        price = collectionsData[_collectionAddress].pricePerOptionId[_optionId];\r\n    }\r\n\r\n    /**\r\n    * @notice Sets the beneficiary address where the sales amount\r\n    *  will be transferred on each sale for a collection\r\n    * @param _collectionAddress - collectionn address\r\n    * @param _collectionBeneficiary - collection beneficiary\r\n    * @param _collectionOptionIds - collection option ids\r\n    * @param _collectionAvailableQtys - collection available qtys for sale\r\n    * @param _collectionPrices - collectionn prices\r\n    */\r\n    function setCollectionData(\r\n        address _collectionAddress,\r\n        address _collectionBeneficiary,\r\n        uint256[] calldata _collectionOptionIds,\r\n        uint256[] calldata _collectionAvailableQtys,\r\n        uint256[] calldata _collectionPrices\r\n    ) external onlyOwner {\r\n        _setCollectionData(_collectionAddress, _collectionBeneficiary, _collectionOptionIds, _collectionAvailableQtys, _collectionPrices);\r\n    }\r\n\r\n    /**\r\n    * @notice Sets the beneficiary address where the sales amount\r\n    *  will be transferred on each sale for a collection\r\n    * @param _collectionAddress - collectionn address\r\n    * @param _collectionBeneficiary - collectionn beneficiary\r\n    * @param _collectionOptionIds - collection option ids\r\n    * @param _collectionAvailableQtys - collection available qtys for sale\r\n    * @param _collectionPrices - collectionn prices\r\n    */\r\n    function _setCollectionData(\r\n        address _collectionAddress,\r\n        address _collectionBeneficiary,\r\n        uint256[] memory _collectionOptionIds,\r\n        uint256[] memory _collectionAvailableQtys,\r\n        uint256[] memory _collectionPrices\r\n    ) internal {\r\n        CollectionData storage collection = collectionsData[_collectionAddress];\r\n        collection.beneficiary = _collectionBeneficiary;\r\n\r\n        for (uint256 i = 0; i < _collectionOptionIds.length; i++) {\r\n            collection.availableQtyPerOptionId[_collectionOptionIds[i]] = _collectionAvailableQtys[i];\r\n            collection.pricePerOptionId[_collectionOptionIds[i]] = _collectionPrices[i];\r\n        }\r\n\r\n        emit SetCollectionData(_collectionAddress, _collectionBeneficiary, _collectionOptionIds, _collectionAvailableQtys, _collectionPrices);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_acceptedToken\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_collectionAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_collectionBeneficiaries\",\"type\":\"address[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"_collectionOptionIds\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"_collectionAvailableQtys\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"_collectionPrices\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_optionIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"Bought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_collectionBeneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_optionIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_availableQtys\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_prices\",\"type\":\"uint256[]\"}],\"name\":\"SetCollectionData\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_optionIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"canMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"}],\"name\":\"collectionData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"availableQty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"}],\"name\":\"itemByOptionId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collectionBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_collectionOptionIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_collectionAvailableQtys\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_collectionPrices\",\"type\":\"uint256[]\"}],\"name\":\"setCollectionData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"CollectionStoreV1","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000f5d2fb29fb7d3cfee444a200298f468908cc94200000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000003c00000000000000000000000000000000000000000000000000000000000000ee00000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000000b00000000000000000000000030d3387ff3de2a21bef7032f82d00ff7739e403c000000000000000000000000b5d14052d1e2bce2a2d7459d0379256e632b855d00000000000000000000000054266bcf2ffa841af934f003d144957d5934f3ab00000000000000000000000060d8271c501501c4b8cd9ed5343ac59d1b79d99300000000000000000000000090958d4531258ca11d18396d4174a007edbc2b42000000000000000000000000480a0f4e360e8964e68858dd231c2922f1df45ef0000000000000000000000005cf39e64392c615fd8086838883958752a11b486000000000000000000000000c3ca6c364b854fd0a653a43f8344f8c22ddfdd26000000000000000000000000b96697fa4a3361ba35b774a42c58daccaad1b8e1000000000000000000000000102daabd1e9d294d4436ec4c521dce7b1f15499e00000000000000000000000024d538a6265b006d4b53c45ba91af5ef60dca6cb000000000000000000000000000000000000000000000000000000000000000b0000000000000000000000009caf2f699d62ef9602f5fc95d7f646d3c8659875000000000000000000000000f8d8e8dca72d41aba3e24518194e9eaf03fdda860000000000000000000000007bae63c4dbd39ec66669a1ef6e1cf6f747b71bdd000000000000000000000000902f9a605c0255fff5ec95a853ce9883dad10b3100000000000000000000000047e33894ed60a691a5c795325dae461363863c8c000000000000000000000000d1388149d69a2cae149e741225d358fda6d853ec000000000000000000000000e8c3ea760e32477ea5db4eb0ebd85a221da6ae5f000000000000000000000000f22b4b9175f5b1a2730e84f5c2360a029a333fde000000000000000000000000338ad1918362025f34b3701dac1e9648e8e8268f000000000000000000000000f49056577a9266cd6cfd1b8f6ac151d9bb3671d700000000000000000000000002c400e731ebe4d4c80332a6c1dc0cba4620fa40000000000000000000000000000000000000000000000000000000000000000b000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000004e000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000006a00000000000000000000000000000000000000000000000000000000000000780000000000000000000000000000000000000000000000000000000000000086000000000000000000000000000000000000000000000000000000000000009400000000000000000000000000000000000000000000000000000000000000ab000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000004e000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000006a00000000000000000000000000000000000000000000000000000000000000780000000000000000000000000000000000000000000000000000000000000086000000000000000000000000000000000000000000000000000000000000009400000000000000000000000000000000000000000000000000000000000000aa000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000ab000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000004e000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000006a00000000000000000000000000000000000000000000000000000000000000780000000000000000000000000000000000000000000000000000000000000086000000000000000000000000000000000000000000000000000000000000009400000000000000000000000000000000000000000000000000000000000000a2000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000410d586a20a4c000000000000000000000000000000000000000000000000000a2a15d09519be000000000000000000000000000000000000000000000000000a2a15d09519be000000000000000000000000000000000000000000000000000a2a15d09519be000000000000000000000000000000000000000000000000000a2a15d09519be0000000000000000000000000000000000000000000000000006c6b935b8bbd400000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000005c283d410394100000000000000000000000000000000000000000000000000056bc75e2d631000000000000000000000000000000000000000000000000000056bc75e2d63100000000000000000000000000000000000000000000000000006194049f30f7200000000000000000000000000000000000000000000000000056bc75e2d631000000000000000000000000000000000000000000000000000056bc75e2d6310000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000028a857425466f80000000000000000000000000000000000000000000000000028a857425466f8000000000000000000000000000000000000000000000000003635c9adc5dea0000000000000000000000000000000000000000000000000005150ae84a8cdf0000000000000000000000000000000000000000000000000005150ae84a8cdf0000000000000000000000000000000000000000000000000005150ae84a8cdf00000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000006c6b935b8bbd40000000000000000000000000000000000000000000000000006c6b935b8bbd40000000000000000000000000000000000000000000000000006c6b935b8bbd40000000000000000000000000000000000000000000000000005150ae84a8cdf0000000000000000000000000000000000000000000000000005150ae84a8cdf0000000000000000000000000000000000000000000000000006c6b935b8bbd400000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000003635c9adc5dea0000000000000000000000000000000000000000000000000003635c9adc5dea0000000000000000000000000000000000000000000000000003635c9adc5dea0000000000000000000000000000000000000000000000000003635c9adc5dea0000000000000000000000000000000000000000000000000003635c9adc5dea0000000000000000000000000000000000000000000000000003635c9adc5dea00000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000003635c9adc5dea00000000000000000000000000000000000000000000000000066ffcbfd5e5a30000000000000000000000000000000000000000000000000009d3595ab2438d0000000000000000000000000000000000000000000000000007caee97613e670000000000000000000000000000000000000000000000000007caee97613e670000000000000000000000000000000000000000000000000009d3595ab2438d0000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000410d586a20a4c000000000000000000000000000000000000000000000000000410d586a20a4c0000000000000000000000000000000000000000000000000006194049f30f720000000000000000000000000000000000000000000000000005150ae84a8cdf00000000000000000000000000000000000000000000000000056bc75e2d631000000000000000000000000000000000000000000000000000077432217e6836000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000043c33c193756480000000000000000000000000000000000000000000000000043c33c193756480000000000000000000000000000000000000000000000000043c33c19375648000000000000000000000000000000000000000000000000006c6b935b8bbd400000000000000000000000000000000000000000000000000043c33c19375648000000000000000000000000000000000000000000000000006c6b935b8bbd4000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000030ca024f987b90000000000000000000000000000000000000000000000000003635c9adc5dea000000000000000000000000000000000000000000000000000410d586a20a4c000000000000000000000000000000000000000000000000000410d586a20a4c00000000000000000000000000000000000000000000000000030ca024f987b90000000000000000000000000000000000000000000000000005150ae84a8cdf000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000056bc75e2d6310000000000000000000000000000000000000000000000000000410d586a20a4c0000000000000000000000000000000000000000000000000003ba1910bf341b000000000000000000000000000000000000000000000000000410d586a20a4c000000000000000000000000000000000000000000000000000410d586a20a4c000000000000000000000000000000000000000000000000000410d586a20a4c0000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000007695a92c20d6fe00000000000000000000000000000000000000000000000000878678326eac9000000000000000000000000000000000000000000000000000878678326eac90000000000000000000000000000000000000000000000000007695a92c20d6fe00000000000000000000000000000000000000000000000000878678326eac900000000000000000000000000000000000000000000000000098774738bc822200000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ee2b8cf6c46eef9d86900e5d9c45fb506ddbe67c546feaef798a07172a58d77c"}]}