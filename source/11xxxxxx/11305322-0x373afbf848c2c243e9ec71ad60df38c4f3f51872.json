{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.16;\r\n\r\n// this contract serves as feeToSetter, allowing owner to manage fees in the context of a specific feeTo implementation\r\ncontract EliteFeeToSetter {\r\n    // immutables\r\n    address public factory;\r\n    uint public vestingEnd;\r\n    address public feeTo;\r\n\r\n    address public owner;\r\n\r\n    constructor(address factory_, uint vestingEnd_, address owner_, address feeTo_) public {\r\n        require(vestingEnd_ > block.timestamp, 'EliteFeeToSetter::constructor: vesting must end after deployment');\r\n        factory = factory_;\r\n        vestingEnd = vestingEnd_;\r\n        owner = owner_;\r\n        feeTo = feeTo_;\r\n    }\r\n\r\n    // allows owner to change itself at any time\r\n    function setOwner(address owner_) public {\r\n        require(msg.sender == owner, 'EliteFeeToSetter::setOwner: not allowed');\r\n        owner = owner_;\r\n    }\r\n\r\n    // allows owner to change feeToSetter after vesting\r\n    function setFeeToSetter(address feeToSetter_) public {\r\n        require(block.timestamp >= vestingEnd, 'EliteFeeToSetter::setFeeToSetter: not time yet');\r\n        require(msg.sender == owner, 'EliteFeeToSetter::setFeeToSetter: not allowed');\r\n        IEliteswapV2Factory(factory).setFeeToSetter(feeToSetter_);\r\n    }\r\n\r\n    // allows owner to turn fees on/off after vesting\r\n    function toggleFees(bool on) public {\r\n        require(block.timestamp >= vestingEnd, 'EliteFeeToSetter::toggleFees: not time yet');\r\n        require(msg.sender == owner, 'EliteFeeToSetter::toggleFees: not allowed');\r\n        IEliteswapV2Factory(factory).setFeeTo(on ? feeTo : address(0));\r\n    }\r\n}\r\n\r\ninterface IEliteswapV2Factory {\r\n    function setFeeToSetter(address) external;\r\n    function setFeeTo(address) external;\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vestingEnd_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeTo_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToSetter_\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"on\",\"type\":\"bool\"}],\"name\":\"toggleFees\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vestingEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"EliteFeeToSetter","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"999999","ConstructorArguments":"00000000000000000000000081c27d1a0a6413c6a6d6d8e54b0a9c869d16771c00000000000000000000000000000000000000000000000000000000608c9a000000000000000000000000003ce6feac2dc11a8799dc2a4b9434c5943e1c69ee000000000000000000000000c41e2593047ba7eacec9eb6041b2ee39c7412854","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://42f11a6b3f48c09e2682a4f628143bc5088ac39bb0fb751cd608e53798059c14"}]}