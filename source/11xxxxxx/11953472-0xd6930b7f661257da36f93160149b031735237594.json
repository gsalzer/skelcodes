{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.2.11\r\n\"\"\"\r\n@title Pool Migrator\r\n@author Curve.fi\r\n@notice Zap for moving liquidity between Curve factory pools in a single transaction\r\n@license MIT\r\n\"\"\"\r\n\r\ninterface ERC20:\r\n    def approve(_spender: address, _amount: uint256): nonpayable\r\n\r\ninterface Swap:\r\n    def transferFrom(_owner: address, _spender: address, _amount: uint256) -> bool: nonpayable\r\n    def add_liquidity(_amounts: uint256[2], _min_mint_amount: uint256, _receiver: address) -> uint256: nonpayable\r\n    def remove_liquidity(_burn_amount: uint256, _min_amounts: uint256[2]) -> uint256[2]: nonpayable\r\n    def coins(i: uint256) -> address: view\r\n\r\n\r\n# pool -> coins are approved?\r\nis_approved: HashMap[address, bool]\r\n\r\n\r\n@external\r\ndef migrate_to_new_pool(_old_pool: address, _new_pool: address, _amount: uint256) -> uint256:\r\n    \"\"\"\r\n    @notice Migrate liquidity between two pools\r\n    @dev Each pool must be deployed by the curve factory and contain identical\r\n         assets. The migrator must have approval to transfer `_old_pool` tokens\r\n         on behalf of the caller.\r\n    @param _old_pool Address of the pool to migrate from\r\n    @param _new_pool Address of the pool to migrate into\r\n    @param _amount Number of `_old_pool` LP tokens to migrate\r\n    @return uint256 Number of `_new_pool` LP tokens received\r\n    \"\"\"\r\n    Swap(_old_pool).transferFrom(msg.sender, self, _amount)\r\n    amounts: uint256[2] = Swap(_old_pool).remove_liquidity(_amount, [0, 0])\r\n\r\n    if not self.is_approved[_new_pool]:\r\n        for i in range(2):\r\n            coin: address = Swap(_new_pool).coins(i)\r\n            ERC20(coin).approve(_new_pool, MAX_UINT256)\r\n        self.is_approved[_new_pool] = True\r\n\r\n    return Swap(_new_pool).add_liquidity(amounts, 0, msg.sender)","ABI":"[{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"migrate_to_new_pool\",\"inputs\":[{\"name\":\"_old_pool\",\"type\":\"address\"},{\"name\":\"_new_pool\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"gas\":43866}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.11","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}