{"status":"1","message":"OK","result":[{"SourceCode":"{\"IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.5.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller\\u0027s account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\\u0027s tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender\\u0027s allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller\\u0027s\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\"},\"IOneSplit.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nimport \\\"IERC20.sol\\\";\\n\\n//\\n//  [ msg.sender ]\\n//       | |\\n//       | |\\n//       \\\\_/\\n// +---------------+ ________________________________\\n// | OneSplitAudit | _______________________________  \\\\\\n// +---------------+                                 \\\\ \\\\\\n//       | |                      ______________      | | (staticcall)\\n//       | |                    /  ____________  \\\\    | |\\n//       | | (call)            / /              \\\\ \\\\   | |\\n//       | |                  / /               | |   | |\\n//       \\\\_/                  | |               \\\\_/   \\\\_/\\n// +--------------+           | |           +----------------------+\\n// | OneSplitWrap |           | |           |   OneSplitViewWrap   |\\n// +--------------+           | |           +----------------------+\\n//       | |                  | |                     | |\\n//       | | (delegatecall)   | | (staticcall)        | | (staticcall)\\n//       \\\\_/                  | |                     \\\\_/\\n// +--------------+           | |             +------------------+\\n// |   OneSplit   |           | |             |   OneSplitView   |\\n// +--------------+           | |             +------------------+\\n//       | |                  / /\\n//        \\\\ \\\\________________/ /\\n//         \\\\__________________/\\n//\\n\\n\\ncontract IOneSplitConsts {\\n    // flags = FLAG_DISABLE_UNISWAP + FLAG_DISABLE_BANCOR + ...\\n    uint256 internal constant FLAG_DISABLE_UNISWAP = 0x01;\\n    uint256 internal constant DEPRECATED_FLAG_DISABLE_KYBER = 0x02; // Deprecated\\n    uint256 internal constant FLAG_DISABLE_BANCOR = 0x04;\\n    uint256 internal constant FLAG_DISABLE_OASIS = 0x08;\\n    uint256 internal constant FLAG_DISABLE_COMPOUND = 0x10;\\n    uint256 internal constant FLAG_DISABLE_FULCRUM = 0x20;\\n    uint256 internal constant FLAG_DISABLE_CHAI = 0x40;\\n    uint256 internal constant FLAG_DISABLE_AAVE = 0x80;\\n    uint256 internal constant FLAG_DISABLE_SMART_TOKEN = 0x100;\\n    uint256 internal constant DEPRECATED_FLAG_ENABLE_MULTI_PATH_ETH = 0x200; // Deprecated, Turned off by default\\n    uint256 internal constant FLAG_DISABLE_BDAI = 0x400;\\n    uint256 internal constant FLAG_DISABLE_IEARN = 0x800;\\n    uint256 internal constant FLAG_DISABLE_CURVE_COMPOUND = 0x1000;\\n    uint256 internal constant FLAG_DISABLE_CURVE_USDT = 0x2000;\\n    uint256 internal constant FLAG_DISABLE_CURVE_Y = 0x4000;\\n    uint256 internal constant FLAG_DISABLE_CURVE_BINANCE = 0x8000;\\n    uint256 internal constant DEPRECATED_FLAG_ENABLE_MULTI_PATH_DAI = 0x10000; // Deprecated, Turned off by default\\n    uint256 internal constant DEPRECATED_FLAG_ENABLE_MULTI_PATH_USDC = 0x20000; // Deprecated, Turned off by default\\n    uint256 internal constant FLAG_DISABLE_CURVE_SYNTHETIX = 0x40000;\\n    uint256 internal constant FLAG_DISABLE_WETH = 0x80000;\\n    uint256 internal constant FLAG_DISABLE_UNISWAP_COMPOUND = 0x100000; // Works only when one of assets is ETH or FLAG_ENABLE_MULTI_PATH_ETH\\n    uint256 internal constant FLAG_DISABLE_UNISWAP_CHAI = 0x200000; // Works only when ETH\\u003c\\u003eDAI or FLAG_ENABLE_MULTI_PATH_ETH\\n    uint256 internal constant FLAG_DISABLE_UNISWAP_AAVE = 0x400000; // Works only when one of assets is ETH or FLAG_ENABLE_MULTI_PATH_ETH\\n    uint256 internal constant FLAG_DISABLE_IDLE = 0x800000;\\n    uint256 internal constant FLAG_DISABLE_MOONISWAP = 0x1000000;\\n    uint256 internal constant FLAG_DISABLE_UNISWAP_V2 = 0x2000000;\\n    uint256 internal constant FLAG_DISABLE_UNISWAP_V2_ETH = 0x4000000;\\n    uint256 internal constant FLAG_DISABLE_UNISWAP_V2_DAI = 0x8000000;\\n    uint256 internal constant FLAG_DISABLE_UNISWAP_V2_USDC = 0x10000000;\\n    uint256 internal constant FLAG_DISABLE_ALL_SPLIT_SOURCES = 0x20000000;\\n    uint256 internal constant FLAG_DISABLE_ALL_WRAP_SOURCES = 0x40000000;\\n    uint256 internal constant FLAG_DISABLE_CURVE_PAX = 0x80000000;\\n    uint256 internal constant FLAG_DISABLE_CURVE_RENBTC = 0x100000000;\\n    uint256 internal constant FLAG_DISABLE_CURVE_TBTC = 0x200000000;\\n    uint256 internal constant DEPRECATED_FLAG_ENABLE_MULTI_PATH_USDT = 0x400000000; // Deprecated, Turned off by default\\n    uint256 internal constant DEPRECATED_FLAG_ENABLE_MULTI_PATH_WBTC = 0x800000000; // Deprecated, Turned off by default\\n    uint256 internal constant DEPRECATED_FLAG_ENABLE_MULTI_PATH_TBTC = 0x1000000000; // Deprecated, Turned off by default\\n    uint256 internal constant DEPRECATED_FLAG_ENABLE_MULTI_PATH_RENBTC = 0x2000000000; // Deprecated, Turned off by default\\n    uint256 internal constant FLAG_DISABLE_DFORCE_SWAP = 0x4000000000;\\n    uint256 internal constant FLAG_DISABLE_SHELL = 0x8000000000;\\n    uint256 internal constant FLAG_ENABLE_CHI_BURN = 0x10000000000;\\n    uint256 internal constant FLAG_DISABLE_MSTABLE_MUSD = 0x20000000000;\\n    uint256 internal constant FLAG_DISABLE_CURVE_SBTC = 0x40000000000;\\n    uint256 internal constant FLAG_DISABLE_DMM = 0x80000000000;\\n    uint256 internal constant FLAG_DISABLE_UNISWAP_ALL = 0x100000000000;\\n    uint256 internal constant FLAG_DISABLE_CURVE_ALL = 0x200000000000;\\n    uint256 internal constant FLAG_DISABLE_UNISWAP_V2_ALL = 0x400000000000;\\n    uint256 internal constant FLAG_DISABLE_SPLIT_RECALCULATION = 0x800000000000;\\n    uint256 internal constant FLAG_DISABLE_BALANCER_ALL = 0x1000000000000;\\n    uint256 internal constant FLAG_DISABLE_BALANCER_1 = 0x2000000000000;\\n    uint256 internal constant FLAG_DISABLE_BALANCER_2 = 0x4000000000000;\\n    uint256 internal constant FLAG_DISABLE_BALANCER_3 = 0x8000000000000;\\n    uint256 internal constant DEPRECATED_FLAG_ENABLE_KYBER_UNISWAP_RESERVE = 0x10000000000000; // Deprecated, Turned off by default\\n    uint256 internal constant DEPRECATED_FLAG_ENABLE_KYBER_OASIS_RESERVE = 0x20000000000000; // Deprecated, Turned off by default\\n    uint256 internal constant DEPRECATED_FLAG_ENABLE_KYBER_BANCOR_RESERVE = 0x40000000000000; // Deprecated, Turned off by default\\n    uint256 internal constant FLAG_ENABLE_REFERRAL_GAS_SPONSORSHIP = 0x80000000000000; // Turned off by default\\n    uint256 internal constant DEPRECATED_FLAG_ENABLE_MULTI_PATH_COMP = 0x100000000000000; // Deprecated, Turned off by default\\n    uint256 internal constant FLAG_DISABLE_KYBER_ALL = 0x200000000000000;\\n    uint256 internal constant FLAG_DISABLE_KYBER_1 = 0x400000000000000;\\n    uint256 internal constant FLAG_DISABLE_KYBER_2 = 0x800000000000000;\\n    uint256 internal constant FLAG_DISABLE_KYBER_3 = 0x1000000000000000;\\n    uint256 internal constant FLAG_DISABLE_KYBER_4 = 0x2000000000000000;\\n    uint256 internal constant FLAG_ENABLE_CHI_BURN_BY_ORIGIN = 0x4000000000000000;\\n    uint256 internal constant FLAG_DISABLE_MOONISWAP_ALL = 0x8000000000000000;\\n    uint256 internal constant FLAG_DISABLE_MOONISWAP_ETH = 0x10000000000000000;\\n    uint256 internal constant FLAG_DISABLE_MOONISWAP_DAI = 0x20000000000000000;\\n    uint256 internal constant FLAG_DISABLE_MOONISWAP_USDC = 0x40000000000000000;\\n    uint256 internal constant FLAG_DISABLE_MOONISWAP_POOL_TOKEN = 0x80000000000000000;\\n}\\n\\n\\ncontract IOneSplit is IOneSplitConsts {\\n    function getExpectedReturn(\\n        IERC20 fromToken,\\n        IERC20 destToken,\\n        //address fromToken,\\n        //address destToken,\\n        uint256 amount,\\n        uint256 parts,\\n        uint256 flags // See constants in IOneSplit.sol\\n    )\\n        public\\n        view\\n        returns(\\n            uint256 returnAmount,\\n            uint256[] memory distribution\\n        );\\n\\n    function getExpectedReturnWithGas(\\n        IERC20 fromToken,\\n        IERC20 destToken,\\n        uint256 amount,\\n        uint256 parts,\\n        uint256 flags, // See constants in IOneSplit.sol\\n        uint256 destTokenEthPriceTimesGasPrice\\n    )\\n        public\\n        view\\n        returns(\\n            uint256 returnAmount,\\n            uint256 estimateGasAmount,\\n            uint256[] memory distribution\\n        );\\n\\n    function swap(\\n        IERC20 fromToken,\\n        IERC20 destToken,\\n        uint256 amount,\\n        uint256 minReturn,\\n        uint256[] memory distribution,\\n        uint256 flags\\n    )\\n        public\\n        payable\\n        returns(uint256 returnAmount);\\n}\\n\\n\\ncontract IOneSplitMulti is IOneSplit {\\n    function getExpectedReturnWithGasMulti(\\n        IERC20[] memory tokens,\\n        uint256 amount,\\n        uint256[] memory parts,\\n        uint256[] memory flags,\\n        uint256[] memory destTokenEthPriceTimesGasPrices\\n    )\\n        public\\n        view\\n        returns(\\n            uint256[] memory returnAmounts,\\n            uint256 estimateGasAmount,\\n            uint256[] memory distribution\\n        );\\n\\n    function swapMulti(\\n        IERC20[] memory tokens,\\n        uint256 amount,\\n        uint256 minReturn,\\n        uint256[] memory distribution,\\n        uint256[] memory flags\\n    )\\n        public\\n        payable\\n        returns(uint256 returnAmount);\\n}\\n\"},\"testSplit.sol\":{\"content\":\"pragma solidity 0.5.0;\\n\\nimport \\\"IERC20.sol\\\";\\nimport \\\"IOneSplit.sol\\\";\\n\\ncontract OneSplitTest {\\n\\naddress public oneSplitEth = 0xC586BeF4a0992C495Cf22e1aeEE4E446CECDee0E;\\naddress public oneSplitProto = 0x50FDA034C0Ce7a8f7EFDAebDA7Aa7cA21CC1267e;\\n\\naddress public fromToken = 0xC586BeF4a0992C495Cf22e1aeEE4E446CECDee0E;\\naddress public toToken = 0xC586BeF4a0992C495Cf22e1aeEE4E446CECDee0E;\\n\\nIERC20 public fromIERC20 = IERC20(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\\nIERC20 public toIERC20 = IERC20(0xdAC17F958D2ee523a2206206994597C13D831ec7);\\n\\n\\n    \\n    function testSplit() public view returns (uint) {\\n        \\n        (uint256 returnAmount0,) = IOneSplit(oneSplitEth).getExpectedReturn(fromIERC20, toIERC20, 1e18, 100, 0 );\\n        \\n        return returnAmount0;\\n        \\n    }\\n    \\n    function testProto() public view returns (uint) {\\n        \\n        (uint256 returnAmount0,) = IOneSplit(oneSplitProto).getExpectedReturn(fromIERC20, toIERC20, 1e18, 100, 0 );\\n        \\n        return returnAmount0;\\n        \\n    }\\n    \\n}\"}}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"fromToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"toToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"testProto\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"toIERC20\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oneSplitEth\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fromIERC20\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"testSplit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oneSplitProto\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"OneSplitTest","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://62beaca62f5241c07211215031bbc5496f942c144b2a644bd178d7f6e765413d"}]}