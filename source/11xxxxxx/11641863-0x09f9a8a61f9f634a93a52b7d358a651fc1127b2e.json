{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2020-11-05\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.7.4;\r\n\r\n\r\ncontract Ownable {\r\n\r\n    address private owner;\r\n    \r\n    event OwnerSet(address indexed oldOwner, address indexed newOwner);\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Caller is not owner\");\r\n        _;\r\n    }\r\n    \r\n    constructor() {\r\n        owner = msg.sender; // 'msg.sender' is sender of current call, contract deployer for a constructor\r\n        emit OwnerSet(address(0), owner);\r\n    }\r\n\r\n    function changeOwner(address newOwner) public onlyOwner {\r\n        emit OwnerSet(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    function getOwner() external view returns (address) {\r\n        return owner;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\ninterface Token {\r\n    function tokensSoldPreSale(address buyer, uint256 amount) external  returns (bool success);\r\n    function balanceOf(address _owner) external view returns (uint256 balance);\r\n    function burn(uint256 _value) external returns (bool success);\r\n}\r\n\r\ncontract UtrinPreSale is Ownable{\r\n    \r\n    using SafeMath for uint256;\r\n    \r\n\r\n    uint256 public priceFactor;\r\n    uint256 public totalSold;\r\n    address public tokenAddress;\r\n    uint256 public startTime =  1610708400;                                     //GMT Friday 15 January 2021 11:00:00\r\n    uint256 public endTime =    1611053940;                                     //GMT Tuesday 19 January 2021 10:59:00\r\n    \r\n\r\n    uint256 public minimumBuyAmount = 100 ** 17;                                //Set to 1 ETH.\r\n    uint256 public maximumBuyAmount = 3000 ** 17;                               //Set to 30 ETH.\r\n    address payable public walletAddress;\r\n    event TokensSold(address indexed to, uint256 amount);\r\n    \r\n    constructor() {\r\n        priceFactor = uint256(3350);                                            //1 ETH = 3350 Utrin.   \r\n        walletAddress = 0x22bAF3bF140928201962dD1a01A63EE158BcC616;             \r\n        tokenAddress = address(0x0);\r\n    }\r\n    \r\n    receive() external payable {\r\n        buy();\r\n    }\r\n    \r\n    function setToken(address _tokenAddress) onlyOwner public {\r\n        tokenAddress = _tokenAddress;\r\n    }\r\n    \r\n    function buy() public payable {\r\n        require((block.timestamp > startTime ) && (block.timestamp < endTime)  , \"UTRIN Token presale is not active\");\r\n        \r\n        uint256 weiValue = msg.value;\r\n        require(weiValue >= minimumBuyAmount, \"Minimum amount to participate is 1 ETH.\");\r\n        require(weiValue <= maximumBuyAmount, \"Maximum amount to participate is 30 ETH.\");\r\n        uint256 amount = weiValue.mul(priceFactor);\r\n        Token token = Token(tokenAddress);\r\n        require(walletAddress.send(weiValue));\r\n        require(token.tokensSoldPreSale(msg.sender, amount));\r\n        totalSold += amount;\r\n        emit TokensSold(msg.sender, amount);\r\n    }\r\n    \r\n\r\n    function burnUnsold() onlyOwner public {\r\n        require((block.timestamp > endTime), \"UTRIN Token presale is still active\");\r\n        Token token = Token(tokenAddress);\r\n        uint256 amount = token.balanceOf(address(this));\r\n        token.burn(amount);\r\n    }\r\n    \r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensSold\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"burnUnsold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumBuyAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumBuyAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"UtrinPreSale","CompilerVersion":"v0.7.4+commit.3f05b770","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f93395fc127ace375a773a10d17589feb8c0f847513318fa8caa8aca2e56fbaf"}]}