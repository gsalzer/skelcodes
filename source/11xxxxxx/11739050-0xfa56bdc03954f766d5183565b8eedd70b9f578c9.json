{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.11;\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n\r\n    address internal _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor(address initialOwner) internal {\r\n        require(initialOwner != address(0));\r\n        _owner = initialOwner;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == _owner, \"Caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0), \"New owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n\r\n}\r\n\r\ninterface IUSDT {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external;\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external;\r\n    function transferFrom(address sender, address recipient, uint256 amount) external;\r\n    function decimals() external view returns(uint8);\r\n}\r\n\r\ncontract OGON is Ownable {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    constructor(address _USDT, address payable _Boss) public Ownable(msg.sender){\r\n        USDT = IUSDT(_USDT);\r\n        state = State.startGame;\r\n        Boss = _Boss;\r\n    }\r\n\r\n    struct User {\r\n        uint256 rate;\r\n    }\r\n\r\n    modifier onlyBoss() {\r\n        require(msg.sender == Boss, \"You do not have access\");\r\n        _;\r\n    }\r\n\r\n    mapping (address => User) users;\r\n\r\n    enum State { startGame, stopGame }\r\n\r\n    IUSDT public USDT;\r\n\r\n    address public last_investor;\r\n    address public Boss;\r\n\r\n    string public name = \"OGON Cash\";\r\n    string public symbol = \"OGON\";\r\n\r\n    uint256 public prize_fund;\r\n    uint256 public last_invest_time;\r\n    uint256 public betAmount = 5 * 1e6;\r\n    uint256 public referralBalance;\r\n    uint256 public timestop = 240 minutes;\r\n    uint256 public ref_bonus = 20;\r\n    uint256 public refstake = 0;\r\n\r\n    bool launch;\r\n    bool with;\r\n\r\n    State public state;\r\n\r\n    event Invested(address indexed user, uint256 amount);\r\n    event PrizeWithdrawn(address indexed user, uint256 amount);\r\n    event BossWasChanged(address Boss, address user);\r\n    event SetParameters(uint betAmount, uint timestop, uint ref_bonus, uint refstake);\r\n    event USDTWithdrawn(address Boss, uint amount);\r\n    event AddFund(address sender, uint amount);\r\n\r\n    function fund(uint256 _value) public {\r\n\r\n        require(USDT.allowance(msg.sender, address(this)) >= betAmount, \"Approve this token amount first\");\r\n\r\n        USDT.transferFrom(msg.sender, address(this), _value);\r\n\r\n        prize_fund += _value;\r\n\r\n        emit AddFund(msg.sender, _value);\r\n    }\r\n\r\n    function bet(address _ref) public {\r\n\r\n        if(now > last_invest_time.add(timestop) && launch && !with){\r\n            state = State.stopGame;\r\n        }\r\n\r\n        require(state == State.startGame, \"State must be startGame\");\r\n        require(USDT.allowance(msg.sender, address(this)) >= betAmount, \"Approve this token amount first\");\r\n        require(_ref != msg.sender, \"You cannot list yourself as a referrer\");\r\n\r\n        if(_ref != address(0)){\r\n            if(users[_ref].rate >= refstake){\r\n                uint256 refAmount = betAmount.mul(ref_bonus).div(100);\r\n                uint256 invAmount = betAmount.sub(refAmount);\r\n\r\n                USDT.transferFrom(msg.sender, address(this), invAmount);\r\n                USDT.transferFrom(msg.sender, _ref, refAmount);\r\n\r\n                referralBalance += invAmount;\r\n                last_investor = msg.sender;\r\n                last_invest_time = now;\r\n\r\n            } else {\r\n\r\n                USDT.transferFrom(msg.sender, address(this), betAmount);\r\n\r\n                referralBalance += betAmount;\r\n                last_investor = msg.sender;\r\n                last_invest_time = now;\r\n            }\r\n\r\n        } else if(_ref == address(0)) {\r\n\r\n                uint256 refAmount = betAmount.mul(ref_bonus).div(100);\r\n                uint256 invAmount = betAmount.sub(refAmount);\r\n\r\n                USDT.transferFrom(msg.sender, address(this), invAmount);\r\n                USDT.transferFrom(msg.sender, Boss, refAmount);\r\n\r\n                referralBalance += invAmount;\r\n                last_investor = msg.sender;\r\n                last_invest_time = now;\r\n        }\r\n\r\n        users[msg.sender].rate += 1;\r\n        launch = true;\r\n        with = false;\r\n        emit Invested(msg.sender, betAmount);\r\n\r\n    }\r\n\r\n    function getPrize() public {\r\n\r\n        require(msg.sender == last_investor, \"You must be the last investor\");\r\n        require(now > last_invest_time + timestop, \"Timestop must pass\");\r\n\r\n        uint amount = prize_fund;\r\n\r\n        USDT.transfer(msg.sender, amount);\r\n        emit PrizeWithdrawn(msg.sender, prize_fund);\r\n\r\n        prize_fund = 0;\r\n        last_investor = address(0);\r\n        last_invest_time = now;\r\n\r\n        if(state == State.stopGame){\r\n           state = State.startGame;\r\n        }\r\n\r\n        with = true;\r\n    }\r\n\r\n    function Switch() public onlyBoss {\r\n\r\n        if(state == State.startGame){\r\n            state = State.stopGame;\r\n        } else {\r\n            state = State.startGame;\r\n        }\r\n    }\r\n\r\n    function deputeBoss(address _Boss) public {\r\n\r\n        require(msg.sender == Boss || msg.sender == _owner, \"You must be Boss\");\r\n        emit BossWasChanged(Boss, _Boss);\r\n\r\n        Boss = _Boss;\r\n    }\r\n\r\n    function withdrawUSDT(uint256 _value) public onlyBoss {\r\n\r\n        require(_value <= referralBalance);\r\n\r\n        USDT.transfer(msg.sender, _value);\r\n\r\n        referralBalance -= _value;\r\n        emit USDTWithdrawn(Boss, _value);\r\n    }\r\n\r\n    function reFund(uint256 _value) public onlyBoss {\r\n\r\n        require(_value <= referralBalance, \"The value must be less than referralBalance\");\r\n\r\n        referralBalance -= _value;\r\n        prize_fund += _value;\r\n    }\r\n\r\n    function setName(string memory _name) public onlyBoss returns(string memory){\r\n\r\n        name = _name;\r\n\r\n        return name;\r\n    }\r\n\r\n    function setSymbol(string memory _symbol) public onlyBoss returns(string memory){\r\n\r\n        symbol = _symbol;\r\n\r\n        return symbol;\r\n    }\r\n\r\n    function setParameters(uint256 _betAmount, uint256 _timestop, uint256 _ref_bonus, uint256 _refstake) public {\r\n\r\n        require(msg.sender == _owner || msg.sender == Boss, \"You must be Boss\");\r\n        require(_ref_bonus <= 100, \"Referrer percentage must be less than 100\");\r\n\r\n        betAmount = _betAmount * 1e6;\r\n        timestop = _timestop * 1 minutes;\r\n        ref_bonus = _ref_bonus;\r\n        refstake = _refstake;\r\n        emit SetParameters(_betAmount, _timestop, _ref_bonus, _refstake);\r\n    }\r\n\r\n    function lastInvestor() public view returns(address) {\r\n\r\n        return last_investor;\r\n    }\r\n\r\n    function prizeFund() public view returns(uint256) {\r\n\r\n        return prize_fund;\r\n    }\r\n\r\n    function getLastInvestTime() public view returns(uint256) {\r\n\r\n        return last_invest_time;\r\n    }\r\n\r\n    function getBetAmount() public view returns(uint256) {\r\n\r\n        return betAmount;\r\n    }\r\n\r\n    function getRefstake() public view returns(uint256) {\r\n\r\n        return refstake;\r\n    }\r\n\r\n    function getTimestop() public view returns(uint256) {\r\n\r\n        return timestop;\r\n    }\r\n\r\n    function getRefbonus() public view returns(uint256) {\r\n\r\n        return ref_bonus;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ref\",\"type\":\"address\"}],\"name\":\"bet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastInvestTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"last_investor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prize_fund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Boss\",\"type\":\"address\"}],\"name\":\"deputeBoss\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"referralBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"refstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRefstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timestop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"reFund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTimestop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastInvestor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum OGON.State\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ref_bonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getPrize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"contract IUSDT\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"betAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Switch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Boss\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"last_invest_time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prizeFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestop\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ref_bonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refstake\",\"type\":\"uint256\"}],\"name\":\"setParameters\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRefbonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBetAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDT\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_Boss\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Invested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrizeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Boss\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"BossWasChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestop\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ref_bonus\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refstake\",\"type\":\"uint256\"}],\"name\":\"SetParameters\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"Boss\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"USDTWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AddFund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"OGON","CompilerVersion":"v0.5.11+commit.22be8592","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000201c493dbc2b116dff8bf851bc15ba8c55cd1e02","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://b67eee95a8e4c6b588ada0720daecccbd75958c1737d4f6dab4c64f95814fa78"}]}