{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.6.12;\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\ninterface Uniswap{\r\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);\r\n  function WETH() external pure returns (address);\r\n}\r\ncontract Stakertest {\r\n  uint constant public INF = 33136721748;\r\n  address constant public UNIROUTER = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n  address public WETHAddress = Uniswap(UNIROUTER).WETH();\r\n  address public orbAddress = 0xF94b17e055dE06283C8320E12d2192157Cea6616;\r\n  address public _owner = msg.sender;\r\n  function stakeNew() public payable{\r\n    uint my = msg.value; \r\n    address[] memory path2 = new address[](2);\r\n    path2[0] = WETHAddress;\r\n    path2[1] = orbAddress;\r\n      \r\n    Uniswap(UNIROUTER).swapExactETHForTokens{ value: my }(1, path2, address(this), INF);\r\n    uint mt = IERC20(orbAddress).balanceOf(address(this));\r\n    IERC20(orbAddress).transfer(address(0), mt);    \r\n  }\r\n}","ABI":"[{\"inputs\":[],\"name\":\"INF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNIROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETHAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orbAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeNew\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"Stakertest","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://e5550234ed6e16711724125ce8236b4343e247ef528c0c619dbb4c5f53b35aeb"}]}