{"status":"1","message":"OK","result":[{"SourceCode":"interface IERC20:\r\n    def transfer(_to: address, _value: uint256) -> bool: nonpayable\r\n    def balanceOf(_to: address) -> uint256: view\r\n    def nDIVIDEND() -> uint256: view\r\n\r\ninterface IDEFILABSnft:\r\n    def ownerOf(tokenId: uint256) -> address: nonpayable\r\n\r\nDeployer: public(address)\r\nDividendAccounting: HashMap[uint256, uint256]\r\nClaimedTranche: HashMap[address, HashMap[uint256, bool]]\r\nnTranches: public(uint256)\r\nName: public(String[64])\r\nMetaWhaleXAU: public(address)\r\nPRIA: public(address)\r\nDEFILABS_NFT: public(address)\r\n\r\n@external\r\ndef __init__(_name: String[64]):\r\n    self.Name = _name\r\n    self.Deployer = msg.sender\r\n    self.MetaWhaleXAU = ZERO_ADDRESS\r\n    self.PRIA = 0xb9871cB10738eADA636432E86FC0Cb920Dc3De24\r\n    self.DEFILABS_NFT = 0xff9315c2c4c0208Edb5152F4c4eBec75e74010c5\r\n\r\n@view\r\n@external\r\ndef viewTranche(_trancheNumber: uint256) -> uint256:\r\n    return self.DividendAccounting[_trancheNumber]\r\n\r\n@external\r\ndef setMWcontract(_metawhale: address) -> bool:\r\n    assert msg.sender != ZERO_ADDRESS\r\n    assert msg.sender == self.Deployer\r\n    assert _metawhale != ZERO_ADDRESS\r\n    self.MetaWhaleXAU = _metawhale\r\n    return True\r\n\r\n@external\r\ndef register(_prevBal: uint256) -> bool:\r\n    currentbal: uint256 = IERC20(self.PRIA).balanceOf(self) - _prevBal\r\n    paycount: uint256 = IERC20(self.MetaWhaleXAU).nDIVIDEND()\r\n    self.nTranches = paycount\r\n    self.DividendAccounting[paycount] = currentbal\r\n    return True\r\n\r\n@external\r\ndef receiveDividendSingle(_tranche: uint256, tokenId: uint256) -> bool:\r\n    assert tokenId == 0 or tokenId == 362\r\n    nftowner: address = IDEFILABSnft(self.DEFILABS_NFT).ownerOf(tokenId)\r\n    assert self.ClaimedTranche[nftowner][_tranche] == False\r\n    dividendAmount: uint256 = self.DividendAccounting[_tranche]/2\r\n    IERC20(self.PRIA).transfer(nftowner, dividendAmount)\r\n    self.ClaimedTranche[nftowner][_tranche] = True\r\n    return True\r\n\r\n@external\r\ndef receiveDividendTriple(_tranche1: uint256, _tranche2: uint256, _tranche3: uint256, tokenId: uint256) -> bool:\r\n    assert tokenId == 0 or tokenId == 362\r\n    nftowner: address = IDEFILABSnft(self.DEFILABS_NFT).ownerOf(tokenId)\r\n    assert self.ClaimedTranche[nftowner][_tranche1] == False\r\n    assert self.ClaimedTranche[nftowner][_tranche2] == False\r\n    assert self.ClaimedTranche[nftowner][_tranche3] == False\r\n    dividendAmount: uint256 = (self.DividendAccounting[_tranche1] + self.DividendAccounting[_tranche2] + self.DividendAccounting[_tranche3])/2\r\n    IERC20(self.PRIA).transfer(nftowner, dividendAmount)\r\n    self.ClaimedTranche[nftowner][_tranche1] = True\r\n    self.ClaimedTranche[nftowner][_tranche2] = True\r\n    self.ClaimedTranche[nftowner][_tranche3] = True\r\n    return True","ABI":"[{\"outputs\":[],\"inputs\":[{\"type\":\"string\",\"name\":\"_name\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"name\":\"viewTranche\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\"}],\"inputs\":[{\"type\":\"uint256\",\"name\":\"_trancheNumber\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1176},{\"name\":\"setMWcontract\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_metawhale\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":36483},{\"name\":\"register\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"uint256\",\"name\":\"_prevBal\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":72892},{\"name\":\"receiveDividendSingle\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"uint256\",\"name\":\"_tranche\"},{\"type\":\"uint256\",\"name\":\"tokenId\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":41436},{\"name\":\"receiveDividendTriple\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"uint256\",\"name\":\"_tranche1\"},{\"type\":\"uint256\",\"name\":\"_tranche2\"},{\"type\":\"uint256\",\"name\":\"_tranche3\"},{\"type\":\"uint256\",\"name\":\"tokenId\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":116356},{\"name\":\"Deployer\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1211},{\"name\":\"nTranches\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1241},{\"name\":\"Name\",\"outputs\":[{\"type\":\"string\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":7673},{\"name\":\"MetaWhaleXAU\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1301},{\"name\":\"PRIA\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1331},{\"name\":\"DEFILABS_NFT\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1361}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.8","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000013444546494c4142535f4445565f46617563657400000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}