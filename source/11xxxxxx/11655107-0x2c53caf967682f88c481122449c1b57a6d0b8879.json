{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity  0.8.0;\r\n\r\ncontract RotatingHands \r\n{\r\n    function multisend(uint256[] memory amounts, address payable[] memory receivers) payable external\r\n    {\r\n            require(amounts.length == receivers.length, \"Amounts and receivers array do not have the same length.\"); //Amounts array and receivers array needs to have an equal amount of values in them\r\n            require(receivers.length <= 100, \"Receivers array is to big.\"); //maximum receievers can be 100\r\n            \r\n            //Sending the given amount to the receivers\r\n            for(uint256 i=0;i<amounts.length;i++)\r\n            {\r\n                receivers[i].transfer(amounts[i]);\r\n            }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address payable[]\",\"name\":\"receivers\",\"type\":\"address[]\"}],\"name\":\"multisend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"RotatingHands","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://c0945d38bec89277aabe576e2d990aefadf0685b28621f8b134c70c856fc7d88"}]}