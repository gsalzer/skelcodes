{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.7.1;\r\n\r\ninterface LendingInterface {\r\n    function depositEth() external payable;\r\n    function depositErc20(address tokenAddress, uint256 amount) external;\r\n    function borrow(address tokenAddress, uint256 amount) external;\r\n    function withdraw(address tokenAddress, uint256 amount) external;\r\n    function repayEth() external payable;\r\n    function repayErc20(address tokenAddress, uint256 amount) external;\r\n    function forceLiquidate(address token, address account) external;\r\n    function getStakingAddress() external view returns (address);\r\n    function getTaxTokenAddress() external view returns (address);\r\n    function getInterest() external view returns (uint256);\r\n    function getTvl(address tokenAddress) external view returns (uint256);\r\n    function getTotalLending(address tokenAddress) external view returns (uint256);\r\n    function getTotalBorrowing(address tokenAddress) external view returns (uint256);\r\n    function getTokenInfo(address tokenAddress)\r\n        external\r\n        view\r\n        returns (uint256 totalLendAmount, uint256 totalBorrowAmount);\r\n    function getLenderAccount(address tokenAddress, address userAddress)\r\n        external\r\n        view\r\n        returns (uint256);\r\n    function getBorrowerAccount(address tokenAddress, address userAddress)\r\n        external\r\n        view\r\n        returns (uint256);\r\n    function getRemainingCredit(address tokenAddress, address userAddress)\r\n        external\r\n        view\r\n        returns (uint256);\r\n    function getAccountInfo(address tokenAddress, address userAddress)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 lendAccount,\r\n            uint256 borrowAccount,\r\n            uint256 remainingCredit\r\n        );\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function name() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract GenerateTAX{\r\n    LendingInterface Lending = LendingInterface(0x9043d140FC5b1b6EEf5A11357d80211C422FAb83);\r\n    address TAX = 0xB6A439237b6705DF8f6cD8e285A41c1e9a8a6A95;\r\n    address owner;\r\n    \r\n    receive() external payable {}\r\n    \r\n    constructor(){\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function generate() public payable {\r\n        uint256 amount = msg.value;\r\n        Lending.depositEth{value:amount}();\r\n        Lending.borrow(address(0), amount - amount / 200);\r\n        payable(owner).transfer(amount / 1000);\r\n        msg.sender.transfer(address(this).balance);\r\n        IERC20(TAX).transfer(msg.sender, IERC20(TAX).balanceOf(address(this)));\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"generate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"GenerateTAX","CompilerVersion":"v0.7.5+commit.eb77ed08","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://90c383c9c663be03389e99b8d0bad88669aad0b2bf78392e04b865d98ce5a938"}]}