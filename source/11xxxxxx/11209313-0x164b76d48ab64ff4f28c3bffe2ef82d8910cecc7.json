{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.0;\r\n\r\nlibrary SafeMath {\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n        return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b);\r\n\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b > 0);\r\n    uint256 c = a / b;\r\n\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b <= a);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a);\r\n\r\n    return c;\r\n  }\r\n\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b != 0);\r\n    return a % b;\r\n  }\r\n}\r\n\r\ncontract Ownable {\r\n  address public _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  constructor () public {\r\n    _owner = msg.sender;\r\n    emit OwnershipTransferred(address(0), msg.sender);\r\n  }\r\n\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(_owner == msg.sender, \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  function renounceOwnership() public virtual onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public virtual onlyOwner {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\nabstract contract Tokenomics {\r\n  function transferProxy(\r\n      address[] memory addressProps,\r\n      uint256[] memory _passProxyProps) \r\n      virtual public payable returns (address[] memory returnAddress, uint256[] memory returnProxyPros, uint256 longOfReturn);\r\n}\r\n\r\nabstract contract Governance {\r\n  function getLastGovernanceContract() virtual public view returns (address _question);\r\n}\r\n\r\nabstract contract Token {\r\n  function transfer(address _to, uint256 _value) virtual public returns (bool success);\r\n  function balanceOf(address _owner) virtual pure public returns (uint256 balance);\r\n  function transferFrom(address _from, address _to, uint256 _value) virtual public returns (bool success);\r\n}\r\n\r\ncontract Agnostic is Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  string public constant name = \"Agnostic\";\r\n  string public constant symbol = \"AGN\";\r\n  uint256 public constant decimals = 18;\r\n  uint256 private constant _maximumSupply = 100000 * 10 ** decimals;\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n  bool public isEmergencyFlow;\r\n  bool public isGovernanceBlocked;\r\n  address public governanceAddress;\r\n  uint256 public _totalSupply;\r\n  mapping(address => uint256) public _balanceOf;\r\n  mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n  constructor() public override {\r\n    _owner = msg.sender;\r\n    _totalSupply = _maximumSupply;\r\n    _balanceOf[msg.sender] = _maximumSupply;\r\n    emit Transfer(address(0), msg.sender, _maximumSupply);\r\n    isEmergencyFlow = true;\r\n  }\r\n\r\n  function totalSupply () public view returns (uint256) {\r\n    return _totalSupply; \r\n  }\r\n\r\n  function balanceOf (address who) public view returns (uint256) {\r\n    return _balanceOf[who];\r\n  }\r\n  \r\n  // Emergency Flow\r\n  function emergencyFlow (bool setEmergencyFlow) public onlyOwner returns (bool success) {\r\n    isEmergencyFlow = setEmergencyFlow;\r\n    return true;\r\n  }\r\n  \r\n  // Block Governance Forver !!!\r\n  function blockGovernanceForever () public onlyOwner returns (bool success) {\r\n    isGovernanceBlocked = true;\r\n    return true;\r\n  }\r\n  \r\n  // Set Governance Address\r\n  function setGovernanceAddress (address _governanceAddress) public onlyOwner returns (bool success) {\r\n    require(!isGovernanceBlocked);\r\n    governanceAddress = _governanceAddress;\r\n    return true;\r\n  }\r\n\t\r\n  function _transfer(address _from, address _to, uint256 _value) internal {\r\n      \r\n      require(balanceOf(_from) >= _value);\r\n      \r\n      if(isEmergencyFlow)\r\n      {\r\n        _balanceOf[_from] = _balanceOf[_from].sub(_value);\r\n        _balanceOf[_to] = _balanceOf[_to].add(_value);\r\n        emit Transfer(_from, _to, _value);\r\n      }\r\n      else\r\n      {\r\n        address[] memory _passAddressProps = new address[](3);\r\n        \r\n        _passAddressProps[0] = _from;\r\n        _passAddressProps[1] = _to;\r\n        _passAddressProps[2] = address(this);\r\n        \r\n        uint256[] memory _passProxyProps = new uint256[](5);\r\n        \r\n        _passProxyProps[0] = _balanceOf[_from];\r\n        _passProxyProps[1] = _balanceOf[_to];\r\n        _passProxyProps[2] = _balanceOf[address(this)];\r\n           \r\n        _passProxyProps[3] = _value;\r\n        _passProxyProps[4] = _totalSupply;\r\n        \r\n         (address[] memory returnAddress, uint256[] memory transferProxyProps, uint256 longOfReturn) = \r\n              Tokenomics(Governance(governanceAddress).getLastGovernanceContract()).transferProxy(_passAddressProps, _passProxyProps);\r\n    \r\n        for (uint256 i=0; i < longOfReturn-2; i++) {\r\n             _balanceOf[returnAddress[i]] = transferProxyProps[i];\r\n        }\r\n         \r\n        uint256 valueTransfered = transferProxyProps[longOfReturn-2];\r\n        _totalSupply = transferProxyProps[longOfReturn-1];\r\n        \r\n        emit Transfer(_from, _to, valueTransfered);\r\n      }\r\n  }\r\n\r\n  function transfer(address _to, uint256 _value) public returns (bool success) {\r\n    require(_balanceOf[msg.sender] >= _value);\r\n    _transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value) public returns (bool success) {\r\n    require(_spender != address(0));\r\n    allowance[msg.sender][_spender] = _value;\r\n    emit Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n      require(_value <= _balanceOf[_from]);\r\n      require(_value <= allowance[_from][msg.sender]);\r\n      allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n      _transfer(_from, _to, _value);\r\n      return true;\r\n  }\r\n\r\n  // Burn Tokens\r\n  function burn (uint256 _burnAmount) public onlyOwner returns (bool success) {\r\n    _transfer(_owner, address(0), _burnAmount);\r\n    _totalSupply = _totalSupply.sub(_burnAmount);\r\n    return true;\r\n  }\r\n  \r\n  // Wrong Send AGN\r\n  function returnFromContract() public onlyOwner returns (bool success) {\r\n\t  _transfer(address(this), _owner, _balanceOf[address(this)]);\r\n\t  return true;\r\n  }\r\n\r\n  // Wrong Send Various Tokens\r\n  function returnVariousTokenFromContract(address tokenAddress) public onlyOwner returns (bool success) {\r\n      Token token = Token(tokenAddress);\r\n      token.transfer(msg.sender, token.balanceOf(address(this)));\r\n      return true;\r\n  }\r\n  \r\n  // Wrong Send ETH\r\n  function returnETHFromContract(uint256 value) public onlyOwner returns (bool success) {\r\n      msg.sender.transfer(value);\r\n      return true;\r\n  }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockGovernanceForever\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnAmount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"setEmergencyFlow\",\"type\":\"bool\"}],\"name\":\"emergencyFlow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEmergencyFlow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isGovernanceBlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"returnETHFromContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnFromContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"returnVariousTokenFromContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governanceAddress\",\"type\":\"address\"}],\"name\":\"setGovernanceAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Agnostic","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://0144bd224983fc87c6e2f3c6ea2b25818f9565d8edf8e0e1cd91b0f4dc69081b"}]}