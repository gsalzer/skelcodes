{"status":"1","message":"OK","result":[{"SourceCode":"// Root file: contracts/protocol/integration/ZeroExApiAdapter.sol\r\n\r\n/*\r\n    Copyright 2021 Set Labs Inc.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n\r\n    SPDX-License-Identifier: Apache License, Version 2.0\r\n*/\r\n\r\npragma solidity 0.6.10;\r\npragma experimental \"ABIEncoderV2\";\r\n\r\n/**\r\n * @title ZeroExApiAdapter\r\n * @author Set Protocol\r\n *\r\n * Exchange adapter for 0xAPI that returns data for swaps\r\n */\r\n\r\ncontract ZeroExApiAdapter {\r\n\r\n    /* ============ State Variables ============ */\r\n\r\n    // ETH pseudo-token address used by 0x API.\r\n    address private constant ETH_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n\r\n    // Address of the deployed ZeroEx contract.\r\n    address public immutable zeroExAddress;\r\n\r\n    // Returns the address to approve source tokens to for trading. This is the TokenTaker address\r\n    address public immutable getSpender;\r\n\r\n    /* ============ constructor ============ */\r\n\r\n    constructor(address _zeroExAddress) public {\r\n        zeroExAddress = _zeroExAddress;\r\n        getSpender = _zeroExAddress;\r\n    }\r\n\r\n\r\n    /* ============ External Getter Functions ============ */\r\n\r\n    /**\r\n     * Return 0xAPI calldata which is already generated from 0xAPI\r\n     *\r\n     * @param  _sourceToken              Address of source token to be sold\r\n     * @param  _destinationToken         Address of destination token to buy\r\n     * @param  _destinationAddress       Address that assets should be transferred to\r\n     * @param  _sourceQuantity           Amount of source token to sell\r\n     * @param  _minDestinationQuantity   Min amount of destination token to buy\r\n     * @param  _data                     Arbitrage bytes containing trade call data\r\n     *\r\n     * @return address                   Target contract address\r\n     * @return uint256                   Call value\r\n     * @return bytes                     Trade calldata\r\n     */\r\n    function getTradeCalldata(\r\n        address _sourceToken,\r\n        address _destinationToken,\r\n        address _destinationAddress,\r\n        uint256 _sourceQuantity,\r\n        uint256 _minDestinationQuantity,\r\n        bytes calldata _data\r\n    )\r\n        external\r\n        view\r\n        returns (address, uint256, bytes memory)\r\n    {\r\n        // solium-disable security/no-inline-assembly\r\n        address inputToken;\r\n        address outputToken;\r\n        address recipient;\r\n        bool supportsRecipient;\r\n        uint256 inputTokenAmount;\r\n        uint256 minOutputTokenAmount;\r\n\r\n        {\r\n            require(_data.length >= 4, \"Invalid calldata\");\r\n            bytes4 selector;\r\n            assembly {\r\n                selector := and(\r\n                    // Read the first 4 bytes of the _data array from calldata.\r\n                    calldataload(add(36, calldataload(164))), // 164 = 5 * 32 + 4\r\n                    0xffffffff00000000000000000000000000000000000000000000000000000000\r\n                )\r\n            }\r\n\r\n            if (selector == 0x415565b0) {\r\n                // transformERC20()\r\n                (inputToken, outputToken, inputTokenAmount, minOutputTokenAmount) =\r\n                    abi.decode(_data[4:], (address, address, uint256, uint256));\r\n            } else if (selector == 0xf7fcd384) {\r\n                // sellToLiquidityProvider()\r\n                (inputToken, outputToken, , recipient, inputTokenAmount, minOutputTokenAmount) =\r\n                    abi.decode(_data[4:], (address, address, address, address, uint256, uint256));\r\n                supportsRecipient = true;\r\n            } else if (selector == 0xd9627aa4) {\r\n                // sellToUniswap()\r\n                address[] memory path;\r\n                (path, inputTokenAmount, minOutputTokenAmount) =\r\n                    abi.decode(_data[4:], (address[], uint256, uint256));\r\n                require(path.length > 1, \"Uniswap token path too short\");\r\n                inputToken = path[0];\r\n                outputToken = path[path.length - 1];\r\n            } else {\r\n                revert(\"Unsupported 0xAPI function selector\");\r\n            }\r\n        }\r\n\r\n        require(inputToken == _sourceToken, \"Mismatched input token\");\r\n        require(outputToken == _destinationToken, \"Mismatched output token\");\r\n        require(!supportsRecipient || recipient == _destinationAddress, \"Mismatched recipient\");\r\n        require(inputTokenAmount == _sourceQuantity, \"Mismatched input token quantity\");\r\n        require(minOutputTokenAmount >= _minDestinationQuantity, \"Mismatched output token quantity\");\r\n\r\n        return (\r\n            zeroExAddress,\r\n            // Note: Does not account for limit order protocol fees.\r\n            inputToken == ETH_ADDRESS ? inputTokenAmount : 0,\r\n            _data\r\n        );\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zeroExAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getSpender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sourceToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_destinationToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_destinationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sourceQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minDestinationQuantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"getTradeCalldata\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zeroExAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ZeroExApiAdapter","CompilerVersion":"v0.6.10+commit.00c0fcaf","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000def1c0ded9bec7f1a1670819833240f027b25eff","EVMVersion":"istanbul","Library":"","LicenseType":"Apache-2.0","Proxy":"0","Implementation":"","SwarmSource":"ipfs://4967962116d4fc1ac3fadb4df352c2b0267d01fd543c528408b35b0fe3cc8883"}]}