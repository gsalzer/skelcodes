{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.17;\r\n\r\n library SafeMath256 {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if(a==0 || b==0)\r\n        return 0;  \r\n    uint256 c = a * b;\r\n    require(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b>0);\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n   require( b<= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a);\r\n\r\n    return c;\r\n  }\r\n  \r\n}\r\n\r\n\r\ncontract ERC20 {\r\n\t   event Transfer(address indexed from, address indexed to, uint256 tokens);\r\n       event Approval(address indexed tokenOwner, address indexed spender, uint256 tokens);\r\n\r\n   \t   function totalSupply() public view returns (uint256);\r\n       function balanceOf(address tokenOwner) public view returns (uint256 balance);\r\n       function allowance(address tokenOwner, address spender) public view returns (uint256 remaining);\r\n\r\n       function transfer(address to, uint256 tokens) public returns (bool success);\r\n       \r\n       function approve(address spender, uint256 tokens) public returns (bool success);\r\n       function transferFrom(address from, address to, uint256 tokens) public returns (bool success);\r\n       \r\n\r\n}\r\n\r\ncontract StandarERC20 is ERC20{\r\n     using SafeMath256 for uint256; \r\n     \r\n     mapping (address => uint256) balance;\r\n     mapping (address => mapping (address=>uint256)) allowed;\r\n\r\n\r\n      event Transfer(address indexed from,address indexed to,uint256 value);\r\n      event Approval(address indexed owner,address indexed spender,uint256 value);\r\n\r\n\r\n     function balanceOf(address _walletAddress) public view returns (uint256){\r\n        return balance[_walletAddress]; \r\n     }\r\n\r\n\r\n     function allowance(address _owner, address _spender) public view returns (uint256){\r\n          return allowed[_owner][_spender];\r\n        }\r\n\r\n     function transfer(address _to, uint256 _value) public returns (bool){\r\n        require(_value <= balance[msg.sender],\"In sufficial Balance\");\r\n        require(_to != address(0),\"Can't transfer To Address 0\");\r\n\r\n        balance[msg.sender] = balance[msg.sender].sub(_value);\r\n        balance[_to] = balance[_to].add(_value);\r\n        emit Transfer(msg.sender,_to,_value);\r\n        \r\n        return true;\r\n\r\n     }\r\n\r\n     function approve(address _spender, uint256 _value)\r\n            public returns (bool){\r\n            allowed[msg.sender][_spender] = _value;\r\n\r\n            emit Approval(msg.sender, _spender, _value);\r\n            return true;\r\n            }\r\n\r\n      function transferFrom(address _from, address _to, uint256 _value)\r\n            public returns (bool){\r\n               require(_value <= balance[_from]);\r\n               require(_value <= allowed[_from][msg.sender]); \r\n               require(_to != address(0));\r\n\r\n              balance[_from] = balance[_from].sub(_value);\r\n              balance[_to] = balance[_to].add(_value);\r\n              allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n              emit Transfer(_from, _to, _value);\r\n              return true;\r\n      }\r\n}\r\n\r\ncontract SZOWRAPTOKEN is StandarERC20{\r\n  string public name = \"Wrapped SZO\";\r\n  string public symbol = \"WSZO\"; \r\n  uint256 public decimals = 18;\r\n\r\n  ERC20 public szoToken;\r\n  \r\n  mapping(address=>bool) public poolsAutoKYC;\r\n  \r\n  constructor() public {\r\n      szoToken = ERC20(0x6086b52Cab4522b4B0E8aF9C3b2c5b8994C36ba6);\r\n  }\r\n  \r\n  function deposit(uint256 _amount) public  {\r\n        require(szoToken.balanceOf(msg.sender) >= _amount,\"Out of fund\");\r\n        szoToken.transferFrom(msg.sender,address(this),_amount);\r\n        balance[msg.sender] += _amount;\r\n        emit Transfer(msg.sender,address(this),_amount);\r\n    }\r\n    \r\n  //Please Ensure that you've submitted and your KYC has been approved before you swap to SZO \r\n  //ShuttleOne is undergoing regulatory compliance in the Republic of Singapore and we seek your kind understanding. \r\n  //Please ignore this advisory if you have successfully passed KYC\r\n\r\n   function withdraw(uint256 _amount) public {\r\n        require(balance[msg.sender] >= _amount);\r\n        balance[msg.sender] -= _amount;\r\n        szoToken.transfer(msg.sender,_amount);\r\n        emit Transfer(address(this),msg.sender,_amount);\r\n   }\r\n    \r\n   function totalSupply() public view returns (uint256){\r\n       return szoToken.balanceOf(address(this)); \r\n    }\r\n    \r\n    \r\n\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_walletAddress\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolsAutoKYC\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"szoToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"SZOWRAPTOKEN","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://fb8f78946349a2f8d10e2644e7ebc884567268158d8578a24f08b63515e73aac"}]}