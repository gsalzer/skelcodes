{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.12;\r\n\r\ncontract VatLike {\r\n    function urns(bytes32 ilk, address u) public view returns (uint ink, uint art);\r\n}\r\n\r\ncontract DssManagerLike {\r\n    function urns(uint cdp) public view returns(address urn);\r\n    function ilks(uint cdp) public view returns(bytes32);\r\n    function owns(uint cdp) public view returns(address);\r\n    function vat() public view returns(address);\r\n    function cdpi() public view returns(uint);\r\n}\r\n\r\ncontract ERC20Like {\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n}\r\n\r\ncontract DSProxyLike {\r\n    function owner() public returns (address);\r\n}\r\n\r\ncontract BlackFriday {\r\n    uint campaignEndTime = 1606744800;\r\n    ERC20Like dai = ERC20Like(0x6B175474E89094C44Da98b954EedeAC495271d0F);\r\n    DssManagerLike BProtocol = DssManagerLike(0x3f30c2381CD8B917Dd96EB2f1A4F96D91324BBed);\r\n    uint reward = 100e18;\r\n    \r\n    function raffle() public returns(uint) {\r\n        require(now >= campaignEndTime, \"too-early\");\r\n        \r\n        bytes32 seed = blockhash(block.number - 1);\r\n        VatLike vat = VatLike(BProtocol.vat());\r\n        uint cdpi = BProtocol.cdpi();\r\n        \r\n        for(uint i = 0 ; i < 10 ; i++) {\r\n            seed = keccak256(abi.encodePacked(seed));\r\n            uint cdp = 1 + (uint(seed) % cdpi);\r\n            \r\n            address urn = BProtocol.urns(cdp);\r\n            bytes32 ilk = BProtocol.ilks(cdp);\r\n            \r\n            (, uint art) = vat.urns(ilk, urn);\r\n            if(art == 0) continue;\r\n            \r\n            address winner = BProtocol.owns(cdp);\r\n            require(dai.transfer(DSProxyLike(winner).owner(), reward));\r\n            return cdp;\r\n        }\r\n        \r\n        return 0;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"raffle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"BlackFriday","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"BSD-3-Clause","Proxy":"0","Implementation":"","SwarmSource":"bzzr://1ea4ab1dd6196d4ca9ef552911a5f41ffe8d079e7edc6b7becea6db4bcb2813d"}]}