{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.7;\r\n\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 value) external;\r\n    function approve(address spender, uint256 value) external;\r\n}\r\n\r\ninterface CToken {\r\n    function mint(uint mintAmount) external returns (uint);\r\n    function redeemUnderlying(uint redeemAmount) external returns (uint);\r\n    function underlying() external returns (IERC20);\r\n}\r\n\r\ninterface CEther {\r\n    function mint() external payable;\r\n    function redeemUnderlying(uint redeemAmount) external returns (uint);\r\n}\r\n\r\nabstract contract LinenWalletActions {\r\n\r\n    function cEther() internal pure virtual returns (CEther);\r\n\r\n    function approveAndMint(CToken cToken, uint mintAmount) external returns (bool) {\r\n        \r\n        if (address(cToken) == address(cEther())){\r\n            cEther().mint{value: mintAmount}();\r\n        } else {\r\n            cToken.underlying().approve(address(cToken), mintAmount);\r\n            require(cToken.mint(mintAmount) == 0, \"Mint was not successful\");\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function redeemUnderlyingAndTransfer(CToken cToken, address payable to, uint redeemAmount) external returns (bool) {\r\n        if (address(cToken) == address(cEther())){\r\n            require(cEther().redeemUnderlying(redeemAmount) == 0, \"Redeem Underlying was not successful\");\r\n            (bool success, ) = to.call{value: redeemAmount}(\"\");\r\n            require(success, \"Transfer was not successful\");\r\n        } else {\r\n            require(cToken.redeemUnderlying(redeemAmount) == 0, \"Redeem Underlying was not successful\");\r\n            cToken.underlying().transfer(to, redeemAmount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract LinenWalletActionsMainnet is LinenWalletActions {\r\n    function cEther() internal pure override returns (CEther){\r\n        return CEther(0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5);\r\n    }\r\n}\r\n\r\ncontract LinenWalletActionsKovan is LinenWalletActions {\r\n    function cEther() internal pure override returns (CEther){\r\n        return CEther(0x41B5844f4680a8C38fBb695b7F9CFd1F64474a72);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"approveAndMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlyingAndTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"LinenWalletActionsMainnet","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://9c71a7504c8807740f925811f0dad4063dc0afadfa8210320882f439e9c2e172"}]}