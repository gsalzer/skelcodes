{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.0;\r\n\r\n\r\ninterface MeterMaidInterface {\r\n    function meter(address to, bytes calldata data) external returns (\r\n        uint256 gasUsed, bool ok, bytes memory returnData\r\n    );\r\n}\r\n\r\n\r\ncontract MeterMaid is MeterMaidInterface {\r\n    function meter(address to, bytes calldata data) external override returns (\r\n        uint256 gasUsed, bool ok, bytes memory returnData\r\n    ) {\r\n    \tuint256 initialGas = gasleft();\r\n    \t(ok, returnData) = to.call(data);\r\n    \tgasUsed = initialGas - gasleft();\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"meter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MeterMaid","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://21aacd866dba8185da002fb953b5d10494ca924303f915bee84c1c9bc97b9110"}]}