{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.0;\r\n\r\ninterface ERC20Basic {\r\n    function balanceOf(address who) external view returns (uint256 balance);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool trans1);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256 remaining);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool trans);\r\n\r\n    function approve(address spender, uint256 value)\r\n        external\r\n        returns (bool hello);\r\n\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract BridgeAssistant {\r\n    address public owner;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    ERC20Basic public WAG8;\r\n    mapping(address => string) public targetOf;\r\n\r\n    event SetTarget(address indexed sender, string target);\r\n    event Collect(address indexed sender, string target, uint256 amount);\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    function setTarget(string memory _account) public {\r\n        targetOf[msg.sender] = _account;\r\n        emit SetTarget(msg.sender, _account);\r\n    }\r\n\r\n    function collect(address _payer) public onlyOwner returns (uint256 amount) {\r\n        string memory _t = targetOf[_payer];\r\n        require(bytes(_t).length > 0, \"Target account not set\");\r\n        amount = WAG8.allowance(_payer, address(this));\r\n        require(amount > 0, \"No WAG8 approved\");\r\n        require(\r\n            WAG8.transferFrom(_payer, address(this), amount),\r\n            \"WAG8.transferFrom failure\"\r\n        );\r\n        delete targetOf[_payer];\r\n        emit Collect(_payer, _t, amount);\r\n    }\r\n\r\n    function transfer(address _target, uint256 _amount) public onlyOwner returns (bool success) {\r\n        return WAG8.transfer(_target, _amount);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    constructor(ERC20Basic _WAG8) {\r\n        WAG8 = _WAG8;\r\n        owner = msg.sender;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract ERC20Basic\",\"name\":\"_WAG8\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"target\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"target\",\"type\":\"string\"}],\"name\":\"SetTarget\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WAG8\",\"outputs\":[{\"internalType\":\"contract ERC20Basic\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_payer\",\"type\":\"address\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_account\",\"type\":\"string\"}],\"name\":\"setTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"targetOf\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"BridgeAssistant","CompilerVersion":"v0.7.0+commit.9e61f92b","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000c6905f29ec672a3b3446c70da9137dba517ad047","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://bbd88c0b2067e9fe9c7bbe4ec4cf2afd18b67195d9cc6aaf994c9694e56c27fa"}]}