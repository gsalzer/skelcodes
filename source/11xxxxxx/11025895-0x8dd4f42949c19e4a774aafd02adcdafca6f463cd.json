{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.12;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract TransactionBatcher {\r\n    function batchSend(address[] memory targets, uint[] memory values, bytes[] memory datas) public payable {\r\n        for (uint i = 0; i < targets.length; i++) {\r\n            (bool success,) = targets[i].call.value(values[i])(datas[i]);\r\n            if (!success) revert('transaction failed');\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"batchSend\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"TransactionBatcher","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://ebaa2d5c0108ed1076cf6941d15b4583d492f1b4be6afecb3c717d8068dd9792"}]}