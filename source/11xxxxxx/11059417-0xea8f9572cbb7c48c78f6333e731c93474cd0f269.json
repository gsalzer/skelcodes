{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\n\r\nlibrary SafeMath {\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tassert(a >= b);\r\n\t\treturn a - b;\r\n\t}\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tif (a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tuint256 c = a * b;\r\n\t\tassert(c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a / b;\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\ncontract YLT {\r\n\tstring public name = \"Yun Lian Token\";\r\n\tstring public symbol = \"YLT\";\r\n\tuint256 public decimals = 8;\r\n\tuint256 private constant _totalSupply = 100000000 * 10**8;\r\n\r\n\taddress payable private _owner;\r\n\tuint256 public _ratePerEth = 10000000; \t// Number of tokens per Ether 1ETH \t \t 1000YLT\r\n\tuint256 public _ratePerYLT = 8000000;  \t// Number of tokens per \t  1000YLT\t 0.8ETH\r\n\tuint256 public _raisedAmount = 0;\r\n\r\n\r\n\tstruct Record {\r\n        uint256[] eth;  \t// 存入eth\r\n        uint256[] ylt;\t\t// 兑换的ylt\r\n    }\r\n\tmapping(address => Record) private _deposits;\r\n\tmapping(address => Record) private _withdraws;\r\n\r\n\r\n\t// 该地址上的代币余额\r\n\tmapping(address => uint256) private _balances;\r\n\t// 配额\r\n\tmapping (address => mapping (address => uint256)) private _allowances;\r\n\tusing SafeMath for uint256;\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n\tconstructor() public {\r\n\t\t_owner = msg.sender;\r\n\t}\r\n\t\r\n\tmodifier onlyOwner() {\r\n    \trequire(_owner == msg.sender);\r\n   \t \t_;\r\n   \t}\r\n   \tfunction setRateEth(uint256 ratePerEth) public onlyOwner {\r\n   \t\t_ratePerEth = ratePerEth;\r\n   \t}\r\n   \tfunction setRateYLT(uint256 ratePerYLT) public onlyOwner {\r\n\t\t_ratePerYLT = ratePerYLT;\r\n   \t}\r\n   \tfunction destroy() public onlyOwner{\r\n   \t\t// 合约自我删除，合约账户中剩余的以太币发到_owner地址\r\n   \t\tselfdestruct(_owner);\r\n   \t}\r\n\r\n   \treceive () external payable{\r\n    \tuint256 tokenAmount = msg.value.div(_ratePerEth);\t// 可兑换代币数量\r\n\r\n    \t_raisedAmount = _raisedAmount.add(tokenAmount);\r\n    \trequire(_raisedAmount <= _totalSupply);\t\t\t\t// 已兑换代币数量必须小于总值\r\n\r\n   \t\t_balances[msg.sender] = _balances[msg.sender].add(tokenAmount);\t// 增加该账户代币数量\r\n\r\n\t\t_deposits[msg.sender].eth.push(msg.value);\r\n\t\t_deposits[msg.sender].ylt.push(tokenAmount);\r\n\r\n   \t\temit Transfer(address(this), msg.sender, tokenAmount);\t\t// log event onto the blockchain\r\n   \t}\r\n\r\n   \t// YLT 兑换 eth\r\n   \tfunction withdraw(uint256 amount) public{\r\n   \t\t// 账户代币余额减少，总兑换代币数量减少\r\n   \t\t_balances[msg.sender] = _balances[msg.sender].sub(amount);\r\n   \t\t_raisedAmount = _raisedAmount.sub(amount);\r\n\r\n   \t\t// 计算 YLT 兑换为 eth的数量，转eth到账户地址上\r\n   \t\tuint256 ethAmount = amount.mul(_ratePerYLT);\r\n\r\n\t\t_withdraws[msg.sender].eth.push(ethAmount);\r\n\t\t_withdraws[msg.sender].ylt.push(amount);\r\n\r\n   \t\tmsg.sender.transfer(ethAmount);\r\n   \t}\r\n\r\n   \tfunction getRecord() public view returns (uint256[] memory, uint256[] memory, uint256[] memory, uint256[] memory){\r\n   \t    return (_deposits[msg.sender].eth, _deposits[msg.sender].ylt, _withdraws[msg.sender].eth, _withdraws[msg.sender].ylt);\r\n   \t}\r\n\r\n\tfunction totalSupply() public pure returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n\tfunction balanceOf(address account) public view returns (uint256) {\r\n\t\treturn _balances[account];\r\n\t}\r\n\r\n\tfunction transfer(address recipient, uint256 amount) public returns (bool) {\r\n\t\t_balances[msg.sender] = _balances[msg.sender].sub(amount);\r\n\t\t_balances[recipient] = _balances[recipient].add(amount);\r\n\t\temit Transfer(msg.sender, recipient, amount);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction allowance(address owner, address spender) public view returns (uint256) {\r\n\t\treturn _allowances[owner][spender];\r\n\t}\r\n\r\n\tfunction approve(address spender, uint256 amount) public returns (bool) {\r\n\t\t// 只允许: 清零配额，初始化配额\r\n\t\trequire((amount == 0 ) || (_allowances[msg.sender][spender] == 0));\r\n\t\t_allowances[msg.sender][spender] = amount;\r\n\t\temit Approval(msg.sender, spender, amount);\r\n\t\treturn true;\r\n\t}\r\n\t// 增加配额\r\n\tfunction increaseAllowance(address spender, uint256 addAmount) public returns (bool){\r\n\t\t_allowances[msg.sender][spender] = _allowances[msg.sender][spender].add(addAmount);\r\n\t\temit Approval(msg.sender, spender, _allowances[msg.sender][spender]);\r\n\t\treturn true;\r\n\t}\r\n\t// 减少配额\r\n\tfunction decreaseAllowance(address spender, uint256 subAmount) public returns(bool) {\r\n\t\tuint256 oldAmount = _allowances[msg.sender][spender];\r\n\t\tif (subAmount > oldAmount) {\r\n\t\t\t_allowances[msg.sender][spender] = 0;\r\n\t\t} else {\r\n\t\t\t_allowances[msg.sender][spender] = oldAmount.sub(subAmount);\r\n\t\t}\r\n\t\temit Approval(msg.sender, spender, _allowances[msg.sender][spender]);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r\n\t\t// 配额减少\r\n\t\t_allowances[sender][msg.sender] = _allowances[sender][msg.sender].sub(amount);\r\n\r\n\t\t// sender代币减少, recipient代币增加\r\n\t\t_balances[sender] = _balances[sender].sub(amount);\r\n\t\t_balances[recipient] = _balances[recipient].add(amount);\r\n\t\t\r\n\t\temit Transfer(sender, recipient, amount);\r\n\t\treturn true;\r\n\t}\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_raisedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ratePerEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ratePerYLT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subAmount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecord\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addAmount\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ratePerEth\",\"type\":\"uint256\"}],\"name\":\"setRateEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ratePerYLT\",\"type\":\"uint256\"}],\"name\":\"setRateYLT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"YLT","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://330ed1f9c8e2e06439289546b1549515fedb7b7fd5e00360889f7c5e6de7b31c"}]}