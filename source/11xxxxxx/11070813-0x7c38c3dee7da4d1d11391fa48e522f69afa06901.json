{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\n\r\n\r\ncontract Permissions {\r\n\r\n  \r\n  mapping (address=>bool) public permits;\r\n\r\n  event AddPermit(address _addr);\r\n  event RemovePermit(address _addr);\r\n  event ChangeAdmin(address indexed _newAdmin,address indexed _oldAdmin);\r\n  \r\n  address public admin;\r\n  bytes32 public adminChangeKey;\r\n  \r\n  \r\n  function verify(bytes32 root,bytes32 leaf,bytes32[] memory proof) public pure returns (bool)\r\n  {\r\n      bytes32 computedHash = leaf;\r\n\r\n      for (uint256 i = 0; i < proof.length; i++) {\r\n        bytes32 proofElement = proof[i];\r\n\r\n        if (computedHash < proofElement) {\r\n        // Hash(current computed hash + current element of the proof)\r\n        computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\r\n        } else {\r\n        // Hash(current element of the proof + current computed hash)\r\n        computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\r\n       }\r\n      }\r\n\r\n     // Check if the computed hash (root) is equal to the provided root\r\n      return computedHash == root;\r\n   }    \r\n  function changeAdmin(address _newAdmin,bytes32 _keyData,bytes32[] memory merkleProof,bytes32 _newRootKey) public onlyAdmin {\r\n         bytes32 leaf = keccak256(abi.encodePacked(msg.sender,'Guarantor',_keyData));\r\n         require(verify(adminChangeKey, leaf,merkleProof), 'Invalid proof.');\r\n         \r\n         admin = _newAdmin;\r\n         adminChangeKey = _newRootKey;\r\n         \r\n         emit ChangeAdmin(_newAdmin,msg.sender);      \r\n  }\r\n  \r\n  constructor() public {\r\n    permits[msg.sender] = true;\r\n    admin = msg.sender;\r\n    adminChangeKey = 0xc07b01d617f249e77fe6f0df68daa292fe6ec653a9234d277713df99c0bb8ebf;\r\n  }\r\n  \r\n  modifier onlyAdmin(){\r\n      require(msg.sender == admin);\r\n      _;\r\n  }\r\n\r\n  modifier onlyPermits(){\r\n    require(permits[msg.sender] == true);\r\n    _;\r\n  }\r\n\r\n  function isPermit(address _addr) public view returns(bool){\r\n    return permits[_addr];\r\n  }\r\n  \r\n  function addPermit(address _addr) public onlyAdmin{\r\n    if(permits[_addr] == false){\r\n        permits[_addr] = true;\r\n        emit AddPermit(_addr);\r\n    }\r\n  }\r\n  \r\n  function removePermit(address _addr) public onlyAdmin{\r\n    permits[_addr] = false;\r\n    emit RemovePermit(_addr);\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\ncontract ERC20 {\r\n\r\n   \t   function totalSupply() public view returns (uint256);\r\n       function balanceOf(address tokenOwner) public view returns (uint256 balance);\r\n       function allowance(address tokenOwner, address spender) public view returns (uint256 remaining);\r\n\r\n       function transfer(address to, uint256 tokens) public returns (bool success);\r\n       \r\n       function approve(address spender, uint256 tokens) public returns (bool success);\r\n       function transferFrom(address from, address to, uint256 tokens) public returns (bool success);\r\n\r\n       function decimals() public view returns(uint256);\r\n}\r\n\r\n\r\n\r\n\r\ncontract CATToken{ \r\n    function balanceOf(address tokenOwner) public view returns (uint256 balance);\r\n    function intTransfer(address _from, address _to, uint256 _amount) external returns(bool);\r\n}\r\n\r\ncontract S1Global{\r\n    function getAllMaxAddr() public returns(uint256);\r\n    function getAddress(uint256 idx) public returns(address);\r\n    function getAddressLable(string memory _label) public view returns(address);\r\n}\r\n// Pool accept only Pool Token or \r\ncontract GuarantorDB is Permissions {\r\n    // GuarantorID use for index;  \r\n  struct Guarantor{\r\n     uint256  creditlock; // are in USD\r\n     address  credit; // credit Address;\r\n     address  guaAddr; // address for commision;\r\n     address  lockAddres; // create by shuttle one to keep asset to pay default\r\n     uint256  commision;  // commission percent\r\n     GUARANTOR_STATUS  status;\r\n  }\r\n  \r\n  mapping (uint256=>uint256) public guarantorIdx;\r\n  mapping (uint256=>uint256) public guarantorID;\r\n  mapping (uint256=>address) public guarantorAddr;\r\n  uint256 public version = 3;\r\n\r\n  CATToken  public catToken;\r\n\r\n  Guarantor[] guarantors;\r\n\r\n    \r\n      enum GUARANTOR_STATUS {GUARANTOR_PEDDING,GUARANTOR_ACTIVE,GUARANTOR_INACTIVE,GUARANTOR_TERMINTAE}\r\n\r\n      // amount in CAT Token\r\n      function payDefault(uint256 _guaID,uint256 _lockAmount,uint256 _defAmount,address _leader) external onlyPermits returns(bool){\r\n        require(guarantorIdx[_guaID] > 0,\"ERROR:guarantorCredit not have this ID\");\r\n        uint256 guaIdx = guarantorIdx[_guaID] - 1;\r\n        uint256 balance = catToken.balanceOf(guarantors[guaIdx].lockAddres);\r\n\r\n        if(balance >= _defAmount){ // it should be true\r\n           guarantors[guaIdx].creditlock -= _lockAmount;\r\n\r\n           if(_defAmount < _lockAmount){\r\n             catToken.intTransfer(guarantors[guaIdx].lockAddres,_leader,_defAmount);\r\n             catToken.intTransfer(guarantors[guaIdx].lockAddres,guarantors[guaIdx].credit,_lockAmount - _defAmount);\r\n           }\r\n           else{\r\n             catToken.intTransfer(guarantors[guaIdx].lockAddres,_leader,_defAmount);\r\n           }\r\n           return true;\r\n        }\r\n        else\r\n        {\r\n           return false;\r\n        }\r\n      }\r\n\r\n     function guarantorsData(uint256 _idx) public view onlyPermits returns (uint256[] memory _data,address[] memory _addr){  \r\n        _data = new uint256[](3);\r\n        _addr = new address[](3);\r\n\r\n        _data[0] =  guarantors[_idx].creditlock;\r\n        _data[1] =  guarantors[_idx].commision;\r\n        _data[2] = uint256(guarantors[_idx].status);\r\n\r\n\r\n        _addr[0] = guarantors[_idx].guaAddr;\r\n        _addr[1] = guarantors[_idx].credit;\r\n        _addr[2] = guarantors[_idx].lockAddres;\r\n    }\r\n\r\n    function setS1Global(address _addr) external onlyAdmin returns(bool){\r\n        S1Global  s1 = S1Global(_addr);\r\n        for(uint256 i=0;i<s1.getAllMaxAddr();i++){\r\n            addPermit(s1.getAddress(i));\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n    function setCatToken(address _addr) external onlyAdmin returns(bool){\r\n               catToken = CATToken(_addr);\r\n    }\r\n    \r\n    function guarantoInfo(uint256 _guaID) public view onlyPermits returns(uint256[] memory _data,address[] memory _addr){\r\n        require(guarantorIdx[_guaID] > 0,\"ERROR not have guarantor this id\");\r\n        return guarantorsData(guarantorIdx[_guaID] - 1);\r\n    }\r\n    \r\n      function updateGuarantor(uint256 _guaID,uint256 _commision,GUARANTOR_STATUS _status) public onlyPermits returns(bool){\r\n        require(guarantorIdx[_guaID] == 0,\"ERROR:Add Guaranto invalud id\");\r\n        \r\n        uint256 guaIdx = guarantorIdx[_guaID] - 1;\r\n\r\n        guarantors[guaIdx].commision=_commision;\r\n        guarantors[guaIdx].status= _status;\r\n        return true;\r\n    }\r\n    \r\n     function isValidGuarantor(uint256 _guaID) public view returns(bool){\r\n        return (guarantorIdx[_guaID] != 0);\r\n    }\r\n    \r\n    function changeAddress(uint256 _guaID,address _newAddr) public onlyPermits{\r\n    \trequire(guarantorIdx[_guaID] >0,\"invalid id\");\r\n    \tguarantorAddr[_guaID] = _newAddr;\r\n    }\r\n\r\n     function addGuarantor(uint256 _guaID,address _credit,address _guaAddr,uint256 _commision,address _lockAddr,GUARANTOR_STATUS _status) public onlyPermits returns(bool){\r\n        require(guarantorIdx[_guaID] == 0,\"ERROR:Add Guaranto invalud id\");\r\n        \r\n\r\n        Guarantor memory guaranto = Guarantor({\r\n             credit:_credit,\r\n             creditlock:0,\r\n             guaAddr: _guaAddr,\r\n             commision:_commision,\r\n             lockAddres:_lockAddr,\r\n             status: _status\r\n        });\r\n        \r\n        uint256 guaIdx = guarantors.push(guaranto);\r\n        guarantorIdx[_guaID] = guaIdx;\r\n        guarantorAddr[_guaID] = _guaAddr;\r\n        return true;\r\n    }\r\n\r\n    mapping (uint256 => uint256[]) guarantorContract;\r\n\r\n//Move credit to lock credit\r\n    function addLoanCredit(uint256 _guaID,uint256 _credit) public onlyPermits returns(bool){\r\n    \trequire(guarantorIdx[_guaID] > 0,\"ERROR:guarantorCredit not have this ID\");\r\n      \r\n\r\n      uint256 guaIdx = guarantorIdx[_guaID] - 1;\r\n      uint256 balance = catToken.balanceOf(guarantors[guaIdx].credit);\r\n\r\n      if(balance < _credit)//  guarantors[guaIdx].creditUse + _credit > guarantors[guaIdx].credit)\r\n           return false;\r\n      else\r\n      {\r\n        \tguarantors[guaIdx].creditlock += _credit;\r\n          catToken.intTransfer(guarantors[guaIdx].credit,guarantors[guaIdx].lockAddres,_credit);\r\n        \treturn true;\r\n      }\r\n\r\n    }\r\n\r\n    function delLoanCredit(uint256 _guaID,uint256 _credit) public onlyPermits returns(bool){\r\n    \trequire(guarantorIdx[_guaID] > 0,\"ERROR:guarantorCredit not have this ID\");\r\n        uint256 guaIdx = guarantorIdx[_guaID] - 1;\r\n\r\n        uint256 balance = catToken.balanceOf(guarantors[guaIdx].lockAddres);\r\n\r\n        if(balance >= _credit){\r\n           guarantors[guaIdx].creditlock -= _credit;\r\n           catToken.intTransfer(guarantors[guaIdx].lockAddres,guarantors[guaIdx].credit,_credit);\r\n           return true;\r\n        }\r\n        else\r\n        {\r\n           return false;\r\n        }\r\n    }\r\n\r\n    function guarantorCredit(uint256 _guaID) public view returns(uint256){\r\n        require(guarantorIdx[_guaID] > 0,\"ERROR:guarantorCredit not have this ID\");\r\n        uint256 guaIdx = guarantorIdx[_guaID] - 1;\r\n        \r\n        return  catToken.balanceOf(guarantors[guaIdx].credit);// - guarantors[guaIdx].creditUse;\r\n    }\r\n\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"AddPermit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldAdmin\",\"type\":\"address\"}],\"name\":\"ChangeAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"RemovePermit\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_guaID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_credit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_guaAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_commision\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_lockAddr\",\"type\":\"address\"},{\"internalType\":\"enum GuarantorDB.GUARANTOR_STATUS\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"addGuarantor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_guaID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_credit\",\"type\":\"uint256\"}],\"name\":\"addLoanCredit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addPermit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminChangeKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"catToken\",\"outputs\":[{\"internalType\":\"contract CATToken\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_guaID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_newAddr\",\"type\":\"address\"}],\"name\":\"changeAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_keyData\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"_newRootKey\",\"type\":\"bytes32\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_guaID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_credit\",\"type\":\"uint256\"}],\"name\":\"delLoanCredit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_guaID\",\"type\":\"uint256\"}],\"name\":\"guarantoInfo\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_data\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_addr\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"guarantorAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_guaID\",\"type\":\"uint256\"}],\"name\":\"guarantorCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"guarantorID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"guarantorIdx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"}],\"name\":\"guarantorsData\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_data\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_addr\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isPermit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_guaID\",\"type\":\"uint256\"}],\"name\":\"isValidGuarantor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_guaID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_defAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_leader\",\"type\":\"address\"}],\"name\":\"payDefault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"permits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removePermit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setCatToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setS1Global\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_guaID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_commision\",\"type\":\"uint256\"},{\"internalType\":\"enum GuarantorDB.GUARANTOR_STATUS\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"updateGuarantor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"GuarantorDB","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://647f2546eb9a7143eae5fed42075eef0801fbbc1736f0126808f31cda3fbcabc"}]}