{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.7.0;\r\n\r\ncontract DonationToken {\r\n    uint constant public totalSupply = 1_000_000;\r\n    mapping (address => uint) public balanceOf;\r\n    mapping (address => mapping (address => uint)) public allowance;\r\n\r\n    uint internal totalWithdrawn = 0;\r\n    mapping (address => uint) internal dividends;\r\n    mapping (address => uint) internal dividendsAt;\r\n\r\n    constructor () {\r\n        balanceOf [msg.sender] = totalSupply;\r\n    }\r\n\r\n    receive () external payable {\r\n        // Do nothing\r\n    }\r\n\r\n    function transfer (address to, uint256 value) public returns (bool success) {\r\n        success = balanceOf [msg.sender] >= value;\r\n\r\n        if (success) {\r\n            updateDividends (msg.sender);\r\n            updateDividends (to);\r\n\r\n            balanceOf [msg.sender] -= value;\r\n            balanceOf [to] += value;\r\n\r\n            emit Transfer (msg.sender, to, value);\r\n        }\r\n    }\r\n\r\n    function transferFrom (address from, address to, uint256 value) public returns (bool success) {\r\n        success = allowance [from][msg.sender] >= value && balanceOf [from] >= value;\r\n\r\n        if (success) {\r\n            updateDividends (from);\r\n            updateDividends (to);\r\n\r\n            allowance [from][msg.sender] -= value;\r\n            balanceOf [from] -= value;\r\n            balanceOf [to] += value;\r\n\r\n            emit Transfer (from, to, value);\r\n        }\r\n    }\r\n\r\n    function approve (address spender, uint256 value) public returns (bool success) {\r\n        success = true;\r\n\r\n        allowance [msg.sender][spender] = value;\r\n\r\n        emit Approval (msg.sender, spender, value);\r\n    }\r\n\r\n    function dividendsOf (address owner) public view returns (uint value) {\r\n        return (dividends [owner] + (totalDonated () - dividendsAt [owner]) * balanceOf [owner]) / totalSupply;\r\n    }\r\n\r\n    function withdrawDividends (address payable to, uint value) public returns (bool success) {\r\n        updateDividends (msg.sender);\r\n\r\n        uint sv = value * totalSupply;\r\n\r\n        success = dividends [msg.sender] >= sv;\r\n\r\n        if (success) {\r\n            dividends [msg.sender] -= sv;\r\n            totalWithdrawn += value;\r\n    \r\n            require (to.send (value));\r\n        }\r\n    }\r\n\r\n    function updateDividends (address owner) internal {\r\n        uint td = totalDonated ();\r\n\r\n        dividends [owner] += (td - dividendsAt [owner]) * balanceOf [owner];\r\n        dividendsAt [owner] = td;\r\n    }\r\n\r\n    function totalDonated () internal view returns (uint value) {\r\n        return totalWithdrawn + address (this).balance;\r\n    }\r\n\r\n    event Transfer (address indexed from, address indexed to, uint256  value);\r\n    event Approval (address indexed owner, address indexed spender, uint256 value);\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"dividendsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawDividends\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"DonationToken","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://dc631cf1fa6abf69e66f65e1169dd7a976791d2deb1d89ad9b76b5c38bdc0dde"}]}