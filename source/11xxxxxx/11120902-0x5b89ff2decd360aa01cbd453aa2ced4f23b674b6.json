{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.6.7;\r\n\r\nabstract contract DSValueLike {\r\n    function getResultWithValidity() virtual external view returns (uint256, bool);\r\n}\r\n\r\ncontract OSM {\r\n    // --- Auth ---\r\n    mapping (address => uint) public authorizedAccounts;\r\n    /**\r\n    * @notice Add auth to an account\r\n    * @param account Account to add auth to\r\n    */\r\n    function addAuthorization(address account) external isAuthorized {\r\n        authorizedAccounts[account] = 1;\r\n        emit AddAuthorization(account);\r\n    }\r\n    /**\r\n    * @notice Remove auth from an account\r\n    * @param account Account to remove auth from\r\n    */\r\n    function removeAuthorization(address account) external isAuthorized {\r\n        authorizedAccounts[account] = 0;\r\n        emit RemoveAuthorization(account);\r\n    }\r\n    /**\r\n    * @notice Checks whether msg.sender can call an authed function\r\n    **/\r\n    modifier isAuthorized {\r\n        require(authorizedAccounts[msg.sender] == 1, \"OSM/account-not-authorized\");\r\n        _;\r\n    }\r\n\r\n    // --- Stop ---\r\n    uint256 public stopped;\r\n    modifier stoppable { require(stopped == 0, \"OSM/is-stopped\"); _; }\r\n\r\n    // --- Math ---\r\n    function add(uint64 x, uint64 y) internal pure returns (uint64 z) {\r\n        z = x + y;\r\n        require(z >= x);\r\n    }\r\n\r\n    address public priceSource;\r\n    uint16  constant ONE_HOUR = uint16(3600);\r\n    uint16  public updateDelay = ONE_HOUR;\r\n    uint64  public lastUpdateTime;\r\n\r\n    struct Feed {\r\n        uint128 value;\r\n        uint128 isValid;\r\n    }\r\n\r\n    Feed currentFeed;\r\n    Feed nextFeed;\r\n\r\n    // --- Events ---\r\n    event AddAuthorization(address account);\r\n    event RemoveAuthorization(address account);\r\n    event Start();\r\n    event Stop();\r\n    event ChangePriceSource(address priceSource);\r\n    event ChangeDelay(uint16 delay);\r\n    event RestartValue();\r\n    event UpdateResult(uint256 newMedian, uint256 lastUpdateTime);\r\n\r\n    constructor (address priceSource_) public {\r\n        authorizedAccounts[msg.sender] = 1;\r\n        priceSource = priceSource_;\r\n        if (priceSource != address(0)) {\r\n          (uint256 priceFeedValue, bool hasValidValue) = getPriceSourceUpdate();\r\n          if (hasValidValue) {\r\n            nextFeed = Feed(uint128(uint(priceFeedValue)), 1);\r\n            currentFeed = nextFeed;\r\n            lastUpdateTime = latestUpdateTime(currentTime());\r\n            emit UpdateResult(uint(currentFeed.value), lastUpdateTime);\r\n          }\r\n        }\r\n        emit AddAuthorization(msg.sender);\r\n        emit ChangePriceSource(priceSource);\r\n    }\r\n\r\n    function stop() external isAuthorized {\r\n        stopped = 1;\r\n        emit Stop();\r\n    }\r\n    function start() external isAuthorized {\r\n        stopped = 0;\r\n        emit Start();\r\n    }\r\n\r\n    function changePriceSource(address priceSource_) external isAuthorized {\r\n        priceSource = priceSource_;\r\n        emit ChangePriceSource(priceSource);\r\n    }\r\n\r\n    function currentTime() internal view returns (uint) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function latestUpdateTime(uint timestamp) internal view returns (uint64) {\r\n        require(updateDelay != 0, \"OSM/update-delay-is-zero\");\r\n        return uint64(timestamp - (timestamp % updateDelay));\r\n    }\r\n\r\n    function changeDelay(uint16 delay) external isAuthorized {\r\n        require(delay > 0, \"OSM/delay-is-zero\");\r\n        updateDelay = delay;\r\n        emit ChangeDelay(updateDelay);\r\n    }\r\n\r\n    function restartValue() external isAuthorized {\r\n        currentFeed = nextFeed = Feed(0, 0);\r\n        stopped = 1;\r\n        emit RestartValue();\r\n    }\r\n\r\n    function passedDelay() public view returns (bool ok) {\r\n        return currentTime() >= add(lastUpdateTime, updateDelay);\r\n    }\r\n\r\n    function getPriceSourceUpdate() internal view returns (uint256, bool) {\r\n        try DSValueLike(priceSource).getResultWithValidity() returns (uint256 priceFeedValue, bool hasValidValue) {\r\n          return (priceFeedValue, hasValidValue);\r\n        }\r\n        catch(bytes memory) {\r\n          return (0, false);\r\n        }\r\n    }\r\n\r\n    function updateResult() external stoppable {\r\n        require(passedDelay(), \"OSM/not-passed\");\r\n        (uint256 priceFeedValue, bool hasValidValue) = getPriceSourceUpdate();\r\n        if (hasValidValue) {\r\n            currentFeed = nextFeed;\r\n            nextFeed = Feed(uint128(uint(priceFeedValue)), 1);\r\n            lastUpdateTime = latestUpdateTime(currentTime());\r\n            emit UpdateResult(uint(currentFeed.value), lastUpdateTime);\r\n        }\r\n    }\r\n\r\n    function getResultWithValidity() external view returns (uint256,bool) {\r\n        return (uint(currentFeed.value), currentFeed.isValid == 1);\r\n    }\r\n\r\n    function getNextResultWithValidity() external view returns (uint256,bool) {\r\n        return (nextFeed.value, nextFeed.isValid == 1);\r\n    }\r\n\r\n    function read() external view returns (uint256) {\r\n        require(currentFeed.isValid == 1, \"OSM/no-current-value\");\r\n        return currentFeed.value;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceSource_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"delay\",\"type\":\"uint16\"}],\"name\":\"ChangeDelay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"}],\"name\":\"ChangePriceSource\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RemoveAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RestartValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Start\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Stop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMedian\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTime\",\"type\":\"uint256\"}],\"name\":\"UpdateResult\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedAccounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"delay\",\"type\":\"uint16\"}],\"name\":\"changeDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceSource_\",\"type\":\"address\"}],\"name\":\"changePriceSource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextResultWithValidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getResultWithValidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"passedDelay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ok\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceSource\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"read\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restartValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateDelay\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"OSM","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000009f816fce2885f4dc65a7342b57ced29655fca712","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://e5d492c11dd9136bd12d65eed3b0909c7168dec291daeddb0fd607583edc68c7"}]}