{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.8.0;\r\n\r\n\r\ninterface WETHInterace {\r\n    function balanceOf(address usr) external view returns (uint256 wad);\r\n    function withdraw(uint256 wad) external;\r\n}\r\n\r\ninterface yWETHInterface {\r\n    function withdraw(uint256 wad) external;\r\n    function transferFrom(address src, address dst, uint256 wad) external returns (bool);\r\n}\r\n\r\n\r\ncontract yWETHWithdrawer {\r\n    WETHInterace private _WETH = WETHInterace(\r\n        0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\r\n    );\r\n\r\n    yWETHInterface private _yWETH = yWETHInterface(\r\n        0xe1237aA7f535b0CC33Fd973D66cBf830354D16c7\r\n    );\r\n\r\n    receive() external payable {}\r\n\r\n    function withdraw(address account, uint256 amount) external returns (uint256 received) {\r\n        require(\r\n            _yWETH.transferFrom(account, address(this), amount),\r\n            \"yWETH transfer in failed... has the allowance been set?\"\r\n        );\r\n\r\n        _yWETH.withdraw(amount);\r\n        _WETH.withdraw(_WETH.balanceOf(address(this)));\r\n\r\n        received = address(this).balance;\r\n        (bool ok, ) = account.call{value: received}(\"\");\r\n        if (!ok) {\r\n            assembly {\r\n                returndatacopy(0, 0, returndatasize())\r\n                revert(0, returndatasize())\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"yWETHWithdrawer","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://bf21cd0887925e365b066d6e7f5fbf4a09578941e04cede00d7fa4af68c0c8e6"}]}