{"status":"1","message":"OK","result":[{"SourceCode":"//SPDX-License-Identifier: Unlicense\r\n\r\npragma solidity 0.8.1;\r\n\r\n// bigshortbets.com collection contract\r\ncontract BigShortBets {\r\n    //minimum to collect\r\n    uint256 constant public minETH = 1000 ether;\r\n    //maximum pay-in w/o AML/KYC\r\n    uint256 constant public noAmlMax = 9 ether;\r\n\r\n    //list of balances\r\n    mapping(address => uint256) private balances;\r\n\r\n    //you-know-who\r\n    address constant public owner = 0x23E7f318C383a5e9af702EE11e342632006A23Cc;\r\n\r\n    //flags\r\n    bool collectEnd = false;\r\n    bool failed = false;\r\n\r\n    // now + 6 months\r\n    uint256 constant public failsafe = 1629155926;\r\n\r\n    //pay in - just send ETH to contract address\r\n    receive() external payable {\r\n        require(!collectEnd, \"Collect ended\");\r\n        uint256 amount = msg.value + balances[msg.sender];\r\n        //if you want pay in more than 9 ETH - contact staff to KYC/AML\r\n        //and pay directly to owner address\r\n        //not KYC/AML-ed payments will be treated as a donation\r\n        require(amount <= noAmlMax, \"Need KYC/AML\");\r\n        balances[msg.sender] = amount;\r\n        //fail in case that somethig* happend and collection not closed in 6 months\r\n        if (block.timestamp > failsafe) {\r\n            collectEnd = true;\r\n            failed = true;\r\n        }\r\n        //*ie you-know-who dies\r\n    }\r\n\r\n    //check balance paid in - will be needed for token distribution\r\n    function blanceOf(address user) external view returns (uint256) {\r\n        return balances[user];\r\n    }\r\n\r\n    //total collected by this contract and KYC/AML-ed collect to owner address\r\n    function totalCollected() public view returns (uint256) {\r\n        return address(this).balance + address(owner).balance;\r\n    }\r\n\r\n    //withdraw ETH if collection failed\r\n    function withdraw() external {\r\n        require(failed, \"Collect not failed\");\r\n        uint256 amount = balances[msg.sender];\r\n        balances[msg.sender] = 0;\r\n        send(msg.sender, amount);\r\n    }\r\n\r\n    //end collecting - take ETH or fail and allow to withdraw\r\n    function end() external {\r\n        require(!collectEnd, \"Collect ended\");\r\n        collectEnd = true;\r\n        require(msg.sender == owner, \"Only for owner\");\r\n        if (totalCollected() < minETH) {\r\n            failed = true;\r\n        } else {\r\n            send(owner, address(this).balance);\r\n        }\r\n    }\r\n\r\n    //internal \"gas safe\" ETH send function\r\n    function send(address user, uint256 amount) private {\r\n        bool success = false;\r\n        (success, ) = address(user).call{value: amount}(\"\");\r\n        require(success, \"Send failed\");\r\n    }\r\n}\r\n\r\n//rav3n_pl was here","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"blanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failsafe\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"noAmlMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"BigShortBets","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ad2fb0948eb4311cdb640c0a7324a40069bdb9a6e6d3be11c50aaf4b15893fa2"}]}