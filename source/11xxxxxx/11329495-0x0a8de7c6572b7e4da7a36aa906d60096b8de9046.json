{"status":"1","message":"OK","result":[{"SourceCode":"{\"ERC20.sol\":{\"content\":\"pragma solidity ^0.4.18;\\r\\n\\r\\n\\r\\n/**\\r\\n * @title ERC20\\r\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\r\\n */\\r\\ncontract ERC20 {\\r\\n  uint256 public totalSupply;\\r\\n\\r\\n  function balanceOf(address who) public view returns (uint256);\\r\\n  function transfer(address to, uint256 value) public returns (bool);\\r\\n  function allowance(address owner, address spender) public view returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\\r\\n  function approve(address spender, uint256 value) public returns (bool);\\r\\n\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n}\"},\"TimeLockWallet.sol\":{\"content\":\"pragma solidity ^0.4.18;\\r\\n\\r\\nimport \\\"./ERC20.sol\\\";\\r\\n\\r\\ncontract TimeLockedWallet {\\r\\n\\r\\n    address public creator;\\r\\n    address public owner;\\r\\n    uint256 public unlockDate;\\r\\n    uint256 public createdAt;\\r\\n\\r\\n    modifier onlyOwner {\\r\\n        require(msg.sender == owner);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(\\r\\n        address _creator,\\r\\n        address _owner,\\r\\n        uint256 _unlockDate\\r\\n    ) public {\\r\\n        creator = _creator;\\r\\n        owner = _owner;\\r\\n        unlockDate = _unlockDate;\\r\\n        createdAt = now;\\r\\n    }\\r\\n\\r\\n    // keep all the ether sent to this address\\r\\n    function() payable public { \\r\\n       emit Received(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    // callable by owner only, after specified time\\r\\n    function withdraw() onlyOwner public {\\r\\n       require(now \\u003e= unlockDate,\\\"Unlock date is in the future\\\");\\r\\n       //now send all the balance\\r\\n       msg.sender.transfer(address(this).balance);\\r\\n       emit Withdrew(msg.sender, address(this).balance);\\r\\n    }\\r\\n\\r\\n    // callable by owner only, after specified time, only for Tokens implementing ERC20\\r\\n    function releaseTokens(address _tokenContract) onlyOwner public {\\r\\n       require(now \\u003e= unlockDate,\\\"Unlock date is in the future\\\");\\r\\n       ERC20 token = ERC20(_tokenContract);\\r\\n       //now send all the token balance\\r\\n       uint256 tokenBalance = token.balanceOf(this);\\r\\n       token.transfer(owner, tokenBalance);\\r\\n       emit ReleasedTokens(_tokenContract, msg.sender, tokenBalance);\\r\\n    }\\r\\n\\r\\n    function info() public view returns(address, address, uint256, uint256, uint256) {\\r\\n        return (creator, owner, unlockDate, createdAt, address(this).balance);\\r\\n    }\\r\\n\\r\\n    event Received(address from, uint256 amount);\\r\\n    event Withdrew(address to, uint256 amount);\\r\\n    event ReleasedTokens(address tokenContract, address to, uint256 amount);\\r\\n}\"}}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"releaseTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createdAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"},{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_unlockDate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrew\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReleasedTokens\",\"type\":\"event\"}]","ContractName":"TimeLockedWallet","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000d48e6317c1016adbec45bcaff3a603aa17d2dce10000000000000000000000005e21c04355e83c1954e73da65d4c2fd97a4c4da7000000000000000000000000000000000000000000000000000000005fbfa6d0","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://ec3044f7d0bc9d0e6ed3d7f97941b491b37312f32577ec0dd8916faeb2273070"}]}