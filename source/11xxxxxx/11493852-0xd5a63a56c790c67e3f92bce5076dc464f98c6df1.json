{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity ^0.6.11;\r\n\r\ninterface Chainlog {\r\n    function getAddress(bytes32) external returns (address);\r\n}\r\n\r\ninterface AutoLine {\r\n    function exec(bytes32) external returns (uint256);\r\n}\r\n\r\ninterface IlkReg {\r\n    function list() external returns (bytes32[] memory);\r\n}\r\n\r\ncontract Autoexec {\r\n\r\n    Chainlog constant  cl = Chainlog(0xdA0Ab1e0017DEbCd72Be8599041a2aa3bA7e740F);\r\n    IlkReg   immutable ir;\r\n    AutoLine immutable al;\r\n\r\n    constructor() public {\r\n        ir = IlkReg(cl.getAddress(\"ILK_REGISTRY\"));\r\n        al = AutoLine(cl.getAddress(\"MCD_IAM_AUTO_LINE\"));\r\n    }\r\n\r\n    function bat() public {\r\n        bytes32[] memory _ilks = ir.list();\r\n        for (uint256 i = 0; i < _ilks.length; i++) {\r\n            al.exec(_ilks[i]);\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"bat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Autoexec","CompilerVersion":"v0.6.11+commit.5ef660b1","OptimizationUsed":"1","Runs":"1000000","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://1914173854a7c84c74682161ce7da4c37b373ba5ebc79d41557107b0a86c5911"}]}