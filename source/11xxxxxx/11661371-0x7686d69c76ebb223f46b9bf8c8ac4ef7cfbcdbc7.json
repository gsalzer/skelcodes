{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity >=0.7.0 <0.8.0;\r\n\r\ncontract Kaspiysk {\r\n\r\n  address payable [] public queue;\r\n  uint64[] public values;\r\n  address payable ownerAddress;\r\n  mapping (address => uint64) private fallbacks;\r\n  uint72 stock;\r\n  uint64 cursor;\r\n\r\n  constructor() {\r\n    ownerAddress = msg.sender;\r\n  }\r\n\r\n  function cacheOut() public {\r\n    uint64 amount = fallbacks[msg.sender];\r\n    if(amount > 0) {\r\n      fallbacks[msg.sender] = 0;\r\n      msg.sender.transfer(amount);\r\n    }\r\n  }\r\n\r\n  receive () external payable {\r\n    require (msg.value < 2**63);\r\n\r\n    uint64 fee = uint64(msg.value / 100);\r\n    fallbacks[ownerAddress] += fee;\r\n    stock += uint64(msg.value - fee);\r\n    queue.push(msg.sender);\r\n    values.push(uint64(msg.value + msg.value/10));\r\n    address payable addr = queue[cursor];\r\n    uint64 value = values[cursor];\r\n    if( value <= stock){\r\n      delete queue[cursor];\r\n      delete values[cursor];\r\n      stock -= value;\r\n      cursor += 1;\r\n      (bool success, ) = addr.call{value: value}(\"\");\r\n      if(!success){\r\n        fallbacks[addr] += value;\r\n      }\r\n    }\r\n  }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"cacheOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"values\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Kaspiysk","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://7b256ac7f097252933f470f6ae20a1f2ec1261f1ec1f2fe48c3db27acfb1807d"}]}