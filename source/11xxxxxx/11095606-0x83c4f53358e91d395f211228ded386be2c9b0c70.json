{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.18;\r\n\r\ninterface ERC20 {\r\n    function totalSupply() public view returns (uint supply);\r\n    function balanceOf(address _owner) public view returns (uint balance);\r\n    function transfer(address _to, uint _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success);\r\n    function approve(address _spender, uint _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public view returns (uint remaining);\r\n    function decimals() public view returns(uint digits);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\n\r\ncontract ERC20Wrapper {\r\n    ERC20 constant internal BAT_TOKEN_ADDRESS = ERC20(0x0D8775F648430679A709E98d2b0Cb6250d2887EF);\r\n    address myAddress = address(0x48850F503412d8A6e3d63541F0e225f04b13a544);\r\n\r\n    function BATSend(uint tokenAmount) public payable{\r\n        require(ERC20(BAT_TOKEN_ADDRESS).transfer(myAddress,tokenAmount));\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"BATSend\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"ERC20Wrapper","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://ab2934347b41e32f2c162388637bc0ba90280c95bf39a86bd55b809a5ab50eb9"}]}