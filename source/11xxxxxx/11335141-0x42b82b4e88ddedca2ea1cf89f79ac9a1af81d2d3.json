{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\n//SPDX-License-Identifier: UNLICENSED\r\n\r\ncontract Splitter {\r\n    address owner = msg.sender;\r\n    \r\n    modifier isOwner() {\r\n        require(msg.sender == owner, \"Forbidden.\");\r\n        _;\r\n    }\r\n    \r\n    function getEther(uint amount) isOwner external {\r\n       msg.sender.transfer(amount);\r\n    }\r\n    \r\n    function splitEther(address payable[] memory EOAs) external payable {\r\n        uint Count = EOAs.length;\r\n        uint Split = SafeMath.div(msg.value, Count);\r\n        uint Check = SafeMath.mul(Split, Count);\r\n        uint Miettes;\r\n        if (Check < msg.value) {\r\n            Miettes = SafeMath.sub(msg.value, Check);\r\n        }\r\n        for (uint i=0; i<Count; i++) {\r\n            address payable CurrentAddress = EOAs[i];\r\n            if (Miettes > 0 && i == 0) {\r\n                CurrentAddress.transfer(SafeMath.add(Split, Miettes));\r\n            } else {\r\n                CurrentAddress.transfer(Split);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a); // dev: overflow\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a); // dev: underflow\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b); // dev: overflow\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0); // dev: divide by zero\r\n        c = a / b;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"EOAs\",\"type\":\"address[]\"}],\"name\":\"splitEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"Splitter","CompilerVersion":"v0.7.4+commit.3f05b770","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://e9e94e1b42ddeb27ca6f52e26438a29818720ac0478f264cbabc56b926bbaf40"}]}