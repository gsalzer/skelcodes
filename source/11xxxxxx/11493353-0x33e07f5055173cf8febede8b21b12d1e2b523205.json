{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.7.0;\r\n\r\n/**\r\n* @title Proxy \r\n* @dev Etherland - ERC1822 Proxy contract implementation for ELAND ERC20\r\n* @dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1822.md\r\n*/\r\ncontract Proxy {\r\n    constructor(bytes memory constructData, address contractLogic) {\r\n        assembly { \r\n            sstore(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7, contractLogic)\r\n        }\r\n        (bool success, bytes memory _ ) = contractLogic.delegatecall(constructData); \r\n        require(success, \"Construction failed\");\r\n    }\r\n\r\n    fallback() external payable {\r\n        assembly { \r\n            let contractLogic := sload(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7)\r\n            calldatacopy(0x0, 0x0, calldatasize())\r\n            let success := delegatecall(sub(gas(), 10000), contractLogic, 0x0, calldatasize(), 0, 0)\r\n            let retSz := returndatasize()\r\n            returndatacopy(0, 0, retSz)\r\n            switch success\r\n            case 0 {\r\n                revert(0, retSz)\r\n            }\r\n            default {\r\n                return(0, retSz)\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"constructData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"contractLogic\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Proxy","CompilerVersion":"v0.7.5+commit.eb77ed08","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000400000000000000000000000001ab8ee0cbc2d2a2f0e09a094358f3b0aac2752680000000000000000000000000000000000000000000000000000000000000144cdc935ca00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000012000000000000000000000000073d120c6f9d60da72bf46f85c4cfb7c485f39d0000000000000000000000000754e249f3dd9523cfc68183c47dbcd990c5a2afe00000000000000000000000073777f8c3225173fcbc747435343c0a724b73fbc000000000000000000000000000000000000000000000000000000000000000945746865726c616e6400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005454c414e4400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://1de047c608c962af234b963e14bfe62aa1d9e1fab4b8194e305cb90949764070"}]}