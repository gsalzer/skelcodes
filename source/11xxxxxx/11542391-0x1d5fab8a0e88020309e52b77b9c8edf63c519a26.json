{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: None\r\npragma solidity ^0.7.4;\r\n\r\ninterface ICOVER {\r\n  function setBlacksmith(address _newBlacksmith) external returns (bool);\r\n}\r\n\r\ncontract Blacksmith {\r\n  ICOVER public cover;\r\n  address public governance;\r\n  \r\n  constructor (address _coverAddress, address _governance) {\r\n    cover = ICOVER(_coverAddress);\r\n    governance = _governance;\r\n  }\r\n\r\n\r\n  modifier onlyGovernance() {\r\n    require(msg.sender == governance, \"Blacksmith: caller not governance\");\r\n    _;\r\n  }\r\n\r\n  /// @notice transfer minting rights to new blacksmith\r\n  function transferMintingRights(address _newAddress) external onlyGovernance {\r\n    cover.setBlacksmith(_newAddress);\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coverAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"cover\",\"outputs\":[{\"internalType\":\"contract ICOVER\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"transferMintingRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Blacksmith","CompilerVersion":"v0.7.4+commit.3f05b770","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000005d8d9f5b96f4438195be9b99eee6118ed4304286000000000000000000000000c698645b5c5b662b52a5a5c092804f23e3f5b4c5","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://00bfb6c60bd3fe7a42699838cabe4cf18f86f747c9e17570b128f5e2f34af782"}]}