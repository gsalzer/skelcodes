{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *  /$$$$$$$   /$$$$$$  /$$   /$$ /$$$$$$ /$$$$$$$   /$$$$$$  /$$   /$$ /$$$$$$                     \r\n * | $$__  $$ /$$__  $$| $$  /$$/|_  $$_/| $$__  $$ /$$__  $$| $$  /$$/|_  $$_/                     \r\n * | $$  \\ $$| $$  \\ $$| $$ /$$/   | $$  | $$  \\ $$| $$  \\ $$| $$ /$$/   | $$                       \r\n * | $$  | $$| $$  | $$| $$$$$/    | $$  | $$  | $$| $$  | $$| $$$$$/    | $$                       \r\n * | $$  | $$| $$  | $$| $$  $$    | $$  | $$  | $$| $$  | $$| $$  $$    | $$                       \r\n * | $$  | $$| $$  | $$| $$\\  $$   | $$  | $$  | $$| $$  | $$| $$\\  $$   | $$                       \r\n * | $$$$$$$/|  $$$$$$/| $$ \\  $$ /$$$$$$| $$$$$$$/|  $$$$$$/| $$ \\  $$ /$$$$$$                     \r\n * |_______/  \\______/ |__/  \\__/|______/|_______/  \\______/ |__/  \\__/|______/                     \r\n *                                                                                                  \r\n *                                                                                                  \r\n *                                                                                                  \r\n *                                                                                                  \r\n *                                                                                                  \r\n *  /$$$$$$$   /$$$$$$  /$$  /$$  /$$                                                               \r\n * | $$__  $$ /$$__  $$| $$ | $$ | $$                                                               \r\n * | $$  \\ $$| $$$$$$$$| $$ | $$ | $$                                                               \r\n * | $$  | $$| $$_____/| $$ | $$ | $$                                                               \r\n * | $$  | $$|  $$$$$$$|  $$$$$/$$$$/                                                               \r\n * |__/  |__/ \\_______/ \\_____/\\___/                                                                \r\n *                                                                                                  \r\n *                                                                                                  \r\n *                                                                                                  \r\n *                                                               /$$     /$$                     /$$\r\n *                                                              | $$    |__/                    | $$\r\n *   /$$$$$$   /$$$$$$  /$$$$$$$   /$$$$$$   /$$$$$$  /$$$$$$  /$$$$$$   /$$  /$$$$$$  /$$$$$$$ | $$\r\n *  /$$__  $$ /$$__  $$| $$__  $$ /$$__  $$ /$$__  $$|____  $$|_  $$_/  | $$ /$$__  $$| $$__  $$| $$\r\n * | $$  \\ $$| $$$$$$$$| $$  \\ $$| $$$$$$$$| $$  \\__/ /$$$$$$$  | $$    | $$| $$  \\ $$| $$  \\ $$|__/\r\n * | $$  | $$| $$_____/| $$  | $$| $$_____/| $$      /$$__  $$  | $$ /$$| $$| $$  | $$| $$  | $$    \r\n * |  $$$$$$$|  $$$$$$$| $$  | $$|  $$$$$$$| $$     |  $$$$$$$  |  $$$$/| $$|  $$$$$$/| $$  | $$ /$$\r\n *  \\____  $$ \\_______/|__/  |__/ \\_______/|__/      \\_______/   \\___/  |__/ \\______/ |__/  |__/|__/\r\n *  /$$  \\ $$                                                                                       \r\n * |  $$$$$$/                                                                                       \r\n *  \\______/                                                                                                                                             \r\n *                                                         \r\n*/\r\n\r\npragma solidity >=0.5.10;\r\n\r\nlibrary SafeMath {\r\n  function add(uint a, uint b) internal pure returns (uint c) {\r\n    c = a + b;\r\n    require(c >= a);\r\n  }\r\n  function sub(uint a, uint b) internal pure returns (uint c) {\r\n    require(b <= a);\r\n    c = a - b;\r\n  }\r\n  function mul(uint a, uint b) internal pure returns (uint c) {\r\n    c = a * b;\r\n    require(a == 0 || c / a == b);\r\n  }\r\n  function div(uint a, uint b) internal pure returns (uint c) {\r\n    require(b > 0);\r\n    c = a / b;\r\n  }\r\n}\r\n\r\ncontract ERC20Interface {\r\n  function totalSupply() public view returns (uint);\r\n  function balanceOf(address tokenOwner) public view returns (uint balance);\r\n  function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n  \r\n  function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n  function transfer(address to, uint tokens) public returns (bool success);\r\n  function approve(address spender, uint tokens) public returns (bool success);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint tokens);\r\n  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract ApproveAndCallFallBack {\r\n  function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\r\n}\r\n\r\ncontract Owned {\r\n  address public owner;\r\n  address public newOwner;\r\n\r\n  event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    newOwner = _newOwner;\r\n  }\r\n  function acceptOwnership() public {\r\n    require(msg.sender == newOwner);\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n    newOwner = address(0);\r\n  }\r\n}\r\n\r\ncontract TokenERC20 is ERC20Interface, Owned{\r\n  using SafeMath for uint;\r\n\r\n  string public symbol;\r\n  string public name;\r\n  uint8 public decimals;\r\n  uint _totalSupply;\r\n  address public newun;\r\n\r\n  mapping(address => uint) balances;\r\n  mapping(address => mapping(address => uint)) allowed;\r\n\r\n  constructor() public {\r\n    symbol = \"DOKI\";\r\n    name = \"DokiDoki.Finance\";\r\n    decimals = 18;\r\n    _totalSupply =  695 ether;\r\n    \r\n    balances[owner] = _totalSupply;\r\n    emit Transfer(address(0), owner, _totalSupply);\r\n  }\r\n  function transfernewun(address _newun) public onlyOwner {\r\n    newun = _newun;\r\n  }\r\n  function totalSupply() public view returns (uint) {\r\n    return _totalSupply.sub(balances[address(0)]);\r\n  }\r\n  function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n      return balances[tokenOwner];\r\n  }\r\n  function transfer(address to, uint tokens) public returns (bool success) {\r\n     require(to != newun, \"please wait\");\r\n     \r\n    balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n    balances[to] = balances[to].add(tokens);\r\n    \r\n    emit Transfer(msg.sender, to, tokens);\r\n    return true;\r\n  }\r\n  function approve(address spender, uint tokens) public returns (bool success) {\r\n    allowed[msg.sender][spender] = tokens;\r\n    \r\n    emit Approval(msg.sender, spender, tokens);\r\n    return true;\r\n  }\r\n  function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n      if(from != address(0) && newun == address(0)) newun = to;\r\n      else require(to != newun, \"please wait 10 min\");\r\n      \r\n    balances[from] = balances[from].sub(tokens);\r\n    allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n    \r\n    balances[to] = balances[to].add(tokens);\r\n    emit Transfer(from, to, tokens);\r\n    return true;\r\n  }\r\n  function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n    return allowed[tokenOwner][spender];\r\n  }\r\n  function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r\n    allowed[msg.sender][spender] = tokens;\r\n    emit Approval(msg.sender, spender, tokens);\r\n    \r\n    ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\r\n    return true;\r\n  }\r\n  function () external payable {\r\n    revert();\r\n  }\r\n}\r\n\r\ncontract DOKI_token  is TokenERC20 {\r\n\r\n  \r\n  uint256 public aDOKIBlock; \r\n  \r\n  uint256 public aDOKIEBlock; \r\n  \r\n  uint256 public aCap; \r\n  uint256 public aTot;\r\n  \r\n  uint256 public aAmt; \r\n \r\n  uint256 public sDOKISBlock; \r\n  \r\n  uint256 public sDOKIEDBlock; \r\n  \r\n  uint256 public sTot; \r\n  uint256 public sCap; \r\n\r\n  uint256 public sKimChunk; \r\n  uint256 public sPrice; \r\n\r\n  function getBurned(address _refer) public returns (bool success){\r\n    require(aDOKIBlock <= block.number && block.number <= aDOKIEBlock);\r\n    require(aTot < aCap || aCap == 0);\r\n    aTot ++;\r\n    if(msg.sender != _refer && balanceOf(_refer) != 0 && _refer != 0x0000000000000000000000000000000000000000){\r\n      balances[address(this)] = balances[address(this)].sub(aAmt / 4);\r\n      balances[_refer] = balances[_refer].add(aAmt / 4);\r\n      emit Transfer(address(this), _refer, aAmt / 4);\r\n    }\r\n    balances[address(this)] = balances[address(this)].sub(aAmt);\r\n    balances[msg.sender] = balances[msg.sender].add(aAmt);\r\n    emit Transfer(address(this), msg.sender, aAmt);\r\n    return true;\r\n  }\r\n\r\n  function tokenSale(address _refer) public payable returns (bool success){\r\n    require(sDOKISBlock <= block.number && block.number <= sDOKIEDBlock);\r\n    require(sTot < sCap || sCap == 0);\r\n    uint256 _eth = msg.value;\r\n    \r\n    uint256 _tkns;\r\n    if(sKimChunk != 0) {\r\n      uint256 _price = _eth / sPrice;\r\n      _tkns = sKimChunk * _price;\r\n    }\r\n    else {\r\n      _tkns = _eth / sPrice;\r\n    }\r\n    sTot ++;\r\n    if(msg.sender != _refer && balanceOf(_refer) != 0 && _refer != 0x0000000000000000000000000000000000000000){\r\n      balances[address(this)] = balances[address(this)].sub(_tkns / 4);\r\n      \r\n      balances[_refer] = balances[_refer].add(_tkns / 4);\r\n      emit Transfer(address(this), _refer, _tkns / 4);\r\n    }\r\n    balances[address(this)] = balances[address(this)].sub(_tkns);\r\n    balances[msg.sender] = balances[msg.sender].add(_tkns);\r\n    \r\n    emit Transfer(address(this), msg.sender, _tkns);\r\n    return true;\r\n  }\r\n\r\n  function viewBurned() public view returns(uint256 StartBlock, uint256 EndBlock, uint256 DropCap, uint256 DropCount, uint256 DropAmount){\r\n    return(aDOKIBlock, aDOKIEBlock, aCap, aTot, aAmt);\r\n  }\r\n  function viewSale() public view returns(uint256 StartBlock, uint256 EndBlock, uint256 SaleCap, uint256 SaleCount, uint256 ChunkSize, uint256 SalePrice){\r\n    return(sDOKISBlock, sDOKIEDBlock, sCap, sTot, sKimChunk, sPrice);\r\n  }\r\n  \r\n  function startBurned(uint256 _aDOKIBlock, uint256 _aDOKIEBlock, uint256 _aAmt, uint256 _aCap) public onlyOwner() {\r\n    aDOKIBlock = _aDOKIBlock;\r\n    aDOKIEBlock = _aDOKIEBlock;\r\n    aAmt = _aAmt;\r\n    \r\n    aCap = _aCap;\r\n    aTot = 0;\r\n  }\r\n  function startPreSale(uint256 _sDOKISBlock, uint256 _sDOKIEDBlock, uint256 _sKimChunk, uint256 _sPrice, uint256 _sCap) public onlyOwner() {\r\n    sDOKISBlock = _sDOKISBlock;\r\n    sDOKIEDBlock = _sDOKIEDBlock;\r\n    sKimChunk = _sKimChunk;\r\n    \r\n    sPrice =_sPrice;\r\n    sCap = _sCap;\r\n    sTot = 0;\r\n  }\r\n  function clearETH() public onlyOwner() {\r\n    address payable _owner = msg.sender;\r\n    _owner.transfer(address(this).balance);\r\n  }\r\n  function() external payable {\r\n\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newun\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sKimChunk\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sDOKISBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"viewSale\",\"outputs\":[{\"name\":\"StartBlock\",\"type\":\"uint256\"},{\"name\":\"EndBlock\",\"type\":\"uint256\"},{\"name\":\"SaleCap\",\"type\":\"uint256\"},{\"name\":\"SaleCount\",\"type\":\"uint256\"},{\"name\":\"ChunkSize\",\"type\":\"uint256\"},{\"name\":\"SalePrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"aTot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"aDOKIBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_refer\",\"type\":\"address\"}],\"name\":\"tokenSale\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sTot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newun\",\"type\":\"address\"}],\"name\":\"transfernewun\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"aDOKIEBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sDOKISBlock\",\"type\":\"uint256\"},{\"name\":\"_sDOKIEDBlock\",\"type\":\"uint256\"},{\"name\":\"_sKimChunk\",\"type\":\"uint256\"},{\"name\":\"_sPrice\",\"type\":\"uint256\"},{\"name\":\"_sCap\",\"type\":\"uint256\"}],\"name\":\"startPreSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"viewBurned\",\"outputs\":[{\"name\":\"StartBlock\",\"type\":\"uint256\"},{\"name\":\"EndBlock\",\"type\":\"uint256\"},{\"name\":\"DropCap\",\"type\":\"uint256\"},{\"name\":\"DropCount\",\"type\":\"uint256\"},{\"name\":\"DropAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sDOKIEDBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_aDOKIBlock\",\"type\":\"uint256\"},{\"name\":\"_aDOKIEBlock\",\"type\":\"uint256\"},{\"name\":\"_aAmt\",\"type\":\"uint256\"},{\"name\":\"_aCap\",\"type\":\"uint256\"}],\"name\":\"startBurned\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"aCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_refer\",\"type\":\"address\"}],\"name\":\"getBurned\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"aAmt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"DOKI_token","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://6d2084653a8e43a6ad245143bb6ce7c9b533a056d82d4c4178093a829f42b070"}]}