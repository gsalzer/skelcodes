{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/E/Projects/Me/gemly-contracts/contracts/access/Governance.sol\": {\r\n      \"content\": \"// \\\"SPDX-License-Identifier: MIT\\\"\\r\\npragma solidity 0.6.12;\\r\\n\\r\\ncontract Governance {\\r\\n  address public owner;\\r\\n  address public ownerCandidate;\\r\\n\\r\\n  address public boosterEscrow;\\r\\n\\r\\n  mapping(address => bool) public games;\\r\\n  mapping(address => bool) public gemlyMinters;\\r\\n  mapping(address => bool) public gameMinters;\\r\\n\\r\\n  event OwnerCandidateSet(address indexed ownerCandidate);\\r\\n  event OwnerConfirmed(address indexed owner);\\r\\n  event BoosterEscrowSet(address indexed escrow);\\r\\n  event GemlyMinterGranted(address indexed minter);\\r\\n  event GemlyMinterRevoked(address indexed minter);\\r\\n  event GameMinterGranted(address indexed minter);\\r\\n  event GameMinterRevoked(address indexed minter);\\r\\n  event GameGranted(address indexed game);\\r\\n  event GameRevoked(address indexed game);\\r\\n\\r\\n  constructor() public {\\r\\n    owner = msg.sender;\\r\\n  }\\r\\n\\r\\n  modifier onlyOwner() {\\r\\n    require(isOwner(msg.sender), \\\"Not owner\\\");\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  modifier onlyOwnerCandidate() {\\r\\n    require(isOwnerCandidate(msg.sender), \\\"Not owner candidate\\\");\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function setOwnerCandidate(address _ownerCandidate) external onlyOwner {\\r\\n    require(_ownerCandidate != address(0), \\\"New owner shouldn't be empty\\\");\\r\\n    ownerCandidate = _ownerCandidate;\\r\\n\\r\\n    emit OwnerCandidateSet(ownerCandidate);\\r\\n  }\\r\\n\\r\\n  function confirmOwner() external onlyOwnerCandidate {\\r\\n    owner = ownerCandidate;\\r\\n    ownerCandidate = address(0x0);\\r\\n\\r\\n    emit OwnerConfirmed(owner);\\r\\n  }\\r\\n\\r\\n  function setBoosterEscrow(address _escrow) external onlyOwner {\\r\\n    boosterEscrow = _escrow;\\r\\n\\r\\n    emit BoosterEscrowSet(boosterEscrow);\\r\\n  }\\r\\n\\r\\n  function grantGemlyMinter(address _minter) external onlyOwner {\\r\\n    gemlyMinters[_minter] = true;\\r\\n\\r\\n    emit GemlyMinterGranted(_minter);\\r\\n  }\\r\\n\\r\\n  function revokeGemlyMinter(address _minter) external onlyOwner {\\r\\n    gemlyMinters[_minter] = false;\\r\\n\\r\\n    emit GemlyMinterRevoked(_minter);\\r\\n  }\\r\\n\\r\\n  function grantGameMinter(address _minter) external onlyOwner {\\r\\n    gameMinters[_minter] = true;\\r\\n\\r\\n    emit GameMinterGranted(_minter);\\r\\n  }\\r\\n\\r\\n  function revokeGameMinter(address _minter) external onlyOwner {\\r\\n    gameMinters[_minter] = false;\\r\\n\\r\\n    emit GameMinterRevoked(_minter);\\r\\n  }\\r\\n\\r\\n  function grantGame(address _minter) external onlyOwner {\\r\\n    games[_minter] = true;\\r\\n\\r\\n    emit GameGranted(_minter);\\r\\n  }\\r\\n\\r\\n  function revokeGame(address _minter) external onlyOwner {\\r\\n    games[_minter] = false;\\r\\n\\r\\n    emit GameRevoked(_minter);\\r\\n  }\\r\\n\\r\\n  function isOwner(address _account) public view returns (bool) {\\r\\n    return _account == owner;\\r\\n  }\\r\\n\\r\\n  function isOwnerCandidate(address _account) public view returns (bool) {\\r\\n    return _account == ownerCandidate;\\r\\n  }\\r\\n\\r\\n  function isGemlyMinter(address _minter) public view returns (bool) {\\r\\n    return gemlyMinters[_minter];\\r\\n  }\\r\\n\\r\\n  function isGameMinter(address _minter) public view returns (bool) {\\r\\n    return gameMinters[_minter];\\r\\n  }\\r\\n\\r\\n  function isGame(address _game) public view returns (bool) {\\r\\n    return games[_game];\\r\\n  }\\r\\n\\r\\n  function isBoosterEscrow(address _address) public view returns (bool) {\\r\\n    return _address == boosterEscrow;\\r\\n  }\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 9999\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"}],\"name\":\"BoosterEscrowSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"}],\"name\":\"GameGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"GameMinterGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"GameMinterRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"}],\"name\":\"GameRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"GemlyMinterGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"GemlyMinterRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ownerCandidate\",\"type\":\"address\"}],\"name\":\"OwnerCandidateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerConfirmed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"boosterEscrow\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gameMinters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gemlyMinters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"grantGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"grantGameMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"grantGemlyMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isBoosterEscrow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_game\",\"type\":\"address\"}],\"name\":\"isGame\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"isGameMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"isGemlyMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isOwnerCandidate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerCandidate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"revokeGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"revokeGameMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"revokeGemlyMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_escrow\",\"type\":\"address\"}],\"name\":\"setBoosterEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerCandidate\",\"type\":\"address\"}],\"name\":\"setOwnerCandidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Governance","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"9999","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}