{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n// ----------------------------------------------------------------------------\r\n// CHIP Utility Token\r\n//\r\n// Symbol        : CHIP\r\n// Name          : CHIP Utility Token\r\n// Initial supply: 100,000,000.000000\r\n// Decimals      : 6\r\n// ----------------------------------------------------------------------------\r\npragma solidity ^0.7.4;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Safe maths\r\n// ----------------------------------------------------------------------------\r\nlibrary SafeMath {\r\n    function addSafe(uint _a, uint _b) internal pure returns (uint c) {\r\n        c = _a + _b;\r\n        require(c >= _a);\r\n    }\r\n    function subSafe(uint _a, uint _b) internal pure returns (uint c) {\r\n        require(_b <= _a, \"Insufficient balance\");\r\n        c = _a - _b;\r\n    }\r\n    function mulSafe(uint _a, uint _b) internal pure returns (uint c) {\r\n        c = _a * _b;\r\n        require(_a == 0 || c / _a == _b);\r\n    }\r\n    function divSafe(uint _a, uint _b) internal pure returns (uint c) {\r\n        require(_b > 0);\r\n        c = _a / _b;\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\r\n// ----------------------------------------------------------------------------\r\ninterface ERC20Interface {\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address _tokenOwner) external view returns (uint);\r\n    function allowance(address _tokenOwner, address _spender) external view returns (uint);\r\n    function transfer(address _to, uint _amount) external returns (bool);\r\n    function approve(address _spender, uint _amount) external returns (bool);\r\n    function transferFrom(address _from, address _to, uint _amount) external returns (bool);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint _tokens);\r\n    event Approval(address indexed _tokenOwner, address indexed _spender, uint _tokens);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Contract function to receive approval and execute function in one call\r\n// ----------------------------------------------------------------------------\r\ninterface ApproveAndCallFallBack {\r\n    function receiveApproval(address _tokenOwner, uint256 _amount, address _token, bytes memory _data) external;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Owned contract\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC20 Token, with the addition of symbol, name and decimals and a\r\n// fixed supply\r\n// ----------------------------------------------------------------------------\r\ncontract CHIPToken is ERC20Interface, Owned {\r\n    using SafeMath for uint;\r\n\r\n    string public constant symbol = \"CHIP\";\r\n    string public constant name = \"CHIP Utility Token\";\r\n    uint public constant decimals = 6;\r\n    uint totalSupplyAmount;\r\n\r\n    mapping(address => uint) public balances;\r\n    mapping(address => mapping(address => uint)) public allowed;\r\n\r\n    address public serviceContractAddress;\r\n\r\n    constructor() {\r\n        totalSupplyAmount = 100000000 * 10**uint(decimals);\r\n        emit Mint(totalSupplyAmount);\r\n\r\n        balances[owner] = totalSupplyAmount;\r\n        emit Transfer(address(0), owner, totalSupplyAmount);\r\n    }\r\n\r\n    // Fix for the ERC20 short address attack\r\n    modifier onlyPayloadSize(uint _size) {\r\n        require(msg.data.length == _size + 4, \"Input length error\");\r\n        _;\r\n    }\r\n\r\n    // When new coins are minted after contract creation\r\n    event Mint(uint _amount);\r\n\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // Standard ERC20 implementations\r\n    // ----------------------------------------------------------------------------\r\n    // Read\r\n    function totalSupply() public override view returns (uint) {\r\n        return totalSupplyAmount.subSafe(balances[address(0)]);\r\n    }\r\n    function balanceOf(address _tokenOwner) public override view returns (uint) {\r\n        return balances[_tokenOwner];\r\n    }\r\n    function allowance(address _tokenOwner, address _spender) public override view returns (uint) {\r\n        return allowed[_tokenOwner][_spender];\r\n    }\r\n\r\n    // Write\r\n    function transfer(address _to, uint _amount) public override onlyPayloadSize(2 * 32) returns (bool) {\r\n        require(_to != address(this), \"Can not transfer to this\");\r\n        if(serviceContractAddress != address(0)) require(_to != serviceContractAddress, \"Address not allowed\");\r\n\r\n        balances[msg.sender] = balances[msg.sender].subSafe(_amount);\r\n        balances[_to] = balances[_to].addSafe(_amount);\r\n        emit Transfer(msg.sender, _to, _amount);\r\n        return true;\r\n    }\r\n    function approve(address _spender, uint _amount) public override onlyPayloadSize(2 * 32) returns (bool) {\r\n        require(_amount <= balances[msg.sender], \"Insufficient balance\");\r\n\r\n        // To change the approve amount you first have to reduce the`\r\n        // allowance to zero by calling `approve(_spender, 0)` if it is not\r\n        // already 0 to mitigate the race condition described here:\r\n        // https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n        if(_amount > 0) require(allowed[msg.sender][_spender] == 0, \"Zero allowance first\");\r\n\r\n        allowed[msg.sender][_spender] = _amount;\r\n        emit Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n    function transferFrom(address _tokenOwner, address _to, uint _amount) public override onlyPayloadSize(3 * 32) returns (bool) {\r\n        require(_to != address(this), \"Can not transfer to this\");\r\n        allowed[_tokenOwner][msg.sender] = allowed[_tokenOwner][msg.sender].subSafe(_amount);\r\n        balances[_tokenOwner] = balances[_tokenOwner].subSafe(_amount);\r\n        balances[_to] = balances[_to].addSafe(_amount);\r\n        emit Transfer(_tokenOwner, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // Other admin, common and courtesy functions\r\n    // ----------------------------------------------------------------------------\r\n    function approveAndCall(address _spender, uint _amount, bytes memory _data) public returns (bool) {\r\n        // Prevent ERC20 short address attack\r\n        // _data length is not fixed. These bytes are packed into 32 byte chunks\r\n        uint length256;\r\n        if(_data.length > 0) {\r\n            length256 = _data.length / 32;\r\n            if(32 * length256 < _data.length) length256++;\r\n        }\r\n        require(msg.data.length == (((4 + length256) * 32) + 4), \"Input length error\");\r\n        require(_amount <= balances[msg.sender], \"Insufficient balance\");\r\n\r\n        // To change the approve amount you first have to reduce the`\r\n        // allowance to zero by calling `approve(_spender, 0)` if it is not\r\n        // already 0 to mitigate the race condition described here:\r\n        // https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n        if(_amount > 0) require(allowed[msg.sender][_spender] == 0, \"Zero allowance first\");\r\n\r\n        allowed[msg.sender][_spender] = _amount;\r\n        emit Approval(msg.sender, _spender, _amount);\r\n        ApproveAndCallFallBack(_spender).receiveApproval(msg.sender, _amount, address(this), _data);\r\n        return true;\r\n    }\r\n    function mint(uint _newTokens) public onlyOwner {\r\n        totalSupplyAmount = totalSupplyAmount.addSafe(_newTokens);\r\n        emit Mint(totalSupplyAmount);\r\n\r\n        balances[owner] = balances[owner].addSafe(_newTokens);\r\n        emit Transfer(address(0), owner, _newTokens);\r\n    }\r\n    function totalOutstanding() public view returns (uint) {\r\n        // Outstanding token = total supply - contract owner - burned\r\n        uint outOfCirculation;\r\n        if(owner == address(0)) outOfCirculation = balances[address(0)];\r\n        else outOfCirculation = balances[address(0)].addSafe(balances[owner]);\r\n        return totalSupplyAmount.subSafe(outOfCirculation);\r\n    }\r\n    function setServiceContractAddress(address _setAddress) public onlyOwner onlyPayloadSize(1 * 32) {\r\n        // Prevent lost coins in companion service contract when user accidentally calls transfer()\r\n        serviceContractAddress = _setAddress;\r\n    }\r\n    // Retrieve any ERC20 tokens accidentally sent to this contract for owner\r\n    function transferAnyERC20Token(address _fromTokenContract, uint _amount) public onlyOwner returns (bool success) {\r\n        return ERC20Interface(_fromTokenContract).transfer(owner, _amount);\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTokens\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"serviceContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_setAddress\",\"type\":\"address\"}],\"name\":\"setServiceContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalOutstanding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fromTokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"CHIPToken","CompilerVersion":"v0.7.4+commit.3f05b770","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://be958db6c376f7d840455da9a2344d71bed0a88f233f39f0cb197f8fe434ac09"}]}