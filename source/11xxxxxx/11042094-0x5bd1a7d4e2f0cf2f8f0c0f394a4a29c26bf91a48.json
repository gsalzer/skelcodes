{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract MayKinFunds {\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    event treePlanted(address indexed contributor, uint256 amount);\r\n    uint256 constant private MAX_UINT = 2**256 - 1;\r\n    mapping(address=>uint256) public balances;\r\n    mapping(address=>mapping(address=>uint256))public allowed;\r\n    mapping(address=>uint256) public BofC;\r\n    mapping(address=>uint256)public treeContribution;\r\n    mapping(address=>uint256) public treesPlanted;\r\n    string public constant name = \"MayKinFund\";\r\n    string public constant symbol = \"love\";\r\n    uint8 public constant decimals = 18;\r\n    uint256 public constant tillNextTree = 1e18 * 100;\r\n    uint256 public constant totalSupply = 5000000000000000000000000;\r\n    address private constant owner = 0x7219E5c8767861CEa48Fe53feCCD2770f5310BF2;\r\n    address adr = address(this);\r\n    \r\n    address payable wall = address(uint160(adr));\r\n    function add(uint256 a, uint256 b) internal pure\r\n    returns(uint256){\r\n        uint256 c = a + b;\r\n        assert(c>=a);\r\n        return c;\r\n    }\r\n    \r\n    function plantCheck(address _from, uint256 _amount)internal view returns(uint256){\r\n        \r\n        uint256 conT = treeContribution[_from] + _amount;\r\n        if(conT<=tillNextTree){\r\n            return 1;\r\n        } else {\r\n            return conT / tillNextTree;\r\n\r\n        }\r\n    }\r\n    function sub(uint256 a, uint256 b)internal\r\n    pure returns(uint256){\r\n        assert(b<=a);\r\n        return a - b;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal\r\n    pure returns(uint256){\r\n        uint256 c = a * b;\r\n        assert(b == c / a);\r\n        return c;\r\n    }\r\n    function balanceOf(address _owner)public view\r\n    returns(uint256){\r\n        return balances[_owner];\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value)public\r\n    returns(bool success){\r\n        require(balances[msg.sender] >= _value);\r\n        balances[msg.sender] = sub(balances[msg.sender], _value);\r\n        \r\n        balances[_to] = add(balances[_to], _value);\r\n        treeContribution[msg.sender]=add(treeContribution[msg.sender], _value);\r\n        uint256 up = plantCheck(msg.sender, _value);\r\n        if(up > treesPlanted[msg.sender]){\r\n            treesPlanted[msg.sender]= up;\r\n            emit treePlanted(msg.sender,up);\r\n        }\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    function transferFrom(address _from, address _to, uint256 _value)public\r\n    returns(bool success){\r\n        \r\n        require(balances[_from]>=_value\r\n        && allowed[_from][msg.sender]>=_value);\r\n        balances[_from] = sub(balances[_from], _value);\r\n        balances[_to] = add(balances[_to], _value);\r\n        treeContribution[_from] = add(treeContribution[_from], _value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    function approve(address _spender, uint256 _value)public\r\n    returns(bool success){\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    function allowance(address _owner,address _spender)public view\r\n    returns(uint256){\r\n        return allowed[_owner][_spender];\r\n    }\r\n    constructor() public{\r\n        balances[wall] = totalSupply/2;\r\n        balances[owner] = totalSupply/2;\r\n    }\r\n    function withdrawl(uint256 _value)public returns(bool success){\r\n        require(msg.sender == owner);\r\n        require(BofC[wall]>=_value);\r\n        BofC[wall] = sub(BofC[wall],_value);\r\n        \r\n        owner.call.value(_value)(\"\");\r\n        return true;\r\n    }\r\n    function() external payable{\r\n        BofC[wall] = add(BofC[wall],msg.value);\r\n        uint256 buyAmount = mul(msg.value,100);\r\n        if(balances[wall]>=buyAmount \r\n        && buyAmount >0){\r\n            balances[msg.sender] = add(balances[msg.sender],buyAmount);\r\n            treeContribution[msg.sender] = add(treeContribution[msg.sender],buyAmount);\r\n            uint256 up = plantCheck(msg.sender, treeContribution[msg.sender]);\r\n            if(up>treesPlanted[msg.sender]){\r\n                treesPlanted[msg.sender]=up;\r\n                emit treePlanted(msg.sender, up);\r\n            }\r\n            balances[wall] = sub(balances[wall], buyAmount);\r\n            emit Transfer(wall, msg.sender, buyAmount);\r\n        } else {\r\n            treeContribution[msg.sender]=add(treeContribution[msg.sender],buyAmount);\r\n\r\n            }\r\n        }\r\n    \r\n    \r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"treePlanted\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"BofC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tillNextTree\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"treeContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"treesPlanted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawl\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MayKinFunds","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://bd4fb3c2c118cb2ca8a8e49b7b4e8f512a53f190efb1f65659d7ab2bed8a7b1b"}]}