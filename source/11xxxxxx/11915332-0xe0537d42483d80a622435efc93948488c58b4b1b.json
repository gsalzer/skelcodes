{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract RegisterManager {\r\n    uint public roomFee = 0.01 ether;\r\n    uint public systemFee = 0.05 ether;\r\n    address public admin;\r\n    mapping(address => bool) public isSystemRegistered;\r\n    mapping(uint => mapping(address => bool)) private _isRoomRegistered;\r\n\r\n    event SystemRegistered(address registrant);\r\n    event SystemUnregistered(address registrant);\r\n    event RoomRegistered(address registrant, uint room_id);\r\n    event RoomUnregistered(address registrant, uint room_id);\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"Not admin\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        admin = msg.sender;\r\n    }\r\n\r\n   function systemRegister() external payable {\r\n        require(msg.value == systemFee, \"Wrong ETH value!\");\r\n        require(!isSystemRegistered[msg.sender], \"Already Registered!\");\r\n        isSystemRegistered[msg.sender] = true;\r\n        emit SystemRegistered(msg.sender);\r\n    }\r\n\r\n    function roomRegister(uint roomId) external payable {\r\n        require(msg.value == roomFee, \"Wrong ETH value!\");\r\n        require(isSystemRegistered[msg.sender], \"Unregistered in System!\");\r\n        require(!_isRoomRegistered[roomId][msg.sender], \"Already Registered!\");\r\n        _isRoomRegistered[roomId][msg.sender] = true;\r\n        emit RoomRegistered(msg.sender, roomId);\r\n    }\r\n\r\n    function isRoomRegistered(uint roomId, address registrant) external view returns(bool) {\r\n        if (!isSystemRegistered[registrant]) return false;\r\n        return _isRoomRegistered[roomId][registrant];\r\n    }\r\n\r\n    // Admin functions\r\n    function setSystemFee(uint _systemFee) external onlyAdmin {\r\n        systemFee = _systemFee;\r\n    }\r\n\r\n    function setRoomFee(uint _roomFee) external onlyAdmin {\r\n        roomFee = _roomFee;\r\n    }\r\n\r\n    function setAdmin(address newAdmin) external onlyAdmin {\r\n        admin = newAdmin;\r\n    }\r\n\r\n    function roomUnregister(uint roomId, address registrant) external onlyAdmin {\r\n        require(!isSystemRegistered[registrant], \"Unexist registrant!\");\r\n        require(_isRoomRegistered[roomId][registrant], \"Unexist registrant in the room!\");\r\n        _isRoomRegistered[roomId][registrant] = false;\r\n        emit RoomUnregistered(msg.sender, roomId);\r\n    }\r\n\r\n    function systemUnregister(address registrant) external onlyAdmin {\r\n        require(isSystemRegistered[registrant], \"Unexist registrant!\");\r\n        isSystemRegistered[registrant] = false;\r\n        emit SystemUnregistered(registrant);\r\n    }\r\n\r\n    function withdraw() external onlyAdmin {\r\n        uint balance = address(this).balance;\r\n        require(balance > 0, \"Insufficient balance\");\r\n        if (!payable(msg.sender).send(balance)) {\r\n            payable(msg.sender).transfer(balance);\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"room_id\",\"type\":\"uint256\"}],\"name\":\"RoomRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"room_id\",\"type\":\"uint256\"}],\"name\":\"RoomUnregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"SystemRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"SystemUnregistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roomId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"isRoomRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSystemRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roomFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roomId\",\"type\":\"uint256\"}],\"name\":\"roomRegister\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roomId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"roomUnregister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roomFee\",\"type\":\"uint256\"}],\"name\":\"setRoomFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_systemFee\",\"type\":\"uint256\"}],\"name\":\"setSystemFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemRegister\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"systemUnregister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"RegisterManager","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://3b99f52242acede34abfc3fde3cc31d06d0ca8b6a6caad978c90025e8e675b22"}]}