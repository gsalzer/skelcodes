{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\n\r\n/**\r\n * KP2R.NETWORK\r\n * A standard implementation of kp3rv1 protocol\r\n * Optimized Dapp\r\n * Scalability\r\n * Clean & tested code\r\n */\r\n\r\n\r\n/** \r\n  *Hall-Of-Fame\r\n  */\r\n\r\n\r\npragma solidity ^0.6.8;\r\n\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint) {\r\n        uint c = a + b;\r\n        require(c >= a, \"add: +\");\r\n\r\n        return c;\r\n    }\r\n   function add(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n        uint c = a + b;\r\n        require(c >= a, errorMessage);\r\n\r\n        return c;\r\n    }\r\n   function sub(uint a, uint b) internal pure returns (uint) {\r\n        return sub(a, b, \"sub: -\");\r\n    }\r\n   function sub(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n        require(b <= a, errorMessage);\r\n        uint c = a - b;\r\n\r\n        return c;\r\n    }\r\n  function mul(uint a, uint b) internal pure returns (uint) {\r\n       if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint c = a * b;\r\n        require(c / a == b, \"mul: *\");\r\n\r\n        return c;\r\n    }\r\n  function mul(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n       if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint c = a * b;\r\n        require(c / a == b, errorMessage);\r\n        return c;\r\n    }\r\n  function div(uint a, uint b) internal pure returns (uint) {\r\n        return div(a, b, \"div: /\");\r\n    }\r\n  function div(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n        require(b > 0, errorMessage);\r\n        uint c = a / b;\r\n        return c;\r\n    }\r\n   function mod(uint a, uint b) internal pure returns (uint) {\r\n        return mod(a, b, \"mod: %\");\r\n    }\r\n  function mod(uint a, uint b, string memory errorMessage) internal pure returns (uint) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract KeeperRegistry {\r\n    using SafeMath for uint256;\r\n\r\n    /// @notice Worked a job\r\n    event KeeperWorked(address indexed credit, address indexed job, address indexed keeper, uint block);\r\n\r\n    /// @notice Keeper bonding\r\n    event KeeperBonding(address indexed keeper, uint block, uint active, uint bond);\r\n\r\n    /// @notice Keeper bonded\r\n    event KeeperBonded(address indexed keeper, uint block, uint activated, uint bond);\r\n\r\n    /// @notice Keeper unbonding\r\n    event KeeperUnbonding(address indexed keeper, uint block, uint deactive, uint bond);\r\n\r\n    /// @notice Keeper unbound\r\n    event KeeperUnbound(address indexed keeper, uint block, uint deactivated, uint bond);\r\n\r\n    uint constant public BOND = 3 days;\r\n    uint constant public UNBOND = 14 days;\r\n    uint constant public LIQUIDITYBOND = 3 days;\r\n\r\n    /// @notice tracks all current bondings (time)\r\n    mapping(address => mapping(address => uint)) public bondings;\r\n    /// @notice tracks all current unbondings (time)\r\n    mapping(address => mapping(address => uint)) public unbondings;\r\n    /// @notice allows for partial unbonding\r\n    mapping(address => mapping(address => uint)) public partialUnbonding;\r\n    /// @notice tracks all current pending bonds (amount)\r\n    mapping(address => mapping(address => uint)) public pendingbonds;\r\n    /// @notice tracks how much a keeper has bonded\r\n    mapping(address => mapping(address => uint)) public bonds;\r\n    /// @notice tracks underlying votes (that don't have bond)\r\n    mapping(address => uint) public votes;\r\n    /// @notice tracks last job performed for a keeper\r\n    mapping(address => uint) public lastJob;\r\n\r\n    /// @notice total bonded (totalSupply for bonds)\r\n    uint public totalBonded = 0;\r\n    /// @notice tracks when a keeper was first registered\r\n    mapping(address => uint) public firstSeen;\r\n\r\n    /// @notice list of all current keepers\r\n    mapping(address => bool) public keepers;\r\n    /// @notice blacklist of keepers not allowed to participate\r\n    mapping(address => bool) public blacklist;\r\n\r\n    /// @notice traversable array of keepers to make external management easier\r\n    address[] public keeperList;\r\n\r\n    uint internal _gasUsed;\r\n\r\n    function _bond(address bonding, address _from, uint _amount) internal {\r\n        bonds[_from][bonding] = bonds[_from][bonding].add(_amount);\r\n        if (bonding == address(this)) {\r\n            totalBonded = totalBonded.add(_amount);\r\n        }\r\n    }\r\n\r\n    function _unbond(address bonding, address _from, uint _amount) internal {\r\n        bonds[_from][bonding] = bonds[_from][bonding].sub(_amount);\r\n        if (bonding == address(this)) {\r\n            totalBonded = totalBonded.sub(_amount);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice begin the bonding process for a new keeper\r\n     * @param bonding the asset being bound\r\n     * @param amount the amount of bonding asset being bound\r\n     */\r\n    function bond(address bonding, uint amount) external {\r\n        require(!blacklist[msg.sender], \"bond: blacklisted\");\r\n        bondings[msg.sender][bonding] = now.add(BOND);\r\n        pendingbonds[msg.sender][bonding] = pendingbonds[msg.sender][bonding].add(amount);\r\n        emit KeeperBonding(msg.sender, block.number, bondings[msg.sender][bonding], amount);\r\n    }\r\n\r\n    /**\r\n     * @notice get full list of keepers in the system\r\n     */\r\n    function getKeepers() external view returns (address[] memory) {\r\n        return keeperList;\r\n    }\r\n\r\n    /**\r\n     * @notice allows a keeper to activate/register themselves after bonding\r\n     * @param bonding the asset being activated as bond collateral\r\n     */\r\n    function activate(address bonding) external {\r\n        require(!blacklist[msg.sender], \"activate: blacklisted\");\r\n        require(bondings[msg.sender][bonding] != 0 && bondings[msg.sender][bonding] < now, \"activate: bonding\");\r\n        if (firstSeen[msg.sender] == 0) {\r\n          firstSeen[msg.sender] = now;\r\n          keeperList.push(msg.sender);\r\n          lastJob[msg.sender] = now;\r\n        }\r\n        keepers[msg.sender] = true;\r\n        _bond(bonding, msg.sender, pendingbonds[msg.sender][bonding]);\r\n        pendingbonds[msg.sender][bonding] = 0;\r\n        emit KeeperBonded(msg.sender, block.number, block.timestamp, bonds[msg.sender][bonding]);\r\n    }\r\n\r\n    /**\r\n     * @notice begin the unbonding process to stop being a keeper\r\n     * @param bonding the asset being unbound\r\n     * @param amount allows for partial unbonding\r\n     */\r\n    function unbond(address bonding, uint amount) external {\r\n        unbondings[msg.sender][bonding] = now.add(UNBOND);\r\n        _unbond(bonding, msg.sender, amount);\r\n        partialUnbonding[msg.sender][bonding] = partialUnbonding[msg.sender][bonding].add(amount);\r\n        emit KeeperUnbonding(msg.sender, block.number, unbondings[msg.sender][bonding], amount);\r\n    }\r\n\r\n    /**\r\n     * @notice withdraw funds after unbonding has finished\r\n     * @param bonding the asset to withdraw from the bonding pool\r\n     */\r\n    function withdraw(address bonding) external {\r\n        require(unbondings[msg.sender][bonding] != 0 && unbondings[msg.sender][bonding] < now, \"withdraw: unbonding\");\r\n        emit KeeperUnbound(msg.sender, block.number, block.timestamp, partialUnbonding[msg.sender][bonding]);\r\n        partialUnbonding[msg.sender][bonding] = 0;\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"activated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"}],\"name\":\"KeeperBonded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"active\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"}],\"name\":\"KeeperBonding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactive\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"}],\"name\":\"KeeperUnbonding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deactivated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"}],\"name\":\"KeeperUnbound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"credit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"job\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"keeper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"}],\"name\":\"KeeperWorked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BOND\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDITYBOND\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNBOND\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bonding\",\"type\":\"address\"}],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bonding\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"bond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bondings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bonds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"firstSeen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getKeepers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"keeperList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"keepers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastJob\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"partialUnbonding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingbonds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBonded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bonding\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unbond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unbondings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bonding\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"KeeperRegistry","CompilerVersion":"v0.6.8+commit.0bbfe453","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://7c125e54f8ed39a839f1a4f1bfb3cdc63f471778050a3ee34869042fecc6c315"}]}