{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.8;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface TokenInterface {\r\n    function balanceOf(address) external view returns (uint);\r\n    function delegates(address) external view returns (address);\r\n    function getCurrentVotes(address) external view returns (uint96);\r\n}\r\n\r\n\r\ncontract Resolver {\r\n    struct Position {\r\n        address token;\r\n        address owner;\r\n        uint balance;\r\n        uint96 votes;\r\n        address delegatee;\r\n    }\r\n\r\n    function getHoldersPosition(address token, address[] memory holders) public view returns (Position[] memory) {\r\n        Position[] memory holdersData = new Position[](holders.length);\r\n        TokenInterface tokenContract = TokenInterface(token);\r\n        for (uint i = 0; i < holders.length; i++) {\r\n            address holder = holders[i];\r\n            holdersData[i] = Position({\r\n                token: token,\r\n                owner: holder,\r\n                balance: tokenContract.balanceOf(holder),\r\n                votes: tokenContract.getCurrentVotes(holder),\r\n                delegatee: tokenContract.delegates(holder)\r\n            });\r\n        }\r\n        return holdersData;\r\n    }\r\n\r\n    function getHolderPositions(address[] memory tokens, address holder) public view returns (Position[] memory) {\r\n        Position[] memory holderPositions = new Position[](tokens.length);\r\n        for (uint i = 0; i < tokens.length; i++) {\r\n            TokenInterface tokenContract = TokenInterface(tokens[i]);\r\n            holderPositions[i] = Position({\r\n                token: tokens[i],\r\n                owner: holder,\r\n                balance: tokenContract.balanceOf(holder),\r\n                votes: tokenContract.getCurrentVotes(holder),\r\n                delegatee: tokenContract.delegates(holder)\r\n            });\r\n        }\r\n        return holderPositions;\r\n    }\r\n}\r\n\r\ncontract AtlasHoldersResolver is Resolver {\r\n\r\n    string public constant name = \"Atlas-Holders-Resolver-v1.0\";\r\n    \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"getHolderPositions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"internalType\":\"struct Resolver.Position[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"holders\",\"type\":\"address[]\"}],\"name\":\"getHoldersPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"internalType\":\"struct Resolver.Position[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"AtlasHoldersResolver","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://9180ac8aae63d05c65564f644cd8dba4f5668e7852b3c4447799a97c98e6f9d5"}]}