{"status":"1","message":"OK","result":[{"SourceCode":"// Copyright (C) 2016-2020 Maker Ecosystem Growth Holdings, INC\r\n\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\npragma solidity ^0.6.7;\r\n\r\ncontract GebPollingEvents {\r\n    event PollCreated(\r\n        address indexed creator,\r\n        uint256 blockCreated,\r\n        uint256 indexed pollId,\r\n        uint256 startDate,\r\n        uint256 endDate,\r\n        string multiHash,\r\n        string url\r\n    );\r\n\r\n    event PollWithdrawn(\r\n        address indexed creator,\r\n        uint256 blockWithdrawn,\r\n        uint256 pollId\r\n    );\r\n\r\n    event Voted(\r\n        address indexed voter,\r\n        uint256 indexed pollId,\r\n        uint256 indexed optionId\r\n    );\r\n}\r\n\r\ncontract GebPollingEmitter is GebPollingEvents {\r\n    uint256 public npoll;\r\n\r\n    function createPoll(uint256 startDate, uint256 endDate, string calldata multiHash, string calldata url)\r\n        external\r\n    {\r\n        uint256 startDate_ = startDate > now ? startDate : now;\r\n        require(endDate > startDate_, \"GebPollingEmitter/polling-invalid-poll-window\");\r\n        emit PollCreated(\r\n            msg.sender,\r\n            block.number,\r\n            npoll,\r\n            startDate_,\r\n            endDate,\r\n            multiHash,\r\n            url\r\n        );\r\n        require(npoll < uint(-1), \"GebPollingEmitter/polling-too-many-polls\");\r\n        npoll++;\r\n    }\r\n\r\n    function withdrawPoll(uint256 pollId)\r\n        external\r\n    {\r\n        emit PollWithdrawn(msg.sender, block.number, pollId);\r\n    }\r\n\r\n    function vote(uint256 pollId, uint256 optionId)\r\n        external\r\n    {\r\n        emit Voted(msg.sender, pollId, optionId);\r\n    }\r\n\r\n    function withdrawPoll(uint256[] calldata pollIds)\r\n        external\r\n    {\r\n        for (uint i = 0; i < pollIds.length; i++) {\r\n            emit PollWithdrawn(msg.sender, pollIds[i], block.number);\r\n        }\r\n    }\r\n\r\n    function vote(uint256[] calldata pollIds, uint256[] calldata optionIds)\r\n        external\r\n    {\r\n        require(pollIds.length == optionIds.length, \"GebPollingEmitter/non-matching-length\");\r\n        for (uint i = 0; i < pollIds.length; i++) {\r\n            emit Voted(msg.sender, pollIds[i], optionIds[i]);\r\n        }\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockCreated\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"multiHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"name\":\"PollCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockWithdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"}],\"name\":\"PollWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"multiHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"name\":\"createPoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"npoll\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"pollIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"optionIds\",\"type\":\"uint256[]\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"optionId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pollId\",\"type\":\"uint256\"}],\"name\":\"withdrawPoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"pollIds\",\"type\":\"uint256[]\"}],\"name\":\"withdrawPoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"GebPollingEmitter","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://988d6af5b628b51c2258c46478ed6ed1e5e0b31875c83af75ccb1de9d9aa9459"}]}