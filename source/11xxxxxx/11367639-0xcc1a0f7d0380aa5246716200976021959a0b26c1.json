{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.7;\r\n\r\n\r\n\r\n/**\r\n * @title ProofPresale \r\n * ProofPresale allows investors to make\r\n * token purchases and assigns them tokens based\r\n * on a token per ETH rate. Funds collected are forwarded to a wallet \r\n * as they arrive.\r\n */\r\n library SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\ninterface Token {\r\n    function transfer(address, uint) external returns (bool);\r\n}\r\n\r\ncontract DEFISocialPreSale is Ownable {\r\n  using SafeMath for uint;\r\n\r\n  // The token being sold\r\n  //DEFISocial public token;\r\n    address payable public constant token = payable(0x731A30897bF16597c0D5601205019C947BF15c6E);\r\n\r\n  // address where funds are collected\r\n  address payable public wallet;\r\n\r\n  // amount of raised money in wei\r\n  uint256 public weiRaised;\r\n  \r\n\r\n  // cap above which the crowdsale is ended\r\n  uint256 public cap;\r\n  uint256 public tokensLeft;\r\n  uint256 public tokensBought;\r\n\r\n  uint256 public minInvestment;\r\n\r\n  uint256 public rate;\r\n\r\n  bool public isFinalized ;\r\n\r\n\r\n\r\n  /**\r\n   * event for token purchase logging\r\n   * @param purchaser who paid for the tokens\r\n   * @param beneficiary who got the tokens\r\n   * @param value weis paid for purchase\r\n   * @param amount amount of tokens purchased\r\n   */ \r\n  event TokenPurchase(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n  /**\r\n   * event for signaling finished crowdsale\r\n   */\r\n  event Finalized();\r\n\r\n\r\n\r\n  /**\r\n   * crowdsale constructor\r\n   * @param _wallet who receives invested ether\r\n   * @param _minInvestment is the minimum amount of ether that can be sent to the contract\r\n   * @param _cap above which the crowdsale is closed\r\n   * @param _rate is the amounts of tokens given for 1 ether\r\n   */ \r\n\r\n  function start(address payable _wallet, uint256 _minInvestment, uint256 _cap, uint256 _rate) public onlyOwner {\r\n    \r\n    require(_wallet != 0x0000000000000000000000000000000000000000);\r\n    require(_minInvestment >= 0);\r\n    require(_cap > 0);\r\n \r\n    wallet = _wallet;\r\n    rate = _rate;\r\n    minInvestment = _minInvestment;  //minimum investment in wei  (=10 ether)\r\n    cap = _cap * (10**18);  //cap in tokens base units (=295257 tokens)\r\n    tokensBought = 0;\r\n    tokensLeft = cap;\r\n  }\r\n\r\n     function tokBought() view public  returns (uint256) {\r\n    return tokensBought;\r\n  }\r\n    function tokLeft() view public  returns (uint256) {\r\n    return tokensLeft;\r\n  }\r\n  \r\n\r\n  // fallback function to buy tokens\r\n  receive () external payable {\r\n      if(msg.sender == owner){\r\n          \r\n      }else{\r\n          buyTokens(msg.sender, msg.value);\r\n      }\r\n   \r\n  }\r\n  \r\n    \r\n  \r\n  /**\r\n   * Low level token purchse function\r\n   * @param beneficiary will recieve the tokens.\r\n   */\r\n  function buyTokens(address beneficiary, uint256 amount)  public payable {\r\n    require(beneficiary != 0x0000000000000000000000000000000000000000, \"Error\");\r\n    require(validPurchase(), \"Not a valid purchase\");\r\n    require(!isFinalized, \"Finalized\");\r\n    require(tokensLeft > 0, \"No more tokens left\");\r\n    \r\n\r\n\r\n    uint256 weiAmount = amount;\r\n    \r\n    // compute amount of tokens created\r\n    uint256 tokens = weiAmount.mul(rate);\r\n\r\n    require(Token(token).transfer(beneficiary, tokens), \"Could not transfer tokens.\");\r\n    tokensBought = tokensBought.add(tokens);\r\n    tokensLeft = tokensLeft.sub(tokens);\r\n    // update weiRaised\r\n    weiRaised = weiRaised.add(weiAmount);\r\n    TokenPurchase(msg.sender, beneficiary, weiAmount, tokens);\r\n    forwardFunds();\r\n    \r\n  }\r\n\r\n  // send ether to the fund collection wallet\r\n  function forwardFunds() internal {\r\n    wallet.transfer(msg.value);\r\n  }\r\n\r\n  // return true if the transaction can buy tokens\r\n  function validPurchase() internal  returns (bool) {\r\n\r\n    uint256 weiAmount = weiRaised.add(msg.value);\r\n    bool notSmallAmount = msg.value >= minInvestment;\r\n    bool withinCap = weiAmount.mul(rate) <= tokensLeft;\r\n\r\n    return (notSmallAmount && withinCap);\r\n  }\r\n\r\n  //allow owner to finalize the presale once the presale is ended\r\n  function end() private onlyOwner {\r\n    require(!isFinalized);\r\n    require(hasEnded());\r\n\r\n    Finalized();\r\n\r\n    isFinalized = true;\r\n  }\r\n\r\n\r\n\r\n  //return true if crowdsale event has ended\r\n   function hasEnded() view public  returns (bool) {\r\n    bool capReached = (weiRaised.mul(rate) >= cap);\r\n    return capReached;\r\n  }\r\n    \r\n\r\n\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[],\"name\":\"Finalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minInvestment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minInvestment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokBought\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensBought\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"DEFISocialPreSale","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://dfe44264b2d443e8ff833212a33f89c6a47c98485ef4029a1a6cf4d151fe93a0"}]}