{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/interfaces/managerDataStorageInterface.sol\r\n\r\npragma solidity 0.6.12;\r\n\r\ninterface managerDataStorageInterface  {\r\n\tfunction getGlobalRewardPerBlock() external view returns (uint256);\r\n\tfunction setGlobalRewardPerBlock(uint256 _globalRewardPerBlock) external returns (bool);\r\n\r\n\tfunction getGlobalRewardDecrement() external view returns (uint256);\r\n\tfunction setGlobalRewardDecrement(uint256 _globalRewardDecrement) external returns (bool);\r\n\r\n\tfunction getGlobalRewardTotalAmount() external view returns (uint256);\r\n\tfunction setGlobalRewardTotalAmount(uint256 _globalRewardTotalAmount) external returns (bool);\r\n\r\n\tfunction getAlphaRate() external view returns (uint256);\r\n\tfunction setAlphaRate(uint256 _alphaRate) external returns (bool);\r\n\r\n\tfunction getAlphaLastUpdated() external view returns (uint256);\r\n\tfunction setAlphaLastUpdated(uint256 _alphaLastUpdated) external returns (bool);\r\n\r\n\tfunction getRewardParamUpdateRewardPerBlock() external view returns (uint256);\r\n\tfunction setRewardParamUpdateRewardPerBlock(uint256 _rewardParamUpdateRewardPerBlock) external returns (bool);\r\n\r\n\tfunction getRewardParamUpdated() external view returns (uint256);\r\n\tfunction setRewardParamUpdated(uint256 _rewardParamUpdated) external returns (bool);\r\n\r\n\tfunction getInterestUpdateRewardPerblock() external view returns (uint256);\r\n\tfunction setInterestUpdateRewardPerblock(uint256 _interestUpdateRewardPerblock) external returns (bool);\r\n\r\n\tfunction getInterestRewardUpdated() external view returns (uint256);\r\n\tfunction setInterestRewardUpdated(uint256 _interestRewardLastUpdated) external returns (bool);\r\n\r\n\tfunction setTokenHandler(uint256 handlerID, address handlerAddr) external returns (bool);\r\n\r\n\tfunction getTokenHandlerInfo(uint256 handlerID) external view returns (bool, address);\r\n\r\n\tfunction getTokenHandlerID(uint256 index) external view returns (uint256);\r\n\r\n\tfunction getTokenHandlerAddr(uint256 handlerID) external view returns (address);\r\n\tfunction setTokenHandlerAddr(uint256 handlerID, address handlerAddr) external returns (bool);\r\n\r\n\tfunction getTokenHandlerExist(uint256 handlerID) external view returns (bool);\r\n\tfunction setTokenHandlerExist(uint256 handlerID, bool exist) external returns (bool);\r\n\r\n\tfunction getTokenHandlerSupport(uint256 handlerID) external view returns (bool);\r\n\tfunction setTokenHandlerSupport(uint256 handlerID, bool support) external returns (bool);\r\n\r\n\tfunction setLiquidationManagerAddr(address _liquidationManagerAddr) external returns (bool);\r\n\tfunction getLiquidationManagerAddr() external view returns (address);\r\n\r\n\tfunction setManagerAddr(address _managerAddr) external returns (bool);\r\n}\r\n\r\n// File: contracts/marketManager/managerDataStorage/managerDataStorage.sol\r\n\r\npragma solidity 0.6.12;\r\n\r\ncontract managerDataStorage is managerDataStorageInterface {\r\n\taddress payable owner;\r\n\r\n\taddress managerAddr;\r\n\r\n\taddress liquidationManagerAddr;\r\n\r\n\tstruct TokenHandler {\r\n\t\taddress addr;\r\n\t\tbool support;\r\n\t\tbool exist;\r\n\t}\r\n\r\n\tuint256 globalRewardPerBlock;\r\n\r\n\tuint256 globalRewardDecrement;\r\n\r\n\tuint256 globalRewardTotalAmount;\r\n\r\n\tuint256 alphaRate;\r\n\r\n\tuint256 alphaLastUpdated;\r\n\r\n\tuint256 rewardParamUpdateRewardPerBlock;\r\n\r\n\tuint256 rewardParamUpdated;\r\n\r\n\tuint256 interestUpdateRewardPerblock;\r\n\r\n\tuint256 interestRewardLastUpdated;\r\n\r\n\tmapping(uint256 => TokenHandler) tokenHandlers;\r\n\r\n\t/* handler Array */\r\n\tuint256[] private tokenHandlerList;\r\n\r\n\tmodifier onlyManager {\r\n\t\taddress msgSender = msg.sender;\r\n\t\trequire((msgSender == managerAddr) || (msgSender == owner), \"onlyManager function\");\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner, \"onlyOwner function\");\r\n\t\t_;\r\n\t}\r\n\r\n\tconstructor () public\r\n\t{\r\n\t\towner = msg.sender;\r\n\t\tglobalRewardPerBlock = 0x478291c1a0e982c98;\r\n\t\tglobalRewardDecrement = 0x7ba42eb3bfc;\r\n\t\tglobalRewardTotalAmount = (4 * 100000000) * (10 ** 18);\r\n\t\talphaRate = 2 * (10 ** 17);\r\n\t\talphaLastUpdated = block.number;\r\n\t\t/*\r\n\t\t            rewardParamUpdateRewardPerBlock = 1u * (10u ** 17u); // == 0.1\r\n\t\t            rewardParamUpdated = block.getNumber();\r\n\r\n\t\t            interestUpdateRewardPerblock = 5u * (10u ** 16u); // == 0.05\r\n\t\t            interestRewardLastUpdated = block.getNumber();\r\n\t\t            */\r\n\t}\r\n\r\n\tfunction ownershipTransfer(address payable _owner) onlyOwner public returns (bool)\r\n\t{\r\n\t\towner = _owner;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getGlobalRewardPerBlock() external view override returns (uint256)\r\n\t{\r\n\t\treturn globalRewardPerBlock;\r\n\t}\r\n\r\n\tfunction setGlobalRewardPerBlock(uint256 _globalRewardPerBlock) onlyManager external override returns (bool)\r\n\t{\r\n\t\tglobalRewardPerBlock = _globalRewardPerBlock;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getGlobalRewardDecrement() external view override returns (uint256)\r\n\t{\r\n\t\treturn globalRewardDecrement;\r\n\t}\r\n\r\n\tfunction setGlobalRewardDecrement(uint256 _globalRewardDecrement) onlyManager external override returns (bool)\r\n\t{\r\n\t\tglobalRewardDecrement = _globalRewardDecrement;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getGlobalRewardTotalAmount() external view override returns (uint256)\r\n\t{\r\n\t\treturn globalRewardTotalAmount;\r\n\t}\r\n\r\n\tfunction setGlobalRewardTotalAmount(uint256 _globalRewardTotalAmount) onlyManager external override returns (bool)\r\n\t{\r\n\t\tglobalRewardTotalAmount = _globalRewardTotalAmount;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getAlphaRate() external view override returns (uint256)\r\n\t{\r\n\t\treturn alphaRate;\r\n\t}\r\n\r\n\tfunction setAlphaRate(uint256 _alphaRate) onlyOwner external override returns (bool)\r\n\t{\r\n\t\talphaRate = _alphaRate;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getAlphaLastUpdated() external view override returns (uint256)\r\n\t{\r\n\t\treturn alphaLastUpdated;\r\n\t}\r\n\r\n\tfunction setAlphaLastUpdated(uint256 _alphaLastUpdated) onlyOwner external override returns (bool)\r\n\t{\r\n\t\talphaLastUpdated = _alphaLastUpdated;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getRewardParamUpdateRewardPerBlock() external view override returns (uint256)\r\n\t{\r\n\t\treturn rewardParamUpdateRewardPerBlock;\r\n\t}\r\n\r\n\tfunction setRewardParamUpdateRewardPerBlock(uint256 _rewardParamUpdateRewardPerBlock) onlyOwner external override returns (bool)\r\n\t{\r\n\t\trewardParamUpdateRewardPerBlock = _rewardParamUpdateRewardPerBlock;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getRewardParamUpdated() external view override returns (uint256)\r\n\t{\r\n\t\treturn rewardParamUpdated;\r\n\t}\r\n\r\n\tfunction setRewardParamUpdated(uint256 _rewardParamUpdated) onlyManager external override returns (bool)\r\n\t{\r\n\t\trewardParamUpdated = _rewardParamUpdated;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getInterestUpdateRewardPerblock() external view override returns (uint256)\r\n\t{\r\n\t\treturn interestUpdateRewardPerblock;\r\n\t}\r\n\r\n\tfunction setInterestUpdateRewardPerblock(uint256 _interestUpdateRewardPerblock) onlyOwner external override returns (bool)\r\n\t{\r\n\t\tinterestUpdateRewardPerblock = _interestUpdateRewardPerblock;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getInterestRewardUpdated() external view override returns (uint256)\r\n\t{\r\n\t\treturn interestRewardLastUpdated;\r\n\t}\r\n\r\n\tfunction setInterestRewardUpdated(uint256 _interestRewardLastUpdated) onlyManager external override returns (bool)\r\n\t{\r\n\t\tinterestRewardLastUpdated = _interestRewardLastUpdated;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setManagerAddr(address _managerAddr) onlyOwner external override returns (bool)\r\n\t{\r\n\t\t_setManagerAddr(_managerAddr);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction _setManagerAddr(address _managerAddr) internal returns (bool)\r\n\t{\r\n\t\trequire(_managerAddr != address(0), \"error: manager address null\");\r\n\t\tmanagerAddr = _managerAddr;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setLiquidationManagerAddr(address _liquidationManagerAddr) onlyManager external override returns (bool)\r\n\t{\r\n\t\tliquidationManagerAddr = _liquidationManagerAddr;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getLiquidationManagerAddr() external view override returns (address)\r\n\t{\r\n\t\treturn liquidationManagerAddr;\r\n\t}\r\n\r\n\tfunction setTokenHandler(uint256 handlerID, address handlerAddr) onlyManager external override returns (bool)\r\n\t{\r\n\t\tTokenHandler memory handler;\r\n\t\thandler.addr = handlerAddr;\r\n\t\thandler.exist = true;\r\n\t\thandler.support = true;\r\n\t\t/* regist Storage*/\r\n\t\ttokenHandlers[handlerID] = handler;\r\n\t\ttokenHandlerList.push(handlerID);\r\n\t}\r\n\r\n\tfunction setTokenHandlerAddr(uint256 handlerID, address handlerAddr) onlyOwner external override returns (bool)\r\n\t{\r\n\t\ttokenHandlers[handlerID].addr = handlerAddr;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setTokenHandlerExist(uint256 handlerID, bool exist) onlyOwner external override returns (bool)\r\n\t{\r\n\t\ttokenHandlers[handlerID].exist = exist;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setTokenHandlerSupport(uint256 handlerID, bool support) onlyManager external override returns (bool)\r\n\t{\r\n\t\ttokenHandlers[handlerID].support = support;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getTokenHandlerInfo(uint256 handlerID) external view override returns (bool, address)\r\n\t{\r\n\t\treturn (tokenHandlers[handlerID].support, tokenHandlers[handlerID].addr);\r\n\t}\r\n\r\n\tfunction getTokenHandlerAddr(uint256 handlerID) external view override returns (address)\r\n\t{\r\n\t\treturn tokenHandlers[handlerID].addr;\r\n\t}\r\n\r\n\tfunction getTokenHandlerExist(uint256 handlerID) external view override returns (bool)\r\n\t{\r\n\t\treturn tokenHandlers[handlerID].exist;\r\n\t}\r\n\r\n\tfunction getTokenHandlerSupport(uint256 handlerID) external view override returns (bool)\r\n\t{\r\n\t\treturn tokenHandlers[handlerID].support;\r\n\t}\r\n\r\n\tfunction getTokenHandlerID(uint256 index) external view override returns (uint256)\r\n\t{\r\n\t\treturn tokenHandlerList[index];\r\n\t}\r\n\r\n\tfunction getOwner() public view returns (address)\r\n\t{\r\n\t\treturn owner;\r\n\t}\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getAlphaLastUpdated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAlphaRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalRewardDecrement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalRewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalRewardTotalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInterestRewardUpdated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInterestUpdateRewardPerblock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidationManagerAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardParamUpdateRewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardParamUpdated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"handlerID\",\"type\":\"uint256\"}],\"name\":\"getTokenHandlerAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"handlerID\",\"type\":\"uint256\"}],\"name\":\"getTokenHandlerExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTokenHandlerID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"handlerID\",\"type\":\"uint256\"}],\"name\":\"getTokenHandlerInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"handlerID\",\"type\":\"uint256\"}],\"name\":\"getTokenHandlerSupport\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"ownershipTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_alphaLastUpdated\",\"type\":\"uint256\"}],\"name\":\"setAlphaLastUpdated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_alphaRate\",\"type\":\"uint256\"}],\"name\":\"setAlphaRate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_globalRewardDecrement\",\"type\":\"uint256\"}],\"name\":\"setGlobalRewardDecrement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_globalRewardPerBlock\",\"type\":\"uint256\"}],\"name\":\"setGlobalRewardPerBlock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_globalRewardTotalAmount\",\"type\":\"uint256\"}],\"name\":\"setGlobalRewardTotalAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_interestRewardLastUpdated\",\"type\":\"uint256\"}],\"name\":\"setInterestRewardUpdated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_interestUpdateRewardPerblock\",\"type\":\"uint256\"}],\"name\":\"setInterestUpdateRewardPerblock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidationManagerAddr\",\"type\":\"address\"}],\"name\":\"setLiquidationManagerAddr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_managerAddr\",\"type\":\"address\"}],\"name\":\"setManagerAddr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardParamUpdateRewardPerBlock\",\"type\":\"uint256\"}],\"name\":\"setRewardParamUpdateRewardPerBlock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardParamUpdated\",\"type\":\"uint256\"}],\"name\":\"setRewardParamUpdated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"handlerID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddr\",\"type\":\"address\"}],\"name\":\"setTokenHandler\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"handlerID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddr\",\"type\":\"address\"}],\"name\":\"setTokenHandlerAddr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"handlerID\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"}],\"name\":\"setTokenHandlerExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"handlerID\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"setTokenHandlerSupport\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"managerDataStorage","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"BSD-3-Clause","Proxy":"0","Implementation":"","SwarmSource":"ipfs://254ab62859b5b282761d1f300624839994c0865c65f2e7688c71699bf6770b83"}]}