{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity =0.7.4;\r\n\r\ncontract VEIS_DATA {\r\n    string public standard = 'veis.io';\r\n    string public name = 'VEIS';\r\n    string public symbol = 'VS';\r\n    uint8 public decimals = 18;\r\n    uint256 public totalSupply = 900000 ether;\r\n    uint256 public maxLeval=631;\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n    address public admin;\r\n    address public computeContract;\r\n    \r\n    struct SYSTEM{\r\n        uint256 StarAngel;\r\n        uint256 StarLeval;\r\n        uint256 maxAirDrop;\r\n        uint256 alreadyBuy;\r\n        uint256 ObliterateTime;\r\n    }\r\n    struct USER{\r\n        uint256 id;\r\n        uint256 referee;\r\n        uint256 grade;\r\n        bool Airdrop;\r\n        uint256 totalInputEth;\r\n    }\r\n    \r\n    constructor () {\r\n        admin=msg.sender;\r\n        set_old_user(0xeE310c010AC5bb2b7aF9806d8549E8B28E5744fE,0,3,0,false,100000000000000000,555555555555555555555);\r\n        set_old_user(0xD66aB34CD898d68b9feb67Ebf4b2AFd146D6e57e,0,1,0,false,70000000000000000,350000000000000000000);\r\n        set_old_user(0xd2dfE9823e5779fcF90B4019A7De24452eB20506,0,10,0,false,250000000000000000,446428571428571428571);\r\n        set_old_user(0x77aFfdf1Fe5253A1929a74c1e3B79E237050fbf9,0,11,0,false,15005999999999999872,19271153846153845976069);\r\n        set_old_user(0x0734B0426AACfC74682318466973C27C8f94a5e7,0,11,0,false,4187000000000000000,4397579401788467468396);\r\n        set_old_user(0xddDA63693471aa178D1b0C2A28940dB0d8dD0C2a,0,11,0,false,4000000000000000000,4255319148936170212765);\r\n        set_old_user(0x45DD7748a3154528ab4d769bB1E88FEfC88124A7,0,14,0,false,1000000000000000000,1041666666666666666666);\r\n        set_old_user(0x07F6Ce414D2e9b8067e53a8AA268e9B78dbB5D9C,0,14,0,false,4508000000000000000,4600000000000000000000);\r\n        set_old_user(0xB8c03307af9F423c7504af00e993218BB21b5406,0,11,0,false,9363832961774943403,8821068137042838290432);\r\n        set_old_user(0x71257E2B4cf2d4763768f0843FE7c4C058926D5D,0,11,0,false,184738857815568977,177633517130354786304);\r\n        set_old_user(0x90420e8F26c58721bF8f4281653AC8d5DE20b94a,1,1,5,false,648000000000000000,1452777777777777777776);\r\n        set_old_user(0x3Ef58D2f10774103D3F09c596818e2226c014918,2,1,5,false,8000000000000000,900000000000000000000000);\r\n        set_old_user(0xfE2EcbA7D4bec7E0D9adA612AF552D49ce8D827e,3,2,5,false,50000000000000000,357142857142857142857);\r\n        set_old_user(0xAaEBFBf1B80e59ACC97FC153EA96D5124515628b,4,2,5,false,0,0);\r\n        set_old_user(0xe285c9F242c73855d09D5AFf4Fde4A336F2E27fD,5,2,5,false,0,0);\r\n        set_old_user(0xE549c730E29DD31E2723Cd9B3b362E9e5685F662,6,2,5,false,0,0);\r\n        set_old_user(0x46252e1a9AdF43aE1a95ea9BD14C456F3F1742aa,7,2,5,false,0,0);\r\n        set_old_user(0x775eBF655dfAc0a5568d471969451EEa33e78Cf9,8,5,4,false,5070000000000000128,8215896358543417544726);\r\n        set_old_user(0x6C1aAc3af485189435f40Be73676e7B2726aB312,9,7,4,false,7540000000000000000,20228571428571428571429);\r\n        set_old_user(0x2cb8107906A0497c5081c3956B9D0A6095C4D371,10,9,3,false,3592000000000000000,6900000000000000000000);\r\n        set_old_user(0x6A4970d2F98d0B44cBAe33f0D49De4c0487DEDfC,11,3,5,false,10050000000000000000,15985294117647058823529);\r\n        set_old_user(0x47d9A7c0E4FF148DFd62e3CbE10B7db43fD31dbA,12,5,2,false,900000000000000000,1153846153846153846154);\r\n        set_old_user(0x9926Bc32679Af9A10D5A5a3eF24EA58C8579fd93,13,11,4,false,5001000000000000256,5869371418941692242399);\r\n        set_old_user(0xDdAeD04C0Eb419E5Ec552D993775556a521CF305,14,11,5,false,10627999999999999744,11915773508594539641659);\r\n        set_old_user(0x8D55B7732f576cE68Be81525b174acF423fB8CB6,15,11,3,false,1000000000000000000,1086956521739130434782);\r\n        \r\n        sys.StarAngel=15;\r\n        sys.StarLeval=47;\r\n        sys.maxAirDrop=70000000000000000000000;\r\n        sys.alreadyBuy=4472489017000000000000;\r\n        sys.ObliterateTime = 0;\r\n        totalSupply = 1017348701654173193076735;\r\n    }\r\n    function set_old_user(address addr,uint256 id,uint256 referee,uint256 grade,bool Airdrop,uint256 totalInputEth,uint256 b)internal{\r\n        USER memory u;\r\n        u.id=id;\r\n        u.referee = referee;\r\n        u.grade =grade;\r\n        u.Airdrop =Airdrop;\r\n        u.totalInputEth = totalInputEth;\r\n        balanceOf[addr]=b;\r\n        StarAngels[addr]=u;\r\n        if(u.id>0)StarAngelID[u.id]=addr;\r\n        \r\n    }\r\n    modifier OnlyCompute() {\r\n        require(msg.sender == computeContract,'only compute Contract');\r\n        _;\r\n    }\r\n    function setSystem(uint256 angel,uint256 leval,uint256 max,uint256 alBuy,uint256 obl,uint256 totalVeis)public OnlyCompute{\r\n        sys.StarAngel=angel;\r\n        sys.StarLeval=leval;\r\n        sys.maxAirDrop=max;\r\n        sys.alreadyBuy=alBuy;\r\n        sys.ObliterateTime = obl;\r\n        totalSupply = totalVeis;\r\n    }\r\n    function setUser(address addr,uint256 id,uint256 referee,uint256 grade,bool airdrop,uint256 totaleth,uint256 balan)public OnlyCompute{\r\n        USER storage u=StarAngels[addr];\r\n        u.id=id;\r\n        u.referee=referee;\r\n        u.grade=grade;\r\n        u.Airdrop=airdrop;\r\n        u.totalInputEth=totaleth;\r\n        if(id>0)StarAngelID[id]=addr;\r\n        if(balan >0)balanceOf[addr]=balan;\r\n    }\r\n    function setCompute(address compute)public{\r\n        require(msg.sender == admin,'msg.sender == admin');\r\n        computeContract =compute;\r\n    }\r\n    function setAdmin(address newAdmin)public{\r\n        require(msg.sender == admin,'msg.sender == admin');\r\n        admin = newAdmin;\r\n    }\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(_to !=address(0x0));\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        emit Transfer(_from, _to, _value);\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    /*******************************************************************************************/\r\n    mapping(address =>USER)public StarAngels;\r\n    mapping(uint256 =>address)public StarAngelID;\r\n    SYSTEM public sys;\r\n    function issue(address addr,uint256 value)public OnlyCompute returns(uint256 ret){\r\n        uint256 v=value;\r\n        require(totalSupply + v > totalSupply,'totalSupply + v > totalSupply');\r\n        totalSupply += v;\r\n        balanceOf[addr]+=v;\r\n        return v;\r\n    }\r\n    function deleteVies(address addr,uint256 value)external OnlyCompute returns(bool ret){\r\n        require(balanceOf[addr] >= value,'Insufficient vies');\r\n        balanceOf[addr] -= value;\r\n        balanceOf[admin]+= (value /5);\r\n        totalSupply -= (value/5*4);\r\n        return true;\r\n    }\r\n    function sendAirdrop(address addr,uint256 value) external OnlyCompute returns(bool ret){\r\n        require(value <= sys.maxAirDrop,'Airdrop has been released over');\r\n        USER storage u=StarAngels[addr];\r\n        u.Airdrop =true;\r\n        issue(addr,value);\r\n        sys.maxAirDrop -= value;\r\n        return true;\r\n    }\r\n    function addAlreadyBuy(address user,uint256 addValue,uint256 eth) external OnlyCompute{\r\n        require(sys.alreadyBuy + addValue > sys.alreadyBuy);\r\n        sys.alreadyBuy += addValue;\r\n        StarAngels[user].totalInputEth += eth;\r\n    }\r\n    function upDataObliterateTime() external OnlyCompute{\r\n        sys.ObliterateTime = block.timestamp;\r\n    }\r\n    function setNextLeval()external OnlyCompute returns(uint256 leval){\r\n        if(sys.StarLeval == maxLeval)return 0;\r\n        sys.StarLeval++;\r\n        sys.alreadyBuy = 0;\r\n        if(sys.StarLeval % 50 == 0) sys.ObliterateTime = block.timestamp;\r\n    }\r\n    function setReferee(address user,uint256 referee)external OnlyCompute returns(uint256 ret){\r\n        StarAngels[user].referee = referee;\r\n        return referee;\r\n    }\r\n    function BecomeStarAngel(address user,uint256 referee,uint256 grade)external OnlyCompute returns(uint256 id,uint256 refree){\r\n        USER storage u =StarAngels[user];\r\n        if(u.id==0){\r\n            StarAngelID[++sys.StarAngel]=user;\r\n            u.referee = referee;\r\n            u.id = sys.StarAngel;\r\n        }\r\n        if(grade <= u.grade)return (0,0);\r\n        u.grade = grade;\r\n        return (u.id,u.referee);\r\n    }\r\n}\r\n\r\ncontract VEIS_COMPUTE{\r\n    VEIS_DATA public veisContract=VEIS_DATA(0x80000151D9e7D098E47C6eD5FDA232a7cfAf48f0);\r\n    address payable ColdPurse=payable(0xc5dFeFA76322Ec570E36f0ABD61F702732bDca7E);\r\n    uint256[5] public airCount=[uint256(10000),15000,20000,15000,10000];\r\n    \r\n    address admin;\r\n    event OnAirDrop(address indexed addr,uint256 value);\r\n    event OnBecomeStarAngel(address indexed user,uint256 InputETH,uint256 id,uint256 refe);\r\n    event OnAllotETH(address indexed user,address indexed sour,uint256 eth);\r\n    event OnDerivation(address indexed user,uint256 InputETH,uint256 OutPutVies,uint256 refe);\r\n    event OnObliterate(address indexed user,uint256 eth,uint256 vies);\r\n    event OnNextLeval(uint256 newLeval);\r\n    struct SYSTEM{\r\n        uint256 StarAngel;\r\n        uint256 StarLeval;\r\n        uint256 maxAirDrop;\r\n        uint256 alreadyBuy;\r\n        uint256 ObliterateTime;\r\n    }\r\n    struct USER{\r\n        uint256 id;\r\n        uint256 referee;\r\n        uint256 grade;\r\n        bool Airdrop;\r\n        uint256 totalInputEth;\r\n    }\r\n    fallback()external payable{}\r\n    receive()external payable{}\r\n    \r\n    constructor () {\r\n        \r\n        admin=msg.sender;\r\n    }\r\n    \r\n    \r\n    function setColdPurse(address addr)public{\r\n        require(msg.sender == admin,'only admin');\r\n        ColdPurse = payable(addr);\r\n    }\r\n    function setDataComtrct(address addr)public{\r\n        require(msg.sender == admin,'only admin');\r\n        veisContract = VEIS_DATA(addr);\r\n    }\r\n    \r\n    function allotETH(address addr,uint256 value,uint256 referee)internal{\r\n        USER memory u;\r\n        uint256 id=referee;\r\n        address star;\r\n        uint256 allot;\r\n        uint256 eth = value;\r\n        uint256 allallot;\r\n        for(uint8 i=0;i<3;i++){\r\n            star = veisContract.StarAngelID(id);\r\n            (u.id,u.referee,u.grade,u.Airdrop,u.totalInputEth)=veisContract.StarAngels(star);\r\n            \r\n            if(u.grade == 1)allot = 8;\r\n            else if(u.grade == 2) allot = 10;\r\n            else if(u.grade == 3) allot =12;\r\n            else if(u.grade == 4) allot = 16;\r\n            else if(u.grade == 5) allot =20;\r\n            \r\n            allot=eth * allot /100;\r\n            emit OnAllotETH(star,addr,allot);\r\n            allallot+=allot;\r\n            payable(star).transfer(allot);\r\n            id=u.referee;\r\n            if(id == 0)break;\r\n            eth = eth / 2;\r\n        }\r\n        \r\n        require(allallot < value);\r\n        ColdPurse.transfer(value - allallot);\r\n    }\r\n    \r\n    function air_drop()public{\r\n        USER memory u;\r\n        (u.id,u.referee,u.grade,u.Airdrop,u.totalInputEth)=veisContract.StarAngels(msg.sender);\r\n        SYSTEM memory s;\r\n        (s.StarAngel,s.StarLeval,s.maxAirDrop,s.alreadyBuy,s.ObliterateTime)=veisContract.sys();\r\n        \r\n        require(!u.Airdrop,'already received airdrop');\r\n        uint256 eth=msg.sender.balance;\r\n        uint256 vies;\r\n        uint8 leval;\r\n        require(eth > 0.1 ether,'eth > 0.1 ether');\r\n        \r\n        if(eth >= 15 ether ){vies = 50 ether; leval = 4;}\r\n        else if(eth>=10 ether){vies = 30 ether;leval = 3;}\r\n        else if(eth >=5 ether){vies = 20 ether;leval = 2;}\r\n        else if(eth>=2 ether){vies = 10 ether;leval = 1;}\r\n        else if(eth >=0.1 ether){vies = 5 ether;}\r\n        \r\n        require(s.maxAirDrop > vies,'Airdrop has been released over');\r\n        require(airCount[leval]-- >1,'Airdrop has been over of this type');\r\n        veisContract.sendAirdrop(msg.sender,vies);\r\n        emit OnAirDrop(msg.sender,vies);\r\n    }\r\n    \r\n    function Derivation(uint256 referee)public payable{\r\n        require(msg.value > 0 ,'Eth cannot be 0');\r\n        SYSTEM memory sys;\r\n        (sys.StarAngel,sys.StarLeval,sys.maxAirDrop,sys.alreadyBuy,sys.ObliterateTime)=veisContract.sys();\r\n        USER memory u;\r\n        (u.id,u.referee,u.grade,u.Airdrop,u.totalInputEth)=veisContract.StarAngels(msg.sender);\r\n        if(u.referee == 0){\r\n            require(referee > 0 && referee <= sys.StarAngel,'Incorrect recommendation code');\r\n            u.referee = referee;\r\n            veisContract.setReferee(msg.sender,referee);\r\n        }\r\n        uint256 eth = msg.value;\r\n        uint256 price =6 + sys.StarLeval*2;\r\n        \r\n        uint256 LevalVies=uint256(sys.StarLeval) * (100 ether);\r\n        require(sys.alreadyBuy < LevalVies,'Over total');\r\n        uint256 vies = eth *100000 / price;\r\n        if(vies + sys.alreadyBuy > LevalVies){\r\n            vies = LevalVies - sys.alreadyBuy;\r\n            eth = vies * price /100000;\r\n            payable(msg.sender).transfer(msg.value - eth);\r\n        }\r\n        veisContract.addAlreadyBuy(msg.sender,vies,eth);\r\n        \r\n        allotETH(msg.sender,eth,u.referee);\r\n        \r\n        veisContract.issue(msg.sender,vies);\r\n        emit OnDerivation(msg.sender,eth,vies,u.referee);\r\n        if(vies + sys.alreadyBuy >= LevalVies){\r\n            veisContract.setNextLeval();\r\n            emit OnNextLeval(sys.StarLeval+1);\r\n        }\r\n    }\r\n    event log(string  s , uint256 vLevalVies);\r\n\r\n    \r\n    function BecomeStarAngel(uint256 referee)public {\r\n        USER memory u;\r\n        (u.id,u.referee,u.grade,u.Airdrop,u.totalInputEth)=veisContract.StarAngels(msg.sender);\r\n        uint256 eth = u.totalInputEth;\r\n        require(eth >= 0.1 ether,'Become Star Angel eth less 0.1');\r\n        uint256 grade;\r\n        if(eth >= 10 ether)grade = 5;\r\n        else if(eth >= 5 ether)grade = 4;\r\n        else if(eth >= 1 ether) grade =3;\r\n        else if(eth >= 0.5 ether)grade =2;\r\n        else if(eth >=0.1 ether) grade = 1;\r\n        \r\n        uint256 refe;\r\n        uint256 id;\r\n        (id,refe)=veisContract.BecomeStarAngel(msg.sender,referee,grade);\r\n        require(refe>0,'Incorrect references');\r\n        emit OnBecomeStarAngel(msg.sender,eth,id,refe);\r\n        \r\n    }\r\n    \r\n    function Obliterate(uint256 value)public{\r\n        require(value > 0,'Must be greater than 0');\r\n        require(value <= veisContract.balanceOf(msg.sender),'Insufficient vies');\r\n        SYSTEM memory sys;\r\n        (sys.StarAngel,sys.StarLeval,sys.maxAirDrop,sys.alreadyBuy,sys.ObliterateTime)=veisContract.sys();\r\n        \r\n        require(sys.ObliterateTime + 86400 >= block.timestamp,'sys.ObliterateTime + 86400');\r\n        uint256 leval=sys.StarLeval;\r\n        if(leval %50 !=0){leval=leval /50 *50;}\r\n        uint256 price = 6 +leval*2;\r\n        uint256 eth = value /100000* price ;\r\n        require(veisContract.deleteVies(msg.sender,value),'Vanishing failure');\r\n        \r\n        payable(msg.sender).transfer(eth);\r\n        emit OnObliterate(msg.sender,eth,value);\r\n    }\r\n \r\n    function destroy() public{\r\n        require(msg.sender == admin,'msg.sender == owner');\r\n        selfdestruct(payable(msg.sender));\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grade\",\"type\":\"uint256\"}],\"name\":\"BecomeStarAngel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refree\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"StarAngelID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"StarAngels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grade\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"Airdrop\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalInputEth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"addAlreadyBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deleteVies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ret\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ret\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLeval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"sendAirdrop\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ret\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"compute\",\"type\":\"address\"}],\"name\":\"setCompute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setNextLeval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"leval\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"referee\",\"type\":\"uint256\"}],\"name\":\"setReferee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ret\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"angel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"alBuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"obl\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVeis\",\"type\":\"uint256\"}],\"name\":\"setSystem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grade\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"airdrop\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totaleth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balan\",\"type\":\"uint256\"}],\"name\":\"setUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"StarAngel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"StarLeval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAirDrop\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"alreadyBuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ObliterateTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upDataObliterateTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"VEIS_DATA","CompilerVersion":"v0.7.4+commit.3f05b770","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://3b1b2f5c204e507d8a1a16a7250f6e726222a754cb50efb2ef67669c676d59ef"}]}