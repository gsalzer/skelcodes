{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2020-10-05\r\n*/\r\n\r\npragma solidity =0.6.6;\r\ninterface IWETH {\r\n    function deposit() external payable;\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function withdraw(uint) external;\r\n}\r\ncontract ETHtoBEB {\r\n    using SafeMath for uint;\r\n    string public name     = \"Ether to BEB\";\r\n    string public symbol   = \"BEB\";\r\n    uint8  public decimals = 18;\r\n    uint public totalSupply;\r\n    address public   onwer;\r\n    address public   WETH;\r\n    uint public BEBpoint;\r\n    mapping (address => uint)                       public  balanceOf;\r\n    mapping (address => mapping (address => uint))  public  allowance;\r\n    mapping (address=>bool)public senderLooks;\r\n    mapping(address=>uint)public Users;\r\n    mapping(address=>uint)public UsersTime;\r\n    mapping(address=>uint)public UsersDays;\r\n    constructor(address _WETH) public {\r\n        onwer = msg.sender;\r\n        WETH=_WETH;\r\n        BEBpoint=0.00042 ether;\r\n    }\r\n    receive() external payable {\r\n        assert(msg.sender == WETH); // only accept ETH via fallback from the WETH contract\r\n    }\r\n    //Additional issue of beb\r\n    function deposit(address addr,uint value) internal {\r\n        //require(senderLooks[msg.sender],\"No permission to issue additional beb\");\r\n        balanceOf[addr]=balanceOf[addr].add(value);\r\n        totalSupply=totalSupply.add(value);\r\n    }\r\n    //Authorized additional address\r\n    function AdditionalAddress(address addr)public{\r\n        require(onwer==msg.sender,\"Not contract administrator\");\r\n        senderLooks[addr]=true;\r\n    }\r\n    function AddBEBpoint(uint _value)public{\r\n        require(senderLooks[msg.sender],\"No permission to issue additional beb\");\r\n        require(_value>0.0001 ether);\r\n        BEBpoint=_value;\r\n    }\r\n    function CreateContract()public payable{\r\n        require(Users[msg.sender]==0);\r\n        Users[msg.sender]+=msg.value;\r\n        UsersTime[msg.sender]=now;\r\n        UsersDays[msg.sender]=100;\r\n        IWETH(WETH).deposit{value: msg.value}();//å­˜æ¬¾\r\n    }\r\n    function ContractUserWithdrawal()public{\r\n        require(UsersDays[msg.sender]>0 && Users[msg.sender]>0);\r\n        (uint _amountETH,uint _amountBEB,uint _days,)=tokenToETHtoBEB(msg.sender);\r\n        uint _day=_days.mul(1 days);\r\n        IWETH(WETH).withdraw(_amountETH);\r\n        TransferHelper.safeTransferETH(msg.sender, _amountETH);\r\n        deposit(msg.sender,_amountBEB);\r\n        UsersDays[msg.sender]=UsersDays[msg.sender].sub(_days);\r\n        UsersTime[msg.sender]=UsersTime[msg.sender].add(_day);\r\n        if(UsersDays[msg.sender]==0){\r\n          Users[msg.sender]=0;  \r\n        }\r\n        \r\n    }\r\n    function ContractWithdrawal(address to,uint amountETH)public{\r\n        require(senderLooks[msg.sender],\"No permission to issue additional beb\");\r\n        IWETH(WETH).withdraw(amountETH);\r\n        TransferHelper.safeTransferETH(to, amountETH);\r\n    }\r\n    function tokenToETHtoBEB(address addr) public view returns (uint amountETH,uint amountBEB,uint amountDAY,uint amountDAYtime){\r\n        require(UsersDays[addr]>0 && Users[addr]>0);\r\n        if(block.timestamp>UsersTime[addr]){\r\n            uint _time=block.timestamp.sub(UsersTime[addr]);\r\n        if(_time>86400){\r\n           amountETH=Users[addr]/100;\r\n           amountBEB=amountETH.mul(1 ether)/BEBpoint;\r\n           amountDAYtime=_time;\r\n           amountDAY=amountDAYtime/ 86400;\r\n          amountBEB=amountBEB.mul(amountDAY);\r\n          amountETH=amountETH.mul(amountDAY);\r\n        }else{\r\n             amountDAYtime=0;\r\n        }\r\n     }\r\n    }\r\n}\r\n\r\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\r\n\r\nlibrary SafeMath {\r\n    function add(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x + y) >= x, 'ds-math-add-overflow');\r\n    }\r\n\r\n    function sub(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\r\n    }\r\n\r\n    function mul(uint x, uint y) internal pure returns (uint z) {\r\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\r\n    }\r\n}\r\nlibrary TransferHelper {\r\n    function safeTransferETH(address to, uint value) internal {\r\n        (bool success,) = to.call{value:value}(new bytes(0));\r\n        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"AddBEBpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"AdditionalAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BEBpoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ContractUserWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"name\":\"ContractWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CreateContract\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"UsersDays\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"UsersTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onwer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderLooks\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"tokenToETHtoBEB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBEB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountDAY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountDAYtime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"ETHtoBEB","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://65f0b55be550c34c307a010e50c7dfd0102021962306296b1f083a6f969f5024"}]}