{"status":"1","message":"OK","result":[{"SourceCode":"// \"SPDX-License-Identifier: UNLICENSED\"\r\n\r\npragma solidity 0.7.4;\r\n\r\ncontract NewQ {\r\n\r\nusing SafeMath for uint256;\r\n\r\nstring public constant symbol = \"xxxQ\";\r\nstring public constant name = \"Test Qxxx\";\r\nuint8 public constant decimals = 16;\r\n\r\nuint256 _totalSupply;\r\naddress owner;\r\n\r\nmapping(address => uint256) balances;\r\nmapping(address => mapping (address => uint256)) allowances;\r\n\r\n//Data\r\n    string public companyName;\r\n    uint256 public assetsTransactionCount;\r\n\r\n    mapping(uint => _assetsTransaction) public assetsTransaction;\r\n\r\n    struct _assetsTransaction {\r\n        uint _id;\r\n        \r\n        string _dateTime;\r\n        string _action;\r\n        string _description;\r\n        string _transactionValue;\r\n        string _newGoodwill;\r\n   }\r\nconstructor() {\r\n    \r\n    owner = msg.sender;\r\n    _totalSupply = 50000000000000000000000000;\r\n    balances[owner] = _totalSupply;\r\n    \r\n    companyName = \"GBI AG\";\r\n    assetsTransactionCount = 0;\r\n    assetsTransaction[0] = _assetsTransaction(0, \"01.01.2020\", \"Start\", \"Start Beschreibung\", \"0\", \"0\");\r\n    \r\n    emit Transfer(address(0), owner, _totalSupply);\r\n}\r\nfunction totalSupply() public view returns (uint256) {\r\n   return _totalSupply;\r\n}\r\nfunction getOwner() public view returns (address) {\r\n   return owner;\r\n}\r\nfunction balanceOf(address account) public view returns (uint256 balance) {\r\n   return balances[account];\r\n}\r\nfunction transfer(address _to, uint256 _amount) public returns (bool success) {\r\n    require(msg.sender != address(0), \"ERC20: approve from the zero address\");\r\n    require(_to != address(0), \"ERC20: approve from the zero address\");\r\n    require(balances[msg.sender] >= _amount);\r\n    balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n    balances[_to] = balances[_to].add(_amount);\r\n    emit Transfer(msg.sender, _to, _amount);\r\n    return true;\r\n}\r\nfunction transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\r\n    require(_from != address(0), \"ERC20: approve from the zero address\");\r\n    require(_to != address(0), \"ERC20: approve from the zero address\");\r\n    require(balances[_from] >= _amount && allowances[_from][msg.sender] >= _amount);\r\n    balances[_from] = balances[_from].sub(_amount);\r\n    allowances[_from][msg.sender] = allowances[_from][msg.sender].sub(_amount);\r\n    balances[_to] = balances[_to].add(_amount);\r\n    emit Transfer(_from, _to, _amount);\r\n    return true;\r\n}\r\nfunction approve(address spender, uint256 _amount) public returns (bool) {\r\n    _approve(msg.sender, spender, _amount);\r\n    return true;\r\n}\r\nfunction _approve(address _owner, address _spender, uint256 _amount) internal {\r\n    require(_owner != address(0), \"ERC20: approve from the zero address\");\r\n    require(_spender != address(0), \"ERC20: approve to the zero address\");\r\n    allowances[_owner][_spender] = _amount;\r\n    emit Approval(_owner, _spender, _amount);\r\n    }\r\nfunction allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n   return allowances[_owner][_spender];\r\n}\r\n\r\nfunction decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(msg.sender, spender, allowances[msg.sender][spender].sub(subtractedValue));\r\n    return true;\r\n}\r\nfunction increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, allowances[msg.sender][spender].add(addedValue));\r\n        return true;\r\n}\r\nfunction mint(uint256 _amount) public returns (bool success) {\r\n    require(msg.sender == owner, \"ERC20: only the owner can mint/generate new tokens\");\r\n    require(_amount > 0, \"ERC20: amount must be greater than zero\");\r\n    \r\n    _totalSupply = _totalSupply.add(_amount);\r\n    balances[owner] = balances[owner].add(_amount);\r\n\r\n    emit Minted(owner, _amount);\r\n    emit Transfer(address(0), owner, _amount);\r\n    \r\n    return true;\r\n}\r\nfunction burn(uint256 _amount) public returns (bool success) {\r\n    require(_amount > 0, \"ERC20: amount must be greater than zero\");\r\n    require(msg.sender == owner, \"ERC20: only the owner can mint/generate new tokens\");\r\n    require(balances[owner] >= _amount,\"ERC20: not enough tokens available\");\r\n \r\n    _totalSupply = _totalSupply.sub(_amount);\r\n    balances[owner] = balances[owner].sub(_amount);\r\n\r\n    emit Burned(owner, _amount);\r\n    emit Transfer(owner, address(0), _amount);\r\n   \r\n   return true;\r\n}\r\nfunction addAssetsTransaction(string calldata _dateTime, string calldata _action,\r\n                              string calldata _description, string calldata _transactionValue,\r\n                              string calldata _newGoodwill) external {\r\n    require(msg.sender == owner, \"ERC20: only the owner can add Assets\");\r\n    assetsTransactionCount += 1;\r\n    assetsTransaction[assetsTransactionCount] = \r\n        _assetsTransaction(assetsTransactionCount, _dateTime, _action, _description, _transactionValue, _newGoodwill);\r\n}\r\nfunction setCompanyName(string calldata _companyName) external {\r\n        require(msg.sender == owner, \"ERC20: only the owner can add Assets\");\r\n    companyName = _companyName;\r\n}\r\n\r\nevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\nevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\nevent Minted(address indexed _owner, uint256 _value);\r\nevent Burned(address indexed _owner, uint256 _value);\r\n\r\n}\r\n\r\nlibrary SafeMath {\r\n    \r\nfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n    return c;\r\n}\r\nfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b <= a, \"SafeMath: subtraction overflow\");\r\n    uint256 c = a - b;\r\n    return c;\r\n}\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dateTime\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_action\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_transactionValue\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_newGoodwill\",\"type\":\"string\"}],\"name\":\"addAssetsTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetsTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_dateTime\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_action\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_transactionValue\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_newGoodwill\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetsTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"companyName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_companyName\",\"type\":\"string\"}],\"name\":\"setCompanyName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"NewQ","CompilerVersion":"v0.7.4+commit.3f05b770","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f2ee33964806e78a5038e1abb7425f73a627c1703bcc080460a09508b1a7f924"}]}