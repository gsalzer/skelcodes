{"status":"1","message":"OK","result":[{"SourceCode":"//   __    __ _         _                   _____      _\r\n//  / / /\\ \\ (_)___  __| | ___  _ __ ___   /__   \\___ | | _____ _ __\r\n//  \\ \\/  \\/ / / __|/ _` |/ _ \\| '_ ` _ \\    / /\\/ _ \\| |/ / _ \\ '_ \\\r\n//   \\  /\\  /| \\__ \\ (_| | (_) | | | | | |  / / | (_) |   <  __/ | | |\r\n//    \\/  \\/ |_|___/\\__,_|\\___/|_| |_| |_|  \\/   \\___/|_|\\_\\___|_| |_|\r\n//\r\n//  Author: Grzegorz Kucmierz\r\n//  Source: https://github.com/gkucmierz/wisdom-token\r\n//    Docs: https://gkucmierz.github.io/wisdom-token\r\n//\r\n\r\npragma solidity ^0.7.2;\r\n\r\ncontract ERC20 {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) private allowed;\r\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual returns (bool) {\r\n        require(balanceOf[sender] >= amount);\r\n        balanceOf[sender] -= amount;\r\n        balanceOf[recipient] += amount;\r\n        emit Transfer(sender, recipient, amount);\r\n        return true;\r\n    }\r\n    function transfer(address recipient, uint256 amount) public returns (bool) {\r\n        return _transfer(msg.sender, recipient, amount);\r\n    }\r\n    function allowance(address holder, address spender) public view returns (uint256) {\r\n        return allowed[holder][spender];\r\n    }\r\n    function approve(address spender, uint256 amount) public returns (bool) {\r\n        require(balanceOf[msg.sender] >= amount);\r\n        allowed[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r\n        require(allowed[sender][msg.sender] >= amount);\r\n        _transfer(sender, recipient, amount);\r\n        allowed[sender][msg.sender] -= amount;\r\n        return true;\r\n    }\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed holder, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Ownable {\r\n    address owner;\r\n    address newOwner;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    function changeOwner(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwner() public {\r\n        require(newOwner == msg.sender);\r\n        owner = msg.sender;\r\n        emit TransferOwnership(msg.sender);\r\n    }\r\n\r\n    event TransferOwnership(address newOwner);\r\n}\r\n\r\ninterface IERC667Receiver {\r\n    function onTokenTransfer(address from, uint256 amount, bytes calldata data) external;\r\n}\r\n\r\ncontract ERC667 is ERC20 {\r\n    function transferAndCall(address recipient, uint amount, bytes calldata data) public returns (bool) {\r\n        bool success = _transfer(msg.sender, recipient, amount);\r\n        if (success){\r\n            IERC667Receiver(recipient).onTokenTransfer(msg.sender, amount, data);\r\n        }\r\n        return success;\r\n    }\r\n}\r\n\r\ncontract Pausable is Ownable {\r\n    bool public paused = true;\r\n    modifier whenNotPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n    modifier whenPaused() {\r\n        require(paused);\r\n        _;\r\n    }\r\n    function pause() onlyOwner whenNotPaused public {\r\n        paused = true;\r\n        emit Pause();\r\n    }\r\n    function unpause() onlyOwner whenPaused public {\r\n        paused = false;\r\n        emit Unpause();\r\n    }\r\n\r\n    event Pause();\r\n    event Unpause();\r\n}\r\n\r\ncontract Issuable is ERC20, Ownable {\r\n    bool locked = false;\r\n    modifier whenUnlocked() {\r\n        require(!locked);\r\n        _;\r\n    }\r\n    function issue(address[] memory addr, uint256[] memory amount) public onlyOwner whenUnlocked {\r\n        require(addr.length == amount.length);\r\n        uint8 i;\r\n        uint256 sum = 0;\r\n        for (i = 0; i < addr.length; ++i) {\r\n            balanceOf[addr[i]] = amount[i];\r\n            emit Transfer(address(0x0), addr[i], amount[i]);\r\n            sum += amount[i];\r\n        }\r\n        totalSupply += sum;\r\n    }\r\n    function lock() internal onlyOwner whenUnlocked {\r\n        locked = true;\r\n    }\r\n}\r\n\r\ncontract WisdomToken is ERC667, Pausable, Issuable {\r\n    constructor() {\r\n        name = 'Experty Wisdom Token';\r\n        symbol = 'WIS';\r\n        decimals = 18;\r\n        totalSupply = 0;\r\n    }\r\n    function _transfer(address sender, address recipient, uint256 amount)\r\n        internal whenNotPaused override returns (bool) {\r\n        return super._transfer(sender, recipient, amount);\r\n    }\r\n    function alive(address _newOwner) public {\r\n        lock();\r\n        unpause();\r\n        changeOwner(_newOwner);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"alive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addr\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"issue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"WisdomToken","CompilerVersion":"v0.7.4+commit.3f05b770","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://0d8f691582b2aacc86dac234ed0518ff79c96961167718e9141d64503e4fb210"}]}