{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity =0.6.6;\r\ninterface INewSageRouterFactory{\r\n    function creatNewSageRouter(address _uniswapV2Router02Address,\r\n        address _WETHAddress,\r\n        address _DETOAddress,\r\n        address _uniswapV2PairAddress,\r\n        address _factoryAddress,\r\n        uint256 _threshold,\r\n        address _ownerAddress)\r\n       external   returns(address);\r\n}\r\ninterface ISmartMatrixNewsageFactory{\r\n    function creatSmartMatrixNewsage(address ownerAddress,address routerAddress)\r\n      external    returns(address);\r\n}\r\ninterface IDETORole {\r\n    function upRoleMinter(address minter) external;\r\n    function upRoleBurner(address burner) external;\r\n}\r\ncontract Factory  {\r\n    INewSageRouterFactory public  NewSageRouterFactory ;\r\n    ISmartMatrixNewsageFactory public  SmartMatrixNewsageFactory ;\r\n     address public uniswapV2Router02Address;\r\n     address public WETHAddress;\r\n     address public DETOAddress;\r\n     address public uniswapV2PairAddress;\r\n    uint256 public lastId ;\r\n    IDETORole public DETO;\r\n    address public owner;\r\n    struct Game {\r\n        uint256 id;\r\n        address NewSageRouterAddress;\r\n        address SmartMatrixNewsageAddress;\r\n        address ownerAddress;\r\n        bool isStart;\r\n    }\r\n    mapping(uint256 => Game) public Games;\r\n     constructor(\r\n        address _NewSageRouterFactoryAddress,\r\n        address _SmartMatrixNewsageFactoryAddress,\r\n        address _uniswapV2Router02Address,\r\n        address _WETHAddress,\r\n        address _DETOAddress,\r\n        address _uniswapV2PairAddress,\r\n        address _ownerAddress\r\n     ) public  {\r\n         owner=_ownerAddress;\r\n        NewSageRouterFactory= INewSageRouterFactory(_NewSageRouterFactoryAddress);\r\n        SmartMatrixNewsageFactory= ISmartMatrixNewsageFactory(_SmartMatrixNewsageFactoryAddress);\r\n         DETO = IDETORole(_DETOAddress);\r\n         lastId = 0;\r\n        uniswapV2Router02Address=_uniswapV2Router02Address;\r\n        WETHAddress=_WETHAddress;\r\n        DETOAddress=_DETOAddress;\r\n        uniswapV2PairAddress=_uniswapV2PairAddress;\r\n    }\r\n    function startGame()public {\r\n        require(lastId>0, \"Factory: lastId>0\");\r\n        require(!Games[lastId-1].isStart, \"Factory: !Games[lastId-1].isStart\");\r\n        require(Games[lastId-1].SmartMatrixNewsageAddress==address(0), \"Factory: Games[lastId-1].SmartMatrixNewsageAddress==address(0)\");\r\n        Games[lastId-1].SmartMatrixNewsageAddress = SmartMatrixNewsageFactory.creatSmartMatrixNewsage(Games[lastId-1].ownerAddress,Games[lastId-1].NewSageRouterAddress);\r\n        Games[lastId-1].isStart=true;\r\n\r\n\r\n    }\r\n    function init(uint256 _threshold)public{\r\n        require(lastId==0, \"Factory: lastId==0\");\r\n            address NewSageRouterAddress=NewSageRouterFactory.creatNewSageRouter(uniswapV2Router02Address,WETHAddress,DETOAddress,uniswapV2PairAddress,address(this),_threshold,owner);\r\n             DETO.upRoleMinter(NewSageRouterAddress);\r\n             DETO.upRoleBurner(NewSageRouterAddress);\r\n            Game  memory game = Game({\r\n                id: lastId,\r\n                NewSageRouterAddress: NewSageRouterAddress,\r\n                SmartMatrixNewsageAddress:address(0),\r\n                ownerAddress:owner,\r\n                isStart:false\r\n            });\r\n             Games[lastId]=game;\r\n            lastId++;\r\n        \r\n    }\r\n    function newFactory(address _ownerAddress,uint256 _threshold)public{\r\n        if(msg.sender==owner){\r\n            address NewSageRouterAddress=NewSageRouterFactory.creatNewSageRouter(uniswapV2Router02Address,WETHAddress,DETOAddress,uniswapV2PairAddress,address(this),_threshold,owner);\r\n             DETO.upRoleMinter(NewSageRouterAddress);\r\n             DETO.upRoleBurner(NewSageRouterAddress);\r\n            Game  memory game = Game({\r\n                id: lastId,\r\n                NewSageRouterAddress: NewSageRouterAddress,\r\n                SmartMatrixNewsageAddress:address(0),\r\n                ownerAddress:owner,\r\n                isStart:false\r\n            });\r\n             Games[lastId]=game;\r\n            lastId++;\r\n            return;\r\n        }\r\n        bool isRouterMS= false;\r\n        for(uint256 i=0;i<lastId;i++){\r\n            if(Games[i].NewSageRouterAddress==msg.sender){\r\n                isRouterMS=true;\r\n                break;\r\n            }\r\n        }\r\n        if(isRouterMS){\r\n           address NewSageRouterAddress=NewSageRouterFactory.creatNewSageRouter(uniswapV2Router02Address,WETHAddress,DETOAddress,uniswapV2PairAddress,address(this),_threshold,owner);\r\n           \r\n             DETO.upRoleMinter(NewSageRouterAddress);\r\n             DETO.upRoleBurner(NewSageRouterAddress);\r\n\r\n            Game  memory game = Game({\r\n                id: lastId,\r\n                NewSageRouterAddress: NewSageRouterAddress,\r\n                SmartMatrixNewsageAddress:address(0),\r\n                ownerAddress:_ownerAddress,\r\n                isStart:false\r\n            });\r\n        \r\n             Games[lastId]=game;\r\n            lastId++;\r\n        }\r\n        \r\n    }\r\n    function getlastRouterAndNewsageAddress()public view returns(address NewSageRouterAddress,address SmartMatrixNewsageAddress){\r\n        NewSageRouterAddress= Games[lastId-1].NewSageRouterAddress;\r\n        SmartMatrixNewsageAddress= Games[lastId-1].SmartMatrixNewsageAddress;\r\n    }\r\n    receive () external payable { \r\n    \t\r\n\t}\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_NewSageRouterFactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_SmartMatrixNewsageFactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapV2Router02Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETHAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_DETOAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapV2PairAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ownerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DETO\",\"outputs\":[{\"internalType\":\"contract IDETORole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DETOAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Games\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"NewSageRouterAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"SmartMatrixNewsageAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isStart\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NewSageRouterFactory\",\"outputs\":[{\"internalType\":\"contract INewSageRouterFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SmartMatrixNewsageFactory\",\"outputs\":[{\"internalType\":\"contract ISmartMatrixNewsageFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETHAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getlastRouterAndNewsageAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"NewSageRouterAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"SmartMatrixNewsageAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"newFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2PairAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router02Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Factory","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000150c4c2295082f967c2bc9427746a590d63dec31000000000000000000000000f315cf7ed88913432eafff4bfb1d01a13d8dcaa40000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000e2fa8314fc0f654f350adddaf9139d2f0d59067f000000000000000000000000e04a423bddb7771c02a202045910f5b05d15874d0000000000000000000000005e5054145b97c6533967c72df2b7fe498375b49b","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://6d3add34ff7125757d05b76832183914162c68717cf3f71e71864f947e37e2bb"}]}