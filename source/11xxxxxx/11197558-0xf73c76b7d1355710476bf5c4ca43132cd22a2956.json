{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma experimental ABIEncoderV2;\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract ETH_3Day {\r\n    using SafeMath for uint256;\r\n    uint256 constant public CONTRACT_BALANCE_STEP = 3;\r\n    address public manager;\r\n    uint256 public day = 3 days;\r\n    uint256 public rechargeTime;\r\n    uint256 public minAmount = 1 ether;\r\n    uint256 public percentage = 900;\r\n    uint256 public totalUsers;\r\n    \r\n    address public ERC20;\r\n    \r\n    struct RechargeInfo{\r\n        address rec_addr;\r\n        uint256 rec_value;\r\n        uint256 rec_time;\r\n    }\r\n    RechargeInfo[] public rechargeAddress;\r\n    struct UserInfo {\r\n\t\taddress   referrer;   \r\n        address[] directPush; \r\n        uint256 amountWithdrawn;\r\n        uint256 distributionIncome72;\r\n    }\r\n    mapping(address => UserInfo) public user;\r\n    mapping(address => uint256) public balance;\r\n    mapping(address => mapping(address => bool)) public userDireMap;\r\n    \r\n    constructor(address _token)public{\r\n        manager = msg.sender;\r\n        ERC20 = _token;\r\n     }\r\n    \r\n    // 充值\r\n    function deposit(address referrer,uint256 value)  public {\r\n        require(value >= minAmount,\"Top up cannot be less than 1 eth\");\r\n        // 验证72小时-分钱\r\n        distribution72();\r\n        \r\n        IERC20(ERC20).transferFrom(msg.sender,address(this),value);\r\n        UserInfo storage u = user[msg.sender];\r\n        //  当前用户没有上    &&      推荐人 不能是 自己\r\n\t\tif (u.referrer == address(0) && referrer != msg.sender) {\r\n\t\t\t// 添加上级\r\n            u.referrer = referrer;\r\n            if (userDireMap[referrer][msg.sender] == false){\r\n                // 给上级添加当前下级\r\n                user[referrer].directPush.push(msg.sender);\r\n                userDireMap[referrer][msg.sender] = true;\r\n            }\r\n\t\t}\r\n\t\t\r\n\t\tif (balance[msg.sender] == 0){\r\n\t\t    totalUsers = totalUsers.add(1);\r\n\t\t}\r\n\t\t// 充值\r\n\t\tbalance[msg.sender] = balance[msg.sender].add(value);\r\n\t\trechargeAddress.push(RechargeInfo({rec_addr:msg.sender,rec_value:value,rec_time:block.timestamp}));\r\n\t\trechargeTime = block.timestamp;\r\n    }\r\n    \r\n    // 提币\r\n    function withdraw(uint256 value) public {\r\n        require(value > 0 && directPushMultiple(msg.sender) >= 3,\"3 times withdrawal\");\r\n        // 验证是否有足够提取额度\r\n        uint256 count = availableQuantity(msg.sender);\r\n        require(count >= value,\"Not enough quota\");\r\n        // 提币\r\n        IERC20(ERC20).transfer(msg.sender,value);\r\n        user[msg.sender].amountWithdrawn = user[msg.sender].amountWithdrawn.add(value);\r\n    }\r\n    \r\n    // pool 总量\r\n    function getPoolETH() view public returns(uint256){\r\n        return IERC20(ERC20).balanceOf(address(this));\r\n    }\r\n    \r\n    // 充值总笔数\r\n    function getRecTotal() view public returns(uint256){\r\n        return rechargeAddress.length;\r\n    }\r\n    \r\n    // 最后10笔交易\r\n    function getRec10() view public returns(RechargeInfo[] memory){\r\n        uint256 l = rechargeAddress.length;\r\n        uint256 a = 0;\r\n        uint256 i = 0;\r\n        if (rechargeAddress.length>10){\r\n            l = 10;\r\n            a = rechargeAddress.length.sub(10);\r\n        }\r\n        RechargeInfo[] memory data = new RechargeInfo[](l);\r\n        for (;a < rechargeAddress.length; a++){\r\n            data[i] = rechargeAddress[a];\r\n            i = i+1;\r\n        }\r\n        return data;\r\n    }\r\n    \r\n    // 超过72小时分币\r\n    function distribution72() public {\r\n        if (isTime() == false){return;}\r\n        uint256 a = 0;\r\n        if (rechargeAddress.length>50){\r\n            a = rechargeAddress.length.sub(50);\r\n        }\r\n        uint256 total = (IERC20(ERC20).balanceOf(address(this)).mul(percentage)).div(uint256(1000));\r\n        for (;a < rechargeAddress.length; a++){\r\n            user[rechargeAddress[a].rec_addr].distributionIncome72 = user[rechargeAddress[a].rec_addr].distributionIncome72.add(total.div(100));\r\n        }\r\n        return;\r\n    }\r\n    \r\n    // 当前时间是否大于 72 小时\r\n    function isTime()view public returns(bool) {\r\n        if ((block.timestamp.sub(rechargeTime)) >= day && rechargeTime != 0){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    // 直推倍数\r\n    function directPushMultiple(address addr) view public isAddress(addr) returns(uint256) {\r\n        if(balance[addr] == 0){\r\n            return 0;\r\n        }\r\n        return getDirectTotal(addr).div(balance[addr]);\r\n    }\r\n    \r\n    // 最大收益\r\n    function getMaxIncome(address addr) view public isAddress(addr) returns(uint256){\r\n        return directPushMultiple(addr).mul(balance[addr]);\r\n    }\r\n    \r\n    // 当前收益\r\n    function getIncome(address addr) view public isAddress(addr) returns(uint256){\r\n        uint256 multiple = directPushMultiple(addr);\r\n        if (multiple == 0){\r\n            return 0;\r\n        }\r\n        if (multiple > 3){\r\n            multiple = 3;\r\n        }\r\n        return balance[addr].mul(multiple);\r\n    }\r\n    \r\n    // 当前已提取数量\r\n    function numberWithdrawn(address addr) view public isAddress(addr) returns(uint256) {\r\n        return user[addr].amountWithdrawn;\r\n    }\r\n    \r\n    // 当前可提取数量\r\n    function availableQuantity(address addr) view public isAddress(addr) returns(uint256) {\r\n        if (directPushMultiple(addr) < 3){\r\n            return 0;\r\n        }\r\n        return getIncome(addr).sub(numberWithdrawn(addr));\r\n    }\r\n    \r\n    // 追投计算  (直推总额 - (本金 * 3)) / 3                 追投数量，获得金额\r\n    function additionalThrow(address addr) view public isAddress(addr) returns(uint256,uint256){\r\n        // 直推总额\r\n        uint256 dirTotal = getDirectTotal(addr);\r\n        // 用户当前收益\r\n        uint256 userTotal = getIncome(addr);\r\n        // 追投数量\r\n        uint256 ztAmount = (dirTotal.sub(userTotal)).div(CONTRACT_BALANCE_STEP);\r\n        // uint256 t = ztAmount.div(CONTRACT_BALANCE_STEP);\r\n        return (ztAmount,ztAmount.mul(CONTRACT_BALANCE_STEP));\r\n    }\r\n    \r\n    // 获取下级充值总额\r\n    function getDirectTotal(address addr) view public isAddress(addr) returns(uint256) {\r\n        UserInfo memory u = user[addr];\r\n        if (u.directPush.length == 0){return (0);}\r\n        uint256 total;\r\n        for (uint256 i= 0; i<u.directPush.length;i++){\r\n            total += balance[u.directPush[i]];\r\n        }\r\n        return (total);\r\n    }\r\n    \r\n    // 72收益领取\r\n    function distributionIncome72()public{\r\n        require(user[msg.sender].distributionIncome72 > 0);\r\n        IERC20(ERC20).transfer(msg.sender,user[msg.sender].distributionIncome72);\r\n    }\r\n    \r\n    // 获取用户下级\r\n    function getDirectLength(address addr) view public isAddress(addr) returns(uint256){\r\n        return user[addr].directPush.length;\r\n    }\r\n    \r\n    // Owner 提币\r\n    function ownerWitETH(uint256 value) public onlyOwner{\r\n        require(getPoolETH() >= value);\r\n        IERC20(ERC20).transfer(msg.sender,value);\r\n    }\r\n    \r\n    // 权限转移\r\n    function ownerTransfer(address newOwner) public onlyOwner isAddress(newOwner) {\r\n        manager = newOwner;\r\n    }\r\n    \r\n    modifier isAddress(address addr) {\r\n        require(addr != address(0));\r\n        _;\r\n    }\r\n    \r\n    modifier onlyOwner {\r\n        require(manager == msg.sender);\r\n        _;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CONTRACT_BALANCE_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"additionalThrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"availableQuantity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"day\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"directPushMultiple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distribution72\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributionIncome72\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getDirectLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getDirectTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getMaxIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRec10\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"rec_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rec_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rec_time\",\"type\":\"uint256\"}],\"internalType\":\"struct ETH_3Day.RechargeInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"numberWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ownerWitETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rechargeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rec_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rec_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rec_time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rechargeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"user\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"distributionIncome72\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userDireMap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ETH_3Day","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000009183c4d9a1b1bce56bc5afda4f7ff1485a3ecaae","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://8b1edbefe0258d98f28b25bc6964dc30369d6533853fae90cecec0190897efbb"}]}