{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\ninterface IUniswapV2Router02 {\r\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);\r\n}\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract AutoSwap {\r\n    address private _admin;\r\n    IUniswapV2Router02 constant uniV2Router02 = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n    address constant WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n    address public token;\r\n    \r\n    modifier onlyAdmin() {\r\n        require(msg.sender == _admin, \"Not admin\");\r\n        _;\r\n    }\r\n    \r\n    constructor(address _token) {\r\n        _admin = msg.sender;\r\n        token = _token;\r\n    }\r\n    \r\n    function exchange() external payable returns (bool) {\r\n        address[] memory path = new address[](2);\r\n        path[0] = WETH;\r\n        path[1] = token;\r\n        uniV2Router02.swapExactETHForTokens{value:msg.value}(1, path, msg.sender, type(uint256).max);\r\n        return true;\r\n    }\r\n    \r\n    function setAdmin(address newAdmin) external onlyAdmin {\r\n        _admin = newAdmin;\r\n    }\r\n    \r\n    function seize(address _token, address to) external onlyAdmin returns (bool) {\r\n        if (_token != address(0)) {\r\n            uint256 amount = IERC20(_token).balanceOf(address(this));\r\n            IERC20(_token).transfer(to, amount);\r\n        }\r\n        else {\r\n            uint256 amount = address(this).balance;\r\n            payable(to).transfer(amount);\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    fallback () external payable { }\r\n    receive () external payable { }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"exchange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"seize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"AutoSwap","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000002af72850c504ddd3c1876c66a914caee7ff8a46a","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://3f359ec20c00848fccbdf2a91c7f2621788473389a356594617a06b79d5ac8a5"}]}