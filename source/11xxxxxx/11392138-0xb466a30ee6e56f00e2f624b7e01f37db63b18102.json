{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2020-11-11\r\n*/\r\n\r\npragma solidity ^0.5.2;\r\n\r\ncontract ERC20Token {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract LogERC20 {\r\n\r\n    event hasBeenSent(\r\n        address sender,\r\n        address recipient,\r\n        string target,\r\n        uint256 amount,\r\n        address contractAddress\r\n    );\r\n\r\n    address public erc20ContractAddress;\r\n    address public bridgeWalletAddress;\r\n\r\n    constructor(address _erc20ContractAddress, address _bridgeWalletAddress ) public {\r\n        erc20ContractAddress = _erc20ContractAddress;\r\n        bridgeWalletAddress = _bridgeWalletAddress;\r\n    }\r\n\r\n    function logSendMemo(\r\n        uint256 amount,\r\n        string memory target\r\n    ) public {\r\n        ERC20Token token = ERC20Token(erc20ContractAddress);\r\n        require(token.transferFrom(msg.sender, bridgeWalletAddress, amount), \"ERC20 token transfer was unsuccessful\");\r\n        emit hasBeenSent(msg.sender, bridgeWalletAddress, target, amount, erc20ContractAddress);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20ContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bridgeWalletAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"target\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"hasBeenSent\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeWalletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erc20ContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"target\",\"type\":\"string\"}],\"name\":\"logSendMemo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"LogERC20","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000761d827e90b1bd013f57289ed36e68ef42ef6f33000000000000000000000000c6e641f56b6fa8c675b8c9633d0e4e583511b69f","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3d7c59359849d650200f388342ab843a1e427501cfa6b95f93c47f5b2e8c5ccb"}]}