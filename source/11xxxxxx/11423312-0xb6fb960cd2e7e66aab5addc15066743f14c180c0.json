{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.19;\r\n\r\ncontract killcord {\r\n  string version;\r\n  string publishedKey;\r\n  string payloadEndpoint;\r\n  uint lastCheckIn;\r\n  address owner;\r\n  address publisher;\r\n  bool lockPublishedKey;\r\n  bool lockPayloadEndpoint;\r\n\r\n  // set the `owner` of the contract and log first `checkIn`\r\n  function killcord(address p) public {\r\n    owner = msg.sender;\r\n    publisher = p;\r\n    version = \"0.0.1\";\r\n    checkIn();\r\n  }\r\n\r\n  // a function modifier used to restrict most write functions to only\r\n  // the contract owner\r\n  modifier onlyOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  // a function modifier used to restrict publishing the key to only\r\n  // the owner or publisher addresses\r\n  modifier onlyOwnerOrPublisher {\r\n    bool ok = false;\r\n    if (msg.sender == publisher) {\r\n      ok = true;\r\n    }\r\n    if (msg.sender == owner) {\r\n      ok = true;\r\n    }\r\n    require(ok == true);\r\n    _;\r\n  }\r\n  \r\n  // This function is restricted to work with only the contract owner.\r\n  // friends don't let friends deploy contracts that can't be killed\r\n  function kill() public onlyOwner { \r\n    selfdestruct(owner);\r\n  }\r\n\r\n  // This function is restricted to work with only the contract owner.\r\n  // `block.timestamp` is known to tolerate datestamp drift of up to\r\n  // 900 seconds at the time of this writing, consider then when \r\n  // setting TTL thresholds for the publisher.\r\n  function checkIn() public onlyOwner {\r\n    lastCheckIn = block.timestamp;\r\n  }\r\n\r\n  // Outputs the `uint` for the last `block.timestamp`\r\n  // that registered to this contract on the blockchain.\r\n  function getLastCheckIn() public constant returns (uint) {\r\n    return lastCheckIn;\r\n  }\r\n\r\n  // Outputs the `string` for the last `block.timestamp`\r\n  // that registered to this contract on the blockchain.\r\n  function getPayloadEndpoint() public constant returns (string) {\r\n    return payloadEndpoint;\r\n  }\r\n\r\n  // This function is restricted to work with only the contract owner.\r\n  // Sets the Payload Endpoint after checking max length of the string.\r\n  // sets lockPayloadEndpoint to TRUE so that once set, this value can\r\n  // not be changed.\r\n  function setPayloadEndpoint(string s) public onlyOwner {\r\n    uint max = 512;\r\n    require(bytes(s).length <= max);\r\n    require(lockPayloadEndpoint == false);\r\n    payloadEndpoint = s;\r\n    lockPayloadEndpoint = true;\r\n  }\r\n\r\n  // getKey() simply outputs the `publishedKey` saved to the blockChain\r\n  function getKey() public constant returns (string) {\r\n    return publishedKey;\r\n  }\r\n\r\n  function getOwner() public constant returns (address) {\r\n    return owner;\r\n  }\r\n\r\n  function getPublisher() public constant returns (address) {\r\n    return publisher;\r\n  }\r\n\r\n  function getVersion() public constant returns (string) {\r\n    return version;\r\n  }\r\n\r\n  // This function is restricted to work with only the contract owner.\r\n  function setKey(string k) public onlyOwnerOrPublisher {\r\n    uint max = 128;\r\n    require(bytes(k).length <= max);\r\n    require(lockPublishedKey == false);\r\n    publishedKey = k;\r\n    lockPublishedKey = true;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkIn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getKey\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"s\",\"type\":\"string\"}],\"name\":\"setPayloadEndpoint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPayloadEndpoint\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"k\",\"type\":\"string\"}],\"name\":\"setKey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastCheckIn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPublisher\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"p\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"killcord","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000e862608dc411b6a4d5fae322ebede5da4a61a79d","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://8f11f21e43e60c2f2651683ad54927a9af0a6a6e2fd55ea0597814611475e73d"}]}