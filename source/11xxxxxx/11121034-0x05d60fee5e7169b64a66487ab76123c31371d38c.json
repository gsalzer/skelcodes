{"status":"1","message":"OK","result":[{"SourceCode":"/// ProtocolTokenAuthority -- custom authority for protocol token access control\r\n\r\n// Copyright (C) 2019 Maker Ecosystem Growth Holdings, INC.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published\r\n// by the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\npragma solidity ^0.6.7;\r\n\r\ncontract ProtocolTokenAuthority {\r\n  address public root;\r\n  address public owner;\r\n\r\n  modifier isRootCalling { require(msg.sender == root); _; }\r\n  modifier isRootOrOwnerCalling { require(msg.sender == root || owner == msg.sender); _; }\r\n\r\n  event SetRoot(address indexed newRoot);\r\n  event SetOwner(address indexed newOwner);\r\n\r\n  function setRoot(address usr) public isRootCalling {\r\n    root = usr;\r\n    emit SetRoot(usr);\r\n  }\r\n  function setOwner(address usr) public isRootOrOwnerCalling {\r\n    owner = usr;\r\n    emit SetOwner(usr);\r\n  }\r\n\r\n  mapping (address => uint) public authorizedAccounts;\r\n\r\n  event AddAuthorization(address indexed usr);\r\n  function addAuthorization(address usr) public isRootOrOwnerCalling { authorizedAccounts[usr] = 1; emit AddAuthorization(usr); }\r\n  event RemoveAuthorization(address indexed usr);\r\n  function removeAuthorization(address usr) public isRootOrOwnerCalling { authorizedAccounts[usr] = 0; emit RemoveAuthorization(usr); }\r\n\r\n  constructor() public {\r\n    root = msg.sender;\r\n    emit SetRoot(msg.sender);\r\n  }\r\n\r\n  // bytes4(keccak256(abi.encodePacked('burn(uint256)')))\r\n  bytes4 constant burn = bytes4(0x42966c68);\r\n  // bytes4(keccak256(abi.encodePacked('burn(address,uint256)')))\r\n  bytes4 constant burnFrom = bytes4(0x9dc29fac);\r\n  // bytes4(keccak256(abi.encodePacked('mint(address,uint256)')))\r\n  bytes4 constant mint = bytes4(0x40c10f19);\r\n\r\n  function canCall(address src, address, bytes4 sig)\r\n      public view returns (bool)\r\n  {\r\n    if (sig == burn || sig == burnFrom || src == root || src == owner) {\r\n      return true;\r\n    } else if (sig == mint) {\r\n      return (authorizedAccounts[src] == 1);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"AddAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"RemoveAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"SetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoot\",\"type\":\"address\"}],\"name\":\"SetRoot\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"addAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedAccounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"removeAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"root\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"setRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ProtocolTokenAuthority","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://c144c11dc17e1d97fe6b4933881bd748c7860a179e19caf361f6ec8763daee1e"}]}