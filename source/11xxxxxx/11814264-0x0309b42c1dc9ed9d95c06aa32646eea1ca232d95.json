{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: GPL-3.0-only\r\n\r\npragma solidity 0.7.4;\r\n\r\ninterface AggregatorV3Interface {\r\n\r\n  function decimals() external view returns (uint8);\r\n  function description() external view returns (string memory);\r\n  function version() external view returns (uint256);\r\n\r\n  // getRoundData and latestRoundData should both raise \"No data present\"\r\n  // if they do not have data to report, instead of returning unset values\r\n  // which could be misinterpreted as actual reported values.\r\n  function getRoundData(uint80 _roundId)\r\n    external\r\n    view\r\n    returns (\r\n      uint80 roundId,\r\n      int256 answer,\r\n      uint256 startedAt,\r\n      uint256 updatedAt,\r\n      uint80 answeredInRound\r\n    );\r\n  function latestRoundData()\r\n    external\r\n    view\r\n    returns (\r\n      uint80 roundId,\r\n      int256 answer,\r\n      uint256 startedAt,\r\n      uint256 updatedAt,\r\n      uint80 answeredInRound\r\n    );\r\n\r\n}\r\n\r\ncontract DummyChainLinkAggregatorETH is AggregatorV3Interface {\r\n\r\n    AggregatorV3Interface public feedTokenETH;\r\n    AggregatorV3Interface public feedETHUSD;\r\n\r\n\r\n    constructor(address feedA, address feedB) {\r\n        feedTokenETH = AggregatorV3Interface(feedA);\r\n        feedETHUSD = AggregatorV3Interface(feedB);\r\n    }\r\n\r\n    function decimals() external view override returns (uint8) {\r\n        // sum because we multiply the feeds, adding the exponents\r\n        return feedETHUSD.decimals() + feedTokenETH.decimals();\r\n    }\r\n\r\n    function description() external view override returns (string memory) {\r\n        return \"UMA/USD\";\r\n    }\r\n\r\n    function version() external view override returns (uint256) {\r\n        return 1;\r\n    }\r\n\r\n    function getRoundData(uint80 _roundId)\r\n        public\r\n        view\r\n        override\r\n        returns (\r\n          uint80 roundId,\r\n          int256 answer,\r\n          uint256 startedAt,\r\n          uint256 updatedAt,\r\n          uint80 answeredInRound\r\n        ){\r\n        return (0, 0, 0, 0, 0);\r\n    }\r\n\r\n    function latestRoundData()\r\n        public\r\n        view\r\n        override\r\n        returns (\r\n          uint80 roundId,\r\n          int256 answer,\r\n          uint256 startedAt,\r\n          uint256 updatedAt,\r\n          uint80 answeredInRound\r\n        ){\r\n        (, int priceTokenETH, , ,) = feedTokenETH.latestRoundData();\r\n        (, int priceETHUSD, , ,) = feedETHUSD.latestRoundData();\r\n        return (0, priceTokenETH * priceETHUSD, 0, 0, 0);\r\n    }\r\n\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feedA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feedB\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feedETHUSD\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feedTokenETH\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"DummyChainLinkAggregatorETH","CompilerVersion":"v0.7.4+commit.3f05b770","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000024551a8fb2a7211a25a17b1481f043a8a8adc7f20000000000000000000000005f4ec3df9cbd43714fe2740f5e3616155c5b8419","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ca23a066941927534edb37d1e3bc9f5b2c5daa623bed18c14e2aa19ff21767a4"}]}