{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity >=0.6.12;\r\npragma experimental ABIEncoderV2;\r\n\r\nenum State {Inactive, Active, Exercised, Expired}\r\nenum OptionType {Invalid, Put, Call}\r\n\r\nstruct Option {\r\n    State state;\r\n    address payable holder;\r\n    uint256 strike;\r\n    uint256 amount;\r\n    uint256 lockedAmount;\r\n    uint256 premium;\r\n    uint256 expiration;\r\n    OptionType optionType;\r\n}\r\n\r\ninterface IHegicPool {\r\n    function totalBalance() external view returns (uint256 amount);\r\n\r\n    function availableBalance() external view returns (uint256 amount);\r\n}\r\n\r\ninterface IHegicOptions {\r\n\r\n    function pool() external view returns (address poolAddress);\r\n\r\n    function unlockAll(uint256[] calldata optionsIDs) external;\r\n\r\n    function options(uint256) external view returns (Option memory);\r\n\r\n}\r\n\r\ncontract HegicOptionsDataHelper {\r\n    \r\n    function getUnlockableOptionsCount(address optionpool,uint256 limit) public view returns (uint256 count) {\r\n        count = 0;\r\n        for(uint i=0;i<limit;i++) {\r\n            if(_totalUnlock(optionpool,limit))\r\n               ++count;\r\n        }\r\n    }\r\n\r\n    function GetUnlockableOptions(address optionpool,uint256 limit) public view returns (uint256[] memory unlockableIDS) {\r\n        unlockableIDS = new uint256[](getUnlockableOptionsCount(optionpool,limit));\r\n        uint256 index = 0;\r\n        for(uint i=0;i<limit;i++){\r\n            if(_totalUnlock(optionpool,limit))\r\n               unlockableIDS[index] = i;\r\n               index++;\r\n        }\r\n    }\r\n    \r\n    function _totalUnlock(address hegic, uint256 optionID) internal view returns (bool) {\r\n        Option memory option = IHegicOptions(hegic).options(optionID);\r\n        // if one of the options is not active or not expired, do not continue\r\n        if (option.state != State.Active || option.expiration >= block.timestamp) {\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"optionpool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"GetUnlockableOptions\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"unlockableIDS\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"optionpool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getUnlockableOptionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"HegicOptionsDataHelper","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f52036328f5fee0f61e3d778f4cebf1903dde9532daf52ea9f4e9c7436de0cdd"}]}