{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n        // -------------------------------------------------------------------------\r\n        // MEMELLIONAIRE token contract\r\n        // -------------------------------------------------------------------------\r\n\r\n        contract MEMELLIONAIRE\r\n        {\r\n        string public constant symbol = 'MONY';\r\n        string public constant name = 'MEMELLIONAIRE';\r\n        uint8 public constant decimals = 0;\r\n        uint256 _totalSupply = 13001000000;\r\n\r\n\r\n        // Balances for each account\r\n        mapping(address => uint256) balances;\r\n\r\n        // Owner of account approves the transfer of an amount to another account\r\n        mapping(address => mapping (address => uint256)) allowed;\r\n\r\n        // Triggered when tokens are transferred.\r\n        event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n        // Triggered whenever approve(address _spender, uint256 _value) is called.\r\n        event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n        // Constructor\r\n        function MEMELLIONAIRE() {\r\n\r\n            balances[msg.sender] =_totalSupply;\r\n            Transfer(0x00,msg.sender,_totalSupply);\r\n\r\n\r\n        }\r\n\r\n        function totalSupply() constant returns (uint256 totalSupply) {\r\n            return _totalSupply;\r\n        }\r\n\r\n        // What is the balance of a particular account?\r\n        function balanceOf(address _owner) constant returns (uint256 balance) {\r\n            return balances[_owner];\r\n        }\r\n\r\n        // Transfer the balance from owner's account to another account\r\n        function transfer(address _to, uint256 _amount) returns (bool success) {\r\n            if (balances[msg.sender] >= _amount\r\n                && _amount > 0\r\n                && balances[_to] + _amount > balances[_to]) {\r\n                balances[msg.sender] -= _amount;\r\n                balances[_to] += _amount;\r\n                Transfer(msg.sender, _to, _amount);\r\n                return true;\r\n            } else {\r\n                return false;}\r\n        }\r\n\r\n        // Send _value amount of tokens from address _from to address _to\r\n        function transferFrom(\r\n            address _from,\r\n            address _to,\r\n            uint256 _amount\r\n        ) returns (bool success) {\r\n            if (balances[_from] >= _amount\r\n                && allowed[_from][msg.sender] >= _amount\r\n                && _amount > 0\r\n                && balances[_to] + _amount > balances[_to]) {\r\n                balances[_from] -= _amount;\r\n                allowed[_from][msg.sender] -= _amount;\r\n                balances[_to] += _amount;\r\n                Transfer(_from, _to, _amount);\r\n                return true;\r\n            } else {\r\n                return false;}\r\n        }\r\n\r\n        function approve(address _spender, uint256 _amount)\r\n            returns (bool success) {\r\n            allowed[msg.sender][_spender] = _amount;\r\n            Approval(msg.sender, _spender, _amount);\r\n            return true;\r\n        }\r\n\r\n        function allowance(address _owner, address _spender)\r\n            constant returns (uint256 remaining) {\r\n            return allowed[_owner][_spender];\r\n\r\n            }\r\n\r\n        }","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"MEMELLIONAIRE","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://c8fd57b46dc07a64fc61b5c828c7135dd9a83b6faf225305d22a2a879b50bdba"}]}