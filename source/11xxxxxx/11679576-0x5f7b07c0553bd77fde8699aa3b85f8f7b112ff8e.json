{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n//\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address tokenOwner) external view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) external view returns (uint remaining);\r\n    function transfer(address to, uint tokens) external returns (bool success);\r\n    function approve(address spender, uint tokens) external returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Safe Math Library \r\n// ----------------------------------------------------------------------------\r\ncontract SafeMath {\r\n    function safeAdd(uint a, uint b) internal  pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function safeSub(uint a, uint b) internal  pure returns (uint c) {\r\n        require(b <= a); \r\n        c = a - b; \r\n    } \r\n    function safeMul(uint a, uint b) internal  pure returns (uint c) {\r\n        c = a * b; \r\n        require(a == 0 || c / a == b); \r\n    } \r\n    function safeDiv(uint a, uint b) internal  pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n\r\ncontract PACT is ERC20Interface, SafeMath {\r\n    string  _name;\r\n    string  _symbol;\r\n    uint8  _decimals; // 18 decimals is the strongly suggested default, avoid changing it\r\n    address admin =0xbb386ad93d34255dE7b74C3ceDBeE6aD9D83364F;\r\n    address zero = 0x0000000000000000000000000000000000000000;\r\n    uint256  _totalSupply;\r\n    uint256 AmountBasePool = 300000000000000000000000000;\r\n    uint256 AmountReserve =  200000000000000000000000000;\r\n    uint256 AmountTeam=      100000000000000000000000000;\r\n    uint256 AmountRewards =  200000000000000000000000000;\r\n    uint256 AmountFarming =  200000000000000000000000000;\r\n    \r\n    mapping(address => uint) balances;\r\n    mapping(address => mapping(address => uint)) allowed;\r\n    \r\n    /**\r\n     * Constrctor function\r\n     *\r\n     */\r\n    constructor() public  {\r\n        _name = \"P2PB2B community token\";\r\n        _symbol = \"PACT\";\r\n        _decimals = 18;\r\n        _totalSupply = 1000000000000000000000000000;\r\n        \r\n        \r\n        balances[address(0)] = _totalSupply;\r\n    }\r\n    function burn(address _from, uint tokens) external returns (bool success) {\r\n        require(msg.sender == admin);\r\n        require(balances[_from] >= tokens);\r\n        balances[_from] =safeSub( balances[_from], tokens);\r\n        emit Transfer(_from, zero, tokens);\r\n        _totalSupply = safeSub(_totalSupply, tokens);\r\n        return true;\r\n    }\r\n    function name()  external view returns (string memory) {\r\n        return _name;\r\n    }\r\n    function symbol()  external view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n    function decimals() external view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n    function totalSupply() external view returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n    \r\n    function balanceOf(address tokenOwner) external view returns (uint balance) {\r\n        return balances[tokenOwner];\r\n    }\r\n    \r\n    function allowance(address tokenOwner, address spender) external view returns (uint remaining) {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n    \r\n    function approve(address spender, uint tokens) external returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n    \r\n    function transfer(address to, uint tokens) external returns (bool success) {\r\n        balances[msg.sender] = safeSub(balances[msg.sender], tokens);\r\n        balances[to] = safeAdd(balances[to], tokens);\r\n        emit Transfer(msg.sender, zero, tokens);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address from, address to, uint tokens) external returns (bool success) {\r\n        balances[from] = safeSub(balances[from], tokens);\r\n        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);\r\n        balances[to] = safeAdd(balances[to], tokens);\r\n        emit Transfer(from, to, tokens);\r\n        return true;\r\n    }\r\n    function setupBasePool(address basepool) external returns (bool success) {\r\n        require(msg.sender == admin);\r\n        require(AmountBasePool > 0);\r\n        balances[basepool] = safeAdd(balances[basepool], AmountBasePool);\r\n        uint256 _amount = AmountBasePool;\r\n        AmountBasePool=0;\r\n        emit Transfer(address(0), basepool, _amount);\r\n        return true;\r\n    }\r\n    function setupReserve(address basepool) external returns (bool success) {\r\n        require(msg.sender == admin);\r\n        require(AmountReserve > 0);\r\n        balances[basepool] = safeAdd(balances[basepool], AmountReserve);\r\n        uint256 _amount = AmountReserve;\r\n        AmountReserve=0;\r\n        emit Transfer(address(0), basepool, _amount);\r\n        return true;\r\n    }\r\n    function setupTeam(address basepool) external returns (bool success) {\r\n        require(msg.sender == admin);\r\n        require(AmountTeam > 0);\r\n        balances[basepool] = safeAdd(balances[basepool], AmountTeam);\r\n        uint256 _amount = AmountTeam;\r\n        AmountTeam=0;\r\n        emit Transfer(address(0), basepool, _amount);\r\n        return true;\r\n    }\r\n    function setupRewards(address basepool) external returns (bool success) {\r\n        require(msg.sender == admin);\r\n        require(AmountRewards > 0);\r\n        balances[basepool] = safeAdd(balances[basepool], AmountRewards);\r\n        uint256 _amount = AmountRewards;\r\n        AmountRewards=0;\r\n        emit Transfer(address(0), basepool, _amount);\r\n        return true;\r\n    }\r\n    function setupFarming(address basepool) external returns (bool success) {\r\n        require(msg.sender == admin);\r\n        require(AmountFarming > 0);\r\n        balances[basepool] = safeAdd(balances[basepool], AmountFarming);\r\n        uint256 _amount = AmountFarming;\r\n        AmountFarming=0;\r\n        emit Transfer(address(0), basepool, _amount);\r\n        return true;\r\n    }\r\n        \r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"basepool\",\"type\":\"address\"}],\"name\":\"setupBasePool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"basepool\",\"type\":\"address\"}],\"name\":\"setupFarming\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"basepool\",\"type\":\"address\"}],\"name\":\"setupReserve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"basepool\",\"type\":\"address\"}],\"name\":\"setupRewards\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"basepool\",\"type\":\"address\"}],\"name\":\"setupTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"PACT","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://b22b7f87fecc5112997fe7043e524a8714f6da188c3ece57b8c622a220b14793"}]}