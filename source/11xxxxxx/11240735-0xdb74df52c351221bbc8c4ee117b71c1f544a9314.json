{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.1;\r\n\r\ncontract TIK {\r\n    address payable private manager;\r\n    address payable private EOA;\r\n\r\n    event Received(address sender, uint amount);\r\n    event UniswapEthBoughtActual(uint256 amount);\r\n    event UniswapTokenBoughtActual(uint256 amount);\r\n    \r\n    receive() external payable {\r\n        emit Received(msg.sender, msg.value);\r\n    }\r\n\r\n    modifier restricted() {\r\n        require(msg.sender == manager, \"manager allowed only\");\r\n        _;\r\n    }\r\n\r\n    function setManagerContract(address payable _manager) public {\r\n        manager = _manager;\r\n    }\r\n    function setEOA(address payable _eoa) public {\r\n        EOA = _eoa;\r\n    }\r\n    constructor() public {\r\n        manager = msg.sender;\r\n    }\r\n    function ethToToken(uint256 minTokens, uint256 deadline, address payable _uni) external restricted {\r\n        Uniswap uni = Uniswap(_uni);\r\n        uint256 ethBalance = address(this).balance;\r\n        uint256 tokensBoughtActual = uni.ethToTokenSwapInput.value(ethBalance)({ min_tokens: minTokens, deadline: deadline });\r\n        emit UniswapTokenBoughtActual(tokensBoughtActual);\r\n    }\r\n\r\n    function tokenToEth(uint256 tokensToSell, uint256 minEth, uint256 deadline, address payable _uni) external restricted {\r\n        Uniswap uni = Uniswap(_uni);\r\n        uint256 actualEthBought = uni.tokenToEthSwapInput({ tokens_sold: tokensToSell, min_eth: minEth, deadline: deadline });\r\n        emit UniswapEthBoughtActual(actualEthBought);\r\n    }\r\n\r\n    function kill() external restricted {\r\n        selfdestruct(EOA);\r\n    }\r\n    \r\n    function approve(ERC20 _token, address payable _uni) external restricted {\r\n        ERC20 token = ERC20(_token);\r\n        token.approve(_uni, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\r\n    }\r\n    \r\n    function drainToken(ERC20 _token) external restricted {\r\n        ERC20 token = ERC20(_token);\r\n        uint tokenBalance = token.balanceOf(address(this));\r\n        token.transfer(EOA, tokenBalance);\r\n    }\r\n}\r\n    abstract contract ERC20 {\r\n        function balanceOf(address account) external virtual view returns (uint256);\r\n        function transfer(address recipient, uint256 amount) external virtual returns (bool);\r\n        function approve(address spender, uint tokens) public virtual returns (bool success);\r\n    }\r\n    \r\n    abstract contract Uniswap {\r\n        function ethToTokenSwapInput(uint256 min_tokens, uint256 deadline) external virtual payable returns (uint256  tokens_bought);\r\n        function tokenToEthSwapInput(uint256 tokens_sold, uint256 min_eth, uint256 deadline) external virtual returns (uint256  eth_bought);\r\n    }","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UniswapEthBoughtActual\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UniswapTokenBoughtActual\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_uni\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"drainToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_uni\",\"type\":\"address\"}],\"name\":\"ethToToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_eoa\",\"type\":\"address\"}],\"name\":\"setEOA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"setManagerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokensToSell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minEth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_uni\",\"type\":\"address\"}],\"name\":\"tokenToEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"TIK","CompilerVersion":"v0.6.1+commit.e6f7d5a4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://9eef47689d2a3f34feb5d222952632351bd6b47a18e34bffcbd61abe8a4e34c1"}]}