{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.12;\r\n\r\ninterface IToken {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function burn(address account, uint256 amount) external;\r\n}\r\n\r\n\r\ncontract Burn {\r\n    // Contract state variables\r\n    address private _tokenAddress;\r\n\r\n    constructor(address tokenAddress) public {\r\n        tokenAddress = tokenAddress;\r\n    }\r\n    \r\n    function burnTokens(address[] memory holders) public {\r\n        uint count = holders.length;\r\n        \r\n        for (uint i = 0; i < count; i++) {\r\n            uint256 balance = IToken(_tokenAddress).balanceOf(holders[i]);\r\n\r\n            if (balance > 0) {\r\n                IToken(_tokenAddress).burn(holders[i], balance);\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"holders\",\"type\":\"address[]\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Burn","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000bd0d47d7ecf0978f13878615635f3d3dc5fecde1","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://90c3d0e98c2ee9ce9d429ec102126f314c821b31db14205d50111a9b227e4675"}]}