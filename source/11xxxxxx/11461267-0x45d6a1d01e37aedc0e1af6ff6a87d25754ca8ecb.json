{"status":"1","message":"OK","result":[{"SourceCode":"// hevm: flattened sources of src/DssDeployPauseProxyActions.sol\npragma solidity >0.4.13 >0.4.20 >=0.4.23 >=0.5.0 <0.6.0 >=0.5.6 <0.6.0 >=0.5.12 <0.6.0;\n\n////// src/DssDeployPauseProxyActions.sol\n/// DssDeployPauseProxyActions.sol\n\n// Copyright (C) 2018 Gonzalo Balabasquer <gbalabasquer@gmail.com>\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n/* pragma solidity ^0.5.12; */\n\ncontract PauseLike {\n    function plot(address, bytes32, bytes memory, uint) public;\n    function exec(address, bytes32, bytes memory, uint) public;\n}\n\ncontract DssDeployPauseProxyActions {\n    function file(address pause, address actions, address who, bytes32 what, uint data) external {\n        bytes32 tag;\n        assembly { tag := extcodehash(actions) }\n        PauseLike(pause).plot(\n            address(actions),\n            tag,\n            abi.encodeWithSignature(\"file(address,bytes32,uint256)\", who, what, data),\n            now\n        );\n        PauseLike(pause).exec(\n            address(actions),\n            tag,\n            abi.encodeWithSignature(\"file(address,bytes32,uint256)\", who, what, data),\n            now\n        );\n    }\n\n    function file(address pause, address actions, address who, bytes32 ilk, bytes32 what, uint data) external {\n        bytes32 tag;\n        assembly { tag := extcodehash(actions) }\n        PauseLike(pause).plot(\n            address(actions),\n            tag,\n            abi.encodeWithSignature(\"file(address,bytes32,bytes32,uint256)\", who, ilk, what, data),\n            now\n        );\n        PauseLike(pause).exec(\n            address(actions),\n            tag,\n            abi.encodeWithSignature(\"file(address,bytes32,bytes32,uint256)\", who, ilk, what, data),\n            now\n        );\n    }\n\n    function file(address pause, address actions, address who, bytes32 ilk, bytes32 what, address data) external {\n        bytes32 tag;\n        assembly { tag := extcodehash(actions) }\n        PauseLike(pause).plot(\n            address(actions),\n            tag,\n            abi.encodeWithSignature(\"file(address,bytes32,bytes32,address)\", who, ilk, what, data),\n            now\n        );\n        PauseLike(pause).exec(\n            address(actions),\n            tag,\n            abi.encodeWithSignature(\"file(address,bytes32,bytes32,address)\", who, ilk, what, data),\n            now\n        );\n    }\n\n    function rely(address pause, address actions, address who, address to) external {\n        bytes32 tag;\n        assembly { tag := extcodehash(actions) }\n        PauseLike(pause).plot(\n            address(actions),\n            tag,\n            abi.encodeWithSignature(\"rely(address,address)\", who, to),\n            now\n        );\n        PauseLike(pause).exec(\n            address(actions),\n            tag,\n            abi.encodeWithSignature(\"rely(address,address)\", who, to),\n            now\n        );\n    }\n\n    function dripAndFile(address pause, address actions, address who, bytes32 what, uint data) external {\n        bytes32 tag;\n        assembly { tag := extcodehash(actions) }\n        PauseLike(pause).plot(\n            address(actions),\n            tag,\n            abi.encodeWithSignature(\"dripAndFile(address,bytes32,uint256)\", who, what, data),\n            now\n        );\n        PauseLike(pause).exec(\n            address(actions),\n            tag,\n            abi.encodeWithSignature(\"dripAndFile(address,bytes32,uint256)\", who, what, data),\n            now\n        );\n    }\n\n    function dripAndFile(address pause, address actions, address who, bytes32 ilk, bytes32 what, uint data) external {\n        bytes32 tag;\n        assembly { tag := extcodehash(actions) }\n        PauseLike(pause).plot(\n            address(actions),\n            tag,\n            abi.encodeWithSignature(\"dripAndFile(address,bytes32,bytes32,uint256)\", who, ilk, what, data),\n            now\n        );\n        PauseLike(pause).exec(\n            address(actions),\n            tag,\n            abi.encodeWithSignature(\"dripAndFile(address,bytes32,bytes32,uint256)\", who, ilk, what, data),\n            now\n        );\n    }\n\n    function setAuthorityAndDelay(address pause, address actions, address newAuthority, uint newDelay) external {\n        bytes32 tag;\n        assembly { tag := extcodehash(actions) }\n        PauseLike(pause).plot(\n            address(actions),\n            tag,\n            abi.encodeWithSignature(\"setAuthorityAndDelay(address,address,uint256)\", pause, newAuthority, newDelay),\n            now\n        );\n        PauseLike(pause).exec(\n            address(actions),\n            tag,\n            abi.encodeWithSignature(\"setAuthorityAndDelay(address,address,uint256)\", pause, newAuthority, newDelay),\n            now\n        );\n    }\n}\n","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"pause\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actions\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"dripAndFile\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"pause\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actions\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"dripAndFile\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"pause\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actions\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"file\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"pause\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actions\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"file\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"pause\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actions\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"data\",\"type\":\"address\"}],\"name\":\"file\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"pause\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actions\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"pause\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actions\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"}],\"name\":\"setAuthorityAndDelay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DssDeployPauseProxyActions","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}