{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.7;\r\n\r\ninterface IERC1155 {\r\n    function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory);\r\n    function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external;\r\n}\r\n\r\ncontract Claimer {\r\n\r\n    IERC1155 public tokens;\r\n    address  public deployer;\r\n    uint256  public end;\r\n\r\n    uint256[] public batches = [1,2,3,4,5];\r\n\r\n    constructor() public {\r\n        tokens = IERC1155(0xb9341CCa0A5F04b804F7b3a996A74726923359a8);\r\n        deployer = msg.sender;\r\n        end = block.timestamp + 2 weeks;\r\n    }\r\n\r\n    function claim(address payable _user) public {\r\n        address[] memory user = new address[](5);\r\n        user[0] = _user;\r\n        user[1] = _user;\r\n        user[2] = _user;\r\n        user[3] = _user;\r\n        user[4] = _user;\r\n        uint256[] memory balances = tokens.balanceOfBatch(user, batches);\r\n        uint256 sum = 0;\r\n        for (uint i = 0; i < balances.length; i++){\r\n            sum += balances[i];\r\n        }\r\n        tokens.safeBatchTransferFrom(_user, address(this), batches, balances, new bytes(0x0));\r\n        _user.transfer(sum * 1 ether);\r\n    }\r\n\r\n    function returnEth(address payable _who) external {\r\n        require(msg.sender == deployer, \"!deployer\");\r\n        require(block.timestamp > end, \"not yet\");\r\n        _who.transfer(address(this).balance);\r\n    }\r\n    \r\n    receive() external payable {}\r\n    \r\n    function onERC1155BatchReceived(address _operator, address _from, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external pure returns(bytes4) {\r\n        return bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"));\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"batches\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"returnEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Claimer","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://9763430de14df1e3e6b1ec53034ad3f57337975739ed7517a020e4cd5fdc74ad"}]}