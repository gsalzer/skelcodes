{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/UpdateBlacksmithPools.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: None\\npragma solidity ^0.7.4;\\n\\ninterface Iblacksmith {\\n  function getPoolList() external view returns (address[] memory);\\n  function pools(address _lpToken) external view returns (uint256 weight, uint256 accRewardsPerToken, uint256 lastUpdatedAt);\\n  function updatePool(address _lpToken) external;\\n  function updatePools(uint256 _start, uint256 _end) external;\\n}\\n\\ncontract UpdateBlacksmithPools {\\n  Iblacksmith public blacksmith;\\n\\n  constructor (address _blacksmith) {\\n    blacksmith = Iblacksmith(_blacksmith);\\n  }\\n\\n  function viewPoolsToBeUpdated(uint256 minimumMins) external view returns (address[] memory) {\\n    address[] memory poolList = blacksmith.getPoolList();\\n    address[] memory toBeUpdated = new address[](poolList.length);\\n    uint256 counter = 0;\\n    for (uint256 i = 0; i < poolList.length; i++) {\\n      (uint256 weight, , uint256 lastUpdatedAt) = blacksmith.pools(poolList[i]);\\n      uint256 timePassed = (block.timestamp - lastUpdatedAt) / 60;\\n      if (weight > 0 && timePassed >= minimumMins) {\\n        toBeUpdated[counter] = poolList[i];\\n        counter++;\\n      }\\n    }\\n    return toBeUpdated;\\n  }\\n\\n  /// @notice update pools with passed list\\n  function updateList(address[] calldata poolList) external {\\n    for (uint256 i = 0; i < poolList.length; i++) {\\n      blacksmith.updatePool(poolList[i]);\\n    }\\n  }\\n\\n  /// @notice update any pool that is older than 30 mins\\n  function update() external {\\n    address[] memory poolList = blacksmith.getPoolList();\\n    for (uint256 i = 0; i < poolList.length; i++) {\\n      (uint256 weight, , uint256 lastUpdatedAt) = blacksmith.pools(poolList[i]);\\n      uint256 timePassed = (block.timestamp - lastUpdatedAt) / 60;\\n      if (weight > 0 && timePassed >= 30) {\\n        blacksmith.updatePool(poolList[i]);\\n      }\\n    }\\n  }\\n\\n  /// @notice update any pool that is older than passed minimum time passed\\n  function updateMins(uint256 minTimePassed) external {\\n    address[] memory poolList = blacksmith.getPoolList();\\n    for (uint256 i = 0; i < poolList.length; i++) {\\n      (uint256 weight, , uint256 lastUpdatedAt) = blacksmith.pools(poolList[i]);\\n      uint256 timePassed = (block.timestamp - lastUpdatedAt) / 60;\\n      if (weight > 0 && timePassed >= minTimePassed) {\\n        blacksmith.updatePool(poolList[i]);\\n      }\\n    }\\n  }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_blacksmith\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"blacksmith\",\"outputs\":[{\"internalType\":\"contract Iblacksmith\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"poolList\",\"type\":\"address[]\"}],\"name\":\"updateList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minTimePassed\",\"type\":\"uint256\"}],\"name\":\"updateMins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumMins\",\"type\":\"uint256\"}],\"name\":\"viewPoolsToBeUpdated\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"UpdateBlacksmithPools","CompilerVersion":"v0.7.4+commit.3f05b770","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000e0b94a7bb45dd905c79bb1992c9879f40f1caed5","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}