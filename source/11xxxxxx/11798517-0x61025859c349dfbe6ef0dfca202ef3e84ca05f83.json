{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.5;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function decimals() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface ILendingPool {\r\n      function borrow(\r\n        address asset,\r\n        uint256 amount,\r\n        uint256 interestRateMode,\r\n        uint16 referralCode,\r\n        address onBehalfOf\r\n      ) external;\r\n      \r\n    function repay(\r\n        address asset,\r\n        uint256 amount,\r\n        uint256 rateMode,\r\n        address onBehalfOf\r\n      ) external returns (uint256);\r\n}\r\n\r\ninterface IyVault {\r\n    function token() external view returns (address);\r\n    function deposit(uint, address) external returns (uint);\r\n    function withdraw(uint, address, uint) external returns (uint);\r\n    function permit(address, address, uint, uint, bytes32) external view returns (bool);\r\n}\r\n\r\ninterface IyRegistry {\r\n    function latestVault(address) external view returns (address);\r\n}\r\n\r\ninterface IProtocolDataProvider {\r\n  function getReserveTokensAddresses(address asset) external view returns (address aTokenAddress, address stableDebtTokenAddress, address variableDebtTokenAddress);\r\n}\r\n\r\ninterface IDebtToken {\r\n    function borrowAllowance(address, address) external view returns (uint);\r\n}\r\n\r\ncontract yDelegate {\r\n    ILendingPool constant public lendingPool = ILendingPool(0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9);\r\n    IyRegistry constant public registry = IyRegistry(0xE15461B18EE31b7379019Dc523231C57d1Cbc18c);\r\n    IProtocolDataProvider constant public provider = IProtocolDataProvider(0x057835Ad21a177dbdd3090bB1CAE03EaCF78Fc6d);\r\n    \r\n    function approval(address token) external view returns (address) {\r\n        (, , address variableDebtTokenAddress) = provider.getReserveTokensAddresses(token);\r\n        return variableDebtTokenAddress;\r\n    }\r\n    \r\n    function vault(address token) external view returns (address) {\r\n        return registry.latestVault(token);\r\n    }\r\n    \r\n    function available(address delegate, address token) external view returns (uint) {\r\n        (, , address variableDebtTokenAddress) = provider.getReserveTokensAddresses(token);\r\n        return IDebtToken(variableDebtTokenAddress).borrowAllowance(delegate, address(this));\r\n    }\r\n    \r\n    function depositAll(address token) external {\r\n        (, , address variableDebtTokenAddress) = provider.getReserveTokensAddresses(token);\r\n        uint256 variableAllowance = IDebtToken(variableDebtTokenAddress).borrowAllowance(msg.sender, address(this));\r\n        _deposit(token, variableAllowance);\r\n    }\r\n    \r\n    function deposit(address token, uint amount) external {\r\n        _deposit(token, amount);\r\n    }\r\n    \r\n    function _deposit(address token, uint amount) internal {\r\n        IyVault _vault = IyVault(registry.latestVault(token));\r\n        lendingPool.borrow(token, amount, 2, 7, msg.sender);\r\n        IERC20(token).approve(address(_vault), amount);\r\n        _vault.deposit(amount, msg.sender);\r\n    }\r\n    \r\n    function withdrawAll(address token, uint maxLoss) external {\r\n        IyVault _vault = IyVault(registry.latestVault(token));\r\n        _withdraw(_vault, token, IERC20(address(_vault)).balanceOf(msg.sender), maxLoss);\r\n    }\r\n    \r\n    function withdrawAllWithPermit(address token, uint maxLoss, uint expiry, bytes32 signature) external {\r\n        IyVault _vault = IyVault(registry.latestVault(token));\r\n        uint _amount = IERC20(address(_vault)).balanceOf(msg.sender);\r\n        _vault.permit(msg.sender, address(this), _amount, expiry, signature);\r\n        _withdraw(_vault, token, _amount, maxLoss);\r\n    }\r\n    \r\n    function withdraw(address token, uint amount, uint maxLoss) external {\r\n        IyVault _vault = IyVault(registry.latestVault(token));\r\n        _withdraw(_vault, token, amount, maxLoss);\r\n    }\r\n    \r\n    function withdrawWithPermit(address token, uint amount, uint maxLoss, uint expiry, bytes32 signature) external {\r\n        IyVault _vault = IyVault(registry.latestVault(token));\r\n        _vault.permit(msg.sender, address(this), amount, expiry, signature);\r\n        _withdraw(_vault, token, amount, maxLoss);\r\n    }\r\n    \r\n    function _withdraw(IyVault _vault, address token, uint amount, uint maxLoss) internal {\r\n        IERC20(address(_vault)).transferFrom(msg.sender, address(this), amount);\r\n        uint _amount = _vault.withdraw(amount, address(this), maxLoss);\r\n        lendingPool.repay(token, _amount, 2, msg.sender);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"approval\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"depositAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lendingPool\",\"outputs\":[{\"internalType\":\"contract ILendingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"provider\",\"outputs\":[{\"internalType\":\"contract IProtocolDataProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IyRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"signature\",\"type\":\"bytes32\"}],\"name\":\"withdrawAllWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoss\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"signature\",\"type\":\"bytes32\"}],\"name\":\"withdrawWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"yDelegate","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d99b03b97508930187e6e2645ff6bb9ae9b9521c002641b3be1c07240b01515e"}]}