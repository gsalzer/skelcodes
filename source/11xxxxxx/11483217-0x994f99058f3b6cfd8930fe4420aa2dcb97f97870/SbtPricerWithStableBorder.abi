[
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "originalBondPricerAddress",
                "type": "address"
            },
            {
                "internalType": "uint16",
                "name": "stableBorderE4",
                "type": "uint16"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "internalType": "uint16",
                "name": "stableBorderE4",
                "type": "uint16"
            }
        ],
        "name": "LogUpdateStableBorder",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "inputs": [
            {
                "internalType": "enum BondType",
                "name": "bondType",
                "type": "uint8"
            },
            {
                "internalType": "uint256[]",
                "name": "points",
                "type": "uint256[]"
            },
            {
                "internalType": "int256",
                "name": "spotPrice",
                "type": "int256"
            },
            {
                "internalType": "int256",
                "name": "volatilityE8",
                "type": "int256"
            },
            {
                "internalType": "int256",
                "name": "untilMaturity",
                "type": "int256"
            }
        ],
        "name": "calcPriceAndLeverage",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "price",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "leverageE8",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "getStableBorder",
        "outputs": [
            {
                "internalType": "uint16",
                "name": "stableBorderE4",
                "type": "uint16"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "originalBondPricer",
        "outputs": [
            {
                "internalType": "address",
                "name": "originalBondPricerAddress",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint16",
                "name": "stableBorderE4",
                "type": "uint16"
            }
        ],
        "name": "updateStableBorder",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    }
]