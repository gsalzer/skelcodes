{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/erc20/IERC20.sol\r\n\r\npragma solidity >=0.4.21 <0.6.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n// File: contracts/utils/SafeMath.sol\r\n\r\npragma solidity >=0.4.21 <0.6.0;\r\n\r\nlibrary SafeMath {\r\n    function safeAdd(uint a, uint b) public pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a, \"add\");\r\n    }\r\n    function safeSub(uint a, uint b) public pure returns (uint c) {\r\n        require(b <= a, \"sub\");\r\n        c = a - b;\r\n    }\r\n    function safeMul(uint a, uint b) public pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b, \"mul\");\r\n    }\r\n    function safeDiv(uint a, uint b) public pure returns (uint c) {\r\n        require(b > 0, \"div\");\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n// File: contracts/ystream/IYieldStream.sol\r\n\r\npragma solidity >=0.4.21 <0.6.0;\r\n\r\ncontract IYieldStream{\r\n\r\n  string public name;\r\n\r\n  function target_token() public view returns(address);\r\n\r\n  function getVirtualPrice() public view returns(uint256);\r\n\r\n  function getDecimal() public pure returns(uint256);\r\n\r\n  function getPriceDecimal() public pure returns(uint256);\r\n}\r\n\r\n// File: contracts/ystream/xSushiStream.sol\r\n\r\npragma solidity >=0.4.21 <0.6.0;\r\n\r\n\r\n\r\n\r\n\r\ncontract xSushiInterface is IERC20{\r\n  IERC20 public sushi;\r\n}\r\n\r\ncontract xSushiStream is IYieldStream{\r\n  using SafeMath for uint256;\r\n  xSushiInterface public xsushi;\r\n\r\n  constructor() public{\r\n    name = \"xSushi yield stream\";\r\n    xsushi = xSushiInterface(address(0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272));\r\n  }\r\n\r\n\r\n  function target_token() public view returns(address){\r\n    return address(xsushi);\r\n  }\r\n\r\n  function getVirtualPrice() public view returns(uint256){\r\n    if(xsushi.totalSupply() == 0){\r\n      return 0;\r\n    }\r\n\r\n    return xsushi.sushi().balanceOf(address(xsushi)).safeMul(1e18).safeDiv(xsushi.totalSupply());\r\n  }\r\n\r\n  function getDecimal() public pure returns(uint256){\r\n    return 1e18;\r\n  }\r\n\r\n  function getPriceDecimal() public pure returns(uint256){\r\n    return 1e18;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDecimal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xsushi\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPriceDecimal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVirtualPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"target_token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"xSushiStream","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"SafeMath:0836e32f1f91db939d58a0763cbd38a28a8688fa","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3b176a3a39a28a58489221cab6d2ede5218db4fceb6bc75042fc70cdeac22686"}]}