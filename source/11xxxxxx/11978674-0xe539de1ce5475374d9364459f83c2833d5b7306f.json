{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.12;\r\n\r\n//---------------------------------- Define Ownable\r\ncontract Ownable {\r\n    address private owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    function transferOwnership(address newOwner) public onlyOwner returns(bool) {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        return true;\r\n    }\r\n    function getOwner() public view returns(address){\r\n        return owner;\r\n    }\r\n}\r\n//---------------------------------- Define Pausable\r\ncontract Pausable is Ownable {\r\n    event Pause();\r\n    event Unpause();\r\n    bool public paused = false;\r\n    modifier whenNotPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n    modifier whenPaused() {\r\n        require(paused);\r\n        _;\r\n    }\r\n    function pause() onlyOwner whenNotPaused public returns(bool){\r\n        paused = true;\r\n        emit Pause();\r\n        return true;\r\n    }\r\n    function unpause() onlyOwner whenPaused public returns(bool) {\r\n        paused = false;\r\n        emit Unpause();\r\n        return true;\r\n    }\r\n}\r\n//---------------------------------- TRC20Basic\r\ncontract TRC20Basic {\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address who) public view returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n//---------------------------------- BasicToken\r\ncontract BasicToken is TRC20Basic {\r\n    using SafeMath for uint256;\r\n    mapping(address => uint256) balances;\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        require(_value <= balances[msg.sender]);\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n}\r\n//---------------------------------- Define BlackList\r\ncontract BlackList is Ownable {\r\n    function getBlackListStatus(address _userAddress) external view returns (bool) {\r\n        return CRY_BLACK_LIST[_userAddress];\r\n    }\r\n    mapping (address => bool) public CRY_BLACK_LIST;\r\n    function addBlackList (address _exceptedUser) public onlyOwner {\r\n        CRY_BLACK_LIST[_exceptedUser] = true;\r\n        emit AddedBlackList(_exceptedUser);\r\n    }\r\n    function removeBlackList (address _whiteUser) public onlyOwner {\r\n        CRY_BLACK_LIST[_whiteUser] = false;\r\n        emit RemovedBlackList(_whiteUser);\r\n    }\r\n    event AddedBlackList(address indexed _user);\r\n    event RemovedBlackList(address indexed _user);\r\n}\r\n//---------------------------------- Define TRC20\r\ncontract TRC20 is TRC20Basic {\r\n    function allowance(address owner, address spender) public view returns (uint256);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n//---------------------------------- Define STD_TOKEN\r\ncontract STD_TOKEN is TRC20, BasicToken {\r\n    mapping (address => mapping (address => uint256)) internal allowed;\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        require(_value <= balances[_from]);\r\n        require(_value <= allowed[_from][msg.sender]);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    function allowance(address _owner, address _spender) public view returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    function plus_Approval(address _spender, uint _addedValue) public returns (bool) {\r\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n    function minus_Approval(address _spender, uint _subtractedValue) public returns (bool) {\r\n        uint oldValue = allowed[msg.sender][_spender];\r\n        if (_subtractedValue > oldValue) {\r\n            allowed[msg.sender][_spender] = 0;\r\n        } else {\r\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n        }\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n}\r\n//---------------------------------- Define STD_TOKEN_WithFees\r\ncontract STD_TOKEN_WithFees is STD_TOKEN, Ownable {\r\n    uint256 public pointsCount = 0;\r\n    uint256 public txFee = 0;\r\n    uint256 constant internal MAX_DEFINED_POINTS = 20;\r\n    uint256 constant internal MAX_DEFINED_FEE = 50;\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint public _totalSupply;\r\n    uint internal constant MAX_UINT = 2**256 - 1;\r\n    function getFeeNow(uint _value) public view returns (uint) {\r\n        uint fee = (_value.mul(pointsCount)).div(10000);\r\n        if (fee > txFee) {\r\n            fee = txFee;\r\n        }\r\n        return fee;\r\n    }\r\n    function transfer(address _to, uint _value) public returns (bool) {\r\n        uint fee = getFeeNow(_value);\r\n        uint sendAmount = _value.sub(fee);\r\n        super.transfer(_to, sendAmount);\r\n        if (fee > 0) {\r\n            super.transfer(getOwner(), fee);\r\n        }\r\n    }\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        require(_value <= balances[_from]);\r\n        require(_value <= allowed[_from][msg.sender]);\r\n        uint fee = getFeeNow(_value);\r\n        uint sendAmount = _value.sub(fee);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(sendAmount);\r\n        if (allowed[_from][msg.sender] < MAX_UINT) {\r\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n        }\r\n        emit Transfer(_from, _to, sendAmount);\r\n        if (fee > 0) {\r\n          balances[getOwner()] = balances[getOwner()].add(fee);\r\n          emit Transfer(_from, getOwner(), fee);\r\n        }\r\n        return true;\r\n    }\r\n    function set_Contract_Vars(uint newPoints, uint newTxFee) public onlyOwner {\r\n        require(newPoints < MAX_DEFINED_POINTS);\r\n        require(newTxFee < MAX_DEFINED_FEE);\r\n        pointsCount = newPoints;\r\n        txFee = newTxFee.mul(uint(10)**decimals);\r\n        emit contract_Vars_Changed(pointsCount, txFee);\r\n    }\r\n    function get_MAX_DEFINED_POINTS() public pure returns(uint256){\r\n        return MAX_DEFINED_POINTS;\r\n    }\r\n    function get_MAX_DEFINED_FEE() public pure returns(uint256){\r\n        return MAX_DEFINED_FEE;\r\n    }\r\n    function get_MAX_UINT() public pure returns(uint256){\r\n        return MAX_UINT;\r\n    }\r\n    event contract_Vars_Changed(uint feeBasisPoints, uint maxFee);\r\n}\r\n//|---------------------------------------------------------------------------------------------------------------------------------------| \r\n//|-------------------------------------------------------------- CRY TOKEN --------------------------------------------------------------|\r\n//|---------------------------------------------------------------------------------------------------------------------------------------|\r\n\r\ncontract CRYToken is Pausable, STD_TOKEN_WithFees, BlackList {\r\n    constructor(uint _initialSupply, string memory _name, string memory _symbol, uint8 _decimals) public {\r\n        _totalSupply = _initialSupply;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        balances[getOwner()] = _initialSupply;\r\n        \r\n    }\r\n    function transfer(address _to, uint _value) public whenNotPaused returns (bool) {\r\n        require(!CRY_BLACK_LIST[msg.sender]);\r\n        return super.transfer(_to, _value);\r\n    }\r\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused returns (bool) {\r\n        require(!CRY_BLACK_LIST[_from]);\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n    function balanceOf(address who) public view returns (uint) {\r\n        return super.balanceOf(who);\r\n    }\r\n    function approve(address _spender, uint _value) public whenNotPaused returns (bool) {\r\n        return super.approve(_spender, _value);\r\n    }\r\n    function plus_Approval(address _spender, uint _addedValue) public whenNotPaused returns (bool) {\r\n        return super.plus_Approval(_spender, _addedValue);\r\n    }\r\n    function minus_Approval(address _spender, uint _subtractedValue) public whenNotPaused returns (bool) {\r\n        return super.minus_Approval(_spender, _subtractedValue);\r\n    }\r\n    function allowance(address _owner, address _spender) public view returns (uint remaining) {\r\n        return super.allowance(_owner, _spender);\r\n    }\r\n    function totalSupply() public view returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n    function addTokenToContract(uint amount) public onlyOwner returns(bool) {\r\n        balances[getOwner()] = balances[getOwner()].add(amount);\r\n        _totalSupply = _totalSupply.add(amount);\r\n        emit token_Added_Contract(amount);\r\n        emit Transfer(address(0), getOwner(), amount);\r\n        return true;\r\n    }\r\n    function delTokenFromContract(uint amount) public onlyOwner returns(bool) {\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        balances[getOwner()] = balances[getOwner()].sub(amount);\r\n        emit token_deleted_Contract(amount);\r\n        emit Transfer(getOwner(), address(0), amount);\r\n        return true;\r\n    }\r\n    function deleteBlackFunds (address _exceptedUser) public onlyOwner returns(bool){\r\n        require(CRY_BLACK_LIST[_exceptedUser]);\r\n        uint dirtyFunds = balanceOf(_exceptedUser);\r\n        balances[_exceptedUser] = 0;\r\n        _totalSupply = _totalSupply.sub(dirtyFunds);\r\n        emit BlackFundsDeleted(_exceptedUser, dirtyFunds);\r\n        return true;\r\n    }\r\n    event BlackFundsDeleted(address indexed _exceptedUser, uint _balance);\r\n    event token_Added_Contract(uint amount);\r\n    event token_deleted_Contract(uint amount);\r\n    event Deprecate(address newAddress);\r\n}\r\n//---------------------------------------------------------- safe Math library\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_exceptedUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"BlackFundsDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"contract_Vars_Changed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"token_Added_Contract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"token_deleted_Contract\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"CRY_BLACK_LIST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exceptedUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addTokenToContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"delTokenFromContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exceptedUser\",\"type\":\"address\"}],\"name\":\"deleteBlackFunds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"getFeeNow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_MAX_DEFINED_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_MAX_DEFINED_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_MAX_UINT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"minus_Approval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"plus_Approval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pointsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_whiteUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newTxFee\",\"type\":\"uint256\"}],\"name\":\"set_Contract_Vars\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"txFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"CRYToken","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000d4379727573204361706974616c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034352590000000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://60f722aa5291598dd631e189f38e49e34dafdaa4f01ff32154757607804902d5"}]}