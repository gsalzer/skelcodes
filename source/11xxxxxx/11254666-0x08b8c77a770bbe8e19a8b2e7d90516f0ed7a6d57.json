{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: None\r\npragma solidity ^0.6.0;\r\n\r\ncontract Ref {\r\n\r\n    mapping(address => address) public referrer;\r\n    mapping(address => uint256) public score;\r\n    mapping(address => bool) public admin;\r\n\r\n    modifier onlyAdmin() {\r\n        require(admin[msg.sender], \"You're not admin\");\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        admin[msg.sender] = true;\r\n    }\r\n\r\n    function scoreOf(address a) public view returns (uint256) {\r\n        return score[a];\r\n    }\r\n\r\n    function set_admin(address a) external onlyAdmin() {\r\n        admin[a] = true;\r\n    }\r\n\r\n    function set_referrer(address r) external onlyAdmin() {\r\n        if (referrer[tx.origin] == address(0)) {\r\n            referrer[tx.origin] = r;\r\n            emit ReferrerSet(tx.origin, r);\r\n        }\r\n    }\r\n\r\n    function add_score(uint256 d) external onlyAdmin() {\r\n        address winners = 0xF7F0a65D645f987130d7666535eb2aF3898Ef6ae;\r\n        if (referrer[tx.origin] != address(0)) {\r\n            winners = referrer[tx.origin];\r\n        }\r\n        score[winners] += d;\r\n        emit ScoreAdded(tx.origin, winners, d);\r\n    }\r\n\r\n    event ReferrerSet(address indexed origin, address indexed referrer);\r\n    event ScoreAdded(\r\n        address indexed origin,\r\n        address indexed referrer,\r\n        uint256 score\r\n    );\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"ReferrerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"ScoreAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"d\",\"type\":\"uint256\"}],\"name\":\"add_score\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"score\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"scoreOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"set_admin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"r\",\"type\":\"address\"}],\"name\":\"set_referrer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Ref","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d25875445d40da60134579f09818244fa72447b34187ba7b5c74d878593277a6"}]}