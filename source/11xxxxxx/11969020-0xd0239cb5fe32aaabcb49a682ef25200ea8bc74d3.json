{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\n/// @dev brief interface for erc20 token.\r\ninterface IERC20 { \r\n    function balanceOf(address account) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n\r\n/// @dev brief interface for entering SUSHI bar (xSUSHI).\r\ninterface ISushiBarEnter { \r\n   function enter(uint256 amount) external;\r\n}\r\n\r\n/// @dev brief interface for depositing into AAVE lending pool.\r\ninterface IAaveDeposit {\r\n    function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\r\n}\r\n\r\n/// @dev contract that batches SUSHI staking into AAVE xSUSHI (aXSUSHI).\r\ncontract Saave {\r\n    address private constant sushiToken = 0x6B3595068778DD592e39A122f4f5a5cF09C90fE2; // SUSHI token contract\r\n    address private constant sushiBar = 0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272; // xSUSHI staking contract for SUSHI\r\n    address private constant aave = 0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9; // AAVE lending pool contract for xSUSHI staking into aXSUSHI\r\n    \r\n    constructor() public {\r\n        IERC20(sushiToken).approve(sushiBar, type(uint256).max); // max approve `sushiBar` spender to stake SUSHI into xSUSHI from this contract\r\n        IERC20(sushiBar).approve(aave, type(uint256).max); // max approve `aave` spender to stake xSUSHI into aXSUSHI from this contract\r\n    }\r\n    \r\n    /// @dev stake SUSHI into aXSUSHI by batching calls to `sushiBar` and `aave` lending pool.\r\n    function saave(uint256 amount) external {\r\n        address xSUSHI = sushiBar;\r\n        IERC20(sushiToken).transferFrom(msg.sender, address(this), amount); // deposit caller SUSHI `amount` into this contract\r\n        ISushiBarEnter(xSUSHI).enter(amount); // stake SUSHI `amount` into xSUSHI\r\n        IAaveDeposit(aave).deposit(xSUSHI, IERC20(xSUSHI).balanceOf(address(this)), msg.sender, 0); // stake resulting xSUSHI into aXSUSHI (sent back to caller)\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"saave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Saave","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://a7dd81c4dc12bb5a29c8f407da11d8d2bc6e33cdfd5deaef7f7a33ab38e76605"}]}