{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.8.0;\r\n\r\n\r\ninterface WETHInterace {\r\n    function withdraw(uint256 wad) external;\r\n    function transferFrom(address src, address dst, uint256 wad) external returns (bool);\r\n}\r\n\r\n\r\ncontract WETHUnwrapper {\r\n    WETHInterace private _WETH = WETHInterace(\r\n        0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\r\n    );\r\n\r\n    receive() external payable {}\r\n\r\n    function unwrapWETHFor(address account, uint256 amount) external {\r\n        if (amount > 0) {\r\n            require(\r\n                _WETH.transferFrom(account, address(this), amount),\r\n                \"WETH transfer in failed... has the allowance been set?\"\r\n            );\r\n            _WETH.withdraw(amount);\r\n\r\n            (bool ok, ) = account.call{value: address(this).balance}(\"\");\r\n            if (!ok) {\r\n                assembly {\r\n                    returndatacopy(0, 0, returndatasize())\r\n                    revert(0, returndatasize())\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unwrapWETHFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"WETHUnwrapper","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://101a22582505f9de27db46b4961dc8a672f84db1572da37edcee823ccec0b534"}]}