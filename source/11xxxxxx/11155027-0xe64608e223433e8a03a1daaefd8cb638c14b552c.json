{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.2.7\r\n\"\"\"\r\n@title Curve Registry PoolInfo\r\n@license MIT\r\n@author Curve.Fi\r\n@notice Large getters designed for off-chain use\r\n\"\"\"\r\n\r\nMAX_COINS: constant(int128) = 8\r\n\r\n\r\ninterface AddressProvider:\r\n    def get_registry() -> address: view\r\n\r\ninterface Registry:\r\n    def get_coins(_pool: address) -> address[MAX_COINS]: view\r\n    def get_underlying_coins(_pool: address) -> address[MAX_COINS]: view\r\n    def get_decimals(_pool: address) -> uint256[MAX_COINS]: view\r\n    def get_underlying_decimals(_pool: address) -> uint256[MAX_COINS]: view\r\n    def get_balances(_pool: address) -> uint256[MAX_COINS]: view\r\n    def get_underlying_balances(_pool: address) -> uint256[MAX_COINS]: view\r\n    def get_rates(_pool: address) -> uint256[MAX_COINS]: view\r\n    def get_lp_token(_pool: address) -> address: view\r\n    def get_parameters(_pool: address) -> PoolParams: view\r\n\r\n\r\nstruct PoolParams:\r\n    A: uint256\r\n    future_A: uint256\r\n    fee: uint256\r\n    admin_fee: uint256\r\n    future_fee: uint256\r\n    future_admin_fee: uint256\r\n    future_owner: address\r\n    initial_A: uint256\r\n    initial_A_time: uint256\r\n    future_A_time: uint256\r\n\r\nstruct PoolInfo:\r\n    balances: uint256[MAX_COINS]\r\n    underlying_balances: uint256[MAX_COINS]\r\n    decimals: uint256[MAX_COINS]\r\n    underlying_decimals: uint256[MAX_COINS]\r\n    rates: uint256[MAX_COINS]\r\n    lp_token: address\r\n    params: PoolParams\r\n\r\nstruct PoolCoins:\r\n    coins: address[MAX_COINS]\r\n    underlying_coins: address[MAX_COINS]\r\n    decimals: uint256[MAX_COINS]\r\n    underlying_decimals: uint256[MAX_COINS]\r\n\r\n\r\naddress_provider: public(AddressProvider)\r\n\r\n\r\n@external\r\ndef __init__(_provider: address):\r\n    self.address_provider = AddressProvider(_provider)\r\n\r\n\r\n@view\r\n@external\r\ndef get_pool_coins(_pool: address) -> PoolCoins:\r\n    \"\"\"\r\n    @notice Get information on coins in a pool\r\n    @dev Empty values in the returned arrays may be ignored\r\n    @param _pool Pool address\r\n    @return Coin addresses, underlying coin addresses, underlying coin decimals\r\n    \"\"\"\r\n    registry: address = self.address_provider.get_registry()\r\n\r\n    return PoolCoins({\r\n        coins: Registry(registry).get_coins(_pool),\r\n        underlying_coins: Registry(registry).get_underlying_coins(_pool),\r\n        decimals: Registry(registry).get_decimals(_pool),\r\n        underlying_decimals: Registry(registry).get_underlying_decimals(_pool),\r\n    })\r\n\r\n\r\n@view\r\n@external\r\ndef get_pool_info(_pool: address) -> PoolInfo:\r\n    \"\"\"\r\n    @notice Get information on a pool\r\n    @dev Reverts if the pool address is unknown\r\n    @param _pool Pool address\r\n    @return balances, underlying balances, decimals, underlying decimals,\r\n            lp token, amplification coefficient, fees\r\n    \"\"\"\r\n    registry: address = self.address_provider.get_registry()\r\n\r\n    return PoolInfo({\r\n        balances: Registry(registry).get_balances(_pool),\r\n        underlying_balances: Registry(registry).get_underlying_balances(_pool),\r\n        decimals: Registry(registry).get_decimals(_pool),\r\n        underlying_decimals: Registry(registry).get_underlying_decimals(_pool),\r\n        rates: Registry(registry).get_rates(_pool),\r\n        lp_token: Registry(registry).get_lp_token(_pool),\r\n        params: Registry(registry).get_parameters(_pool),\r\n    })","ABI":"[{\"outputs\":[],\"inputs\":[{\"type\":\"address\",\"name\":\"_provider\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"name\":\"get_pool_coins\",\"outputs\":[{\"type\":\"address[8]\",\"name\":\"coins\"},{\"type\":\"address[8]\",\"name\":\"underlying_coins\"},{\"type\":\"uint256[8]\",\"name\":\"decimals\"},{\"type\":\"uint256[8]\",\"name\":\"underlying_decimals\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_pool\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":15876},{\"name\":\"get_pool_info\",\"outputs\":[{\"type\":\"uint256[8]\",\"name\":\"balances\"},{\"type\":\"uint256[8]\",\"name\":\"underlying_balances\"},{\"type\":\"uint256[8]\",\"name\":\"decimals\"},{\"type\":\"uint256[8]\",\"name\":\"underlying_decimals\"},{\"type\":\"uint256[8]\",\"name\":\"rates\"},{\"type\":\"address\",\"name\":\"lp_token\"},{\"type\":\"tuple\",\"name\":\"params\",\"components\":[{\"type\":\"uint256\",\"name\":\"A\"},{\"type\":\"uint256\",\"name\":\"future_A\"},{\"type\":\"uint256\",\"name\":\"fee\"},{\"type\":\"uint256\",\"name\":\"admin_fee\"},{\"type\":\"uint256\",\"name\":\"future_fee\"},{\"type\":\"uint256\",\"name\":\"future_admin_fee\"},{\"type\":\"address\",\"name\":\"future_owner\"},{\"type\":\"uint256\",\"name\":\"initial_A\"},{\"type\":\"uint256\",\"name\":\"initial_A_time\"},{\"type\":\"uint256\",\"name\":\"future_A_time\"}]}],\"inputs\":[{\"type\":\"address\",\"name\":\"_pool\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":35142},{\"name\":\"address_provider\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1121}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.7","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"0000000000000000000000000000000022d53366457f9d5e68ec105046fc4383","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}