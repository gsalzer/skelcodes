{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.4;\r\n\r\ncontract Token {\r\n    function totalSupply() constant returns (uint256 supply) {}\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {}\r\n    function transfer(address _to, uint256 _value) returns (bool success) {}\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}\r\n    function approve(address _spender, uint256 _value) returns (bool success) {}\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\ncontract StandardToken is Token {\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        if (balances[msg.sender] >= _value && _value > 0) {\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n            balances[_to] += _value;\r\n            balances[_from] -= _value;\r\n            allowed[_from][msg.sender] -= _value;\r\n            Transfer(_from, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n    uint256 public totalSupply;\r\n}\r\n\r\n\r\ncontract YFLAND is StandardToken  {\r\n\r\n    string public name;                  \r\n    uint8 public decimals;               \r\n    string public symbol;                \r\n    string public version = 'Y2.1';       \r\n    Token public usdtToken ;\r\n    address public contractOwner;\r\n    uint256 public totalUSDTFarm;\r\n    uint256 public totalcountUSDTFarm;\r\n    uint256 public farmRate;\r\n    uint256 public timeReceiveFarm;\r\n    struct listFarm {\r\n    uint256 amount;\r\n    uint256 timeReceive;\r\n    }\r\n\r\n    mapping(address => listFarm) public allFarm;  \r\n    address[] private listAddressFarm;  \r\n    constructor( ) public {\r\n                usdtToken = Token(0xdac17f958d2ee523a2206206994597c13d831ec7); //usdt contract\r\n                totalSupply = 30000000000000000000000;                       \r\n                name = \"YFLAND\";                                   \r\n                decimals = 18;                            \r\n                symbol = \"YFLAND\";    \r\n                contractOwner = msg.sender;\r\n                balances[contractOwner] = totalSupply;\r\n                Transfer(address(0),contractOwner,totalSupply);\r\n                totalUSDTFarm = 0;\r\n                totalcountUSDTFarm =0;\r\n                farmRate = 10;\r\n\t\t\t\ttimeReceiveFarm = 24 * 3600; \r\n    }\r\n    function transferUSDTtoContractOwner( uint256 _amount) public  returns (bool) {\r\n            require(msg.sender == contractOwner);\r\n            require(usdtToken.balanceOf(address(this)) >= _amount);\r\n            if(msg.sender == contractOwner && usdtToken.balanceOf(address(this)) >= _amount){          \r\n            return usdtToken.transfer(contractOwner,_amount);\r\n            }else{\r\n            return false;    \r\n            }\r\n    }\r\n    function setTimeReceiveFarm( uint256 _hours) public  returns (bool) {\r\n                require(msg.sender == contractOwner);\r\n                if(msg.sender == contractOwner){          \r\n                timeReceiveFarm = _hours * 3600;\r\n                return true;\r\n                }else{\r\n                return false;    \r\n                }                \r\n\r\n    }    \r\n    function setFarmRate( uint256 _rate) public  returns (bool) {\r\n            require(msg.sender == contractOwner);\r\n            if(msg.sender == contractOwner){          \r\n            farmRate = _rate;\r\n            return true;\r\n            }else{\r\n            return false;    \r\n            }\r\n    }      \r\n    function getAllFarmAddress()public view returns( address  [] memory){\r\n        return listAddressFarm;\r\n    }\r\n    \r\n    function removeListAddress( address _addr) private  returns (bool) {\r\n        for(uint256 i = 0 ; i < listAddressFarm.length ; i++ ){\r\n            if(listAddressFarm[i] == _addr){\r\n                delete listAddressFarm[i];\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function createFarm( uint256 _amount) public returns (bool) {\r\n           require(usdtToken.allowance(msg.sender,address(this)) >= _amount);\r\n           if(usdtToken.allowance(msg.sender,address(this)) >= _amount){\r\n           usdtToken.transferFrom(msg.sender,address(this),_amount);\r\n            allFarm[msg.sender].amount += _amount;\r\n            allFarm[msg.sender].timeReceive = now + timeReceiveFarm;\r\n            removeListAddress(msg.sender);\r\n            listAddressFarm.push(msg.sender);\r\n            totalUSDTFarm  += _amount;\r\n            totalcountUSDTFarm++;\r\n            return true;\r\n            }else{\r\n            return false;    \r\n            }\r\n    }\r\n    function getContractUSDTBalance( ) public view returns (uint256) {\r\n            return usdtToken.balanceOf(address(this));\r\n    }\r\n    function cancelFarm() public  returns (bool) {\r\n            require(allFarm[msg.sender].amount > 0);\r\n            if(allFarm[msg.sender].amount > 0)\r\n            {\r\n            totalcountUSDTFarm--;\r\n            totalUSDTFarm -= allFarm[msg.sender].amount;\r\n            removeListAddress(msg.sender);\r\n            usdtToken.transfer(msg.sender , allFarm[msg.sender].amount);\r\n            allFarm[msg.sender].amount = 0;\r\n            allFarm[msg.sender].timeReceive = 0;                 \r\n            return true;\r\n            }\r\n    }  \r\n    function receiveFarm() public  returns (bool) {\r\n            require(allFarm[msg.sender].amount > 0);\r\n            require(allFarm[msg.sender].timeReceive <= now);\r\n            if(allFarm[msg.sender].amount > 0 && allFarm[msg.sender].timeReceive <= now)\r\n            {\r\n            StandardToken(address(this)).transfer(msg.sender , allFarm[msg.sender].amount * farmRate / 100);\r\n            allFarm[msg.sender].timeReceive = now + timeReceiveFarm;\r\n            return true;\r\n            }\r\n    }   \r\n\r\n\r\n\r\n   \r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setFarmRate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"receiveFarm\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalUSDTFarm\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferUSDTtoContractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"farmRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"createFarm\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalcountUSDTFarm\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractUSDTBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cancelFarm\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllFarmAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hours\",\"type\":\"uint256\"}],\"name\":\"setTimeReceiveFarm\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timeReceiveFarm\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allFarm\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"timeReceive\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"YFLAND","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://857681cb4ff5c4846e4306f1b42f0c3bc7c0b5a6055a5712df167593180ba291"}]}