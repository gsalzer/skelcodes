{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >0.6.0;\r\n\r\n\r\ncontract Token {\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {}\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success){}\r\n    function decimals() public view returns (uint8){}\r\n}\r\n\r\n\r\ncontract Burnamint {\r\n\r\n    mapping (address => bool) private admins;\r\n\r\n    mapping (address => mapping (address => mapping (bool => uint256))) private burnamintable;\r\n\r\n    address public owner;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    event BurnaMint(address indexed _oldToken, address indexed _newToken, address indexed _address, uint256 _oldValue, uint256 newValue);\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n        admins[msg.sender] = true;\r\n    }\r\n\r\n    function addAdmin(address _admin) external onlyOwner{\r\n        admins[_admin] = true;\r\n    }\r\n\r\n    function removeAdmin(address _admin) external onlyOwner{\r\n        admins[_admin] = false;\r\n    }\r\n\r\n    function isAdmin(address _admin) external view returns(bool _isAdmin){\r\n        return admins[_admin];\r\n    }\r\n\r\n    function addBurnamintable(address _oldContractAddress, address _newContractAddress, bool inversed, uint256 _ratio)\r\n    external\r\n    onlyAdmin\r\n    returns (bool success){\r\n        require(burnamintable[_oldContractAddress][_newContractAddress][inversed] == 0, \"Tokens are not burnamintables\");\r\n        burnamintable[_oldContractAddress][_newContractAddress][inversed] = _ratio;\r\n        return true;\r\n    }\r\n    \r\n    function resetBurnamintable(address _oldContractAddress, address _newContractAddress, bool inversed, uint256 _ratio)\r\n    external\r\n    onlyOwner\r\n    returns (bool success){\r\n        burnamintable[_oldContractAddress][_newContractAddress][inversed] = _ratio;\r\n        return true;\r\n    }\r\n\r\n    function burnamint(address _oldContractAddress, address _newContractAddress, bool inversed, address payable _receiver, uint256 _amount)\r\n    external payable returns(bool success){\r\n        uint256 ratio = burnamintable[_oldContractAddress][_newContractAddress][inversed];\r\n        require(ratio > 0, \"Tokens are not burnamintables\");\r\n        Token oldToken = Token(_oldContractAddress);\r\n        \r\n        if(_oldContractAddress == address(0)){\r\n            require(msg.value == _amount);\r\n        }else {\r\n            require(oldToken.transferFrom(msg.sender, address(this), _amount)); // use safetransfer from\r\n        }\r\n        uint256 oldTokenDecimals = getTokenDecimals(_oldContractAddress);\r\n        uint256 newTokenDecimals = getTokenDecimals(_newContractAddress);\r\n        uint256 _value = _amount * 10**(newTokenDecimals+18-oldTokenDecimals);\r\n        if(inversed){\r\n            uint256 value0 = (_value*ratio)/10**18;\r\n            (Token(_newContractAddress)).transfer(_receiver, value0);\r\n            emit BurnaMint(_oldContractAddress, _newContractAddress, _receiver, _amount, value0);\r\n            return true;\r\n        }\r\n        uint256 value = (_value/ratio)/10**18;\r\n        (Token(_newContractAddress)).transfer(_receiver, value);\r\n        emit BurnaMint(_oldContractAddress, _newContractAddress, _receiver, _amount, value);\r\n        return true;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(admins[msg.sender], \"Caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function withdrawToken(address _token, address _to, uint256 _value) external onlyOwner returns (bool success){\r\n        Token(_token).transfer(_to, _value);\r\n        return true;\r\n    }\r\n\r\n    function getTokenDecimals(address _token) public view returns (uint256 decimals){\r\n        if(_token == address(0)){\r\n            return 18;\r\n        }\r\n        return uint256(Token(_token).decimals());\r\n    }\r\n    \r\n    function withdraw(address payable _to, uint256 _value) external onlyOwner returns (bool success){\r\n        _to.transfer(_value);\r\n        return true;\r\n    }\r\n\r\n    function destroy(address payable _to) external onlyOwner {\r\n        selfdestruct(_to);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"BurnaMint\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oldContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newContractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"inversed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"addBurnamintable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oldContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newContractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"inversed\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnamint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_isAdmin\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oldContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newContractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"inversed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"resetBurnamintable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Burnamint","CompilerVersion":"v0.7.4+commit.3f05b770","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://b628a677c793e45ed79baa79dc2e865d99e909d9310ed14f66119c996893071e"}]}