{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.12;\r\n\r\ncontract Proxy {\r\n    // Code position in storage is keccak256(\"PROXIABLE\") = \"0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7\"\r\n    uint256 constant PROXY_MEM_SLOT = 0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7;\r\n\r\n    constructor(address contractLogic) public {\r\n        // Verify a valid address was passed in\r\n        require(contractLogic != address(0), \"Contract Logic cannot be 0x0\");\r\n\r\n        // save the code address\r\n        assembly {\r\n            // solium-disable-line\r\n            sstore(PROXY_MEM_SLOT, contractLogic)\r\n        }\r\n    }\r\n\r\n    fallback() external payable {\r\n        assembly {\r\n            // solium-disable-line\r\n            let contractLogic := sload(PROXY_MEM_SLOT)\r\n            let ptr := mload(0x40)\r\n            calldatacopy(ptr, 0x0, calldatasize())\r\n            let success := delegatecall(\r\n                gas(),\r\n                contractLogic,\r\n                ptr,\r\n                calldatasize(),\r\n                0,\r\n                0\r\n            )\r\n            let retSz := returndatasize()\r\n            returndatacopy(ptr, 0, retSz)\r\n            switch success\r\n                case 0 {\r\n                    revert(ptr, retSz)\r\n                }\r\n                default {\r\n                    return(ptr, retSz)\r\n                }\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractLogic\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Proxy","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000058dd75e6560f4636130bba5c9a03af3a21def4e1","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"1","Implementation":"0x58dd75e6560f4636130bba5c9a03af3a21def4e1","SwarmSource":"ipfs://551b1350f755851d728f025e1e78d87c1a8cf67ba97458c753f6e1b37bb51454"}]}