{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.16;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ninterface ERC20Interface {\r\n    function totalSupply() external view returns(uint);\r\n    function balanceOf(address owner)  external view returns(uint256 balance);\r\n    function transfer(address to, uint value) external returns(bool success);\r\n    function transferFrom(address _from, address _to, uint256 value)  external returns(bool success);\r\n    function approve(address spender, uint256 value)  external returns(bool success);\r\n    function allowance(address owner, address spender)  external view returns(uint256 remaining);\r\n    \r\n    function Exchange_Price() external view returns(uint256 actual_Price); \r\n    \r\n    function isUser_Frozen(address _user) external view returns (bool);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n//Wealth Builder Club Loyalty Token\r\n\r\ncontract WBCT {\r\n\r\n    using SafeMath for uint;\r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint public decimals;\r\n    uint public _totalSupply;\r\n    bool public paused = false;\r\n    uint256 adminCount;\r\n    uint256 TOKEN_PRICE;\r\n    address public EXCHNG;\r\n    address public TOKEN_ATM;\r\n    \r\n    address[] public adminListed;\r\n    \r\n    mapping (address => mapping (address => uint256)) public allowed;\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => uint256) public freezeOf;\r\n    mapping (address => bool) public frozenUser;\r\n    mapping (address => bool) public isBlackListed;\r\n    mapping (address => bool) public registeredUser;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint value, uint _time);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value, uint _time);\r\n    \r\n    event DestroyedBlackFunds(address _blackListedUser, uint256 _balance, uint _time);\r\n    event AddedBlackList(address _user, uint _time);\r\n    event RemovedBlackList(address _user, uint _time);\r\n\r\n    event Received(address, uint _value, uint _time);\r\n    event Issue(uint amount, uint _time);\r\n    event Redeem(uint amount, uint _time);\r\n\r\n    event Registered_User(address _user, uint _time);\r\n    event UserFrozen(address _user, address _admin, uint _time);\r\n    event UserUnfrozen(address _user, address _admin, uint _time);\r\n    event Freeze(address indexed from, uint256 value);\r\n    event Unfreeze(address indexed from, uint256 value);\r\n\r\n    event AddedAdminList(address _adminUser);\r\n    event RemovedAdminList(address _clearedAdmin);\r\n    \r\n    event Pause();\r\n    event Unpause();\r\n\r\n    function init_Token(uint256 _initialSupply, string memory _name, string memory _symbol, uint256 _decimals) public onlyOwner {\r\n        _totalSupply = _initialSupply* (10 ** _decimals);\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        registeredUser[msg.sender]=true;\r\n        frozenUser[msg.sender]=false;\r\n        balanceOf[msg.sender] = _initialSupply * (10 ** _decimals);\r\n    }\r\n\r\n    constructor () public {\r\n        adminListed.push(msg.sender);\r\n        adminCount=1;\r\n        TOKEN_PRICE = 0.001 ether;\r\n    }  \r\n      \r\n    modifier onlyOwner() {\r\n        require(isAdminListed(msg.sender));\r\n        _;\r\n    }    \r\n\r\n    /**\r\n    * @dev Fix for the ERC20 short address attack.\r\n    */\r\n\r\n    modifier onlyPayloadSize(uint size) {\r\n        require(!(msg.data.length < size + 4));\r\n        _;\r\n    }\r\n    \r\n    modifier whenNotPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n\r\n    modifier whenPaused() {\r\n        require(paused);\r\n        _;\r\n    }\r\n\r\n  function pause() onlyOwner whenNotPaused public {\r\n    paused = true;\r\n    emit Pause();\r\n  }\r\n\r\n  function unpause() onlyOwner whenPaused public {\r\n    paused = false;\r\n    emit Unpause();\r\n  }\r\n  \r\n      function isAdminListed(address _maker) public view returns (bool) {\r\n        require(_maker != address(0));\r\n        bool status = false;\r\n        for(uint256 i=0;i<adminCount;i++){\r\n            if(adminListed[i] == _maker) { status = true; }\r\n        }\r\n        return status;\r\n    }\r\n\r\n     function getOwner() public view returns (address[] memory) {\r\n        address[] memory _adminList = new address[](adminCount);\r\n        for(uint i=0;i<adminCount;i++){\r\n            _adminList[i]=adminListed[i];\r\n        }\r\n    return _adminList;\r\n    }\r\n\r\n    function addAdminList (address _adminUser) public onlyOwner {\r\n        require(_adminUser != address(0));\r\n        require(!isAdminListed(_adminUser));\r\n        adminListed.push(_adminUser);\r\n        adminCount++;\r\n        emit AddedAdminList(_adminUser);\r\n    }\r\n\r\n    function removeAdminList (address _clearedAdmin) public onlyOwner {\r\n        require(isAdminListed(_clearedAdmin) && _clearedAdmin != msg.sender);\r\n        for(uint256 i=0;i<adminCount;i++){\r\n            if(adminListed[i] == _clearedAdmin) { \r\n                adminListed[i]=adminListed[adminListed.length-1];\r\n                delete adminListed[adminListed.length-1];\r\n                adminCount--;\r\n            }\r\n        }\r\n        emit RemovedAdminList(_clearedAdmin);\r\n    }\r\n\r\n    function isUser_Frozen(address _user) public view returns (bool) {\r\n        return frozenUser[_user];\r\n    }\r\n    \r\n    function setUser_Frozen(address _user) public onlyOwner{\r\n        frozenUser[_user] = true;\r\n        emit UserFrozen(_user, msg.sender, now);\r\n    }\r\n    \r\n    function setUser_unFrozen(address _user) public onlyOwner{\r\n        frozenUser[_user] = false;\r\n        emit UserUnfrozen(_user, msg.sender, now);\r\n    }\r\n    \r\n    function getBlackListStatus(address _user) public view returns (bool) {\r\n        return isBlackListed[_user];\r\n    }\r\n    \r\n    function addBlackList (address _evilUser) public onlyOwner {\r\n        isBlackListed[_evilUser] = true;\r\n        emit AddedBlackList(_evilUser,now);\r\n    }\r\n\r\n    function removeBlackList (address _clearedUser) public onlyOwner {\r\n        isBlackListed[_clearedUser] = false;\r\n        emit RemovedBlackList(_clearedUser,now);\r\n    }\r\n\r\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r\n        require(isBlackListed[_blackListedUser]);\r\n        uint dirtyFunds = balanceOf[_blackListedUser];\r\n        balanceOf[_blackListedUser] = 0;\r\n        _totalSupply -= dirtyFunds;\r\n        emit DestroyedBlackFunds(_blackListedUser, dirtyFunds,now);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public whenNotPaused onlyPayloadSize(2 * 32) returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value && balanceOf[_to] + _value >= balanceOf[_to]);\r\n        require(!frozenUser[_to]);\r\n        require(!frozenUser[msg.sender]);\r\n        _transfer(msg.sender, _to, _value);\r\n        emit Transfer(msg.sender, _to,_value,now);\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint256 _value) internal {\r\n        require(_to != address(0));\r\n        require(!frozenUser[_from]);\r\n        require(!frozenUser[_to]);\r\n        require(!frozenUser[msg.sender]);\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        balanceOf[_to] = balanceOf[_to].add(_value);\r\n        emit Transfer(_from, _to, _value,now);\r\n    }    \r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused onlyPayloadSize(2 * 32) returns (bool success) {\r\n        require(_value > 0);\r\n        require(_value <= balanceOf[_from]);\r\n        require(_value <= allowed[_from][msg.sender] || _to == EXCHNG || _to == TOKEN_ATM);\r\n        require(!frozenUser[_from]);\r\n        require(!frozenUser[_to]);\r\n        require(!frozenUser[msg.sender]);\r\n        if( _to != TOKEN_ATM && _to != EXCHNG ) allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public whenNotPaused onlyPayloadSize(2 * 32) returns (bool success) {\r\n        require(!frozenUser[_spender]);\r\n        require(!frozenUser[msg.sender]);\r\n        require(_value != 0);\r\n        require(_spender != address(0));\r\n        require( balanceOf[msg.sender] >= _value );\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value,now);\r\n        return true;\r\n    }\r\n    \r\n    function freeze(uint256 _value) public returns (bool success) {\r\n        require(!frozenUser[msg.sender]);\r\n        require(balanceOf[msg.sender] >= _value);\r\n\t\trequire(_value >= 0);\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\r\n        freezeOf[msg.sender] = freezeOf[msg.sender].add(_value);\r\n        emit Freeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n\tfunction unfreeze(uint256 _value) public returns (bool success) {\r\n\t    require(!frozenUser[msg.sender]);\r\n        require(freezeOf[msg.sender] >= _value);\r\n\t\trequire (_value >= 0);\r\n        freezeOf[msg.sender] = freezeOf[msg.sender].sub(_value);\r\n\t\tbalanceOf[msg.sender] = balanceOf[msg.sender].add(_value);\r\n        emit Unfreeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    function issue(uint amount) public onlyOwner {\r\n        require(_totalSupply + amount > _totalSupply);\r\n        require(balanceOf[msg.sender] + amount > balanceOf[msg.sender]);\r\n        _totalSupply += amount;\r\n        balanceOf[msg.sender] += amount;\r\n        emit Issue(amount,now);\r\n    }\r\n\r\n    function redeem(uint amount) public onlyOwner {\r\n        require(_totalSupply >= amount);\r\n        require(balanceOf[msg.sender] >= amount);\r\n        _totalSupply -= amount;\r\n        balanceOf[msg.sender] -= amount;\r\n        emit Redeem(amount,now);\r\n    }\r\n\r\n\tfunction withdrawEther(uint256 amount) public onlyOwner  {\r\n\t    require(isAdminListed(msg.sender));\r\n\t    msg.sender.transfer(amount);\r\n\t}\r\n\r\n\tfunction getETHBalance() public view onlyOwner returns (uint256 _ETHBalance) {\r\n\treturn address(this).balance;\r\n    }\r\n\r\n\tfunction () external payable onlyPayloadSize(2 * 32) { \r\n        emit Received(msg.sender, msg.value,now);\r\n    }\r\n    \r\n    function setEXCHNGAddress (address _exchngSCAddress) public onlyOwner { \r\n        EXCHNG = _exchngSCAddress;\r\n    }\r\n    \r\n    function set_ATMAddress (address _ATMSCAddress) public onlyOwner { \r\n        TOKEN_ATM = _ATMSCAddress;\r\n    }\r\n    \r\n    function set_TokenName (string memory _name,string memory _symbol) public onlyOwner { \r\n        name = _name;\r\n        symbol = _symbol;\r\n    }\r\n    \r\n    function Exchange_Price() public view returns (uint256 actual_Price) {\r\n        return TOKEN_PRICE;\r\n    }\r\n    \r\n    function set_Exchange_Price() public onlyOwner {\r\n        ERC20Interface ERC20Exchng = ERC20Interface(EXCHNG);\r\n        TOKEN_PRICE = ERC20Exchng.Exchange_Price();\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_adminUser\",\"type\":\"address\"}],\"name\":\"AddedAdminList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"Registered_User\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_clearedAdmin\",\"type\":\"address\"}],\"name\":\"RemovedAdminList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"UserFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"UserUnfrozen\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"EXCHNG\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Exchange_Price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"actual_Price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_ATM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminUser\",\"type\":\"address\"}],\"name\":\"addAdminList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"adminListed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getETHBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_ETHBalance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"init_Token\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"isAdminListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isUser_Frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registeredUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_clearedAdmin\",\"type\":\"address\"}],\"name\":\"removeAdminList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchngSCAddress\",\"type\":\"address\"}],\"name\":\"setEXCHNGAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"setUser_Frozen\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"setUser_unFrozen\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ATMSCAddress\",\"type\":\"address\"}],\"name\":\"set_ATMAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"set_Exchange_Price\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"set_TokenName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"WBCT","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"BSD-3-Clause","Proxy":"0","Implementation":"","SwarmSource":"bzzr://5969a9233d02e09fccea50a1ccdd87ea22352addfe50bc15cec4e6d43473f62c"}]}