{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n███████╗██╗      █████╗  ██████╗  ██████╗ ███████╗██████╗ \r\n██╔════╝██║     ██╔══██╗██╔════╝ ██╔════╝ ██╔════╝██╔══██╗\r\n█████╗  ██║     ███████║██║  ███╗██║  ███╗█████╗  ██║  ██║\r\n██╔══╝  ██║     ██╔══██║██║   ██║██║   ██║██╔══╝  ██║  ██║\r\n██║     ███████╗██║  ██║╚██████╔╝╚██████╔╝███████╗██████╔╝\r\n╚═╝     ╚══════╝╚═╝  ╚═╝ ╚═════╝  ╚═════╝ ╚══════╝╚═════╝ \r\n████████╗ ██████╗ ██╗  ██╗███████╗███╗   ██╗              \r\n╚══██╔══╝██╔═══██╗██║ ██╔╝██╔════╝████╗  ██║              \r\n   ██║   ██║   ██║█████╔╝ █████╗  ██╔██╗ ██║              \r\n   ██║   ██║   ██║██╔═██╗ ██╔══╝  ██║╚██╗██║              \r\n   ██║   ╚██████╔╝██║  ██╗███████╗██║ ╚████║*/\r\n// Presented by LexDAO LLC\r\n// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity 0.8.0;\r\n\r\ncontract FlaggedToken {\r\n    address public governor;\r\n    uint256 public totalSupply;\r\n    string  public details;\r\n    string  public name;\r\n    string  public symbol;\r\n    \r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(uint256 => address) public ownerOf;\r\n    mapping(uint256 => string) public tokenURI;\r\n    mapping(bytes4 => bool) public supportsInterface; // eip-165 \r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n    event UpdateGovernance(address indexed governor, string details);\r\n    event UpdateTokenURI(uint256 indexed tokenId, string tokenURI);\r\n    \r\n    constructor(address _governor, string memory _details, string memory _name, string memory _symbol) {\r\n        governor = _governor; \r\n        details = _details; \r\n        name = _name; \r\n        symbol = _symbol;  \r\n        supportsInterface[0x80ac58cd] = true; // ERC721 \r\n        supportsInterface[0x5b5e139f] = true; // METADATA\r\n    }\r\n    \r\n    modifier onlyGovernor {\r\n        require(msg.sender == governor, \"!governor\");\r\n        _;\r\n    }\r\n    \r\n    function governorTransfer(address from, address to, uint256 tokenId) external onlyGovernor {\r\n        require(from == ownerOf[tokenId], \"!owner\");\r\n        balanceOf[from]--; \r\n        balanceOf[to]++; \r\n        ownerOf[tokenId] = to;\r\n        emit Transfer(from, to, tokenId); \r\n    }\r\n    \r\n    function _mint(address to, string calldata _tokenURI) internal { \r\n        totalSupply++;\r\n        uint256 tokenId = totalSupply;\r\n        balanceOf[to]++;\r\n        ownerOf[tokenId] = to;\r\n        tokenURI[tokenId] = _tokenURI;\r\n        emit Transfer(address(0), to, tokenId); \r\n    }\r\n    \r\n    function mint(address to, string calldata _tokenURI) external onlyGovernor { \r\n        _mint(to, _tokenURI);\r\n    }\r\n    \r\n    function mintBatch(address[] calldata to, string[] calldata _tokenURI) external onlyGovernor {\r\n        require(to.length == _tokenURI.length, \"!to/tokenURI\");\r\n        for (uint256 i = 0; i < to.length; i++) {\r\n            _mint(to[i], _tokenURI[i]); \r\n        }\r\n    }\r\n    \r\n    function updateGovernance(address _governor, string calldata _details) external onlyGovernor {\r\n        governor = _governor;\r\n        details = _details;\r\n        emit UpdateGovernance(_governor, _details);\r\n    }\r\n    \r\n    function updateTokenURI(uint256 tokenId, string calldata _tokenURI) external onlyGovernor {\r\n        require(tokenId <= totalSupply, \"!exist\");\r\n        tokenURI[tokenId] = _tokenURI;\r\n        emit UpdateTokenURI(tokenId, _tokenURI);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_details\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"name\":\"UpdateGovernance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"UpdateTokenURI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"details\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"governorTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"_tokenURI\",\"type\":\"string[]\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_details\",\"type\":\"string\"}],\"name\":\"updateGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"updateTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"FlaggedToken","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000001c0aa8ccd568d90d61659f060d1bfb1e6f855a20000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000004f466c616767656420546f6b656e2070726f766964657320612044414f2d63757261746564206c697374696e67206f6620457468657265756d20746f6b656e73207265616461626c65206173204e46540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d466c616767656420546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004464c414700000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ddf066a337d1e1a3e39490f38eefdf09da9aa9c3c11102f5c762d4d7230b9554"}]}