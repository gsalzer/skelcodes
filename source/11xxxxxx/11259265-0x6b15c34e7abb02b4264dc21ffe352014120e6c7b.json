{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/ProxyCoin.sol\": {\r\n      \"content\": \"pragma solidity ^0.6.0;\\n\\ninterface IDSProxyFactory {\\n  function build() external returns (address payable);\\n}\\n\\ninterface IDSProxy {\\n  function setOwner(address) external;\\n}\\n\\ncontract ProxyCoin {\\n  //////////////////////////////////////////////////////////////////////////\\n  // Generic ERC20\\n  //////////////////////////////////////////////////////////////////////////\\n\\n  // owner -> amount\\n  mapping(address => uint256) s_balances;\\n  address[] s_proxies;\\n  // owner -> spender -> max amount\\n  mapping(address => mapping(address => uint256)) s_allowances;\\n\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n  // Spec: Get the account balance of another account with address `owner`\\n  function balanceOf(address owner) public view returns (uint256 balance) {\\n    return s_balances[owner];\\n  }\\n\\n  function internalTransfer(address from, address to, uint256 value) internal returns (bool success) {\\n    if (value <= s_balances[from]) {\\n      s_balances[from] -= value;\\n      s_balances[to] += value;\\n      emit Transfer(from, to, value);\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  // Spec: Send `value` amount of tokens to address `to`\\n  function transfer(address to, uint256 value) public returns (bool success) {\\n    address from = msg.sender;\\n    return internalTransfer(from, to, value);\\n  }\\n\\n  // Spec: Send `value` amount of tokens from address `from` to address `to`\\n  function transferFrom(address from, address to, uint256 value) public returns (bool success) {\\n    address spender = msg.sender;\\n    if(value <= s_allowances[from][spender] && internalTransfer(from, to, value)) {\\n      s_allowances[from][spender] -= value;\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  // Spec: Allow `spender` to withdraw from your account, multiple times, up\\n  // to the `value` amount. If this function is called again it overwrites the\\n  // current allowance with `value`.\\n  function approve(address spender, uint256 value) public returns (bool success) {\\n    address owner = msg.sender;\\n    if (value != 0 && s_allowances[owner][spender] != 0) {\\n      return false;\\n    }\\n    s_allowances[owner][spender] = value;\\n    emit Approval(owner, spender, value);\\n    return true;\\n  }\\n\\n  // Spec: Returns the `amount` which `spender` is still allowed to withdraw\\n  // from `owner`.\\n  // What if the allowance is higher than the balance of the `owner`?\\n  // Callers should be careful to use min(allowance, balanceOf) to make sure\\n  // that the allowance is actually present in the account!\\n  function allowance(address owner, address spender) public view returns (uint256 remaining) {\\n    return s_allowances[owner][spender];\\n  }\\n\\n  //////////////////////////////////////////////////////////////////////////\\n  // GasToken specifics\\n  //////////////////////////////////////////////////////////////////////////\\n\\n  uint8 constant public decimals = 0;\\n  string constant public name = \\\"proxy.cash\\\";\\n  string constant public symbol = \\\"DS-ProxyCash\\\";\\n\\n  IDSProxyFactory public DSFactory;\\n\\n  // We build a queue of nonces at which child contracts are stored. s_head is\\n  // the nonce at the head of the queue, s_tail is the nonce behind the tail\\n  // of the queue. The queue grows at the head and shrinks from the tail.\\n  // Note that when and only when a contract CREATEs another contract, the\\n  // creating contract's nonce is incremented.\\n  // The first child contract is created with nonce == 1, the second child\\n  // contract is created with nonce == 2, and so on...\\n  // For example, if there are child contracts at nonces [2,3,4],\\n  // then s_head == 4 and s_tail == 1. If there are no child contracts,\\n  // s_head == s_tail.\\n  uint256 supply;\\n\\n\\n  constructor(address _dsFactory) public {\\n    DSFactory = IDSProxyFactory(_dsFactory);\\n    supply = 0;\\n  }\\n\\n  // totalSupply gives  the number of tokens currently in existence\\n  // Each token corresponds to one child contract that can be SELFDESTRUCTed\\n  // for a gas refund.\\n  function totalSupply() public view returns (uint256) {\\n\\n    return supply;\\n  }\\n\\n  // Creates a child contract that can only be destroyed by this contract.\\n  function makeChild() internal returns (address payable) {\\n    return DSFactory.build();\\n  }\\n\\n  // Mints `value` new sub-tokens (e.g. cents, pennies, ...) by creating `value`\\n  // new child contracts. The minted tokens are owned by the caller of this\\n  // function.\\n  function mint(uint256 value) public {\\n    for (uint256 i = 0; i < value; i++) {\\n      address proxy = address(makeChild());\\n      s_proxies.push(proxy);\\n    }\\n    supply += value;\\n    s_balances[msg.sender] += value;\\n  }\\n\\n  function claim() public returns (bool) {\\n    return _claim(msg.sender);\\n  }\\n\\n  function claimFor(address newOwner) public returns (bool) {\\n    return _claim(newOwner);\\n  }\\n\\n  function _claim(address newOwner) internal returns (bool success) {\\n    uint256 from_balance = s_balances[msg.sender];\\n    if (from_balance == 0) {\\n      return false;\\n    }\\n\\n    uint lastPos = s_proxies.length - 1;\\n    address proxy = s_proxies[lastPos];\\n    delete s_proxies[lastPos];\\n\\n    IDSProxy(proxy).setOwner(newOwner);\\n\\n    s_balances[msg.sender] = from_balance - 1;\\n\\n    supply -= 1;\\n\\n    return true;\\n  }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dsFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DSFactory\",\"outputs\":[{\"internalType\":\"contract IDSProxyFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"claimFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ProxyCoin","CompilerVersion":"v0.6.7+commit.b8d736ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000a26e15c895efc0616177b7c1e7270a4c7d51c997","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}