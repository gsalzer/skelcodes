{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.13;\r\n\r\ninterface IERC20Dai {\r\n      function allowance(address owner, address spender) external view returns (uint256);\r\n      function permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s) external;\r\n}\r\n\r\ninterface IAlternateReceiverBridge {\r\n    function relayTokens(address _sender, address _receiver, uint256 _amount) external;\r\n    function withinLimit(uint256 _amount) external view returns (bool);\r\n}\r\n\r\ninterface IRCProxyXdai {}\r\n\r\ncontract TestRCProxyMainnet \r\n{\r\n    \r\n    IERC20Dai public dai;\r\n    IAlternateReceiverBridge public alternateReceiverBridge;\r\n    IRCProxyXdai public proxyXdai;\r\n    \r\n    uint256 internal depositNonce;\r\n    \r\n    event DaiDeposited(address indexed user, uint256 amount, uint256 nonce);\r\n    \r\n    constructor(address _alternateReceiverAddress, address _proxyXdaiAddress) public {\r\n        alternateReceiverBridge = IAlternateReceiverBridge(_alternateReceiverAddress);\r\n        proxyXdai = IRCProxyXdai(_proxyXdaiAddress);\r\n    }\r\n    \r\n    function depositDai(uint256 _amount) external {\r\n        _depositDai(_amount, msg.sender); \r\n    }\r\n\r\n    function permitAndDepositDai(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s, uint256 _amount) external {\r\n        require(allowed, \"only possible if allowance is set\");\r\n        dai.permit(holder, spender, nonce, expiry, allowed, v, r, s);\r\n        _depositDai(_amount, holder);\r\n    }\r\n\r\n    function _depositDai(uint256 _amount, address _sender) internal {\r\n        require(dai.allowance(_sender, address(alternateReceiverBridge)) >= _amount, \"Token allowance not high enough\");\r\n        require(alternateReceiverBridge.withinLimit(_amount), \"deposit not within bridge limits\");\r\n\r\n        alternateReceiverBridge.relayTokens(_sender, address(proxyXdai), _amount);\r\n\r\n        emit DaiDeposited(_sender, _amount, depositNonce++);\r\n    }\r\n    \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_alternateReceiverAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_proxyXdaiAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"DaiDeposited\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"alternateReceiverBridge\",\"outputs\":[{\"internalType\":\"contract IAlternateReceiverBridge\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract IERC20Dai\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositDai\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"permitAndDepositDai\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proxyXdai\",\"outputs\":[{\"internalType\":\"contract IRCProxyXdai\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TestRCProxyMainnet","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000004aa42145aa6ebf72e164c9bbc74fbd3788045016000000000000000000000000558891e5ff96639a1934a39a780e063973c149d5","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://aad7a57c9aec9c3cccae332234259151ed58774dcaa764349fb3a0f8ef07109f"}]}