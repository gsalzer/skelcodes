{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/home/user/Documents/Project/solidity/miris-sc/contracts/MultiSignature.sol\": {\r\n      \"content\": \"pragma solidity >=0.6.0 <0.7.0;\\n\\nimport \\\"./interfaces/IDDP.sol\\\";\\nimport \\\"./interfaces/IAllowList.sol\\\";\\nimport \\\"./interfaces/ISecurityAssetToken.sol\\\";\\nimport \\\"./OperatorVote.sol\\\";\\nimport \\\"./templates/Initializable.sol\\\";\\n\\n\\ncontract MultiSignature is OperatorVote, Initializable {\\n    /// KYC address list\\n    address private _allowList;\\n    /// DDP contract address\\n    address private _ddp;\\n    /// Security Asset token contract address\\n    address private _sat;\\n\\n    constructor (\\n        address[] memory founders,\\n        uint256 votesThreshold\\n        ) public OperatorVote(founders, votesThreshold)\\n    {\\n    }\\n\\n    function configure(\\n        address allowList,\\n        address ddp,\\n        address sat\\n    ) external initializer\\n    {\\n        _allowList = allowList;\\n        _ddp = ddp;\\n        _sat = sat;\\n    }\\n\\n    function allowAccount (address account) external onlyOperator {\\n        IAllowListChange(_allowList).allowAccount(account);\\n    }\\n\\n    function disallowAccount(address account) external onlyOperator {\\n        IAllowListChange(_allowList).disallowAccount(account);\\n    }\\n\\n    function mintSecurityAssetToken(\\n        address to,\\n        uint256 value,\\n        uint256 maturity) external onlyOperator\\n    {\\n        ISecurityAssetToken(_sat).mint(to, value, maturity);\\n    }\\n\\n    function burnSecurityAssetToken(uint256 tokenId) external onlyOperator {\\n        ISecurityAssetToken(_sat).burn(tokenId);\\n    }\\n\\n    function transferSecurityAssetToken(\\n        address from,\\n        address to,\\n        uint256 tokenId) external onlyOperator\\n    {\\n        ISecurityAssetToken(_sat).transferFrom(from, to, tokenId);\\n    }\\n\\n    function setClaimPeriod(uint256 claimPeriod) external onlyOperator {\\n        IDDP(_ddp).setClaimPeriod(claimPeriod);\\n    }\\n}\\n\"\r\n    },\r\n    \"/home/user/Documents/Project/solidity/miris-sc/contracts/OperatorVote.sol\": {\r\n      \"content\": \"pragma solidity >=0.6.0 <0.7.0;\\n\\nimport \\\"@openzeppelin/contracts/GSN/Context.sol\\\";\\n\\n\\n/**\\n * @title OperatorVote contract\\n * @dev Vote for operator address\\n */\\ncontract OperatorVote is Context {\\n    event AddedFounders(address[] founders);\\n    event OperatorChanged(address oldOperator, address newOperator);\\n\\n    address private _operator;\\n    uint256 private _votesThreshold;\\n\\n    mapping(address => bool) private _founders;\\n    mapping(address => address[]) private _candidates;\\n\\n    constructor(address[] memory founders, uint256 votesThreshold) public {\\n        _votesThreshold = votesThreshold;\\n\\n        for (uint256 i = 0; i < founders.length; i++) {\\n            _founders[founders[i]] = true;\\n        }\\n\\n        address msgSender = _msgSender();\\n        _operator = msgSender;\\n\\n        emit AddedFounders(founders);\\n        emit OperatorChanged(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Throws out if the address is not the founder\\n     */\\n    modifier onlyFounders() {\\n        require(_founders[_msgSender()], \\\"user is not a founder\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the operator.\\n     */\\n    modifier onlyOperator() {\\n        require(_msgSender() == _operator, \\\"user is not the operator\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Get the number of votes for the operator\\n     * @param candidate address of operator candidate\\n     * @return number of votes\\n     */\\n    function getNumberVotes(address candidate) external view returns (uint256) {\\n        return _candidates[candidate].length;\\n    }\\n\\n    /**\\n     * @dev Get the vote number threshold\\n     * @return votes threshold\\n     */\\n    function getThreshold() external view returns (uint256) {\\n        return _votesThreshold;\\n    }\\n\\n    /**\\n     * @dev Returns current operator address.\\n     */\\n    function getOperator() external view returns (address) {\\n        return _operator;\\n    }\\n\\n    /**\\n     * @dev Operator vote\\n     * @param candidate operator candidate address\\n     */\\n    function voteOperator(address candidate) external onlyFounders {\\n        require(candidate != address(0), \\\"candidate is the zero address\\\");\\n\\n        address sender = _msgSender();\\n\\n        for (uint256 i = 0; i < _candidates[candidate].length; i++) {\\n            require(\\n                _candidates[candidate][i] != sender,\\n                \\\"you have already voted\\\"\\n            );\\n        }\\n\\n        if ((_candidates[candidate].length + 1) >= _votesThreshold) {\\n            delete _candidates[candidate];\\n\\n            _operator = candidate;\\n            emit OperatorChanged(_operator, candidate);\\n        } else {\\n            _candidates[candidate].push(sender);\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"/home/user/Documents/Project/solidity/miris-sc/contracts/interfaces/IAllowList.sol\": {\r\n      \"content\": \"pragma solidity >=0.6.0 <0.7.0;\\n\\ninterface IAllowList {\\n    function isAllowedAccount(address account) external view returns (bool);\\n}\\n\\ninterface IAllowListChange {\\n    function allowAccount(address account) external;\\n\\n    function disallowAccount(address account) external;\\n}\\n\"\r\n    },\r\n    \"/home/user/Documents/Project/solidity/miris-sc/contracts/interfaces/IDDP.sol\": {\r\n      \"content\": \"pragma solidity >=0.6.0 <0.7.0;\\n\\ninterface IDDP {\\n    function deposit(\\n        uint256 tokenId,\\n        uint256 value,\\n        uint256 maturity,\\n        address to\\n    ) external;\\n\\n    function setClaimPeriod(uint256 claimPeriod) external;\\n}\\n\"\r\n    },\r\n    \"/home/user/Documents/Project/solidity/miris-sc/contracts/interfaces/ISecurityAssetToken.sol\": {\r\n      \"content\": \"pragma solidity >=0.6.0 <0.7.0;\\n\\n\\n/**\\n * @title ISecurityAssetToken\\n * @dev SecurityAssetToken interface\\n */\\ninterface ISecurityAssetToken {\\n    function mint(\\n        address to,\\n        uint256 value,\\n        uint256 maturity\\n    ) external;\\n\\n    function burn(uint256 tokenId) external;\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n}\\n\"\r\n    },\r\n    \"/home/user/Documents/Project/solidity/miris-sc/contracts/templates/Initializable.sol\": {\r\n      \"content\": \"pragma solidity >=0.6.0 <0.7.0;\\n\\nimport \\\"@openzeppelin/contracts/GSN/Context.sol\\\";\\n\\n\\n/**\\n * @title Initializable allows to create initializable contracts\\n * so that only deployer can initialize contract and only once\\n */\\ncontract Initializable is Context {\\n    bool private _isContractInitialized;\\n    address private _deployer;\\n\\n    constructor() public {\\n        _deployer = _msgSender();\\n    }\\n\\n    modifier initializer {\\n        require(_msgSender() == _deployer, \\\"user not allowed to initialize\\\");\\n        require(!_isContractInitialized, \\\"contract already initialized\\\");\\n        _;\\n        _isContractInitialized = true;\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/GSN/Context.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"founders\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"votesThreshold\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"founders\",\"type\":\"address[]\"}],\"name\":\"AddedFounders\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOperator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"OperatorChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burnSecurityAssetToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"allowList\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ddp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sat\",\"type\":\"address\"}],\"name\":\"configure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"disallowAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"getNumberVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"}],\"name\":\"mintSecurityAssetToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimPeriod\",\"type\":\"uint256\"}],\"name\":\"setClaimPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferSecurityAssetToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"voteOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MultiSignature","CompilerVersion":"v0.6.3+commit.8dda9521","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000050000000000000000000000004b459feab602eccbf184bfc28feb4edab5bc4dec00000000000000000000000093a61c835ead1aedadccac020cb1c22ded0f8aa9000000000000000000000000c6e3dffcabfae21bb81c2b3971b35c72683c1e34000000000000000000000000784b627243b7b3937a389d7de565a3347cdeb29500000000000000000000000059cb5b806a845ebb6f95005f061e5cd34580fc2a","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}