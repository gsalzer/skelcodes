{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.18;\r\n\r\n\r\n//Library\r\nlibrary SafeMath {\r\n\r\n    //Functions\r\n    \r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        } \r\n        uint256 c = a * b; \r\n        assert(c / a == b); \r\n        return c;\r\n    }\r\n    \r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b; \r\n        return c;\r\n    }\r\n    \r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a); \r\n        return a - b;\r\n    }\r\n    \r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b; \r\n        assert(c >= a); \r\n        return c;\r\n    }\r\n}\r\n\r\ncontract RespectingBitcoin {\r\n    using SafeMath for uint256;\r\n    \r\n    //Variables\r\n\r\n    uint8 public decimals;\r\n    \r\n    address public owner;\r\n    \r\n    address public deflaxPioneers;\r\n    \r\n    uint256 public supplyCap;\r\n    uint256 public totalSupply;\r\n    \r\n    bool private mintable = true;\r\n\r\n    mapping (address => uint256) private balances;\r\n    mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n    //Events\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event Mint(address indexed to, uint256 amount);\r\n    event Burn(address indexed from, uint256 amount);\r\n    event Mintable(address indexed from, bool enabled);\r\n    event OwnerChanged(address newOwner);\r\n    event ContractChanged(address indexed from, address newContract);\r\n\r\n    //Modifiers\r\n\r\n    modifier oO(){\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    modifier oOOrContract(){\r\n        require(msg.sender == owner || msg.sender == deflaxPioneers); \r\n        _;\r\n    }\r\n    \r\n    modifier onlyMintable() {\r\n        require(mintable); \r\n        _;\r\n    }\r\n    \r\n    //Constructor\r\n    \r\n    function RespectingBitcoin(uint256 _supplyCap, uint8 _decimals) public {\r\n        owner = msg.sender; \r\n        decimals = _decimals;\r\n        supplyCap = _supplyCap * (10 ** uint256(decimals));\r\n    }\r\n    \r\n    //Functions\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0)); \r\n        require(_value <= balances[msg.sender]); \r\n        \r\n        balances[msg.sender] = balances[msg.sender].sub(_value); \r\n        balances[_to] = balances[_to].add(_value); \r\n        \r\n        Transfer(msg.sender, _to, _value); \r\n        return true;\r\n    }\r\n    \r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0)); \r\n        require(_value <= balances[_from]); \r\n        require(_value <= allowed[_from][msg.sender]); \r\n        \r\n        balances[_from] = balances[_from].sub(_value); \r\n        balances[_to] = balances[_to].add(_value); \r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value); \r\n        \r\n        Transfer(_from, _to, _value); \r\n        return true;\r\n    }\r\n   \r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        allowed[msg.sender][_spender] = _value; \r\n        \r\n        Approval(msg.sender, _spender, _value); \r\n        return true;\r\n    }\r\n   \r\n    function allowance(address _owner, address _spender) public view returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n  \r\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue); \r\n        \r\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]); \r\n        return true;\r\n    }\r\n  \r\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n        uint oldValue = allowed[msg.sender][_spender]; \r\n        \r\n        if (_subtractedValue > oldValue) {\r\n            allowed[msg.sender][_spender] = 0;\r\n        } else {\r\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n        } \r\n        \r\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]); \r\n        return true;\r\n    }\r\n  \r\n    function mint(address _to, uint256 _amount) public oOOrContract onlyMintable returns (bool) {\r\n        require(totalSupply.add(_amount) <= supplyCap); \r\n        \r\n        totalSupply = totalSupply.add(_amount); \r\n        balances[_to] = balances[_to].add(_amount); \r\n        Mint(_to, _amount); \r\n        \r\n        Transfer(address(0), _to, _amount); \r\n        return true;\r\n    }\r\n  \r\n    function burn(uint256 _value) external {\r\n        require(_value <= balances[msg.sender]); \r\n        \r\n        address burner = msg.sender; \r\n        balances[burner] = balances[burner].sub(_value); \r\n        totalSupply = totalSupply.sub(_value);\r\n        \r\n        Burn(msg.sender, _value);\r\n    }\r\n    \r\n    function setMintable(bool _isMintable) external oO {\r\n        mintable = _isMintable;\r\n        \r\n        Mintable(msg.sender, _isMintable);\r\n    }\r\n    \r\n    function setOwner(address _newOwner) external oO {\r\n        require(_newOwner != address(0)); \r\n        \r\n        owner = _newOwner;\r\n        \r\n        OwnerChanged(_newOwner);\r\n    }\r\n  \r\n    function setContract(address _newContract) external oO {\r\n        require(_newContract != address(0)); \r\n        \r\n        deflaxPioneers = _newContract; \r\n        \r\n        ContractChanged(msg.sender, _newContract);\r\n    }\r\n}\r\n\r\ncontract DFX is RespectingBitcoin(20968750, 15) {\r\n    \r\n    //Token Details\r\n    \r\n    string public constant name = \"DEFLAx\";\r\n    string public constant symbol = \"DFX\";\r\n}\r\n\r\ncontract bDFP is RespectingBitcoin(3355, 8) {\r\n    \r\n    //Token Details\r\n    \r\n    string public constant name = \"DEFLAxP\";\r\n    string public constant symbol = \"bDFP\";\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_isMintable\",\"type\":\"bool\"}],\"name\":\"setMintable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newContract\",\"type\":\"address\"}],\"name\":\"setContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"supplyCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deflaxPioneers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"Mintable\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractChanged\",\"type\":\"event\"}]","ContractName":"DFX","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://22d1057a19279ab2ca6cee50fb07b2f08e7862a48230502a0af7239f1f37da8a"}]}