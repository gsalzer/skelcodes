{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface CellSubscription {\r\n    function makePayment() external;\r\n}\r\n\r\ncontract EthCollector {\r\n    address owner;\r\n    \r\n    modifier onlyOwner {\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function collect() external onlyOwner {\r\n        require(block.number % 2 == 0);\r\n        CellSubscription(0x7fb75c961DB6d65333DFE63e3C1527AE6a09a263).makePayment();\r\n    }\r\n    \r\n    function withdraw() external onlyOwner {\r\n        payable(owner).transfer(address(this).balance);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"collect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"EthCollector","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"10","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://574682edbee49a9b9829e1d3765426ef015e64ad6c1261a57dcf97c37cb79f70"}]}