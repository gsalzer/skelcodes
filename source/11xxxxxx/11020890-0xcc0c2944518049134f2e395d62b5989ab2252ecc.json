{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2020-06-05\r\n*/\r\n// Copyright (C) 2020 Maker Ecosystem Growth Holdings, INC.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\npragma solidity ^0.5.15;\r\n\r\ncontract ADVTokenAbstract {\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function mint(address account, uint256 amount) public;\r\n    function burn(address account, uint256 amount) public;\r\n}\r\ncontract EasyMain {\r\n    \r\n    address draftMainAddr;\r\n    ADVTokenAbstract  public advToken =\r\n        ADVTokenAbstract(0x19EA6aCd7604cF8e1271818143573B6Fc16EFd27);\r\n    address payable public owner;\r\n    \r\n    uint256     private ethusdLive;\r\n    \r\n    event SEND_ADV(address indexed _account, uint _amount, bool _bSuccess);\r\n    event LogPriceUpdated(string price);\r\n    event LogNewProvableQuery(string description);\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    constructor() public {\r\n        require(msg.sender != address(0));\r\n        ethusdLive = 50000;\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function updateEthUsdLive(uint _ethusdLive) public onlyOwner {\r\n        require(_ethusdLive > 0);\r\n        ethusdLive = _ethusdLive;\r\n    }\r\n    \r\n    function setDraftMainAddr(address _addr) external onlyOwner {\r\n        require(_addr != address(0));\r\n        draftMainAddr = _addr;\r\n    }\r\n    \r\n    function buyToken(uint256 ethusd) external payable {\r\n        require(ethusd > 0 && ethusd < ethusdLive);\r\n        uint256 amount = msg.value * ethusd / 100;\r\n        advToken.mint(msg.sender, amount);\r\n        emit SEND_ADV(msg.sender, amount, true);\r\n    }\r\n    \r\n    function () external payable {\r\n        \r\n    }\r\n    function mintADVToken(address to, uint amount) external {\r\n        require(msg.sender == draftMainAddr);\r\n        advToken.mint(to, amount);\r\n    }\r\n    \r\n    function burnADVToken() external {\r\n        require(msg.sender == draftMainAddr);\r\n        advToken.burn(address(this), advToken.balanceOf(address(this)));\r\n    }\r\n    \r\n    function sendADVToken(uint amount) public payable {\r\n        require(amount > 0);\r\n        advToken.mint(msg.sender, amount);\r\n        emit SEND_ADV(msg.sender, amount, true);\r\n    }\r\n    \r\n    function withdrawBalance(uint amount) public onlyOwner {\r\n        require(amount <= address(this).balance);\r\n        (owner).transfer(amount);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"LogNewProvableQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"price\",\"type\":\"string\"}],\"name\":\"LogPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_bSuccess\",\"type\":\"bool\"}],\"name\":\"SEND_ADV\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"advToken\",\"outputs\":[{\"internalType\":\"contract ADVTokenAbstract\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"burnADVToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethusd\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintADVToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendADVToken\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setDraftMainAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethusdLive\",\"type\":\"uint256\"}],\"name\":\"updateEthUsdLive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"EasyMain","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://d6cb54da19ac9c121f686e61531993e9685013f5584df9666967199aeb7d7a45"}]}