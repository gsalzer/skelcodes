{"status":"1","message":"OK","result":[{"SourceCode":"{\"ERC20Interface.sol\":{\"content\":\"pragma solidity ^0.5.10;\\r\\n\\r\\ncontract ERC20Interface {\\r\\n    function totalSupply() \\r\\n\\t\\tpublic \\r\\n\\t\\tview \\r\\n\\t\\treturns (uint256);\\r\\n\\r\\n    function balanceOf(address tokenOwner) \\r\\n\\t\\tpublic \\r\\n\\t\\tview \\r\\n\\t\\treturns (uint256 balance);\\r\\n    \\r\\n\\tfunction allowance\\r\\n\\t\\t(address tokenOwner, address spender) \\r\\n\\t\\tpublic \\r\\n\\t\\tview \\r\\n\\t\\treturns (uint256 remaining);\\r\\n\\r\\n    function transfer(address to, uint256 tokens) \\t\\t\\t\\tpublic \\r\\n\\t\\treturns (bool success);\\r\\n    \\r\\n\\tfunction approve(address spender, uint256 tokens) \\t\\tpublic \\r\\n\\t\\treturns (bool success);\\r\\n\\r\\n    function transferFrom \\r\\n\\t\\t(address from, address to, uint256 tokens) \\t\\t\\t\\tpublic \\r\\n\\t\\treturns (bool success);\\r\\n\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 tokens);\\r\\n    event Approval(address indexed tokenOwner, address indexed spender, uint256 tokens);\\r\\n}\"},\"Ownable.sol\":{\"content\":\"pragma solidity ^0.5.10;\\r\\n\\r\\ncontract Ownable {\\r\\n\\r\\n  // Owner of the contract\\r\\n  address payable public owner;\\r\\n  address payable internal _newOwner;\\r\\n\\r\\n    constructor() public {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n  /**\\r\\n  * @dev Event to show ownership has been transferred\\r\\n  * @param previousOwner representing the address of the previous owner\\r\\n  * @param newOwner representing the address of the new owner\\r\\n  */\\r\\n  event OwnershipTransferred(address previousOwner, address newOwner);\\r\\n\\r\\n\\r\\n  /**\\r\\n   * @dev Sets a new owner address\\r\\n   */\\r\\n  function setOwner(address payable newOwner) internal {\\r\\n    _newOwner = newOwner;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n  * @dev Throws if called by any account other than the owner.\\r\\n  */\\r\\n  modifier onlyOwner() {\\r\\n    require(msg.sender == owner, \\\"Not Owner\\\");\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n   * @param newOwner The address to transfer ownership to.\\r\\n   */\\r\\n  function transferOwnership(address payable newOwner) public onlyOwner {\\r\\n    require(newOwner != address(0), \\\"Invalid Address\\\");\\r\\n    setOwner(newOwner);\\r\\n  }\\r\\n\\r\\n  //this flow is to prevent transferring ownership to wrong wallet by mistake\\r\\n  function acceptOwnership() public returns (address){\\r\\n      require(msg.sender == _newOwner,\\\"Invalid new owner\\\");\\r\\n      emit OwnershipTransferred(owner, _newOwner);\\r\\n      owner = _newOwner;\\r\\n      _newOwner = address(0);\\r\\n      return owner;\\r\\n  }\\r\\n}\"},\"ReinvestMoondayFinance.sol\":{\"content\":\"pragma solidity ^0.5.10;\\r\\n\\r\\nimport \\\"./SafeMath.sol\\\";\\r\\nimport \\\"./ERC20Interface.sol\\\";\\r\\nimport \\\"./Ownable.sol\\\";\\r\\n\\r\\n\\r\\ncontract ReinvestMoondayFinance is Ownable {\\r\\n\\tusing SafeMath for uint256;\\r\\n\\t\\r\\n\\tERC20Interface MoondayToken;\\r\\n\\t\\r\\n\\taddress payable public moondayFinanceContract;\\r\\n\\t\\r\\n\\tevent Reinvested(uint256 amount);\\r\\n\\t\\r\\n\\tconstructor(address _MoondayToken) public {\\r\\n        owner = msg.sender;\\r\\n        MoondayToken = ERC20Interface(_MoondayToken);\\r\\n        // MoondayToken = ERC20Interface(0x1ad606adde97c0c28bd6ac85554176bc55783c01);\\r\\n    }\\r\\n\\r\\n\\tfunction setMoondayContractAddress(address payable _moondayFinanceContract) public onlyOwner{ \\r\\n\\t\\tmoondayFinanceContract = _moondayFinanceContract;\\r\\n\\t}\\r\\n\\t\\r\\n\\tfunction reinvest() public {\\r\\n\\t\\trequire(moondayFinanceContract != address(0), \\\"Invalid Moonday Capital Contract Address\\\");\\r\\n\\t\\trequire(MoondayToken.balanceOf(address(this)) \\u003e 0, \\\"Invalid Token Balance to reinvest\\\");\\r\\n\\t\\tuint256 amount = MoondayToken.balanceOf(address(this));\\r\\n\\t\\tMoondayToken.transfer(moondayFinanceContract, amount);\\r\\n\\t\\temit Reinvested(amount);\\r\\n\\t}\\r\\n}\"},\"SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.10;\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c \\u003e= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b \\u003c= a, \\\"SafeMath: subtraction overflow\\\");\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b \\u003e 0, \\\"SafeMath: division by zero\\\");\\r\\n        uint256 c = a / b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n}\"}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_MoondayToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Reinvested\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"moondayFinanceContract\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reinvest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_moondayFinanceContract\",\"type\":\"address\"}],\"name\":\"setMoondayContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ReinvestMoondayFinance","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000001ad606adde97c0c28bd6ac85554176bc55783c01","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://8397f0941c65103bc88b255ba67f4a3c520400e9956fc9a7ce67472aee914456"}]}