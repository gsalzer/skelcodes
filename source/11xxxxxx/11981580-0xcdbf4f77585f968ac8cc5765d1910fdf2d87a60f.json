{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\n/// @dev brief interface for sushi swapping ETH //// based on Uniswap v2\r\ninterface ISushiSwapETH {\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n    \r\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n        external\r\n        payable\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\n/// @dev contract that sushi swaps ETH into SUSHI for sender.\r\ncontract ShwapETH {\r\n    address constant sushiToken = 0x6B3595068778DD592e39A122f4f5a5cF09C90fE2; // SUSHI token contract \r\n    address constant wETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; // Wrapped ETH token contract\r\n    ISushiSwapETH constant sushiETHpair = ISushiSwapETH(0x795065dCc9f64b5614C407a6EFDC400DA6221FB0); // SUSHI/ETH pair for SushiSwap\r\n    ISushiSwapETH constant sushiSwapRouter = ISushiSwapETH(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F); // SushiSwap router contract\r\n    \r\n    /// @dev sushi swap ETH into SUSHI for sender.\r\n    receive() external payable {\r\n        (uint256 reserve0, uint256 reserve1, ) = sushiETHpair.getReserves(); // get `sushiETHpair` reserve balances for rate calculation\r\n        uint256 sushiOutMin = msg.value * (reserve0 / reserve1) \r\n        - msg.value * ((reserve0 / reserve1) / 200); // calculate minimum SUSHI return with 0.5% slippage threshold based on `msg.value` ETH\r\n        address[] memory path = new address[](2); // load SUSHI/ETH `path` for router\r\n        path[0] = address(wETH);\r\n        path[1] = address(sushiToken);\r\n        sushiSwapRouter.swapExactETHForTokens{value: msg.value}\r\n        (sushiOutMin, path, msg.sender, block.timestamp + 1200); // stage swap tx in router with 20 minute deadline\r\n    }\r\n}","ABI":"[{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"ShwapETH","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://87f54a38ea3db804ae012fbd1ffc826c469a7600182b77cdd95897c88ea25934"}]}