{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: NONE\n\npragma solidity 0.8.0;\n\n\n\n// Part: LiquidityGauge\n\ninterface LiquidityGauge {\n    function claim_rewards(address _addr) external;\n}\n\n// File: <stdin>.sol\n\ncontract RewardClaimer {\n\n    function claimManyRewards(\n        LiquidityGauge[] calldata _gauges,\n        address[][] calldata _claimants\n    ) external {\n        unchecked {\n            for (uint i = 0; i < _gauges.length; i++) {\n                LiquidityGauge gauge = _gauges[i];\n                for (uint x = 0; x < _claimants[i].length; x++) {\n                    gauge.claim_rewards(_claimants[i][x]);\n                }\n            }\n        }\n    }\n}\n","ABI":"[{\"inputs\":[{\"internalType\":\"contract LiquidityGauge[]\",\"name\":\"_gauges\",\"type\":\"address[]\"},{\"internalType\":\"address[][]\",\"name\":\"_claimants\",\"type\":\"address[][]\"}],\"name\":\"claimManyRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"RewardClaimer","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":""}]}