{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: BSD-3-Clause\r\n\r\npragma solidity 0.5.12;\r\n\r\ncontract HolderSystem {\r\n  address internal owner;\r\n\r\n  uint internal constant ENTRY_ENABLED = 1;\r\n  uint internal constant ENTRY_DISABLED = 2;\r\n\r\n  uint internal reentry_status;\r\n\r\n  modifier isOwner(address _account) {\r\n    require(owner == _account, \"Restricted Access!\");\r\n    _;\r\n  }\r\n\r\n  modifier blockReEntry() {\r\n    require(reentry_status != ENTRY_DISABLED, \"Security Block\");\r\n    reentry_status = ENTRY_DISABLED;\r\n\r\n    _;\r\n\r\n    reentry_status = ENTRY_ENABLED;\r\n  }\r\n\r\n  constructor() public {\r\n    reentry_status = ENTRY_ENABLED;\r\n\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function() external payable blockReEntry() {\r\n  }\r\n\r\n  function getSystemBalance() external view isOwner(msg.sender) returns (uint) {\r\n    return address(this).balance;\r\n  }\r\n  \r\n  function withdraw(uint _amount) external payable isOwner(msg.sender) blockReEntry() {\r\n    require(address(this).balance >= _amount && _amount > 0, \"Not enough funds\");\r\n\r\n    (bool success, ) = msg.sender.call.value(_amount)(\"\");\r\n    \r\n    require(success, \"Transfer failed\");\r\n  }\r\n\r\n  function withdrawTo(address payable _to, uint _amount) external isOwner(msg.sender) blockReEntry() {\r\n    require(address(this).balance >= _amount && _amount > 0, \"Not enough funds\");\r\n\r\n    (bool success, ) = _to.call.value(_amount)(\"\");\r\n    \r\n    require(success, \"Transfer failed\");\r\n  }\r\n\r\n  function changeOwner(address _addr) external isOwner(msg.sender) {\r\n    owner = _addr;\r\n  }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSystemBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"HolderSystem","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"BSD-3-Clause","Proxy":"0","Implementation":"","SwarmSource":"bzzr://970676c2a77565a86168949b6e4f21d8803df311f230a6bd84436dd6a4fd96c1"}]}