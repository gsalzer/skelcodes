{"status":"1","message":"OK","result":[{"SourceCode":"kingasset: address\r\nvalueasset: address\r\nchiefmetapod: address\r\nchiefdollyfractal: address\r\nairdropAddress: address\r\nmantisfaucet: address\r\nnft_faucet: address\r\nmarketing_faucet: address\r\ndev_faucet: address\r\ndefilabs: address\r\ndefilabs_community: address\r\nstatic_vault: address\r\nelastic_vault: address\r\nexchange_vault: address\r\ndex_vault: address\r\ndex_fund: address\r\naddy_ref: HashMap[uint256, address]\r\nblacklist: HashMap[address, bool]\r\ncloner: HashMap[address, bool]\r\nassets: HashMap[String[10], address]\r\nliquidityPools: HashMap[uint256, address]\r\nannouncementsCount: public(uint256)\r\nannounce: HashMap[uint256, String[500]]\r\n\r\n@external\r\ndef __init__():\r\n    self.defilabs = msg.sender\r\n    self.defilabs_community = msg.sender\r\n    self.announcementsCount = 0\r\n\r\n@external\r\ndef setAnnouncement(_message: String[500]) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.announce[self.announcementsCount] = _message\r\n        self.announcementsCount += 1\r\n    return True\r\n\r\n@external\r\ndef setKingAsset(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.kingasset = _address\r\n    return True\r\n\r\n@external\r\ndef setValueAsset(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.valueasset = _address\r\n    return True\r\n\r\n@external\r\ndef setChiefMetapod(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.chiefmetapod = _address\r\n    return True\r\n\r\n@external\r\ndef setChiefDollyFractal(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.chiefdollyfractal = _address\r\n    return True\r\n\r\n@external\r\ndef setAirdropAddress(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.airdropAddress = _address\r\n    return True\r\n\r\n@external\r\ndef setMantisFaucet(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.mantisfaucet = _address\r\n    return True\r\n\r\n@external\r\ndef setNFTfaucet(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.nft_faucet = _address\r\n    return True\r\n\r\n@external\r\ndef setMarketingFaucet(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.marketing_faucet = _address\r\n    return True\r\n\r\n@external\r\ndef setdevFaucet(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.dev_faucet = _address\r\n    return True\r\n\r\n@external\r\ndef setDEFILABS(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.defilabs = _address\r\n    return True\r\n\r\n@external\r\ndef setDEFILABScommunity(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.defilabs_community = _address\r\n    return True\r\n\r\n@external\r\ndef setStaticVault(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.static_vault = _address\r\n    return True\r\n\r\n@external\r\ndef setElasticVault(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.elastic_vault = _address\r\n    return True\r\n\r\n@external\r\ndef setExchangeVault(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.exchange_vault = _address\r\n    return True\r\n\r\n@external\r\ndef setDEXVault(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.dex_vault = _address\r\n    return True\r\n\r\n@external\r\ndef setDEXfund(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.dex_fund = _address\r\n    return True\r\n\r\n@external\r\ndef setAddyRef(_tag: uint256, _address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.addy_ref[_tag] = _address\r\n    return True\r\n\r\n@external\r\ndef ToggleBlacklist(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        if self.blacklist[_address] == True:\r\n            self.blacklist[_address] = False\r\n        else:\r\n            self.blacklist[_address] = True\r\n    return True\r\n\r\n@external\r\ndef setAssets(_ticker: String[10], _address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        self.assets[_ticker] = _address\r\n    return True\r\n\r\n@external\r\ndef ToggleCloner(_address: address) -> bool:\r\n    if msg.sender == self.defilabs or msg.sender == self.defilabs_community:\r\n        if self.cloner[_address] == True:\r\n            self.cloner[_address] = False\r\n        else:\r\n            self.cloner[_address] = True\r\n    return True\r\n\r\n@view\r\n@external\r\ndef DEFILABS() -> address:\r\n    return self.defilabs\r\n\r\n@view\r\n@external\r\ndef DEFILABS_COMMUNITY() -> address:\r\n    return self.defilabs_community\r\n\r\n@view\r\n@external\r\ndef Announcements(_number: uint256) -> String[500]:\r\n    return self.announce[_number]\r\n\r\n@view\r\n@external\r\ndef KingAsset() -> address:\r\n    return self.kingasset\r\n\r\n@view\r\n@external\r\ndef ValueAsset() -> address:\r\n    return self.valueasset\r\n\r\n@view\r\n@external\r\ndef ChiefMetaPod() -> address:\r\n    return self.chiefmetapod\r\n\r\n@view\r\n@external\r\ndef ChiefDollyFractal() -> address:\r\n    return self.chiefdollyfractal\r\n\r\n@view\r\n@external\r\ndef AirdropAddress() -> address:\r\n    return self.airdropAddress\r\n\r\n@view\r\n@external\r\ndef NFTFaucet() -> address:\r\n    return self.nft_faucet\r\n\r\n@view\r\n@external\r\ndef MarketingFaucet() -> address:\r\n    return self.marketing_faucet\r\n\r\n@view\r\n@external\r\ndef devFaucet() -> address:\r\n    return self.dev_faucet\r\n\r\n@view\r\n@external\r\ndef MantisFaucet() -> address:\r\n    return self.mantisfaucet\r\n\r\n@view\r\n@external\r\ndef StaticVault() -> address:\r\n    return self.static_vault\r\n\r\n@view\r\n@external\r\ndef ElasticVault() -> address:\r\n    return self.elastic_vault\r\n\r\n@view\r\n@external\r\ndef DEXVault() -> address:\r\n    return self.dex_vault\r\n\r\n@view\r\n@external\r\ndef DEXFund() -> address:\r\n    return self.dex_fund\r\n\r\n@view\r\n@external\r\ndef AddyRef(_tag: uint256) -> address:\r\n    return self.addy_ref[_tag]\r\n\r\n@view\r\n@external\r\ndef Assets(_ticker: String[10]) -> address:\r\n    return self.assets[_ticker]\r\n\r\n@view\r\n@external\r\ndef Blacklist(_address: address) -> bool:\r\n    return self.blacklist[_address]\r\n\r\n@view\r\n@external\r\ndef ClonerCheck(_address: address) -> bool:\r\n    return self.cloner[_address]","ABI":"[{\"outputs\":[],\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"name\":\"setAnnouncement\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"string\",\"name\":\"_message\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":637240},{\"name\":\"setKingAsset\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37104},{\"name\":\"setValueAsset\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37134},{\"name\":\"setChiefMetapod\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37164},{\"name\":\"setChiefDollyFractal\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37194},{\"name\":\"setAirdropAddress\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37224},{\"name\":\"setMantisFaucet\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37254},{\"name\":\"setNFTfaucet\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37284},{\"name\":\"setMarketingFaucet\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37314},{\"name\":\"setdevFaucet\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37344},{\"name\":\"setDEFILABS\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37374},{\"name\":\"setDEFILABScommunity\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37404},{\"name\":\"setStaticVault\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37434},{\"name\":\"setElasticVault\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37464},{\"name\":\"setExchangeVault\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37494},{\"name\":\"setDEXVault\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37524},{\"name\":\"setDEXfund\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37554},{\"name\":\"setAddyRef\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"uint256\",\"name\":\"_tag\"},{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37699},{\"name\":\"ToggleBlacklist\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":38685},{\"name\":\"setAssets\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"string\",\"name\":\"_ticker\"},{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37941},{\"name\":\"ToggleCloner\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":38745},{\"name\":\"DEFILABS\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1691},{\"name\":\"DEFILABS_COMMUNITY\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1721},{\"name\":\"Announcements\",\"outputs\":[{\"type\":\"string\",\"name\":\"\"}],\"inputs\":[{\"type\":\"uint256\",\"name\":\"_number\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":21947},{\"name\":\"KingAsset\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1781},{\"name\":\"ValueAsset\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1811},{\"name\":\"ChiefMetaPod\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1841},{\"name\":\"ChiefDollyFractal\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1871},{\"name\":\"AirdropAddress\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1901},{\"name\":\"NFTFaucet\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1931},{\"name\":\"MarketingFaucet\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1961},{\"name\":\"devFaucet\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1991},{\"name\":\"MantisFaucet\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":2021},{\"name\":\"StaticVault\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":2051},{\"name\":\"ElasticVault\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":2081},{\"name\":\"DEXVault\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":2111},{\"name\":\"DEXFund\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":2141},{\"name\":\"AddyRef\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[{\"type\":\"uint256\",\"name\":\"_tag\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":2286},{\"name\":\"Assets\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[{\"type\":\"string\",\"name\":\"_ticker\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":2498},{\"name\":\"Blacklist\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":2446},{\"name\":\"ClonerCheck\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":2476},{\"name\":\"announcementsCount\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":2291}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.8","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}