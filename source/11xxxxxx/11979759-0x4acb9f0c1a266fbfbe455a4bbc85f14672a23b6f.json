{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/interfaces/oracleInterface.sol\r\n\r\npragma solidity 0.6.12;\r\n\r\n/**\r\n * @title BiFi's oracle interface\r\n * @author BiFi(seinmyung25, Miller-kk, tlatkdgus1, dongchangYoo)\r\n */\r\ninterface oracleInterface {\r\n    function latestAnswer() external view returns (int256);\r\n}\r\n\r\n// File: contracts/SafeMath.sol\r\n\r\npragma solidity ^0.6.12;\r\n\r\n// from: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\r\n// Subject to the MIT license.\r\n\r\n/**\r\n * @title BiFi's safe-math Contract\r\n * @author BiFi(seinmyung25, Miller-kk, tlatkdgus1, dongchangYoo)\r\n */\r\nlibrary SafeMath {\r\n  uint256 internal constant unifiedPoint = 10 ** 18;\r\n\t/******************** Safe Math********************/\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a + b;\r\n\t\trequire(c >= a, \"a\");\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\treturn _sub(a, b, \"s\");\r\n\t}\r\n\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\treturn _mul(a, b);\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\treturn _div(a, b, \"d\");\r\n\t}\r\n\r\n\tfunction _sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256)\r\n\t{\r\n\t\trequire(b <= a, errorMessage);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction _mul(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tif (a == 0)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tuint256 c = a* b;\r\n\t\trequire((c / a) == b, \"m\");\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction _div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256)\r\n\t{\r\n\t\trequire(b > 0, errorMessage);\r\n\t\treturn a / b;\r\n\t}\r\n\r\n\tfunction unifiedDiv(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\treturn _div(_mul(a, unifiedPoint), b, \"d\");\r\n\t}\r\n\r\n\tfunction unifiedMul(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\treturn _div(_mul(a, b), unifiedPoint, \"m\");\r\n\t}\r\n}\r\n\r\n// File: contracts/observer/observer.sol\r\n\r\npragma solidity 0.6.12;\r\n\r\n/**\r\n * @title Bifi's observer contract\r\n * @notice Implement business logic and manage handlers\r\n * @author BiFi(seinmyung25, Miller-kk, tlatkdgus1, dongchangYoo)\r\n */\r\ncontract Observer {\r\n\tusing SafeMath for uint256;\r\n\r\n\taddress payable public owner;\r\n\tmapping(address => bool) operators;\r\n\tbool public emergency = false;\r\n\r\n\tChainInfo[] interchains;\r\n\r\n\tstruct ChainInfo {\r\n\t\tuint256 chainDeposit;\r\n\t\tuint256 chainBorrow;\r\n\t\tuint256 globalRewardPerBlocks;\r\n\r\n\t\tuint256 weight;\r\n\t\tuint256 alphaRate;\r\n\r\n\t\taddress priceOracleAddr;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner, \"onlyOwner\");\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyOperators {\r\n\t\taddress payable sender = msg.sender;\r\n\t\trequire(operators[sender] || sender == owner, \"onlyOperators\");\r\n\t\t_;\r\n\t}\r\n\r\n\tconstructor() public {\r\n\t\taddress payable sender = msg.sender;\r\n\t\towner = sender;\r\n\t\toperators[sender] = true;\r\n\t}\r\n\r\n\tfunction ownershipTransfer(address payable _owner) onlyOwner external returns (bool) {\r\n\t\towner = _owner;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setOperator(address payable addr, bool flag) onlyOwner external returns (bool) {\r\n\t\toperators[addr] = flag;\r\n\t\treturn flag;\r\n\t}\r\n\r\n\tfunction getAlphaBaseAsset() external view returns (uint256[] memory) {\r\n\t\tChainInfo[] memory chains = interchains;\r\n\t\tuint256[] memory alphBaseAsset = new uint256[](chains.length);\r\n\t\tfor(uint256 i = 0; i < chains.length; i++) {\r\n\t\t\tChainInfo memory chain = chains[i];\r\n\t\t\talphBaseAsset[i] = chain.chainDeposit\r\n\t\t\t.unifiedMul( chain.alphaRate )\r\n\t\t\t.add(\r\n\t\t\t\tSafeMath.unifiedPoint\r\n\t\t\t\t.sub( chain.alphaRate )\r\n\t\t\t\t.unifiedMul( chain.chainBorrow )\r\n\t\t\t)\r\n\t\t\t.unifiedMul( uint256( oracleInterface(chain.priceOracleAddr).latestAnswer() ) )\r\n\t\t\t.unifiedMul( chain.weight );\r\n\t\t}\r\n\t\treturn alphBaseAsset;\r\n\t}\r\n\r\n\tfunction updateChainMarketInfo(uint256 _idx, uint256 chainDeposit, uint256 chainBorrow) external onlyOperators returns (bool) {\r\n\t\tChainInfo memory chain = interchains[_idx];\r\n\r\n\t\tchain.chainDeposit = chainDeposit;\r\n\t\tchain.chainBorrow = chainBorrow;\r\n\r\n\t\tinterchains[_idx] = chain;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction newChainInfo(\r\n\t\tuint256 chainDeposit,\r\n\t\tuint256 chainBorrow,\r\n\r\n\t\tuint256 weight,\r\n\t\tuint256 alphaRate,\r\n\r\n\t\taddress priceOracleAddr\r\n\t) external onlyOperators returns (bool) {\r\n\t\tChainInfo memory chain;\r\n\t\tchain.chainDeposit = chainDeposit;\r\n\t\tchain.chainBorrow = chainBorrow;\r\n\r\n\t\tchain.weight = weight;\r\n\t\tchain.alphaRate = alphaRate;\r\n\r\n\t\tchain.priceOracleAddr = priceOracleAddr;\r\n\r\n\t\tinterchains.push(chain);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction updateChainInfo(\r\n\t\tuint256 _idx,\r\n\t\tuint256 chainDeposit,\r\n\t\tuint256 chainBorrow,\r\n\r\n\t\tuint256 weight,\r\n\t\tuint256 alphaRate,\r\n\r\n\t\taddress priceOracleAddr\r\n\t) external onlyOperators returns (bool) {\r\n\t\tChainInfo memory chain = interchains[_idx];\r\n\t\tchain.chainDeposit = chainDeposit;\r\n\t\tchain.chainBorrow = chainBorrow;\r\n\r\n\t\tchain.weight = weight;\r\n\t\tchain.alphaRate = alphaRate;\r\n\r\n\t\tchain.priceOracleAddr = priceOracleAddr;\r\n\r\n\t\tinterchains[_idx] = chain;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getChainLength() external view returns (uint256) {\r\n\t\treturn interchains.length;\r\n\t}\r\n\r\n\tfunction getChainInfo(\r\n\t\tuint256 _idx\r\n\t) external view returns (uint256, uint256, uint256, uint256, uint256, address) {\r\n\r\n\t\tChainInfo memory chain = interchains[_idx];\r\n\r\n\t\treturn (\r\n\t\t\tchain.chainDeposit,\r\n\t\t\tchain.chainBorrow,\r\n\r\n\t\t\tchain.globalRewardPerBlocks,\r\n\r\n\t\t\tchain.weight,\r\n\t\t\tchain.alphaRate,\r\n\r\n\t\t\tchain.priceOracleAddr\r\n\t\t);\r\n\t}\r\n\r\n\tfunction setChainDeposit(uint256 _idx, uint256 deposit) external onlyOperators returns (bool) {\r\n\t\tChainInfo memory chain = interchains[_idx];\r\n\r\n\t\tchain.chainDeposit = deposit;\r\n\r\n\t\tinterchains[_idx] = chain;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setChainBorrow(uint256 _idx, uint256 borrow) external onlyOperators returns (bool) {\r\n\t\tChainInfo memory chain = interchains[_idx];\r\n\r\n\t\tchain.chainBorrow = borrow;\r\n\r\n\t\tinterchains[_idx] = chain;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setChainGlobalRewardPerblock(uint256 _idx, uint256 globalRewardPerBlocks) external onlyOperators returns (bool) {\r\n\t\tChainInfo memory chain = interchains[_idx];\r\n\r\n\t\tchain.globalRewardPerBlocks = globalRewardPerBlocks;\r\n\r\n\t\tinterchains[_idx] = chain;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setChainWeight(uint256 _idx, uint256 weight) external onlyOperators returns (bool) {\r\n\t\tChainInfo memory chain = interchains[_idx];\r\n\r\n\t\tchain.weight = weight;\r\n\r\n\t\tinterchains[_idx] = chain;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setChainAlphaRate(uint256 _idx, uint256 alphaRate) external onlyOperators returns (bool) {\r\n\t\tChainInfo memory chain = interchains[_idx];\r\n\r\n\t\tchain.alphaRate = alphaRate;\r\n\r\n\t\tinterchains[_idx] = chain;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setChainPriceOracleAddr(uint256 _idx, address priceOracleAddr) external onlyOperators returns (bool) {\r\n\t\tChainInfo memory chain = interchains[_idx];\r\n\r\n\t\tchain.priceOracleAddr = priceOracleAddr;\r\n\r\n\t\tinterchains[_idx] = chain;\r\n\t\treturn true;\r\n\t}\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"emergency\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAlphaBaseAsset\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"}],\"name\":\"getChainInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"alphaRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceOracleAddr\",\"type\":\"address\"}],\"name\":\"newChainInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"ownershipTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"alphaRate\",\"type\":\"uint256\"}],\"name\":\"setChainAlphaRate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"}],\"name\":\"setChainBorrow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"name\":\"setChainDeposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"globalRewardPerBlocks\",\"type\":\"uint256\"}],\"name\":\"setChainGlobalRewardPerblock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceOracleAddr\",\"type\":\"address\"}],\"name\":\"setChainPriceOracleAddr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"setChainWeight\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"alphaRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceOracleAddr\",\"type\":\"address\"}],\"name\":\"updateChainInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainBorrow\",\"type\":\"uint256\"}],\"name\":\"updateChainMarketInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Observer","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"BSD-3-Clause","Proxy":"0","Implementation":"","SwarmSource":"ipfs://90c68691530b8ab0611b8cfb4711cabe29e3048524c70892657113a1725f41f7"}]}