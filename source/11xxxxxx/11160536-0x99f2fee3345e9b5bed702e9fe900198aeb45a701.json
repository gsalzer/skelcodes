{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity <=0.6.8;\r\n\r\ninterface IFreeFromUpTo {\r\n    function freeFromUpTo(address from, uint256 value) external returns(uint256 freed);\r\n    function mint(uint number) external;\r\n}\r\n\r\ncontract ChiGasSaver {\r\n\r\n    modifier saveGas(address payable sponsor) {\r\n        uint256 gasStart = gasleft();\r\n        _;\r\n        uint256 gasSpent = 21000 + gasStart - gasleft() + 16 * msg.data.length;\r\n\r\n        IFreeFromUpTo chi = IFreeFromUpTo(0x0000000000004946c0e9F43F4Dee607b0eF1fA1c);\r\n        chi.freeFromUpTo(sponsor, (gasSpent + 14154) / 41947);\r\n    }\r\n}\r\n\r\ninterface IDrainController {\r\n    function updatePrice() external;\r\n}\r\n\r\ncontract DrainMaster is ChiGasSaver {\r\n    \r\n    IDrainController constant drainController = IDrainController(0x2e813f2e524dB699d279E631B0F2117856eb902C);\r\n\r\n    function drain(uint8[] calldata _pools)\r\n    external\r\n    saveGas(msg.sender) {\r\n        drainController.updatePrice();\r\n        for (uint8 i = 0; i < _pools.length; i++) {\r\n            0xD12d68Fd52b54908547ebC2Cd77Ec6EbbEfd3099.call(\r\n            abi.encodeWithSelector(\r\n                bytes4(\r\n                    keccak256(\"drain(uint256)\")), _pools[i]));\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint8[]\",\"name\":\"_pools\",\"type\":\"uint8[]\"}],\"name\":\"drain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DrainMaster","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://293aef7c4703806b72a6f00162594ff9222e09fd78dcefd575af6fa7899e64eb"}]}