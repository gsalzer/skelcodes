{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.13;\r\n\r\ninterface IERC20Dai {\r\n      function transferFrom(address owner, address spender, uint256 amount) external returns (bool);\r\n      function allowance(address owner, address spender) external view returns (uint256);\r\n      function permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s) external;\r\n}\r\n\r\ninterface IAlternateReceiverBridge {\r\n    function relayTokens(address _sender, address _receiver, uint256 _amount) external;\r\n    function withinLimit(uint256 _amount) external view returns (bool);\r\n}\r\n\r\ninterface IRCProxyXdai {}\r\n\r\ncontract TestRCProxyMainnet \r\n{\r\n    \r\n    IERC20Dai public dai;\r\n    IAlternateReceiverBridge public alternateReceiverBridge;\r\n    IRCProxyXdai public proxyXdai;\r\n    \r\n    uint256 internal depositNonce;\r\n    \r\n    event DaiDeposited(address indexed user, uint256 amount, uint256 nonce);\r\n    \r\n    constructor() public {\r\n        alternateReceiverBridge = IAlternateReceiverBridge(0x4aa42145Aa6Ebf72e164C9bBC74fbD3788045016);\r\n        proxyXdai = IRCProxyXdai(0x558891E5ff96639a1934A39A780e063973C149D5);\r\n        dai = IERC20Dai(0x6B175474E89094C44Da98b954EedeAC495271d0F);\r\n    }\r\n    \r\n    function depositDai(uint256 _amount) external {\r\n        _depositDai(_amount, msg.sender); \r\n    }\r\n\r\n    function _depositDai(uint256 _amount, address _sender) internal {\r\n        require(dai.transferFrom(_sender, address(this), _amount), \"Token transfer failed\");\r\n        alternateReceiverBridge.relayTokens(address(this), address(proxyXdai), _amount);\r\n        emit DaiDeposited(_sender, _amount, depositNonce++);\r\n    }\r\n    \r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"DaiDeposited\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"alternateReceiverBridge\",\"outputs\":[{\"internalType\":\"contract IAlternateReceiverBridge\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract IERC20Dai\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositDai\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proxyXdai\",\"outputs\":[{\"internalType\":\"contract IRCProxyXdai\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TestRCProxyMainnet","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://684639f23c6bacff172871bae7582c7816bbb337e29873fa326c1e7befc7a9af"}]}