{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts\\core\\nameVerifiers\\IIdeaTokenNameVerifier.sol\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.6.9;\r\n\r\n/**\r\n * @title IIdeaTokenNameVerifier\r\n * @author Alexander Schlindwein\r\n *\r\n * Interface for token name verifiers\r\n */\r\ninterface IIdeaTokenNameVerifier {\r\n    function verifyTokenName(string calldata name) external pure returns (bool);\r\n}\r\n\r\n// File: contracts\\core\\nameVerifiers\\SubstackNameVerifier.sol\r\n\r\n\r\n\r\n/**\r\n * @title SubstackNameVerifier\r\n * @author Alexander Schlindwein\r\n *\r\n * Verifies a string to be a substack name: <the name>.substack.com.\r\n * Allowed characters are a-z (lowercase), 0-9 and - (dash) excluding at the beginning and end.\r\n * Maximum length 63.\r\n */\r\ncontract SubstackNameVerifier is IIdeaTokenNameVerifier {\r\n    /**\r\n     * Verifies whether a string matches the required format\r\n     *\r\n     * @param name The input string (Substack name)\r\n     *\r\n     * @return Bool; True=matches, False=does not match\r\n     */\r\n    function verifyTokenName(string calldata name) external pure override returns (bool) {\r\n        bytes memory b = bytes(name);\r\n        if(b.length == 0 || b.length > 63) {\r\n            return false;\r\n        }\r\n\r\n        bytes1 firstChar = b[0];\r\n        bytes1 lastChar = b[b.length - 1];\r\n\r\n        if(firstChar == 0x2D || lastChar == 0x2D) { // -\r\n            return false;\r\n        }\r\n\r\n        for(uint i = 0; i < b.length; i++) {\r\n            bytes1 char = b[i];\r\n            if (!(char >= 0x61 && char <= 0x7A) && // a-z\r\n                !(char >= 0x30 && char <= 0x39) && // 0-9\r\n                char != 0x2D\r\n                ) { \r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"verifyTokenName\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"SubstackNameVerifier","CompilerVersion":"v0.6.9+commit.3e3065ac","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://9b28f4eab72b6a34329b2d791c240b176e7cf4f3537e44d99e8bd4d97ba426cd"}]}