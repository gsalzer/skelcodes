{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: AGPLv3\r\npragma solidity =0.6.12;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface Dai {\r\n    function pull(address usr, uint256 wad) external;\r\n\r\n    function approve(address usr, uint256 wad) external returns (bool);\r\n\r\n    function permit(\r\n        address holder,\r\n        address spender,\r\n        uint256 nonce,\r\n        uint256 expiry,\r\n        bool allowed,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n}\r\n\r\ninterface Vault {\r\n    function token() external view returns (address);\r\n\r\n    function deposit(uint256 amount, address recipient)\r\n        external\r\n        returns (uint256);\r\n}\r\n\r\ncontract DaiVaultPermitDeposit {\r\n    Vault public vault;\r\n    Dai public dai;\r\n    address constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\r\n\r\n    struct Permit {\r\n        address holder;\r\n        address spender;\r\n        uint256 nonce;\r\n        uint256 expiry;\r\n        bool allowed;\r\n        uint8 v;\r\n        bytes32 r;\r\n        bytes32 s;\r\n    }\r\n\r\n    constructor(address _vault) public {\r\n        vault = Vault(_vault);\r\n        dai = Dai(vault.token());\r\n        require(address(dai) == DAI); // dev: wrong vault\r\n        dai.approve(address(vault), type(uint256).max);\r\n    }\r\n\r\n    function deposit(uint256 amount, Permit calldata permit)\r\n        public\r\n        returns (uint256)\r\n    {\r\n        dai.permit(\r\n            permit.holder,\r\n            permit.spender,\r\n            permit.nonce,\r\n            permit.expiry,\r\n            permit.allowed,\r\n            permit.v,\r\n            permit.r,\r\n            permit.s\r\n        );\r\n        dai.pull(permit.holder, amount);\r\n        return vault.deposit(amount, permit.holder);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract Dai\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct DaiVaultPermitDeposit.Permit\",\"name\":\"permit\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract Vault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"DaiVaultPermitDeposit","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000bfa4d8aa6d8a379abfe7793399d3ddacc5bbecbb","EVMVersion":"Default","Library":"","LicenseType":"Unknown","Proxy":"0","Implementation":"","SwarmSource":"ipfs://9c25a8d08ac479019a30662cfd40bb546d0f70d9bade425fc79e89b338e3f997"}]}