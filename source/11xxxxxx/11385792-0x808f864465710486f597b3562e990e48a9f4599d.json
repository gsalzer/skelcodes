{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n\tCorionX token locker contract\r\n\tcorionLocker.sol\r\n\tv0.1.1\r\n\tAuthor: Andor 'iFA' Rajci - https://www.fusionsolutions.io\r\n*/\r\npragma solidity 0.4.26;\r\n/* Imports */\r\n\r\n/* Libraries */\r\nlibrary SafeMath {\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tif ( a == 0 || b == 0 ) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tuint256 c = a * b;\r\n\t\tassert(c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a / b;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\n/* Contracts */\r\ncontract ERC20Interface {\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool) {}\r\n\tfunction balanceOf(address _owner) public view returns (uint256) {}\r\n}\r\ncontract CorionLocker {\r\n\t/* Libraries */\r\n\tusing SafeMath for uint256;\r\n\t\r\n\t/* Structures */\r\n\t\r\n\t/* Variables */\r\n\tERC20Interface public constant CORION      = ERC20Interface(0x26a604DFFE3ddaB3BEE816097F81d3C4a2A4CF97);\r\n\tuint8                 constant BLOCK_DELAY = 14;\r\n\tuint32         public constant PART_DELAY  = uint32( uint256(60).mul(10).div(BLOCK_DELAY) );\r\n\taddress        public          owner;\r\n\tstring         public          name;\r\n\tuint256        public          totalAmount;\r\n\tuint256        public          amountPaid;\r\n\tuint256        public          partAmount;\r\n\tuint32         public          startBlock;\r\n\tuint8          public          parts;\r\n\t\r\n\t/* Connstructor */\r\n\tconstructor(address _owner, uint8 _parts, string _name) {\r\n\t\trequire( _owner != 0x00 && _parts != 0 );\r\n\t\towner = _owner;\r\n\t\tname = _name;\r\n\t\tparts = _parts;\r\n\t}\r\n\t\r\n\t/* Modifiers */\r\n\tmodifier forOwner { require(msg.sender == owner); _; }\r\n\tmodifier beforeInitialization { require( startBlock == 0); _; }\r\n\tmodifier afterInitialization { require( startBlock > 0); _; }\r\n\t\r\n\t/* Fallback */\r\n\t\r\n\t/* Externals */\r\n\tfunction init() forOwner beforeInitialization external {\r\n\t\tstartBlock = uint32(block.number);\r\n\t\ttotalAmount = CORION.balanceOf(address(this));\r\n\t\tpartAmount = totalAmount.div( uint256(parts) );\r\n\t\trequire( totalAmount > 0 );\r\n\t}\r\n\tfunction withdraw() forOwner afterInitialization external {\r\n\t\tuint256 payAmount = this.calculateAmount();\r\n\t\trequire( payAmount > 0 );\r\n\t\tbool success = CORION.transfer(owner, payAmount);\r\n\t\trequire( success );\r\n\t\temit Paid(payAmount);\r\n\t\tamountPaid = amountPaid.add(payAmount);\r\n\t}\r\n\t\r\n\t/* Constants */\r\n\tfunction calculateAmount() constant returns (uint256 amount) {\r\n\t\tamount = _calculateAmount();\r\n\t\tif ( amount == 0 || amount == amountPaid ) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn amount.sub(amountPaid);\r\n\t}\r\n\t\r\n\t/* Internals */\r\n\tfunction _calculateAmount() internal view returns (uint256 amount) {\r\n\t\tif ( startBlock == 0 ) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tuint256 partsToPay = uint256(block.number - startBlock).div(PART_DELAY);\r\n\t\tif ( partsToPay >= parts ) {\r\n\t\t\treturn totalAmount;\r\n\t\t}\r\n\t\telse if ( partsToPay == 0 ) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn partsToPay.mul(partAmount);\r\n\t}\r\n\t\r\n\t/* Privates */\r\n\t\r\n\t/* Events */\r\n\tevent Paid(uint256 amount);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountPaid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"partAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"calculateAmount\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PART_DELAY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CORION\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_parts\",\"type\":\"uint8\"},{\"name\":\"_name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Paid\",\"type\":\"event\"}]","ContractName":"CorionLocker","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000007c38d741d513d9af2c5b735942545356ab2501230000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000045465737400000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://ff827ca04d8cbb5ebf3fe0665ee8d398856a9134c176a7b490eb8fb1b87b4d7d"}]}