{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.22 <0.7.0;\r\n\r\n/**\r\n * @title Morotz - the third time is the charm!\r\n */\r\ncontract Morotz {\r\n\r\n    uint public pot;\r\n    address public winner;\r\n    address[] participants;\r\n    \r\n    receive() external payable {\r\n        require(msg.value == 0.05 ether, 'Send 0.05 ETH to participate.');\r\n        \r\n        participants.push(msg.sender);\r\n        pot += msg.value;\r\n        \r\n        if(participants.length >= 3) {\r\n            pickWinnerAndPayout();\r\n        }\r\n    }\r\n    \r\n    function pickWinnerAndPayout() private {\r\n        uint winnerIndex = getWinnerIndex();\r\n        winner = participants[winnerIndex];\r\n        bool payOutSuccess = payable(winner).send(pot);\r\n        \r\n        if(payOutSuccess) {\r\n            pot = 0;\r\n            delete participants;\r\n        }\r\n   }\r\n   \r\n   function getWinnerIndex() private view returns (uint) {\r\n        uint no = uint(keccak256(abi.encodePacked(blockhash(block.number - 1))));\r\n        return no % participants.length;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"name\":\"pot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Morotz","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://cfea0096b33710b3113f545a0d5f32b99861bcc8ac34195bd59307722de697c7"}]}