{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.2.7\r\nfrom vyper.interfaces import ERC20\r\n\r\ninterface Vault:\r\n    def withdraw(amount: uint256): nonpayable\r\n    def token() -> (address): view\r\n\r\n\r\ninterface Curve:\r\n    def remove_liquidity_one_coin(_token_amount: uint256, i: int128, min_uamount: uint256): nonpayable\r\n\r\n\r\n@external\r\ndef zap_out(vault: address, swap: address, coin: int128):\r\n    token: address = Vault(vault).token()\r\n    Vault(vault).withdraw(ERC20(vault).balanceOf(self))\r\n    withdraw: uint256 = ERC20(token).balanceOf(self)\r\n    ERC20(token).approve(swap, withdraw)\r\n    Curve(swap).remove_liquidity_one_coin(withdraw, coin, 0)","ABI":"[{\"name\":\"zap_out\",\"outputs\":[],\"inputs\":[{\"type\":\"address\",\"name\":\"vault\"},{\"type\":\"address\",\"name\":\"swap\"},{\"type\":\"int128\",\"name\":\"coin\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":5898}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.7","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":""}]}