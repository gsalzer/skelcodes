{"status":"1","message":"OK","result":[{"SourceCode":"\npragma solidity >=0.5.10;\n\nlibrary SafeMath {\n  function add(uint a, uint b) internal pure returns (uint c) {\n    c = a + b;\n    require(c >= a);\n  }\n  function sub(uint a, uint b) internal pure returns (uint c) {\n    require(b <= a);\n    c = a - b;\n  }\n  function mul(uint a, uint b) internal pure returns (uint c) {\n    c = a * b;\n    require(a == 0 || c / a == b);\n  }\n  function div(uint a, uint b) internal pure returns (uint c) {\n    require(b > 0);\n    c = a / b;\n  }\n}\n\ncontract ERC20Interface {\n  function totalSupply() public view returns (uint);\n  function balanceOf(address tokenOwner) public view returns (uint balance);\n  function allowance(address tokenOwner, address spender) public view returns (uint remaining);\n  function transfer(address to, uint tokens) public returns (bool success);\n  function approve(address spender, uint tokens) public returns (bool success);\n  function transferFrom(address from, address to, uint tokens) public returns (bool success);\n\n  event Transfer(address indexed from, address indexed to, uint tokens);\n  event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n}\n\ncontract ApproveAndCallFallBack {\n  function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\n}\n\ncontract Owned {\n  address public owner;\n  address public newOwner;\n\n  event OwnershipTransferred(address indexed _from, address indexed _to);\n\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  modifier onlyOwner {\n    require(msg.sender == owner);\n    _;\n  }\n\n  function transferOwnership(address _newOwner) public onlyOwner {\n    newOwner = _newOwner;\n  }\n  function acceptOwnership() public {\n    require(msg.sender == newOwner);\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n    newOwner = address(0);\n  }\n}\n\ncontract TokenERC20 is ERC20Interface, Owned{\n  using SafeMath for uint;\n\n  string public symbol;\n  string public name;\n  uint8 public decimals;\n  uint _totalSupply;\n\n  mapping(address => uint) balances;\n  mapping(address => mapping(address => uint)) allowed;\n\n  constructor() public {\n    symbol = \"KNIFE\";\n    name = \"KnifeSwap\";\n    decimals = 8;\n    _totalSupply = 3*10**4 * 10**uint(decimals);\n    balances[owner] = _totalSupply;\n    emit Transfer(address(0), owner, _totalSupply);\n  }\n\n  function totalSupply() public view returns (uint) {\n    return _totalSupply.sub(balances[address(0)]);\n  }\n  function balanceOf(address tokenOwner) public view returns (uint balance) {\n      return balances[tokenOwner];\n  }\n  function transfer(address to, uint tokens) public returns (bool success) {\n    balances[msg.sender] = balances[msg.sender].sub(tokens);\n    balances[to] = balances[to].add(tokens);\n    emit Transfer(msg.sender, to, tokens);\n    return true;\n  }\n  function approve(address spender, uint tokens) public returns (bool success) {\n    allowed[msg.sender][spender] = tokens;\n    emit Approval(msg.sender, spender, tokens);\n    return true;\n  }\n  function transferFrom(address from, address to, uint tokens) public returns (bool success) {\n    balances[from] = balances[from].sub(tokens);\n    allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n    balances[to] = balances[to].add(tokens);\n    emit Transfer(from, to, tokens);\n    return true;\n  }\n  function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\n    return allowed[tokenOwner][spender];\n  }\n  function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\n    allowed[msg.sender][spender] = tokens;\n    emit Approval(msg.sender, spender, tokens);\n    ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n    return true;\n  }\n  function () external payable {\n    revert();\n  }\n}\n\ncontract KNIFESWAP_V2 is TokenERC20 {\n\n  \n  uint256 public aSBlock; \n  uint256 public aEBlock; \n  uint256 public aCap; \n  uint256 public aTot; \n  uint256 public aAmt; \n\n \n  uint256 public sSBlock; \n  uint256 public sEBlock; \n  uint256 public sCap; \n  uint256 public sTot; \n  uint256 public sChunk; \n  uint256 public sPrice; \n\n  function getAirdrop(address _refer) public returns (bool success){\n    require(aSBlock <= block.number && block.number <= aEBlock);\n    require(aTot < aCap || aCap == 0);\n    aTot ++;\n    if(msg.sender != _refer && balanceOf(_refer) != 0 && _refer != 0x0000000000000000000000000000000000000000){\n    balances[address(this)] = balances[address(this)].sub(aAmt * 4 / 10);\n      balances[_refer] = balances[_refer].add(aAmt * 4 / 10);\n      emit Transfer(address(this), _refer, aAmt * 4 / 10);\n    }\n    balances[address(this)] = balances[address(this)].sub(aAmt);\n    balances[msg.sender] = balances[msg.sender].add(aAmt);\n    emit Transfer(address(this), msg.sender, aAmt);\n    return true;\n  }\n\n  function tokenSale(address _refer) public payable returns (bool success){\n    require(sSBlock <= block.number && block.number <= sEBlock);\n    require(sTot < sCap || sCap == 0);\n    uint256 _eth = msg.value;\n    uint256 _tkns;\n    if(sChunk != 0) {\n      uint256 _price = _eth / sPrice;\n      _tkns = sChunk * _price;\n    }\n    else {\n      _tkns = _eth / sPrice;\n    }\n    sTot ++;\n    if(msg.sender != _refer && balanceOf(_refer) != 0 && _refer != 0x0000000000000000000000000000000000000000){\n      balances[address(this)] = balances[address(this)].sub(_tkns / 4);\n      balances[_refer] = balances[_refer].add(_tkns / 4);\n      emit Transfer(address(this), _refer, _tkns / 4);\n    }\n    balances[address(this)] = balances[address(this)].sub(_tkns);\n    balances[msg.sender] = balances[msg.sender].add(_tkns);\n    emit Transfer(address(this), msg.sender, _tkns);\n    return true;\n  }\n\n  function viewAirdrop() public view returns(uint256 StartBlock, uint256 EndBlock, uint256 DropCap, uint256 DropCount, uint256 DropAmount){\n    return(aSBlock, aEBlock, aCap, aTot, aAmt);\n  }\n  function viewSale() public view returns(uint256 StartBlock, uint256 EndBlock, uint256 SaleCap, uint256 SaleCount, uint256 ChunkSize, uint256 SalePrice){\n    return(sSBlock, sEBlock, sCap, sTot, sChunk, sPrice);\n  }\n  \n  function startAirdrop(uint256 _aSBlock, uint256 _aEBlock, uint256 _aAmt, uint256 _aCap) public onlyOwner() {\n    aSBlock = _aSBlock;\n    aEBlock = _aEBlock;\n    aAmt = _aAmt;\n    aCap = _aCap;\n    aTot = 0;\n  }\n  function startSale(uint256 _sSBlock, uint256 _sEBlock, uint256 _sChunk, uint256 _sPrice, uint256 _sCap) public onlyOwner() {\n    sSBlock = _sSBlock;\n    sEBlock = _sEBlock;\n    sChunk = _sChunk;\n    sPrice =_sPrice;\n    sCap = _sCap;\n    sTot = 0;\n  }\n  function clearETH() public onlyOwner() {\n    address payable _owner = msg.sender;\n    _owner.transfer(address(this).balance);\n  }\n  function() external payable {\n\n  }\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_refer\",\"type\":\"address\"}],\"name\":\"getAirdrop\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"aSBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sSBlock\",\"type\":\"uint256\"},{\"name\":\"_sEBlock\",\"type\":\"uint256\"},{\"name\":\"_sChunk\",\"type\":\"uint256\"},{\"name\":\"_sPrice\",\"type\":\"uint256\"},{\"name\":\"_sCap\",\"type\":\"uint256\"}],\"name\":\"startSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"viewSale\",\"outputs\":[{\"name\":\"StartBlock\",\"type\":\"uint256\"},{\"name\":\"EndBlock\",\"type\":\"uint256\"},{\"name\":\"SaleCap\",\"type\":\"uint256\"},{\"name\":\"SaleCount\",\"type\":\"uint256\"},{\"name\":\"ChunkSize\",\"type\":\"uint256\"},{\"name\":\"SalePrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"aTot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_refer\",\"type\":\"address\"}],\"name\":\"tokenSale\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_aSBlock\",\"type\":\"uint256\"},{\"name\":\"_aEBlock\",\"type\":\"uint256\"},{\"name\":\"_aAmt\",\"type\":\"uint256\"},{\"name\":\"_aCap\",\"type\":\"uint256\"}],\"name\":\"startAirdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sTot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sSBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sChunk\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"aEBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"aCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sEBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"viewAirdrop\",\"outputs\":[{\"name\":\"StartBlock\",\"type\":\"uint256\"},{\"name\":\"EndBlock\",\"type\":\"uint256\"},{\"name\":\"DropCap\",\"type\":\"uint256\"},{\"name\":\"DropCount\",\"type\":\"uint256\"},{\"name\":\"DropAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"aAmt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"KNIFESWAP_V2","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}