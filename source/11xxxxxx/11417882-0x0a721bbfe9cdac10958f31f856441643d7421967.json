{"status":"1","message":"OK","result":[{"SourceCode":"{\"iETH.sol\":{\"content\":\"pragma solidity \\u003e=0.4.21 \\u003c0.7.0;\\n\\nimport \\\"./Ownable.sol\\\";\\n\\ncontract iETH is Ownable {\\n    mapping(address =\\u003e bool) private whiteList;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    constructor () public {\\n        _name = \\\"internal transfer ETH\\\";\\n        _symbol = \\\"iETH\\\";\\n        _decimals = 18;\\n        whiteList[msg.sender] = true;\\n    }\\n\\n    function name() public view returns (string memory) {\\n        return _name;\\n    }\\n\\n    function symbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    function decimals() public view returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    function balanceOf(address account) public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function transfer(address payable recipient, uint256 amount) public returns (bool) {\\n        require(whiteList[msg.sender], \\\"iETH: only white list address can call\\\");\\n        require(address(this).balance \\u003e= amount, \\\"iETH: transfer amount exceeds balance\\\");\\n        recipient.transfer(amount);\\n        return true;\\n    }\\n\\n    function isWhiteList(address user) public view returns (bool) {\\n        return whiteList[user];\\n    }\\n\\n    function addWhiteList(address user) public onlyOwner {\\n        whiteList[user] = true;\\n    }\\n\\n    function removeWhiteList(address user) public onlyOwner {\\n        whiteList[user] = false;\\n    }\\n\\n    function () payable external { }\\n}\\n\"},\"Ownable.sol\":{\"content\":\"pragma solidity \\u003e=0.4.21 \\u003c0.7.0;\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\n */\\ncontract Ownable {\\n    address private _owner;\\n\\n    /**\\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n      * account.\\n      */\\n    constructor() public {\\n        _owner = msg.sender;\\n    }\\n\\n    /**\\n      * @dev Throws if called by any account other than the owner.\\n      */\\n    modifier onlyOwner() {\\n        require(msg.sender == _owner, \\\"Ownable: only owner can call\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the token.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n    * @param newOwner The address to transfer ownership to.\\n    */\\n    function transferOwnership(address newOwner) public onlyOwner returns (bool) {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _owner = newOwner;\\n        return true;\\n    }\\n}\"}}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addWhiteList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isWhiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"iETH","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"istanbul","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://16b120877af5391644376a54f102933c60dd90f3f11d4a1c0bb8df40743fbafa"}]}