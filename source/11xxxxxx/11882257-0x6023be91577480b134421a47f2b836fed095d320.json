{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts\\fixed-inflation\\util\\DFOHub.sol\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.7.6;\r\n\r\ninterface IDoubleProxy {\r\n    function proxy() external view returns (address);\r\n}\r\n\r\ninterface IMVDProxy {\r\n    function getMVDFunctionalitiesManagerAddress() external view returns(address);\r\n    function getMVDWalletAddress() external view returns (address);\r\n    function getStateHolderAddress() external view returns(address);\r\n    function submit(string calldata codeName, bytes calldata data) external payable returns(bytes memory returnData);\r\n}\r\n\r\ninterface IMVDFunctionalitiesManager {\r\n    function getFunctionalityData(string calldata codeName) external view returns(address, uint256, string memory, address, uint256);\r\n    function isAuthorizedFunctionality(address functionality) external view returns(bool);\r\n}\r\n\r\ninterface IStateHolder {\r\n    function getUint256(string calldata name) external view returns(uint256);\r\n    function getAddress(string calldata name) external view returns(address);\r\n    function clear(string calldata varName) external returns(string memory oldDataType, bytes memory oldVal);\r\n}\r\n\r\n// File: contracts\\fixed-inflation\\dfo\\DFOBasedFixedInflationExtensionFactory.sol\r\n\r\n//SPDX_License_Identifier: MIT\r\npragma solidity ^0.7.6;\r\n\r\n\r\ncontract DFOBasedFixedInflationExtensionFactory {\r\n\r\n    address public doubleProxy;\r\n\r\n    address public model;\r\n\r\n    event ExtensionCloned(address indexed extensionAddress, address indexed sender);\r\n\r\n    constructor(address doubleProxyAddress, address modelAddress) {\r\n        doubleProxy = doubleProxyAddress;\r\n        model = modelAddress;\r\n    }\r\n\r\n    function setDoubleProxy(address doubleProxyAddress) public onlyDFO {\r\n        doubleProxy = doubleProxyAddress;\r\n    }\r\n\r\n    function setModel(address modelAddress) public onlyDFO {\r\n        model = modelAddress;\r\n    }\r\n\r\n    function cloneModel() public returns(address clonedExtension) {\r\n        emit ExtensionCloned(clonedExtension = _clone(model), msg.sender);\r\n    }\r\n\r\n    function _clone(address original) private returns (address copy) {\r\n        assembly {\r\n            mstore(\r\n                0,\r\n                or(\r\n                    0x5880730000000000000000000000000000000000000000803b80938091923cF3,\r\n                    mul(original, 0x1000000000000000000)\r\n                )\r\n            )\r\n            copy := create(0, 0, 32)\r\n            switch extcodesize(copy)\r\n                case 0 {\r\n                    invalid()\r\n                }\r\n        }\r\n    }\r\n\r\n    modifier onlyDFO() {\r\n        require(IMVDFunctionalitiesManager(IMVDProxy(IDoubleProxy(doubleProxy).proxy()).getMVDFunctionalitiesManagerAddress()).isAuthorizedFunctionality(msg.sender), \"Unauthorized.\");\r\n        _;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doubleProxyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"modelAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"extensionAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ExtensionCloned\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cloneModel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clonedExtension\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"doubleProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"model\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doubleProxyAddress\",\"type\":\"address\"}],\"name\":\"setDoubleProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"modelAddress\",\"type\":\"address\"}],\"name\":\"setModel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DFOBasedFixedInflationExtensionFactory","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000f869538e3904778a0cb1ff620c8e83c7df36b94600000000000000000000000038a6d31a878185ee74cfaba08c3878dcc2acd4c6","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ae0859d0ffd9034267dad6e58beb3dceb7d4d318a20c2ceb1103c589d163797a"}]}