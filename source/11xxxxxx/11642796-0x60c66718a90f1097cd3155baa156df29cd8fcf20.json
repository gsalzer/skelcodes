{"status":"1","message":"OK","result":[{"SourceCode":"/*SPDX-License-Identifier: UNLICENSED\" */\r\n//                                      ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄                                 \r\n//                               ▄▄░▓░░░░░░░░░░░░░░░░░░░░░▒▒▄▄                          \r\n//                           ▄▄▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▄                      \r\n//                        ▄▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄▄                  \r\n//                     ▄▒░░░░░░░░░░░░░░░░░░░░░░▀▀▓░░░░░░░░░░░░░░░░░░░░▒▄                \r\n//                   ▄▓░░░░░░░░░░░░░░░░░░░░░▓▀     ▀░░░░░░░░░░░░░░░░░░░░░░              \r\n//                 ▄▓░░░░░░░░░░░░░░░░░░░░░▀          ▀▓░░░░░░░░░░░░░░░░░░░░░            \r\n//                ▒░░░░░░░░░░░░░░░░░░░░▀       ▓▓▄      ▀▓░░░░░░░░░░░░░░░░░░░▄          \r\n//              ▐░░░░░░░░░░░░░░░░░░▀▀       ▄▓▀  ▀▓▄       ▀▀▒░░░░░░░░░░░░░░░░▒         \r\n//             ▐░░░░░░░░░░░░░░░▀         ▄▓▓▀      ▀▓▓▄         ▀▀░░░░░░░░░░░░░▓        \r\n//            ▐░░░░░░░░░▀▀▀          ▄▄▓▓▀            ▀▀▓▄▄           ▀▀░░░░░░░░▓       \r\n//           ▐░░░░░░░░░░        ▄▄▄▓▀▀                    ▀▀▓▓▄▄        ▐▒░░░░░░░▒      \r\n//           ▒░░░░░░░░░░    ▐▓▌▀▀                               ▀▓▓     ▐▒▌▒▒░░░░░░     \r\n//          ▐░░░░░░░░░░░    ▐▒▌              ▄▄▓▓▄▄              ▐▒     ▓▒▒▒▒▒▒░░░░     \r\n//          ▒░░░░░░░░░░░     ▒▌            ▐▓▒▒▒▒▒▒▒▄            ▓▒     ▒▒▒▒▒▒▒▒▒░░     \r\n//          ░░░░░░░░░░░░     ▓▒            ▓▒▒▒▒▒▒▒▒▒            ▌▌    ▐▒▒▒▒▒▒▒▒▒▓▒░    \r\n//         ▐░░░░░░░░░░░░▒    ▐▒            ▐▒▒▒▒▒▒▒▒▀           ▐▒▀    ▓▒▒▒▒▒▒▒▒▒▒▒▓    \r\n//         ▐░░░░░░░░░░░░░     ▓▌             ▒▒▒▒▒▒             ▓▒     ▒▒▒▒▒▒▒▒▒▒▒▒▓    \r\n//          ░░░░░░░░░░░░░▒    ▐▒▄           ▐▒▒▒▒▒▒▄           ▐▒▀    ▓▒▒▒▒▒▒▒▒▒▒▒▒     \r\n//          ▐░░░░░░░░░░░░░▄    ▐▒           ▒▒▒▒▒▒▒▒           ▌▀    ▐▒▒▒▒▒▒▒▒▒▒▒▒▒     \r\n//           ░░░░░░░░░░░░░░     ▀▌         ▓▒▒▒▒▒▒▒▒▓         ▓▌    ▐▒▒▒▒▒▒▒▒▒▒▒▒▒▀     \r\n//           ▐░░░░░░░░░░░░░░     ▀▒▄                         ▓▀     ▓▒▒▒▒▒▒▒▒▒▒▒▒▌      \r\n//            ▀░░░░░░░░░░░░░░▄     ▓▓                      ▄▒▀    ▐▌▒▒▒▒▒▒▒▒▒▒▒▒▒       \r\n//             ▀░░░░░░░░░░░░░░▄     ▀▒▄                  ▄▓▀     ▄▒▒▒▒▒▒▒▒▒▒▒▒▒▒        \r\n//              ▐░░░░░░░░░░░░░░▓      ▀▌▒▄             ▄▓▀      ▓▒▒▒▒▒▒▒▒▒▒▒▒▒▌         \r\n//               ▐░░░░░░░░░░░░░░░░       ▀▌▄▄      ▄▄▓▌▀      ▄▒▒▒▒▒▒▒▒▒▒▒▒▒▒▌          \r\n//                 ▀░░░░░░░░░░░░░░░▒        ▀▓▌▓▓▓▌▀        ▄▒▒▒▒▒▒▒▒▒▒▒▒▒▒▌▀           \r\n//                   ▀░░░░░░░░░░░░░░░▒▄                  ▄▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▌▀             \r\n//                     ▀░░░░░░░░░░░░░░░▒▒▄            ▄▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓\r\n//    ██╗  ██╗ ██████╗ ██╗     ██████╗        ████████╗ ██████╗ ██╗  ██╗███████╗███╗   ██╗\r\n//    ██║  ██║██╔═══██╗██║     ██╔══██╗       ╚══██╔══╝██╔═══██╗██║ ██╔╝██╔════╝████╗  ██║\r\n//    ███████║██║   ██║██║     ██║  ██║          ██║   ██║   ██║█████╔╝ █████╗  ██╔██╗ ██║\r\n//    ██╔══██║██║   ██║██║     ██║  ██║          ██║   ██║   ██║██╔═██╗ ██╔══╝  ██║╚██╗██║\r\n//    ██║  ██║╚██████╔╝███████╗██████╔╝██╗       ██║   ╚██████╔╝██║  ██╗███████╗██║ ╚████║\r\n//    ╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚═════╝ ╚═╝       ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝  ╚═══╝\r\n// Version V3 \r\n// Name: Hold.\r\n// Symbol: HOLD\r\n// Final supply:  1,000 HOLD\r\n// Total supply: 10,000 HOLD\r\n// Decimals: 18\r\n// Creator address: 0x99999076817edc11e531a7072cb14d042203f669───┐\r\n// Airdrop address: 0x9999911372b056df86da952784f70eb16950ee31───┤\r\n// Presale address: 0x999998089a4eb62df112c75429401f87ac503a37───┼─── First owner address. \r\n// Uniswap addWBTC: 0x999990342f2a573c77c913ed4ee5e4786e90fd65───┤    \r\n// Uniswap addWETH: 0x999994faebec897e3be49b081f0765aa9002dd3f───┘\r\n// Discord: https://discord.gg/ud3PAh9j\r\n// Linkedin: https://www.linkedin.com/in/hold-token-296550202/\r\n// Mail: contact@holdtoken.finance\r\n// Medium: https://hold-token.medium.com/\r\n// Reddit: https://www.reddit.com/user/HoldToken\r\n// Telegram: https://t.me/HoldTokenAnnouncements\r\n// Twitter: https://twitter.com/HoldToken\r\n// Website: https://holdtoken.finance\r\n// Description: Hold is a deflationary token incorporating a burn system to create\r\n//              an artificial scarcity. The initial token supply is set at 10,000 HOLD.\r\n//              Once the token burn is finished, there will only be 1,000 HOLD in circulation.\r\n//              9,000 HOLD tokens will be destroyed during its use. This project aims to promote\r\n//              hold over classic trading and speculation. The brave who keep the HOLD token \r\n//              will be rewarded by the system.\r\n\r\npragma solidity ^0.7.4;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address who) external view returns (uint256);\r\n\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n\r\n    function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\r\n        uint256 c = add(a, m);\r\n        uint256 d = sub(c, 1);\r\n        return mul(div(d, m), m);\r\n    }\r\n}\r\n\r\ncontract HOLDv3 is IERC20 {\r\n    using SafeMath for uint256;\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowed;\r\n    address public admin;\r\n    string private constant tokenName = \"Hold.\";\r\n    string private constant tokenSymbol = \"HOLD\";\r\n    uint8 private constant tokenDecimals = 18;\r\n    uint256 _totalSupply = 10000000000000000000000;\r\n    uint256 _minSupply = 1000000000000000000000;\r\n    uint256 public basePercent = 100;\r\n\r\n    constructor() {\r\n        admin = msg.sender;\r\n        _mint(msg.sender, _totalSupply);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return tokenName;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return tokenSymbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return tokenDecimals;\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address owner) public view override returns (uint256) {\r\n        return _balances[owner];\r\n    }\r\n\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowed[owner][spender];\r\n    }\r\n\r\n    function findOnePercent(uint256 value) public view returns (uint256) {\r\n        uint256 roundValue = value.ceil(basePercent);\r\n        uint256 onePercent = roundValue.mul(basePercent).div(10000);\r\n        return onePercent;\r\n    }\r\n\r\n    function transfer(address to, uint256 value)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        if (admin == msg.sender) {\r\n            require(admin == msg.sender);\r\n            require(value <= _balances[msg.sender]);\r\n            uint256 tokensToTransfer;\r\n\r\n            _balances[msg.sender] = _balances[msg.sender].sub(value);\r\n            tokensToTransfer = value;\r\n            _balances[to] = _balances[to].add(tokensToTransfer);\r\n            emit Transfer(msg.sender, to, tokensToTransfer);\r\n        } else {\r\n            require(value <= _balances[msg.sender]);\r\n            require(value <= 10 ether);\r\n            require(to != address(0));\r\n            uint256 tokensToBurn;\r\n            uint256 tokensToTransfer;\r\n\r\n            if (_checkMinSupplyBefore(findOnePercent(value))) {\r\n                tokensToBurn = findOnePercent(value);\r\n                tokensToTransfer = value.sub(tokensToBurn);\r\n                _balances[msg.sender] = _balances[msg.sender].sub(value);\r\n                _balances[to] = _balances[to].add(tokensToTransfer);\r\n                _totalSupply = _totalSupply.sub(tokensToBurn);\r\n                emit Transfer(msg.sender, to, tokensToTransfer);\r\n                emit Transfer(msg.sender, address(0), tokensToBurn);\r\n            } else {\r\n                tokensToTransfer = value;\r\n                _balances[msg.sender] = _balances[msg.sender].sub(value);\r\n                _balances[to] = _balances[to].add(tokensToTransfer);\r\n                emit Transfer(msg.sender, to, tokensToTransfer);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function multiTransfer(address[] memory receivers, uint256[] memory amounts)\r\n        public\r\n    {\r\n        for (uint256 i = 0; i < receivers.length; i++) {\r\n            transfer(receivers[i], amounts[i]);\r\n        }\r\n    }\r\n\r\n    function approve(address spender, uint256 value)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        require(spender != address(0));\r\n        _allowed[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) public override returns (bool) {\r\n        if (admin == from) {\r\n            require(admin == from);\r\n            require(value <= _balances[from]);\r\n            require(value <= _allowed[from][msg.sender]);\r\n            require(to != address(0));\r\n            uint256 tokensToTransfer;\r\n\r\n            _balances[from] = _balances[from].sub(value);\r\n\r\n            tokensToTransfer = value;\r\n            _balances[to] = _balances[to].add(tokensToTransfer);\r\n            emit Transfer(from, to, tokensToTransfer);\r\n        } else {\r\n            require(value <= _balances[from]);\r\n            require(value <= _allowed[from][msg.sender]);\r\n            require(value <= 10 ether);\r\n            require(to != address(0));\r\n            uint256 tokensToBurn;\r\n            uint256 tokensToTransfer;\r\n\r\n            _balances[from] = _balances[from].sub(value);\r\n\r\n            if (_checkMinSupplyBefore(findOnePercent(value))) {\r\n                tokensToBurn = findOnePercent(value);\r\n                tokensToTransfer = value.sub(tokensToBurn);\r\n\r\n                _balances[to] = _balances[to].add(tokensToTransfer);\r\n                _totalSupply = _totalSupply.sub(tokensToBurn);\r\n\r\n                _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(\r\n                    value\r\n                );\r\n                emit Transfer(from, to, tokensToTransfer);\r\n                emit Transfer(from, address(0), tokensToBurn);\r\n            } else {\r\n                tokensToTransfer = value;\r\n                _balances[to] = _balances[to].add(tokensToTransfer);\r\n                emit Transfer(from, to, tokensToTransfer);\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function adminTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) public returns (bool) {\r\n        require(admin == from);\r\n        require(value <= _balances[from]);\r\n        require(value <= _allowed[from][msg.sender]);\r\n        require(to != address(0));\r\n        uint256 tokensToTransfer;\r\n\r\n        _balances[from] = _balances[from].sub(value);\r\n\r\n        tokensToTransfer = value;\r\n        _balances[to] = _balances[to].add(tokensToTransfer);\r\n        emit Transfer(from, to, tokensToTransfer);\r\n\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        require(spender != address(0));\r\n        _allowed[msg.sender][spender] = (\r\n            _allowed[msg.sender][spender].add(addedValue)\r\n        );\r\n        emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        require(spender != address(0));\r\n        _allowed[msg.sender][spender] = (\r\n            _allowed[msg.sender][spender].sub(subtractedValue)\r\n        );\r\n        emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(amount != 0);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    function burn(uint256 amount) external {\r\n        _burn(msg.sender, amount);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(amount != 0);\r\n        require(amount <= _balances[account]);\r\n        require(amount <= 10 ether);\r\n\r\n        if (_checkMinSupplyBefore(amount)) {\r\n            _totalSupply = _totalSupply.sub(amount);\r\n            _balances[account] = _balances[account].sub(amount);\r\n            emit Transfer(account, address(0), amount);\r\n        }\r\n    }\r\n\r\n    function _checkMinSupplyBefore(uint256 amount)\r\n        internal\r\n        view\r\n        returns (bool)\r\n    {\r\n        require(amount != 0);\r\n        bool canBurn;\r\n        uint256 nextTotalSupply = _totalSupply.sub(amount);\r\n        canBurn = (nextTotalSupply >= _minSupply ? true : false);\r\n        return (canBurn);\r\n    }\r\n\r\n    function burnFrom(address account, uint256 amount) external {\r\n        require(amount <= _allowed[account][msg.sender]);\r\n        _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(\r\n            amount\r\n        );\r\n        _burn(account, amount);\r\n    }\r\n}\r\n\r\n// Mail: contact@holdtoken.finance\r\n// Website: https://holdtoken.finance","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"adminTransferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"findOnePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"HOLDv3","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://68709bea39718d116bad4aaa4288d1b788d357af84f968224c35c8c6bb292339"}]}