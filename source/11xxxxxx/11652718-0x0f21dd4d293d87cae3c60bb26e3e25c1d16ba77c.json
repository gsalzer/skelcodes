{"status":"1","message":"OK","result":[{"SourceCode":"// \"SPDX-License-Identifier: UNLICENSED\"\r\n\r\npragma solidity 0.6.12;\r\n\r\ncontract BCHP {\r\n\r\nusing SafeMath for uint256;\r\n\r\nstring public constant symbol = \"BCH-P\";\r\nstring public constant name = \"Bee Cashback Home Project\";\r\nuint8 public constant decimals = 16;\r\nuint256 _totalSupply;\r\naddress public owner;\r\n\r\nmapping(address => uint256) balances;\r\nmapping(address => mapping (address => uint256)) allowances;\r\n\r\nconstructor() public {\r\n    owner = msg.sender;\r\n    _totalSupply = 100000000 * 10 ** uint256(decimals);\r\n    balances[owner] = _totalSupply;\r\n    emit Transfer(address(0), owner, _totalSupply);\r\n}\r\nfunction totalSupply() public view returns (uint256) {\r\n   return _totalSupply;\r\n}\r\nfunction balanceOf(address account) public view returns (uint256 balance) {\r\n   return balances[account];\r\n}\r\nfunction transfer(address _to, uint256 _amount) public returns (bool success) {\r\n    require(msg.sender != address(0), \"ERC20: approve from the zero address\");\r\n    require(_to != address(0), \"ERC20: approve from the zero address\");\r\n    require(balances[msg.sender] >= _amount);\r\n    balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n    balances[_to] = balances[_to].add(_amount);\r\n    emit Transfer(msg.sender, _to, _amount);\r\n    return true;\r\n}\r\nfunction transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\r\n    require(_from != address(0), \"ERC20: approve from the zero address\");\r\n    require(_to != address(0), \"ERC20: approve from the zero address\");\r\n    require(balances[_from] >= _amount && allowances[_from][msg.sender] >= _amount);\r\n    balances[_from] = balances[_from].sub(_amount);\r\n    allowances[_from][msg.sender] = allowances[_from][msg.sender].sub(_amount);\r\n    balances[_to] = balances[_to].add(_amount);\r\n    emit Transfer(_from, _to, _amount);\r\n    return true;\r\n}\r\nfunction approve(address spender, uint256 _amount) public returns (bool) {\r\n    _approve(msg.sender, spender, _amount);\r\n    return true;\r\n}\r\nfunction _approve(address _owner, address _spender, uint256 _amount) internal {\r\n    require(_owner != address(0), \"ERC20: approve from the zero address\");\r\n    require(_spender != address(0), \"ERC20: approve to the zero address\");\r\n    allowances[_owner][_spender] = _amount;\r\n    emit Approval(_owner, _spender, _amount);\r\n    }\r\nfunction allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n   return allowances[_owner][_spender];\r\n}\r\n\r\nfunction decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(msg.sender, spender, allowances[msg.sender][spender].sub(subtractedValue));\r\n    return true;\r\n}\r\nfunction increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, allowances[msg.sender][spender].add(addedValue));\r\n        return true;\r\n}\r\n\r\nevent Transfer(address indexed _from, address indexed _to, uint _value);\r\nevent Approval(address indexed _owner, address indexed _spender, uint _value);\r\n\r\n}\r\n\r\nlibrary SafeMath {\r\n    \r\nfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n    return c;\r\n}\r\nfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b <= a, \"SafeMath: subtraction overflow\");\r\n    uint256 c = a - b;\r\n    return c;\r\n}\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"BCHP","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ed0cc67074af0e35790fa8af15a6049ba83b303f736c2694d670cb6d3e8f4bd1"}]}