{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity <=0.6.2;\r\n\r\ninterface ILeviathan {\r\n  function tokensOfOwner(address owner) external view returns (uint256[] memory);  \r\n}\r\n\r\ninterface IRelease {\r\n    function release(uint ID) external;\r\n}\r\n\r\ninterface IWLEV {\r\n    function checkClaim(uint ID) external view returns (uint256); \r\n}\r\n\r\ncontract LeviathanCoreTaskV2 {\r\n    address private constant _leviathan = 0xeE52c053e091e8382902E7788Ac27f19bBdFeeDc;\r\n    address private constant _wlev = 0xA2482ccFF8432ee68b9A26a30fCDd2782Bd81BED;\r\n    address private constant _claim = 0xb4345a489e4aF3a33F81df5FB26E88fFeCEd6489;\r\n\r\n    mapping(uint => uint[3]) public stackMap;\r\n\r\n    // task rotates through 11 'stacks', 3 leviathans each\r\n    uint public stackID;\r\n\r\n    constructor()\r\n    public {\r\n        stackMap[0] = [280, 281, 282];\r\n\r\n        stackMap[1] = [283, 284, 285];\r\n\r\n        stackMap[2] = [286, 287, 288];\r\n\r\n        stackMap[3] = [289, 135, 276];\r\n\r\n        stackMap[4] = [277, 278, 279];\r\n\r\n        stackMap[5] = [290, 291, 292];\r\n\r\n        stackMap[6] = [294, 295, 296];\r\n\r\n        stackMap[7] = [273, 297, 274];\r\n\r\n        stackMap[8] = [298, 275, 299];\r\n\r\n        stackMap[9] = [300, 301, 311];\r\n\r\n        stackMap[10] = [316, 331, 332];\r\n    }\r\n\r\n    function check(uint _requirement)\r\n    external view returns (uint256) {\r\n        uint[3] memory IDstack = stackMap[stackID];\r\n\r\n        uint totalClaim;\r\n\r\n        for(uint x = 0;x < 3; x++)\r\n            totalClaim += IWLEV(_wlev).checkClaim(IDstack[x]);\r\n\r\n        if(totalClaim >= _requirement)\r\n            return 0;\r\n        else\r\n            return _requirement - totalClaim;\r\n    }\r\n\r\n    function execute()\r\n    external {\r\n        uint[3] memory IDstack = stackMap[stackID];\r\n\r\n        for(uint x = 0;x < 3; x++)\r\n            if(IWLEV(_wlev).checkClaim(IDstack[x]) > 0)\r\n                IRelease(_claim).release(IDstack[x]);\r\n\r\n        stackID++;\r\n\r\n        if(stackID > 10)\r\n            stackID = 0;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requirement\",\"type\":\"uint256\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stackID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stackMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"LeviathanCoreTaskV2","CompilerVersion":"v0.6.2+commit.bacdbe57","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://0382bc1da86d2603b535f3d728edd8adb97566b9cfa5c37756be8cacc9201b1a"}]}