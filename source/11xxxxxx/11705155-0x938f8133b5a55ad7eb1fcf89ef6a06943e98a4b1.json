{"status":"1","message":"OK","result":[{"SourceCode":"{\"Contract.sol\":{\"content\":\"pragma solidity ^0.5.0;\\r\\n\\r\\nimport \\\"SafeMath.sol\\\";\\r\\nimport \\\"Ownable.sol\\\";\\r\\n\\r\\ninterface ERC20 {\\r\\n\\tfunction basisPointsRate() external view returns (uint);\\r\\n\\tfunction transferFrom(address from, address to, uint value) external;\\r\\n}\\r\\n\\r\\ncontract InvestmentContract is Ownable {\\r\\n\\tusing SafeMath for uint;\\r\\n\\r\\n\\tevent Deposit(address indexed addr, uint8 package, uint value);\\r\\n\\tevent Withdraw(address indexed addr, uint8 package, uint value);\\r\\n\\tevent UpdateProfit(address indexed addr, uint8 package, uint value, bool loss);\\r\\n\\tevent Subscriptions(address indexed addr, uint8 package, bool subscribed);\\r\\n\\tevent PoolWalletChange(address oldAddress, address newAddress);\\r\\n\\tevent NewFee(uint fee);\\r\\n\\r\\n\\tmapping (address =\\u003e uint[5]) private userBalances;\\r\\n\\r\\n\\tERC20 private USDT;\\r\\n\\r\\n\\tuint[3] public subscribers;\\r\\n\\r\\n\\tuint public fee;\\r\\n\\r\\n\\tuint private poolWalletBalance = 0;\\r\\n\\taddress public poolWallet;\\r\\n\\r\\n\\tmodifier checkPackage(uint8 _package) {\\r\\n\\t\\trequire(_package \\u003c 3, \\\"Error: Unknown package/wallet\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier checkWallet(uint8 _wid) {\\r\\n\\t\\trequire(_wid \\u003c 5, \\\"Error: Unknown package/wallet\\\");\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tconstructor(address _pool, address _token) public {\\r\\n\\t\\tUSDT = ERC20(_token);\\r\\n\\t\\tsubscribers = [0, 0, 0];\\r\\n\\t\\tpoolWallet = _pool;\\r\\n\\t}\\r\\n\\r\\n\\tfunction isAdmin() external view returns (bool) {\\r\\n\\t\\treturn msg.sender == owner();\\r\\n\\t}\\r\\n\\r\\n\\tfunction setFee(uint _fee) external onlyOwner {\\r\\n\\t\\tfee = _fee;\\r\\n\\t\\temit NewFee(_fee);\\r\\n\\t}\\r\\n\\r\\n\\tfunction changePoolWallet(address _addr) external onlyOwner {\\r\\n\\t\\taddress prev = poolWallet;\\r\\n\\t\\tpoolWallet = _addr;\\r\\n\\t\\temit PoolWalletChange(prev, _addr);\\r\\n\\t}\\r\\n\\r\\n\\tfunction balance(address _addr) external view returns (uint) {\\r\\n\\t\\tuint[5] memory balances = userBalances[_addr];\\r\\n\\t\\tuint bl = balances[0].add(balances[1]).add(balances[2]).add(balances[3]).add(balances[4]);\\r\\n\\t\\treturn bl;\\r\\n\\t}\\r\\n\\r\\n\\tfunction balance(address _addr, uint8 _wid) public view checkWallet(_wid) returns (uint) {\\r\\n\\t\\treturn userBalances[_addr][_wid];\\r\\n\\t}\\r\\n\\r\\n\\tfunction subscriptions(address _addr) external view returns (bool low, bool medium, bool high){\\r\\n\\t\\treturn (balance(_addr, 0) \\u003e 0, balance(_addr, 1) \\u003e 0, balance(_addr, 2) \\u003e 0);\\r\\n\\t}\\r\\n\\r\\n\\tfunction deposit(uint8 _package, uint _value) external checkPackage(_package) {\\r\\n\\t\\tUSDT.transferFrom(msg.sender, poolWallet, _value);\\r\\n\\t\\tuint dep_fees = (_value.mul(USDT.basisPointsRate())).div(10000);\\r\\n\\t\\tuint actualValue = _value.sub(dep_fees);\\r\\n\\t\\tuint currentBalance = userBalances[msg.sender][_package];\\r\\n\\t\\tuserBalances[msg.sender][_package] = currentBalance.add(actualValue);\\r\\n\\t\\tpoolWalletBalance = poolWalletBalance.add(actualValue);\\r\\n\\t\\tif(currentBalance == 0){\\r\\n\\t\\t\\tsubscribers[_package] = subscribers[_package].add(1);\\r\\n\\t\\t\\temit Subscriptions(msg.sender, _package, true);\\r\\n\\t\\t}\\r\\n\\t\\temit Deposit(msg.sender, _package, _value);\\r\\n\\t}\\r\\n\\r\\n\\tfunction tranfer(uint8 _src, uint8 _dst, uint _value) external checkPackage(_dst) {\\r\\n\\t\\trequire(_src == 3 || _src == 4, \\\"Error: Source can only be 3 or 4\\\");\\r\\n\\t\\tuint currentBalance = userBalances[msg.sender][_dst];\\r\\n\\t\\tuserBalances[msg.sender][_src] = userBalances[msg.sender][_src].sub(_value);\\r\\n\\t\\tuserBalances[msg.sender][_dst] = currentBalance.add(_value);\\r\\n\\t\\tif(currentBalance == 0){\\r\\n\\t\\t\\tsubscribers[_dst] = subscribers[_dst].add(1);\\r\\n\\t\\t\\temit Subscriptions(msg.sender, _dst, true);\\r\\n\\t\\t}\\r\\n\\t\\temit Deposit(msg.sender, _dst, _value);\\r\\n\\t}\\r\\n\\r\\n\\tfunction withdraw(address _addr, uint8 _wid, uint _value) external onlyOwner checkWallet(_wid) {\\r\\n\\t\\tUSDT.transferFrom(poolWallet, _addr, _value.sub(fee));\\r\\n\\t\\tuserBalances[_addr][_wid] = userBalances[_addr][_wid].sub(_value);\\r\\n\\t\\tpoolWalletBalance = poolWalletBalance.sub(_value.sub(fee));\\r\\n\\t\\tif(userBalances[_addr][_wid] == 0 \\u0026\\u0026 _wid \\u003c 3){\\r\\n\\t\\t\\tsubscribers[_wid] = subscribers[_wid].sub(1);\\r\\n\\t\\t\\temit Subscriptions(_addr, _wid, false);\\r\\n\\t\\t}\\r\\n\\t\\temit Withdraw(_addr, _wid, _value);\\r\\n\\t}\\r\\n\\r\\n\\tfunction increaseBalance(address _addr, uint _value, uint8 _wid) external onlyOwner checkWallet(_wid) {\\r\\n\\t\\tuint currentBalance = userBalances[_addr][_wid];\\r\\n\\t\\tuserBalances[_addr][_wid] = currentBalance.add(_value);\\r\\n\\t\\tif(currentBalance == 0 \\u0026\\u0026 _wid \\u003c 3){\\r\\n\\t\\t\\tsubscribers[_wid] = subscribers[_wid].add(1);\\r\\n\\t\\t\\temit Subscriptions(msg.sender, _wid, true);\\r\\n\\t\\t}\\r\\n\\t\\temit UpdateProfit(_addr, _wid, _value, false);\\r\\n\\t}\\r\\n\\r\\n\\tfunction decreaseBalance(address _addr, uint _value, uint8 _wid) external onlyOwner checkWallet(_wid) {\\r\\n\\t\\tuserBalances[_addr][_wid] = userBalances[_addr][_wid].sub(_value);\\r\\n\\t\\tif(userBalances[_addr][_wid] == 0 \\u0026\\u0026 _wid \\u003c 3){\\r\\n\\t\\t\\tsubscribers[_wid] = subscribers[_wid].sub(1);\\r\\n\\t\\t\\temit Subscriptions(msg.sender, _wid, false);\\r\\n\\t\\t}\\r\\n\\t\\temit UpdateProfit(_addr, _wid, _value, true);\\r\\n\\t}\\r\\n\\r\\n}\"},\"Ownable.sol\":{\"content\":\"pragma solidity ^0.5.0;\\r\\n\\r\\ncontract Ownable {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () internal {\\r\\n        _owner = msg.sender;\\r\\n        emit OwnershipTransferred(address(0), msg.sender);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\"},\"SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.0;\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c \\u003e= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b \\u003c= a, \\\"SafeMath: subtraction overflow\\\");\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b \\u003e 0, \\\"SafeMath: division by zero\\\");\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn\\u0027t hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b != 0, \\\"SafeMath: modulo by zero\\\");\\r\\n        return a % b;\\r\\n    }\\r\\n}\"}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"package\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"NewFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolWalletChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"package\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"subscribed\",\"type\":\"bool\"}],\"name\":\"Subscriptions\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"package\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"loss\",\"type\":\"bool\"}],\"name\":\"UpdateProfit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"package\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_wid\",\"type\":\"uint8\"}],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"changePoolWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_wid\",\"type\":\"uint8\"}],\"name\":\"decreaseBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_package\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_wid\",\"type\":\"uint8\"}],\"name\":\"increaseBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"poolWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subscribers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"subscriptions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"low\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"medium\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"high\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_src\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_dst\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"tranfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_wid\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"InvestmentContract","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000011c70de4da14f435779eed8764586c6a6e5fcd1d000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://4e446e360aa231ecdbdb29520a7b32cf43fe63cf51b18b788a7d4b0338c2dce9"}]}