{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.21 <0.7.1;\r\n\r\ninterface LiquidityPool {\r\n    function borrow(address _token,uint256 _amount,bytes calldata _data) external;\r\n}\r\n\r\ncontract testKeeper {\r\n    address public owner;\r\n    address public borrowProxy;\r\n    address payable public liquidityPool;\r\n\r\n    modifier onlyOwner {\r\n        if (msg.sender == owner) {\r\n            _;\r\n        }\r\n    }\r\n\r\n    modifier onlyBorrowProxy {\r\n        if (msg.sender == borrowProxy) {\r\n            _;\r\n        }\r\n    }\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        borrowProxy = 0x82151CA501c81108d032C490E25f804787BEF3b8;\r\n        liquidityPool = 0x4C8cC29226F97d92eC2D299bC14EDF16bAD436b7;\r\n    }\r\n\r\n    receive() external payable {\r\n        //do nothing\r\n    }\r\n\r\n    function withdraw() public onlyOwner {\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n\r\n    function setOwner(address _newOwner) external onlyOwner {\r\n        owner = _newOwner;\r\n    }\r\n    \r\n    function execute(address _dest, uint256 _value, bytes memory _data) public payable onlyOwner {\r\n        (bool s, bytes memory b) = _dest.call{value: _value}(_data);\r\n    }    \r\n\r\n    function setBorrowProxy(address _newBorrowProxy) external onlyOwner {\r\n        borrowProxy = _newBorrowProxy;\r\n    }\r\n\r\n    function setLiquidityPool(address payable _newLiquidityPool) external onlyOwner {\r\n        liquidityPool = _newLiquidityPool;\r\n    }\r\n\r\n    function keep(uint256 _amountToBorrow, uint256 _amountOfProfitToReturn) external onlyOwner{\r\n        LiquidityPool(liquidityPool).borrow(address(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE), _amountToBorrow, abi.encodeWithSelector(this.keeperCallback.selector, _amountToBorrow, _amountOfProfitToReturn));\r\n    }\r\n\r\n    function keeperCallback(uint256 _amountBorrowed, uint256 _amountOfProfitToReturn) external onlyBorrowProxy {\r\n        liquidityPool.call{value: _amountBorrowed + _amountOfProfitToReturn}(\"\");\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"borrowProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountToBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountOfProfitToReturn\",\"type\":\"uint256\"}],\"name\":\"keep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountOfProfitToReturn\",\"type\":\"uint256\"}],\"name\":\"keeperCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityPool\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBorrowProxy\",\"type\":\"address\"}],\"name\":\"setBorrowProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newLiquidityPool\",\"type\":\"address\"}],\"name\":\"setLiquidityPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"testKeeper","CompilerVersion":"v0.7.0+commit.9e61f92b","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://e2cca6aabd443af30f3c07a6763b4e99ee80ec38e81ab1b6f2b0b05704f4a712"}]}