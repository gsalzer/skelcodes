{"status":"1","message":"OK","result":[{"SourceCode":"/// VoteProxyFactory.sol\r\n\r\n// Copyright (C) 2018-2020 Maker Ecosystem Growth Holdings, INC.\r\n\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// create and keep record of proxy identities\r\npragma solidity >=0.4.24;\r\n\r\ninterface TokenLike {\r\n    function balanceOf(address) external view returns (uint256);\r\n    function approve(address, uint256) external;\r\n    function pull(address, uint256) external;\r\n    function push(address, uint256) external;\r\n}\r\n\r\ninterface ChiefLike {\r\n    function GOV() external view returns (TokenLike);\r\n    function IOU() external view returns (TokenLike);\r\n    function deposits(address) external view returns (uint256);\r\n    function lock(uint256) external;\r\n    function free(uint256) external;\r\n    function vote(address[] calldata) external returns (bytes32);\r\n    function vote(bytes32) external;\r\n}\r\n\r\ncontract VoteProxy {\r\n    address   public cold;\r\n    address   public hot;\r\n    TokenLike public gov;\r\n    TokenLike public iou;\r\n    ChiefLike public chief;\r\n\r\n    constructor(address _chief, address _cold, address _hot) public {\r\n        chief = ChiefLike(_chief);\r\n        cold = _cold;\r\n        hot = _hot;\r\n\r\n        gov = chief.GOV();\r\n        iou = chief.IOU();\r\n        gov.approve(address(chief), uint256(-1));\r\n        iou.approve(address(chief), uint256(-1));\r\n    }\r\n\r\n    modifier auth() {\r\n        require(msg.sender == hot || msg.sender == cold, \"Sender must be a Cold or Hot Wallet\");\r\n        _;\r\n    }\r\n\r\n    function lock(uint256 wad) public auth {\r\n        gov.pull(cold, wad);   // mkr from cold\r\n        chief.lock(wad);       // mkr out, ious in\r\n    }\r\n\r\n    function free(uint256 wad) public auth {\r\n        chief.free(wad);       // ious out, mkr in\r\n        gov.push(cold, wad);   // mkr to cold\r\n    }\r\n\r\n    function freeAll() public auth {\r\n        chief.free(chief.deposits(address(this)));\r\n        gov.push(cold, gov.balanceOf(address(this)));\r\n    }\r\n\r\n    function vote(address[] memory yays) public auth returns (bytes32) {\r\n        return chief.vote(yays);\r\n    }\r\n\r\n    function vote(bytes32 slate) public auth {\r\n        chief.vote(slate);\r\n    }\r\n}\r\n\r\ncontract VoteProxyFactory {\r\n    ChiefLike public chief;\r\n    mapping(address => VoteProxy) public hotMap;\r\n    mapping(address => VoteProxy) public coldMap;\r\n    mapping(address => address) public linkRequests;\r\n\r\n    event LinkRequested(address indexed cold, address indexed hot);\r\n    event LinkConfirmed(address indexed cold, address indexed hot, address indexed voteProxy);\r\n\r\n    constructor(address chief_) public { chief = ChiefLike(chief_); }\r\n\r\n    function hasProxy(address guy) public view returns (bool) {\r\n        return (address(coldMap[guy]) != address(0x0) || address(hotMap[guy]) != address(0x0));\r\n    }\r\n\r\n    function initiateLink(address hot) public {\r\n        require(!hasProxy(msg.sender), \"Cold wallet is already linked to another Vote Proxy\");\r\n        require(!hasProxy(hot), \"Hot wallet is already linked to another Vote Proxy\");\r\n\r\n        linkRequests[msg.sender] = hot;\r\n        emit LinkRequested(msg.sender, hot);\r\n    }\r\n\r\n    function approveLink(address cold) public returns (VoteProxy voteProxy) {\r\n        require(linkRequests[cold] == msg.sender, \"Cold wallet must initiate a link first\");\r\n        require(!hasProxy(msg.sender), \"Hot wallet is already linked to another Vote Proxy\");\r\n\r\n        voteProxy = new VoteProxy(address(chief), cold, msg.sender);\r\n        hotMap[msg.sender] = voteProxy;\r\n        coldMap[cold] = voteProxy;\r\n        delete linkRequests[cold];\r\n        emit LinkConfirmed(cold, msg.sender, address(voteProxy));\r\n    }\r\n\r\n    function breakLink() public {\r\n        require(hasProxy(msg.sender), \"No VoteProxy found for this sender\");\r\n\r\n        VoteProxy voteProxy = address(coldMap[msg.sender]) != address(0x0)\r\n            ? coldMap[msg.sender] : hotMap[msg.sender];\r\n        address cold = voteProxy.cold();\r\n        address hot = voteProxy.hot();\r\n        require(chief.deposits(address(voteProxy)) == 0, \"VoteProxy still has funds attached to it\");\r\n\r\n        delete coldMap[cold];\r\n        delete hotMap[hot];\r\n    }\r\n\r\n    function linkSelf() public returns (VoteProxy voteProxy) {\r\n        initiateLink(msg.sender);\r\n        return approveLink(msg.sender);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"chief_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cold\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hot\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voteProxy\",\"type\":\"address\"}],\"name\":\"LinkConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cold\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hot\",\"type\":\"address\"}],\"name\":\"LinkRequested\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cold\",\"type\":\"address\"}],\"name\":\"approveLink\",\"outputs\":[{\"internalType\":\"contract VoteProxy\",\"name\":\"voteProxy\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"breakLink\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"chief\",\"outputs\":[{\"internalType\":\"contract ChiefLike\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"coldMap\",\"outputs\":[{\"internalType\":\"contract VoteProxy\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"hasProxy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hotMap\",\"outputs\":[{\"internalType\":\"contract VoteProxy\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"hot\",\"type\":\"address\"}],\"name\":\"initiateLink\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"linkRequests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"linkSelf\",\"outputs\":[{\"internalType\":\"contract VoteProxy\",\"name\":\"voteProxy\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"VoteProxyFactory","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000a3f6849f78076aefadf113f5bed87720274ddc0","EVMVersion":"Default","Library":"","LicenseType":"Unknown","Proxy":"0","Implementation":"","SwarmSource":"bzzr://f28806218cb29a8abbe189276908de56586897b0d416e38a79f830aa91674fd1"}]}