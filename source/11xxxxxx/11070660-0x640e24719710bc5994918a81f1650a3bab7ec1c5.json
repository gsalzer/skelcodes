{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.17;\r\n\r\n\r\ncontract Permissions {\r\n\r\n  \r\n  mapping (address=>bool) public permits;\r\n\r\n  event AddPermit(address _addr);\r\n  event RemovePermit(address _addr);\r\n  event ChangeAdmin(address indexed _newAdmin,address indexed _oldAdmin);\r\n  \r\n  address public admin;\r\n  bytes32 public adminChangeKey;\r\n  \r\n  \r\n  function verify(bytes32 root,bytes32 leaf,bytes32[] memory proof) public pure returns (bool)\r\n  {\r\n      bytes32 computedHash = leaf;\r\n\r\n      for (uint256 i = 0; i < proof.length; i++) {\r\n        bytes32 proofElement = proof[i];\r\n\r\n        if (computedHash < proofElement) {\r\n        // Hash(current computed hash + current element of the proof)\r\n        computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\r\n        } else {\r\n        // Hash(current element of the proof + current computed hash)\r\n        computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\r\n       }\r\n      }\r\n\r\n     // Check if the computed hash (root) is equal to the provided root\r\n      return computedHash == root;\r\n   }    \r\n  function changeAdmin(address _newAdmin,bytes32 _keyData,bytes32[] memory merkleProof,bytes32 _newRootKey) public onlyAdmin {\r\n         bytes32 leaf = keccak256(abi.encodePacked(msg.sender,\"docDB\",_keyData));\r\n         require(verify(adminChangeKey, leaf,merkleProof), 'Invalid proof.');\r\n         \r\n         admin = _newAdmin;\r\n         adminChangeKey = _newRootKey;\r\n         \r\n         emit ChangeAdmin(_newAdmin,msg.sender);      \r\n  }\r\n  \r\n  constructor() public {\r\n    permits[msg.sender] = true;\r\n    admin = msg.sender;\r\n    adminChangeKey = 0xc07b01d617f249e77fe6f0df68daa292fe6ec653a9234d277713df99c0bb8ebf;\r\n  }\r\n  \r\n  modifier onlyAdmin(){\r\n      require(msg.sender == admin);\r\n      _;\r\n  }\r\n\r\n  modifier onlyPermits(){\r\n    require(permits[msg.sender] == true);\r\n    _;\r\n  }\r\n\r\n  function isPermit(address _addr) public view returns(bool){\r\n    return permits[_addr];\r\n  }\r\n  \r\n  function addPermit(address _addr) public onlyAdmin{\r\n    if(permits[_addr] == false){\r\n        permits[_addr] = true;\r\n        emit AddPermit(_addr);\r\n    }\r\n  }\r\n  \r\n  function removePermit(address _addr) public onlyAdmin{\r\n    permits[_addr] = false;\r\n    emit RemovePermit(_addr);\r\n  }\r\n\r\n\r\n}\r\n\r\ncontract S1Global{\r\n    function getAllMaxAddr() public returns(uint256);\r\n    function getAddress(uint256 idx) public returns(address);\r\n    function getAddressLabel(string memory _label) public view returns(address);\r\n}\r\n\r\ncontract S1Tools{\r\n    function toUPPER(string memory source) public pure returns (string memory result);\r\n    function stringToBytes8(string memory source) public pure returns (bytes8 result);\r\n}\r\n \r\ncontract LoanDocDB is Permissions {\r\n    \r\n    event LoanDocIssue(\r\n      address indexed owner,\r\n      uint256 indexed docID,\r\n      string docIPFSId,\r\n      uint256 docType,\r\n      uint256 issuedTime\r\n    );\r\n\r\n    enum DOCUMENT_STATUS {DOCUMENT_PEDDING,DOCUMENT_ACTIVE,DOCUMENT_TERMINATE,DOCUMENT_REJECT,DOCUMENT_APPROVE}\r\n\r\n    struct LoanDocumentContrat {\r\n        uint256 docType; // type of document\r\n        address owner;\r\n        address auditAddr;\r\n        address legalAddr;\r\n        uint256 credit;\r\n        bytes8  currency;\r\n        uint256 issuedTime;\r\n        string ipfs; // use in future; // change ipfs to string in v4\r\n        uint256 creditScore;\r\n        uint256 option2;  \r\n        string  option3; // uset this for ipfs \r\n        DOCUMENT_STATUS status;\r\n     }\r\n\r\n    S1Tools  public s1Tools;\r\n    uint256  public version = 5;\r\n\r\n    LoanDocumentContrat[] loanDocs;\r\n  \r\n    mapping (uint256=>uint256) public loanDocIDToIdx; // start from 1 when use want to -1;\r\n    mapping (uint256=>uint256) public loanDocIdxToID;\r\n    mapping (uint256=>uint256) public docIDToToken;\r\n    mapping (uint256=>uint256) public TokenToDocID;\r\n\r\n  \r\n\r\n    mapping (address => bool) public blackListDocs;\r\n    mapping (uint256 => bool) public untradeTokens;\r\n  \r\n    event LegalApprove(address indexed legal,uint256 docID);\r\n    event AuditApprove(address indexed audit,uint256 docID,uint256 credit,uint256 score);\r\n    event UpdateCreditScore(address indexed _permit,uint256 _docID,uint256 _score);\r\n    event UpdateIPFS(uint256 indexed _docID,string _ipfs);\r\n\r\n    mapping (address => uint256[]) legalToDoc;\r\n    mapping (address => uint256[]) auditToDoc;\r\n    \r\n    function canMintCat(uint256 _tokenID) public view returns (bool){\r\n          return false;\r\n    }\r\n    \r\n    function checkAllow(address _from,address _to,uint256 _tokenID) public view returns (bool){\r\n        if(blackListDocs[_from] == true || blackListDocs[_to] == true) return false;\r\n        if(untradeTokens[_tokenID] == true) return false;\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function setBlacklist(address _addr,bool _flag) public onlyAdmin returns(bool){\r\n        blackListDocs[_addr] = _flag;\r\n        return true;\r\n    }\r\n    \r\n    function setNonTransfer(uint256 _tokenID,bool _flag) public onlyAdmin returns(bool){\r\n        untradeTokens[_tokenID] = _flag;\r\n        return true;\r\n    }\r\n    \r\n    function setS1Global(address _addr) external onlyAdmin returns(bool){\r\n        S1Global  s1 = S1Global(_addr);\r\n        for(uint256 i=0;i<s1.getAllMaxAddr();i++){\r\n            addPermit(s1.getAddress(i));\r\n        }\r\n        \r\n        s1Tools = S1Tools(s1.getAddressLabel(\"s1tools\"));\r\n    }\r\n    \r\n    function setS1Tools(address _addr) external onlyAdmin returns(bool){\r\n        s1Tools = S1Tools(_addr);\r\n    }\r\n\r\n    // External get and update value \r\n    function getMaxDB() external view onlyPermits returns(uint256){\r\n        return loanDocs.length;\r\n    }\r\n  \r\n    function isValidDoc(uint256 _docID) public view returns (bool){\r\n        return (loanDocIDToIdx[_docID] != 0);\r\n    }\r\n    \r\n    function setDocID2Token(uint256 _TokenID,uint256 _docID) public onlyPermits returns(bool){\r\n        require(docIDToToken[_docID] == 0,\"Already set doc id\");\r\n        require(TokenToDocID[_TokenID] == 0,\"Token Already use\");\r\n\r\n        docIDToToken[_docID] = _TokenID;\r\n        TokenToDocID[_TokenID] = _docID;\r\n        return true;\r\n    }\r\n    \r\n    function createNewDocument(uint256 _docID,uint256 _docType,string memory _ipFS,address _owner,string memory Currency) public onlyPermits returns(bool) {\r\n        require(isValidDoc(_docID) == false,\"Already have this document\");\r\n        Currency = s1Tools.toUPPER(Currency);\r\n\r\n        LoanDocumentContrat memory loanDoc = LoanDocumentContrat({\r\n                docType:_docType,\r\n                owner:_owner,\r\n                auditAddr:address(0),\r\n                legalAddr:address(0),\r\n                credit:0,\r\n                currency:s1Tools.stringToBytes8(Currency),\r\n                issuedTime:now,\r\n                ipfs:_ipFS,\r\n                creditScore:0,\r\n                option2:0,\r\n                option3:\"\",\r\n                status:DOCUMENT_STATUS.DOCUMENT_PEDDING\r\n        });\r\n        \r\n        uint256 docIdx = loanDocs.push(loanDoc);\r\n        loanDocIDToIdx[_docID] = docIdx;\r\n        loanDocIdxToID[docIdx] = _docID;\r\n        \r\n        emit LoanDocIssue(_owner,_docID,_ipFS,_docType,now);\r\n        return true;\r\n    }    \r\n\r\n    function loanDocData(uint256 _idx) public view onlyPermits returns(uint256[] memory _data,bytes8 _cur,address[] memory _addr,string memory _st,string memory _ipfs){\r\n        _data = new uint256[](6);\r\n        _addr = new address[](3);\r\n        \r\n        _data[0] = loanDocs[_idx].docType;\r\n        _data[1] = loanDocs[_idx].credit;\r\n        _data[2] = loanDocs[_idx].issuedTime;\r\n        _data[3] = uint256(loanDocs[_idx].status);\r\n        _data[4] = loanDocs[_idx].creditScore;\r\n        _data[5] = loanDocs[_idx].option2;\r\n        \r\n        _cur = loanDocs[_idx].currency;\r\n        _addr[0] = loanDocs[_idx].owner;\r\n        _addr[1] = loanDocs[_idx].auditAddr;\r\n        _addr[2] = loanDocs[_idx].legalAddr;\r\n        \r\n        _st = loanDocs[_idx].option3;\r\n        _ipfs = loanDocs[_idx].ipfs;\r\n    }\r\n    \r\n    function loanDocDataFromID(uint256 _docID)  public view onlyPermits returns(uint256[] memory _data,bytes8 _cur,address[] memory _addr,string memory _st,string memory _ipfs){\r\n        require(loanDocIDToIdx[_docID] > 0,\"Not have this ID\");\r\n        return loanDocData(loanDocIDToIdx[_docID] - 1);\r\n    }\r\n\r\n    \r\n    function getDocCredit(uint256 _docID) public view returns(uint256){\r\n        require(loanDocIDToIdx[_docID] > 0,\"Not have this ID\");\r\n        uint256 _idx = loanDocIDToIdx[_docID] - 1;\r\n        return loanDocs[_idx].credit;\r\n    }\r\n\r\n\r\n    // Sign Document\r\n    function legalSignDoc(uint256 _docID,address _legal) public onlyPermits returns (bool){\r\n        require( loanDocIDToIdx[_docID] > 0,\"invalid document ID\");\r\n        uint256 _idx =  loanDocIDToIdx[_docID] - 1;\r\n        require(loanDocs[_idx].legalAddr == address(0),\"Legal Already Sign\");\r\n        loanDocs[_idx].legalAddr = _legal;\r\n        \r\n        if(loanDocs[_idx].auditAddr != address(0))\r\n            loanDocs[_idx].status = DOCUMENT_STATUS.DOCUMENT_ACTIVE;\r\n\r\n        emit LegalApprove(_legal,_docID);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function auditSignDocAndCredit(uint256 _docID,address _audit,uint256 _credit,uint256 _score) public onlyPermits returns (bool){\r\n     \r\n        require( loanDocIDToIdx[_docID] > 0,\"invalid document ID\");\r\n        uint256 _idx = loanDocIDToIdx[_docID] - 1;\r\n        require(loanDocs[_idx].auditAddr == address(0),\"Audit Already Sign\");\r\n        loanDocs[_idx].auditAddr = _audit;\r\n        loanDocs[_idx].credit = _credit;\r\n        loanDocs[_idx].creditScore = _score;\r\n        \r\n        if(loanDocs[_idx].legalAddr != address(0))\r\n            loanDocs[_idx].status = DOCUMENT_STATUS.DOCUMENT_ACTIVE;\r\n        \r\n        emit AuditApprove(_audit,_docID,_credit,_score);\r\n\r\n        return true;\r\n    }\r\n\r\n    function updateCreditScore(uint256 _docID,uint256 _score) public onlyPermits returns (bool){\r\n        require( loanDocIDToIdx[_docID] > 0,\"invalid document ID\");\r\n        uint256 _idx = loanDocIDToIdx[_docID] - 1;\r\n        require(loanDocs[_idx].status == DOCUMENT_STATUS.DOCUMENT_PEDDING,\"This document not pedding status\");\r\n        \r\n        loanDocs[_idx].creditScore = _score;\r\n        \r\n\r\n        emit UpdateCreditScore(msg.sender,_docID,_score);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function updateIPFS(uint256 _docID,string memory _ipfs) public onlyPermits returns(bool){\r\n        require( loanDocIDToIdx[_docID] > 0,\"invalid document ID\");\r\n        uint256 _idx = loanDocIDToIdx[_docID] - 1;\r\n        require(loanDocs[_idx].status == DOCUMENT_STATUS.DOCUMENT_PEDDING,\"This document not pedding status\");\r\n        \r\n        loanDocs[_idx].ipfs = _ipfs;\r\n        \r\n        emit UpdateIPFS(_docID,_ipfs);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function getMaxLegalSign(address _addr) public view  onlyPermits returns (uint256){ return legalToDoc[_addr].length; }\r\n    function getMaxAuditSign(address _addr) public view  onlyPermits returns (uint256){ return auditToDoc[_addr].length; }\r\n    function getLegalSign(address _addr,uint256 idx) public view onlyPermits returns(uint256) { return legalToDoc[_addr][idx];}\r\n    function getAuditSign(address _addr,uint256 idx) public view onlyPermits returns(uint256) { return auditToDoc[_addr][idx];}\r\n\r\n\r\n    \r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"AddPermit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"audit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"docID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"AuditApprove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldAdmin\",\"type\":\"address\"}],\"name\":\"ChangeAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"legal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"docID\",\"type\":\"uint256\"}],\"name\":\"LegalApprove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"docID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"docIPFSId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"docType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"issuedTime\",\"type\":\"uint256\"}],\"name\":\"LoanDocIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"RemovePermit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_permit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_docID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_score\",\"type\":\"uint256\"}],\"name\":\"UpdateCreditScore\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_docID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_ipfs\",\"type\":\"string\"}],\"name\":\"UpdateIPFS\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"TokenToDocID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addPermit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminChangeKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_docID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_audit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_score\",\"type\":\"uint256\"}],\"name\":\"auditSignDocAndCredit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blackListDocs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"canMintCat\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_keyData\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"_newRootKey\",\"type\":\"bytes32\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"checkAllow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_docID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_docType\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ipFS\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"Currency\",\"type\":\"string\"}],\"name\":\"createNewDocument\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"docIDToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getAuditSign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_docID\",\"type\":\"uint256\"}],\"name\":\"getDocCredit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getLegalSign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getMaxAuditSign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMaxDB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getMaxLegalSign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isPermit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_docID\",\"type\":\"uint256\"}],\"name\":\"isValidDoc\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_docID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_legal\",\"type\":\"address\"}],\"name\":\"legalSignDoc\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"}],\"name\":\"loanDocData\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_data\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes8\",\"name\":\"_cur\",\"type\":\"bytes8\"},{\"internalType\":\"address[]\",\"name\":\"_addr\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"_st\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ipfs\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_docID\",\"type\":\"uint256\"}],\"name\":\"loanDocDataFromID\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_data\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes8\",\"name\":\"_cur\",\"type\":\"bytes8\"},{\"internalType\":\"address[]\",\"name\":\"_addr\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"_st\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ipfs\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanDocIDToIdx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanDocIdxToID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"permits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removePermit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"s1Tools\",\"outputs\":[{\"internalType\":\"contract S1Tools\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_flag\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_TokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_docID\",\"type\":\"uint256\"}],\"name\":\"setDocID2Token\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_flag\",\"type\":\"bool\"}],\"name\":\"setNonTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setS1Global\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setS1Tools\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"untradeTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_docID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_score\",\"type\":\"uint256\"}],\"name\":\"updateCreditScore\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_docID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ipfs\",\"type\":\"string\"}],\"name\":\"updateIPFS\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"LoanDocDB","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3b7d384dca9c00885669ba3037a801e2a05713b867461bf9f3a1336f09a1527d"}]}