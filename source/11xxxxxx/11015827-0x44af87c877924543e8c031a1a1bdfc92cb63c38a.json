{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract MessageStorage {\r\n    uint256 public msgCount = 0;\r\n    mapping(uint256 => Message) public message;\r\n\r\n    struct Message{\r\n        uint256 id;\r\n        string text;\r\n        string fileName;\r\n        string fileType;\r\n        string fileHash;\r\n        string msgSize;\r\n        string datetime;\r\n    }\r\n\r\n    function addMessage(string memory text, string memory fileName, string memory fileType, string memory fileHash, string memory msgSize, string memory datetime) public {\r\n        message[msgCount] = Message(msgCount, text, fileName, fileType, fileHash, msgSize, datetime);\r\n        msgCount += 1;\r\n    }\r\n\r\n    function addMultipleMessages(string[] memory text, string[] memory fileName, string[] memory fileType, string[] memory fileHash, string[] memory msgSize, string memory datetime) public {\r\n        for(uint i = 0; i< text.length; i++)\r\n        {\r\n            message[msgCount] = Message(msgCount, text[i], fileName[i], fileType[i], fileHash[i], msgSize[i], datetime);\r\n            msgCount += 1;\r\n        }\r\n    }\r\n\r\n    function getMessageCount() public view returns (uint256) {\r\n        return msgCount;\r\n    }\r\n\r\n    function get(uint256 index) public view returns (Message memory){\r\n        return message[index];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getMessageCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"text\",\"type\":\"string[]\"},{\"name\":\"fileName\",\"type\":\"string[]\"},{\"name\":\"fileType\",\"type\":\"string[]\"},{\"name\":\"fileHash\",\"type\":\"string[]\"},{\"name\":\"msgSize\",\"type\":\"string[]\"},{\"name\":\"datetime\",\"type\":\"string\"}],\"name\":\"addMultipleMessages\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"msgCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"get\",\"outputs\":[{\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fileName\",\"type\":\"string\"},{\"name\":\"fileType\",\"type\":\"string\"},{\"name\":\"fileHash\",\"type\":\"string\"},{\"name\":\"msgSize\",\"type\":\"string\"},{\"name\":\"datetime\",\"type\":\"string\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fileName\",\"type\":\"string\"},{\"name\":\"fileType\",\"type\":\"string\"},{\"name\":\"fileHash\",\"type\":\"string\"},{\"name\":\"msgSize\",\"type\":\"string\"},{\"name\":\"datetime\",\"type\":\"string\"}],\"name\":\"addMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"message\",\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fileName\",\"type\":\"string\"},{\"name\":\"fileType\",\"type\":\"string\"},{\"name\":\"fileHash\",\"type\":\"string\"},{\"name\":\"msgSize\",\"type\":\"string\"},{\"name\":\"datetime\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"MessageStorage","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://68f1c6e415cdcd29bae8ef44d0c53a2a60161e0d63b967a60a8bba8bac8c5623"}]}