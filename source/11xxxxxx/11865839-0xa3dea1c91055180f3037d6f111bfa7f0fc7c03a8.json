{"status":"1","message":"OK","result":[{"SourceCode":"// Sources flattened with hardhat v2.0.10 https://hardhat.org\r\n\r\n// File contracts/interfaces/ICurve.sol\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface ICurve {\r\n    function exchange(\r\n        int128 i,\r\n        int128 j,\r\n        uint256 dx,\r\n        uint256 min_dy\r\n    ) external;\r\n}\r\n\r\n\r\n// File contracts/interfaces/IERC20.sol\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function transferFrom(address from, address recipient, uint256 amount) external returns (bool);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\n\r\n// File contracts/interfaces/ISynthetix.sol\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface ISynthetix {\r\n    function exchangeOnBehalf(\r\n        address exchangeForAddress, \r\n        bytes32 sourceCurrencyKey, \r\n        uint256 sourceAmount, \r\n        bytes32 destinationCurrencyKey\r\n    ) external returns (uint256 amountReceived);\r\n}\r\n\r\n\r\n// File contracts/interfaces/IDelegateApprovals.sol\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IDelegateApprovals {\r\n    function approveExchangeOnBehalf(address delegate) external;\r\n}\r\n\r\n\r\n// File contracts/TeslaSwap.sol\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\n\r\ncontract TeslaSwap {\r\n  ICurve public curve;\r\n  ISynthetix public synthetix;\r\n  IERC20 public USDC;\r\n  IERC20 public sUSD;\r\n  IERC20 public sTSLA;\r\n  \r\n  constructor(address _USDC, address _sUSDC, address _sTSLA, address _curve, address _synthetix) {\r\n    USDC = IERC20(_USDC);\r\n    sUSD = IERC20(_sUSDC);\r\n    sTSLA = IERC20(_sTSLA);\r\n    curve = ICurve(_curve);\r\n    synthetix = ISynthetix(_synthetix);\r\n\r\n    USDC.approve(address(curve), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\r\n  }\r\n\r\n  function swapUSDCForTequila (\r\n    uint256 amountIn,\r\n    uint256 amountOutMin\r\n  ) external {\r\n    USDC.transferFrom(msg.sender, address(this), amountIn);\r\n\r\n    curve.exchange(1, 3, amountIn, amountOutMin);\r\n    uint256 sUSDOut = sUSD.balanceOf(address(this));\r\n    sUSD.transfer(msg.sender, sUSDOut);\r\n\r\n    synthetix.exchangeOnBehalf(msg.sender, \"sUSD\", sUSDOut, \"sTSLA\");\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDC\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sUSDC\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sTSLA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_curve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_synthetix\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curve\",\"outputs\":[{\"internalType\":\"contract ICurve\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sTSLA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sUSD\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swapUSDCForTequila\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"synthetix\",\"outputs\":[{\"internalType\":\"contract ISynthetix\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TeslaSwap","CompilerVersion":"v0.8.0+commit.c7dfd78e","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800000000000000000000000057ab1ec28d129707052df4df418d58a2d46d5f51000000000000000000000000918da91ccbc32b7a6a0cc4ecd5987bbab6e31e6d000000000000000000000000a5407eae9ba41422680e2e00537571bcc53efbfd000000000000000000000000c011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://7a79947dc598093df60d1aba15f6b59751aefc69e60332ebcd8a4b3c96de64a4"}]}