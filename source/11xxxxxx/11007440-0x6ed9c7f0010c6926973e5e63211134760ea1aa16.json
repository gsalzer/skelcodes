{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n\r\npragma experimental ABIEncoderV2;\r\ncontract CYFSApply is Ownable {\r\n    struct ApplyInfo {\r\n        string email;\r\n        string desc;\r\n        string phone;\r\n        uint balance;\r\n        bool select;\r\n        bool refund;\r\n        address addr;\r\n    }\r\n    \r\n    mapping(address => ApplyInfo) public applyList;\r\n    address[] userList;\r\n    address centre;\r\n    \r\n    function setCentre(address c) public onlyOwner {\r\n        centre = c;\r\n    }\r\n    \r\n    function getCentre() public view returns (address){\r\n        return centre;\r\n    }\r\n    \r\n    function apply(string email, string phone, string desc, address addr) public payable {\r\n        require(applyList[addr].balance == 0);\r\n        require(centre == msg.sender);\r\n\r\n        uint256 _codeLength;\r\n        \r\n        assembly {_codeLength := extcodesize(addr)}\r\n        require(_codeLength == 0, \"sorry humans only\");\r\n\r\n        applyList[addr] = ApplyInfo({ \r\n            email: email, \r\n            desc: desc, \r\n            phone: phone, \r\n            balance: \r\n            msg.value, \r\n            select: false, \r\n            addr: addr,\r\n            refund: false\r\n        });\r\n        userList.push(addr);\r\n    }\r\n\r\n    function getApply(address addr) public view returns (ApplyInfo) {\r\n        return applyList[addr];\r\n    }\r\n    \r\n    function select(address[] addr, bool sel) public onlyOwner {\r\n        for (uint i = 0; i < addr.length; i++) {\r\n            require(applyList[addr[i]].balance > 0);\r\n            applyList[addr[i]].select = sel;    \r\n        }\r\n    }\r\n    \r\n    function refund(uint fee) public onlyOwner {\r\n        for (uint i = 0; i < userList.length; i++) {\r\n            ApplyInfo storage applyInfo = applyList[userList[i]];\r\n            if (!applyInfo.refund) {\r\n                applyInfo.refund = true;\r\n\r\n                if (applyInfo.select) { \r\n                    applyInfo.addr.transfer(applyInfo.balance - fee);\r\n                    applyInfo.balance = fee;\r\n                } else {\r\n                    if (applyInfo.balance > 0) {\r\n                        applyInfo.addr.transfer(applyInfo.balance);\r\n                        applyInfo.balance = 0;\r\n                    }\r\n                    \r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    function withdraw() public onlyOwner {\r\n        uint balance = 0;\r\n        for (uint i = 0; i < userList.length; i++) {\r\n            ApplyInfo storage applyInfo = applyList[userList[i]];\r\n            balance = balance + applyInfo.balance;\r\n            applyInfo.balance = 0;\r\n        }\r\n        if (balance > 0) {\r\n            owner.transfer(balance);\r\n        }\r\n        \r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"c\",\"type\":\"address\"}],\"name\":\"setCentre\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"applyList\",\"outputs\":[{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"desc\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"balance\",\"type\":\"uint256\"},{\"name\":\"select\",\"type\":\"bool\"},{\"name\":\"refund\",\"type\":\"bool\"},{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"desc\",\"type\":\"string\"},{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"apply\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address[]\"},{\"name\":\"sel\",\"type\":\"bool\"}],\"name\":\"select\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCentre\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getApply\",\"outputs\":[{\"components\":[{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"desc\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"balance\",\"type\":\"uint256\"},{\"name\":\"select\",\"type\":\"bool\"},{\"name\":\"refund\",\"type\":\"bool\"},{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"CYFSApply","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://747026cd364722ae7bfa3b311e17894a0d4993af08ee3c2c810168de5dfd74dd"}]}