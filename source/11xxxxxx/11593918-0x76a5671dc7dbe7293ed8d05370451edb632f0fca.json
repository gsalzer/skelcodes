{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: agpl-3.0\r\npragma solidity 0.7.6;\r\npragma abicoder v2;\r\n\r\ninterface IProposalExecutor {\r\n  function execute() external;\r\n}\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\r\n */\r\ninterface IERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address account) external view returns (uint256);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IProxyWithAdminActions {\r\n  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable;\r\n\r\n  function changeAdmin(address newAdmin) external;\r\n}\r\n\r\ninterface IAaveDistributionManager {\r\n  struct AssetConfigInput {\r\n    uint128 emissionPerSecond;\r\n    uint256 totalStaked;\r\n    address underlyingAsset;\r\n  }\r\n\r\n  function configureAssets(AssetConfigInput[] calldata assetsConfigInput) external;\r\n}\r\n\r\ninterface IAaveReserveImpl {\r\n  function initialize(address reserveController) external;\r\n  function approve(IERC20 token, address recipient, uint256 amount) external;\r\n  function transfer(IERC20 token, address recipient, uint256 amount) external;\r\n}\r\n\r\ninterface IControllerAaveEcosystemReserve {\r\n    function approve(\r\n    IERC20 token,\r\n    address recipient,\r\n    uint256 amount\r\n  ) external;\r\n\r\n  function transfer(\r\n    IERC20 token,\r\n    address recipient,\r\n    uint256 amount\r\n  ) external;\r\n}\r\n\r\ncontract UpdateStakedAavePayload is IProposalExecutor {\r\n  event ProposalExecuted();\r\n\r\n  address public constant AAVE_TOKEN = 0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9;\r\n  IAaveDistributionManager public constant STK_AAVE_TOKEN = IAaveDistributionManager(0x4da27a545c0c5B758a6BA100e3a049001de870f5);\r\n  IProxyWithAdminActions public constant AAVE_RESERVE_PROXY = IProxyWithAdminActions(\r\n    0x25F2226B597E8F9514B3F68F00f494cF4f286491\r\n  );\r\n  IControllerAaveEcosystemReserve public constant CONTROLLER_AAVE_RESERVE = IControllerAaveEcosystemReserve(0x1E506cbb6721B83B1549fa1558332381Ffa61A93);\r\n  IAaveReserveImpl public constant AAVE_RESERVE_IMPL = IAaveReserveImpl(0x4e63bAe58c91407C442cD8b129B62d056916151a);\r\n\r\n  uint256 public constant NEW_ALLOWANCE = 70_000 ether;\r\n  \r\n  /// @dev New emission per second approved by the Aave community: 550 AAVE/day\r\n  uint128 public constant NEW_EMISSION_PER_SECOND = 0.006365740740740741 ether;\r\n\r\n  function execute() external override {\r\n    bytes memory aaveReserveInitParams = abi.encodeWithSelector(\r\n      AAVE_RESERVE_IMPL.initialize.selector,\r\n      address(CONTROLLER_AAVE_RESERVE)\r\n    );\r\n    AAVE_RESERVE_PROXY.upgradeToAndCall(address(AAVE_RESERVE_IMPL), aaveReserveInitParams);\r\n    CONTROLLER_AAVE_RESERVE.approve(IERC20(AAVE_TOKEN), address(STK_AAVE_TOKEN), NEW_ALLOWANCE);\r\n    \r\n    IAaveDistributionManager.AssetConfigInput[] memory config = new IAaveDistributionManager.AssetConfigInput[](\r\n      1\r\n    );\r\n    config[0] = IAaveDistributionManager.AssetConfigInput({\r\n      emissionPerSecond: NEW_EMISSION_PER_SECOND,\r\n      totalStaked: IERC20(address(STK_AAVE_TOKEN)).totalSupply(),\r\n      underlyingAsset: address(STK_AAVE_TOKEN)\r\n    });\r\n    \r\n    STK_AAVE_TOKEN.configureAssets(config);\r\n\r\n    emit ProposalExecuted();\r\n  }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AAVE_RESERVE_IMPL\",\"outputs\":[{\"internalType\":\"contract IAaveReserveImpl\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AAVE_RESERVE_PROXY\",\"outputs\":[{\"internalType\":\"contract IProxyWithAdminActions\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AAVE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONTROLLER_AAVE_RESERVE\",\"outputs\":[{\"internalType\":\"contract IControllerAaveEcosystemReserve\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NEW_ALLOWANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NEW_EMISSION_PER_SECOND\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STK_AAVE_TOKEN\",\"outputs\":[{\"internalType\":\"contract IAaveDistributionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"UpdateStakedAavePayload","CompilerVersion":"v0.7.6+commit.7338295f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"Unknown","Proxy":"0","Implementation":"","SwarmSource":"ipfs://2ebc8b6138a09207b14f27be3b87a7f3baf9193c773b7fdc493fc9c686d6c475"}]}