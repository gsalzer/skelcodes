{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract Governance {\r\n\r\n    address public _governance;\r\n    bool  public isOpen;\r\n    constructor() public {\r\n        _governance = tx.origin;\r\n    }\r\n\r\n    event GovernanceTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    modifier onlyGovernance {\r\n        require(msg.sender == _governance, \"not governance\");\r\n        _;\r\n    }\r\n\r\n    function setGovernance(address governance)  public  onlyGovernance\r\n    {\r\n        require(governance != address(0), \"new governance the zero address\");\r\n        emit GovernanceTransferred(_governance, governance);\r\n        _governance = governance;\r\n    }\r\n\r\n\r\n}\r\n\r\ncontract Count is Governance{\r\n    mapping(address=>bool) set_pool;\r\n    mapping(address=>address) user_pool;\r\n    mapping(address=>bool) isPlayaddress;\r\n    mapping(string=>bool) name_set;\r\n    modifier onlyPlayAddress(){\r\n        require(isPlayaddress[msg.sender],\"not Playaddress\");\r\n        _;\r\n    }\r\n    function is_Re(address user,string memory name) view public onlyPlayAddress returns(bool){\r\n        return set_pool[user]||name_set[name];\r\n    }\r\n    \r\n    function is_Re(address user) view public onlyPlayAddress returns(bool){\r\n        return set_pool[user];\r\n    }\r\n    \r\n    function add_PlyAddress(address ply) onlyGovernance public {\r\n        isPlayaddress[ply] = true;\r\n    }\r\n    \r\n    function remove_PlyAddress(address ply) onlyGovernance public {\r\n        isPlayaddress[ply] = false;\r\n    }\r\n    \r\n    \r\n    function set_user_isRe(address user,address pool,string memory name) public onlyPlayAddress {\r\n        user_pool[user] = pool;\r\n        set_pool[user] = true;\r\n        name_set[name] = true;\r\n    }\r\n    \r\n    modifier is_open(){\r\n        require(isOpen==true || msg.sender==_governance);\r\n        _;\r\n    }\r\n    \r\n    function Open_() public onlyGovernance{\r\n        isOpen = !isOpen;\r\n    }\r\n    \r\n    function get_Address_pool(address user) view public is_open returns(address){\r\n        return user_pool[user];\r\n    }\r\n    \r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"GovernanceTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"Open_\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"ply\",\"type\":\"address\"}],\"name\":\"add_PlyAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"get_Address_pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"is_Re\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"is_Re\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"ply\",\"type\":\"address\"}],\"name\":\"remove_PlyAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"set_user_isRe\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Count","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://13b1bf1d04dd067cfb70e5da983074ade3af1f83247844cd415d18cbe8ca7d53"}]}