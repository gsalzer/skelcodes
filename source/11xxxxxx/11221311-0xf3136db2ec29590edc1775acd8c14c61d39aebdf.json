{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.17;\r\n\r\ncontract Permissions {\r\n\r\n  mapping (address=>bool) public permits;\r\n\r\n// all events will be saved as log files\r\n  event AddPermit(address _addr);\r\n  event RemovePermit(address _addr);\r\n\r\n  constructor() public {\r\n    permits[msg.sender] = true;\r\n  }\r\n\r\n  \r\n  modifier onlyPermits(){\r\n    require(permits[msg.sender] == true);\r\n    _;\r\n  }\r\n\r\n  function isPermit(address _addr) public view returns(bool){\r\n    return permits[_addr];\r\n  }\r\n\r\n  function addPermit(address _addr) public onlyPermits{\r\n    require(permits[_addr] == false);\r\n    permits[_addr] = true;\r\n    emit AddPermit(_addr);\r\n  }\r\n\r\n\r\n\r\n  function removePermit(address _addr) public onlyPermits{\r\n    require(_addr != msg.sender);\r\n    permits[_addr] = false;\r\n    emit RemovePermit(_addr);\r\n  }\r\n  \r\n\r\n\r\n}\r\n\r\n\r\ncontract ERC20 {\r\n\r\n      function totalSupply() public view returns(uint256);\r\n      function balanceOf(address tokenOwner) public view returns (uint256 balance);\r\n      function transfer(address to, uint256 tokens) public returns (bool success);\r\n      function transferFrom(address from, address to, uint256 tokens) public returns (bool success);\r\n      function decimals() public view returns(uint256);\r\n      function intTransfer(address _from, address _to, uint256 _amount) public returns(bool);\r\n }\r\n \r\n// ERC20 TOOLS For send all SZxxxToken\r\n\r\n contract SZToken is Permissions{\r\n    uint256 public version = 1;\r\n    string public name     = \"szTokenHelpTransfer\";\r\n    string public symbol   = \"szTokens\";\r\n    uint8  public decimals = 18;\r\n    string public company  = \"ShuttleOne Pte Ltd\";\r\n    \r\n    address public coldWallet = 0x186509E7959dda993Cd25fa4bde171b430F66748;\r\n\r\n    mapping(address=>bool) disToken;\r\n    address[] public allowTokens;\r\n     \r\n    mapping(address=>bool) disPools;\r\n    address[] public allowPools;\r\n    \r\n    event  Approval(address indexed _tokenOwner, address indexed _spender, uint256 _amount);\r\n    event  Transfer(address indexed _from, address indexed _to, uint256 _amount);\r\n     \r\n     constructor() public{\r\n        allowTokens.push(0xA298508BaBF033f69B33f4d44b5241258344A91e); // szUSDT\r\n        allowTokens.push(0xd80BcbbEeFE8225224Eeb71f4EDb99e64cCC9c99); // szDAI\r\n        allowTokens.push(0x55b123B169400Da201Dd69814BAe2B8C2660c2Bf); // szUSDC\r\n     }\r\n     \r\n     \r\n     \r\n     function addAllowToken(address _addr) public onlyPermits returns(bool){\r\n         allowTokens.push(_addr);\r\n         return true;\r\n     }\r\n     \r\n     function setDisableToken(address _addr,bool _set) public onlyPermits returns(bool){\r\n         disToken[_addr] = _set;\r\n         return true;\r\n     }\r\n\r\n    function setColdWallet(address _addr) public onlyPermits{\r\n        coldWallet = _addr;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint) {\r\n          uint256 _totalSupply;  \r\n         for(uint256 i=0;i<allowTokens.length;i++){\r\n             if(disToken[allowTokens[i]] == false){\r\n                 _totalSupply += ERC20(allowTokens[i]).totalSupply();\r\n             }\r\n         }\r\n         return _totalSupply;\r\n    }\r\n\r\n     function balanceOf(address _addr) public view returns(uint256){\r\n         uint256 sumBalance;  \r\n         for(uint256 i=0;i<allowTokens.length;i++){\r\n             if(disToken[allowTokens[i]] == false){\r\n                 sumBalance += ERC20(allowTokens[i]).balanceOf(_addr);\r\n             }\r\n         }\r\n         return sumBalance;\r\n     }\r\n     \r\n     function _transfer(address _from,address _to,uint256 _amount) internal returns (bool){\r\n         \r\n         uint256 sumAmount = _amount;\r\n         ERC20 _szToken;\r\n         \r\n         for(uint256 i=0;i<allowTokens.length;i++){\r\n             if(disToken[allowTokens[i]] == false){\r\n                 _szToken = ERC20(allowTokens[i]);\r\n                 if(_szToken.balanceOf(_from) >= sumAmount){\r\n                    _szToken.intTransfer(_from,_to,sumAmount);\r\n                    return true;\r\n                 }\r\n                 else\r\n                 {\r\n                     uint256 _tranAmount = _szToken.balanceOf(_from);\r\n                     _szToken.intTransfer(_from,_to,_tranAmount);\r\n                     sumAmount -= _tranAmount;\r\n                 }\r\n             }\r\n         }\r\n         \r\n         return false; \r\n\r\n     }\r\n         \r\n    function transfer(address _to, uint256 _amount) public returns (bool) {\r\n        require(_to != address(0),\"ERROR-transfer-addr-0\");\r\n        require(_transfer(msg.sender,_to,_amount) == true,\"ERROR-out-of-balance-transfer\");\r\n        emit Transfer(msg.sender,_to,_amount);\r\n        \r\n        return true;\r\n    }\r\n    \r\n\r\n    \r\n    function intTransfer(address _from, address _to, uint256 _amount) public onlyPermits returns(bool){\r\n           require(_to != address(0),\"ERROR-intran-addr0\");\r\n           require(_transfer(_from,_to,_amount) == true,\"ERROR-out-of-balance-transfer\");\r\n           \r\n           emit Transfer(_from,_to,_amount);\r\n           return true;\r\n    }\r\n    \r\n    function intTransferWithFee(address _from, address _to, uint256 _value,uint256 _fee) public onlyPermits returns(bool){\r\n             require(_to != address(0),\"ERROR _to = ADDRESS 0\");\r\n             require(_value > _fee,\"ERROR _value > _fee\");    \r\n             require(coldWallet != address(0),\"ERROR NO COLD WALLET\");\r\n             require(balanceOf(_from) >= _value,\"ERROR Out of fund\");\r\n             \r\n             \r\n             require(_transfer(_from,_to,_value - _fee) == true,\"ERROR-out-of-balance-transfer\");\r\n             require(_transfer(_from,coldWallet,_fee) == true,\"ERROR-out-of-fee-transfer\");\r\n             \r\n    \r\n            emit Transfer(_from,_to,_value);\r\n            emit Transfer(_to,msg.sender,_fee);\r\n    \r\n            return true;\r\n    }\r\n    \r\n     \r\n }","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"AddPermit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"RemovePermit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addAllowToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addPermit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coldWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"company\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"intTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"intTransferWithFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isPermit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"permits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"removePermit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setColdWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_set\",\"type\":\"bool\"}],\"name\":\"setDisableToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"SZToken","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://6e7964202c52e8a4552722ee36540a03ba1a7b6bbdd9bbdfc5436975108c6ce7"}]}