{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.11;\r\n\r\ncontract NamedForwarder {\r\n\r\n    mapping(bytes32 => uint256) public _userBalances;\r\n    mapping(bytes32 => address) public _usersByAddress;\r\n    mapping(address => bool) public _oracles;\r\n    address internal owner;\r\n\r\n    event DepositEvent(address from, bytes32 to, uint256 value);\r\n    event WithdrawEvent(bytes32 from, address to, uint256 value);\r\n\r\n    modifier onlyOwner {\r\n        require(owner == msg.sender, \"Only the owner of this contract can perform this action\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyOracles {\r\n        require(_oracles[msg.sender], \"Only oracles can confirm operations.\");\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        _oracles[owner] = true;\r\n    }\r\n\r\n    function enableOracle(address oracle) external onlyOwner {\r\n        _oracles[oracle] = true;\r\n    }\r\n\r\n    function disableOracle(address oracle) external onlyOwner {\r\n        require(_oracles[oracle], \"Oracle does not exists.\");\r\n        require(oracle != owner, \"Owner oracle can not be removed.\");\r\n        _oracles[oracle] = false;\r\n    }\r\n\r\n    function deposit(bytes32 account) external payable {\r\n        require(msg.value > 0, \"No ether sent.\");\r\n        _userBalances[account] += msg.value;\r\n        emit DepositEvent(msg.sender, account, msg.value);\r\n    }\r\n\r\n    function withdraw(bytes32 account) external {\r\n        require(_usersByAddress[account] == msg.sender, \"You can not withdraw for this account\");\r\n        require(_userBalances[account] > 0, \"There is nothing to withdraw\");\r\n        payable(_usersByAddress[account]).transfer(_userBalances[account]);\r\n        emit WithdrawEvent(account, _usersByAddress[account], _userBalances[account]);\r\n        _userBalances[account] = 0;\r\n    }\r\n\r\n    function approveAddress(address wallet, bytes32 account) external onlyOracles {\r\n        _usersByAddress[account] = wallet;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"DepositEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"from\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"WithdrawEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_oracles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_userBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_usersByAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"}],\"name\":\"approveAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"disableOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"enableOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"NamedForwarder","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://c66ac997f233da7013cca07ce0cd33889e84100808a3bd71a397c0a7922f97f4"}]}