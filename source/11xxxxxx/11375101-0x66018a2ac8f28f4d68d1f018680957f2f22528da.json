{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.2;\r\n\r\n/**\r\n* @title Proxy \r\n* @dev Etherland - ERC1822 Proxy contract implementation\r\n* @dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1822.md\r\n*/\r\ncontract Proxy {\r\n    constructor(bytes memory constructData, address contractLogic) public {\r\n        assembly { \r\n            sstore(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7, contractLogic)\r\n        }\r\n        (bool success, bytes memory _ ) = contractLogic.delegatecall(constructData); \r\n        require(success, \"Construction failed\");\r\n    }\r\n\r\n    fallback() external payable {\r\n        assembly { \r\n            let contractLogic := sload(0xc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7)\r\n            calldatacopy(0x0, 0x0, calldatasize())\r\n            let success := delegatecall(sub(gas(), 10000), contractLogic, 0x0, calldatasize(), 0, 0)\r\n            let retSz := returndatasize()\r\n            returndatacopy(0, 0, retSz)\r\n            switch success\r\n            case 0 {\r\n                revert(0, retSz)\r\n            }\r\n            default {\r\n                return(0, retSz)\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"constructData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"contractLogic\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Proxy","CompilerVersion":"v0.6.2+commit.bacdbe57","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000400000000000000000000000005f05b9535a7acca6fe8d0a35667aece4f27c17b70000000000000000000000000000000000000000000000000000000000000184faa0650b00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000a5409ec958c83c3f309868babaca7c86dcb077c100000000000000000000000000000000000000000000000000000000000001200000000000000000000000007640abeb029a856d3104df93f13536e20cb00d7c000000000000000000000000000000000000000000000000000000000000000945746865726c616e64000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064c414e4449440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002e68747470733a2f2f6669656c64636f696e2d6e66742e6865726f6b756170702e636f6d2f6170692f746f6b656e2f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"1","Implementation":"0x5f05b9535a7acca6fe8d0a35667aece4f27c17b7","SwarmSource":"ipfs://f00996f8349faeb6b3448379020b6040784157c0bfaf1c8abb0201ecefcde790"}]}