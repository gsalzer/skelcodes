{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2020-09-22\r\n*/\r\n\r\npragma solidity ^0.5.0;\r\n\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// ---------------------FSI - an indepedent fork based on YFI technology. ----------------\r\n// -----------------------------Official website : fansi.finance----------------\r\n// ----------------------------------------------------------------------------\r\n\r\ninterface IERC20 {\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    function approve(address _spender, uint256 _value) external returns (bool success);\r\n\r\n    function transfer(address _to, uint256 _value) external returns (bool success);\r\n\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    ) external returns (bool success);\r\n\r\n    function allowance(address _owner, address _spender) external view returns (uint256 remaining);\r\n\r\n    function balanceOf(address _owner) external view returns (uint256 balance);\r\n\r\n    function decimals() external view returns (uint8 digits);\r\n\r\n    function totalSupply() external view returns (uint256 supply);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Safe Math Library \r\n// ----------------------------------------------------------------------------\r\ncontract SafeMath {\r\n    function safeAdd(uint a, uint b) public pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function safeSub(uint a, uint b) public pure returns (uint c) {\r\n        require(b <= a); \r\n        c = a - b; \r\n    } \r\n    function safeMul(uint a, uint b) public pure returns (uint c) { \r\n        c = a * b; \r\n        require(a == 0 || c / a == b); \r\n    } \r\n    function safeDiv(uint a, uint b) public pure returns (uint c) { \r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\ncontract Sale {\r\n    uint256 public rate;\r\n    address public admin;\r\n    bool public saleStatus;\r\n    IERC20 token;\r\n    \r\n    event TkSale(\r\n        uint256 indexed ethWeiValue,\r\n        uint256 indexed rate\r\n    );\r\n\r\n    constructor(IERC20 _token, uint256 _rate) public {\r\n        token = _token;\r\n        rate = _rate;\r\n        saleStatus = true;\r\n        admin = msg.sender;\r\n    }\r\n    \r\n    modifier onlyAdmin() {\r\n        require(\r\n            msg.sender == admin,\r\n            \"Only admin can do this.\"\r\n        );\r\n        _;\r\n    }\r\n    \r\n    modifier saleEnable() {\r\n        require (\r\n            saleStatus,\r\n            \"TK Sale is off\"\r\n        );\r\n        _;\r\n    }\r\n    \r\n    // @dev Fallback payable function\r\n    function() external payable {}\r\n    \r\n    function buyTk(uint256 amount) \r\n        external\r\n        payable \r\n        returns (uint256)\r\n    {\r\n        require(msg.value == amount);\r\n        uint256 tokenAmount = amount * rate;\r\n        require(tokenAmount < token.balanceOf(address(this)), 'out of order');\r\n        \r\n        token.transfer(msg.sender, tokenAmount);\r\n        \r\n        emit TkSale({\r\n            ethWeiValue: amount,\r\n            rate: rate\r\n        });\r\n        \r\n        return tokenAmount;\r\n    }\r\n    \r\n    function setRate(uint256 _rate)\r\n    external\r\n    onlyAdmin\r\n    {\r\n        rate = _rate;\r\n    }\r\n    \r\n    function setSaleStatus(bool _status)\r\n    external\r\n    onlyAdmin\r\n    {\r\n        saleStatus = _status;\r\n    }\r\n    \r\n    function withdrawEther(uint amount, address payable sendTo) \r\n    external \r\n    onlyAdmin \r\n    {\r\n        sendTo.transfer(amount);\r\n    }\r\n    \r\n    function withdrawToken(uint amount, address to)\r\n    external\r\n    onlyAdmin\r\n    {\r\n        token.transfer(to, amount);\r\n    }\r\n    \r\n    function changeAdmin(address _admin)\r\n    external\r\n    onlyAdmin\r\n    {\r\n        admin = _admin;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ethWeiValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"TkSale\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTk\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"setSaleStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"sendTo\",\"type\":\"address\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Sale","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000009cda197309d603a63c8c6ef21a1457de2f872f63000000000000000000000000000000000000000000000000000000000000015e","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://edd646e3b92d2dba364bfc9d6d326a9c8ced934d00f3cc837b7c23ec6c7d69e6"}]}