{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma experimental ABIEncoderV2;\r\npragma solidity ^0.6.0;\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract wonderful_3day {\r\n    using SafeMath for uint256;\r\n    address public manager;\r\n    address public bidAddress;\r\n    address payable public feeAddress;\r\n    uint256 public fee = 10; // default 10\r\n    uint256 public day = 3 days;\r\n    uint256 public rechargeTime;\r\n    uint256 public minAmount = 0.1 ether;\r\n    uint256 public percentage = 900;\r\n    uint256 public totalUsers;\r\n    bool public ISEND;\r\n    \r\n    struct RechargeInfo{\r\n        address rec_addr;\r\n        uint256 rec_value;\r\n        uint256 rec_time;\r\n    }\r\n    RechargeInfo[] public rechargeAddress;\r\n    struct UserInfo {\r\n\t\taddress   referrer;   \r\n        address[] directPush; \r\n        uint256 amountWithdrawn;\r\n        uint256 depositTime;\r\n    }\r\n    mapping(address => UserInfo) public user;\r\n    mapping(address => uint256) public balance;\r\n    mapping(address => mapping(address => bool)) public userDireMap;\r\n    \r\n    constructor(address bid)public{\r\n        manager = msg.sender;\r\n        bidAddress = bid;\r\n    }\r\n\r\n    function deposit(address referrer) payable public {\r\n        require(msg.value > 0 && isTime() == false && msg.value >= minAmount);\r\n        uint256 fees = msg.value.div(fee);\r\n        if(address(this).balance >= fees){\r\n            feeAddress.transfer(fees);\r\n        }\r\n        UserInfo storage u = user[msg.sender];\r\n\t\tif (u.referrer == address(0)) {\r\n\t\t    if (referrer != msg.sender){\r\n\t\t        u.referrer = referrer;\r\n\t\t    }else{\r\n\t\t        u.referrer = bidAddress;\r\n\t\t    }\r\n\t\t    if (userDireMap[u.referrer][msg.sender] == false){\r\n                user[u.referrer].directPush.push(msg.sender);\r\n                userDireMap[u.referrer][msg.sender] = true;\r\n            }\r\n\t\t}\r\n\t\t\r\n\t\tif (balance[msg.sender] == 0){\r\n\t\t    totalUsers = totalUsers.add(1);\r\n\t\t    u.depositTime = now;\r\n\t\t}\r\n\t\t\r\n\t\tbalance[msg.sender] = balance[msg.sender].add(msg.value);\r\n\t\trechargeAddress.push(RechargeInfo({rec_addr:msg.sender,rec_value:msg.value,rec_time:block.timestamp}));\r\n\t\trechargeTime = block.timestamp;\r\n    }\r\n\r\n    function withdraw(uint256 value) public {\r\n        require(value > 0);\r\n        uint256 count = getIncome(msg.sender);\r\n        require(count >= value,\"Not enough quota\");\r\n        msg.sender.transfer(value);\r\n        user[msg.sender].amountWithdrawn = user[msg.sender].amountWithdrawn.add(value);\r\n    }\r\n    \r\n    function getPoolETH() view public returns(uint256){\r\n        return address(this).balance;\r\n    }\r\n    \r\n    function getRecTotal() view public returns(uint256){\r\n        return rechargeAddress.length;\r\n    }\r\n    \r\n    function getRec10() view public returns(RechargeInfo[] memory){\r\n        uint256 l = rechargeAddress.length;\r\n        uint256 a = 0;\r\n        uint256 i = 0;\r\n        if (rechargeAddress.length>10){\r\n            l = 10;\r\n            a = rechargeAddress.length.sub(10);\r\n        }\r\n        RechargeInfo[] memory data = new RechargeInfo[](l);\r\n        for (;a < rechargeAddress.length; a++){\r\n            data[i] = rechargeAddress[a];\r\n            i = i+1;\r\n        }\r\n        return data;\r\n    }\r\n    \r\n    function distribution72() public {\r\n        if (isTime() == true && ISEND == false){\r\n            uint256 a = 0;\r\n            if (rechargeAddress.length>10){\r\n                a = rechargeAddress.length.sub(10);\r\n            }\r\n            uint256 total = (address(this).balance.mul(percentage)).div(uint256(1000));\r\n            for (;a < rechargeAddress.length; a++){\r\n                payable(rechargeAddress[a].rec_addr).transfer(total.div(10));\r\n            }\r\n            ISEND = true;\r\n        }\r\n    }\r\n    \r\n    function isTime()view public returns(bool) {\r\n        if ((block.timestamp.sub(rechargeTime)) >= day && rechargeTime != 0){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    function directPushMultiple(address addr) view public isAddress(addr) returns(uint256) {\r\n        if(balance[addr] == 0){\r\n            return 0;\r\n        }\r\n        return ((getDirectTotal(addr).add(getInterest(addr))).add(getInterest(addr))).div(balance[addr]);\r\n    }\r\n    \r\n    function getMaxIncome(address addr) view public isAddress(addr) returns(uint256){\r\n        return (getDirectTotal(addr).add(getInterest(addr))).sub(user[addr].amountWithdrawn);\r\n    }\r\n    \r\n    function getIncome(address addr) view public isAddress(addr) returns(uint256){\r\n        uint256 multiple = directPushMultiple(addr);\r\n        if (multiple < 3){\r\n            return 0;\r\n        }\r\n        return (balance[addr].mul(3).sub(user[addr].amountWithdrawn));\r\n    }\r\n\r\n    function additionalThrow(address addr) view public isAddress(addr) returns(uint256){\r\n        uint256 multiple = directPushMultiple(addr);\r\n        if (multiple < 3){\r\n            return 0;\r\n        }\r\n        return ((getDirectTotal(addr).add(getInterest(addr))).sub(user[addr].amountWithdrawn).sub(getIncome(addr))).div(3);\r\n    }\r\n    \r\n    function numberWithdrawn(address addr) view public isAddress(addr) returns(uint256) {\r\n        return user[addr].amountWithdrawn;\r\n    }\r\n\r\n    function getDirectTotal(address addr) view public isAddress(addr) returns(uint256) {\r\n        UserInfo memory u = user[addr];\r\n        if (u.directPush.length == 0){return (0);}\r\n        uint256 total;\r\n        for (uint256 i= 0; i<u.directPush.length;i++){\r\n            total = total.add(balance[u.directPush[i]]).add(getDirectTotal2(u.directPush[i]));\r\n        }\r\n        return (total);\r\n    }\r\n    \r\n    function getDirectTotal2(address addr) view public isAddress(addr) returns(uint256) {\r\n        UserInfo memory u = user[addr];\r\n        if (u.directPush.length == 0){return (0);}\r\n        uint256 total;\r\n        for (uint256 i= 0; i<u.directPush.length;i++){\r\n            total += balance[u.directPush[i]];\r\n        }\r\n        return (total);\r\n    }\r\n    \r\n    function getIndirectTotal(address addr) view public isAddress(addr) returns(uint256){\r\n        return getDirectTotal(addr).sub(getDirectTotal2(addr));\r\n    }\r\n    \r\n    function getDirectLength(address addr) view public isAddress(addr) returns(uint256){\r\n        return user[addr].directPush.length;\r\n    }\r\n    \r\n    function getIndirectLength(address addr) view public isAddress(addr) returns(uint256){\r\n        UserInfo memory u = user[addr];\r\n        if (u.directPush.length == 0){return (0);}\r\n        uint256 total;\r\n        for (uint256 i= 0; i<u.directPush.length;i++){\r\n            total = total.add(getDirectLength(u.directPush[i]));\r\n        }\r\n        return (total);\r\n    }\r\n    \r\n    function getInterest(address addr)view public returns(uint256){\r\n        uint256 inter = balance[addr].mul(3).div(1000);\r\n        uint256 d = (now.sub(user[addr].depositTime)).div(1 days);\r\n        return inter.mul(d);\r\n    }\r\n    \r\n    function ownerWitETH() public onlyOwner{\r\n        require(ISEND == true);\r\n        msg.sender.transfer(getPoolETH());\r\n    }\r\n    \r\n    function ownerTransfer(address newOwner) public onlyOwner isAddress(newOwner) {\r\n        manager = newOwner;\r\n    }\r\n    \r\n    function ownerSetFeeAddress(address payable feeAddr) public onlyOwner isAddress(feeAddr) {\r\n        feeAddress = feeAddr;\r\n    }\r\n    \r\n    function ownerSetFee(uint256 value) public onlyOwner{\r\n        require(value > 0);\r\n        fee = value;\r\n    }\r\n    \r\n    function ownerSetMinAmount(uint256 min) public onlyOwner{\r\n        require(min >= 0);\r\n        minAmount = min;\r\n    }\r\n    \r\n    modifier isAddress(address addr) {\r\n        require(addr != address(0));\r\n        _;\r\n    }\r\n    \r\n    modifier onlyOwner {\r\n        require(manager == msg.sender);\r\n        _;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bid\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ISEND\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"additionalThrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bidAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"day\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"directPushMultiple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distribution72\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getDirectLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getDirectTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getDirectTotal2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getIndirectLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getIndirectTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getMaxIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRec10\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"rec_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rec_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rec_time\",\"type\":\"uint256\"}],\"internalType\":\"struct wonderful_3day.RechargeInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"numberWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ownerSetFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"feeAddr\",\"type\":\"address\"}],\"name\":\"ownerSetFeeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"}],\"name\":\"ownerSetMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerWitETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rechargeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rec_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rec_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rec_time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rechargeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"user\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userDireMap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"wonderful_3day","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000456dc7246131a3ecde2e60e7556a363edf47f294","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://1e58bc858be83a6f809a77df62fdf92c11dae6db91d313fc84c6be25da3c7203"}]}