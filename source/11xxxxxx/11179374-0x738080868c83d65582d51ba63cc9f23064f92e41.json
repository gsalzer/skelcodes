{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.6.12;\r\n\r\ninterface IController {\r\n    function harvestStrategy(address _strategy) external;\r\n}\r\n\r\ninterface IStrategy {\r\n    function harvest() external;\r\n}\r\n\r\ncontract yAxisMetaVaultStrategists {\r\n    address public governance;\r\n\r\n    IController public controller;\r\n    IStrategy public strategy;\r\n\r\n    mapping(address => bool) public isStrategist;\r\n\r\n    constructor() public {\r\n        governance = msg.sender;\r\n        isStrategist[governance] = true;\r\n    }\r\n\r\n    function setGovernance(address _governance) external {\r\n        require(msg.sender == governance, \"!governance\");\r\n        governance = _governance;\r\n    }\r\n\r\n    function addStrategist(address _strategist) public {\r\n        require(msg.sender == governance, \"!governance\");\r\n        isStrategist[_strategist] = true;\r\n    }\r\n\r\n    function removeStrategist(address _strategist) public {\r\n        require(msg.sender == governance, \"!governance\");\r\n        isStrategist[_strategist] = false;\r\n    }\r\n\r\n    function setController(IController _controller) external {\r\n        require(msg.sender == governance, \"!governance\");\r\n        controller = _controller;\r\n    }\r\n\r\n    function setStrategy(IStrategy _strategy) external {\r\n        require(msg.sender == governance, \"!governance\");\r\n        strategy = _strategy;\r\n    }\r\n\r\n    function harvestDefaultController() external {\r\n        harvestController(controller, address(strategy));\r\n    }\r\n\r\n    function harvestController(IController _controller, address _strategy) public {\r\n        require(isStrategist[msg.sender], \"!strategist\");\r\n        _controller.harvestStrategy(_strategy);\r\n    }\r\n\r\n    function harvestDefaultStrategy() external {\r\n        harvestStrategy(strategy);\r\n    }\r\n\r\n    function harvestStrategy(IStrategy _strategy) public {\r\n        require(isStrategist[msg.sender], \"!strategist\");\r\n        _strategy.harvest();\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategist\",\"type\":\"address\"}],\"name\":\"addStrategist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"contract IController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IController\",\"name\":\"_controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"harvestController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestDefaultController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestDefaultStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"harvestStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isStrategist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategist\",\"type\":\"address\"}],\"name\":\"removeStrategist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IController\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"setStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"yAxisMetaVaultStrategists","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://f902dd352f36a06cb9510abbe0c9dd3410505e871631849225dc50744e51d248"}]}