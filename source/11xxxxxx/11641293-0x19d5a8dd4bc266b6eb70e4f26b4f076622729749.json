{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2021-01-09\r\n*/\r\n\r\npragma solidity 0.6.0;\r\ncontract cryptoKey {\r\n    struct User {\r\n        uint256 id;\r\n        uint256 lastdepositId;\r\n    }\r\n    address payable public root;\r\n    uint256 public last_id;\r\n    uint256[] public levels;\r\n    mapping(address => User) public users;\r\n    mapping(uint256 => address payable) public users_ids;\r\n    address payable public owner;\r\n\r\n\r\n    constructor(address payable _root) public {\r\n        owner= msg.sender ;\r\n        root = _root;\r\n        _addUser(root);\r\n    }\r\n    modifier onlyOwner(){\r\n        require(msg.sender==owner,\"only owner can call! \");\r\n        _;\r\n    }\r\n    function drainETH(uint256 _amont)public payable onlyOwner{\r\n        msg.sender.transfer(_amont);\r\n    }   \r\n    function sendROI(address payable _receiver,uint256 _amont)public payable onlyOwner{\r\n      _receiver.transfer(_amont);\r\n    }\r\n    function _addUser(address payable _user) private {\r\n        users[_user].id = ++last_id;\r\n        users_ids[last_id] = _user;\r\n\r\n    }\r\n    function buyPackage() payable external {\r\n        require(msg.value%300000000000000000==0, \"Invalid amount\");\r\n        users[msg.sender].lastdepositId++;\r\n        _addUser(msg.sender);\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_root\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buyPackage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amont\",\"type\":\"uint256\"}],\"name\":\"drainETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"last_id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"root\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amont\",\"type\":\"uint256\"}],\"name\":\"sendROI\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastdepositId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users_ids\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"cryptoKey","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000efb312f5ea1047f02433bf3f9df74856d1e3dee9","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://6c8b6b497654b471d344fd03873dd82c4794afeb22b36434021708647fc43b84"}]}