{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/C/Users/user/Desktop/gamber/contracts/Gamber.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.1;\\n\\nstruct Payout {\\n\\taddress beneficiary;\\n\\tuint96 amount;\\n}\\n\\ncontract Gamber {\\n\\t\\n\\tuint256 public fee;\\n\\taddress public collector;\\n\\taddress public owner;\\n\\tuint192 public rate; // in 0.01%\\n\\tuint256 public lowerBound;\\n\\tuint256 public upperBound;\\t\\n\\tuint128 public first;\\n  uint128 public last;\\n\\tmapping(uint128 => Payout) public payouts;\\n\\tuint256 public balance;\\n\\n\\tconstructor() {\\n\\t\\towner = msg.sender;\\n\\t\\tcollector = msg.sender;\\n\\t\\tlowerBound =   30000000000000000;\\n\\t\\tupperBound = 1000000000000000000;\\n\\t\\trate = 2000;\\n\\t}\\n\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction setCollector(address newCollector) public onlyOwner {\\n\\t\\trequire(newCollector != address(0), \\\"New collector is the zero address\\\");\\n\\t\\tcollector = newCollector;\\n\\t}\\n\\n\\tevent RateChanged(uint192 rate);\\n\\n\\tfunction setRate(uint192 newRate) public onlyOwner {\\n\\t\\trequire(newRate > 0, \\\"Rate should be positive\\\");\\n\\t\\trate = newRate;\\n\\t\\temit RateChanged(rate);\\n\\t}\\n\\n\\tevent BoundsUpdated(uint256 lower, uint256 upper);\\n\\n\\tfunction setBounds(uint192 newLowerBound, uint192 newUpperBound) public onlyOwner {\\n\\t\\trequire(newUpperBound > newLowerBound, \\\"Upper bound should be greater than lower bound\\\");\\n\\t\\tupperBound = newUpperBound;\\n\\t\\tlowerBound = newLowerBound;\\n\\n\\t\\temit BoundsUpdated(lowerBound, upperBound);\\n\\t}\\n\\n\\tfunction setUpperBound(uint192 newUpperBound) public onlyOwner {\\n\\t\\trequire(newUpperBound > lowerBound, \\\"Upper bound should be greater than lower bound\\\");\\n\\t\\tupperBound = newUpperBound;\\n\\n\\t\\temit BoundsUpdated(lowerBound, upperBound);\\n\\t}\\n\\n\\tfunction setLowerBound(uint192 newLowerBound) public onlyOwner {\\n\\t\\trequire(newLowerBound < upperBound, \\\"Lower bound should be less than upper bound\\\");\\n\\t\\tlowerBound = newLowerBound;\\n\\n\\t\\temit BoundsUpdated(lowerBound, upperBound);\\n\\t}\\n\\n\\tevent Collected(uint256 amount);\\n\\n\\tfunction collect() public onlyOwner {\\n\\t\\trequire(fee > 0, \\\"Nothing to collect\\\");\\n\\t\\tpayable(collector).transfer(fee);\\n\\t\\temit Collected(fee);\\n\\t\\tfee = 0;\\n\\t}\\n\\n\\tevent Accepted(address sender, uint256 amount);\\n\\n\\tfunction accept(address sender, uint256 amount) internal {\\n\\t\\tfee += amount/10;\\n\\t\\tbalance += amount - amount/10;\\n\\t\\tif(amount >= lowerBound) {\\n\\t\\t\\tif(amount > upperBound) amount = upperBound;\\n\\t\\t\\temit Accepted(sender, amount);\\n\\t\\t\\tamount += amount*rate/10000;\\n\\t\\t\\tpayouts[last++] = Payout(sender, uint96(amount));\\n\\t\\t}\\n\\t}\\n\\n\\tevent Paid(address beneficiary, uint96 amount);\\n\\n\\tfunction pay(address beneficiary, uint96 amount) internal {\\n\\t\\tpayable(beneficiary).transfer(amount);\\n\\t\\tbalance -= amount;\\n\\t\\temit Paid(beneficiary, amount);\\n\\t}\\n\\n\\treceive() external payable {\\n\\t\\taccept(msg.sender, msg.value);\\t\\t\\n\\t\\twhile(balance > payouts[first].amount && payouts[first].beneficiary != address(0)) {\\n\\t\\t\\tpay(payouts[first].beneficiary, payouts[first].amount);\\n\\t\\t\\tdelete payouts[first++];\\n\\t\\t}\\n\\t}\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"evmVersion\": \"petersburg\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Accepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lower\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upper\",\"type\":\"uint256\"}],\"name\":\"BoundsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Collected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint192\",\"name\":\"rate\",\"type\":\"uint192\"}],\"name\":\"RateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"first\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"last\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lowerBound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"payouts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"newLowerBound\",\"type\":\"uint192\"},{\"internalType\":\"uint192\",\"name\":\"newUpperBound\",\"type\":\"uint192\"}],\"name\":\"setBounds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCollector\",\"type\":\"address\"}],\"name\":\"setCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"newLowerBound\",\"type\":\"uint192\"}],\"name\":\"setLowerBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"newRate\",\"type\":\"uint192\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"newUpperBound\",\"type\":\"uint192\"}],\"name\":\"setUpperBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"upperBound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Gamber","CompilerVersion":"v0.8.1+commit.df193b15","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"petersburg","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}