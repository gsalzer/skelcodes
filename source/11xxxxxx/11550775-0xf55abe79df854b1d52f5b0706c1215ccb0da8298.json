{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.16;\r\n\r\ncontract FDCDappAirdrop {\r\n\r\n  constructor()\r\n  public\r\n  {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  address private owner;\r\n\r\n  string private airdropVersion = \"v1\";\r\n\r\n  uint256 private DappReward = 1333400;\r\n\r\n  mapping (address => uint256) private airdropAddresses;\r\n\r\n  address private FDCContract=0x311C6769461e1d2173481F8d789AF00B39DF6d75;\r\n\r\n  function airdrop(address Address) public returns (bool) {\r\n\r\n    require(Address != address(0), \"Need to use a valid Address\");\r\n    require(airdropAddresses[Address] == 1, \"Address not valid or already got air drop\");\r\n\r\n    (bool successBalance, bytes memory dataBalance) = FDCContract.call(abi.encodeWithSelector(bytes4(keccak256(bytes('balanceOf(address)'))), address(this)));\r\n    require(successBalance, \"Freedom Dividend Coin air drop balanceOf failed.\");\r\n    uint256 rewardLeft = abi.decode(dataBalance, (uint256));\r\n\r\n    if (rewardLeft >= DappReward) {\r\n        (bool successTransfer, bytes memory dataTransfer) = FDCContract.call(abi.encodeWithSelector(bytes4(keccak256(bytes('transfer(address,uint256)'))), Address, DappReward));\r\n        require(successTransfer, \"Freedom Dividend Coin air drop failed.\");\r\n        airdropAddresses[Address] = 2;\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n  }\r\n\r\n  function addAirdropAddress(address Address) public returns (bool) {\r\n    require(msg.sender == owner, \"Only owner can set\");\r\n    airdropAddresses[Address] = 1;\r\n    return true;\r\n  }\r\n\r\n  function getAirdropAddresses(address Address) public view returns (uint256) {\r\n    return airdropAddresses[Address];\r\n  }\r\n\r\n  function getAirdropVersion() public view returns (string memory) {\r\n    return airdropVersion;\r\n  }\r\n\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"Address\",\"type\":\"address\"}],\"name\":\"addAirdropAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"Address\",\"type\":\"address\"}],\"name\":\"airdrop\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"Address\",\"type\":\"address\"}],\"name\":\"getAirdropAddresses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAirdropVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"FDCDappAirdrop","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://7046dbbb41f775edfb7757c41b3a3dc8ca8a7e06b8dcf8648ca1894f453fe96c"}]}