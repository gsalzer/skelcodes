{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.2;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface ICurveFi_4 {\r\n    function add_liquidity(uint256[4] calldata amounts, uint256 min_mint_amount) external;\r\n}\r\n\r\ninterface IVault {\r\n    function deposit(uint256) external;\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\nlibrary Math {\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n}\r\n\r\ncontract ToolTBTCMixed {\r\n    using SafeMath for uint256;\r\n\r\n    address public constant curve = 0xaa82ca713D94bBA7A89CEAB55314F9EfFEdDc78c;\r\n    // tbtcCrv\r\n    address public constant want = 0x64eda51d3Ad40D56b9dFc5554E06F94e1Dd786Fd;\r\n    // bTbtcCRV\r\n    address public constant bToken = 0xFEd46586379577AD7E3295aE19B1b4F64aC5D363;\r\n\r\n    // BTC\r\n    address public constant tBTC = 0x8dAEBADE922dF735c38C80C7eBD708Af50815fAa;\r\n    address public constant renBTC = 0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D;\r\n    address public constant wBTC = 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599;\r\n    address public constant sBTC = 0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6;\r\n\r\n    event Recycled(address indexed user, uint256 sentTBTC, uint256 sentRenBtc, uint256 sentWBTC,\r\n        uint256 sentSBTC, uint256 sentWant, uint256 receivedBToken);\r\n\r\n    constructor() public {\r\n        IERC20(tBTC).approve(curve, uint256(- 1));\r\n        IERC20(renBTC).approve(curve, uint256(- 1));\r\n        IERC20(wBTC).approve(curve, uint256(- 1));\r\n        IERC20(sBTC).approve(curve, uint256(- 1));\r\n        IERC20(want).approve(bToken, uint256(- 1));\r\n    }\r\n\r\n    function recycleExactAmounts(address sender, uint256 _tBTC, uint256 _renBTC, uint256 _wBTC, uint256 _sBTC, uint256 _want) internal {\r\n        if (_tBTC > 0) {\r\n            IERC20(tBTC).transferFrom(sender, address(this), _tBTC);\r\n        }\r\n        if (_renBTC > 0) {\r\n            IERC20(renBTC).transferFrom(sender, address(this), _renBTC);\r\n        }\r\n        if (_wBTC > 0) {\r\n            IERC20(wBTC).transferFrom(sender, address(this), _wBTC);\r\n        }\r\n        if (_sBTC > 0) {\r\n            IERC20(sBTC).transferFrom(sender, address(this), _sBTC);\r\n        }\r\n        if (_want > 0) {\r\n            IERC20(want).transferFrom(sender, address(this), _want);\r\n        }\r\n\r\n        uint256[4] memory depositAmounts = [_tBTC, _renBTC, _wBTC, _sBTC];\r\n        if (_renBTC.add(_wBTC).add(_sBTC).add(_tBTC) > 0) {\r\n            ICurveFi_4(curve).add_liquidity(depositAmounts, 0);\r\n        }\r\n\r\n        uint256 wantBalance = IERC20(want).balanceOf(address(this));\r\n        if (wantBalance > 0) {\r\n            IVault(bToken).deposit(wantBalance);\r\n        }\r\n\r\n        uint256 _bToken = IERC20(bToken).balanceOf(address(this));\r\n        if (_bToken > 0) {\r\n            IERC20(bToken).transfer(sender, _bToken);\r\n        }\r\n\r\n        assert(IERC20(bToken).balanceOf(address(this)) == 0);\r\n\r\n        emit Recycled(sender, _tBTC, _renBTC, _wBTC, _sBTC, _want, _bToken);\r\n    }\r\n\r\n    function recycle() external {\r\n        uint256 _tBTC = Math.min(IERC20(tBTC).balanceOf(msg.sender), IERC20(tBTC).allowance(msg.sender, address(this)));\r\n        uint256 _renBTC = Math.min(IERC20(renBTC).balanceOf(msg.sender), IERC20(renBTC).allowance(msg.sender, address(this)));\r\n        uint256 _wBTC = Math.min(IERC20(wBTC).balanceOf(msg.sender), IERC20(wBTC).allowance(msg.sender, address(this)));\r\n        uint256 _sBTC = Math.min(IERC20(sBTC).balanceOf(msg.sender), IERC20(sBTC).allowance(msg.sender, address(this)));\r\n        uint256 _want = Math.min(IERC20(want).balanceOf(msg.sender), IERC20(want).allowance(msg.sender, address(this)));\r\n\r\n        recycleExactAmounts(msg.sender, _tBTC, _renBTC, _wBTC, _sBTC, _want);\r\n    }\r\n\r\n\r\n    function recycleExact(uint256 _tBTC, uint256 _renBTC, uint256 _wBTC, uint256 _sBTC, uint256 _want) external {\r\n        recycleExactAmounts(msg.sender, _tBTC, _renBTC, _wBTC, _sBTC, _want);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sentTBTC\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sentRenBtc\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sentWBTC\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sentSBTC\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sentWant\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receivedBToken\",\"type\":\"uint256\"}],\"name\":\"Recycled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curve\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recycle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tBTC\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_renBTC\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wBTC\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sBTC\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_want\",\"type\":\"uint256\"}],\"name\":\"recycleExact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renBTC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sBTC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tBTC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wBTC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"want\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ToolTBTCMixed","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"istanbul","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://7360b778dff00906c244d48bcdaafc085f3963c3fbeb406d763f8f992236321c"}]}