{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity  ^0.4.0;\r\n\r\ncontract Register {\r\n    \r\n    uint256 public totalClaimed=0;\r\n    uint256 public totalBurned=0;\r\n    uint256 public totalConverted=0;\r\n    uint256 minClaimedValue;\r\n    address owner;\r\n    address zyroAddr=0x1f6bd8766f8a8AA58F7441C8dd3709aFA3a56202;\r\n    mapping(string => uint256)  claimRecords;\r\n    mapping(string => uint256)  convertedRecords;\r\n    \r\n    constructor(uint256 _minValue) public {\r\n        owner=msg.sender;\r\n        minClaimedValue=_minValue;\r\n    }\r\n    \r\n    event Claim(address indexed _from,string indexed _to,uint256 indexed _value);\r\n    event BurnToken(uint256 indexed _value);\r\n\r\n    function claim(string _zilaccount,uint256 _value) public returns (bool sucess) {\r\n        require(_value>minClaimedValue);\r\n        bytes4 transferFromMethodId = bytes4(keccak256(\"transferFrom(address,address,uint256)\"));\r\n        if(zyroAddr.call(transferFromMethodId, msg.sender, address(this), _value)){\r\n             claimRecords[_zilaccount]+=_value;\r\n             totalClaimed+=_value;\r\n             emit Claim(msg.sender,_zilaccount,_value);\r\n             return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    function burn() public returns (bool sucess) {\r\n        bytes4 transferMethodId = bytes4(keccak256(\"transfer(address,uint256)\"));\r\n        uint256 _value = totalClaimed - totalBurned;\r\n        if(zyroAddr.call(transferMethodId, address(0), _value)){\r\n             totalBurned+=_value;\r\n             emit BurnToken(_value);\r\n             return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    function convert(string _zilaccount, uint256 _value) public {\r\n        require(msg.sender == owner);\r\n        convertedRecords[_zilaccount]+=_value;\r\n        totalConverted+=_value;\r\n        claimRecords[_zilaccount]-=_value;\r\n    }\r\n\r\n    function getClaimedByAddr(string _zilaccount) public view returns(uint256){\r\n        return claimRecords[_zilaccount];\r\n    }\r\n        \r\n    function getConvertedByAddr(string _zilaccount) public view returns(uint256){\r\n        return convertedRecords[_zilaccount];\r\n    }\r\n\r\n    function getTotalClaimed()  public view returns (uint256){\r\n        return totalClaimed;\r\n    }\r\n\r\n    function getTotalBurned()  public view returns (uint256){\r\n        return totalBurned;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_zilaccount\",\"type\":\"string\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"burn\",\"outputs\":[{\"name\":\"sucess\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_zilaccount\",\"type\":\"string\"}],\"name\":\"getClaimedByAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalClaimed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalConverted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalBurned\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_zilaccount\",\"type\":\"string\"}],\"name\":\"getConvertedByAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalClaimed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_zilaccount\",\"type\":\"string\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"name\":\"sucess\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_minValue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"BurnToken\",\"type\":\"event\"}]","ContractName":"Register","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://8ead9a84fa72bb0e0422df5e29279c7ec96fb5930e920e1fa53e316cd07a05a4"}]}