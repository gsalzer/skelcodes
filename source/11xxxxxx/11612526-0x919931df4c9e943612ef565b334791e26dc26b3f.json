{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/IQLF.sol\r\n\r\n/**\r\n * @author          Yisi Liu\r\n * @contact         yisiliu@gmail.com\r\n * @author_time     01/06/2021\r\n**/\r\n\r\npragma solidity >= 0.6.0;\r\n\r\ninterface IQLF {\r\n    /**\r\n     * @dev Returns if the given address is qualified, implemented on demand.\r\n     */\r\n    function ifQualified (address testee) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Logs if the given address is qualified, implemented on demand.\r\n     */\r\n    function logQualified (address testee) external;\r\n\r\n    /**\r\n     * @dev Emit when `ifQualified` is called to decide if the given `address`\r\n     * is `qualified` according to the preset rule by the contract creator and \r\n     * the current block `number` and the current block `timestamp`.\r\n     */\r\n    event Qualification(bool qualified, uint256 number, uint256 timestamp);\r\n}\r\n\r\n// File: contracts/qualification.sol\r\n\r\n/**\r\n * @author          Yisi Liu\r\n * @contact         yisiliu@gmail.com\r\n * @author_time     01/06/2021\r\n**/\r\n\r\npragma solidity >= 0.6.0;\r\n\r\n\r\ncontract QLF is IQLF {\r\n    string private name;\r\n    uint256 private creation_time;\r\n\r\n    constructor (string memory _name) public {\r\n        name = _name;\r\n        creation_time = block.timestamp;\r\n    }\r\n\r\n    function get_name() public view returns (string memory) {\r\n        return name;\r\n    }\r\n\r\n    function get_creation_time() public view returns (uint256) {\r\n        return creation_time;\r\n    }\r\n\r\n    function ifQualified(address testee) public view override returns (bool) {\r\n        bool qualified = true;\r\n        return qualified;\r\n    } \r\n\r\n    function logQualified(address testee) public override {\r\n        bool qualified = true;\r\n        emit Qualification(qualified, block.number, block.timestamp);\r\n    } \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"qualified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Qualification\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"get_creation_time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"testee\",\"type\":\"address\"}],\"name\":\"ifQualified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"testee\",\"type\":\"address\"}],\"name\":\"logQualified\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"QLF","CompilerVersion":"v0.6.2+commit.bacdbe57","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000006416e796f6e650000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://135e7b07c8ba43fb9cbbd845dd9aa6a45a177b921c72d0365928d6de1c10bd7c"}]}