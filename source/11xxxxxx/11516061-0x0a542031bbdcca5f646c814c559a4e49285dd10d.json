{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n/*\r\n * @title: SafeMath\r\n * @dev: Helper contract functions to arithmatic operations safely.\r\n */\r\nlibrary SafeMath {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\n /*\r\n * @title: Token\r\n * @dev: Interface contract for ERC20 tokens\r\n */\r\ncontract Token {\r\n    function totalSupply() public view returns (uint256 supply);\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n\r\n    function transfer(address _to, uint256 _value)\r\n        public\r\n        returns (bool success);\r\n\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    ) public returns (bool success);\r\n\r\n    function approve(address _spender, uint256 _value)\r\n        public\r\n        returns (bool success);\r\n\r\n    function allowance(address _owner, address _spender)\r\n        public\r\n        view\r\n        returns (uint256 remaining);\r\n    \r\n    function burn(uint256 amount) public;\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(\r\n        address indexed _owner,\r\n        address indexed _spender,\r\n        uint256 _value\r\n    );\r\n}\r\n\r\n\r\ncontract EarlyDelegator {\r\n    using SafeMath for uint256;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        isRefundAble = false;\r\n    }\r\n    \r\n    address constant KAI_ADDRESS = 0xD9Ec3ff1f8be459Bb9369b4E79e9Ebcf7141C093;\r\n    uint256 constant public MIN_DEPOSIT = 25001000000000000000000; // 25000 KAI\r\n    uint256 constant public HARD_CAP = 100000000000000000000000000; // 100000000 KAI\r\n\r\n    address private owner;\r\n    uint256 public currentCap;\r\n    address[] public delegators;\r\n    bool public isRefundAble;\r\n    mapping (address => uint256) public amount;\r\n\r\n    // Functions with this modifier can only be executed by the owner\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    function depositKAI(uint256 _amount) public {\r\n        require(currentCap.add(_amount) <= HARD_CAP, 'Exceed limit total cap');\r\n        require(_amount >= MIN_DEPOSIT, \"Amount must be greater or equal 25001 KAI\");\r\n        require(Token(KAI_ADDRESS).transferFrom(msg.sender, address(this), _amount));\r\n        \r\n        if (amount[msg.sender] == 0) {\r\n            delegators.push(msg.sender);\r\n        }\r\n        \r\n        amount[msg.sender] += _amount;\r\n        currentCap = currentCap.add(_amount);\r\n    }\r\n    \r\n    function withdrawKAI() public {\r\n        require(isRefundAble == true, \"Is not withdrawable yet\");\r\n        require(amount[msg.sender] > 0, \"Can only withdraw once\");\r\n    \r\n        Token(KAI_ADDRESS).transfer(msg.sender, amount[msg.sender]);\r\n        amount[msg.sender] = 0;\r\n    }\r\n    \r\n    function burnKAI() public onlyOwner {\r\n        Token(KAI_ADDRESS).burn(getBalanceKAIContract());\r\n    }\r\n    \r\n    function getBalanceKAIContract() public view returns (uint256) {\r\n        return Token(KAI_ADDRESS).balanceOf(address(this));\r\n    }\r\n\r\n    function setIsRefundAble() public onlyOwner {\r\n        isRefundAble = true;\r\n    }\r\n    \r\n    function getNumberDelegators() public view returns (uint256) {\r\n        return delegators.length;\r\n    }\r\n    \r\n    function emergencyWithdrawalKAI(uint256 _amount) public onlyOwner {\r\n        Token(KAI_ADDRESS).transfer(msg.sender, _amount);\r\n    }  \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"setIsRefundAble\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"burnKAI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HARD_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"delegators\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawalKAI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumberDelegators\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositKAI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawKAI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalanceKAIContract\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isRefundAble\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_DEPOSIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"EarlyDelegator","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://9a92a5bca3cf2cf29d99732e7c2e5e3b703ce87fef3ac933eab8c6cf22c991b5"}]}