{"status":"1","message":"OK","result":[{"SourceCode":"//  Buring mechanism will be active after deploying and burning rate will be decreased day by day \r\n//  Burn mechanism:\r\n//       - day 1: 6%\r\n//       - day 2: 4%\r\n//       - day 3: 2%\r\n//       - day 5 toward: 0% (or burn mechanism will be ended when remaining 6000 tokens)\r\n//  When burning rate meet 0%, out website will be lauched\r\npragma solidity ^0.4.25;\r\n\r\n//@dev https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function ceil(uint256 m, uint256 n) internal pure returns (uint256) {\r\n    uint256 a = add(m, n);\r\n    uint256 b = sub(a, 1);\r\n    return mul(div(b, n), n);\r\n  }\r\n}\r\n\r\n//@dev https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\r\ninterface IERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function allowance(address owner, address target) external view returns (uint256);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function approve(address target, uint256 value) external returns (bool);\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed target, uint256 value);\r\n}\r\n\r\ncontract StandardERC20 is IERC20 {\r\n\r\n  uint8 public decimal;\r\n  string public name;\r\n  string public symbol;\r\n\r\n  constructor(string memory _name, string memory _symbol, uint8 _decimals) public {\r\n    decimal = _decimals;\r\n    name = _name;\r\n    symbol = _symbol; \r\n  }\r\n\r\n  function name() public view returns(string memory) {\r\n    return name;\r\n  }\r\n\r\n  function symbol() public view returns(string memory) {\r\n    return symbol;\r\n  }\r\n\r\n  function decimals() public view returns(uint8) {\r\n    return decimal;\r\n  }\r\n}\r\n\r\ncontract DropShipVote is StandardERC20{\r\n  using SafeMath for uint256;\r\n  \r\n  mapping (address => uint256) public _dsvbalance;\r\n  mapping (address => mapping (address => uint256)) public _allowed;\r\n  \r\n  uint256 _totalSupply = 15000 * 10 ** 10; \r\n  uint8 constant private burnrated0 = 6;\r\n  uint8 constant private burnrated1 = 4;\r\n  uint8 constant private burnrated2 = 2;\r\n  uint8 constant private burnrated5 = 0;\r\n  \r\n  uint256 constant private milestoned1 = 1606230000; \r\n  uint256 constant private milestoned2 = 1606316400; \r\n  uint256 constant private milestoned5 = 1606489200; \r\n\r\n  constructor() public StandardERC20(\"DropSolution.Vote\" , \"DSV\", 10) {\r\n    _mint(msg.sender, _totalSupply);\r\n  }\r\n\r\n  function totalSupply() public view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  function balanceOf(address owner) public view returns (uint256) {\r\n    return _dsvbalance[owner];\r\n  }\r\n  function caculateBurnRate() public view returns (uint8){\r\n    if (now >= milestoned5 || _totalSupply <= 6000) return burnrated5;\r\n    if (now >= milestoned2) return burnrated2;\r\n    if (now >= milestoned1) return burnrated1;\r\n    return burnrated0;\r\n  }\r\n  function transfer(address to, uint256 value) public returns (bool) {\r\n    require(value <= _dsvbalance[msg.sender]);\r\n    require(to != address(0));\r\n    uint8 burnrate = caculateBurnRate();\r\n    uint256 brn = value.mul(burnrate).div(100);\r\n    \r\n    uint256 rvalue = value.sub(brn);\r\n    _dsvbalance[msg.sender] = _dsvbalance[msg.sender].sub(value);\r\n    _dsvbalance[to] = _dsvbalance[to].add(rvalue);\r\n    _totalSupply = _totalSupply.sub(brn);\r\n\r\n    emit Transfer(msg.sender, to, rvalue);\r\n    emit Transfer(msg.sender, address(0), brn);\r\n\r\n    return true;\r\n  }\r\n \r\n  function allowance(address owner, address target) public view returns (uint256) {\r\n    return _allowed[owner][target];\r\n  }\r\n\r\n  function approve(address target, uint256 value) public returns (bool) {\r\n    require(target != address(0));\r\n    _allowed[msg.sender][target] = value;\r\n    emit Approval(msg.sender, target, value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n    require(value <= _dsvbalance[from]);\r\n    require(value <= _allowed[from][msg.sender]);\r\n    require(to != address(0));\r\n\r\n    _dsvbalance[from] = _dsvbalance[from].sub(value);\r\n    uint8 burnrate = caculateBurnRate();\r\n    uint256 brn = value.mul(burnrate).div(100);\r\n    \r\n    uint256 rvalue = value.sub(brn);\r\n\r\n    _dsvbalance[to] = _dsvbalance[to].add(rvalue);\r\n    _totalSupply = _totalSupply.sub(brn);\r\n    _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\r\n\r\n    emit Transfer(from, to, rvalue);\r\n    emit Transfer(from, address(0), brn);\r\n\r\n    return true;\r\n  }\r\n  \r\n  function increaseAllowance(address target, uint256 addedValue) public returns (bool) {\r\n    require(target != address(0));\r\n    _allowed[msg.sender][target] = (_allowed[msg.sender][target].add(addedValue));\r\n    emit Approval(msg.sender, target, _allowed[msg.sender][target]);\r\n    return true;\r\n  }\r\n\r\n  function decreaseAllowance(address target, uint256 val) public returns (bool) {\r\n    require(target != address(0));\r\n    _allowed[msg.sender][target] = (_allowed[msg.sender][target].sub(val));\r\n    emit Approval(msg.sender, target, _allowed[msg.sender][target]);\r\n    return true;\r\n  }\r\n\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(amount != 0);\r\n    _dsvbalance[account] = _dsvbalance[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  function burn(uint256 amount) external {\r\n    _sendBurn(msg.sender, amount);\r\n  }\r\n\r\n  function _sendBurn(address account, uint256 amount) internal {\r\n    require(amount != 0);\r\n    require(amount <= _dsvbalance[account]);\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    _dsvbalance[account] = _dsvbalance[account].sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_dsvbalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"caculateBurnRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"DropShipVote","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://06eb4ab30a7f3df66ab17b7c145bfad2a9bc6af8d6327b1c5ee5e7b9f7dc52d4"}]}