{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\npragma solidity >=0.6.6;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface IERC20 {\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n}\r\n\r\ninterface ISwapPair {\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n}\r\n\r\ninterface IMasterchef {\r\n    function poolInfo(uint i) external view returns (address, uint, uint, uint);\r\n}\r\n\r\ncontract AAAAQuery3 {\r\n    address public owner;\r\n    address public masterchef;\r\n\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        uint id;\r\n        address lpToken;       // Address of LP token contract.\r\n        uint allocPoint;       // How many allocation points assigned to this pool. CAKEs to distribute per block.\r\n        uint lastRewardBlock;  // Last block number that CAKEs distribution occurs.\r\n        uint accPerShare;  // Accumulated CAKEs per share, times 1e12. See below.\r\n        address lpToken0;\r\n        address lpToken1;\r\n        uint lpToken0Decimals;\r\n        uint lpToken1Decimals;\r\n        string lpToken0Symbol;\r\n        string lpToken1Symbol;\r\n    }\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function initialize (address _masterchef) external {\r\n        require(msg.sender == owner, \"FORBIDDEN\");\r\n        masterchef = _masterchef;\r\n    }\r\n\r\n    function getPoolInfo(uint i) public view returns (PoolInfo memory info){\r\n        info.id = i;\r\n        (info.lpToken, info.allocPoint, info.lastRewardBlock, info.accPerShare) = IMasterchef(masterchef).poolInfo(i);\r\n        info.lpToken0 = ISwapPair(info.lpToken).token0();\r\n        info.lpToken1 = ISwapPair(info.lpToken).token1();\r\n        info.lpToken0Decimals = IERC20(info.lpToken0).decimals();\r\n        info.lpToken1Decimals = IERC20(info.lpToken1).decimals();\r\n        info.lpToken0Symbol = IERC20(info.lpToken0).symbol();\r\n        info.lpToken1Symbol = IERC20(info.lpToken1).symbol();\r\n        return info;\r\n    }\r\n\r\n    function getPoolInfoList(uint count) public view returns (PoolInfo[] memory list){\r\n        list = new PoolInfo[](count);\r\n        if(count > 0) {\r\n            for(uint i = 1; i < count; i++) {\r\n                list[i] = getPoolInfo(i);\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accPerShare\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lpToken0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpToken1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpToken0Decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpToken1Decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"lpToken0Symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lpToken1Symbol\",\"type\":\"string\"}],\"internalType\":\"struct AAAAQuery3.PoolInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getPoolInfoList\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accPerShare\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lpToken0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpToken1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpToken0Decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpToken1Decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"lpToken0Symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lpToken1Symbol\",\"type\":\"string\"}],\"internalType\":\"struct AAAAQuery3.PoolInfo[]\",\"name\":\"list\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_masterchef\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterchef\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"AAAAQuery3","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://cc0142e7d22b2efe090530732e8879044fc70907413c3de144f2cea38036cbae"}]}