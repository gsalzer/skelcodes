{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/C/Users/simor/Desktop/impermax-x-uniswapv2-periphery/test/Contracts/imx-univ2-core/Factory.sol\": {\r\n      \"content\": \"pragma solidity =0.5.16;\\r\\n\\r\\nimport \\\"./interfaces/IFactory.sol\\\";\\r\\nimport \\\"./interfaces/IBDeployer.sol\\\";\\r\\nimport \\\"./interfaces/IBorrowable.sol\\\";\\r\\nimport \\\"./interfaces/ICDeployer.sol\\\";\\r\\nimport \\\"./interfaces/ICollateral.sol\\\";\\r\\nimport \\\"./interfaces/IERC20.sol\\\";\\r\\nimport \\\"./interfaces/IUniswapV2Pair.sol\\\";\\r\\nimport \\\"./interfaces/IUniswapV2Factory.sol\\\";\\r\\nimport \\\"./interfaces/ISimpleUniswapOracle.sol\\\";\\r\\n\\r\\ncontract Factory is IFactory {\\r\\n\\taddress public admin;\\r\\n\\taddress public pendingAdmin;\\r\\n\\taddress public reservesAdmin;\\r\\n\\taddress public reservesPendingAdmin;\\r\\n\\taddress public reservesManager;\\r\\n\\t\\t\\r\\n\\tstruct LendingPool {\\r\\n\\t\\tbool initialized;\\r\\n\\t\\tuint24 lendingPoolId;\\r\\n\\t\\taddress collateral;\\r\\n\\t\\taddress borrowable0;\\r\\n\\t\\taddress borrowable1;\\r\\n\\t}\\r\\n\\tmapping(address => LendingPool) public getLendingPool; // get by UniswapV2Pair\\r\\n\\taddress[] public allLendingPools; // address of the UniswapV2Pair\\r\\n\\tfunction allLendingPoolsLength() external view returns (uint) {\\r\\n\\t\\treturn allLendingPools.length;\\r\\n\\t}\\r\\n\\t\\r\\n\\tIBDeployer public bDeployer;\\r\\n\\tICDeployer public cDeployer;\\r\\n\\tIUniswapV2Factory public uniswapV2Factory;\\r\\n\\tISimpleUniswapOracle public simpleUniswapOracle;\\r\\n\\t\\r\\n\\tevent LendingPoolInitialized(address indexed uniswapV2Pair, address indexed token0, address indexed token1,\\r\\n\\t\\taddress collateral, address borrowable0, address borrowable1, uint lendingPoolId);\\r\\n\\tevent NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\r\\n\\tevent NewAdmin(address oldAdmin, address newAdmin);\\r\\n\\tevent NewReservesPendingAdmin(address oldReservesPendingAdmin, address newReservesPendingAdmin);\\r\\n\\tevent NewReservesAdmin(address oldReservesAdmin, address newReservesAdmin);\\r\\n\\tevent NewReservesManager(address oldReservesManager, address newReservesManager);\\r\\n\\t\\r\\n\\tconstructor(address _admin, address _reservesAdmin, IBDeployer _bDeployer, ICDeployer _cDeployer, IUniswapV2Factory _uniswapV2Factory, ISimpleUniswapOracle _simpleUniswapOracle) public {\\r\\n\\t\\tadmin = _admin;\\r\\n\\t\\treservesAdmin = _reservesAdmin;\\r\\n\\t\\tbDeployer = _bDeployer;\\r\\n\\t\\tcDeployer = _cDeployer;\\r\\n\\t\\tuniswapV2Factory = _uniswapV2Factory;\\r\\n\\t\\tsimpleUniswapOracle = _simpleUniswapOracle;\\r\\n\\t\\temit NewAdmin(address(0), _admin);\\r\\n\\t\\temit NewReservesAdmin(address(0), _reservesAdmin);\\r\\n\\t}\\r\\n\\t\\r\\n\\tfunction _getTokens(address uniswapV2Pair) private view returns (address token0, address token1) {\\r\\n\\t\\ttoken0 = IUniswapV2Pair(uniswapV2Pair).token0();\\r\\n\\t\\ttoken1 = IUniswapV2Pair(uniswapV2Pair).token1();\\r\\n\\t\\trequire(uniswapV2Factory.getPair(token0, token1) == uniswapV2Pair, \\\"Impermax: NOT_UNIV2_PAIR\\\");\\r\\n\\t}\\r\\n\\t\\r\\n\\tfunction _createLendingPool(address uniswapV2Pair) private {\\r\\n\\t\\tif (getLendingPool[uniswapV2Pair].lendingPoolId != 0) return;\\r\\n\\t\\tallLendingPools.push(uniswapV2Pair);\\t\\t\\r\\n\\t\\tgetLendingPool[uniswapV2Pair] = LendingPool(false, uint24(allLendingPools.length), address(0), address(0), address(0));\\r\\n\\t}\\r\\n\\t\\r\\n\\tfunction createCollateral(address uniswapV2Pair) external returns (address collateral) {\\r\\n\\t\\t_getTokens(uniswapV2Pair);\\r\\n\\t\\trequire(getLendingPool[uniswapV2Pair].collateral == address(0), \\\"Impermax: ALREADY_EXISTS\\\");\\t\\t\\r\\n\\t\\tcollateral = cDeployer.deployCollateral(uniswapV2Pair);\\r\\n\\t\\tICollateral(collateral)._setFactory();\\r\\n\\t\\t_createLendingPool(uniswapV2Pair);\\r\\n\\t\\tgetLendingPool[uniswapV2Pair].collateral = collateral;\\r\\n\\t}\\r\\n\\t\\r\\n\\tfunction createBorrowable0(address uniswapV2Pair) external returns (address borrowable0) {\\r\\n\\t\\t_getTokens(uniswapV2Pair);\\r\\n\\t\\trequire(getLendingPool[uniswapV2Pair].borrowable0 == address(0), \\\"Impermax: ALREADY_EXISTS\\\");\\t\\t\\r\\n\\t\\tborrowable0 = bDeployer.deployBorrowable(uniswapV2Pair, 0);\\r\\n\\t\\tIBorrowable(borrowable0)._setFactory();\\r\\n\\t\\t_createLendingPool(uniswapV2Pair);\\r\\n\\t\\tgetLendingPool[uniswapV2Pair].borrowable0 = borrowable0;\\r\\n\\t}\\r\\n\\t\\r\\n\\tfunction createBorrowable1(address uniswapV2Pair) external returns (address borrowable1) {\\r\\n\\t\\t_getTokens(uniswapV2Pair);\\r\\n\\t\\trequire(getLendingPool[uniswapV2Pair].borrowable1 == address(0), \\\"Impermax: ALREADY_EXISTS\\\");\\t\\t\\r\\n\\t\\tborrowable1 = bDeployer.deployBorrowable(uniswapV2Pair, 1);\\r\\n\\t\\tIBorrowable(borrowable1)._setFactory();\\r\\n\\t\\t_createLendingPool(uniswapV2Pair);\\r\\n\\t\\tgetLendingPool[uniswapV2Pair].borrowable1 = borrowable1;\\r\\n\\t}\\r\\n\\t\\r\\n\\tfunction initializeLendingPool(address uniswapV2Pair) external {\\r\\n\\t\\t(address token0, address token1) = _getTokens(uniswapV2Pair);\\r\\n\\t\\tLendingPool memory lPool = getLendingPool[uniswapV2Pair];\\r\\n\\t\\trequire(!lPool.initialized, \\\"Impermax: ALREADY_INITIALIZED\\\");\\r\\n\\t\\t\\r\\n\\t\\trequire(lPool.collateral != address(0), \\\"Impermax: COLLATERALIZABLE_NOT_CREATED\\\");\\r\\n\\t\\trequire(lPool.borrowable0 != address(0), \\\"Impermax: BORROWABLE0_NOT_CREATED\\\");\\r\\n\\t\\trequire(lPool.borrowable1 != address(0), \\\"Impermax: BORROWABLE1_NOT_CREATED\\\");\\r\\n\\t\\t\\r\\n\\t\\t(,,,,,bool oracleInitialized) = simpleUniswapOracle.getPair(uniswapV2Pair);\\r\\n\\t\\tif (!oracleInitialized) simpleUniswapOracle.initialize(uniswapV2Pair);\\r\\n\\t\\t\\r\\n\\t\\tstring memory token0Symbol = IERC20(token0).symbol();\\r\\n\\t\\tstring memory token1Symbol = IERC20(token1).symbol();\\r\\n\\t\\tstring memory lendingPoolId = uint2str(lPool.lendingPoolId);\\r\\n\\t\\t\\r\\n\\t\\tstring memory name = string(abi.encodePacked(\\\"Impermax UniV2: \\\", token0Symbol, \\\"-\\\", token1Symbol, \\\"-\\\", lendingPoolId));\\r\\n\\t\\tstring memory symbol = string(abi.encodePacked(\\\"i\\\", token0Symbol, \\\"-\\\", token1Symbol, \\\"-\\\", lendingPoolId));\\r\\n\\t\\tICollateral(lPool.collateral)._initialize(name, symbol, uniswapV2Pair, lPool.borrowable0, lPool.borrowable1);\\r\\n\\t\\t\\r\\n\\t\\tname = string(abi.encodePacked(\\\"Impermax UniV2: \\\", token0Symbol, \\\"-\\\", lendingPoolId));\\r\\n\\t\\tsymbol = string(abi.encodePacked(\\\"i\\\", token0Symbol, \\\"-\\\", lendingPoolId));\\r\\n\\t\\tIBorrowable(lPool.borrowable0)._initialize(name, symbol, token0, lPool.collateral);\\r\\n\\t\\t\\r\\n\\t\\tname = string(abi.encodePacked(\\\"Impermax UniV2: \\\", token1Symbol, \\\"-\\\", lendingPoolId));\\r\\n\\t\\tsymbol = string(abi.encodePacked(\\\"i\\\", token1Symbol, \\\"-\\\", lendingPoolId));\\r\\n\\t\\tIBorrowable(lPool.borrowable1)._initialize(name, symbol, token1, lPool.collateral);\\r\\n\\t\\t\\r\\n\\t\\tgetLendingPool[uniswapV2Pair].initialized = true;\\r\\n\\t\\temit LendingPoolInitialized(uniswapV2Pair, token0, token1, lPool.collateral, lPool.borrowable0, lPool.borrowable1, lPool.lendingPoolId);\\r\\n\\t}\\r\\n\\t\\r\\n\\tfunction _setPendingAdmin(address newPendingAdmin) external {\\r\\n\\t\\trequire(msg.sender == admin, \\\"Impermax: UNAUTHORIZED\\\");\\r\\n\\t\\taddress oldPendingAdmin = pendingAdmin;\\r\\n\\t\\tpendingAdmin = newPendingAdmin;\\r\\n\\t\\temit NewPendingAdmin(oldPendingAdmin, newPendingAdmin);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _acceptAdmin() external {\\r\\n\\t\\trequire(msg.sender == pendingAdmin, \\\"Impermax: UNAUTHORIZED\\\");\\r\\n\\t\\taddress oldAdmin = admin;\\r\\n\\t\\taddress oldPendingAdmin = pendingAdmin;\\r\\n\\t\\tadmin = pendingAdmin;\\r\\n\\t\\tpendingAdmin = address(0);\\r\\n\\t\\temit NewAdmin(oldAdmin, admin);\\r\\n\\t\\temit NewPendingAdmin(oldPendingAdmin, address(0));\\r\\n\\t}\\r\\n\\t\\r\\n\\tfunction _setReservesPendingAdmin(address newReservesPendingAdmin) external {\\r\\n\\t\\trequire(msg.sender == reservesAdmin, \\\"Impermax: UNAUTHORIZED\\\");\\r\\n\\t\\taddress oldReservesPendingAdmin = reservesPendingAdmin;\\r\\n\\t\\treservesPendingAdmin = newReservesPendingAdmin;\\r\\n\\t\\temit NewReservesPendingAdmin(oldReservesPendingAdmin, newReservesPendingAdmin);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _acceptReservesAdmin() external {\\r\\n\\t\\trequire(msg.sender == reservesPendingAdmin, \\\"Impermax: UNAUTHORIZED\\\");\\r\\n\\t\\taddress oldReservesAdmin = reservesAdmin;\\r\\n\\t\\taddress oldReservesPendingAdmin = reservesPendingAdmin;\\r\\n\\t\\treservesAdmin = reservesPendingAdmin;\\r\\n\\t\\treservesPendingAdmin = address(0);\\r\\n\\t\\temit NewReservesAdmin(oldReservesAdmin, reservesAdmin);\\r\\n\\t\\temit NewReservesPendingAdmin(oldReservesPendingAdmin, address(0));\\r\\n\\t}\\r\\n\\r\\n\\tfunction _setReservesManager(address newReservesManager) external {\\r\\n\\t\\trequire(msg.sender == reservesAdmin, \\\"Impermax: UNAUTHORIZED\\\");\\r\\n\\t\\taddress oldReservesManager = reservesManager;\\r\\n\\t\\treservesManager = newReservesManager;\\r\\n\\t\\temit NewReservesManager(oldReservesManager, newReservesManager);\\r\\n\\t}\\r\\n\\t\\r\\n\\tfunction uint2str(uint _i) public pure returns (string memory _uintAsString) {\\r\\n\\t\\tif (_i == 0) return \\\"0\\\";\\r\\n\\t\\tuint j = _i;\\r\\n\\t\\tuint len;\\r\\n\\t\\twhile (j != 0) {\\r\\n\\t\\t\\tlen++;\\r\\n\\t\\t\\tj /= 10;\\r\\n\\t\\t}\\r\\n\\t\\tbytes memory bstr = new bytes(len);\\r\\n\\t\\tuint k = len - 1;\\r\\n\\t\\twhile (_i != 0) {\\r\\n\\t\\t\\tbstr[k--] = byte(uint8(48 + _i % 10));\\r\\n\\t\\t\\t_i /= 10;\\r\\n\\t\\t}\\r\\n\\t\\treturn string(bstr);\\r\\n\\t}\\r\\n}\\r\\n\"\r\n    },\r\n    \"/C/Users/simor/Desktop/impermax-x-uniswapv2-periphery/test/Contracts/imx-univ2-core/interfaces/IBDeployer.sol\": {\r\n      \"content\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IBDeployer {\\r\\n\\tfunction deployBorrowable(address uniswapV2Pair, uint8 index) external returns (address borrowable);\\r\\n}\"\r\n    },\r\n    \"/C/Users/simor/Desktop/impermax-x-uniswapv2-periphery/test/Contracts/imx-univ2-core/interfaces/IBorrowable.sol\": {\r\n      \"content\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IBorrowable {\\r\\n\\r\\n\\t/*** Impermax ERC20 ***/\\r\\n\\t\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\r\\n\\tfunction name() external pure returns (string memory);\\r\\n\\tfunction symbol() external pure returns (string memory);\\r\\n\\tfunction decimals() external pure returns (uint8);\\r\\n\\tfunction totalSupply() external view returns (uint);\\r\\n\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\t\\r\\n\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\t\\r\\n\\t/*** Pool Token ***/\\r\\n\\t\\r\\n\\tevent Mint(address indexed sender, address indexed minter, uint mintAmount, uint mintTokens);\\r\\n\\tevent Redeem(address indexed sender, address indexed redeemer, uint redeemAmount, uint redeemTokens);\\r\\n\\tevent Sync(uint totalBalance);\\r\\n\\t\\r\\n\\tfunction underlying() external view returns (address);\\r\\n\\tfunction factory() external view returns (address);\\r\\n\\tfunction totalBalance() external view returns (uint);\\r\\n\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\r\\n\\tfunction exchangeRate() external returns (uint);\\r\\n\\tfunction mint(address minter) external returns (uint mintTokens);\\r\\n\\tfunction redeem(address redeemer) external returns (uint redeemAmount);\\r\\n\\tfunction skim(address to) external;\\r\\n\\tfunction sync() external;\\r\\n\\t\\r\\n\\tfunction _setFactory() external;\\r\\n\\t\\r\\n\\t/*** Borrowable ***/\\r\\n\\r\\n\\tevent BorrowApproval(address indexed owner, address indexed spender, uint value);\\r\\n\\tevent Borrow(address indexed sender, address indexed borrower, address indexed receiver, uint borrowAmount, uint repayAmount, uint accountBorrowsPrior, uint accountBorrows, uint totalBorrows);\\r\\n\\tevent Liquidate(address indexed sender, address indexed borrower, address indexed liquidator, uint seizeTokens, uint repayAmount, uint accountBorrowsPrior, uint accountBorrows, uint totalBorrows);\\r\\n\\t\\r\\n\\tfunction BORROW_FEE() external pure returns (uint);\\r\\n\\tfunction collateral() external view returns (address);\\r\\n\\tfunction reserveFactor() external view returns (uint);\\r\\n\\tfunction exchangeRateLast() external view returns (uint);\\r\\n\\tfunction borrowIndex() external view returns (uint);\\r\\n\\tfunction totalBorrows() external view returns (uint);\\r\\n\\tfunction borrowAllowance(address owner, address spender) external view returns (uint);\\r\\n\\tfunction borrowBalance(address borrower) external view returns (uint);\\t\\r\\n\\tfunction borrowTracker() external view returns (address);\\r\\n\\t\\r\\n\\tfunction BORROW_PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\tfunction borrowApprove(address spender, uint256 value) external returns (bool);\\r\\n\\tfunction borrowPermit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\tfunction borrow(address borrower, address receiver, uint borrowAmount, bytes calldata data) external;\\r\\n\\tfunction liquidate(address borrower, address liquidator) external returns (uint seizeTokens);\\r\\n\\tfunction trackBorrow(address borrower) external;\\r\\n\\t\\r\\n\\t/*** Borrowable Interest Rate Model ***/\\r\\n\\r\\n\\tevent AccrueInterest(uint interestAccumulated, uint borrowIndex, uint totalBorrows);\\r\\n\\tevent CalculateKink(uint kinkRate);\\r\\n\\tevent CalculateBorrowRate(uint borrowRate);\\r\\n\\t\\r\\n\\tfunction KINK_BORROW_RATE_MAX() external pure returns (uint);\\r\\n\\tfunction KINK_BORROW_RATE_MIN() external pure returns (uint);\\r\\n\\tfunction KINK_MULTIPLIER() external pure returns (uint);\\r\\n\\tfunction borrowRate() external view returns (uint);\\r\\n\\tfunction kinkBorrowRate() external view returns (uint);\\r\\n\\tfunction kinkUtilizationRate() external view returns (uint);\\r\\n\\tfunction adjustSpeed() external view returns (uint);\\r\\n\\tfunction rateUpdateTimestamp() external view returns (uint32);\\r\\n\\tfunction accrualTimestamp() external view returns (uint32);\\r\\n\\t\\r\\n\\tfunction accrueInterest() external;\\r\\n\\t\\r\\n\\t/*** Borrowable Setter ***/\\r\\n\\r\\n\\tevent NewReserveFactor(uint newReserveFactor);\\r\\n\\tevent NewKinkUtilizationRate(uint newKinkUtilizationRate);\\r\\n\\tevent NewAdjustSpeed(uint newAdjustSpeed);\\r\\n\\tevent NewBorrowTracker(address newBorrowTracker);\\r\\n\\r\\n\\tfunction RESERVE_FACTOR_MAX() external pure returns (uint);\\r\\n\\tfunction KINK_UR_MIN() external pure returns (uint);\\r\\n\\tfunction KINK_UR_MAX() external pure returns (uint);\\r\\n\\tfunction ADJUST_SPEED_MIN() external pure returns (uint);\\r\\n\\tfunction ADJUST_SPEED_MAX() external pure returns (uint);\\r\\n\\t\\r\\n\\tfunction _initialize (\\r\\n\\t\\tstring calldata _name, \\r\\n\\t\\tstring calldata _symbol,\\r\\n\\t\\taddress _underlying, \\r\\n\\t\\taddress _collateral\\r\\n\\t) external;\\r\\n\\tfunction _setReserveFactor(uint newReserveFactor) external;\\r\\n\\tfunction _setKinkUtilizationRate(uint newKinkUtilizationRate) external;\\r\\n\\tfunction _setAdjustSpeed(uint newAdjustSpeed) external;\\r\\n\\tfunction _setBorrowTracker(address newBorrowTracker) external;\\r\\n}\"\r\n    },\r\n    \"/C/Users/simor/Desktop/impermax-x-uniswapv2-periphery/test/Contracts/imx-univ2-core/interfaces/ICDeployer.sol\": {\r\n      \"content\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface ICDeployer {\\r\\n\\tfunction deployCollateral(address uniswapV2Pair) external returns (address collateral);\\r\\n}\"\r\n    },\r\n    \"/C/Users/simor/Desktop/impermax-x-uniswapv2-periphery/test/Contracts/imx-univ2-core/interfaces/ICollateral.sol\": {\r\n      \"content\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface ICollateral {\\r\\n\\r\\n\\t/*** Impermax ERC20 ***/\\r\\n\\t\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint value);\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint value);\\r\\n\\t\\r\\n\\tfunction name() external pure returns (string memory);\\r\\n\\tfunction symbol() external pure returns (string memory);\\r\\n\\tfunction decimals() external pure returns (uint8);\\r\\n\\tfunction totalSupply() external view returns (uint);\\r\\n\\tfunction balanceOf(address owner) external view returns (uint);\\r\\n\\tfunction allowance(address owner, address spender) external view returns (uint);\\r\\n\\tfunction approve(address spender, uint value) external returns (bool);\\r\\n\\tfunction transfer(address to, uint value) external returns (bool);\\r\\n\\tfunction transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\t\\r\\n\\tfunction DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\tfunction PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\tfunction nonces(address owner) external view returns (uint);\\r\\n\\tfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\t\\r\\n\\t/*** Pool Token ***/\\r\\n\\t\\r\\n\\tevent Mint(address indexed sender, address indexed minter, uint mintAmount, uint mintTokens);\\r\\n\\tevent Redeem(address indexed sender, address indexed redeemer, uint redeemAmount, uint redeemTokens);\\r\\n\\tevent Sync(uint totalBalance);\\r\\n\\t\\r\\n\\tfunction underlying() external view returns (address);\\r\\n\\tfunction factory() external view returns (address);\\r\\n\\tfunction totalBalance() external view returns (uint);\\r\\n\\tfunction MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\r\\n\\tfunction exchangeRate() external returns (uint);\\r\\n\\tfunction mint(address minter) external returns (uint mintTokens);\\r\\n\\tfunction redeem(address redeemer) external returns (uint redeemAmount);\\r\\n\\tfunction skim(address to) external;\\r\\n\\tfunction sync() external;\\r\\n\\t\\r\\n\\tfunction _setFactory() external;\\r\\n\\t\\r\\n\\t/*** Collateral ***/\\r\\n\\t\\r\\n\\tfunction borrowable0() external view returns (address);\\r\\n\\tfunction borrowable1() external view returns (address);\\r\\n\\tfunction simpleUniswapOracle() external view returns (address);\\r\\n\\tfunction safetyMarginSqrt() external view returns (uint);\\r\\n\\tfunction liquidationIncentive() external view returns (uint);\\r\\n\\t\\r\\n\\tfunction getPrices() external returns (uint price0, uint price1);\\r\\n\\tfunction tokensUnlocked(address from, uint value) external returns (bool);\\r\\n\\tfunction accountLiquidityAmounts(address account, uint amount0, uint amount1) external returns (uint liquidity, uint shortfall);\\r\\n\\tfunction accountLiquidity(address account) external returns (uint liquidity, uint shortfall);\\r\\n\\tfunction canBorrow(address account, address borrowable, uint accountBorrows) external returns (bool);\\r\\n\\tfunction seize(address liquidator, address borrower, uint repayAmount) external returns (uint seizeTokens);\\r\\n\\tfunction flashRedeem(address redeemer, uint redeemAmount, bytes calldata data) external;\\r\\n\\t\\r\\n\\t/*** Collateral Setter ***/\\r\\n\\t\\r\\n\\tevent NewSafetyMargin(uint newSafetyMarginSqrt);\\r\\n\\tevent NewLiquidationIncentive(uint newLiquidationIncentive);\\r\\n\\r\\n\\tfunction SAFETY_MARGIN_SQRT_MIN() external pure returns (uint);\\r\\n\\tfunction SAFETY_MARGIN_SQRT_MAX() external pure returns (uint);\\r\\n\\tfunction LIQUIDATION_INCENTIVE_MIN() external pure returns (uint);\\r\\n\\tfunction LIQUIDATION_INCENTIVE_MAX() external pure returns (uint);\\r\\n\\t\\r\\n\\tfunction _initialize (\\r\\n\\t\\tstring calldata _name, \\r\\n\\t\\tstring calldata _symbol,\\r\\n\\t\\taddress _underlying, \\r\\n\\t\\taddress _borrowable0, \\r\\n\\t\\taddress _borrowable1\\r\\n\\t) external;\\r\\n\\tfunction _setSafetyMarginSqrt(uint newSafetyMarginSqrt) external;\\r\\n\\tfunction _setLiquidationIncentive(uint newLiquidationIncentive) external;\\r\\n}\"\r\n    },\r\n    \"/C/Users/simor/Desktop/impermax-x-uniswapv2-periphery/test/Contracts/imx-univ2-core/interfaces/IERC20.sol\": {\r\n      \"content\": \"pragma solidity >=0.5.0;\\n\\ninterface IERC20 {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n}\\n\"\r\n    },\r\n    \"/C/Users/simor/Desktop/impermax-x-uniswapv2-periphery/test/Contracts/imx-univ2-core/interfaces/IFactory.sol\": {\r\n      \"content\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IFactory {\\r\\n\\tevent LendingPoolInitialized(address indexed uniswapV2Pair, address indexed token0, address indexed token1,\\r\\n\\t\\taddress collateral, address borrowable0, address borrowable1, uint lendingPoolId);\\r\\n\\tevent NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\r\\n\\tevent NewAdmin(address oldAdmin, address newAdmin);\\r\\n\\tevent NewReservesPendingAdmin(address oldReservesPendingAdmin, address newReservesPendingAdmin);\\r\\n\\tevent NewReservesAdmin(address oldReservesAdmin, address newReservesAdmin);\\r\\n\\tevent NewReservesManager(address oldReservesManager, address newReservesManager);\\r\\n\\t\\r\\n\\tfunction admin() external view returns (address);\\r\\n\\tfunction pendingAdmin() external view returns (address);\\r\\n\\tfunction reservesAdmin() external view returns (address);\\r\\n\\tfunction reservesPendingAdmin() external view returns (address);\\r\\n\\tfunction reservesManager() external view returns (address);\\r\\n\\r\\n\\tfunction getLendingPool(address uniswapV2Pair) external view returns (\\r\\n\\t\\tbool initialized, \\r\\n\\t\\tuint24 lendingPoolId, \\r\\n\\t\\taddress collateral, \\r\\n\\t\\taddress borrowable0, \\r\\n\\t\\taddress borrowable1\\r\\n\\t);\\r\\n\\tfunction allLendingPools(uint) external view returns (address uniswapV2Pair);\\r\\n\\tfunction allLendingPoolsLength() external view returns (uint);\\r\\n\\t\\r\\n\\tfunction bDeployer() external view returns (address);\\r\\n\\tfunction cDeployer() external view returns (address);\\r\\n\\tfunction uniswapV2Factory() external view returns (address);\\r\\n\\tfunction simpleUniswapOracle() external view returns (address);\\r\\n\\r\\n\\tfunction createCollateral(address uniswapV2Pair) external returns (address collateral);\\r\\n\\tfunction createBorrowable0(address uniswapV2Pair) external returns (address borrowable0);\\r\\n\\tfunction createBorrowable1(address uniswapV2Pair) external returns (address borrowable1);\\r\\n\\tfunction initializeLendingPool(address uniswapV2Pair) external;\\r\\n\\r\\n\\tfunction _setPendingAdmin(address newPendingAdmin) external;\\r\\n\\tfunction _acceptAdmin() external;\\r\\n\\tfunction _setReservesPendingAdmin(address newPendingAdmin) external;\\r\\n\\tfunction _acceptReservesAdmin() external;\\r\\n\\tfunction _setReservesManager(address newReservesManager) external;\\r\\n}\\r\\n\"\r\n    },\r\n    \"/C/Users/simor/Desktop/impermax-x-uniswapv2-periphery/test/Contracts/imx-univ2-core/interfaces/ISimpleUniswapOracle.sol\": {\r\n      \"content\": \"pragma solidity >=0.5.0;\\r\\n\\r\\ninterface ISimpleUniswapOracle {\\r\\n\\tevent PriceUpdate(address indexed pair, uint256 priceCumulative, uint32 blockTimestamp, bool lastIsA);\\r\\n\\tfunction MIN_T() external pure returns (uint32);\\r\\n\\tfunction getBlockTimestamp() external view returns (uint32);\\r\\n\\tfunction getPair(address uniswapV2Pair) external view returns (\\r\\n\\t\\tuint256 priceCumulativeA,\\r\\n\\t\\tuint256 priceCumulativeB,\\r\\n\\t\\tuint32 updateA,\\r\\n\\t\\tuint32 updateB,\\r\\n\\t\\tbool lastIsA,\\r\\n\\t\\tbool initialized\\r\\n\\t);\\r\\n\\tfunction initialize(address uniswapV2Pair) external;\\r\\n\\tfunction getResult(address uniswapV2Pair) external returns (uint224 price, uint32 T);\\r\\n}\"\r\n    },\r\n    \"/C/Users/simor/Desktop/impermax-x-uniswapv2-periphery/test/Contracts/imx-univ2-core/interfaces/IUniswapV2Factory.sol\": {\r\n      \"content\": \"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\\n\"\r\n    },\r\n    \"/C/Users/simor/Desktop/impermax-x-uniswapv2-periphery/test/Contracts/imx-univ2-core/interfaces/IUniswapV2Pair.sol\": {\r\n      \"content\": \"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\t\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n\\n    function price0CumulativeLast() external view returns (uint);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 999999\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reservesAdmin\",\"type\":\"address\"},{\"internalType\":\"contract IBDeployer\",\"name\":\"_bDeployer\",\"type\":\"address\"},{\"internalType\":\"contract ICDeployer\",\"name\":\"_cDeployer\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"_uniswapV2Factory\",\"type\":\"address\"},{\"internalType\":\"contract ISimpleUniswapOracle\",\"name\":\"_simpleUniswapOracle\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"uniswapV2Pair\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrowable0\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrowable1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lendingPoolId\",\"type\":\"uint256\"}],\"name\":\"LendingPoolInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldReservesAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newReservesAdmin\",\"type\":\"address\"}],\"name\":\"NewReservesAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldReservesManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newReservesManager\",\"type\":\"address\"}],\"name\":\"NewReservesManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldReservesPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newReservesPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewReservesPendingAdmin\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_acceptReservesAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newReservesManager\",\"type\":\"address\"}],\"name\":\"_setReservesManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newReservesPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setReservesPendingAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allLendingPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allLendingPoolsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bDeployer\",\"outputs\":[{\"internalType\":\"contract IBDeployer\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cDeployer\",\"outputs\":[{\"internalType\":\"contract ICDeployer\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"uniswapV2Pair\",\"type\":\"address\"}],\"name\":\"createBorrowable0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"borrowable0\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"uniswapV2Pair\",\"type\":\"address\"}],\"name\":\"createBorrowable1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"borrowable1\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"uniswapV2Pair\",\"type\":\"address\"}],\"name\":\"createCollateral\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getLendingPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"lendingPoolId\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrowable0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrowable1\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"uniswapV2Pair\",\"type\":\"address\"}],\"name\":\"initializeLendingPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reservesAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reservesManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reservesPendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"simpleUniswapOracle\",\"outputs\":[{\"internalType\":\"contract ISimpleUniswapOracle\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_i\",\"type\":\"uint256\"}],\"name\":\"uint2str\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_uintAsString\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"uniswapV2Factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Factory","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"999999","ConstructorArguments":"00000000000000000000000004825ca4d96064bd08605013d19cb7e108ff03d4000000000000000000000000052df909ebde5ec8b38cc90734633a906cd3c20400000000000000000000000031864bc58a47a4fc8782b4135873788e876de9eb000000000000000000000000c12e00de204d58ead5b5ce9054e94aee7747fb6c0000000000000000000000005c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f0000000000000000000000005671b249391ca5e6a8fe28ceb1e85dc41c12ba7d","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}