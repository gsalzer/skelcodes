{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *        _________  ________ _____________________\r\n ___.__.\\_   ___ \\ \\_____  \\\\______   \\_   _____/\r\n<   |  |/    \\  \\/  /   |   \\|       _/|    __)_ \r\n \\___  |\\     \\____/    |    \\    |   \\|        \\\r\n / ____| \\______  /\\_______  /____|_  /_______  /\r\n \\/             \\/         \\/       \\/        \\/ \r\n*/\r\n/*\r\n* SECURITY AUDITED\r\n* DEV = DUPA\r\n*/\r\n\r\npragma solidity ^0.5.0;\r\n\r\n\r\ncontract ERC20Interface {\r\n    \r\n    function allowance(address tokenOwner, address spender) \r\n        public \r\n        view \r\n        returns (uint remaining);\r\n   \r\n    function approve(address spender, uint tokens) \r\n        public \r\n        returns (bool success);\r\n    \r\n    function totalSupply() \r\n        public \r\n        view \r\n        returns (uint);\r\n   \r\n    function balanceOf(address tokenOwner) \r\n        public \r\n        view \r\n        returns (uint balance);\r\n        \r\n    function transfer(address to, uint tokens) \r\n        public \r\n        returns (bool success);\r\n        \r\n    function transferFrom(address from, address to, uint tokens) \r\n        public \r\n        returns (bool success);\r\n     \r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n    \r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 x, uint256 y) \r\n        internal \r\n        pure returns (uint256) \r\n    {\r\n        uint256 z = x + y;\r\n        assert(z >= x);\r\n        return z;\r\n    }\r\n      \r\n    function subtract(uint256 x, uint256 y) \r\n        internal \r\n        pure \r\n        returns (uint256) \r\n    {\r\n        assert(y <= x);\r\n        return x - y;\r\n    }\r\n    \r\n    function multiply(uint256 x, uint256 y) \r\n        internal \r\n        pure \r\n        returns (uint256) \r\n    {\r\n        if (x == 0) {\r\n          return 0;\r\n        }\r\n        uint256 z = x * y;\r\n        assert(z / x == y);\r\n        return z;\r\n    }\r\n    \r\n    function divide(uint256 x, uint256 y) \r\n        internal \r\n        pure \r\n        returns (uint256) \r\n    {\r\n        uint256 z = x / y;\r\n        return z;\r\n    }\r\n    \r\n    function ceil(uint256 x, uint256 y) \r\n        internal \r\n        pure \r\n        returns (uint256) \r\n    {\r\n        uint256 c = add(x,y);\r\n        uint256 d = subtract(c,1);\r\n        return multiply(divide(d,y),y);\r\n    }\r\n}\r\n\r\ncontract yCORE is ERC20Interface {\r\n    \r\n    using SafeMath for uint256;\r\n    \r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    \r\n    uint256 public burnPercent = 10;\r\n    uint256 public _totalSupply;\r\n    \r\n    mapping(address => uint) balances;\r\n    mapping(address => mapping(address => uint)) allowed;\r\n    \r\n    // This notifies clients about the amount burnt. This is a random burn event triggered every 100 transactions\r\n    event BurnEvent(address indexed from, uint256 value);\r\n\r\n    constructor() public {\r\n        name = \"yCORE.network\";\r\n        symbol = \"yCORE\";\r\n        decimals = 18;\r\n        _totalSupply = 1000000000000000000000;\r\n        \r\n        balances[msg.sender] = _totalSupply;\r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n    }\r\n    \r\n    function totalSupply() public view returns (uint) {\r\n        return _totalSupply  - balances[address(0)];\r\n    }\r\n    \r\n    /**\r\n     * Burn tokensToBurn\r\n     * This is a random burn event that happens every 100 transactions\r\n     * Remove `_value` tokens from the system irreversibly\r\n     *\r\n     * @param _value the amount of money to burn\r\n     */\r\n    function burnevent(uint256 _value) public returns (bool success) {\r\n        require(balances[msg.sender] >= _value);   // Check if the sender has enough\r\n        balances[msg.sender] -= _value;            // Subtract from the sender\r\n        _totalSupply -= _value;                      // Updates totalSupply\r\n        emit BurnEvent(msg.sender, _value);\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * Address token allowance\r\n     */\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n    \r\n    /**\r\n     * Retrieves burn perfent. Standard 10 percent\r\n     */\r\n    function getBurnPercentValue(uint256 value) public view returns (uint256)  {\r\n        uint256 burnValue = value.ceil(burnPercent); // 10% burn\r\n        return burnValue;\r\n    }\r\n    \r\n    /**\r\n     * Address approval\r\n     */\r\n    function approve(address spender, uint tokens) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * Address balance\r\n     */\r\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n        return balances[tokenOwner];\r\n    }\r\n    \r\n    /**\r\n     * Address transfer from\r\n     */\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n        balances[from] = balances[from].subtract(tokens);\r\n        allowed[from][msg.sender] = allowed[from][msg.sender].subtract(tokens);\r\n        balances[to] = balances[to].add(tokens);\r\n        emit Transfer(from, to, tokens);\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * Address transfer to\r\n     */\r\n    function transfer(address to, uint value) public returns (bool success) {\r\n        require(value <= balances[msg.sender]);\r\n        require(to != address(0));\r\n    \r\n        uint256 tokensToBurn = getBurnPercentValue(value);\r\n        uint256 tokensToTransfer = value.subtract(tokensToBurn);\r\n    \r\n        balances[msg.sender] = balances[msg.sender].subtract(value);\r\n        balances[to] = balances[to].add(tokensToTransfer);\r\n    \r\n        _totalSupply = _totalSupply.subtract(tokensToBurn);\r\n    \r\n        emit Transfer(msg.sender, to, tokensToTransfer);\r\n        emit Transfer(msg.sender, address(0), tokensToBurn);\r\n        return true;\r\n    }\r\n    \r\n    \r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BurnEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnevent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"getBurnPercentValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"yCORE","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://c4ae6ab63a885f0890af55969c7e1903cfb466993fb73d794385d7249b2cdc51"}]}