{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2020-09-11\r\n*/\r\n\r\npragma solidity ^0.5.17;\r\n////////////////////////////////////////////////////////////////////////////////\r\ncontract    Token\r\n{\r\n    //----- VARIABLES\r\n\r\n    address public              owner;          // Owner of this contract\r\n    address public              admin;          // The one who is allowed to do changes\r\n\r\n    mapping(address => uint256)                         balances;       // Maintain balance in a mapping\r\n    mapping(address => mapping (address => uint256))    allowances;     // Allowances index-1 = Owner account   index-2 = spender account\r\n\r\n    //------ TOKEN SPECIFICATION\r\n\r\n    string  public  constant    name       = \"QAI Token\";\r\n    string  public  constant    symbol     = \"QAI\";\r\n    uint256 public  constant    decimals   = 18;      // Handle the coin as FIAT (2 decimals). ETH Handles 18 decimal places\r\n\r\n    uint256 public              totalSupply = 10000000000 * 10**decimals;        // 10 Billions (18 decimals) then reduced to 800 Millions by burning the difference. so Real initial TotalSupply is 800 Millions\r\n\r\n    //---------------------------------------------------- smartcontract control\r\n\r\n    uint256 public              icoDeadLine = 0;     // 2000-01-01 00:00 (GMT+0)\r\n\r\n    //--------------------------------------------------------------------------\r\n\r\n    modifier duringIcoOnlyTheOwner()  // if not during the ico : everyone is allowed at anytime\r\n    {\r\n        require( now>icoDeadLine || msg.sender==owner );\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwner()            { require(msg.sender==owner);           _; }\r\n    modifier onlyAdmin()            { require(msg.sender==admin);           _; }\r\n\r\n    //----- EVENTS\r\n\r\n    event Transfer(address indexed fromAddr, address indexed toAddr,   uint256 amount);\r\n    event Approval(address indexed _owner,   address indexed _spender, uint256 amount);\r\n\r\n            //---- extra EVENTS\r\n\r\n    event onAdminUserChanged(   address oldAdmin,  address newAdmin);\r\n    event onOwnershipTransfered(address oldOwner,  address newOwner);\r\n    event onAdminUserChange(    address oldAdmin,  address newAdmin);\r\n\r\n    event onIcoDeadlineChanged( uint256 previousDeadline,  uint256 newDeadline);\r\n\r\n    //--------------------------------------------------------------------------\r\n    //--------------------------------------------------------------------------\r\n    constructor()   public\r\n    {\r\n        owner = msg.sender;\r\n        admin = owner;\r\n\r\n        balances[owner] = totalSupply;\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    //--------------------------------------------------------------------------\r\n    //----- ERC20 FUNCTIONS\r\n    //--------------------------------------------------------------------------\r\n    //--------------------------------------------------------------------------\r\n    function balanceOf(address walletAddress) public view returns (uint256 balance)\r\n    {\r\n        return balances[walletAddress];\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    function transfer(address toAddr, uint256 amountInWei)  public   duringIcoOnlyTheOwner   returns (bool)     // don't icoNotPaused here. It's a logic issue.\r\n    {\r\n        require(toAddr!=address(0x0) && toAddr!=msg.sender && amountInWei>0);     // Prevent transfer to 0x0 address and to self, amount must be >0\r\n\r\n        uint256 balanceFrom = balances[msg.sender] - amountInWei;\r\n        uint256 balanceTo   = balances[toAddr]     + amountInWei;\r\n       \r\n        assert(balanceFrom <= balances[msg.sender]);\r\n        assert(balanceTo   >= balances[toAddr]);\r\n       \r\n        balances[msg.sender] = balanceFrom;\r\n        balances[toAddr]     = balanceTo;\r\n\r\n        emit Transfer(msg.sender, toAddr, amountInWei);\r\n\r\n        return true;\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    function    allowance(address walletAddress, address spender) public view returns (uint remaining)\r\n    {\r\n        return allowances[walletAddress][spender];\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    function    transferFrom(address fromAddr, address toAddr, uint256 amountInWei)  public  returns (bool)\r\n    {\r\n        require(amountInWei!=0                                   &&\r\n                balances[fromAddr]               >= amountInWei  &&\r\n                allowances[fromAddr][msg.sender] >= amountInWei);\r\n       \r\n        uint256 balanceFrom  = balances[fromAddr]               - amountInWei;\r\n        uint256 balanceTo    = balances[toAddr]                 + amountInWei;\r\n        uint256 newAllowance = allowances[fromAddr][msg.sender] - amountInWei;\r\n\r\n        assert(balanceFrom  <= balances[fromAddr]);\r\n        assert(balanceTo    >= balances[toAddr]);\r\n        assert(newAllowance <= allowances[fromAddr][msg.sender]);\r\n\r\n        balances[fromAddr]               = balanceFrom;\r\n        balances[toAddr]                 = balanceTo;\r\n        allowances[fromAddr][msg.sender] = newAllowance;\r\n\r\n        emit Transfer(fromAddr, toAddr, amountInWei);\r\n        return true;\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    function    approve(address spender, uint256 amountInWei) public returns (bool)\r\n    {\r\n        require((amountInWei == 0) || (allowances[msg.sender][spender] == 0));\r\n       \r\n        allowances[msg.sender][spender] = amountInWei;\r\n        emit Approval(msg.sender, spender, amountInWei);\r\n\r\n        return true;\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    function()   external                 \r\n    {\r\n        assert(true == false);      // If Ether is sent to this address, don't handle it -> send it back.\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    //--------------------------------------------------------------------------\r\n    //--------------------------------------------------------------------------\r\n    function    transferOwnership(address newOwner) public onlyOwner               // @param newOwner The address to transfer ownership to.\r\n    {\r\n        require(newOwner != address(0x0));\r\n\r\n        emit onOwnershipTransfered(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    //--------------------------------------------------------------------------\r\n    //--------------------------------------------------------------------------\r\n    //--------------------------------------------------------------------------\r\n    function    changeAdminUser(address newAdminAddress) public onlyOwner\r\n    {\r\n        require(newAdminAddress!=address(0x0));\r\n\r\n        emit onAdminUserChange(admin, newAdminAddress);\r\n        admin = newAdminAddress;\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    //--------------------------------------------------------------------------\r\n    function    changeIcoDeadLine(uint256 newIcoDeadline) public onlyAdmin\r\n    {\r\n        require(newIcoDeadline!=0);\r\n\r\n        emit onIcoDeadlineChanged(icoDeadLine, newIcoDeadline);\r\n        icoDeadLine = newIcoDeadline;\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    //--------------------------------------------------------------------------\r\n    //--------------------------------------------------------------------------\r\n    function destroySomeTokens(uint256 amountToBurnInWei) public onlyAdmin  returns(uint)\r\n    {\r\n        require(msg.sender==owner && balances[owner]>=amountToBurnInWei);\r\n\r\n        address   toAddr = 0x0000000000000000000000000000000000000000;\r\n\r\n        balances[owner]  = balances[owner]  - amountToBurnInWei;\r\n        balances[toAddr] = balances[toAddr] + amountToBurnInWei;      // send to 0x00\r\n\r\n        emit Transfer(msg.sender, toAddr, amountToBurnInWei);\r\n\r\n        totalSupply = totalSupply - amountToBurnInWei;\r\n\r\n        return 1;\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    function addSomeTokens(uint256 amountToAddInWei) public onlyAdmin  returns(uint)\r\n    {\r\n        require(msg.sender==owner);\r\n\r\n        uint256     newOwnerBalance = balances[owner] + amountToAddInWei;\r\n        uint256     newTotalSupply  = totalSupply     + amountToAddInWei;\r\n\r\n        assert(newOwnerBalance >= totalSupply);\r\n        assert(newTotalSupply  >= totalSupply);\r\n\r\n        balances[owner] = balances[owner] + amountToAddInWei;\r\n\r\n        emit Transfer(msg.sender, owner, amountToAddInWei);\r\n\r\n        totalSupply = totalSupply + amountToAddInWei;\r\n\r\n        return 1;\r\n    }\r\n    //--------------------------------------------------------------------------\r\n    //--------------------------------------------------------------------------\r\n    //--------------------------------------------------------------------------\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"onAdminUserChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"onAdminUserChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousDeadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDeadline\",\"type\":\"uint256\"}],\"name\":\"onIcoDeadlineChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"onOwnershipTransfered\",\"type\":\"event\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToAddInWei\",\"type\":\"uint256\"}],\"name\":\"addSomeTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInWei\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdminAddress\",\"type\":\"address\"}],\"name\":\"changeAdminUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newIcoDeadline\",\"type\":\"uint256\"}],\"name\":\"changeIcoDeadLine\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToBurnInWei\",\"type\":\"uint256\"}],\"name\":\"destroySomeTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoDeadLine\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInWei\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInWei\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Token","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv2","Proxy":"0","Implementation":"","SwarmSource":"bzzr://841109076cb4eacdc8f1aec0c73c33a8c146287ff4b903acd135212487a7d183"}]}