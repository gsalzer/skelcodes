{"status":"1","message":"OK","result":[{"SourceCode":"from vyper.interfaces import ERC20\r\n\r\nimplements: ERC20\r\n\r\nevent Transfer:\r\n    _from: indexed(address)\r\n    _to: indexed(address)\r\n    _value: uint256\r\n\r\nevent Approval:\r\n    _owner: indexed(address)\r\n    _spender: indexed(address)\r\n    _value: uint256\r\n\r\nevent Freeze:\r\n    _account: indexed(address)\r\n    _freeze: bool\r\n\r\nname: public(String[10])\r\nsymbol: public(String[3])\r\ntokenSupply: public(uint256)\r\nmaxSupply: public(uint256)\r\ndecimals: public(uint256)\r\nbalances: public(HashMap[address, uint256])\r\n\r\nallowed: HashMap[address, HashMap[address, uint256]]\r\nfrozenBalances: public(HashMap[address, bool])\r\nowner: public(address)\r\n\r\n\r\n\r\necoMgr: public(address)\r\n\r\n\r\n@external\r\ndef __init__():\r\n    _initialSupply: uint256 = 800\r\n    _decimals: uint256 = 6\r\n    self.tokenSupply = _initialSupply * 10 ** _decimals\r\n    self.name = 'Honos Coin'\r\n    self.symbol = 'HON'\r\n    self.decimals = _decimals\r\n    self.owner = msg.sender\r\n    self.balances[msg.sender] = self.tokenSupply\r\n    self.maxSupply = 20000000000\r\n\r\n\r\n    log Transfer(ZERO_ADDRESS, msg.sender, self.tokenSupply)\r\n\r\n\r\n\r\n@external\r\ndef addMgr(_mgr: address) -> bool:\r\n    assert msg.sender == self.owner\r\n    self.ecoMgr = _mgr\r\n    return True\r\n\r\n@external\r\ndef freezeBalance(_target: address, _freeze: bool) -> bool:\r\n    assert self.ecoMgr == msg.sender or msg.sender == self.owner\r\n    self.frozenBalances[_target] = _freeze\r\n    log Freeze(_target, _freeze)\r\n    return True\r\n\r\n@external\r\ndef mintToken(_value: uint256) -> bool:\r\n    \"\"\"\r\n    @dev Mint an amount of token, send to economy manager for later sale.\r\n    @param _value The amount of token to be minted.\r\n    \"\"\"\r\n    assert self.ecoMgr == msg.sender or self.owner == msg.sender\r\n    assert self.tokenSupply + _value <= self.maxSupply\r\n    self.tokenSupply += _value\r\n    self.balances[msg.sender] += _value\r\n    log Transfer(ZERO_ADDRESS, msg.sender, _value)\r\n    return True\r\n\r\n@external\r\ndef burnToken(_value: uint256) -> bool:\r\n    \"\"\"\r\n    @dev Burn an amount of the token of msg.sender.\r\n    @param _value The amount of token to be burned.\r\n    \"\"\"\r\n    assert self.ecoMgr == msg.sender or self.owner == msg.sender\r\n    assert self.balances[msg.sender] >= _value\r\n    self.tokenSupply -= _value\r\n    self.balances[msg.sender] -= _value\r\n    \r\n    log Transfer(msg.sender, ZERO_ADDRESS, _value)\r\n    return True\r\n\r\n@external\r\ndef balanceOf(_owner: address) -> uint256:\r\n    return self.balances[_owner]\r\n\r\n@external\r\ndef transfer(_to: address, _amount: uint256) -> bool:\r\n    assert _to != ZERO_ADDRESS\r\n    assert self.balances[msg.sender] >= _amount\r\n    assert self.frozenBalances[msg.sender] == False\r\n    self.balances[msg.sender] -= _amount\r\n    self.balances[_to] += _amount\r\n    log Transfer(msg.sender, _to, _amount)\r\n\r\n    return True\r\n\r\n@external\r\ndef transferFrom(_from: address, _to: address, _value: uint256) -> bool:\r\n    assert _value <= self.allowed[_from][msg.sender]\r\n    assert _value <= self.balances[_from]\r\n    assert self.frozenBalances[msg.sender] == False\r\n\r\n    self.balances[_from] -= _value\r\n    self.allowed[_from][msg.sender] -= _value\r\n    self.balances[_to] += _value\r\n    log Transfer(_from, _to, _value)\r\n\r\n    return True\r\n\r\n@external\r\ndef approve(_spender: address, _amount: uint256) -> bool:\r\n    self.allowed[msg.sender][_spender] = _amount\r\n    log Approval(msg.sender, _spender, _amount)\r\n\r\n    return True\r\n\r\n@external\r\ndef allowance(_owner: address, _spender: address) -> uint256:\r\n    return self.allowed[_owner][_spender]\r\n\r\n@external\r\ndef totalSupply() -> uint256:\r\n    return self.tokenSupply","ABI":"[{\"name\":\"Transfer\",\"inputs\":[{\"type\":\"address\",\"name\":\"_from\",\"indexed\":true},{\"type\":\"address\",\"name\":\"_to\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"_value\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"Approval\",\"inputs\":[{\"type\":\"address\",\"name\":\"_owner\",\"indexed\":true},{\"type\":\"address\",\"name\":\"_spender\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"_value\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"Freeze\",\"inputs\":[{\"type\":\"address\",\"name\":\"_account\",\"indexed\":true},{\"type\":\"bool\",\"name\":\"_freeze\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"outputs\":[],\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"name\":\"addMgr\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_mgr\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":36292},{\"name\":\"freezeBalance\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_target\"},{\"type\":\"bool\",\"name\":\"_freeze\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":39051},{\"name\":\"mintToken\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"uint256\",\"name\":\"_value\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":78238},{\"name\":\"burnToken\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"uint256\",\"name\":\"_value\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":77394},{\"name\":\"balanceOf\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_owner\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":1425},{\"name\":\"transfer\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_to\"},{\"type\":\"uint256\",\"name\":\"_amount\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":76976},{\"name\":\"transferFrom\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_from\"},{\"type\":\"address\",\"name\":\"_to\"},{\"type\":\"uint256\",\"name\":\"_value\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":114307},{\"name\":\"approve\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_spender\"},{\"type\":\"uint256\",\"name\":\"_amount\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":37943},{\"name\":\"allowance\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"_owner\"},{\"type\":\"address\",\"name\":\"_spender\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":1699},{\"name\":\"totalSupply\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":1421},{\"name\":\"name\",\"outputs\":[{\"type\":\"string\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":6876},{\"name\":\"symbol\",\"outputs\":[{\"type\":\"string\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":6906},{\"name\":\"tokenSupply\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1511},{\"name\":\"maxSupply\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1541},{\"name\":\"decimals\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1571},{\"name\":\"balances\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"arg0\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1755},{\"name\":\"frozenBalances\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"arg0\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1785},{\"name\":\"owner\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1661},{\"name\":\"ecoMgr\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1691}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.4","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":""}]}