{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract ClaimEncoder {\r\n    function encodeClaim(\r\n        address[] calldata tokens,\r\n        uint256[] calldata cumulativeAmounts,\r\n        address account,\r\n        uint256 index,\r\n        uint256 cycle\r\n    ) public view returns (bytes memory encoded, bytes32 hash) {\r\n        encoded = abi.encode(index, account, cycle, tokens, cumulativeAmounts);\r\n        hash = keccak256(encoded);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"cumulativeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cycle\",\"type\":\"uint256\"}],\"name\":\"encodeClaim\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ClaimEncoder","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://8da8b352b69a61fe4300b842c017cf288a0854e8ae1b6ac086edca53ef51546a"}]}