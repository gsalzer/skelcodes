{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\n\n\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// SPDX-License-Identifier: MIT\ncontract Donation {\n    IERC20 public Token;\n    uint256 public start;\n    uint256 public finish;\n    address payable public ad1;\n    address payable public ad2;\n    address payable public ad3;\n    address payable public ad4;\n\n    constructor(\n        IERC20 Tokent,\n        address payable a1,\n        address payable a2,\n        address payable a3,\n        address payable a4\n    ) public {\n        Token = Tokent;\n        start = now;\n        finish = now + 20 hours;\n        ad1 = a1;\n        ad2 = a2;\n        ad3 = a3;\n        ad4 = a4;\n    }\n\n    receive() external payable {\nrequire (tbal >= getamout(msg.value));\n        tbal -= getamout(msg.value);\n        Token.transfer(\n            msg.sender,\n            (msg.value * 10 * (finish - start)) /\n                ((finish - start) - (now - start))\n        );\n    }\n\n    uint256 public bal;\n\n    function donate() public {\n        bal = address(this).balance;\n        _transfer(ad1, bal / 4);\n        _transfer(ad2, bal / 4);\n        _transfer(ad3, bal / 4);\n        _transfer(ad4, bal / 4);\n    }\n\n    function _transfer(address payable to, uint256 amount) internal {\n      (bool success,) = to.call{value: amount}(\"\");\n      require(success, \"Donation: Error transferring ether.\");\n    }\n\nfunction getamout(uint256 am) public view returns (uint256){\n       uint256 amout;\n       amout = (am * 10 * (finish - start)) /\n                ((finish - start) - (now - start));\n       return amout;\n}\nuint256 public tbal;\nfunction reset() public {\n        require (now >=finish);\n        start = now;\n        finish = now + 20 hours;\n        tap();\n        }\n\nfunction tap() internal {\n        tbal = Token.balanceOf(address(this)) / 100;\n    }\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"Tokent\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"a1\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"a2\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"a3\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"a4\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ad1\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ad2\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ad3\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ad4\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"am\",\"type\":\"uint256\"}],\"name\":\"getamout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tbal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Donation","CompilerVersion":"v0.6.5+commit.f956cc89","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000f14c2a8a54ff392d7a86f19859e6c301d00c33c200000000000000000000000050990f09d4f0cb864b8e046e7edc749de410916b00000000000000000000000000de4b13153673bcae2616b67bf822500d325fc30000000000000000000000008d6d29a74331c043ac2569cce6b193b78fa745d8000000000000000000000000de0b295669a9fd93d5f28d9ec85e40f4cb697bae","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}