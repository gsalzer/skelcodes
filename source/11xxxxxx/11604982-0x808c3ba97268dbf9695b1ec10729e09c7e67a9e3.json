{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.12;\r\n\r\ninterface marketManagerInterface  {\r\n\tfunction setOracleProxy(address oracleProxyAddr) external returns (bool);\r\n\r\n\tfunction setBreakerTable(address _target, bool _status) external returns (bool);\r\n\r\n\tfunction getCircuitBreaker() external view returns (bool);\r\n\r\n\tfunction setCircuitBreaker(bool _emergency) external returns (bool);\r\n\r\n\tfunction getTokenHandlerInfo(uint256 handlerID) external view returns (bool, address, string memory);\r\n\r\n\tfunction handlerRegister(uint256 handlerID, address tokenHandlerAddr) external returns (bool);\r\n\r\n\tfunction applyInterestHandlers(address payable userAddr, uint256 callerID, bool allFlag) external returns (uint256, uint256, uint256);\r\n\r\n\tfunction liquidationApplyInterestHandlers(address payable userAddr, uint256 callerID) external returns (uint256, uint256, uint256, uint256, uint256);\r\n\r\n\tfunction getTokenHandlerPrice(uint256 handlerID) external view returns (uint256);\r\n\r\n\tfunction getTokenHandlerBorrowLimit(uint256 handlerID) external view returns (uint256);\r\n\r\n\tfunction getTokenHandlerSupport(uint256 handlerID) external view returns (bool);\r\n\r\n\tfunction getTokenHandlersLength() external view returns (uint256);\r\n\r\n\tfunction setTokenHandlersLength(uint256 _tokenHandlerLength) external returns (bool);\r\n\r\n\tfunction getTokenHandlerID(uint256 index) external view returns (uint256);\r\n\r\n\tfunction getTokenHandlerMarginCallLimit(uint256 handlerID) external view returns (uint256);\r\n\r\n\tfunction getUserIntraHandlerAssetWithInterest(address payable userAddr, uint256 handlerID) external view returns (uint256, uint256);\r\n\r\n\tfunction getUserTotalIntraCreditAsset(address payable userAddr) external view returns (uint256, uint256);\r\n\r\n\tfunction getUserLimitIntraAsset(address payable userAddr) external view returns (uint256, uint256);\r\n\r\n\tfunction getUserCollateralizableAmount(address payable userAddr, uint256 handlerID) external view returns (uint256);\r\n\r\n\tfunction getUserExtraLiquidityAmount(address payable userAddr, uint256 handlerID) external view returns (uint256);\r\n\r\n\tfunction partialLiquidationUser(address payable delinquentBorrower, uint256 liquidateAmount, address payable liquidator, uint256 liquidateHandlerID, uint256 rewardHandlerID) external returns (uint256, uint256, uint256);\r\n\r\n\tfunction getMaxLiquidationReward(address payable delinquentBorrower, uint256 liquidateHandlerID, uint256 liquidateAmount, uint256 rewardHandlerID, uint256 rewardRatio) external view returns (uint256);\r\n\r\n\tfunction partialLiquidationUserReward(address payable delinquentBorrower, uint256 rewardAmount, address payable liquidator, uint256 handlerID) external returns (uint256);\r\n\r\n\tfunction setLiquidationManager(address liquidationManagerAddr) external returns (bool);\r\n\r\n\tfunction rewardClaimAll(address payable userAddr) external returns (bool);\r\n\r\n\tfunction rewardTransfer(uint256 _claimAmountSum) external returns (bool);\r\n\r\n\tfunction updateRewardParams(address payable userAddr) external returns (bool);\r\n\r\n\tfunction interestUpdateReward() external returns (bool);\r\n\r\n\tfunction getGlobalRewardInfo() external view returns (uint256, uint256, uint256);\r\n}\r\n\r\ninterface interestModelInterface  {\r\n\tfunction getInterestAmount(address handlerDataStorageAddr, address payable userAddr, bool isView) external view returns (bool, uint256, uint256, bool, uint256, uint256);\r\n\r\n\tfunction viewInterestAmount(address handlerDataStorageAddr, address payable userAddr) external view returns (bool, uint256, uint256, bool, uint256, uint256);\r\n\r\n\tfunction getSIRandBIR(address handlerDataStorageAddr, uint256 depositTotalAmount, uint256 borrowTotalAmount) external view returns (uint256, uint256);\r\n}\r\n\r\ninterface marketHandlerDataStorageInterface  {\r\n\tfunction setCircuitBreaker(bool _emergency) external returns (bool);\r\n\r\n\tfunction setNewCustomer(address payable userAddr) external returns (bool);\r\n\r\n\tfunction getUserAccessed(address payable userAddr) external view returns (bool);\r\n\r\n\tfunction setUserAccessed(address payable userAddr, bool _accessed) external returns (bool);\r\n\r\n\tfunction getReservedAddr() external view returns (address payable);\r\n\r\n\tfunction setReservedAddr(address payable reservedAddress) external returns (bool);\r\n\r\n\tfunction getReservedAmount() external view returns (int256);\r\n\r\n\tfunction addReservedAmount(uint256 amount) external returns (int256);\r\n\r\n\tfunction subReservedAmount(uint256 amount) external returns (int256);\r\n\r\n\tfunction updateSignedReservedAmount(int256 amount) external returns (int256);\r\n\r\n\tfunction setTokenHandler(address _marketHandlerAddr, address _interestModelAddr) external returns (bool);\r\n\r\n\tfunction setCoinHandler(address _marketHandlerAddr, address _interestModelAddr) external returns (bool);\r\n\r\n\tfunction getDepositTotalAmount() external view returns (uint256);\r\n\r\n\tfunction addDepositTotalAmount(uint256 amount) external returns (uint256);\r\n\r\n\tfunction subDepositTotalAmount(uint256 amount) external returns (uint256);\r\n\r\n\tfunction getBorrowTotalAmount() external view returns (uint256);\r\n\r\n\tfunction addBorrowTotalAmount(uint256 amount) external returns (uint256);\r\n\r\n\tfunction subBorrowTotalAmount(uint256 amount) external returns (uint256);\r\n\r\n\tfunction getUserIntraDepositAmount(address payable userAddr) external view returns (uint256);\r\n\r\n\tfunction addUserIntraDepositAmount(address payable userAddr, uint256 amount) external returns (uint256);\r\n\r\n\tfunction subUserIntraDepositAmount(address payable userAddr, uint256 amount) external returns (uint256);\r\n\r\n\tfunction getUserIntraBorrowAmount(address payable userAddr) external view returns (uint256);\r\n\r\n\tfunction addUserIntraBorrowAmount(address payable userAddr, uint256 amount) external returns (uint256);\r\n\r\n\tfunction subUserIntraBorrowAmount(address payable userAddr, uint256 amount) external returns (uint256);\r\n\r\n\tfunction addDepositAmount(address payable userAddr, uint256 amount) external returns (bool);\r\n\r\n\tfunction addBorrowAmount(address payable userAddr, uint256 amount) external returns (bool);\r\n\r\n\tfunction subDepositAmount(address payable userAddr, uint256 amount) external returns (bool);\r\n\r\n\tfunction subBorrowAmount(address payable userAddr, uint256 amount) external returns (bool);\r\n\r\n\tfunction getUserAmount(address payable userAddr) external view returns (uint256, uint256);\r\n\r\n\tfunction getHandlerAmount() external view returns (uint256, uint256);\r\n\r\n\tfunction getAmount(address payable userAddr) external view returns (uint256, uint256, uint256, uint256);\r\n\r\n\tfunction setAmount(address payable userAddr, uint256 depositTotalAmount, uint256 borrowTotalAmount, uint256 depositAmount, uint256 borrowAmount) external returns (uint256);\r\n\r\n\tfunction setBlocks(uint256 lastUpdatedBlock, uint256 inactiveActionDelta) external returns (bool);\r\n\r\n\tfunction getLastUpdatedBlock() external view returns (uint256);\r\n\r\n\tfunction setLastUpdatedBlock(uint256 _lastUpdatedBlock) external returns (bool);\r\n\r\n\tfunction getInactiveActionDelta() external view returns (uint256);\r\n\r\n\tfunction setInactiveActionDelta(uint256 inactiveActionDelta) external returns (bool);\r\n\r\n\tfunction syncActionEXR() external returns (bool);\r\n\r\n\tfunction getActionEXR() external view returns (uint256, uint256);\r\n\r\n\tfunction setActionEXR(uint256 actionDepositExRate, uint256 actionBorrowExRate) external returns (bool);\r\n\r\n\tfunction getGlobalDepositEXR() external view returns (uint256);\r\n\r\n\tfunction getGlobalBorrowEXR() external view returns (uint256);\r\n\r\n\tfunction setEXR(address payable userAddr, uint256 globalDepositEXR, uint256 globalBorrowEXR) external returns (bool);\r\n\r\n\tfunction getUserEXR(address payable userAddr) external view returns (uint256, uint256);\r\n\r\n\tfunction setUserEXR(address payable userAddr, uint256 depositEXR, uint256 borrowEXR) external returns (bool);\r\n\r\n\tfunction getGlobalEXR() external view returns (uint256, uint256);\r\n\r\n\tfunction getMarketHandlerAddr() external view returns (address);\r\n\r\n\tfunction setMarketHandlerAddr(address marketHandlerAddr) external returns (bool);\r\n\r\n\tfunction getInterestModelAddr() external view returns (address);\r\n\r\n\tfunction setInterestModelAddr(address interestModelAddr) external returns (bool);\r\n\r\n\tfunction getLimit() external view returns (uint256, uint256);\r\n\r\n\tfunction getBorrowLimit() external view returns (uint256);\r\n\r\n\tfunction getMarginCallLimit() external view returns (uint256);\r\n\r\n\tfunction getMinimumInterestRate() external view returns (uint256);\r\n\r\n\tfunction getLiquiditySensitivity() external view returns (uint256);\r\n\r\n\tfunction setBorrowLimit(uint256 _borrowLimit) external returns (bool);\r\n\r\n\tfunction setMarginCallLimit(uint256 _marginCallLimit) external returns (bool);\r\n\r\n\tfunction setMinimumInterestRate(uint256 _minimumInterestRate) external returns (bool);\r\n\r\n\tfunction setLiquiditySensitivity(uint256 _liquiditySensitivity) external returns (bool);\r\n\r\n\tfunction getLimitOfAction() external view returns (uint256);\r\n\r\n\tfunction setLimitOfAction(uint256 limitOfAction) external returns (bool);\r\n\r\n\tfunction getLiquidityLimit() external view returns (uint256);\r\n\r\n\tfunction setLiquidityLimit(uint256 liquidityLimit) external returns (bool);\r\n}\r\n\r\ninterface IERC20  {\r\n\tfunction totalSupply() external view returns (uint256);\r\n\r\n\tfunction balanceOf(address account) external view returns (uint256);\r\n\r\n\tfunction transfer(address recipient, uint256 amount) external ;\r\n\r\n\tfunction allowance(address owner, address spender) external view returns (uint256);\r\n\r\n\tfunction approve(address spender, uint256 amount) external view returns (bool);\r\n\r\n\tfunction transferFrom(address from, address to, uint256 value) external ;\r\n}\r\n\r\ninterface marketSIHandlerDataStorageInterface  {\r\n\tfunction setCircuitBreaker(bool _emergency) external returns (bool);\r\n\r\n\tfunction updateRewardPerBlockStorage(uint256 _rewardPerBlock) external returns (bool);\r\n\r\n\tfunction getRewardInfo(address userAddr) external view returns (uint256, uint256, uint256, uint256, uint256, uint256);\r\n\r\n\tfunction getMarketRewardInfo() external view returns (uint256, uint256, uint256);\r\n\r\n\tfunction setMarketRewardInfo(uint256 _rewardLane, uint256 _rewardLaneUpdateAt, uint256 _rewardPerBlock) external returns (bool);\r\n\r\n\tfunction getUserRewardInfo(address userAddr) external view returns (uint256, uint256, uint256);\r\n\r\n\tfunction setUserRewardInfo(address userAddr, uint256 _rewardLane, uint256 _rewardLaneUpdateAt, uint256 _rewardAmount) external returns (bool);\r\n\r\n\tfunction getBetaRate() external view returns (uint256);\r\n\r\n\tfunction setBetaRate(uint256 _betaRate) external returns (bool);\r\n}\r\n\r\ncontract proxy  {\r\n\taddress payable owner;\r\n\r\n\tuint256 handlerID;\r\n\r\n\tstring tokenName;\r\n\r\n\tuint256 constant unifiedPoint = 10 ** 18;\r\n\r\n\tuint256 unifiedTokenDecimal = 10 ** 18;\r\n\r\n\tuint256 underlyingTokenDecimal;\r\n\r\n\tmarketManagerInterface marketManager;\r\n\r\n\tinterestModelInterface interestModelInstance;\r\n\r\n\tmarketHandlerDataStorageInterface handlerDataStorage;\r\n\r\n\tmarketSIHandlerDataStorageInterface SIHandlerDataStorage;\r\n\r\n\tIERC20 erc20Instance;\r\n\r\n\taddress public handler;\r\n\r\n\taddress public SI;\r\n\r\n\tstring DEPOSIT = \"deposit(uint256,bool)\";\r\n\r\n\tstring REDEEM = \"withdraw(uint256,bool)\";\r\n\r\n\tstring BORROW = \"borrow(uint256,bool)\";\r\n\r\n\tstring REPAY = \"repay(uint256,bool)\";\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner, \"Ownable: caller is not the owner\");\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyMarketManager {\r\n\t\taddress msgSender = msg.sender;\r\n\t\trequire((msgSender == address(marketManager)) || (msgSender == owner), \"onlyMarketManager function\");\r\n\t\t_;\r\n\t}\r\n\r\n\tconstructor () public \r\n\t{\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tfunction ownershipTransfer(address _owner) onlyOwner external returns (bool)\r\n\t{\r\n\t\towner = address(uint160(_owner));\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction initialize(uint256 _handlerID, address handlerAddr, address marketManagerAddr, address interestModelAddr, address marketDataStorageAddr, address erc20Addr, string memory _tokenName, address siHandlerAddr, address SIHandlerDataStorageAddr) onlyOwner public returns (bool)\r\n\t{\r\n\t\thandlerID = _handlerID;\r\n\t\thandler = handlerAddr;\r\n\t\tmarketManager = marketManagerInterface(marketManagerAddr);\r\n\t\tinterestModelInstance = interestModelInterface(interestModelAddr);\r\n\t\thandlerDataStorage = marketHandlerDataStorageInterface(marketDataStorageAddr);\r\n\t\terc20Instance = IERC20(erc20Addr);\r\n\t\ttokenName = _tokenName;\r\n\t\tSI = siHandlerAddr;\r\n\t\tSIHandlerDataStorage = marketSIHandlerDataStorageInterface(SIHandlerDataStorageAddr);\r\n\t}\r\n\r\n\tfunction setHandlerID(uint256 _handlerID) onlyOwner public returns (bool)\r\n\t{\r\n\t\thandlerID = _handlerID;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setHandlerAddr(address handlerAddr) onlyOwner public returns (bool)\r\n\t{\r\n\t\thandler = handlerAddr;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setSiHandlerAddr(address siHandlerAddr) onlyOwner public returns (bool)\r\n\t{\r\n\t\tSI = siHandlerAddr;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getHandlerID() public view returns (uint256)\r\n\t{\r\n\t\treturn handlerID;\r\n\t}\r\n\r\n\tfunction getHandlerAddr() public view returns (address)\r\n\t{\r\n\t\treturn handler;\r\n\t}\r\n\r\n\tfunction getSiHandlerAddr() public view returns (address)\r\n\t{\r\n\t\treturn SI;\r\n\t}\r\n\r\n\tfunction migration(address target) onlyOwner public returns (bool)\r\n\t{\r\n\t\tuint256 balance = erc20Instance.balanceOf(address(this));\r\n\t\terc20Instance.transfer(target, balance);\r\n\t}\r\n\r\n\tfunction deposit(uint256 unifiedTokenAmount, bool flag) public payable returns (bool)\r\n\t{\r\n\t\tbool result;\r\n\t\tbytes memory returnData;\r\n\t\tbytes memory data = abi.encodeWithSignature(DEPOSIT, unifiedTokenAmount, flag);\r\n\t\t(result, returnData) = handler.delegatecall(data);\r\n\t\trequire(result, string(returnData));\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction withdraw(uint256 unifiedTokenAmount, bool flag) public returns (bool)\r\n\t{\r\n\t\tbool result;\r\n\t\tbytes memory returnData;\r\n\t\tbytes memory data = abi.encodeWithSignature(REDEEM, unifiedTokenAmount, flag);\r\n\t\t(result, returnData) = handler.delegatecall(data);\r\n\t\trequire(result, string(returnData));\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction borrow(uint256 unifiedTokenAmount, bool flag) public returns (bool)\r\n\t{\r\n\t\tbool result;\r\n\t\tbytes memory returnData;\r\n\t\tbytes memory data = abi.encodeWithSignature(BORROW, unifiedTokenAmount, flag);\r\n\t\t(result, returnData) = handler.delegatecall(data);\r\n\t\trequire(result, string(returnData));\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction repay(uint256 unifiedTokenAmount, bool flag) public payable returns (bool)\r\n\t{\r\n\t\tbool result;\r\n\t\tbytes memory returnData;\r\n\t\tbytes memory data = abi.encodeWithSignature(REPAY, unifiedTokenAmount, flag);\r\n\t\t(result, returnData) = handler.delegatecall(data);\r\n\t\trequire(result, string(returnData));\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction handlerProxy(bytes memory data) onlyMarketManager external returns (bool, bytes memory)\r\n\t{\r\n\t\tbool result;\r\n\t\tbytes memory returnData;\r\n\t\t(result, returnData) = handler.delegatecall(data);\r\n\t\trequire(result, string(returnData));\r\n\t\treturn (result, returnData);\r\n\t}\r\n\r\n\tfunction handlerViewProxy(bytes memory data) external returns (bool, bytes memory)\r\n\t{\r\n\t\tbool result;\r\n\t\tbytes memory returnData;\r\n\t\t(result, returnData) = handler.delegatecall(data);\r\n\t\trequire(result, string(returnData));\r\n\t\treturn (result, returnData);\r\n\t}\r\n\r\n\tfunction siProxy(bytes memory data) onlyMarketManager external returns (bool, bytes memory)\r\n\t{\r\n\t\tbool result;\r\n\t\tbytes memory returnData;\r\n\t\t(result, returnData) = SI.delegatecall(data);\r\n\t\trequire(result, string(returnData));\r\n\t\treturn (result, returnData);\r\n\t}\r\n\r\n\tfunction siViewProxy(bytes memory data) external returns (bool, bytes memory)\r\n\t{\r\n\t\tbool result;\r\n\t\tbytes memory returnData;\r\n\t\t(result, returnData) = SI.delegatecall(data);\r\n\t\trequire(result, string(returnData));\r\n\t\treturn (result, returnData);\r\n\t}\r\n}\r\n\r\ncontract UsdtHandlerProxy is proxy {\r\n    constructor()\r\n    proxy() public {}\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"unifiedTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"borrow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"unifiedTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHandlerAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHandlerID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSiHandlerAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"handler\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"handlerProxy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"handlerViewProxy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_handlerID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"handlerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketManagerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestModelAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"marketDataStorageAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"siHandlerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"SIHandlerDataStorageAddr\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"migration\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"ownershipTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"unifiedTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"handlerAddr\",\"type\":\"address\"}],\"name\":\"setHandlerAddr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_handlerID\",\"type\":\"uint256\"}],\"name\":\"setHandlerID\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"siHandlerAddr\",\"type\":\"address\"}],\"name\":\"setSiHandlerAddr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"siProxy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"siViewProxy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"unifiedTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"UsdtHandlerProxy","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"BSD-3-Clause","Proxy":"0","Implementation":"","SwarmSource":"ipfs://cf5708d56e8549a6dd6f1f2a61208e54ac313fc2146be6649e07ec8e79322b76"}]}