{"status":"1","message":"OK","result":[{"SourceCode":"pragma experimental ABIEncoderV2;\r\npragma solidity ^0.5.15;\r\n\r\ncontract AddressSignatureVerifier {\r\n    struct Wallet {\r\n        address wallet;\r\n        string message;\r\n    }\r\n\r\n    string private constant WALLET_TYPE = \"Wallet(address wallet,string message)\";\r\n    bytes32 private constant WALLET_TYPEHASH = keccak256(abi.encodePacked(WALLET_TYPE));\r\n\r\n    uint256 constant chainId = 1;\r\n    bytes32 constant salt = 0xb857c3bb801294f2c8a1a75673b4d63e1550f30e0ee556df6867a5a853b86047;\r\n    string private constant EIP712_DOMAIN = \"EIP712Domain(string name,string version,uint256 chainId,bytes32 salt)\";\r\n    bytes32 private constant EIP712_DOMAIN_TYPEHASH = keccak256(abi.encodePacked(EIP712_DOMAIN));\r\n    bytes32 private constant DOMAIN_SEPARATOR = keccak256(abi.encode(\r\n        EIP712_DOMAIN_TYPEHASH,\r\n        keccak256(\"POAP.app\"),\r\n        keccak256(\"1\"),\r\n        chainId,\r\n        salt\r\n    ));\r\n\r\n    function hashWallet(Wallet memory wallet) private pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(\r\n            \"\\x19\\x01\",\r\n           DOMAIN_SEPARATOR,\r\n            keccak256(abi.encode(\r\n                WALLET_TYPEHASH,\r\n                wallet.wallet,\r\n                wallet.message\r\n            ))\r\n        ));\r\n    }\r\n\r\n    function verify(Wallet memory wallet, bytes32 r, bytes32 s, uint8 v) public pure returns (address) {\r\n        return ecrecover(hashWallet(wallet), v, r, s);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"internalType\":\"struct AddressSignatureVerifier.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"AddressSignatureVerifier","CompilerVersion":"v0.5.15+commit.6a57276f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://309c9e5eac94618a8e07a140eac2b6a9635a0d30fa768ab6dc12050f2ec955c7"}]}