{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.16;\r\n\r\ninterface ISTAKE {\r\n    function stakeOf(address account) external view returns (uint);\r\n    function totalStake() external view returns (uint);\r\n}\r\n\r\ninterface IVIP {\r\n    function powerStakeOf(address account) external view returns (uint);\r\n    function totalPowerStake() external view returns (uint);\r\n    function currentUserCount() external view returns (uint32);\r\n    function userList(uint32 i) external view returns (address);\r\n    function vipPower(address account) external view returns (uint);\r\n}\r\n\r\ninterface IOVIP {\r\n    function vipPowerMap(address account) external view returns (uint);\r\n    function vipBuyPool() external view returns (uint);\r\n}\r\n\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract LIZ_READER is Ownable{\r\n    ISTAKE public stakeContract;\r\n    IVIP public vipContract;\r\n    IOVIP public oldVipContract;\r\n\r\n    uint constant private vipExtraStakeRate = 10 ether;\r\n\r\n    function setStakeContract(ISTAKE _target)onlyOwner public {\r\n        stakeContract = _target;\r\n    }\r\n\r\n    function setVipContract(IVIP _target)onlyOwner public {\r\n        vipContract = _target;\r\n    }\r\n\r\n    function setOldVipContract(IOVIP _target)onlyOwner public {\r\n        oldVipContract = _target;\r\n    }\r\n\r\n    function powerOf(address _addr) public view returns (uint) {\r\n        uint power  = vipContract.vipPower(_addr);\r\n        return stakeContract.stakeOf(_addr) + vipContract.powerStakeOf(_addr) + stakeContract.stakeOf(_addr)*power/10;\r\n    }\r\n\r\n\r\n    function totalPower() public view returns (uint) {\r\n        return stakeContract.totalStake() + vipContract.totalPowerStake() + vipExtStakes();\r\n\r\n    }\r\n\r\n    function vipExtStakes() public view returns (uint) {\r\n        uint vipAdd = 0;\r\n        for(uint32 i = 0;i<=vipContract.currentUserCount();i++){\r\n            address addr  = vipContract.userList(i);\r\n            uint power  = vipContract.vipPower(addr);\r\n            vipAdd = vipAdd + stakeContract.stakeOf(addr)*power/10;\r\n        }\r\n        return vipAdd;\r\n    }\r\n    // not used\r\n    function vipStakes() public view returns (uint) {\r\n        uint vipAdd = 0;\r\n        for(uint8 i = 0;i<=vipContract.currentUserCount();i++){\r\n            address addr  = vipContract.userList(i);\r\n            vipAdd = vipAdd + stakeContract.stakeOf(addr);\r\n        }\r\n        return vipAdd;\r\n    }\r\n\r\n\r\n\r\n    function powerOfT(address _addr) public view returns (uint) {\r\n        return stakeContract.stakeOf(_addr) + vipContract.powerStakeOf(_addr) + oldVipContract.vipPowerMap(_addr)*vipExtraStakeRate;\r\n    }\r\n\r\n\r\n    function totalPowerT() public view returns (uint) {\r\n        return stakeContract.totalStake() + vipContract.totalPowerStake() + oldVipContract.vipBuyPool()*10;\r\n\r\n    }\r\n\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"oldVipContract\",\"outputs\":[{\"internalType\":\"contract IOVIP\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"powerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"powerOfT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IOVIP\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setOldVipContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract ISTAKE\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setStakeContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IVIP\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"setVipContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakeContract\",\"outputs\":[{\"internalType\":\"contract ISTAKE\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalPowerT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vipContract\",\"outputs\":[{\"internalType\":\"contract IVIP\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vipExtStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vipStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"LIZ_READER","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://3e1bba4586679d012c83d36925ce2db06cb90b39d971b44f2e4d4716442ab3f1"}]}