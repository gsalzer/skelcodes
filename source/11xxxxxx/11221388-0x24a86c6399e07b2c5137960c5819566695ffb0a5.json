{"status":"1","message":"OK","result":[{"SourceCode":"# @version 0.2.7\r\n\r\nfrom vyper.interfaces import ERC20\r\n\r\ninterface Vault:\r\n    def deposit(amount: uint256): nonpayable\r\n    def transfer(addr: address, amount: uint256) -> bool: nonpayable\r\n    def balanceOf(addr: address) -> uint256: view\r\n\r\ninterface Claimable:\r\n    def claimFor(recipient: address): nonpayable\r\n    def claim(recipient: address): nonpayable\r\n\r\nthreeCrv: public(ERC20)\r\nthreeCrvVault: public(Vault)\r\nvecrvVault: public(Claimable)\r\n\r\n@external\r\ndef __init__():\r\n    self.threeCrv = ERC20(0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490)\r\n    self.vecrvVault = Claimable(0xc5bDdf9843308380375a611c18B50Fb9341f502A)\r\n    self.threeCrvVault = Vault(0x9cA85572E6A3EbF24dEDd195623F188735A5179f)\r\n    self.threeCrv.approve(self.vecrvVault.address, MAX_UINT256)\r\n\r\n@external\r\ndef zap():\r\n    before: uint256 = self.threeCrv.balanceOf(msg.sender)\r\n    self.vecrvVault.claimFor(msg.sender)\r\n    after: uint256 = self.threeCrv.balanceOf(msg.sender)\r\n    self.threeCrv.transferFrom(msg.sender, self, after - before)\r\n    self.threeCrvVault.deposit(self.threeCrv.balanceOf(self))\r\n    self.threeCrvVault.transfer(msg.sender, self.threeCrvVault.balanceOf(self))","ABI":"[{\"outputs\":[],\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"name\":\"zap\",\"outputs\":[],\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"gas\":14944},{\"name\":\"threeCrv\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1091},{\"name\":\"threeCrvVault\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1121},{\"name\":\"vecrvVault\",\"outputs\":[{\"type\":\"address\",\"name\":\"\"}],\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"gas\":1151}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.2.7","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":""}]}