{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.7.5;/* SPDX-License-Identifier: UNLICENSED */library SafeMath {  function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {    if (a == 0) {      return 0;    }    c = a * b;    assert(c / a == b);    return c;  }  function div(uint256 a, uint256 b) internal pure returns (uint256) {    return a / b;  }  function sub(uint256 a, uint256 b) internal pure returns (uint256) {    assert(b <= a);    return a - b;  }  function add(uint256 a, uint256 b) internal pure returns (uint256 c) {    c = a + b;    assert(c >= a);    return c;  }}contract Ownable {  address public owner;  address public controller;  event OwnershipRenounced(address indexed previousOwner);  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);  constructor() public {    owner = msg.sender;  }  modifier onlyOwner() {    require(msg.sender == owner);    _;  }    modifier onlyController() {       require(msg.sender == owner || msg.sender == controller);      _;  }    function setController(address _controller) public onlyOwner {      controller = _controller;  }  function renounceOwnership() public onlyOwner {    emit OwnershipRenounced(owner);    owner = address(0);  }  function transferOwnership(address _newOwner) public onlyOwner {    _transferOwnership(_newOwner);  }  function _transferOwnership(address _newOwner) internal {    require(_newOwner != address(0));    emit OwnershipTransferred(owner, _newOwner);    owner = _newOwner;  }}contract Pausable is Ownable {  event Pause();  event Unpause();  bool public paused = false;  modifier whenNotPaused() {    require(!paused);    _;  }    modifier whenPaused() {    require(paused);    _;  }  function pause() onlyOwner whenNotPaused public {    paused = true;    emit Pause();  }  function unpause() onlyOwner whenPaused public {    paused = false;    emit Unpause();  }}contract ERC20Token is Pausable {  using SafeMath for uint256;    event Transfer(address indexed from, address indexed to, uint256 value);  event Approval(address indexed owner, address indexed spender, uint256 value);  event FrozenFunds(address target, bool frozen);  mapping(address => uint256) balances;  mapping(address => mapping (address => uint256)) internal allowed;  mapping (address => bool) public frozenAccount;    uint256 public  _totalSupply;  receive () external payable {    revert();  }  function totalSupply() public view returns (uint256) {    return _totalSupply;  }  function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {    require(!frozenAccount[msg.sender]);    require(_to != address(0));    require(_value <= balances[msg.sender]);    balances[msg.sender] = balances[msg.sender].sub(_value);    balances[_to] = balances[_to].add(_value);    emit Transfer(msg.sender, _to, _value);    return true;  }  function balanceOf(address _owner) public view returns (uint256) {    return balances[_owner];  }  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {    require(!frozenAccount[msg.sender]);    require(_to != address(0));    require(_value <= balances[_from]);    require(_value <= allowed[_from][msg.sender]);    balances[_from] = balances[_from].sub(_value);    balances[_to] = balances[_to].add(_value);    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);    emit Transfer(_from, _to, _value);    return true;  }  function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {    allowed[msg.sender][_spender] = _value;    emit Approval(msg.sender, _spender, _value);    return true;  }  function allowance(address _owner, address _spender) public view returns (uint256) {    return allowed[_owner][_spender];  }  function increaseApproval(address _spender, uint _addedValue) public whenNotPaused returns (bool) {    allowed[msg.sender][_spender] = (allowed[msg.sender][_spender].add(_addedValue));    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);    return true;  }  function decreaseApproval(address _spender, uint _subtractedValue) public whenNotPaused returns (bool) {    uint oldValue = allowed[msg.sender][_spender];    if (_subtractedValue > oldValue) {      allowed[msg.sender][_spender] = 0;    } else {      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);    }    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);    return true;  }  function freezeAccount(address target, bool freeze) onlyController public {    frozenAccount[target] = freeze;    emit FrozenFunds(target, freeze);  }}contract BurnableERC20Token is ERC20Token {  using SafeMath for uint256;  event Burn(address indexed burner, uint256 value);  function burn(uint256 _value) public {    _burn(msg.sender, _value);  }  function _burn(address _who, uint256 _value) internal {    require(_value <= balances[_who]);    balances[_who] = balances[_who].sub(_value);    _totalSupply = _totalSupply.sub(_value);    emit Burn(_who, _value);    emit Transfer(_who, address(0), _value);  }}contract StarPlayToken is BurnableERC20Token {    string public name = \"StarPlay\";    string public symbol = \"STPC\";    uint256 public decimals = 18;        constructor() public {        _totalSupply = 1000000000 * (10 ** uint256(decimals));    }}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"StarPlayToken","CompilerVersion":"v0.7.5+commit.eb77ed08","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://502b7aae18b1273c578fe470dd01d64e329e6a5d23c574163d7670d7469fc775"}]}