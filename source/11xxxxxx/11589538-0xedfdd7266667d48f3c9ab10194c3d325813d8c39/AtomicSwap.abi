[
    {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "_payer",
                "type": "address"
            },
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "_value",
                "type": "uint256"
            }
        ],
        "name": "paymentReceived",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "_creator",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "uint256",
                "name": "time",
                "type": "uint256"
            },
            {
                "indexed": true,
                "internalType": "enum AtomicSwap.swapStatus",
                "name": "_status",
                "type": "uint8"
            },
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "_swapId",
                "type": "uint256"
            },
            {
                "indexed": false,
                "internalType": "address",
                "name": "_swapCounterPart",
                "type": "address"
            }
        ],
        "name": "swapEvent",
        "type": "event"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_swapId",
                "type": "uint256"
            }
        ],
        "name": "cancelSwapIntent",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_swapCreator",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "_swapId",
                "type": "uint256"
            }
        ],
        "name": "closeSwapIntent",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_dappAddressOne",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "_tokenIdOne",
                "type": "uint256"
            },
            {
                "internalType": "address",
                "name": "_dappAddressTwo",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "_tokenIdTwo",
                "type": "uint256"
            }
        ],
        "name": "createSwapIntent",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "getPauseStatus",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "getSwapCount",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_creator",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "_index",
                "type": "uint256"
            }
        ],
        "name": "getSwapIntentByAddress",
        "outputs": [
            {
                "components": [
                    {
                        "components": [
                            {
                                "internalType": "uint256",
                                "name": "_value",
                                "type": "uint256"
                            }
                        ],
                        "internalType": "struct Counters.Counter",
                        "name": "id",
                        "type": "tuple"
                    },
                    {
                        "internalType": "address",
                        "name": "nftOwnerOne",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "dappAddressOne",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "nftTokenIdOne",
                        "type": "uint256"
                    },
                    {
                        "internalType": "address",
                        "name": "nftOwnerTwo",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "dappAddressTwo",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "nftTokenIdTwo",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "swapStart",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "swapEnd",
                        "type": "uint256"
                    },
                    {
                        "internalType": "enum AtomicSwap.swapStatus",
                        "name": "status",
                        "type": "uint8"
                    }
                ],
                "internalType": "struct AtomicSwap.swapIntent",
                "name": "",
                "type": "tuple"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_index",
                "type": "uint256"
            }
        ],
        "name": "getSwapIntentByOwner",
        "outputs": [
            {
                "components": [
                    {
                        "components": [
                            {
                                "internalType": "uint256",
                                "name": "_value",
                                "type": "uint256"
                            }
                        ],
                        "internalType": "struct Counters.Counter",
                        "name": "id",
                        "type": "tuple"
                    },
                    {
                        "internalType": "address",
                        "name": "nftOwnerOne",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "dappAddressOne",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "nftTokenIdOne",
                        "type": "uint256"
                    },
                    {
                        "internalType": "address",
                        "name": "nftOwnerTwo",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "dappAddressTwo",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "nftTokenIdTwo",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "swapStart",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "swapEnd",
                        "type": "uint256"
                    },
                    {
                        "internalType": "enum AtomicSwap.swapStatus",
                        "name": "status",
                        "type": "uint8"
                    }
                ],
                "internalType": "struct AtomicSwap.swapIntent",
                "name": "",
                "type": "tuple"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "getVaultBalance",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "getWeiPayValueAmount",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "operator",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "from",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
            },
            {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
            }
        ],
        "name": "onERC721Received",
        "outputs": [
            {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "proxyAddress",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_amount",
                "type": "uint256"
            },
            {
                "internalType": "address payable",
                "name": "_receiver",
                "type": "address"
            }
        ],
        "name": "sendVaultBalance",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_axieAddress",
                "type": "address"
            }
        ],
        "name": "setAxieAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_cryptoKittiesAddress",
                "type": "address"
            }
        ],
        "name": "setKittieAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bool",
                "name": "_pauseStatus",
                "type": "bool"
            }
        ],
        "name": "setPauseStatus",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bool",
                "name": "_status",
                "type": "bool"
            },
            {
                "internalType": "uint256",
                "name": "_value",
                "type": "uint256"
            }
        ],
        "name": "setPayment",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_proxyAddress",
                "type": "address"
            }
        ],
        "name": "setProxyAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "stateMutability": "payable",
        "type": "receive"
    }
]