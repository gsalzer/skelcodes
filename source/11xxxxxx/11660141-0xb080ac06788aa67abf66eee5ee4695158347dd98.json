{"status":"1","message":"OK","result":[{"SourceCode":"{\"Owned.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity \\u003e=0.4.0 \\u003c0.7.0;\\r\\n\\r\\ncontract Owned {\\r\\n    address public owner;\\r\\n\\r\\n    constructor() public {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner {\\r\\n        require(\\r\\n            msg.sender == owner,\\r\\n            \\\"Only owner can call this function.\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\"},\"Vault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity \\u003e=0.4.0 \\u003c0.7.0;\\r\\n\\r\\nimport \\\"Owned.sol\\\";\\r\\n\\r\\ncontract Vault is Owned {\\r\\n    function withdraw() public onlyOwner {\\r\\n        require(\\r\\n            block.timestamp \\u003e 2137158000,\\r\\n            \\\"Not yet.\\\"\\r\\n        );\\r\\n        msg.sender.transfer(address(this).balance);\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n}\\r\\n\"}}","ABI":"[{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Vault","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://d4a815e4b3acbe6a07fa3988f4b151bd5d5a1c934e839aa1cd73e7eb6357d29a"}]}