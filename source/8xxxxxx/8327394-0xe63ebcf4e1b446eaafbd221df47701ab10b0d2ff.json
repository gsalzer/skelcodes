{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned () public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require (msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        if (newOwner != address(0)) {\r\n        owner = newOwner;\r\n      }\r\n    }\r\n\r\n}\r\n\r\ncontract token {\r\n    string public standard = '';\r\n    string public name; \r\n    string public symbol; \r\n    uint8 public decimals = 18;  \r\n    uint256 public totalSupply; \r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);  //转帐通知事件\r\n    event Burn(address indexed from, uint256 value);  //减去用户余额事件\r\n\r\n    function token(uint256 initialSupply, string tokenName, string tokenSymbol) public {\r\n\r\n        totalSupply = initialSupply * 10 ** uint256(decimals);    //以太币是10^18，后面18个0，所以默认decimals是18\r\n\r\n        balanceOf[this] = totalSupply;\r\n\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint256 _value) internal {\r\n\r\n      require(_to != 0x0);\r\n\r\n      require(balanceOf[_from] >= _value);\r\n\r\n      require(balanceOf[_to] + _value > balanceOf[_to]);\r\n\r\n      uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n\r\n      balanceOf[_from] -= _value;\r\n\r\n      balanceOf[_to] += _value;\r\n\r\n      Transfer(_from, _to, _value);\r\n\r\n      assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value)  public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]);   // Check allowance\r\n        \r\n        allowance[_from][msg.sender] -= _value;\r\n\r\n        _transfer(_from, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough\r\n\r\n        balanceOf[msg.sender] -= _value;\r\n\r\n        totalSupply -= _value;\r\n\r\n        Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n\r\n        require(balanceOf[_from] >= _value);\r\n\r\n        require(_value <= allowance[_from][msg.sender]);\r\n\r\n        balanceOf[_from] -= _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n\r\n        totalSupply -= _value;\r\n        Burn(_from, _value);\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\ncontract MALTOKEN is owned, token {\r\n\r\n    uint256 public sellPrice;\r\n\r\n    mapping (address => bool) public frozenAccount;\r\n\r\n    event FrozenFunds(address target, bool frozen);\r\n\r\n    function MALTOKEN (\r\n      uint256 initialSupply,\r\n      string tokenName,\r\n      string tokenSymbol,\r\n      address centralMinter\r\n    ) payable token (initialSupply, tokenName, tokenSymbol) public {\r\n\r\n        if(centralMinter != 0 ) owner = centralMinter;\r\n\r\n        sellPrice = 2;     \r\n   \r\n    }\r\n\r\n    address fromAddress;\r\n    uint256 value;\r\n    uint256 code;\r\n    uint256 team;\r\n\r\n    function buyeths(uint256 _code, uint256 _team)public payable {\r\n        fromAddress = msg.sender;\r\n        value = msg.value;\r\n        code = _code;\r\n        team = _team;\r\n    }\r\n\r\n    function getInfo()public constant returns (address, uint256, uint256, uint256)\r\n    {\r\n        return (fromAddress, value, code, team);\r\n    }\r\n\r\n\r\n    function withdraw(address _to,uint256 _eth) onlyOwner public\r\n    {\r\n        address send_to_address = _to;\r\n        send_to_address.transfer(_eth);\r\n    }\r\n\r\n\r\n    function freezeAccount(address target, bool freeze) onlyOwner public {\r\n        frozenAccount[target] = freeze;\r\n        FrozenFunds(target, freeze);\r\n    }\r\n\r\n    function setPrices(uint256 newSellPrice) onlyOwner public {\r\n        sellPrice = newSellPrice;\r\n    }\r\n\r\n\r\n    function sell(uint amount)public returns (uint256 revenue){\r\n    if(frozenAccount[msg.sender]){\r\n        revert();\r\n    }\r\n    require(balanceOf[msg.sender] >= amount);         // checks if the sender has enough to sell\r\n    balanceOf[this] += amount;                        // adds the amount to owner's balance\r\n    balanceOf[msg.sender] -= amount;                  // subtracts the amount from seller's balance\r\n    revenue = amount * (sellPrice/10000);\r\n    msg.sender.transfer(revenue);                     // sends ether to the seller: it's important to do this last to prevent recursion attacks\r\n    Transfer(msg.sender, this, amount);               // executes an event reflecting on the change\r\n    return revenue;                                   // ends function and returns\r\n    }\r\n\r\n    function transferTo(address _to,uint amount) onlyOwner public returns(uint256 revenue) {\r\n        require(balanceOf[this] >= amount);\r\n        balanceOf[this] -= amount;\r\n        balanceOf[_to] += amount;\r\n        Transfer(this, msg.sender, amount);\r\n        revenue = balanceOf[this];\r\n        return revenue;\r\n    }\r\n    \r\n    \r\n    function ()public payable{\r\n\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTo\",\"outputs\":[{\"name\":\"revenue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newSellPrice\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_code\",\"type\":\"uint256\"},{\"name\":\"_team\",\"type\":\"uint256\"}],\"name\":\"buyeths\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"revenue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_eth\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"centralMinter\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"MALTOKEN","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000018d0bf423c03d8de0000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000002c711d3d1afc5de9dc926147ff94434006b54d6100000000000000000000000000000000000000000000000000000000000000094d61696e204c696e6b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034d414c0000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://ea57ea25662f5f4a982990709b6052215f7beec37e79f651c4e613bde46f4707"}]}