{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract ERC20Interface {\r\n\r\n    string public constant name = \"CWC-ER\";\r\n    string public constant symbol = \"CWC-ER\";\r\n    uint8 public constant decimals = 18;\r\n\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract SafeMath {\r\n   \r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n   \r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\ncontract CWCToken is ERC20Interface, SafeMath {\r\n\r\n  string public name; \r\n  string public symbol; \r\n  uint8 public decimals;\r\n  uint256 public totalSupply;\r\n\r\n\r\n  mapping (address => uint256) public balanceOf;                \r\n\r\n  mapping (address => mapping (address => uint256)) public allowanceOf;\r\n\r\n   constructor() public {\r\n      name = \"CWC-ER\";\r\n      symbol = \"CWC-ER\";\r\n      decimals = 18;\r\n      totalSupply = 100000000 * 10 ** uint256(decimals);\r\n      balanceOf[msg.sender] = totalSupply;\r\n   }\r\n\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n       require(_to != 0x0);\r\n       require(balanceOf[_from] >= _value);\r\n       require(balanceOf[_to] + _value > balanceOf[_to]);\r\n       uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n       balanceOf[_from] -= _value;\r\n       balanceOf[_to] += _value;\r\n      emit Transfer(_from, _to, _value);\r\n       assert(balanceOf[_from] + balanceOf[_to] == previousBalances);  \r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n       _transfer(msg.sender, _to, _value);\r\n       return true;\r\n   }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n       require(allowanceOf[_from][msg.sender] >= _value);\r\n       allowanceOf[_from][msg.sender] -= _value;\r\n       _transfer(_from, _to, _value);\r\n       return true;\r\n   }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n       allowanceOf[msg.sender][_spender] = _value;\r\n      emit Approval(msg.sender, _spender, _value);\r\n       return true;\r\n   }\r\n\r\n   function allowance(address _owner, address _spender) view public returns (uint remaining){\r\n     return allowanceOf[_owner][_spender];\r\n   }\r\n\r\n  function totalSupply() public constant returns (uint totalsupply){\r\n      return totalSupply;\r\n  }\r\n\r\n  function balanceOf(address tokenOwner) public constant returns(uint balance){\r\n      return balanceOf[tokenOwner];\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalsupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"CWCToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f31a41d3726126b8dcfd0ea1b3b0e267b8d8e7f8b30a1d2db3ded718194b5df5"}]}