{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.5.1;\r\n\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        require(newOwner != address(this));\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\ncontract tokenRecipient {\r\n    event receivedEther(address sender, uint amount);\r\n    event receivedTokens(address _from, uint256 _value, address _token, bytes _extraData);\r\n\r\n    function receiveApproval(address _from, uint256 _value, address _token, bytes memory _extraData) public {\r\n        Token t = Token(_token);\r\n        require(t.transferFrom(_from, address(this), _value));\r\n        emit receivedTokens(_from, _value, _token, _extraData);\r\n    }\r\n\r\n    function () payable external {\r\n        emit receivedEther(msg.sender, msg.value);\r\n    }\r\n}\r\n\r\n\r\ncontract Token {\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n}\r\n\r\n\r\n/**\r\n * The Mindsync Reward Pool contract\r\n */\r\ncontract MindsyncRewardPool is owned, tokenRecipient {\r\n    Token public tokenAddress;\r\n    bool public initialized = false;\r\n\r\n    event Initialized();\r\n    event WithdrawTokens(address destination, uint256 amount);\r\n    event WithdrawAnyTokens(address tokenAddress, address destination, uint256 amount);\r\n    event WithdrawEther(address destination, uint256 amount);\r\n\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * First time rules setup \r\n     */\r\n    constructor() payable public {\r\n    }\r\n\r\n\r\n    /**\r\n     * Initialize contract\r\n     *\r\n     * @param _tokenAddress token address\r\n     */\r\n    function init(Token _tokenAddress) onlyOwner public {\r\n        require(!initialized);\r\n        initialized = true;\r\n        tokenAddress = _tokenAddress;\r\n        emit Initialized();\r\n    }\r\n\r\n\r\n    /**\r\n     * withdrawTokens\r\n     *\r\n     * Withdraw tokens from the contract\r\n     *\r\n     * @param amount is an amount of tokens\r\n     */\r\n    function withdrawTokens(\r\n        uint256 amount\r\n    )\r\n        onlyOwner public\r\n    {\r\n        tokenAddress.transfer(msg.sender, amount);\r\n        emit WithdrawTokens(msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n     * withdrawAnyTokens\r\n     *\r\n     * Withdraw any tokens from the contract\r\n     *\r\n     * @param _tokenAddress is a token contract address\r\n     * @param amount is an amount of tokens\r\n     */\r\n    function withdrawAnyTokens(\r\n        address _tokenAddress,\r\n        uint256 amount\r\n    )\r\n        onlyOwner public\r\n    {\r\n        Token(_tokenAddress).transfer(msg.sender, amount);\r\n        emit WithdrawAnyTokens(_tokenAddress, msg.sender, amount);\r\n    }\r\n    \r\n    /**\r\n     * withdrawEther\r\n     *\r\n     * Withdraw ether from the contract\r\n     *\r\n     * @param amount is a wei amount \r\n     */\r\n    function withdrawEther(\r\n        uint256 amount\r\n    )\r\n        onlyOwner public\r\n    {\r\n        msg.sender.transfer(amount);\r\n        emit WithdrawEther(msg.sender, amount);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract Token\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAnyTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"contract Token\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawAnyTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawEther\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"receivedEther\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"receivedTokens\",\"type\":\"event\"}]","ContractName":"MindsyncRewardPool","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"Apache-2.0","SwarmSource":"bzzr://2e7591776b0079716f6bcd47d319280fd1ab5764c896a58a0399417ae4a723da"}]}