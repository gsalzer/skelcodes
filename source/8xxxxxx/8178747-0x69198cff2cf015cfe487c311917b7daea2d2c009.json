{"status":"1","message":"OK","result":[{"SourceCode":"contract SafeMath {\r\n  function safeMul(uint a, uint b) internal returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint a, uint b) internal returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint a, uint b) internal returns (uint) {\r\n    uint c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n  function assert(bool assertion) internal {\r\n    if (!assertion) throw;\r\n  }\r\n}\r\n\r\ncontract Token {\r\n    function totalSupply() constant returns (uint256 supply) {}\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {}\r\n    function transfer(address _to, uint256 _value) returns (bool success) {}\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}\r\n    function approve(address _spender, uint256 _value) returns (bool success) {}\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n}\r\n\r\ncontract StandardToken is Token {\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        if (balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\r\n        //if (balances[msg.sender] >= _value && _value > 0) {\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\r\n        //if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n            balances[_to] += _value;\r\n            balances[_from] -= _value;\r\n            allowed[_from][msg.sender] -= _value;\r\n            Transfer(_from, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping(address => uint256) balances;\r\n\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    uint256 public totalSupply;\r\n\r\n}\r\ncontract GooglierBloodToken is StandardToken, SafeMath {\r\n\r\n    string public name = \"Googler Token\";\r\n    string public symbol = \"googlier\";\r\n    uint public decimals = 18;\r\n    uint public startBlock; //crowdsale start block (set in constructor)\r\n    uint public endBlock; //crowdsale end block (set in constructor)\r\n\r\n    // Initial founder address (set in constructor)\r\n    // All deposited ETH will be instantly forwarded to this address.\r\n    // Address is a multisig wallet.\r\n    address public founder = 0x0e88d68ddd2ae0465acc9552260569bcf4c33685;\r\n\r\n    // signer address (for clickwrap agreement)\r\n    // see function() {} for comments\r\n    address public signer = 0x0e88d68ddd2ae0465acc9552260569bcf4c33685;\r\n\r\n    uint public etherCap = 500000 * 10**18; \r\n    uint public transferLockup = 370285; \r\n    uint public founderLockup = 2252571; \r\n    uint public bountyAllocation = 25000000 * 10**18; \r\n    uint public ecosystemAllocation = 5 * 10**16; \r\n    uint public founderAllocation = 10 * 10**16; \r\n    bool public bountyAllocated = false; \r\n    bool public ecosystemAllocated = false; \r\n    bool public founderAllocated = false; \r\n    uint public presaleTokenSupply = 0; \r\n    uint public presaleEtherRaised = 0; \r\n    bool public halted = false; \r\n    event Buy(address indexed sender, uint eth, uint fbt);\r\n    event Withdraw(address indexed sender, address to, uint eth);\r\n    event AllocateFounderTokens(address indexed sender);\r\n    event AllocateBountyAndEcosystemTokens(address indexed sender);\r\n\r\n    function GooglierBloodToken(address founderInput, address signerInput, uint startBlockInput, uint endBlockInput) {\r\n        founder = founderInput;\r\n        signer = signerInput;\r\n        startBlock = startBlockInput;\r\n        endBlock = endBlockInput;\r\n    }\r\n\r\n    function price() constant returns(uint) {\r\n        if (block.number>=startBlock && block.number<startBlock+250) return 1; //power hour\r\n        if (block.number<startBlock || block.number>endBlock) return 1; //default price\r\n        return 1 + 4*(endBlock - block.number)/(endBlock - startBlock + 1)*67/4; //crowdsale price\r\n    }\r\n\r\n    // price() exposed for unit tests\r\n    function testPrice(uint blockNumber) constant returns(uint) {\r\n        if (blockNumber>=startBlock && blockNumber<startBlock+250) return 1; //power hour\r\n        if (blockNumber<startBlock || blockNumber>endBlock) return 100; //default price\r\n        return 1 + 4*(endBlock - blockNumber)/(endBlock - startBlock + 1)*67/4; //crowdsale price\r\n    }\r\n\r\n    // Buy entry point\r\n    function buy(uint8 v, bytes32 r, bytes32 s) {\r\n        buyRecipient(msg.sender, v, r, s);\r\n    }\r\n\r\n    function buyRecipient(address recipient, uint8 v, bytes32 r, bytes32 s) {\r\n        bytes32 hash = sha256(msg.sender);\r\n        if (ecrecover(hash,v,r,s) != signer) throw;\r\n        if (block.number<startBlock || block.number>endBlock || safeAdd(presaleEtherRaised,msg.value)>etherCap || halted) throw;\r\n        uint tokens = safeMul(msg.value, price());\r\n        balances[recipient] = safeAdd(balances[recipient], tokens);\r\n        totalSupply = safeAdd(totalSupply, tokens);\r\n        presaleEtherRaised = safeAdd(presaleEtherRaised, msg.value);\r\n        if (!founder.call.value(msg.value)()) throw; \r\n\r\n        Buy(recipient, msg.value, tokens);\r\n    }\r\n\r\n    function allocateFounderTokens() {\r\n        if (msg.sender!=founder) throw;\r\n        if (block.number <= endBlock + founderLockup) throw;\r\n        if (founderAllocated) throw;\r\n        if (!bountyAllocated || !ecosystemAllocated) throw;\r\n        balances[founder] = safeAdd(balances[founder], presaleTokenSupply * founderAllocation / (1 ether));\r\n        totalSupply = safeAdd(totalSupply, presaleTokenSupply * founderAllocation / (1 ether));\r\n        founderAllocated = true;\r\n        AllocateFounderTokens(msg.sender);\r\n    }\r\n\r\n    function allocateBountyAndEcosystemTokens() {\r\n        if (msg.sender!=founder) throw;\r\n        if (block.number <= endBlock) throw;\r\n        if (bountyAllocated || ecosystemAllocated) throw;\r\n        presaleTokenSupply = totalSupply;\r\n        balances[founder] = safeAdd(balances[founder], presaleTokenSupply * ecosystemAllocation / (1 ether));\r\n        totalSupply = safeAdd(totalSupply, presaleTokenSupply * ecosystemAllocation / (1 ether));\r\n        balances[founder] = safeAdd(balances[founder], bountyAllocation);\r\n        totalSupply = safeAdd(totalSupply, bountyAllocation);\r\n        bountyAllocated = true;\r\n        ecosystemAllocated = true;\r\n        AllocateBountyAndEcosystemTokens(msg.sender);\r\n    }\r\n\r\n    function halt() {\r\n        if (msg.sender!=founder) throw;\r\n        halted = true;\r\n    }\r\n\r\n    function unhalt() {\r\n        if (msg.sender!=founder) throw;\r\n        halted = false;\r\n    }\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        if (block.number <= endBlock + transferLockup && msg.sender!=founder) throw;\r\n        return super.transfer(_to, _value);\r\n    }\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        if (block.number <= endBlock + transferLockup && msg.sender!=founder) throw;\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n    function() {\r\n        throw;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bountyAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"testPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleEtherRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allocateBountyAndEcosystemTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"halt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etherCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ecosystemAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderLockup\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"halted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allocateFounderTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ecosystemAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferLockup\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unhalt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"buyRecipient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bountyAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"founderInput\",\"type\":\"address\"},{\"name\":\"signerInput\",\"type\":\"address\"},{\"name\":\"startBlockInput\",\"type\":\"uint256\"},{\"name\":\"endBlockInput\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fbt\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AllocateFounderTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AllocateBountyAndEcosystemTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"GooglierBloodToken","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000e88d68ddd2ae0465acc9552260569bcf4c336850000000000000000000000000e88d68ddd2ae0465acc9552260569bcf4c3368500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000989680","Library":"","SwarmSource":"bzzr://884734050e5d25fdae8f839b9d44401e42487a4f7569d0b265380830f8e84aa0"}]}