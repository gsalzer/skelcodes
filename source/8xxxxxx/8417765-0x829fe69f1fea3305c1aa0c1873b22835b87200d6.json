{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\ncontract MolochLike {\r\n    function updateDelegateKey(address) external;\r\n    function submitVote(uint256, uint8) external;\r\n    function submitProposal(address, uint256, uint256, string calldata) external;\r\n    function getProposalQueueLength() external view returns (uint256);\r\n    function getMemberProposalVote(address, uint256) external view returns (uint256);\r\n    function proposalDeposit() external view returns (uint256);\r\n    function periodDuration() external view returns (uint256);\r\n    function approvedToken() external view returns (address);\r\n}\r\n\r\ncontract GemLike {\r\n    function approve(address, uint256) external returns (bool);\r\n    function transfer(address, uint256) external returns (bool);\r\n    function balanceOf(address) external view returns (uint256);\r\n}\r\n\r\ncontract SelloutDao {\r\n    address    public owner;\r\n    MolochLike public dao;\r\n    GemLike    public gem;\r\n    address    public hat;\r\n    bool       public sold;\r\n    uint256    public prop;\r\n    bool       public voted;\r\n\r\n    modifier auth() {\r\n        require(msg.sender == owner, \"nope\");\r\n        _;\r\n    }\r\n\r\n    modifier only_hat() {\r\n        require(msg.sender == hat, \"nope\");\r\n        _;\r\n    }\r\n\r\n    constructor(MolochLike dao_) public {\r\n        owner = msg.sender;\r\n        dao = dao_;\r\n        gem = GemLike(dao.approvedToken());\r\n    }\r\n\r\n    function () external payable {\r\n        buy();\r\n    }\r\n\r\n    function buy() public payable {\r\n        require(!sold, \"already sold\");\r\n        require(msg.value >= 0.5 ether, \"need to send at least 0.5 eth\");\r\n        sold = true;\r\n        hat = msg.sender;\r\n    }\r\n\r\n    function make(address who, uint256 tribute, uint256 shares, string calldata text) external only_hat {\r\n        require(prop == 0, \"can only create one proposal\");\r\n        gem.approve(address(dao), dao.proposalDeposit());\r\n        dao.submitProposal(who, tribute, shares, text);\r\n        prop = dao.getProposalQueueLength() - 1;\r\n    }\r\n\r\n    function vote(uint8 val) external {\r\n        dao.submitVote(prop, val);\r\n    }\r\n\r\n    function take() external auth {\r\n        msg.sender.transfer(address(this).balance);\r\n        gem.transfer(msg.sender, gem.balanceOf(address(this)));\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"sold\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"take\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"voted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gem\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"},{\"name\":\"tribute\",\"type\":\"uint256\"},{\"name\":\"shares\",\"type\":\"uint256\"},{\"name\":\"text\",\"type\":\"string\"}],\"name\":\"make\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prop\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hat\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"dao_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"SelloutDao","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000001fd169a4f5c59acf79d0fd5d91d1201ef1bce9f1","Library":"","SwarmSource":"bzzr://a3baab7155cc2267fb342e1dfaa338607f6407211e6f95200122f806dd0135dd"}]}