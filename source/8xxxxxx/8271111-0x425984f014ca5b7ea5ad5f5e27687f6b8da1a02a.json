{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.5;\r\n\r\ncontract SafeMath { \r\n  function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;  \r\n    }\r\n  function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return a/b;   \r\n    }\r\n  function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;  \r\n    }\r\n  function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;  \r\n    }  \r\n  function safePower(uint a, uint b) internal pure returns (uint256) {\r\n      uint256 c = a**b;\r\n      return c;  \r\n    }\r\n}\r\n\r\ncontract Token {\r\n  function balanceOf(address _owner) public view returns (uint256 balance) {}\r\n  function transfer(address _to, uint256 _value) public returns (bool success) {}\r\n  function approve(address _spender, uint256 _value) public returns (bool success) {}\r\n  address public issueContract;\r\n}\r\n\r\ncontract TokenUSDT {\r\n  function approve(address _spender, uint256 _value) public {}\r\n  function transfer(address _to, uint256 _value) public  {}\r\n}\r\n\r\ncontract TokenIssue {\r\n  function redeemNPA(uint256 _amount,address _token,bool _isReceiveToken) public returns (bool success) {}\r\n  function issue(address _token, uint256 _amount)public returns (bool success) {}\r\n  function redeem(uint256 _amount) public returns (bool success) {}\r\n  address public tokenAddress;\r\n  address public managerToken;    \r\n  uint256 public fee;\r\n  uint8   public decimals;\r\n  mapping (address => bool) public isTransferFrom;\r\n  mapping (address => uint8) public tokenDecimals; \r\n}\r\n\r\ncontract ReserveFund is SafeMath{//Reserve fund\r\n    address payable public owner;   \r\n    address payable public manager; \r\n    address public  issueContract;\r\n    address public  reciveTokenTo;\r\n    /* Initializes contract*/\r\n    constructor () public {  \r\n        owner = msg.sender;\r\n    }  \r\n\r\n    // this function called every time anyone sends a transaction to this contract\r\n    function () external payable \r\n    {        \r\n    }    \r\n    \r\n    function changeOwner(address payable _add)public returns (bool success) {\r\n        require (msg.sender == owner) ;\r\n        require (_add != address(0x0)) ;\r\n        owner = _add ;\r\n        return true;\r\n    }\r\n\r\n    function changeManager(address payable _add)public returns (bool success) {\r\n        require (msg.sender == owner) ;\r\n        require (_add != address(0x0)) ;\r\n        manager = _add ;\r\n        return true;\r\n    }\r\n\r\n    function changeIssueContract(address payable _add)public returns (bool success) {\r\n        require (msg.sender == owner) ;\r\n        require (_add != address(0x0)) ;\r\n        issueContract = _add ;\r\n        return true;\r\n    }\r\n\r\n    function changeReciveTokenTo(address payable _add)public returns (bool success) {\r\n        require (msg.sender == owner) ;\r\n        require (_add != address(0x0)) ;\r\n        reciveTokenTo = _add ;\r\n        return true;\r\n    }\r\n\r\n    function doRedeemNPA(uint256 _amount,address _token,bool _isReceiveToken)public returns (bool success) {\t\t\r\n        require (msg.sender == manager) ;\r\n        require (reciveTokenTo != address(0x0)) ;\r\n        TokenIssue(issueContract).redeemNPA(_amount,_token,_isReceiveToken);\r\n        if(_isReceiveToken == true){\r\n            bool isTransferFrom = TokenIssue(issueContract).isTransferFrom(_token);\r\n            uint _value = safeDiv(safeMul(_amount , safePower(10,TokenIssue(issueContract).tokenDecimals(_token))) , safePower(10,TokenIssue(issueContract).decimals())) ;\r\n              if(isTransferFrom == true){\r\n                   Token(_token).transfer(reciveTokenTo,_value); \r\n              }else{\r\n                   TokenUSDT(_token).transfer(reciveTokenTo,_value); \r\n              }             \r\n        }\r\n        return true;\r\n    }\r\n\r\n    function doIssue(address _token, uint256 _amount)public returns (bool success) {\r\n        require (msg.sender == manager) ;\r\n        TokenIssue(issueContract).issue(_token,_amount);\r\n        return true;\r\n    }\r\n\r\n    function approveToken(address _token, uint256 _amount)public returns (bool success) {\r\n        require (msg.sender == manager) ;\r\n        bool isTransferFrom = TokenIssue(issueContract).isTransferFrom(_token);\r\n        if(isTransferFrom == true){\r\n              Token(_token).approve(issueContract,_amount);\r\n        }else{\r\n            TokenUSDT(_token).approve(issueContract,_amount);\r\n        }      \r\n        return true;\r\n    }\r\n    \r\n    function doRedeem(uint256 _amount)public returns (bool success) {\r\n        require (msg.sender == manager) ;\r\n        TokenIssue(issueContract).redeem(_amount);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approveToken\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"doRedeem\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"changeIssueContract\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reciveTokenTo\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"changeReciveTokenTo\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"changeManager\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_add\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"doIssue\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"issueContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_isReceiveToken\",\"type\":\"bool\"}],\"name\":\"doRedeemNPA\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"ReserveFund","CompilerVersion":"v0.5.5+commit.47a71e8f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://c76bd4854ff3dddb5b828545a8f1aa60273a01dd12a4f344105017f4336d9ae9"}]}