{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface MatchingMarket {\r\n    function offers(uint256 id) external view returns(uint256 pay_amt, address pay_gem, uint256 buy_amt, address buy_gem, address owner, uint64 timestamp);\r\n    function getOfferCount(address base, address quote) external view returns(uint256 count);\r\n    function getBestOffer(address base, address quote) external view returns(uint256 id);\r\n    function getWorseOffer(uint256 id) external view returns(uint256 worseOfferId);\r\n}\r\n\r\ncontract OasisOrderbook {\r\n    struct Offer {\r\n        uint256 id;\r\n        address maker;\r\n        uint256 makerAmount;\r\n        uint256 takerAmount;\r\n    }\r\n\r\n    MatchingMarket oasisMarket = MatchingMarket(0x39755357759cE0d7f32dC8dC45414CCa409AE24e);\r\n\r\n    function getOrderbook(address base, address quote) external view returns(Offer[] memory bids, Offer[] memory asks) {\r\n        uint256 offerId;\r\n        uint256 bidCount = oasisMarket.getOfferCount(quote, base);\r\n        bids = new Offer[](bidCount);\r\n        offerId = oasisMarket.getBestOffer(quote, base);\r\n        bids[0] = getOffer(offerId);\r\n        for (uint256 i = 1; i < bidCount; i++) {\r\n            offerId = oasisMarket.getWorseOffer(offerId);\r\n            bids[i] = getOffer(offerId);\r\n        }\r\n        uint256 askCount = oasisMarket.getOfferCount(base, quote);\r\n        asks = new Offer[](askCount);\r\n        offerId = oasisMarket.getBestOffer(base, quote);\r\n        asks[0] = getOffer(offerId);\r\n        for (uint256 i = 1; i < askCount; i++) {\r\n            offerId = oasisMarket.getWorseOffer(offerId);\r\n            asks[i] = getOffer(offerId);\r\n        }\r\n    }\r\n\r\n    function getOffer(uint256 id) private view returns(Offer memory offer) {\r\n        (uint256 pay_amt, , uint256 buy_amt, , address owner, ) = oasisMarket.offers(id);\r\n        offer = Offer(id, owner, pay_amt, buy_amt);\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"base\",\"type\":\"address\"},{\"name\":\"quote\",\"type\":\"address\"}],\"name\":\"getOrderbook\",\"outputs\":[{\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"maker\",\"type\":\"address\"},{\"name\":\"makerAmount\",\"type\":\"uint256\"},{\"name\":\"takerAmount\",\"type\":\"uint256\"}],\"name\":\"bids\",\"type\":\"tuple[]\"},{\"components\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"maker\",\"type\":\"address\"},{\"name\":\"makerAmount\",\"type\":\"uint256\"},{\"name\":\"takerAmount\",\"type\":\"uint256\"}],\"name\":\"asks\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"OasisOrderbook","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://7beef9af1e418df1142ee903169a49c95f9c3fd9f8bc76cfbed72d2b0605dcce"}]}