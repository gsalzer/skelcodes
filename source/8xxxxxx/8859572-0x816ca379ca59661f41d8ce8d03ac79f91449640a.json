{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ninterface IMVDFunctionalityProposal {\r\n    function getProxy() external view returns(address);\r\n    function getCodeName() external view returns(string memory);\r\n    function getLocation() external view returns(address);\r\n    function isSubmitable() external view returns(bool);\r\n    function getMethodSignature() external view returns(string memory);\r\n    function getReturnAbiParametersArray() external view returns(string memory);\r\n    function isInternal() external view returns(bool);\r\n    function needsSender() external view returns(bool);\r\n    function getReplaces() external view returns(string memory);\r\n    function getProposer() external view returns(address);\r\n    function getSurveyEndBlock() external view returns(uint256);\r\n    function getVote(address addr) external view returns(uint256 accept, uint256 refuse);\r\n    function getVotes() external view returns(uint256, uint256);\r\n    function isSet() external view returns(bool);\r\n    function accept(uint256 amount) external;\r\n    function retireAccept(uint256 amount) external;\r\n    function moveToAccept(uint256 amount) external;\r\n    function refuse(uint256 amount) external;\r\n    function retireRefuse(uint256 amount) external;\r\n    function moveToRefuse(uint256 amount) external;\r\n    function retireAll() external;\r\n    function withdraw() external;\r\n    function set() external;\r\n    function consume() external;\r\n}\r\n\r\ncontract SurveyResultValidator {\r\n    function checkSurveyResult(address survey) public view returns(bool) {\r\n        (uint256 accept, uint256 refuse) = IMVDFunctionalityProposal(survey).getVotes();\r\n        //This is, of course, a VERY SIMPLE DEMO WAY to estabilish vote weight.\r\n        //Every DFC can implement its specific voting method, which, of course, is editable via surveys\r\n        return accept > refuse;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"survey\",\"type\":\"address\"}],\"name\":\"checkSurveyResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"SurveyResultValidator","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://b83eb3ea10b056862528df550b43a0e68f6d31f54382f791f495ff24135bebb8"}]}