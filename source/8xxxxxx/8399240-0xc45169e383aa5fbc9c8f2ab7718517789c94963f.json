{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @title - Crypto Skully\r\n * ███████╗██╗    ██╗ █████╗ ██████╗    ███████╗██╗  ██╗██╗   ██╗██╗     ██╗     ██╗   ██╗\r\n * ██╔════╝██║    ██║██╔══██╗██╔══██╗   ██╔════╝██║ ██╔╝██║   ██║██║     ██║     ╚██╗ ██╔╝\r\n * ███████╗██║ █╗ ██║███████║██████╔╝   ███████╗█████╔╝ ██║   ██║██║     ██║      ╚████╔╝\r\n * ╚════██║██║███╗██║██╔══██║██╔═══╝    ╚════██║██╔═██╗ ██║   ██║██║     ██║       ╚██╔╝\r\n * ███████║╚███╔███╔╝██║  ██║██║        ███████║██║  ██╗╚██████╔╝███████╗███████╗   ██║\r\n * ╚══════╝ ╚══╝╚══╝ ╚═╝  ╚═╝╚═╝        ╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚══════╝   ╚═╝\r\n * ---\r\n *\r\n * POWERED BY\r\n *  __    ___   _     ___  _____  ___     _     ___\r\n * / /`  | |_) \\ \\_/ | |_)  | |  / / \\   | |\\ |  ) )\r\n * \\_\\_, |_| \\  |_|  |_|    |_|  \\_\\_/   |_| \\| _)_)\r\n *\r\n * Game at https://skullys.co/\r\n **/\r\n \r\ncontract SwapControl {\r\n    // This facet controls access control for CryptoSkullys. There are four roles managed here:\r\n    //\r\n    //     - The Admiral: The Admiral can reassign other roles and change the addresses of our dependent smart\r\n    //         contracts. It is also the only role that can unpause the smart contract. It is initially\r\n    //         set to the address that created the smart contract in the SkullyCore constructor.\r\n    //\r\n    //     - The Pilot: The Pilot can withdraw funds from SkullyCore and its auction contracts.\r\n    //\r\n    //     - The Captain: The Captain can release new minted skullys to auction, and mint promo skullys.\r\n    //\r\n    // It should be noted that these roles are distinct without overlap in their access abilities, the\r\n    // abilities listed for each role above are exhaustive. In particular, while the Admiral can assign any\r\n    // address to any role, the Admiral address itself doesn't have the ability to act in those roles. This\r\n    // restriction is intentional so that we aren't tempted to use the Admiral address frequently out of\r\n    // convenience. The less we use an address, the less likely it is that we somehow compromise the\r\n    // account.\r\n\r\n    /// @dev Emitted when contract is upgraded - See README.md for upgrade plan\r\n    event ContractUpgrade(address newContract);\r\n\r\n    // The addresses of the accounts (or contracts) that can execute actions within each roles.\r\n    address payable public admiralAddress;\r\n    address payable public pilotAddress;\r\n    address payable public captainAddress;\r\n\r\n    // @dev Keeps track whether the contract is paused. When that is true, most actions are blocked\r\n    bool public paused = false;\r\n\r\n    /// @dev Access modifier for admiral-only functionality\r\n    modifier onlyAdmiral() {\r\n        require(msg.sender == admiralAddress);\r\n        _;\r\n    }\r\n\r\n    /// @dev Access modifier for Pilot-only functionality\r\n    modifier onlyPilot() {\r\n        require(msg.sender == pilotAddress);\r\n        _;\r\n    }\r\n\r\n    /// @dev Access modifier for Captain-only functionality\r\n    modifier onlyCaptain() {\r\n        require(msg.sender == captainAddress);\r\n        _;\r\n    }\r\n\r\n    modifier onlyCLevel() {\r\n        require(\r\n            msg.sender == captainAddress ||\r\n            msg.sender == admiralAddress ||\r\n            msg.sender == pilotAddress);\r\n        _;\r\n    }\r\n\r\n    /// @dev Assigns a new address to act as the admiral. Only available to the current admiral.\r\n    /// @param _newAdmiral The address of the new Admiral\r\n    function setAdmiral(address payable _newAdmiral) external onlyAdmiral {\r\n        require(_newAdmiral != address(0));\r\n\r\n        admiralAddress = _newAdmiral;\r\n    }\r\n\r\n    /// @dev Assigns a new address to act as the pilot. Only available to the current Admiral.\r\n    /// @param _newPilot The address of the new Pilot\r\n    function setPilot(address payable _newPilot) external onlyAdmiral {\r\n        require(_newPilot != address(0));\r\n\r\n        pilotAddress = _newPilot;\r\n    }\r\n\r\n    /// @dev Assigns a new address to act as the captain. Only available to the current Admiral.\r\n    /// @param _newCaptain The address of the new Captain\r\n    function setCaptain(address payable _newCaptain) external onlyAdmiral {\r\n        require(_newCaptain != address(0));\r\n\r\n        captainAddress = _newCaptain;\r\n    }\r\n\r\n    /*** Pausable functionality adapted from OpenZeppelin ***/\r\n\r\n    /// @dev Modifier to allow actions only when the contract IS NOT paused\r\n    modifier whenNotPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n\r\n    /// @dev Modifier to allow actions only when the contract IS paused\r\n    modifier whenPaused {\r\n        require(paused);\r\n        _;\r\n    }\r\n\r\n    /// @dev Called by any \"C-level\" role to pause the contract. Used only when\r\n    ///  a bug or exploit is detected and we need to limit damage.\r\n    function pause() external onlyCLevel whenNotPaused {\r\n        paused = true;\r\n    }\r\n\r\n    /// @dev Unpauses the smart contract. Can only be called by the Admiral, since\r\n    ///  one reason we may pause the contract is when Pilot or Captain accounts are\r\n    ///  compromised.\r\n    /// @notice This is public rather than external so it can be called by\r\n    ///  derived contracts.\r\n    function unpause() public onlyAdmiral whenPaused {\r\n        // can't unpause if contract was upgraded\r\n        paused = false;\r\n    }\r\n}\r\n\r\ninterface IERC165 {\r\n    /**\r\n     * @notice Query if a contract implements an interface\r\n     * @param interfaceId The interface identifier, as specified in ERC-165\r\n     * @dev Interface identification is specified in ERC-165. This function\r\n     * uses less than 30,000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\ncontract ERC721 is IERC165 {\r\n\r\n    // IERC721\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    function balanceOf(address owner) public view returns (uint256 balance);\r\n    function ownerOf(uint256 tokenId) public view returns (address owner);\r\n\r\n    function approve(address to, uint256 tokenId) public;\r\n    function getApproved(uint256 tokenId) public view returns (address operator);\r\n\r\n    function setApprovalForAll(address operator, bool _approved) public;\r\n    function isApprovedForAll(address owner, address operator) public view returns (bool);\r\n\r\n    function transferFrom(address from, address to, uint256 tokenId) public;\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public;\r\n\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public;\r\n\r\n    // IERC721Metadata\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function tokenURI(uint256 tokenId) public view returns (string memory);\r\n\r\n    // IERC721Enumerable\r\n    function totalSupply() public view returns (uint256);\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view returns (uint256 tokenId);\r\n\r\n    function tokenByIndex(uint256 index) public view returns (uint256);\r\n    \r\n    \r\n    ///-----For ERC721 using transfer() function ---///\r\n    function transfer(address _to, uint256 _tokenId) external;\r\n    \r\n    ///-------------------------------------------///\r\n    \r\n    function addNewCategory(uint256 _id, string calldata _newCategory) external;\r\n    \r\n    function changeCategory(uint256 _id, string calldata _newCategory) external;\r\n    \r\n    function updateSkill(uint256 _skullyId, uint256 _newAttack, uint256 _newDefend) external;\r\n    \r\n    function createPromoSkully(uint256 _skullyId, uint256 _attack, uint256 _defend, uint256 _category, address _owner) external;\r\n    \r\n    function createSaleAuction(uint256 _skullyId, uint256 _startingPrice, uint256 _endingPrice, uint256 _duration, uint _paymentBy) external;\r\n    \r\n    function createNewSkullyAuction(uint256 _newSkullyId, uint256 _category, uint256 _startingPrice, uint256 _endingPrice) public;\r\n\r\n    function createNewSkullysAuction(uint256 _startId, uint256 _endId, uint256 _category, uint256 _startingPrice, uint256 _endingPrice) external;\r\n        \r\n    function createNewSkully(uint256 _newSkullyId, uint256 _category, address _owner) external;\r\n        \r\n    function createNewSkullys(uint256 _startId, uint256 _endId, uint256 _category, address _owner) external;\r\n        \r\n    function setGamePlayAddress(address _gameAddress) external;\r\n}\r\n\r\ncontract ERC20 {\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address who) public view returns (uint256);\r\n    function transfer(address to, uint256 value) public;\r\n    function allowance(address owner, address spender) public view returns (uint256);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ClockAuction {\r\n    function cancelAuction(uint256 _tokenId) external;\r\n}\r\n\r\ncontract SkullyItems {\r\n    function setDiscount(uint256 _newDiscount) external returns (uint256);\r\n    \r\n    function createNewMainAccessory(string memory name) public;\r\n    \r\n    function createNewAccessory(\r\n        uint256 accessoryType,\r\n        uint256 accessoryId,\r\n        string memory name,\r\n        uint256 attack,\r\n        uint256 defend,\r\n        uint256 po8,\r\n        uint256 eth,\r\n        uint256 po8DailyMultiplier,\r\n        bool mustUnlock) public;\r\n        \r\n    function updateAccessoryInformation(\r\n        uint256 id,\r\n        string calldata newName,\r\n        uint256 newAttack,\r\n        uint256 newDefend,\r\n        uint256 newPO8,\r\n        uint256 newEth,\r\n        uint256 newPO8DailyMultiplier,\r\n        bool newMustUnlock) external returns (bool);\r\n        \r\n    function setAccessoryToSkully(uint256 skullyId, uint256 realAccessoryId) external;\r\n    \r\n    function setGamePlayAddress(address _gameAddress) external;\r\n    \r\n    function setNewRankPrice(uint8 rank, uint256 newPrice) public returns (bool);\r\n    \r\n    function setNewRankFlags(uint8 rank, uint256 newFlags) public returns (bool);\r\n    \r\n    function setExchangeRate(uint256 _newExchangeRate) external returns (uint256);\r\n    \r\n    function createNewBadge(uint256 badgeId, string memory description, uint256 po8) public;\r\n    \r\n    function setPO8OfBadge(uint256 badgeId, uint256 po8) public;\r\n    \r\n    function setClaimBadgeContract(address newAddress) external;\r\n    \r\n    function increaseSkullyExp(uint256 skullyId, uint256 flags) external;\r\n    \r\n    function setBadgeToSkully(uint256 skullyId, uint256 badgeId) external;\r\n}\r\n\r\ncontract ExchangeERC721 is SwapControl {\r\n    \r\n    /// @dev The ERC-165 interface signature for ERC-721.\r\n    ///  Ref: https://github.com/ethereum/EIPs/issues/165\r\n    ///  Ref: https://github.com/ethereum/EIPs/issues/721\r\n    bytes4 constant InterfaceSignature_ERC721 = bytes4(0x80ac58cd);\r\n    ERC721 public skullyContract;\r\n    ClockAuction public auctionContract;\r\n    SkullyItems public itemContract;\r\n    \r\n    mapping(uint64 => address) public listERC721;\r\n    uint64 public totalERC721;\r\n    uint64 public plusFlags;\r\n    \r\n    bool public pureSwapState;\r\n\r\n\t/* @notice This constructor of contract\r\n\t * @param _nftAddress the address of skully core\r\n\t * @param _auctionAdress the address of sale auction\r\n\t * @param _itemAdress the address of skully item\r\n\t * return none\r\n\t*/\r\n    constructor(address _nftAddress, address _auctionAdress, address _itemAdress) public {\r\n        ERC721 candidateContract = ERC721(_nftAddress);\r\n        require(candidateContract.supportsInterface(InterfaceSignature_ERC721), \"The candidate contract must supports ERC721\");\r\n        skullyContract = candidateContract;\r\n        \r\n        auctionContract = ClockAuction(_auctionAdress);\r\n        \r\n        itemContract = SkullyItems(_itemAdress);\r\n        \r\n        listERC721[0] = address(candidateContract);\r\n        totalERC721++;\r\n        \r\n        // the creator of the contract is the initial Admiral\r\n        admiralAddress = msg.sender;\r\n\r\n        // the creator of the contract is the initial Pilot\r\n        pilotAddress = msg.sender;\r\n\r\n        // the creator of the contract is also the initial Captain\r\n        captainAddress = msg.sender;\r\n        \r\n        pureSwapState = false;\r\n        plusFlags = 1000;\r\n    }\r\n    \r\n    event Swapped(uint256 _skullyId, uint256 _exchangeTokenId, uint64 _typeERC, uint256 _time);\r\n    event PureSwapped(uint256 _skullyId, uint256 _exchangeTokenId, uint64 _typeERC, uint256 _time);\r\n    \r\n\t/* @notice This function was invoked when user want to swap their collections with skully\r\n\t * @param skullyId the id of skully that user want to swap\r\n\t * @param exchangeTokenId the id of their collections\r\n\t * @param typeERC the number of erc721 in the list of contract that allow to exchange with \r\n\t * return none - just emit a result to the network\r\n\t*/\r\n    function swap(uint256 skullyId, uint256 exchangeTokenId, uint64 typeERC) public whenNotPaused {\r\n        ERC721(listERC721[typeERC]).transferFrom(msg.sender, address(this), exchangeTokenId);\r\n        // cancel sale auction\r\n        auctionContract.cancelAuction(skullyId);\r\n        \r\n        // set flag\r\n        itemContract.increaseSkullyExp(skullyId, plusFlags);\r\n        \r\n        skullyContract.transferFrom(address(this), msg.sender, skullyId);\r\n        \r\n        emit Swapped(skullyId, exchangeTokenId, typeERC, block.timestamp);\r\n    }\r\n    \r\n\t/* @notice This function was invoked when user want to swap their collections with skully\r\n\t * @param skullyId the id of skully that user want to swap\r\n\t * @param exchangeTokenId the id of their collections\r\n\t * @param typeERC the number of erc721 in the list of contract that allow to exchange with \r\n\t * return none - just emit a result to the network\r\n\t*/\r\n    function pureSwap(uint256 skullyId, uint256 exchangeTokenId, uint64 typeERC) public whenNotPaused {\r\n        require(pureSwapState == true);\r\n        ERC721(listERC721[typeERC]).transferFrom(msg.sender, address(this), exchangeTokenId);\r\n        skullyContract.transferFrom(address(this), msg.sender, skullyId);\r\n        \r\n        emit PureSwapped(skullyId, exchangeTokenId, typeERC, block.timestamp);\r\n    }\r\n    \r\n\t/* @notice\r\n\t * @param\r\n\t * return\r\n\t*/\r\n    function setPureSwapSate(bool _state) public onlyCaptain {\r\n        pureSwapState = _state;\r\n    }\r\n    \r\n\t/* @notice\r\n\t * @param\r\n\t * return\r\n\t*/\r\n    function setFlags(uint64 _newFlags) public onlyCaptain {\r\n        plusFlags = _newFlags;\r\n    }\r\n\t\r\n\t///------------------NFT-----------------------///\r\n    event NewNFTAdded(uint64 _id, address _newNFT);\r\n    event NFTDeleted(uint64 _id, address _nftDelete);\r\n    event NFTUpdated(uint64 _id, address _oldAddress, address _newAddress);\r\n    \r\n\t/* @notice\r\n\t * @param\r\n\t * return\r\n\t*/\r\n    function addNewNFT(address newNFTAddress) public onlyCaptain {\r\n        listERC721[totalERC721] = newNFTAddress;\r\n        emit NewNFTAdded(totalERC721, newNFTAddress);\r\n        totalERC721++;\r\n    }\r\n    \r\n\t/* @notice\r\n\t * @param\r\n\t * return\r\n\t*/\r\n    function addNewNFTs(address[] memory _newNFTsAddress) public onlyCaptain {\r\n        for(uint i = 0; i < _newNFTsAddress.length; i++)\r\n            addNewNFT(_newNFTsAddress[i]);\r\n    }\r\n    \r\n\t/* @notice\r\n\t * @param\r\n\t * return\r\n\t*/\r\n    function deleteNFT(uint64 _id) external onlyCaptain {\r\n        emit NFTDeleted(_id, listERC721[_id]);\r\n        listERC721[_id] = address(0);\r\n    }\r\n    \r\n\t/* @notice\r\n\t * @param\r\n\t * return\r\n\t*/\r\n    function updateNFT(uint64 _id, address updateNFTAddress) external onlyCaptain {\r\n        emit NFTUpdated(_id, listERC721[_id], updateNFTAddress);\r\n        listERC721[_id] = updateNFTAddress;\r\n    }\r\n\t\r\n\t\r\n    ///-----------------------------------------///\r\n    \r\n\t/* @notice\r\n\t * @param\r\n\t * return\r\n\t*/\r\n    function transferFromERC721ToCaptainWallet(uint256 tokenId, address erc721Adress) external onlyCaptain {\r\n        ERC721(erc721Adress).transferFrom(address(this), captainAddress, tokenId);\r\n    }\r\n    \r\n\t/* @notice\r\n\t * @param\r\n\t * return\r\n\t*/\r\n    function transferFromERC721sToCaptainWallet(uint256[] calldata tokenIds, address erc721Adress) external onlyCaptain {\r\n        for(uint256 i = 0; i < tokenIds.length; i++)\r\n            ERC721(erc721Adress).transferFrom(address(this), captainAddress, tokenIds[i]);\r\n    }\r\n    \r\n\t/* @notice\r\n\t * @param\r\n\t * return\r\n\t*/\r\n    function transferERC721ToCaptainWallet(uint256 tokenId, address erc721Adress) external onlyCaptain {\r\n        ERC721(erc721Adress).transfer(captainAddress, tokenId);\r\n    }\r\n    \r\n\t/* @notice\r\n\t * @param\r\n\t * return\r\n\t*/\r\n    function transferERC721sToCaptainWallet(uint256[] calldata tokenIds, address erc721Adress) external onlyCaptain {\r\n        for(uint256 i = 0; i < tokenIds.length; i++)\r\n            ERC721(erc721Adress).transfer(captainAddress, tokenIds[i]);\r\n    }\r\n    \r\n\t/* @notice\r\n\t * @param\r\n\t * return\r\n\t*/\r\n    function transferERC20ToCaptainWallet(address erc20Adress) external onlyCaptain {\r\n        ERC20 token = ERC20(erc20Adress);\r\n        token.transfer(captainAddress, token.balanceOf(address(this)));\r\n    }\r\n    \r\n    // @dev Allows the pilot to capture the balance available to the contract.\r\n    function withdrawBalance() external onlyCaptain {\r\n        uint256 balance = address(this).balance;\r\n\r\n        captainAddress.transfer(balance);\r\n    }\r\n    \r\n\t// This contract address allow ether transfer in\r\n    function() external payable {}\r\n\t\r\n\t    \r\n    ///-----------------------------------------///\r\n    function createManySaleAuction(uint256[] calldata _listSkullyId, uint256 _startingPrice, uint256 _endingPrice, uint256 _duration, uint _paymentBy) external onlyCaptain {\r\n        for(uint i = 0; i < _listSkullyId.length; i++)\r\n            createSaleAuction(_listSkullyId[i], _startingPrice, _endingPrice, _duration, _paymentBy);\r\n    }\r\n    \r\n\t\r\n\t// Don't care the rest of function below\r\n\t// It's belong to captain features\r\n    ///-----------------ERC721------------------------///\r\n    \r\n    function setApprovalForAll(address operator, bool _approved) public onlyCaptain {\r\n        skullyContract.setApprovalForAll(operator, _approved);\r\n    }\r\n    \r\n    function addNewCategory(uint256 _id, string calldata _newCategory) external onlyCaptain {\r\n        skullyContract.addNewCategory(_id, _newCategory);\r\n    }\r\n    \r\n    function changeCategory(uint256 _id, string calldata _newCategory) external onlyCaptain {\r\n        skullyContract.changeCategory(_id, _newCategory);\r\n    }\r\n    \r\n    function updateSkill(uint256 _skullyId, uint256 _newAttack, uint256 _newDefend) external onlyCaptain {\r\n        skullyContract.updateSkill(_skullyId, _newAttack, _newDefend);\r\n    }\r\n    \r\n    function createPromoSkully(uint256 _skullyId, uint256 _attack, uint256 _defend, uint256 _category, address _owner) external onlyCaptain {\r\n        skullyContract.createPromoSkully(_skullyId, _attack, _defend, _category, _owner);\r\n    }\r\n    \r\n    function createSaleAuction(uint256 _skullyId, uint256 _startingPrice, uint256 _endingPrice, uint256 _duration, uint _paymentBy) public onlyCaptain {\r\n        skullyContract.createSaleAuction(_skullyId, _startingPrice, _endingPrice, _duration, _paymentBy);\r\n    }\r\n    \r\n    function createNewSkullyAuction(uint256 _newSkullyId, uint256 _category, uint256 _startingPrice, uint256 _endingPrice) public onlyCaptain {\r\n        skullyContract.createNewSkullyAuction(_newSkullyId, _category, _startingPrice, _endingPrice);\r\n    }\r\n\r\n    function createNewSkullysAuction(uint256 _startId, uint256 _endId, uint256 _category, uint256 _startingPrice, uint256 _endingPrice) external onlyCaptain {\r\n        skullyContract.createNewSkullysAuction(_startId, _endId, _category, _startingPrice, _endingPrice);\r\n    }\r\n        \r\n    function createNewSkully(uint256 _newSkullyId, uint256 _category, address _owner) external onlyCaptain {\r\n        skullyContract.createNewSkully(_newSkullyId, _category, _owner);\r\n    }\r\n        \r\n    function createNewSkullys(uint256 _startId, uint256 _endId, uint256 _category, address _owner) external onlyCaptain {\r\n        skullyContract.createNewSkullys(_startId, _endId, _category, _owner);\r\n    }\r\n        \r\n    function setGamePlayAddress(address _gameAddress) external onlyCaptain {\r\n        skullyContract.setGamePlayAddress(_gameAddress);\r\n    }\r\n    \r\n    ///-----------------ITEMS------------------------///\r\n    \r\n    function setDiscount(uint256 _newDiscount) external onlyCaptain returns (uint256) {\r\n        itemContract.setDiscount(_newDiscount);\r\n    }\r\n    \r\n    function createNewMainAccessory(string memory name) public onlyCaptain {\r\n        itemContract.createNewMainAccessory(name);\r\n    }\r\n    \r\n    function createNewAccessory(\r\n        uint256 accessoryType,\r\n        uint256 accessoryId,\r\n        string memory name,\r\n        uint256 attack,\r\n        uint256 defend,\r\n        uint256 po8,\r\n        uint256 eth,\r\n        uint256 po8DailyMultiplier,\r\n        bool mustUnlock) public onlyCaptain {\r\n        itemContract.createNewAccessory(accessoryType, accessoryId, name, attack, defend, po8, eth, po8DailyMultiplier, mustUnlock);\r\n        }\r\n        \r\n    function updateAccessoryInformation(\r\n        uint256 id,\r\n        string calldata newName,\r\n        uint256 newAttack,\r\n        uint256 newDefend,\r\n        uint256 newPO8,\r\n        uint256 newEth,\r\n        uint256 newPO8DailyMultiplier,\r\n        bool newMustUnlock) external onlyCaptain returns (bool) {\r\n        itemContract.updateAccessoryInformation(id, newName, newAttack, newDefend, newPO8, newEth, newPO8DailyMultiplier, newMustUnlock);\r\n        }\r\n        \r\n    function setAccessoryToSkully(uint256 skullyId, uint256 realAccessoryId) external onlyCaptain {\r\n        itemContract.setAccessoryToSkully(skullyId, realAccessoryId);\r\n    }\r\n    \r\n    function setItemGamePlayAddress(address _gameAddress) external onlyCaptain {\r\n        itemContract.setGamePlayAddress(_gameAddress);\r\n    }\r\n    \r\n    function setNewRankPrice(uint8 rank, uint256 newPrice) public onlyCaptain returns (bool) {\r\n        itemContract.setNewRankPrice(rank, newPrice);\r\n    }\r\n    \r\n    function setNewRankFlags(uint8 rank, uint256 newFlags) public  onlyCaptain returns (bool) {\r\n        itemContract.setNewRankFlags(rank, newFlags);\r\n    }\r\n    \r\n    function setExchangeRate(uint256 _newExchangeRate) external onlyCaptain returns (uint256) {\r\n        itemContract.setExchangeRate(_newExchangeRate);\r\n    }\r\n    \r\n    function createNewBadge(uint256 badgeId, string memory description, uint256 po8) public onlyCaptain {\r\n        itemContract.createNewBadge(badgeId, description, po8);\r\n    }\r\n    \r\n    function setPO8OfBadge(uint256 badgeId, uint256 po8) public onlyCaptain {\r\n        itemContract.setPO8OfBadge(badgeId, po8);\r\n    }\r\n    \r\n    function setClaimBadgeContract(address newAddress) external onlyCaptain {\r\n        itemContract.setClaimBadgeContract(newAddress);\r\n    }\r\n    \r\n    function increaseSkullyExp(uint256 skullyId, uint256 flags) external onlyCaptain {\r\n        itemContract.increaseSkullyExp(skullyId, flags);\r\n    }\r\n    \r\n    function setBadgeToSkully(uint256 skullyId, uint256 badgeId) external onlyCaptain {\r\n        itemContract.setBadgeToSkully(skullyId, badgeId);\r\n    }\r\n    \r\n    ///-------------------AUCTION----------------------///\r\n    \r\n    function cancelAuction(uint256 _tokenId) public onlyCaptain {\r\n        auctionContract.cancelAuction(_tokenId);\r\n    }\r\n    \r\n    function cancelManyAuction(uint256[] calldata _listTokenId) external onlyCaptain {\r\n        for(uint i = 0; i < _listTokenId.length; i++)\r\n            cancelAuction(_listTokenId[i]);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"auctionContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"badgeId\",\"type\":\"uint256\"},{\"name\":\"po8\",\"type\":\"uint256\"}],\"name\":\"setPO8OfBadge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalERC721\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFlags\",\"type\":\"uint64\"}],\"name\":\"setFlags\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"skullyId\",\"type\":\"uint256\"},{\"name\":\"exchangeTokenId\",\"type\":\"uint256\"},{\"name\":\"typeERC\",\"type\":\"uint64\"}],\"name\":\"pureSwap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"listERC721\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"deleteNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rank\",\"type\":\"uint8\"},{\"name\":\"newFlags\",\"type\":\"uint256\"}],\"name\":\"setNewRankFlags\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"newName\",\"type\":\"string\"},{\"name\":\"newAttack\",\"type\":\"uint256\"},{\"name\":\"newDefend\",\"type\":\"uint256\"},{\"name\":\"newPO8\",\"type\":\"uint256\"},{\"name\":\"newEth\",\"type\":\"uint256\"},{\"name\":\"newPO8DailyMultiplier\",\"type\":\"uint256\"},{\"name\":\"newMustUnlock\",\"type\":\"bool\"}],\"name\":\"updateAccessoryInformation\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newNFTAddress\",\"type\":\"address\"}],\"name\":\"addNewNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newNFTsAddress\",\"type\":\"address[]\"}],\"name\":\"addNewNFTs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pilotAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_newCategory\",\"type\":\"string\"}],\"name\":\"addNewCategory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmiral\",\"type\":\"address\"}],\"name\":\"setAdmiral\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSkullyId\",\"type\":\"uint256\"},{\"name\":\"_category\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createNewSkully\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accessoryType\",\"type\":\"uint256\"},{\"name\":\"accessoryId\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"attack\",\"type\":\"uint256\"},{\"name\":\"defend\",\"type\":\"uint256\"},{\"name\":\"po8\",\"type\":\"uint256\"},{\"name\":\"eth\",\"type\":\"uint256\"},{\"name\":\"po8DailyMultiplier\",\"type\":\"uint256\"},{\"name\":\"mustUnlock\",\"type\":\"bool\"}],\"name\":\"createNewAccessory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"skullyId\",\"type\":\"uint256\"},{\"name\":\"flags\",\"type\":\"uint256\"}],\"name\":\"increaseSkullyExp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"skullyId\",\"type\":\"uint256\"},{\"name\":\"realAccessoryId\",\"type\":\"uint256\"}],\"name\":\"setAccessoryToSkully\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"erc721Adress\",\"type\":\"address\"}],\"name\":\"transferERC721ToCaptainWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admiralAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"name\":\"erc721Adress\",\"type\":\"address\"}],\"name\":\"transferFromERC721sToCaptainWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"name\":\"erc721Adress\",\"type\":\"address\"}],\"name\":\"transferERC721sToCaptainWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"erc20Adress\",\"type\":\"address\"}],\"name\":\"transferERC20ToCaptainWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_startId\",\"type\":\"uint256\"},{\"name\":\"_endId\",\"type\":\"uint256\"},{\"name\":\"_category\",\"type\":\"uint256\"},{\"name\":\"_startingPrice\",\"type\":\"uint256\"},{\"name\":\"_endingPrice\",\"type\":\"uint256\"}],\"name\":\"createNewSkullysAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gameAddress\",\"type\":\"address\"}],\"name\":\"setItemGamePlayAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_skullyId\",\"type\":\"uint256\"},{\"name\":\"_attack\",\"type\":\"uint256\"},{\"name\":\"_defend\",\"type\":\"uint256\"},{\"name\":\"_category\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createPromoSkully\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSkullyId\",\"type\":\"uint256\"},{\"name\":\"_category\",\"type\":\"uint256\"},{\"name\":\"_startingPrice\",\"type\":\"uint256\"},{\"name\":\"_endingPrice\",\"type\":\"uint256\"}],\"name\":\"createNewSkullyAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"itemContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCaptain\",\"type\":\"address\"}],\"name\":\"setCaptain\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pureSwapState\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"skullyContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"skullyId\",\"type\":\"uint256\"},{\"name\":\"badgeId\",\"type\":\"uint256\"}],\"name\":\"setBadgeToSkully\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rank\",\"type\":\"uint8\"},{\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setNewRankPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"plusFlags\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"captainAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setPureSwapSate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setClaimBadgeContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_startId\",\"type\":\"uint256\"},{\"name\":\"_endId\",\"type\":\"uint256\"},{\"name\":\"_category\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createNewSkullys\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newPilot\",\"type\":\"address\"}],\"name\":\"setPilot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newDiscount\",\"type\":\"uint256\"}],\"name\":\"setDiscount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newExchangeRate\",\"type\":\"uint256\"}],\"name\":\"setExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_listSkullyId\",\"type\":\"uint256[]\"},{\"name\":\"_startingPrice\",\"type\":\"uint256\"},{\"name\":\"_endingPrice\",\"type\":\"uint256\"},{\"name\":\"_duration\",\"type\":\"uint256\"},{\"name\":\"_paymentBy\",\"type\":\"uint256\"}],\"name\":\"createManySaleAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_listTokenId\",\"type\":\"uint256[]\"}],\"name\":\"cancelManyAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"erc721Adress\",\"type\":\"address\"}],\"name\":\"transferFromERC721ToCaptainWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint64\"},{\"name\":\"updateNFTAddress\",\"type\":\"address\"}],\"name\":\"updateNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"createNewMainAccessory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"skullyId\",\"type\":\"uint256\"},{\"name\":\"exchangeTokenId\",\"type\":\"uint256\"},{\"name\":\"typeERC\",\"type\":\"uint64\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_newCategory\",\"type\":\"string\"}],\"name\":\"changeCategory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gameAddress\",\"type\":\"address\"}],\"name\":\"setGamePlayAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_skullyId\",\"type\":\"uint256\"},{\"name\":\"_newAttack\",\"type\":\"uint256\"},{\"name\":\"_newDefend\",\"type\":\"uint256\"}],\"name\":\"updateSkill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"badgeId\",\"type\":\"uint256\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"po8\",\"type\":\"uint256\"}],\"name\":\"createNewBadge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_skullyId\",\"type\":\"uint256\"},{\"name\":\"_startingPrice\",\"type\":\"uint256\"},{\"name\":\"_endingPrice\",\"type\":\"uint256\"},{\"name\":\"_duration\",\"type\":\"uint256\"},{\"name\":\"_paymentBy\",\"type\":\"uint256\"}],\"name\":\"createSaleAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_nftAddress\",\"type\":\"address\"},{\"name\":\"_auctionAdress\",\"type\":\"address\"},{\"name\":\"_itemAdress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_skullyId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_exchangeTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_typeERC\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_skullyId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_exchangeTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_typeERC\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"PureSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"_newNFT\",\"type\":\"address\"}],\"name\":\"NewNFTAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"_nftDelete\",\"type\":\"address\"}],\"name\":\"NFTDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"_oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"NFTUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgrade\",\"type\":\"event\"}]","ContractName":"ExchangeERC721","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000069a1d45318de72d6add20d4952398901e0e4a8e50000000000000000000000003b746a458b529f7d25fbd0c68e0bbabcb1f7dad40000000000000000000000009cf153d6d242dbde42d2cee619412cd987a21ab5","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://abaf54dd634d12ddd8fb79817e76750b080c2f4cbcf4ede1c7c2b200b40abf89"}]}