{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.11;\r\n\r\n\r\ncontract GuessTheNumberGame {\r\n    \r\n    // Events\r\n    event GameCreated(uint bet);\r\n    event GameOpened(address notary);\r\n    event GameClosed();\r\n    event GuessSubmitted(address player, uint guess);\r\n    \r\n    event ResultSubmitted(uint result);\r\n    event PlayersWin(uint winningNumber, uint256 jackpot);\r\n    event OwnerWins();\r\n    \r\n    // Data types\r\n    enum State {\r\n        SETUP, OPEN, CLOSED, PLAYERS_WIN, OWNER_WIN\r\n    }\r\n\r\n    enum PaidStatus {\r\n        UNDEFINED,\r\n        NOT_PAID,\r\n        PAID\r\n    }\r\n    \r\n    struct Guess {\r\n        mapping (address => PaidStatus) players;\r\n        uint guesses_number;\r\n    }\r\n    \r\n    // Variables\r\n    address payable public owner;\r\n    address public notary;\r\n    State public state;\r\n\r\n    mapping (uint => Guess) public guesses;\r\n\r\n    uint256 public bet;\r\n    \r\n    uint public winningNumber = 0;\r\n    uint256 splitJackpot;\r\n\r\n    \r\n    // ----------MODIFIERS--------------------\r\n    modifier byPlayer(){\r\n        require(msg.sender != notary);\r\n        _;\r\n    }\r\n    \r\n    // Checks if the sender is the owner\r\n    modifier byOwner(){\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    // Checks if the sender is the notary\r\n    modifier byNotary(){\r\n        require(msg.sender == notary);\r\n        _;\r\n    }\r\n    \r\n    // Checks the status\r\n    modifier inState(State expected) {\r\n        require(state == expected);\r\n        _;\r\n    }\r\n    // -------------------------------------\r\n\r\n    constructor(uint256 _bet) public {\r\n        require(_bet > 0);\r\n        \r\n        owner = msg.sender;\r\n        state = State.SETUP;\r\n        bet = _bet;\r\n        \r\n        emit GameCreated(bet);\r\n    }\r\n    \r\n    function openGame(address _notary) public byOwner inState(State.SETUP){\r\n        notary = _notary;\r\n        state = State.OPEN;\r\n        \r\n        emit GameOpened(notary);\r\n    }\r\n    \r\n    function closeGame() public byOwner inState(State.OPEN){\r\n        state = State.CLOSED;\r\n        \r\n        emit GameClosed();\r\n    }\r\n    \r\n    function submitGuess(uint _guess) public payable byPlayer inState(State.OPEN) {\r\n        require(isValidNumber(_guess));\r\n        require(msg.value == (bet * 0.001 ether));\r\n\r\n        guesses[_guess].guesses_number++;\r\n        guesses[_guess].players[msg.sender] = PaidStatus.NOT_PAID;\r\n        \r\n        emit GuessSubmitted(msg.sender, _guess);\r\n    }\r\n    \r\n    function submitResult(uint _result) public payable byNotary inState(State.CLOSED) {\r\n        require(isValidNumber(_result));\r\n        emit ResultSubmitted(_result);\r\n         \r\n        for(uint i = _result; (i > 0 && state != State.PLAYERS_WIN); i--){\r\n            if(guesses[i].guesses_number > 0){\r\n                winningNumber = i;\r\n                state = State.PLAYERS_WIN;\r\n                splitJackpot = getBalance()/guesses[i].guesses_number;\r\n                emit PlayersWin(winningNumber, splitJackpot);\r\n            }\r\n        }\r\n\r\n        if(state != State.PLAYERS_WIN){\r\n            state = State.OWNER_WIN;\r\n            emit OwnerWins();\r\n        }\r\n    }\r\n    \r\n    function collectOwnerWinnings() public byOwner inState(State.OWNER_WIN){\r\n        selfdestruct(owner);\r\n    }\r\n    \r\n    function collectPlayerWinnings() public byPlayer inState(State.PLAYERS_WIN){\r\n        if(guesses[winningNumber].players[msg.sender] == PaidStatus.NOT_PAID){\r\n            guesses[winningNumber].players[msg.sender] = PaidStatus.PAID;\r\n            msg.sender.transfer(splitJackpot);\r\n        } else revert();\r\n    }\r\n\r\n    function getBalance() private view returns (uint256){\r\n        return address(this).balance;\r\n    }\r\n    \r\n    function isValidNumber(uint _guess) private pure returns (bool) {\r\n        return _guess >= 1 && _guess <= 1000;\r\n    } \r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"bet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"guesses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"guesses_number\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_result\",\"type\":\"uint256\"}],\"name\":\"submitResult\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_notary\",\"type\":\"address\"}],\"name\":\"openGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"notary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum GuessTheNumberGame.State\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectOwnerWinnings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectPlayerWinnings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_guess\",\"type\":\"uint256\"}],\"name\":\"submitGuess\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bet\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bet\",\"type\":\"uint256\"}],\"name\":\"GameCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"notary\",\"type\":\"address\"}],\"name\":\"GameOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"GameClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"guess\",\"type\":\"uint256\"}],\"name\":\"GuessSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"name\":\"ResultSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winningNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"jackpot\",\"type\":\"uint256\"}],\"name\":\"PlayersWin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OwnerWins\",\"type\":\"event\"}]","ContractName":"GuessTheNumberGame","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000004","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://1904520524622bcc8904238b4f50699a0e63f49913a58b5251ed2c4ff06aa80f"}]}