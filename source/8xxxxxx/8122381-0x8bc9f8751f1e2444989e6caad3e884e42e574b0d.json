{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        \r\n    return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract ERC20Standard {\r\n    using SafeMath for uint256;\r\n    uint public totalSupply;\r\n    uint public totalETH;\r\n    \r\n    string public name;\r\n    uint8 public decimals;\r\n    string public symbol;\r\n    string public version;\r\n    \r\n    address public admin;\r\n    \r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint)) allowed;\r\n\r\n    //Fix for short address attack against ERC20\r\n    modifier onlyPayloadSize(uint size) {\r\n        assert(msg.data.length == size + 4);\r\n        _;\r\n    } \r\n    \r\n    modifier onlyAdmin() {\r\n        assert(msg.sender == admin);\r\n        _;\r\n    } \r\n    \r\n    function balanceOf(address _owner) public view returns (uint balance) {\r\n        return balances[_owner];\r\n    }\r\n    \r\n    function payout(uint _amount, address payable _address) public onlyAdmin {\r\n        _address.transfer(_amount);\r\n        totalETH = totalETH - _amount;\r\n    }\r\n    \r\n    function transfer(address _recipient, uint _value) public onlyPayloadSize(2*32) {\r\n        require(balances[msg.sender] >= _value && _value > 0);\r\n        balances[msg.sender].sub(_value);\r\n        balances[_recipient].add(_value);\r\n        emit Transfer(msg.sender, _recipient, _value);        \r\n    }\r\n\r\n    //Event which is triggered to log all transfers to this contract's event log\r\n    event Transfer(\r\n        address indexed _from,\r\n        address indexed _to,\r\n        uint _value\r\n    );\r\n        \r\n    function () external payable{\r\n        balances[msg.sender] = balances[msg.sender] + msg.value;\r\n        totalSupply = totalSupply + msg.value;\r\n        totalETH = totalETH + msg.value;\r\n        emit Transfer(address(0), msg.sender, msg.value);\r\n    }\r\n    \r\n}\r\n\r\ncontract SOSToken is ERC20Standard {\r\n    constructor () public {\r\n        totalSupply = 0;\r\n        name = \"SOSToken\";\r\n        decimals = 18;\r\n        symbol = \"SOS\";\r\n        version = \"1.0\";\r\n        balances[msg.sender] = totalSupply;\r\n        admin = 0x62bB779577668377D5C08d7F9999611E7086B3c5;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"payout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"SOSToken","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ff8749b64ca4e2a81205a811d49febcf0f38fa97c417a5e2a13dc4fd6deccc6d"}]}