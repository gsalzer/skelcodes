{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.1;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Token{\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n}\r\n\r\n\r\n/**\r\n * @title token token initial distribution\r\n *\r\n * @dev Distribute purchasers, airdrop, reserve, and founder tokens\r\n */\r\ncontract Airdropfree {\r\n  using SafeMath for uint256;\r\n  Token public token;\r\n  \r\n  event Airdropped(address _tokenContractAdd, address _recipient, uint256 _tokens);\r\n\r\n  /**\r\n    * @dev perform a transfer of allocations\r\n    * @param _recipient is a list of recipients\r\n    * @param _tokens is list of tokens to sent to recipients\r\n    */\r\n  function airdropTokens(address _tokenContractAdd, address[] memory _recipient, uint256[] memory _tokens) public {\r\n    token = Token(_tokenContractAdd);\r\n    for(uint256 i = 0; i< _recipient.length; i++)\r\n    {\r\n          require(token.transferFrom(msg.sender, _recipient[i], _tokens[i]));\r\n          emit Airdropped(_tokenContractAdd, _recipient[i], _tokens[i]);\r\n    }\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContractAdd\",\"type\":\"address\"},{\"name\":\"_recipient\",\"type\":\"address[]\"},{\"name\":\"_tokens\",\"type\":\"uint256[]\"}],\"name\":\"airdropTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_tokenContractAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Airdropped\",\"type\":\"event\"}]","ContractName":"Airdropfree","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://209f90cabfee99648a565d3c3dd887459f777f31991a8c897806bdb0fc72e848"}]}