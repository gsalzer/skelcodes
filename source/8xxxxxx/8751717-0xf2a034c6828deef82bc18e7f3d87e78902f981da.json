{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.26;\r\n\r\ncontract Proxy {\r\n  function implementation() public view returns (address);\r\n\r\n  function version() public view returns (string);\r\n\r\n  function () payable public {\r\n    address _impl = implementation();\r\n    require(_impl != address(0));\r\n\r\n    assembly {\r\n      let ptr := mload(0x40)\r\n      calldatacopy(ptr, 0, calldatasize)\r\n      let result := delegatecall(gas, _impl, ptr, calldatasize, 0, 0)\r\n      let size := returndatasize\r\n      returndatacopy(ptr, 0, size)\r\n\r\n      switch result\r\n      case 0 { revert(ptr, size) }\r\n      default { return(ptr, size) }\r\n    }\r\n  }\r\n}\r\n\r\ncontract UpgradeabilityProxy is Proxy {\r\n\r\n  event Upgraded(address indexed implementation, string version);\r\n\r\n  bytes32 private constant implementationPosition = keccak256(\"airdrop.app.proxy.implementation\");\r\n  \r\n  string internal _version;\r\n\r\n  constructor() public {}\r\n  \r\n  function version() public view returns (string) {\r\n    return _version;\r\n  }\r\n\r\n  function implementation() public view returns (address impl) {\r\n    bytes32 position = implementationPosition;\r\n    assembly {\r\n      impl := sload(position)\r\n    }\r\n  }\r\n\r\n  function _setImplementation(address _newImplementation) internal {\r\n    bytes32 position = implementationPosition;\r\n    assembly {\r\n      sstore(position, _newImplementation)\r\n    }\r\n  }\r\n\r\n  function _upgradeTo(address _newImplementation, string _newVersion) internal {\r\n    address currentImplementation = implementation();\r\n    require(currentImplementation != _newImplementation);\r\n    _setImplementation(_newImplementation);\r\n    _version = _newVersion;\r\n    emit Upgraded( _newImplementation, _newVersion);\r\n  }\r\n}\r\n\r\n\r\ncontract AirdropProxy is UpgradeabilityProxy {\r\n\r\n  event ProxyOwnershipTransferred(address previousOwner, address newOwner);\r\n\r\n  bytes32 private constant proxyOwnerPosition = keccak256(\"airdrop.app.proxy.owner\");\r\n\r\n  constructor(address _implementation, string _version) public {\r\n    _setUpgradeabilityOwner(msg.sender);\r\n    _upgradeTo(_implementation, _version);\r\n  }\r\n\r\n  modifier onlyProxyOwner() {\r\n    require(msg.sender == proxyOwner());\r\n    _;\r\n  }\r\n\r\n  function proxyOwner() public view returns (address owner) {\r\n    bytes32 position = proxyOwnerPosition;\r\n    assembly {\r\n      owner := sload(position)\r\n    }\r\n  }\r\n\r\n  function transferProxyOwnership(address _newOwner) public onlyProxyOwner {\r\n    require(_newOwner != address(0));\r\n    _setUpgradeabilityOwner(_newOwner);\r\n    emit ProxyOwnershipTransferred(proxyOwner(), _newOwner);\r\n  }\r\n\r\n  function upgradeTo(address _implementation, string _newVersion) public onlyProxyOwner {\r\n    _upgradeTo(_implementation, _newVersion);\r\n  }\r\n\r\n  function upgradeToAndCall(address _implementation, string _newVersion, bytes _data) payable public onlyProxyOwner {\r\n    _upgradeTo(_implementation, _newVersion);\r\n    require(address(this).call.value(msg.value)(_data));\r\n  }\r\n\r\n  function _setUpgradeabilityOwner(address _newProxyOwner) internal {\r\n    bytes32 position = proxyOwnerPosition;\r\n    assembly {\r\n      sstore(position, _newProxyOwner)\r\n    }\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"proxyOwner\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_implementation\",\"type\":\"address\"},{\"name\":\"_newVersion\",\"type\":\"string\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"name\":\"impl\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_implementation\",\"type\":\"address\"},{\"name\":\"_newVersion\",\"type\":\"string\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferProxyOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_implementation\",\"type\":\"address\"},{\"name\":\"_version\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ProxyOwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"version\",\"type\":\"string\"}],\"name\":\"Upgraded\",\"type\":\"event\"}]","ContractName":"AirdropProxy","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000f9856b5cac2dcbd47aa6b82bad761659bdc9a5bf00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000","Library":"","LicenseType":"None","SwarmSource":"bzzr://7d8218dd26b0cd14c1db00ecc90f91634588fed9611ae6f04fa51734322e1d1b"}]}