{"status":"1","message":"OK","result":[{"SourceCode":"// hevm: flattened sources of /nix/store/pn2d4gb0yq19i7ixbxiy90933vlxhacj-esm-8e2d767/src/ESM.sol\r\npragma solidity >=0.5.6 <0.6.0;\r\n\r\n////// /nix/store/pn2d4gb0yq19i7ixbxiy90933vlxhacj-esm-8e2d767/src/ESM.sol\r\n/* pragma solidity ^0.5.6; */\r\n\r\ncontract GemLike {\r\n    function balanceOf(address) public view returns (uint256);\r\n    function transfer(address, uint256) public returns (bool);\r\n    function transferFrom(address, address, uint256) public returns (bool);\r\n}\r\n\r\ncontract EndLike {\r\n    function cage() public;\r\n}\r\n\r\ncontract ESM {\r\n    GemLike public gem; // collateral\r\n    EndLike public end; // cage module\r\n    address public pit; // burner\r\n    uint256 public min; // threshold\r\n    uint256 public fired;\r\n\r\n    mapping(address => uint256) public sum; // per-address balance\r\n    uint256 public Sum; // total balance\r\n\r\n    // --- Logs ---\r\n    event LogNote(\r\n        bytes4   indexed  sig,\r\n        address  indexed  usr,\r\n        bytes32  indexed  arg1,\r\n        bytes32  indexed  arg2,\r\n        bytes             data\r\n    ) anonymous;\r\n\r\n    modifier note {\r\n        _;\r\n        assembly {\r\n            // log an 'anonymous' event with a constant 6 words of calldata\r\n            // and four indexed topics: selector, caller, arg1 and arg2\r\n            let mark := msize                         // end of memory ensures zero\r\n            mstore(0x40, add(mark, 288))              // update free memory pointer\r\n            mstore(mark, 0x20)                        // bytes type data offset\r\n            mstore(add(mark, 0x20), 224)              // bytes size (padded)\r\n            calldatacopy(add(mark, 0x40), 0, 224)     // bytes payload\r\n            log4(mark, 288,                           // calldata\r\n                 shl(224, shr(224, calldataload(0))), // msg.sig\r\n                 caller,                              // msg.sender\r\n                 calldataload(4),                     // arg1\r\n                 calldataload(36)                     // arg2\r\n                )\r\n        }\r\n    }\r\n\r\n    constructor(address gem_, address end_, address pit_, uint256 min_) public {\r\n        gem = GemLike(gem_);\r\n        end = EndLike(end_);\r\n        pit = pit_;\r\n        min = min_;\r\n    }\r\n\r\n    // -- math --\r\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        z = x + y;\r\n        require(z >= x);\r\n    }\r\n\r\n    function fire() external note {\r\n        require(fired == 0,  \"esm/already-fired\");\r\n        require(Sum >= min,  \"esm/min-not-reached\");\r\n\r\n        end.cage();\r\n\r\n        fired = 1;\r\n    }\r\n\r\n    function join(uint256 wad) external note {\r\n        require(fired == 0, \"esm/already-fired\");\r\n\r\n        sum[msg.sender] = add(sum[msg.sender], wad);\r\n        Sum = add(Sum, wad);\r\n\r\n        require(gem.transferFrom(msg.sender, pit, wad), \"esm/transfer-failed\");\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gem_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"end_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pit_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"min_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"Sum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"contract EndLike\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"fire\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gem\",\"outputs\":[{\"internalType\":\"contract GemLike\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"join\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"min\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ESM","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000009f8f72aa9304c8b593d555f12ef6589cc3a579a2000000000000000000000000ab14d3ce3f733cacb76ec2abe7d2fcb00c99f3d500000000000000000000000069076e44a9c70a67d5b79d95795aba299083c275000000000000000000000000000000000000000000000a968163f0a57b400000","Library":"","LicenseType":"GNU GPLv3","SwarmSource":"bzzr://89c53310feae5c1d4b12a6cf2210980ddfa9f78cd949714496f7b196d236df05"}]}