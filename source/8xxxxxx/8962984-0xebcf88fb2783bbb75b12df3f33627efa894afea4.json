{"status":"1","message":"OK","result":[{"SourceCode":"//SPACEDICE - https://adapp.games/spacedice\r\n//Pick dice 1, dice 2, and place a minimum bet of .001 ETH\r\n//Vegas odds\r\n//Total \tPays\t    Combinations\r\n//2 \t 33 to 1 \t  1:1\r\n//3 \t 16 to 1\t  1:2 , 2:1\r\n//4 \t 10 to 1\t  1:3 , 3:1 , 2:2\r\n//5 \t  8 to 1\t  1:4 , 4:1 , 2:3 , 3:2\r\n//6 \t  6 to 1\t  1:5 , 5:1 , 2:4 , 4:2 , 3:3\r\n//7 \t  5 to 1\t  1:6 , 6:1 , 2:5 , 5:2 , 3:4 , 4:3\r\n//8 \t  6 to 1\t  2:6 , 6:2 , 3:5 , 5:3 , 4:4\r\n//9 \t  8 to 1\t  3:6 , 6:3 , 4:5 , 5:4\r\n//10\t 10 to 1\t  4:6 , 6:4 , 5:5\r\n//11\t 16 to 1\t  5:6 , 6:5\r\n//12\t 33 to 1\t  6:6\r\n//Hard ways x30\r\n//Snake eyes or midnight x33\r\n\r\npragma solidity ^0.4.23;\r\n\r\n//Randomness by Ñíguez Randomity Engine\r\n//https://niguezrandomityengine.github.io/\r\ncontract niguezRandomityEngine {\r\n  function ra() external view returns (uint256);\r\n\tfunction rx() external view returns (uint256);\r\n}\r\n\r\ncontract usingNRE {\r\n\r\n  niguezRandomityEngine internal nre = niguezRandomityEngine(0x031eaE8a8105217ab64359D4361022d0947f4572);\r\n    \r\n  function ra() internal view returns (uint256) {\r\n        return nre.ra();\r\n    }\r\n\t\r\n\tfunction rx() internal view returns (uint256) {\r\n        return nre.rx();\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n  address owner;\r\n  constructor() public {\r\n  owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner {\r\n  require(msg.sender == owner);\r\n  _;\r\n  }\r\n}\r\n\r\n  contract Mortal is Ownable {\r\n  function kill() public onlyOwner {\r\n    selfdestruct(owner);\r\n  }\r\n}\r\n\r\n  contract SPACEDICE is Mortal, usingNRE{\r\n  uint minBet = 1000000000000000; //.001 ETH minimum bet \r\n\r\n  event Roll(bool _won, uint256 _dice1, uint256 _dice2, uint256 _roll1, uint256 _roll2, uint _amount);\r\n\r\n  constructor() payable public {}\r\n\r\n  function() public { //fallback\r\n    revert();\r\n  }\r\n\r\n  function bet(uint _diceOne, uint _diceTwo) payable public {\r\n    require(tx.origin == msg.sender);//Prevent call from a contract\r\n    require(_diceOne > 0 && _diceOne <= 6);\r\n    require(_diceTwo > 0 && _diceTwo <= 6);\r\n    require(msg.value >= minBet);\r\n    uint256 rollone = ra() % 6 + 1;\r\n    uint256 rolltwo = rx() % 6 + 1;\r\n    uint256 totalroll = rollone + rolltwo;\r\n    uint256 totaldice = _diceOne + _diceTwo;\r\n    if (totaldice == totalroll) {\r\n      uint amountWon = msg.value;\r\n      if(rollone!=rolltwo && _diceOne==_diceTwo){\r\n        emit Roll(false, _diceOne, _diceTwo, rollone, rolltwo, 0);//Hard ways bet easy ways roll loss\r\n      }\r\n      if(totalroll==7) amountWon = msg.value*5;//Lucky 7 pays x5\r\n      if(totalroll==6 || totalroll==8) amountWon = msg.value*6;//Pays x6 for 6 or 8\r\n      if(totalroll==5 || totalroll==9) amountWon = msg.value*8;//Pays x8 for 9 or 5\r\n      if(totalroll==4 || totalroll==10) amountWon = msg.value*10;//Pays x10 for 4 or 10\r\n      if(totalroll==3 || totalroll==11) amountWon = msg.value*16;//Pays x16 for 3 or 11\r\n      if(rollone==rolltwo && _diceOne==_diceTwo) amountWon = msg.value*30;//Pays x30 for hard ways\r\n      if(totalroll==2 || totalroll==12) amountWon = msg.value*33;//Pays x33 for aces or midnight \r\n      if(!msg.sender.send(amountWon)) revert();\r\n      emit Roll(true, _diceOne, _diceTwo, rollone, rolltwo, amountWon);\r\n    }\r\n    else {\r\n      emit Roll(false, _diceOne, _diceTwo, rollone, rolltwo, 0);\r\n    }\r\n  }\r\n\r\n  function checkContractBalance() public view returns(uint) {\r\n    return address(this).balance;\r\n  }\r\n\r\n  //Withdrawal function\r\n  function collect(uint _amount) public onlyOwner {\r\n    require(address(this).balance > _amount);\r\n    owner.transfer(_amount);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkContractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_diceOne\",\"type\":\"uint256\"},{\"name\":\"_diceTwo\",\"type\":\"uint256\"}],\"name\":\"bet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"collect\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_won\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_dice1\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_dice2\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_roll1\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_roll2\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Roll\",\"type\":\"event\"}]","ContractName":"SPACEDICE","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://4ad95b72600dd6b4a63020daae59243bd922af5d41a765b07b8b8b0a7c0769cc"}]}