{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.5.0;\r\n\r\ncontract test {\r\n    \r\n        \r\n        address public owner;\r\n        uint public toatal_menber;\r\n    \r\n        mapping(address => uint)public intro; //該地址的會員數量\r\n        mapping(address => mapping(uint => address))public menber; // 團隊成員的公鑰及編號\r\n        mapping(address => address)public Superior; //主管是誰\r\n        mapping(address => uint)public generation;//第幾代\r\n        mapping(uint => uint)public count;\r\n        mapping(address => uint)public Sort; //第幾個\r\n        mapping(uint => mapping (uint => address))public age;//用第N代第N個查詢地址\r\n       \r\n        constructor()public{\r\n            owner = msg.sender;\r\n        }\r\n         \r\n        function refferer(address user_intro )public{\r\n           \r\n           require (msg.sender != user_intro,\"不能投給自己\");\r\n           \r\n                \r\n                if( generation[owner] == 0 && Sort[owner]==0){\r\n                    generation[owner]++; // 我的主管如果是0代，那就往上+1\r\n                    Sort[owner]++;//如果我的主管是第0為，那就往上+1\r\n                    age[generation[owner]][Sort[owner]]=owner;\r\n                    toatal_menber++;\r\n                    count[generation[owner]]++;\r\n                }\r\n                \r\n                check_presence(user_intro); // 驗證有沒有這個主管\r\n                \r\n                intro [user_intro]++; //主管的團隊人數\r\n                \r\n                set_menber(user_intro);//主管的團隊有誰\r\n                set_Superior(user_intro); //你的主管是誰\r\n                \r\n                \r\n                generation[msg.sender] = generation[user_intro]+1;//我的主管第N代，我是他的第N+1代\r\n                count[generation[msg.sender]]++;//這代有多少人\r\n                Sort[msg.sender] = count[generation[msg.sender]];//我是第幾個\r\n                age[generation[msg.sender]][count[generation[msg.sender]]]=msg.sender;//用第N代第N個查詢地址\r\n                \r\n                team_score(user_intro);\r\n                toatal_menber++;//FICO會員總人數\r\n        }\r\n        \r\n        function check_presence (address user_intro)private view{\r\n            if(generation[user_intro]==0){\r\n                revert(\"沒有這個地址\");\r\n            }\r\n        }\r\n        \r\n        \r\n        function set_menber (address user_intro)private returns (address){\r\n            return menber[user_intro][intro[user_intro]]=msg.sender;  \r\n             \r\n        }\r\n  \r\n        function set_Superior(address user_intro)private returns(address){\r\n            return Superior[msg.sender]=user_intro;\r\n        }\r\n       \r\n        function team_score(address user_intro)private {\r\n\r\n            for(uint i=0; i<generation[user_intro];i++){\r\n                \r\n                for(uint x=0 ; x<toatal_menber;x++){\r\n                \r\n                if(age[i][x] == Superior[user_intro] || age[i][x] == age[1][1]){\r\n                intro[age[i][x]]++;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            \r\n        }\r\n      \r\n    }","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Sort\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"intro\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"menber\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"generation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Superior\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"toatal_menber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user_intro\",\"type\":\"address\"}],\"name\":\"refferer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"age\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"test","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://436ff281ec7629b9bf71392c908ab579f502940063b26423ff263b7f9df44526"}]}