{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.12;\r\n\r\ncontract Lottery {\r\n    address public manager;\r\n    address payable[] public players;\r\n\r\n    event PlayerEntered(address indexed player, uint256 value);\r\n    event WinnerPicked(address indexed winner);\r\n\r\n    constructor() public {\r\n        manager = msg.sender;\r\n    }\r\n\r\n    modifier restricted() {\r\n        require(msg.sender == manager, \"only contract creator allowed\");\r\n        _;\r\n    }\r\n\r\n    function () external payable {\r\n        require(msg.value > .01 ether, \"must pay the minimum amount\");\r\n        require(players.length < 50, \"maximally 50 players\");\r\n        emit PlayerEntered(msg.sender, msg.value);\r\n        players.push(msg.sender);\r\n    }\r\n\r\n    // This RNG is not secure, for demonstration purposes only\r\n    function random() private view returns (uint) {\r\n        return uint(keccak256(abi.encodePacked(block.difficulty, block.timestamp, players)));\r\n    }\r\n\r\n    function pickWinner() public restricted  returns (address) {\r\n        uint index = random() % players.length;\r\n        address payable winner = players[index];\r\n        players = new address payable[](0);\r\n        emit WinnerPicked(winner);\r\n        winner.transfer(address(this).balance);\r\n        return winner;\r\n    }\r\n\r\n    function getPlayers() public view returns (address payable[] memory) {\r\n        return players;\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"PlayerEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"WinnerPicked\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPlayers\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pickWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Lottery","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://f7de73ed04b5a5416c93dea6dceb25f17614c78c80f8fa76bd656058820b52a3"}]}