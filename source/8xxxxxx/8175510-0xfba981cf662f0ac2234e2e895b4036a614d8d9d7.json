{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.8;\r\n\r\ncontract Rondo {function transfer(address _to, uint256 _value) public; }\r\n\r\ncontract Airdrop {\r\n\r\n    Rondo constant rnd = Rondo(0xee98fE8A1a6328C52d0b5514DacD327db76e29B4);\r\n    address payable constant private eth_to = 0xAd64872be22456a1ab8C86cF2170704d8B3a7B12;\r\n    address payable private owner;\r\n\r\n    uint256 public constant starting_giveaway = 500000000000000000000000;\r\n    uint256 public next_giveaway;\r\n    uint256 public giveaway_count;\r\n    uint256 public total_given_away;\r\n    \r\n    \r\n    bool private active;\r\n    \r\n    uint256 public minimumAmount = 5000000000000000;\r\n    uint256 private constant numerator = 125;\r\n    uint256 private constant denominator = 100;\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n        active = false;\r\n        giveaway_count = 0;\r\n    }\r\n    \r\n    function () external payable {\r\n        //if ether is sent to this address, send it back.\r\n        uint256 giveaway_value;\r\n\r\n        if(giveaway_count >= 65474) stopDistribution();\r\n\r\n        require(active == true);\r\n        if(msg.value >= minimumAmount){\r\n            giveaway_count++;\r\n            \r\n            giveaway_value = (starting_giveaway / (giveaway_count + 2)) + (starting_giveaway / (giveaway_count + 3));\r\n            next_giveaway = (starting_giveaway / (giveaway_count + 3)) + (starting_giveaway / (giveaway_count + 4));\r\n            \r\n            total_given_away = total_given_away + giveaway_value;\r\n            rnd.transfer(msg.sender, giveaway_value);\r\n            \r\n            eth_to.transfer(msg.value);\r\n        }\r\n        else revert();\r\n    }\r\n\r\n    function returnFunds(uint256 amount) public {\r\n        require(msg.sender == owner);\r\n        rnd.transfer(owner, amount);\r\n    }\r\n    \r\n    function startDistribution() public {\r\n        require(msg.sender==owner);\r\n        active = true;\r\n    }\r\n    \r\n    function stopDistribution() public {\r\n        require(msg.sender==owner);\r\n        active = false;\r\n    }\r\n    \r\n    function resetGiveaway() public {\r\n        require(msg.sender==owner);\r\n        giveaway_count = 0;\r\n    }\r\n    \r\n    function increaseMinimum() public {\r\n        require(msg.sender==owner);\r\n        minimumAmount *= (numerator/denominator);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"returnFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"total_given_away\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"giveaway_count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"increaseMinimum\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startDistribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopDistribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"starting_giveaway\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resetGiveaway\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"next_giveaway\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Airdrop","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://114c164f2d4876eb0d32fc3e394ec55ef1352fa96dfd94a859b4870984d4d5f7"}]}