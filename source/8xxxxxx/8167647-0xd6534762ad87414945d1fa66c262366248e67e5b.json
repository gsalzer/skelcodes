{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.2;\r\n\r\n/**\r\n * @title IVTUser\r\n * @dev Contract for upgradeable applications.\r\n * It handles the creation and upgrading of proxies.\r\n */\r\ncontract IVTUser {\r\n\r\n    /// @dev  签名所需最少签名\r\n    uint256 public required;\r\n    /// @dev  owner地址\r\n    address public owner;\r\n    /// @dev  (签名地址==》标志位)\r\n    mapping (address => bool) public signers;\r\n    /// @dev  （交易历史==》标志位）\r\n    mapping (uint256 => bool) public transactions;\r\n    /// @dev  代理地址\r\n    IVTProxyInterface public proxy;\r\n\r\n    event Deposit(address _sender, uint256 _value);\r\n  /**\r\n   * @dev Constructor function.\r\n   */\r\n  constructor(address[] memory _signers, IVTProxyInterface _proxy, uint8 _required) public {\r\n    require(_required <= _signers.length && _required > 0 && _signers.length > 0);\r\n\r\n    for (uint8 i = 0; i < _signers.length; i++){\r\n        require(_signers[i] != address(0));\r\n        signers[_signers[i]] = true;\r\n    }\r\n    required = _required;\r\n    owner = msg.sender;\r\n    proxy = _proxy;\r\n}\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n/**\r\n * @dev      充值接口\r\n * @return   {[null]}\r\n */\r\n  function() payable external {\r\n      if (msg.value > 0)\r\n          emit Deposit(msg.sender, msg.value);\r\n  }\r\n\r\n  /**\r\n   * @dev 向逻辑合约发送请求的通用接口\r\n   * @param _data Data to send as msg.data in the low level call.\r\n   * It should include the signature and the parameters of the function to be called, as described in\r\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\r\n   */\r\n  function callImpl(bytes calldata _data)  external onlyOwner {\r\n    address implAddress = proxy.getImplAddress();\r\n    implAddress.delegatecall(_data);// 必须用delegatecall\r\n  }\r\n\r\n/**\r\n * @dev      设置Id\r\n * @param _id _time to set\r\n */\r\n  function setTransactionId(uint256 _id) public {\r\n    transactions[_id] = true;\r\n  }\r\n\r\n/**\r\n * @dev      获取多签required\r\n * @return   {[uint256]}\r\n */\r\n  function getRequired() public view returns (uint256) {\r\n    return required;\r\n  }\r\n\r\n/**\r\n * @dev      是否包含签名者\r\n * @param _signer _signer to sign\r\n * @return   {[bool]}\r\n */\r\n  function hasSigner(address _signer) public view  returns (bool) {\r\n    return signers[_signer];\r\n  }\r\n\r\n/**\r\n * @dev      是否包含交易Id\r\n * @param _transactionId _transactionTime to get\r\n * @return   {[bool]}\r\n */\r\n  function hasTransactionId(uint256 _transactionId) public view returns (bool) {\r\n    return transactions[_transactionId];\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title IVTProxyInterface\r\n * @dev Contract for ProxyInterface\r\n */\r\ncontract IVTProxyInterface {\r\n  function getImplAddress() external view returns (address);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getRequired\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_transactionId\",\"type\":\"uint256\"}],\"name\":\"hasTransactionId\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"callImpl\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"hasSigner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"signers\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"setTransactionId\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"required\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_signers\",\"type\":\"address[]\"},{\"name\":\"_proxy\",\"type\":\"address\"},{\"name\":\"_required\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"}]","ContractName":"IVTUser","CompilerVersion":"v0.5.2+commit.1df8f40c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000137256e72edb66e5d9c5b1812a6beba06405e15000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000004e722f34214e22fdbecc267ac765872550cd172b00000000000000000000000067b72df4b57618dab0f5d6851036063950ec1636000000000000000000000000bc9867f1dae77378e1cd65be60f9eaf752d50396","Library":"","SwarmSource":"bzzr://14cf97f23139e5c5b43687ff828d56e50ed205a2134e78ee8e745604219bb0ae"}]}