{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\nlibrary SafeMath {\r\n    \r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() { require(msg.sender == owner); _; }\r\n}\r\n\r\ncontract MultiTransfer is Ownable {\r\n    using SafeMath for uint256;\r\n    \r\n    event Transacted(\r\n        address msgSender, // 트랜잭션을 시작한 메시지의 발신자 주소\r\n        address toAddress, // 트랜잭션이 전송된 주소\r\n        uint value // 주소로 보낸 Wei 금액\r\n    );\r\n\r\n/**\r\n* @param _to 대상 주소\r\n* @param _amount 전송할 wei의 양\r\n*/\r\n  function multiTransfer(address[] _to, uint256[] _amount) public payable onlyOwner returns (bool) {\r\n    require(_to.length == _amount.length);\r\n\r\n    uint256 ui;\r\n    uint256 amountSum = 0;\r\n\r\n    for (ui = 0; ui < _to.length; ui++) {\r\n        require(_to[ui] != address(0));\r\n        amountSum = amountSum.add(_amount[ui]);\r\n    }\r\n\r\n    require(amountSum <= msg.value);\r\n\r\n    for (ui = 0; ui < _to.length; ui++) {\r\n        _to[ui].transfer(_amount[ui]);\r\n        emit Transacted(msg.sender, _to[ui], _amount[ui]);\r\n    }\r\n\r\n    return true;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"msgSender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"toAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transacted\",\"type\":\"event\"}]","ContractName":"MultiTransfer","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8c6eeb7f4f42ae7a8e8a84496199542678e839557b4fb2c20b46f8093cb3f347"}]}