{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.8;\r\n// allow array of string\r\npragma experimental ABIEncoderV2;\r\n\r\n/**\r\n * @title smart contract that allows IMQ to register its certificates in blockchain\r\n * @author nya1, lepidotteri\r\n * @dev Optimized for gas cost and time, allows to enter multiple hashes in a single tx\r\n */\r\ncontract RegistrationEvent {\r\n\t/**\r\n\t * Event to be emitted\r\n\t */\r\n    event Registration(bytes32 indexed hash, string description, address indexed authority);\r\n\r\n    /**\r\n     * @param _hashList Array of hashes (sha256 hash prefixed with 0x)\r\n     * @param _descList Array of strings\r\n     * @notice Will check if both arrays have the same length and emit\r\n     * a `Registration` event\r\n     */\r\n    function register(bytes32[] memory _hashList, string[] memory _descList) public {\r\n        require(_hashList.length == _descList.length, \"Hash list and description list must have equal length\");\r\n        for(uint i = 0; i < _hashList.length; i++) {\r\n            emit Registration(_hashList[i], _descList[i], msg.sender);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_hashList\",\"type\":\"bytes32[]\"},{\"name\":\"_descList\",\"type\":\"string[]\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"Registration\",\"type\":\"event\"}]","ContractName":"RegistrationEvent","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://e8c43fb540a41d534c793a325c6bbf981a7d9388eaaa1674a7870254b133db33"}]}