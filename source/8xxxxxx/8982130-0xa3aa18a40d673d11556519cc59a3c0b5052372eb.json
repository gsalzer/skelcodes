{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.2;\r\n\r\n// LEE is a digital escrow program in beta. Use at your own risk. || lexDAO ||\r\n\r\ncontract lexDAOetherEscrow {\r\n    \r\n    address payable public buyer;\r\n    address payable public seller;\r\n    address payable public arbitrator;\r\n    uint256 public price;\r\n    string public details;\r\n    string public complaint;\r\n    bool public disputed;\r\n    bool public closed;\r\n    \r\n    event Released(uint256 indexed price);\r\n    event Disputed(address indexed complainant);\r\n    event Resolved(uint256 indexed buyerAward, uint256 indexed sellerAward);\r\n    \r\n    constructor(\r\n        address payable _buyer,\r\n        address payable _seller,\r\n        address payable _arbitrator,\r\n        string memory _details) payable public {\r\n        buyer = _buyer;\r\n        seller = _seller;\r\n        arbitrator = _arbitrator;\r\n        price = msg.value;\r\n        details = _details;\r\n    }\r\n    \r\n    function release() public {\r\n        require(msg.sender == buyer);\r\n        require(disputed == false);\r\n        address(seller).transfer(price);\r\n        closed = true;\r\n        emit Released(price);\r\n    }\r\n    \r\n    function dispute(string memory _complaint) public {\r\n        require(msg.sender == buyer || msg.sender == seller);\r\n        require(closed == false);\r\n        disputed = true;\r\n        complaint = _complaint;\r\n        emit Disputed(msg.sender);\r\n    }\r\n    \r\n    function resolve(uint256 buyerAward, uint256 sellerAward) public {\r\n        require(msg.sender == arbitrator);\r\n        require(disputed == true);\r\n        uint256 arbFee = price / 20;\r\n        require(buyerAward + sellerAward + arbFee == price);\r\n        address(buyer).transfer(buyerAward);\r\n        address(seller).transfer(sellerAward);\r\n        address(arbitrator).transfer(arbFee);\r\n        closed = true;\r\n        emit Resolved(buyerAward, sellerAward);\r\n    }\r\n    \r\n    function getBalance() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"disputed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"complaint\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_complaint\",\"type\":\"string\"}],\"name\":\"dispute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"details\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"arbitrator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"buyerAward\",\"type\":\"uint256\"},{\"name\":\"sellerAward\",\"type\":\"uint256\"}],\"name\":\"resolve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_buyer\",\"type\":\"address\"},{\"name\":\"_seller\",\"type\":\"address\"},{\"name\":\"_arbitrator\",\"type\":\"address\"},{\"name\":\"_details\",\"type\":\"string\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"complainant\",\"type\":\"address\"}],\"name\":\"Disputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyerAward\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"sellerAward\",\"type\":\"uint256\"}],\"name\":\"Resolved\",\"type\":\"event\"}]","ContractName":"lexDAOetherEscrow","CompilerVersion":"v0.5.9+commit.e560f70d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000001c0aa8ccd568d90d61659f060d1bfb1e6f855a20000000000000000000000000179abb9ecae3352fc83678511da5810902e338e500000000000000000000000097103fda00a2b47eac669568063c00e65866a6330000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000d4c4545544820436f6e73756c7400000000000000000000000000000000000000","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://08f988d62a5ec59f0505e8cabad8fde93e7de6e93511734da20e385107d3959b"}]}