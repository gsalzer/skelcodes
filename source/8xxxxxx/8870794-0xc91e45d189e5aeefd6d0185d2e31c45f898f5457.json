{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.7;\r\n\r\ninterface IERC20Token {\r\n  function decimals() external pure returns (uint8);\r\n}\r\n\r\ninterface KyberProxy {\r\n  function getExpectedRate(IERC20Token _from, IERC20Token _to, uint256 _amount) external view returns(uint256, uint256);\r\n}\r\n\r\ncontract KyberPriceFetch {\r\n  KyberProxy private proxy = KyberProxy(0x818E6FECD516Ecc3849DAf6845e3EC868087B755);\r\n  IERC20Token private etherToken = IERC20Token(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\r\n\r\n  function getPrices(IERC20Token[] memory _tokens)\r\n      public\r\n      view\r\n      returns (uint256[] memory, uint256[] memory, uint256[] memory, IERC20Token[] memory) {\r\n    uint256[] memory rates1 = new uint256[](_tokens.length);\r\n    uint256[] memory rates2 = new uint256[](_tokens.length);\r\n    uint256[] memory rates3 = new uint256[](_tokens.length);\r\n\r\n    for (uint i = 0; i < _tokens.length; i++) {\r\n      uint256 ether0_01 = 10000000000000000;\r\n      uint256 ether1 = 1000000000000000000;\r\n      uint256 ether100 = 100000000000000000000;\r\n\r\n      uint256 expectedRate;\r\n\r\n      (expectedRate, ) = proxy.getExpectedRate(etherToken, _tokens[i], ether0_01);\r\n      rates1[i] = (expectedRate);\r\n\r\n      (expectedRate, ) = proxy.getExpectedRate(etherToken, _tokens[i], ether1);\r\n      rates2[i] = (expectedRate);\r\n\r\n      (expectedRate, ) = proxy.getExpectedRate(etherToken, _tokens[i], ether100);\r\n      rates3[i] = (expectedRate);\r\n    }\r\n    return (rates1, rates2, rates3, _tokens);\r\n  }\r\n\r\n  function getMultiplier(IERC20Token _token) private view returns(uint256) {\r\n    return 10 ** getDecimals(_token);\r\n  }\r\n\r\n  function getDecimals(IERC20Token _token) private view returns(uint256) {\r\n    if (_token == etherToken) {\r\n      return 18;\r\n    }\r\n    return _token.decimals();\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"internalType\":\"contract IERC20Token[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"getPrices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"contract IERC20Token[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"KyberPriceFetch","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://13f903de31ce72551aa4d49703c8e14cfc5e81aae8f89274392eaa1481577359"}]}