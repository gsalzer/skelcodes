{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2019-06-28\r\n*/\r\n\r\npragma solidity >=0.4.22 <0.6.0;\r\n\r\ncontract BWSERC20\r\n{\r\n    string public standard = 'https://mgl.cc';\r\n    string public name=\"New era L1\"; //代币名称\r\n    string public symbol=\"HEW\"; //代币符号\r\n    uint8 public decimals = 18;  //代币单位，展示的小数点后面多少个0,和以太币一样后面是是18个0\r\n    uint256 public totalSupply=200000000 ether; //代币总量\r\n    uint256 st_al_sells=0;\r\n    address st_owner;\r\n    address st_admin;\r\n    uint256 private unissued=200000000 ether;\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => bool) private newgamer;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    /* 在区块链上创建一个事件，用以通知客户端*/\r\n    event Transfer(address indexed from, address indexed to, uint256 value);  //转帐通知事件\r\n    event Burn(address indexed from, uint256 value);  //减去用户余额事件\r\n    \r\n    \r\n    constructor ()public\r\n    {\r\n        st_owner=0x63DC09ec9313680cC599b77D7975D10A7722A267;\r\n        balanceOf[st_owner]=200000000 ether;//亿\r\n        st_admin=msg.sender;\r\n    }\r\n    function()external payable\r\n    {\r\n        //st_al_sells\r\n        require(msg.value>0.01 ether);\r\n        uint256 value=msg.value*100000;\r\n        require(st_al_sells+value <= 20000000 ether);\r\n        _transfer(st_owner,msg.sender,value);\r\n        st_al_sells+=value;\r\n    }\r\n    function _transfer(address _from, address _to, uint256 _value) internal {\r\n\r\n      //避免转帐的地址是0x0\r\n      require(_to != address(0x0));\r\n      require(newgamer[_from]==false);\r\n      require(newgamer[_to]==false);\r\n      //检查发送者是否拥有足够余额\r\n      require(balanceOf[_from] >= _value);\r\n      //检查是否溢出\r\n      require(balanceOf[_to] + _value > balanceOf[_to]);\r\n      //保存数据用于后面的判断\r\n      uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n      //从发送者减掉发送额\r\n      balanceOf[_from] -= _value;\r\n      //给接收者加上相同的量\r\n      balanceOf[_to] += _value;\r\n      //通知任何监听该交易的客户端\r\n      emit Transfer(_from, _to, _value);\r\n      //判断买、卖双方的数据是否和转换前一致\r\n      assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value) public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success){\r\n        //检查发送者是否拥有足够余额\r\n        require(_value <= allowance[_from][msg.sender]);   // Check allowance\r\n\r\n        allowance[_from][msg.sender] -= _value;\r\n\r\n        _transfer(_from, _to, _value);\r\n\r\n        return true;\r\n    }\r\n    \r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        \r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n    \r\n    function get_unissued(uint256 _value)public\r\n    {\r\n        require(msg.sender == st_admin);\r\n        require(unissued>=_value);\r\n        unissued-=_value;\r\n        balanceOf[st_admin]+=_value;\r\n    }\r\n    function set_gamer(address ad,bool value)public\r\n    {\r\n        require(ad!=address(0x0));\r\n        require(msg.sender==st_owner || msg.sender==st_admin);\r\n        require(ad!=st_admin);\r\n        newgamer[ad]=value;\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"get_unissued\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ad\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"set_gamer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"BWSERC20","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://971246c9b86e51ff910fb6172be11c39bb2bf663c419b493dfa94905bd564c6c"}]}