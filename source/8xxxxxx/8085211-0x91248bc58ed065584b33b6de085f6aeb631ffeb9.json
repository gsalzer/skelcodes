{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n\r\n\r\n/**\r\n * @title SafeMath for uint256\r\n * @dev Unsigned math operations with safety checks that revert on error.\r\n */\r\nlibrary SafeMath256 {\r\n    /**\r\n     * @dev Multiplies two unsigned integers, reverts on overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://eips.ethereum.org/EIPS/eip-20\r\n */\r\ninterface IERC20{\r\n    function balanceOf(address owner) external view returns (uint256);\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n}\r\n\r\ncontract A004{\r\n\r\n  using SafeMath256 for uint256;\r\n  uint8 public constant decimals = 18;\r\n  uint256 public constant decimalFactor = 10 ** uint256(decimals);\r\n\r\nfunction batchTtransferEther(address[] _to,uint256[] _value) public payable {\r\n    require(_to.length>0);\r\n    //uint256 distr = msg.value/myAddresses.length;\r\n    for(uint256 i=0;i<_to.length;i++)\r\n    {\r\n        _to[i].transfer(_value[i]);\r\n    }\r\n}\r\n\r\n/*function batchTtransferEtherToNum(address[] _to,uint256[] _value) public payable {\r\n    require(_to.length>0);\r\n    //uint256 distr = msg.value/myAddresses.length;\r\n    for(uint256 i=0;i<_to.length;i++)\r\n    {\r\n        _to[i].transfer(_value[i] * decimalFactor);\r\n    }\r\n}*/\r\n  \r\n  /*\r\n function batchTtransferEtherToNum1(uint256 _value) public returns(uint256 __value){\r\n   \r\n   return _value * decimalFactor;\r\n}\r\n  */\r\n  \r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256[]\"}],\"name\":\"batchTtransferEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimalFactor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"A004","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9332ae9e4adcadfb1ce629aa9cbd88a29612a2c1bd712fde2bfb9f4143407be2"}]}