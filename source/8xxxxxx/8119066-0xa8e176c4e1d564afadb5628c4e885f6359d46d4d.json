{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\npragma solidity ^0.4.23;\r\n\r\ncontract Operators\r\n{\r\n    mapping (address=>bool) ownerAddress;\r\n    mapping (address=>bool) operatorAddress;\r\n\r\n    constructor() public\r\n    {\r\n        ownerAddress[msg.sender] = true;\r\n    }\r\n\r\n    modifier onlyOwner()\r\n    {\r\n        require(ownerAddress[msg.sender]);\r\n        _;\r\n    }\r\n\r\n    function isOwner(address _addr) public view returns (bool) {\r\n        return ownerAddress[_addr];\r\n    }\r\n\r\n    function addOwner(address _newOwner) external onlyOwner {\r\n        require(_newOwner != address(0));\r\n\r\n        ownerAddress[_newOwner] = true;\r\n    }\r\n\r\n    function removeOwner(address _oldOwner) external onlyOwner {\r\n        delete(ownerAddress[_oldOwner]);\r\n    }\r\n\r\n    modifier onlyOperator() {\r\n        require(isOperator(msg.sender));\r\n        _;\r\n    }\r\n\r\n    function isOperator(address _addr) public view returns (bool) {\r\n        return operatorAddress[_addr] || ownerAddress[_addr];\r\n    }\r\n\r\n    function addOperator(address _newOperator) external onlyOwner {\r\n        require(_newOperator != address(0));\r\n\r\n        operatorAddress[_newOperator] = true;\r\n    }\r\n\r\n    function removeOperator(address _oldOperator) external onlyOwner {\r\n        delete(operatorAddress[_oldOperator]);\r\n    }\r\n}\r\n\r\npragma solidity ^0.4.23;\r\n\r\n/// @author https://BlockChainArchitect.iocontract Bank is CutiePluginBase\r\ncontract PluginInterface\r\n{\r\n    /// @dev simply a boolean to indicate this is the contract we expect to be\r\n    function isPluginInterface() public pure returns (bool);\r\n\r\n    function onRemove() public;\r\n\r\n    /// @dev Begins new feature.\r\n    /// @param _cutieId - ID of token to auction, sender must be owner.\r\n    /// @param _parameter - arbitrary parameter\r\n    /// @param _seller - Old owner, if not the message sender\r\n    function run(\r\n        uint40 _cutieId,\r\n        uint256 _parameter,\r\n        address _seller\r\n    )\r\n    public\r\n    payable;\r\n\r\n    /// @dev Begins new feature, approved and signed by COO.\r\n    /// @param _cutieId - ID of token to auction, sender must be owner.\r\n    /// @param _parameter - arbitrary parameter\r\n    function runSigned(\r\n        uint40 _cutieId,\r\n        uint256 _parameter,\r\n        address _owner\r\n    ) external payable;\r\n\r\n    function withdraw() external;\r\n}\r\n\r\npragma solidity ^0.4.23;\r\n\r\ninterface PluginsInterface\r\n{\r\n    function isPlugin(address contractAddress) external view returns(bool);\r\n    function withdraw() external;\r\n    function setMinSign(uint40 _newMinSignId) external;\r\n\r\n    function runPluginOperator(\r\n        address _pluginAddress,\r\n        uint40 _signId,\r\n        uint40 _cutieId,\r\n        uint128 _value,\r\n        uint256 _parameter,\r\n        address _sender) external payable;\r\n}\r\n\r\npragma solidity ^0.4.23;\r\n\r\npragma solidity ^0.4.23;\r\n\r\n/// @title BlockchainCuties: Collectible and breedable cuties on the Ethereum blockchain.\r\n/// @author https://BlockChainArchitect.io\r\n/// @dev This is the BlockchainCuties configuration. It can be changed redeploying another version.\r\ninterface ConfigInterface\r\n{\r\n    function isConfig() external pure returns (bool);\r\n\r\n    function getCooldownIndexFromGeneration(uint16 _generation, uint40 _cutieId) external view returns (uint16);\r\n    function getCooldownEndTimeFromIndex(uint16 _cooldownIndex, uint40 _cutieId) external view returns (uint40);\r\n    function getCooldownIndexFromGeneration(uint16 _generation) external view returns (uint16);\r\n    function getCooldownEndTimeFromIndex(uint16 _cooldownIndex) external view returns (uint40);\r\n\r\n    function getCooldownIndexCount() external view returns (uint256);\r\n\r\n    function getBabyGenFromId(uint40 _momId, uint40 _dadId) external view returns (uint16);\r\n    function getBabyGen(uint16 _momGen, uint16 _dadGen) external pure returns (uint16);\r\n\r\n    function getTutorialBabyGen(uint16 _dadGen) external pure returns (uint16);\r\n\r\n    function getBreedingFee(uint40 _momId, uint40 _dadId) external view returns (uint256);\r\n}\r\n\r\n\r\ncontract CutieCoreInterface\r\n{\r\n    function isCutieCore() pure public returns (bool);\r\n\r\n    ConfigInterface public config;\r\n\r\n    function transferFrom(address _from, address _to, uint256 _cutieId) external;\r\n    function transfer(address _to, uint256 _cutieId) external;\r\n\r\n    function ownerOf(uint256 _cutieId)\r\n        external\r\n        view\r\n        returns (address owner);\r\n\r\n    function getCutie(uint40 _id)\r\n        external\r\n        view\r\n        returns (\r\n        uint256 genes,\r\n        uint40 birthTime,\r\n        uint40 cooldownEndTime,\r\n        uint40 momId,\r\n        uint40 dadId,\r\n        uint16 cooldownIndex,\r\n        uint16 generation\r\n    );\r\n\r\n    function getGenes(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint256 genes\r\n    );\r\n\r\n\r\n    function getCooldownEndTime(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint40 cooldownEndTime\r\n    );\r\n\r\n    function getCooldownIndex(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint16 cooldownIndex\r\n    );\r\n\r\n\r\n    function getGeneration(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint16 generation\r\n    );\r\n\r\n    function getOptional(uint40 _id)\r\n        public\r\n        view\r\n        returns (\r\n        uint64 optional\r\n    );\r\n\r\n\r\n    function changeGenes(\r\n        uint40 _cutieId,\r\n        uint256 _genes)\r\n        public;\r\n\r\n    function changeCooldownEndTime(\r\n        uint40 _cutieId,\r\n        uint40 _cooldownEndTime)\r\n        public;\r\n\r\n    function changeCooldownIndex(\r\n        uint40 _cutieId,\r\n        uint16 _cooldownIndex)\r\n        public;\r\n\r\n    function changeOptional(\r\n        uint40 _cutieId,\r\n        uint64 _optional)\r\n        public;\r\n\r\n    function changeGeneration(\r\n        uint40 _cutieId,\r\n        uint16 _generation)\r\n        public;\r\n\r\n    function createSaleAuction(\r\n        uint40 _cutieId,\r\n        uint128 _startPrice,\r\n        uint128 _endPrice,\r\n        uint40 _duration\r\n    )\r\n    public;\r\n\r\n    function getApproved(uint256 _tokenId) external returns (address);\r\n    function totalSupply() view external returns (uint256);\r\n    function createPromoCutie(uint256 _genes, address _owner) external;\r\n    function checkOwnerAndApprove(address _claimant, uint40 _cutieId, address _pluginsContract) external view;\r\n    function breedWith(uint40 _momId, uint40 _dadId) public payable returns (uint40);\r\n    function getBreedingFee(uint40 _momId, uint40 _dadId) public view returns (uint256);\r\n    function restoreCutieToAddress(uint40 _cutieId, address _recipient) external;\r\n    function createGen0Auction(uint256 _genes, uint128 startPrice, uint128 endPrice, uint40 duration) external;\r\n    function createGen0AuctionWithTokens(uint256 _genes, uint128 startPrice, uint128 endPrice, uint40 duration, address[] allowedTokens) external;\r\n    function createPromoCutieWithGeneration(uint256 _genes, address _owner, uint16 _generation) external;\r\n    function createPromoCutieBulk(uint256[] _genes, address _owner, uint16 _generation) external;\r\n}\r\n\r\n\r\ncontract Plugins is Operators, PluginsInterface\r\n{\r\n    event SignUsed(uint40 signId, address sender);\r\n    event MinSignSet(uint40 signId);\r\n\r\n    uint40 public minSignId;\r\n    mapping(uint40 => address) public usedSignes;\r\n    address public signerAddress;\r\n\r\n    mapping(address => PluginInterface) public plugins;\r\n    PluginInterface[] public pluginsArray;\r\n    CutieCoreInterface public coreContract;\r\n\r\n    function setSigner(address _newSigner) external onlyOwner {\r\n        signerAddress = _newSigner;\r\n    }\r\n\r\n    /// @dev Sets the reference to the plugin contract.\r\n    /// @param _address - Address of plugin contract.\r\n    function addPlugin(address _address) external onlyOwner\r\n    {\r\n        PluginInterface candidateContract = PluginInterface(_address);\r\n\r\n        // verify that a contract is what we expect\r\n        require(candidateContract.isPluginInterface());\r\n\r\n        // Set the new contract address\r\n        plugins[_address] = candidateContract;\r\n        pluginsArray.push(candidateContract);\r\n    }\r\n\r\n    /// @dev Remove plugin and calls onRemove to cleanup\r\n    function removePlugin(address _address) external onlyOwner\r\n    {\r\n        plugins[_address].onRemove();\r\n        delete plugins[_address];\r\n\r\n        uint256 kindex = 0;\r\n        while (kindex < pluginsArray.length)\r\n        {\r\n            if (address(pluginsArray[kindex]) == _address)\r\n            {\r\n                pluginsArray[kindex] = pluginsArray[pluginsArray.length-1];\r\n                pluginsArray.length--;\r\n            }\r\n            else\r\n            {\r\n                kindex++;\r\n            }\r\n        }\r\n    }\r\n\r\n    /// @dev Common function to be used also in backend\r\n    function hashArguments(\r\n        address _pluginAddress,\r\n        uint40 _signId,\r\n        uint40 _cutieId,\r\n        uint128 _value,\r\n        uint256 _parameter)\r\n    public pure returns (bytes32 msgHash)\r\n    {\r\n        msgHash = keccak256(abi.encode(_pluginAddress, _signId, _cutieId, _value, _parameter));\r\n    }\r\n\r\n    /// @dev Common function to be used also in backend\r\n    function getSigner(\r\n        address _pluginAddress,\r\n        uint40 _signId,\r\n        uint40 _cutieId,\r\n        uint128 _value,\r\n        uint256 _parameter,\r\n        uint8 _v,\r\n        bytes32 _r,\r\n        bytes32 _s\r\n    )\r\n    public pure returns (address)\r\n    {\r\n        bytes32 msgHash = hashArguments(_pluginAddress, _signId, _cutieId, _value, _parameter);\r\n        return ecrecover(msgHash, _v, _r, _s);\r\n    }\r\n\r\n    /// @dev Common function to be used also in backend\r\n    function isValidSignature(\r\n        address _pluginAddress,\r\n        uint40 _signId,\r\n        uint40 _cutieId,\r\n        uint128 _value,\r\n        uint256 _parameter,\r\n        uint8 _v,\r\n        bytes32 _r,\r\n        bytes32 _s\r\n    )\r\n    public\r\n    view\r\n    returns (bool)\r\n    {\r\n        return getSigner(_pluginAddress, _signId, _cutieId, _value, _parameter, _v, _r, _s) == signerAddress;\r\n    }\r\n\r\n    /// @dev Put a cutie up for plugin feature with signature.\r\n    ///  Can be used for items equip, item sales and other features.\r\n    ///  Signatures are generated by Operator role.\r\n    function runPluginSigned(\r\n        address _pluginAddress,\r\n        uint40 _signId,\r\n        uint40 _cutieId,\r\n        uint128 _value,\r\n        uint256 _parameter,\r\n        uint8 _v,\r\n        bytes32 _r,\r\n        bytes32 _s\r\n    )\r\n        external\r\n//        whenNotPaused\r\n        payable\r\n    {\r\n        require (isValidSignature(_pluginAddress, _signId, _cutieId, _value, _parameter, _v, _r, _s));\r\n\r\n        require(address(plugins[_pluginAddress]) != address(0));\r\n\r\n        require (usedSignes[_signId] == address(0));\r\n\r\n        require (_signId >= minSignId);\r\n        // value can also be zero for free calls\r\n\r\n        require (_value <= msg.value);\r\n\r\n        usedSignes[_signId] = msg.sender;\r\n\r\n        if (_cutieId > 0)\r\n        {\r\n            // If cutie is already on any auction or in adventure, this will throw\r\n            // as it will be owned by the other contract.\r\n            // If _cutieId is 0, then cutie is not used on this feature.\r\n\r\n            coreContract.checkOwnerAndApprove(msg.sender, _cutieId, _pluginAddress);\r\n        }\r\n\r\n        emit SignUsed(_signId, msg.sender);\r\n\r\n        // Plugin contract throws if inputs are invalid and clears\r\n        // transfer after escrowing the cutie.\r\n        plugins[_pluginAddress].runSigned.value(_value)(\r\n            _cutieId,\r\n            _parameter,\r\n            msg.sender\r\n        );\r\n    }\r\n\r\n    /// @dev Put a cutie up for plugin feature as Operator.\r\n    ///  Can be used for items equip, item sales and other features.\r\n    ///  Signatures are generated by Operator role.\r\n    function runPluginOperator(\r\n        address _pluginAddress,\r\n        uint40 _signId,\r\n        uint40 _cutieId,\r\n        uint128 _value,\r\n        uint256 _parameter,\r\n        address _sender)\r\n        external payable onlyOperator\r\n    {\r\n        require(address(plugins[_pluginAddress]) != address(0));\r\n\r\n        require (usedSignes[_signId] == address(0));\r\n\r\n        require (_signId >= minSignId);\r\n        // value can also be zero for free calls\r\n\r\n\r\n        require (_value <= msg.value);\r\n\r\n        usedSignes[_signId] = _sender;\r\n\r\n        emit SignUsed(_signId, _sender);\r\n\r\n\r\n        // Plugin contract throws if inputs are invalid and clears\r\n        // transfer after escrowing the cutie.\r\n        plugins[_pluginAddress].runSigned.value(_value)(\r\n            _cutieId,\r\n            _parameter,\r\n            _sender\r\n        );\r\n    }\r\n\r\n    function setSignAsUsed(uint40 _signId, address _sender) external onlyOperator\r\n    {\r\n        usedSignes[_signId] = _sender;\r\n        emit SignUsed(_signId, _sender);\r\n    }\r\n\r\n    /// @dev Sets minimal signId, than can be used.\r\n    ///       All unused signatures less than signId will be cancelled on off-chain server\r\n    ///       and unused items will be transfered back to owner.\r\n    function setMinSign(uint40 _newMinSignId) external onlyOperator\r\n    {\r\n        require (_newMinSignId > minSignId);\r\n        minSignId = _newMinSignId;\r\n        emit MinSignSet(minSignId);\r\n    }\r\n\r\n    /// @dev Put a cutie up for plugin feature.\r\n    function runPlugin(\r\n        address _pluginAddress,\r\n        uint40 _cutieId,\r\n        uint256 _parameter\r\n    ) external payable\r\n    {\r\n        // If cutie is already on any auction or in adventure, this will throw\r\n        // because it will be owned by the other contract.\r\n        // If _cutieId is 0, then cutie is not used on this feature.\r\n        require(address(plugins[_pluginAddress]) != address(0));\r\n        if (_cutieId > 0)\r\n        {\r\n            coreContract.checkOwnerAndApprove(msg.sender, _cutieId, _pluginAddress);\r\n        }\r\n\r\n        // Plugin contract throws if inputs are invalid and clears\r\n        // transfer after escrowing the cutie.\r\n        plugins[_pluginAddress].run.value(msg.value)(\r\n            _cutieId,\r\n            _parameter,\r\n            msg.sender\r\n        );\r\n    }\r\n\r\n    function isPlugin(address contractAddress) external view returns(bool)\r\n    {\r\n        return address(plugins[contractAddress]) != address(0);\r\n    }\r\n\r\n    function setup(address _address) external onlyOwner\r\n    {\r\n        coreContract = CutieCoreInterface(_address);\r\n    }\r\n\r\n    function withdraw() external\r\n    {\r\n        require(msg.sender == address(coreContract));\r\n        for (uint32 i = 0; i < pluginsArray.length; ++i)\r\n        {\r\n            pluginsArray[i].withdraw();\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_oldOwner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pluginAddress\",\"type\":\"address\"},{\"name\":\"_signId\",\"type\":\"uint40\"},{\"name\":\"_cutieId\",\"type\":\"uint40\"},{\"name\":\"_value\",\"type\":\"uint128\"},{\"name\":\"_parameter\",\"type\":\"uint256\"},{\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"runPluginOperator\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newMinSignId\",\"type\":\"uint40\"}],\"name\":\"setMinSign\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pluginAddress\",\"type\":\"address\"},{\"name\":\"_signId\",\"type\":\"uint40\"},{\"name\":\"_cutieId\",\"type\":\"uint40\"},{\"name\":\"_value\",\"type\":\"uint128\"},{\"name\":\"_parameter\",\"type\":\"uint256\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"plugins\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"signerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"isPlugin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSigner\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pluginAddress\",\"type\":\"address\"},{\"name\":\"_cutieId\",\"type\":\"uint40\"},{\"name\":\"_parameter\",\"type\":\"uint256\"}],\"name\":\"runPlugin\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minSignId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint40\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pluginAddress\",\"type\":\"address\"},{\"name\":\"_signId\",\"type\":\"uint40\"},{\"name\":\"_cutieId\",\"type\":\"uint40\"},{\"name\":\"_value\",\"type\":\"uint128\"},{\"name\":\"_parameter\",\"type\":\"uint256\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"getSigner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOperator\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pluginAddress\",\"type\":\"address\"},{\"name\":\"_signId\",\"type\":\"uint40\"},{\"name\":\"_cutieId\",\"type\":\"uint40\"},{\"name\":\"_value\",\"type\":\"uint128\"},{\"name\":\"_parameter\",\"type\":\"uint256\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"runPluginSigned\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removePlugin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oldOperator\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint40\"}],\"name\":\"usedSignes\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pluginAddress\",\"type\":\"address\"},{\"name\":\"_signId\",\"type\":\"uint40\"},{\"name\":\"_cutieId\",\"type\":\"uint40\"},{\"name\":\"_value\",\"type\":\"uint128\"},{\"name\":\"_parameter\",\"type\":\"uint256\"}],\"name\":\"hashArguments\",\"outputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addPlugin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_signId\",\"type\":\"uint40\"},{\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"setSignAsUsed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coreContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pluginsArray\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"signId\",\"type\":\"uint40\"},{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SignUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"signId\",\"type\":\"uint40\"}],\"name\":\"MinSignSet\",\"type\":\"event\"}]","ContractName":"Plugins","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9f6b46cd398c7410e7de6614b685499a15ab11432c58671a06fc1baca27fe76c"}]}