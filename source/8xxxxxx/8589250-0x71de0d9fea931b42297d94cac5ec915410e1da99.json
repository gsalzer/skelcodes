{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.11;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface EtherShare {\r\n    function count() external view returns (uint);\r\n    function allShare(uint ShareID, uint ReplyID) external view returns (address,string memory,uint,bool,string memory);\r\n}\r\n\r\ninterface EtherShareLike {\r\n    function allLike(uint ShareID, uint ReplyID) external view returns (uint);\r\n}\r\n\r\ninterface EtherShareReward {\r\n    function getSum(uint ShareID, uint ReplyID) external view returns (uint);\r\n}\r\n\r\n\r\n\r\ncontract EtherShareQuery {\r\n    EtherShare ES = EtherShare(0xc86bDf9661c62646194ef29b1b8f5Fe226E8C97E);\r\n    EtherShareLike ESL = EtherShareLike(0x43820f75F021C34Ce13DeD1595633ed39b79ab47);\r\n    EtherShareReward ESR = EtherShareReward(0x28daa51dC3D80A951af9C451D174F0c7156c6876);\r\n    \r\n    struct oneQuery {\r\n        address sender;\r\n        string nickname;\r\n        uint timestamp;\r\n        bool AllowUpdated;\r\n        string content;\r\n        uint like;\r\n        uint reward;\r\n    }\r\n    \r\n    function get(uint ShareID, uint ReplyID) view public returns (oneQuery memory) {\r\n        uint timestamp;\r\n        address sender; \r\n        string memory nickname;\r\n        string memory content;\r\n        bool AllowUpdated;\r\n        uint like;\r\n        uint reward;\r\n        \r\n        (sender, nickname, timestamp, AllowUpdated, content) = ES.allShare(ShareID, ReplyID);\r\n        like = ESL.allLike(ShareID, ReplyID);\r\n        reward = ESR.getSum(ShareID, ReplyID);\r\n        \r\n        oneQuery memory answer = oneQuery(sender, nickname, timestamp, AllowUpdated, content, like, reward);\r\n        \r\n        return answer;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ShareID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ReplyID\",\"type\":\"uint256\"}],\"name\":\"get\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"nickname\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"AllowUpdated\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"like\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"internalType\":\"struct EtherShareQuery.oneQuery\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"EtherShareQuery","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://52afa5051c083e6d516a2cedba0d0555167b88ba7b866eb622a1f2b7eb4cf0e7"}]}