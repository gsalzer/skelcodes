{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\ncontract FiatContract {\r\n  function USD(uint _id) public view returns (uint256);\r\n  function updatedAt(uint _id) public view returns (uint);\r\n}\r\n\r\ncontract MacQueen {\r\n\r\n    bool private initialized = false;\r\n    bool private manualPurchase = false;\r\n    FiatContract private price;\r\n\r\n    mapping(address => uint256) internal balances;\r\n    \r\n    uint256 internal totalSupply_;\r\n    string public constant name = \"MacQueen Token O\"; \r\n    string public constant symbol = \"MQSO\"; \r\n    uint8 public constant decimals = 18;\r\n    uint256 public TokenPrice = 9000000;\r\n    uint256 public tokenSold;\r\n\r\n    mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n    address public owner;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Purchase(address indexed user, uint256 value);\r\n\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    event OwnershipTransferred(\r\n        address indexed oldOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    event SupplyIncreased(address indexed to, uint256 value);\r\n    event SupplyDecreased(address indexed from, uint256 value);\r\n    \r\n    constructor () public {\r\n        require(!initialized, \"already initialized\");\r\n        owner = msg.sender;\r\n        totalSupply_ =  100000e18;\r\n        balances[owner] = totalSupply_;\r\n        initialized = true;\r\n        price = FiatContract(0x8055d0504666e2B6942BeB8D6014c964658Ca591);\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return totalSupply_;\r\n    }\r\n \r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0), \"cannot transfer to address zero\");\r\n        require(_value <= balances[msg.sender], \"insufficient funds\");\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _addr) public view returns (uint256) {\r\n        return balances[_addr];\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0), \"cannot transfer to address zero\");\r\n        require(_value <= balances[_from], \"insufficient funds\");\r\n        require(_value <= allowed[_from][msg.sender], \"insufficient allowance\");\r\n        balances[_from] -= _value;\r\n        balances[_to] += _value;\r\n        allowed[_from][msg.sender] -= _value;\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n\r\n    function allowance(address _owner, address _spender) public view returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"onlyOwner\");\r\n        _;\r\n    }\r\n    \r\n    \r\n    function setPrice(uint256 _price) onlyOwner public returns(bool success){\r\n        TokenPrice =  _price;\r\n        return true;\r\n    }\r\n    \r\n    function getEthPrice() public view returns(uint256){\r\n        uint256 USDcent = price.USD(0);\r\n        return USDcent * 100;\r\n    }\r\n\r\n    function purchase(address _to, uint256 _value, uint256 _ethValue) public payable returns (bool success) {\r\n        require(_ethValue == msg.value);\r\n        uint256 ethCent = price.USD(0);\r\n        uint256 priceInEth = (ethCent  * TokenPrice) / 1000000;\r\n        uint256 totalPayableAmt = priceInEth * (_value / 1e18);\r\n        require(totalPayableAmt <= msg.value);\r\n        _mint(_value);\r\n        require(balances[owner] >= _value);\r\n        balances[owner] -= _value;\r\n        balances[_to] += _value;\r\n        tokenSold += _value;\r\n        emit Purchase(_to, _value); \r\n        return true;\r\n    }\r\n\r\n    function purchaseToken(address _to, uint256 _value, uint256 _ethValue) public payable returns (bool success) {\r\n        require(manualPurchase == true);\r\n        require(_ethValue == msg.value);\r\n        _mint(_value);\r\n        require(balances[owner] >= _value);\r\n        balances[owner] -= _value;\r\n        balances[_to] += _value;\r\n        tokenSold += _value;\r\n        emit Purchase(_to, _value);  \r\n        return true;\r\n    }\r\n    \r\n\r\n    function transfertoAll(address [] memory recievers,uint256 [] memory values) public onlyOwner returns(uint256 ){\r\n        uint256 totalTransferAmmount=0;\r\n        for(uint256 iCount = 0; iCount <= values.length-1; iCount++){\r\n            totalTransferAmmount = totalTransferAmmount + values[iCount];\r\n        }\r\n        _mint(totalTransferAmmount);\r\n        require(balances[owner] >= totalTransferAmmount);\r\n        require(values.length == recievers.length,\r\n        \"please confirm addresses and values are equal\");\r\n        for(uint256 iCount1 = 0; iCount1 <= recievers.length-1; iCount1++){\r\n            balances[owner] -= values[iCount1];\r\n            balances[recievers[iCount1]] += values[iCount1];\r\n            tokenSold += values[iCount1];\r\n            emit Purchase(recievers[iCount1], values[iCount1]);\r\n        }\r\n        return totalTransferAmmount;\r\n    }\r\n    \r\n    function getBalance() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n\r\n    function withdraw(uint amount) public onlyOwner returns(bool) {\r\n        require(amount <= address(this).balance);\r\n        msg.sender.transfer(amount);\r\n        return true;\r\n    }\r\n    \r\n    function _mint(uint256 _value) internal returns(bool success){\r\n        totalSupply_ += _value;\r\n        balances[owner] += _value;\r\n        emit SupplyIncreased(owner, _value);\r\n        return true;\r\n    }\r\n\r\n    function increaseSupply(uint256 _value) public onlyOwner returns (bool success) {\r\n        totalSupply_ += _value;\r\n        balances[owner] += _value;\r\n        emit SupplyIncreased(owner, _value);\r\n        return true;\r\n    }\r\n\r\n\r\n    function decreaseSupply(uint256 _value) public onlyOwner returns (bool success) {\r\n        require(_value <= balances[owner], \"not enough supply\");\r\n        balances[owner] -= _value;\r\n        totalSupply_ -= _value;\r\n        emit SupplyDecreased(owner, _value);\r\n        return true;\r\n    }\r\n    \r\n    function transferOwnership(address _newOwner) public onlyOwner returns(bool success) {\r\n        require(_newOwner != address(0));\r\n        emit OwnershipTransferred(owner, _newOwner);\r\n        owner = _newOwner;\r\n        return true;\r\n    }\r\n    \r\n    function startManualPurchase() public onlyOwner returns(bool success){\r\n        manualPurchase = true;\r\n        return true;\r\n    }\r\n    \r\n    function setOracleContract(address _contract) public onlyOwner returns(bool success){\r\n        price = FiatContract(_contract);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_ethValue\",\"type\":\"uint256\"}],\"name\":\"purchaseToken\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"setOracleContract\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEthPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recievers\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"transfertoAll\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_ethValue\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"decreaseSupply\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increaseSupply\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startManualPurchase\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SupplyIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SupplyDecreased\",\"type\":\"event\"}]","ContractName":"MacQueen","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://f9e39c632f5f38c11734b5ce0eabf598dfbc361e1e7cc9fa1e5b73fe70768491"}]}