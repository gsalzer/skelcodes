{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts\\lib\\Ownable.sol\r\n\r\npragma solidity 0.5.9;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor () internal {\r\n        _owner = msg.sender;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    /**\r\n     * @return the address of the owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(isOwner(), \"Only owner is able call this function!\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @return true if `msg.sender` is the owner of the contract.\r\n     */\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to relinquish control of the contract.\r\n     * @notice Renouncing to ownership will leave the contract without an owner.\r\n     * It will not be possible to call the functions with the `onlyOwner`\r\n     * modifier anymore.\r\n     */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n// File: contracts\\StarEthRateInterface.sol\r\n\r\npragma solidity 0.5.9;\r\n\r\ninterface StarEthRateInterface {\r\n    function decimalCorrectionFactor() external returns (uint256);\r\n    function starEthRate() external returns (uint256);\r\n}\r\n\r\n// File: contracts\\StarEthRate.sol\r\n\r\npragma solidity 0.5.9;\r\n\r\n\r\n\r\n/**\r\n * @title StarEthRate - STAR/ETH rate contract\r\n * @author Markus Waas - <markus@starbase.co>\r\n */\r\ncontract StarEthRate is Ownable, StarEthRateInterface {\r\n    uint256 public decimalCorrectionFactor;\r\n    uint256 public starEthRate;\r\n\r\n    event decimalCorrectionFactorSet(uint256 decimalCorrectionFactor);\r\n    event StarEthRateSet(uint256 starEthRate);\r\n\r\n    constructor(\r\n        uint256 _decimalCorrectionFactor,\r\n        uint256 _initialStarEthRate\r\n    ) public {\r\n        require(\r\n            _decimalCorrectionFactor > 0,\r\n            'Please pass a decimalCorrectionFactor above 0!'\r\n        );\r\n        require(_initialStarEthRate > 0, 'Please pass a starEthRate above 0!');\r\n\r\n        decimalCorrectionFactor = _decimalCorrectionFactor;\r\n        starEthRate = _initialStarEthRate;\r\n    }\r\n\r\n    function setDecimalCorrectionFactor(\r\n        uint256 _newDecimalCorrectionFactor\r\n    ) public onlyOwner {\r\n        require(\r\n            _newDecimalCorrectionFactor > 0,\r\n            'Please pass a decimalCorrectionFactor above 0!'\r\n        );\r\n\r\n        decimalCorrectionFactor = _newDecimalCorrectionFactor;\r\n        emit decimalCorrectionFactorSet(_newDecimalCorrectionFactor);\r\n    }\r\n\r\n    function setStarEthRate(uint256 _newStarEthRate) public onlyOwner {\r\n        require(_newStarEthRate > 0, 'Please pass a starEthRate above 0!');\r\n\r\n        starEthRate = _newStarEthRate;\r\n        emit StarEthRateSet(_newStarEthRate);\r\n    }\r\n\r\n    function setStarEthRateAndDecimalCorrectionFactor(\r\n        uint256 _newDecimalCorrectionFactor,\r\n        uint256 _newStarEthRate\r\n    ) public onlyOwner {\r\n        setDecimalCorrectionFactor(_newDecimalCorrectionFactor);\r\n        setStarEthRate(_newStarEthRate);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_newDecimalCorrectionFactor\",\"type\":\"uint256\"},{\"name\":\"_newStarEthRate\",\"type\":\"uint256\"}],\"name\":\"setStarEthRateAndDecimalCorrectionFactor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimalCorrectionFactor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newStarEthRate\",\"type\":\"uint256\"}],\"name\":\"setStarEthRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newDecimalCorrectionFactor\",\"type\":\"uint256\"}],\"name\":\"setDecimalCorrectionFactor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"starEthRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_decimalCorrectionFactor\",\"type\":\"uint256\"},{\"name\":\"_initialStarEthRate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"decimalCorrectionFactor\",\"type\":\"uint256\"}],\"name\":\"decimalCorrectionFactorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"starEthRate\",\"type\":\"uint256\"}],\"name\":\"StarEthRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"StarEthRate","CompilerVersion":"v0.5.9+commit.e560f70d","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000002bc","Library":"","SwarmSource":"bzzr://6ed94cdeffa1a2599be6f00a4c63d41473a8e774a867de88c7d75f70a07e8431"}]}