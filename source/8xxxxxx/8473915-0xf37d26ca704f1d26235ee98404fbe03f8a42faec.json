{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.7;\r\n\r\ninterface ERC20Interface {\r\n    function deposit() external payable;\r\n    function withdraw(uint) external;\r\n    function transfer(address, uint) external returns (bool);\r\n    function approve(address, uint) external;\r\n    function balanceOf(address) external view returns (uint);\r\n}\r\n\r\ncontract swapWEth {\r\n    \r\n    function getAddressWETH() public pure returns (address eth) {\r\n        eth = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n    }\r\n    \r\n    function getAddressZRXExchange() public pure returns (address zrxExchange) {\r\n        zrxExchange = 0x080bf510FCbF18b91105470639e9561022937712;\r\n    }\r\n\r\n    function getAddressZRXERC20() public pure returns (address zrxerc20) {\r\n        zrxerc20 = 0x95E6F48254609A6ee006F7D493c8e5fB97094ceF;\r\n    }\r\n    \r\n    function getAddressUSDC() public pure returns (address usdc) {\r\n        usdc = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\r\n    }\r\n    \r\n    function swapEthToUsdc(bytes memory calldataHexString) public payable {\r\n        ERC20Interface wethContract = ERC20Interface(getAddressWETH());\r\n        wethContract.deposit.value(msg.value)();\r\n        wethContract.approve(getAddressZRXERC20(), msg.value);\r\n        (bool swapSuccess,) = getAddressZRXExchange().call(calldataHexString);\r\n        assert(swapSuccess);\r\n        ERC20Interface usdcContract = ERC20Interface(getAddressUSDC());\r\n        uint usdcBal = usdcContract.balanceOf(address(this));\r\n        assert(usdcBal > 0);\r\n        usdcContract.transfer(msg.sender, usdcBal);\r\n    }\r\n    \r\n    function trasferToken(address token) public {\r\n        ERC20Interface tknContract = ERC20Interface(token);\r\n        uint tknBal = tknContract.balanceOf(address(this));\r\n        tknContract.transfer(msg.sender, tknBal);\r\n    }\r\n    \r\n    function trasferEth() public {\r\n        address(msg.sender).transfer(address(this).balance);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getAddressWETH\",\"outputs\":[{\"name\":\"eth\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAddressUSDC\",\"outputs\":[{\"name\":\"usdc\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAddressZRXERC20\",\"outputs\":[{\"name\":\"zrxerc20\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAddressZRXExchange\",\"outputs\":[{\"name\":\"zrxExchange\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"trasferToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"calldataHexString\",\"type\":\"bytes\"}],\"name\":\"swapEthToUsdc\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"trasferEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"swapWEth","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://1bfba258ce9c175fa2648b99553e6cca224cfc5413317d67b420b50ecefb3d38"}]}