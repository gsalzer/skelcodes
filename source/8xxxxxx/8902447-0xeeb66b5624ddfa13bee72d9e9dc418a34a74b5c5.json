{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract Incrementer {\r\n\tuint256 private counter;\r\n\r\n\tevent Incremented(uint256 newCounter);\r\n\r\n\tconstructor() public {\r\n\t\tcounter = 0;\r\n\t}\r\n\r\n\tfunction increment() public {\r\n\t\tcounter = counter + 1;\r\n\t\temit Incremented(counter);\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newCounter\",\"type\":\"uint256\"}],\"name\":\"Incremented\",\"type\":\"event\"}]","ContractName":"Incrementer","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://5bdf0396bc27b495a42229df6d2aa3cee4d30ed2a3c44a2bdec7fa7895479db2"}]}