{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4.21;\r\n/**\r\n * @dev ERC20 Token abstract constract.\r\n */\r\ncontract ERC20Token {\r\n    function transferFrom(address, address, uint256) public returns (bool);\r\n}\r\n\r\n\r\ncontract batch {\r\n/**\r\n    * @dev calls the ERC20 token's transferFrom function\r\n    * @param _token address The address of ERC20 token.\r\n    * @param _dsts address The addresses which be air dropped.\r\n    * @param _values uint256 The token values that each address will receive.\r\n    */\r\nfunction transfer(address _token, address[] _dsts, uint256[] _values) \r\n    public\r\n    payable\r\n    {\r\n        ERC20Token token = ERC20Token(_token);\r\n        for (uint256 i = 0; i < _dsts.length; i++) {\r\n            token.transferFrom(msg.sender, _dsts[i], _values[i]);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_dsts\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"batch","CompilerVersion":"v0.4.21+commit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://9e172e81d76c9ab562d48a71d12b2fba823caa9d811b7d286b49117ec9019de8"}]}