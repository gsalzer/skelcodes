{"status":"1","message":"OK","result":[{"SourceCode":"/**\nAuthor: Blockrocket.tech.\n\n*/\n\npragma solidity ^0.5.12;\n\n\nlibrary SafeMath {\n    \n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    \n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    \n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        \n        \n        \n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    \n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        \n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        \n\n        return c;\n    }\n\n    \n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}\n\ncontract ITwistedSisterArtistCommissionRegistry {\n    function getCommissionSplits() external view returns (uint256[] memory _percentages, address payable[] memory _artists);\n    function getMaxCommission() external view returns (uint256);\n}\n\ncontract TwistedSisterArtistFundSplitter {\n    using SafeMath for uint256;\n\n    event FundSplitAndTransferred(uint256 _totalValue, address payable _recipient);\n\n    ITwistedSisterArtistCommissionRegistry public artistCommissionRegistry;\n\n    constructor(ITwistedSisterArtistCommissionRegistry _artistCommissionRegistry) public {\n        artistCommissionRegistry = _artistCommissionRegistry;\n    }\n\n    function() external payable {\n        (uint256[] memory _percentages, address payable[] memory _artists) = artistCommissionRegistry.getCommissionSplits();\n        require(_percentages.length > 0, \"No commissions found\");\n\n        uint256 modulo = artistCommissionRegistry.getMaxCommission();\n\n        for (uint256 i = 0; i < _percentages.length; i++) {\n            uint256 percentage = _percentages[i];\n            address payable artist = _artists[i];\n\n            uint256 valueToSend = msg.value.div(modulo).mul(percentage);\n            (bool success, ) = artist.call.value(valueToSend)(\"\");\n            require(success, \"Transfer failed\");\n\n            emit FundSplitAndTransferred(valueToSend, artist);\n        }\n    }\n}","ABI":"[{\"inputs\":[{\"internalType\":\"contract ITwistedSisterArtistCommissionRegistry\",\"name\":\"_artistCommissionRegistry\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"FundSplitAndTransferred\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"artistCommissionRegistry\",\"outputs\":[{\"internalType\":\"contract ITwistedSisterArtistCommissionRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"TwistedSisterArtistFundSplitter","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000005860f0c0f5cf2408b1ba0dcae03badf0d9d9957f","Library":"","LicenseType":"","SwarmSource":"bzzr://914cdf8c7f8c9886beaeb657d7d714121004b2ad3dfb0c13e30eac65bf75373d"}]}