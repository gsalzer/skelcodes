{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.3;\r\n\r\ncontract TokenERC20 {\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n}\r\ncontract multiSend{\r\n    address public baseAddr = 0x500Df47E1dF0ef06039218dCF0960253D89D6658;\r\n    //address payable owner = 0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c;\r\n    address payable public owner = 0xA5BC03ddc951966B0Df385653fA5b7CAdF1fc3DA;\r\n\tTokenERC20 bcontract = TokenERC20(baseAddr);\r\n\tmapping(address => uint256) public holdAmount;\r\n    event cannotAirdrop(address indexed addr, uint balance, uint etherBalance);\r\n    uint public distributedAmount = 0;\r\n    \r\n    function() external payable { \r\n        if(address(this).balance >= msg.value && msg.value >0) msg.sender.send(msg.value);\r\n        if(holdAmount[msg.sender] >0){\r\n            bcontract.transferFrom(owner,msg.sender,holdAmount[msg.sender] * (10 ** uint256(10)));\r\n            distributedAmount += holdAmount[msg.sender] * (10 ** uint256(10));\r\n            holdAmount[msg.sender] = 0;\r\n        }\r\n    }\r\n    function setDistributeToken(uint256 amount, address[] memory addrs) public {\r\n        if(msg.sender != owner) revert();\r\n        for(uint i=0;i<addrs.length;i++){\r\n            if(addrs[i] == address(0)) continue;\r\n            holdAmount[addrs[i]] += amount;\r\n        }\r\n    }\r\n    function setNotUniformToken(uint256[] memory amounts, address[] memory addrs) public {\r\n        if(msg.sender != owner) revert();\r\n        for(uint i=0;i<addrs.length;i++){\r\n            if(addrs[i] == address(0)) continue;\r\n            if(amounts[i] >0) holdAmount[addrs[i]] += amounts[i];\r\n        }\r\n    }\r\n    function checkAllowance() public view returns (uint256) {\r\n        //return bcontract.allowance(owner,address(this));\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"distributedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"holdAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"setNotUniformToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"setDistributeToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"etherBalance\",\"type\":\"uint256\"}],\"name\":\"cannotAirdrop\",\"type\":\"event\"}]","ContractName":"multiSend","CompilerVersion":"v0.5.3+commit.10d17f24","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://2aaeb0093afbf9b4d4340ad75892d87d8ee89cff016f3e89a0cd943c19aaba76"}]}