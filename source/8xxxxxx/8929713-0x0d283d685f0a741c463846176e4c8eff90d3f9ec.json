{"status":"1","message":"OK","result":[{"SourceCode":"\n// File: contracts/gluon/GluonView.sol\n\npragma solidity 0.5.12;\n\n\ninterface GluonView {\n  function app(uint32 id) external view returns (address current, address proposal, uint activationBlock);\n  function current(uint32 id) external view returns (address);\n  function history(uint32 id) external view returns (address[] memory);\n  function getBalance(uint32 id, address asset) external view returns (uint);\n  function isAnyLogic(uint32 id, address logic) external view returns (bool);\n  function isAppOwner(uint32 id, address appOwner) external view returns (bool);\n  function proposals(address logic) external view returns (bool);\n  function totalAppsCount() external view returns(uint32);\n}\n\n// File: contracts/gluon/GluonCentric.sol\n\npragma solidity 0.5.12;\n\n\n\ncontract GluonCentric {\n  uint32 internal constant REGISTRY_INDEX = 0;\n  uint32 internal constant STAKE_INDEX = 1;\n\n  uint32 public id;\n  address public gluon;\n\n  constructor(uint32 id_, address gluon_) public {\n    id = id_;\n    gluon = gluon_;\n  }\n\n  modifier onlyCurrentLogic { require(currentLogic() == msg.sender, \"invalid sender; must be current logic contract\"); _; }\n  modifier onlyGluon { require(gluon == msg.sender, \"invalid sender; must be gluon contract\"); _; }\n  modifier onlyOwner { require(GluonView(gluon).isAppOwner(id, msg.sender), \"invalid sender; must be app owner\"); _; }\n\n  function currentLogic() public view returns (address) { return GluonView(gluon).current(id); }\n}\n\n// File: contracts/apps/spot/SpotData.sol\n\npragma solidity 0.5.12;\n\n\n\ncontract SpotData is GluonCentric {\n\n  struct Gblock {\n    bytes32 withdrawalsRoot;\n    bytes32 depositsRoot;\n    bytes32 balancesRoot;\n  }\n\n  uint32 public nonce = 0;\n  uint32 public currentGblockNumber;\n  uint public submissionBlock = block.number;\n  mapping(uint32 => Gblock) public gblocksByNumber;\n  mapping(bytes32 => bool) public deposits;\n  mapping(bytes32 => bool) public withdrawn;\n  mapping(bytes32 => uint) public exitClaims; // exit entry hash => confirmationThreshold\n  mapping(address => mapping(address => bool)) public exited; // account => asset => has exited\n\n  constructor(uint32 id, address gluon) GluonCentric(id, gluon) public { }\n\n  function deposit(bytes32 hash) external onlyCurrentLogic { deposits[hash] = true; }\n\n  function deleteDeposit(bytes32 hash) external onlyCurrentLogic {\n    require(deposits[hash], \"unknown deposit\");\n    delete deposits[hash];\n  }\n\n  function nextNonce() external onlyCurrentLogic returns (uint32) { return ++nonce; }\n\n  function markExited(address account, address asset) external onlyCurrentLogic { exited[account][asset] = true; }\n\n  function markWithdrawn(bytes32 hash) external onlyCurrentLogic {withdrawn[hash] = true;}\n\n  function hasExited(address account, address asset) external view returns (bool) { return exited[account][asset]; }\n\n  function hasWithdrawn(bytes32 hash) external view returns (bool) { return withdrawn[hash]; }\n\n  function markExitClaim(bytes32 hash, uint confirmationThreshold) external onlyCurrentLogic { exitClaims[hash] = confirmationThreshold; }\n\n  function deleteExitClaim(bytes32 hash) external onlyCurrentLogic { delete exitClaims[hash]; }\n\n  function submit(uint32 gblockNumber, bytes32 withdrawalsRoot, bytes32 depositsRoot, bytes32 balancesRoot, uint submissionInterval) external onlyCurrentLogic {\n    Gblock memory gblock = Gblock(withdrawalsRoot, depositsRoot, balancesRoot);\n    gblocksByNumber[gblockNumber] = gblock;\n    currentGblockNumber = gblockNumber;\n    submissionBlock = block.number + submissionInterval;\n  }\n\n  function updateSubmissionBlock(uint submissionBlock_) external onlyCurrentLogic { submissionBlock = submissionBlock_; }\n\n  function depositsRoot(uint32 gblockNumber) external view returns (bytes32) { return gblocksByNumber[gblockNumber].depositsRoot; }\n\n  function withdrawalsRoot(uint32 gblockNumber) external view returns (bytes32) { return gblocksByNumber[gblockNumber].withdrawalsRoot; }\n\n  function balancesRoot(uint32 gblockNumber) external view returns (bytes32) { return gblocksByNumber[gblockNumber].balancesRoot; }\n\n  function isConfirmedGblock(uint32 gblockNumber) external view returns (bool) { return gblockNumber > 0 && gblockNumber < currentGblockNumber; }\n\n}\n","ABI":"[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"gluon\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"gblockNumber\",\"type\":\"uint32\"}],\"name\":\"balancesRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentGblockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentLogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"deleteDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"deleteExitClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"gblockNumber\",\"type\":\"uint32\"}],\"name\":\"depositsRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"exitClaims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"exited\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"gblocksByNumber\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"withdrawalsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"depositsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"balancesRoot\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gluon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"hasExited\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"hasWithdrawn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"gblockNumber\",\"type\":\"uint32\"}],\"name\":\"isConfirmedGblock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"confirmationThreshold\",\"type\":\"uint256\"}],\"name\":\"markExitClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"markExited\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"markWithdrawn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"nextNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"submissionBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"gblockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"withdrawalsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"depositsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"balancesRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"submissionInterval\",\"type\":\"uint256\"}],\"name\":\"submit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"submissionBlock_\",\"type\":\"uint256\"}],\"name\":\"updateSubmissionBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"gblockNumber\",\"type\":\"uint32\"}],\"name\":\"withdrawalsRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"withdrawn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"SpotData","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000000200000000000000000000000075ace7a086ea0fb1a79e43cc6331ad053d8c67cb","Library":"","LicenseType":"","SwarmSource":"bzzr://e6405a6ca0e18242a97d48b16bc1066fc0b3c7eb10554a63570a91096dc67cee"}]}