{"status":"1","message":"OK","result":[{"SourceCode":"struct PriceInfo:\r\n    price: uint256\r\n    lastUpdate: uint256\r\n\r\ncontract ERC20():\r\n    def balanceOf(_owner: address) -> uint256: constant\r\n    def decimals() -> uint256: constant\r\n\r\ncontract DaiPriceOracle:\r\n    def g_priceInfo() -> PriceInfo: constant\r\n\r\nPRICE_MULTIPLIER: constant(uint256) = 100000000 # 10**8\r\n\r\n# DAI oracle returns DAI/USD price multiplied by 10**18\r\nMIN_DAI_PRICE: constant(uint256) = 950000000000000000 # 0.95*10**18\r\nMAX_DAI_PRICE: constant(uint256) = 1050000000000000000 # 1.05*10**18\r\n# DAI_ORACLE_DIVIDER = 10**18 / PRICE_MULTIPLIER\r\nDAI_ORACLE_DIVIDER: constant(uint256) = 10000000000 # 10**10\r\n\r\nTokenAddressUpdated: event({token_address: indexed(address), token_index: indexed(int128)})\r\n\r\nname: public(string[16])\r\nowner: public(address)\r\nsupportedTokens: public(address[5])\r\ndaiAddress: public(address)\r\ndaiOracleAddress: public(address)\r\n\r\n@public\r\ndef __init__(dai_address: address, dai_oracle_address: address):\r\n    assert dai_address != ZERO_ADDRESS\r\n    assert dai_oracle_address != ZERO_ADDRESS\r\n\r\n    self.daiAddress = dai_address\r\n    self.daiOracleAddress = dai_oracle_address\r\n    self.supportedTokens[0] = dai_address\r\n    self.owner = msg.sender\r\n    self.name = 'PriceOracle'\r\n    \r\n@public\r\n@constant\r\ndef normalized_token_prices(token_address: address) -> uint256:\r\n    token_price: uint256\r\n    token_decimals: uint256 = ERC20(token_address).decimals()\r\n    \r\n    if token_address != self.daiAddress:\r\n        token_price = PRICE_MULTIPLIER\r\n    else:\r\n        price_info: PriceInfo = DaiPriceOracle(self.daiOracleAddress).g_priceInfo()\r\n        token_price = price_info.price\r\n        assert token_price >= MIN_DAI_PRICE\r\n        assert token_price <= MAX_DAI_PRICE\r\n        token_price = token_price / DAI_ORACLE_DIVIDER    \r\n\r\n    normalized_price: uint256 = token_price * 10**(18 - token_decimals)\r\n    return normalized_price\r\n\r\n@public\r\n@constant\r\ndef poolSize(contract_address: address) -> uint256:\r\n    token_address: address\r\n    normalized_price: uint256\r\n    total: uint256 = 0\r\n\r\n    for ind in range(5):\r\n        token_address = self.supportedTokens[ind]\r\n        if token_address != ZERO_ADDRESS:\r\n            contract_balance: uint256 = ERC20(token_address).balanceOf(contract_address)\r\n            normalized_price = self.normalized_token_prices(token_address)\r\n            total += contract_balance * normalized_price / PRICE_MULTIPLIER\r\n\r\n    return total\r\n\r\n@public\r\ndef updateTokenAddress(token_address: address, ind: int128) -> bool:\r\n    assert msg.sender == self.owner\r\n\r\n    self.supportedTokens[ind] = token_address\r\n    log.TokenAddressUpdated(token_address, ind)\r\n\r\n    return True","ABI":"[{\"name\":\"TokenAddressUpdated\",\"inputs\":[{\"type\":\"address\",\"name\":\"token_address\",\"indexed\":true},{\"type\":\"int128\",\"name\":\"token_index\",\"indexed\":true}],\"anonymous\":false,\"type\":\"event\"},{\"outputs\":[],\"inputs\":[{\"type\":\"address\",\"name\":\"dai_address\"},{\"type\":\"address\",\"name\":\"dai_oracle_address\"}],\"constant\":false,\"payable\":false,\"type\":\"constructor\"},{\"name\":\"normalized_token_prices\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"out\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"token_address\"}],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":6353},{\"name\":\"poolSize\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"out\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"contract_address\"}],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":51785},{\"name\":\"updateTokenAddress\",\"outputs\":[{\"type\":\"bool\",\"name\":\"out\"}],\"inputs\":[{\"type\":\"address\",\"name\":\"token_address\"},{\"type\":\"int128\",\"name\":\"ind\"}],\"constant\":false,\"payable\":false,\"type\":\"function\",\"gas\":37434},{\"name\":\"name\",\"outputs\":[{\"type\":\"string\",\"name\":\"out\"}],\"inputs\":[],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":4018},{\"name\":\"owner\",\"outputs\":[{\"type\":\"address\",\"name\":\"out\"}],\"inputs\":[],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":633},{\"name\":\"supportedTokens\",\"outputs\":[{\"type\":\"address\",\"name\":\"out\"}],\"inputs\":[{\"type\":\"int128\",\"name\":\"arg0\"}],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":862},{\"name\":\"daiAddress\",\"outputs\":[{\"type\":\"address\",\"name\":\"out\"}],\"inputs\":[],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":693},{\"name\":\"daiOracleAddress\",\"outputs\":[{\"type\":\"address\",\"name\":\"out\"}],\"inputs\":[],\"constant\":true,\"payable\":false,\"type\":\"function\",\"gas\":723}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.1.0b11","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"00000000000000000000000089d24a6b4ccb1b6faa2625fe562bdd9a23260359000000000000000000000000787f552bdc17332c98aa360748884513e3cb401a","Library":"","LicenseType":"None","SwarmSource":""}]}