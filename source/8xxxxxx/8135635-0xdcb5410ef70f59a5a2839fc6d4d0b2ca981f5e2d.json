{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract CoinMmc // @eachvar\r\n{\r\n    // ======== 初始化代币相关逻辑 ==============\r\n    // 地址信息\r\n    address public admin_address = 0x64b33dB1Cc804e7CA51D9c21F132567923D7BA00; // @eachvar\r\n    address public account_address = 0x64b33dB1Cc804e7CA51D9c21F132567923D7BA00; // @eachvar 初始化后转入代币的地址\r\n    \r\n    // 定义账户余额\r\n    mapping(address => uint256) balances;\r\n    \r\n    // solidity 会自动为 public 变量添加方法，有了下边这些变量，就能获得代币的基本信息了\r\n    string public name = \"MaiMiChain\"; // @eachvar\r\n    string public symbol = \"MMC\"; // @eachvar\r\n    uint8 public decimals = 2; // @eachvar\r\n    uint256 initSupply = 1000000000000; // @eachvar\r\n    uint256 public totalSupply = 0; // @eachvar\r\n\r\n    // 生成代币，并转入到 account_address 地址\r\n    constructor() \r\n    payable \r\n    public\r\n    {\r\n        totalSupply = mul(initSupply, 10**uint256(decimals));\r\n        balances[account_address] = totalSupply;\r\n\r\n        // @lock\r\n        // 锁仓相关信息 \r\n        _add_lock_account(0x6efB62605A66E32582c37b835F81Bc91A6a8fb2e, mul(80000000000,10**uint256(decimals)), 1596815160);\r\n        _add_lock_account(0x0ba46c0fC6a5C206855cEf215222e347E1559eDf, mul(120000000000,10**uint256(decimals)), 1596815160);\r\n        _add_lock_account(0xE269695D497387DfEAFE12b0b3B54441683F63C8, mul(100000000000,10**uint256(decimals)), 1628351160);\r\n        \r\n        \r\n    }\r\n\r\n    function balanceOf( address _addr ) public view returns ( uint )\r\n    {\r\n        return balances[_addr];\r\n    }\r\n\r\n    // ========== 转账相关逻辑 ====================\r\n    event Transfer(\r\n        address indexed from, \r\n        address indexed to, \r\n        uint256 value\r\n    ); \r\n\r\n    function transfer(\r\n        address _to, \r\n        uint256 _value\r\n    ) \r\n    public \r\n    returns (bool) \r\n    {\r\n        require(_to != address(0));\r\n        require(_value <= balances[msg.sender]);\r\n\r\n        balances[msg.sender] = sub(balances[msg.sender],_value);\r\n\r\n        // @lock\r\n        // 添加锁仓相关检查\r\n        // solium-disable-next-line security/no-block-members\r\n        if(lockInfo[msg.sender].amount > 0 && block.timestamp < lockInfo[msg.sender].release_time)\r\n            require(balances[msg.sender] >= lockInfo[msg.sender].amount);\r\n\r\n            \r\n\r\n        balances[_to] = add(balances[_to], _value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    // ========= 授权转账相关逻辑 =============\r\n    \r\n    mapping (address => mapping (address => uint256)) internal allowed;\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    )\r\n    public\r\n    returns (bool)\r\n    {\r\n        require(_to != address(0));\r\n        require(_value <= balances[_from]);\r\n        require(_value <= allowed[_from][msg.sender]);\r\n\r\n        balances[_from] = sub(balances[_from], _value);\r\n        \r\n        // @lock\r\n        // 添加锁仓相关检查 \r\n        // solium-disable-next-line security/no-block-members\r\n        if(lockInfo[_from].amount > 0 && block.timestamp < lockInfo[_from].release_time)\r\n            require(balances[_from] >= lockInfo[_from].amount);\r\n        \r\n        \r\n        balances[_to] = add(balances[_to], _value);\r\n        allowed[_from][msg.sender] = sub(allowed[_from][msg.sender], _value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(\r\n        address _spender, \r\n        uint256 _value\r\n    ) \r\n    public \r\n    returns (bool) \r\n    {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(\r\n        address _owner,\r\n        address _spender\r\n    )\r\n    public\r\n    view\r\n    returns (uint256)\r\n    {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function increaseApproval(\r\n        address _spender,\r\n        uint256 _addedValue\r\n    )\r\n    public\r\n    returns (bool)\r\n    {\r\n        allowed[msg.sender][_spender] = add(allowed[msg.sender][_spender], _addedValue);\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseApproval(\r\n        address _spender,\r\n        uint256 _subtractedValue\r\n    )\r\n    public\r\n    returns (bool)\r\n    {\r\n        uint256 oldValue = allowed[msg.sender][_spender];\r\n\r\n        if (_subtractedValue > oldValue) {\r\n            allowed[msg.sender][_spender] = 0;\r\n        } \r\n        else \r\n        {\r\n            allowed[msg.sender][_spender] = sub(oldValue, _subtractedValue);\r\n        }\r\n        \r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    \r\n    // ========= 直投相关逻辑 ===============\r\n    bool public direct_drop_switch = true; // 是否开启直投 @eachvar\r\n    uint256 public direct_drop_rate = 200000000; // 兑换比例，注意这里是eth为单位，需要换算到wei @eachvar\r\n    address public direct_drop_address = 0xBe60a6e39Bd058198C8E56e6c708A9C70190f83b; // 用于发放直投代币的账户 @eachvar\r\n    address public direct_drop_withdraw_address = 0x64b33dB1Cc804e7CA51D9c21F132567923D7BA00; // 直投提现地址 @eachvar\r\n\r\n    bool public direct_drop_range = true; // 是否启用直投有效期 @eachvar\r\n    uint256 public direct_drop_range_start = 1562921160; // 有效期开始 @eachvar\r\n    uint256 public direct_drop_range_end = 3803445960; // 有效期结束 @eachvar\r\n\r\n    event TokenPurchase\r\n    (\r\n        address indexed purchaser,\r\n        address indexed beneficiary,\r\n        uint256 value,\r\n        uint256 amount\r\n    );\r\n\r\n    // 支持为别人购买\r\n    function buyTokens( address _beneficiary ) \r\n    public \r\n    payable // 接收支付\r\n    returns (bool)\r\n    {\r\n        require(direct_drop_switch);\r\n        require(_beneficiary != address(0));\r\n\r\n        // 检查有效期开关\r\n        if( direct_drop_range )\r\n        {\r\n            // 当前时间必须在有效期内\r\n            // solium-disable-next-line security/no-block-members\r\n            require(block.timestamp >= direct_drop_range_start && block.timestamp <= direct_drop_range_end);\r\n\r\n        }\r\n        \r\n        // 计算根据兑换比例，应该转移的代币数量\r\n        // uint256 tokenAmount = mul(div(msg.value, 10**18), direct_drop_rate);\r\n        \r\n        uint256 tokenAmount = div(mul(msg.value,direct_drop_rate ), 10**18); //此处用 18次方，这是 wei to  ether 的换算，不是代币的，所以不用 decimals,先乘后除，否则可能为零\r\n        uint256 decimalsAmount = mul( 10**uint256(decimals), tokenAmount);\r\n        \r\n        // 首先检查代币发放账户余额\r\n        require\r\n        (\r\n            balances[direct_drop_address] >= decimalsAmount\r\n        );\r\n\r\n        assert\r\n        (\r\n            decimalsAmount > 0\r\n        );\r\n\r\n        \r\n        // 然后开始转账\r\n        uint256 all = add(balances[direct_drop_address], balances[_beneficiary]);\r\n\r\n        balances[direct_drop_address] = sub(balances[direct_drop_address], decimalsAmount);\r\n\r\n        // @lock\r\n        // 添加锁仓相关检查 \r\n        // solium-disable-next-line security/no-block-members\r\n        if(lockInfo[direct_drop_address].amount > 0 && block.timestamp < lockInfo[direct_drop_address].release_time)\r\n            require(balances[direct_drop_address] >= lockInfo[direct_drop_address].amount);\r\n\r\n            \r\n\r\n        balances[_beneficiary] = add(balances[_beneficiary], decimalsAmount);\r\n        \r\n        assert\r\n        (\r\n            all == add(balances[direct_drop_address], balances[_beneficiary])\r\n        );\r\n\r\n        // 发送事件\r\n        emit TokenPurchase\r\n        (\r\n            msg.sender,\r\n            _beneficiary,\r\n            msg.value,\r\n            tokenAmount\r\n        );\r\n\r\n        return true;\r\n\r\n    } \r\n    \r\n\r\n     // ========= 空投相关逻辑 ===============\r\n    bool public air_drop_switch = true; // 是否开启空投 @eachvar\r\n    uint256 public air_drop_rate = 88888; // 赠送的代币枚数，这个其实不是rate，直接是数量 @eachvar\r\n    address public air_drop_address = 0xeCA9eEea4B0542514e35833Df15830dC0108Ea20; // 用于发放空投代币的账户 @eachvar\r\n    uint256 public air_drop_count = 0; // 每个账户可以参加的次数 @eachvar\r\n\r\n    mapping(address => uint256) airdrop_times; // 用于记录参加次数的mapping\r\n\r\n    bool public air_drop_range = true; // 是否启用空投有效期 @eachvar\r\n    uint256 public air_drop_range_start = 1562921160; // 有效期开始 @eachvar\r\n    uint256 public air_drop_range_end = 3803445960; // 有效期结束 @eachvar\r\n\r\n    event TokenGiven\r\n    (\r\n        address indexed sender,\r\n        address indexed beneficiary,\r\n        uint256 value,\r\n        uint256 amount\r\n    );\r\n\r\n    // 也可以帮别人领取\r\n    function airDrop( address _beneficiary ) \r\n    public \r\n    payable // 接收支付\r\n    returns (bool)\r\n    {\r\n        require(air_drop_switch);\r\n        require(_beneficiary != address(0));\r\n        // 检查有效期开关\r\n        if( air_drop_range )\r\n        {\r\n            // 当前时间必须在有效期内\r\n            // solium-disable-next-line security/no-block-members\r\n            require(block.timestamp >= air_drop_range_start && block.timestamp <= air_drop_range_end);\r\n\r\n        }\r\n\r\n        // 检查受益账户参与空投的次数\r\n        if( air_drop_count > 0 )\r\n        {\r\n            require\r\n            ( \r\n                airdrop_times[_beneficiary] <= air_drop_count \r\n            );\r\n        }\r\n        \r\n        // 计算根据兑换比例，应该转移的代币数量\r\n        uint256 tokenAmount = air_drop_rate;\r\n        uint256 decimalsAmount = mul(10**uint256(decimals), tokenAmount);// 转移代币时还要乘以小数位\r\n        \r\n        // 首先检查代币发放账户余额\r\n        require\r\n        (\r\n            balances[air_drop_address] >= decimalsAmount\r\n        );\r\n\r\n        assert\r\n        (\r\n            decimalsAmount > 0\r\n        );\r\n\r\n        \r\n        \r\n        // 然后开始转账\r\n        uint256 all = add(balances[air_drop_address], balances[_beneficiary]);\r\n\r\n        balances[air_drop_address] = sub(balances[air_drop_address], decimalsAmount);\r\n\r\n        // @lock\r\n        // 添加锁仓相关检查 \r\n        // solium-disable-next-line security/no-block-members\r\n        if(lockInfo[air_drop_address].amount > 0 && block.timestamp < lockInfo[air_drop_address].release_time)\r\n            require(balances[air_drop_address] >= lockInfo[air_drop_address].amount);\r\n        \r\n        balances[_beneficiary] = add(balances[_beneficiary], decimalsAmount);\r\n        \r\n        assert\r\n        (\r\n            all == add(balances[air_drop_address], balances[_beneficiary])\r\n        );\r\n\r\n        // 发送事件\r\n        emit TokenGiven\r\n        (\r\n            msg.sender,\r\n            _beneficiary,\r\n            msg.value,\r\n            tokenAmount\r\n        );\r\n\r\n        return true;\r\n\r\n    }\r\n    \r\n    // ========== 代码销毁相关逻辑 ================\r\n    event Burn(address indexed burner, uint256 value);\r\n\r\n    function burn(uint256 _value) public \r\n    {\r\n        _burn(msg.sender, _value);\r\n    }\r\n\r\n    function _burn(address _who, uint256 _value) internal \r\n    {\r\n        require(_value <= balances[_who]);\r\n        \r\n        balances[_who] = sub(balances[_who], _value);\r\n\r\n        //@lock\r\n        // 添加锁仓相关检查 \r\n        // solium-disable-next-line security/no-block-members\r\n        if(lockInfo[_who].amount > 0 && block.timestamp < lockInfo[_who].release_time)\r\n            require(balances[_who] >= lockInfo[_who].amount);\r\n            \r\n\r\n        totalSupply = sub(totalSupply, _value);\r\n        emit Burn(_who, _value);\r\n        emit Transfer(_who, address(0), _value);\r\n    }\r\n    \r\n    //@lock\r\n    // ========== 锁仓相关逻辑 ================\r\n    // 定义锁仓信息\r\n    struct LockAccount \r\n    {\r\n        // address account ; // 锁仓地址\r\n        uint256 amount ; // 锁定数额\r\n        uint256 release_time ; // 释放时间\r\n    }\r\n\r\n    mapping(address => LockAccount) public lockInfo;\r\n\r\n    // 这是一个内部函数，供构造函数添加锁仓账户用\r\n    function _add_lock_account(address _lock_address, uint256 _amount, uint256 _release_time) internal\r\n    {\r\n        // 添加锁仓账户\r\n        // 只在该地址的锁定额度为0时进行添加，确保锁仓地址不能被修改（即使是管理员也不能）\r\n        if( lockInfo[_lock_address].amount == 0 )\r\n            lockInfo[_lock_address] = LockAccount( _amount , _release_time);\r\n    }\r\n    \r\n    // ============== admin 相关函数 ==================\r\n    modifier admin_only()\r\n    {\r\n        require(msg.sender==admin_address);\r\n        _;\r\n    }\r\n\r\n    function setAdmin( address new_admin_address ) \r\n    public \r\n    admin_only \r\n    returns (bool)\r\n    {\r\n        require(new_admin_address != address(0));\r\n        admin_address = new_admin_address;\r\n        return true;\r\n    }\r\n\r\n    // 空投管理\r\n    function setAirDrop( bool status )\r\n    public\r\n    admin_only\r\n    returns (bool)\r\n    {\r\n        air_drop_switch = status;\r\n        return true;\r\n    }\r\n    \r\n    // 直投管理\r\n    function setDirectDrop( bool status )\r\n    public\r\n    admin_only\r\n    returns (bool)\r\n    {\r\n        direct_drop_switch = status;\r\n        return true;\r\n    }\r\n    \r\n    // ETH提现\r\n    function withDraw()\r\n    public\r\n    {\r\n        // 管理员和之前设定的提现账号可以发起提现，但钱一定是进提现账号\r\n        require(msg.sender == admin_address || msg.sender == direct_drop_withdraw_address);\r\n        require(address(this).balance > 0);\r\n        // 全部转到直投提现中\r\n        direct_drop_withdraw_address.transfer(address(this).balance);\r\n    }\r\n        // ======================================\r\n    /// 默认函数\r\n    function () external payable\r\n    {\r\n                        if( msg.value > 0 )\r\n            buyTokens(msg.sender);\r\n        else\r\n            airDrop(msg.sender); \r\n        \r\n        \r\n        \r\n           \r\n    }\r\n\r\n    // ========== 公用函数 ===============\r\n    // 主要就是 safemath\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) \r\n    {\r\n        if (a == 0) \r\n        {\r\n            return 0;\r\n        }\r\n\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) \r\n    {\r\n        return a / b;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) \r\n    {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) \r\n    {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"direct_drop_withdraw_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"air_drop_switch\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"air_drop_range\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"direct_drop_rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"direct_drop_range_end\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"direct_drop_switch\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setDirectDrop\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"air_drop_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"direct_drop_range_start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"air_drop_rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"account_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockInfo\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"release_time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_admin_address\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setAirDrop\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"air_drop_range_end\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"air_drop_count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"airDrop\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"direct_drop_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"air_drop_range_start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"direct_drop_range\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenGiven\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"CoinMmc","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4f1374bca36586034f8a93562ddd2df6c5eebbf08e4ae24589e59b9693211453"}]}