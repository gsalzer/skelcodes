{"status":"1","message":"OK","result":[{"SourceCode":"{\"HipToken.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nimport \\u0027./SafeMathLib.sol\\u0027;\\n\\ncontract HipToken {\\n    using SafeMathLib for uint;\\n\\n    mapping (address =\\u003e uint) public balances;\\n    mapping (address =\\u003e uint) public frozenBalances;\\n    mapping (address =\\u003e mapping (address =\\u003e uint)) public allowed;\\n    mapping (uint =\\u003e FrozenTokens) public frozenTokensMap;\\n\\n    event Transfer(address indexed sender, address indexed receiver, uint value);\\n    event Approval(address approver, address spender, uint value);\\n    event TokensFrozen(address indexed freezer, uint amount, uint id, uint lengthFreezeDays);\\n    event TokensUnfrozen(address indexed unfreezer, uint amount, uint id);\\n    event TokensBurned(address burner, uint amount);\\n\\n    uint constant public decimals = 18;\\n    uint public totalSupply;\\n    uint public numCoinsFrozen;\\n    uint numFrozenStructs;\\n\\n    struct FrozenTokens {\\n        uint id;\\n        uint dateFrozen;\\n        uint lengthFreezeDays;\\n        uint amount;\\n        bool frozen;\\n        address owner;\\n    }\\n\\n    constructor(address bank, uint initialBalance) public {\\n        balances[bank] = initialBalance;\\n        totalSupply = initialBalance;\\n    }\\n\\n    function freeze(uint amount, uint freezeDays) public {\\n        balances[msg.sender] = balances[msg.sender].minus(amount);\\n        frozenBalances[msg.sender] = frozenBalances[msg.sender].plus(amount);\\n        numFrozenStructs = numFrozenStructs.plus(1);\\n        numCoinsFrozen = numCoinsFrozen.plus(amount);\\n        frozenTokensMap[numFrozenStructs] = FrozenTokens(numFrozenStructs, now, freezeDays, amount, true, msg.sender);\\n        emit TokensFrozen(msg.sender, amount, numFrozenStructs, freezeDays);\\n    }\\n\\n    function unFreeze(uint id) public {\\n        FrozenTokens storage f = frozenTokensMap[id];\\n        require(f.dateFrozen + (f.lengthFreezeDays * 1 days) \\u003c now, \\u0027May not unfreeze until freeze time is up\\u0027);\\n        require(f.frozen, \\u0027Can only unfreeze frozen tokens\\u0027);\\n        f.frozen = false;\\n        frozenBalances[f.owner] = frozenBalances[f.owner].minus(f.amount);\\n        balances[f.owner] = balances[f.owner].plus(f.amount);\\n        numCoinsFrozen = numCoinsFrozen.minus(f.amount);\\n        emit TokensUnfrozen(f.owner, f.amount, id);\\n    }\\n\\n    function burn(uint amount) public {\\n        balances[msg.sender] = balances[msg.sender].minus(amount);\\n        totalSupply = totalSupply.minus(amount);\\n        emit TokensBurned(msg.sender, amount);\\n    }\\n\\n    function transfer(address to, uint value) public returns (bool success)\\n    {\\n        // deduct\\n        balances[msg.sender] = balances[msg.sender].minus(value);\\n        // add\\n        balances[to] = balances[to].plus(value);\\n\\n        emit Transfer(msg.sender, to, value);\\n        return true;\\n    }\\n\\n    function transferFrom(address from, address to, uint value) public returns (bool success)\\n    {\\n        uint allowance = allowed[from][msg.sender];\\n\\n        // deduct\\n        balances[from] = balances[from].minus(value);\\n\\n        // add\\n        balances[to] = balances[to].plus(value);\\n\\n        // adjust allowance\\n        allowed[from][msg.sender] = allowance.minus(value);\\n\\n        emit Transfer(from, to, value);\\n        return true;\\n    }\\n\\n    function balanceOf(address owner) public view returns (uint balance) {\\n        return balances[owner];\\n    }\\n\\n    function frozenBalanceOf(address owner) public view returns (uint balance) {\\n        return frozenBalances[owner];\\n    }\\n\\n    function approve(address spender, uint value) public returns (bool success)\\n    {\\n        allowed[msg.sender][spender] = value;\\n        emit Approval(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    function allowance(address owner, address spender) public view returns (uint remaining) {\\n        return allowed[owner][spender];\\n    }\\n\\n}\\n\"},\"SafeMathLib.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nlibrary SafeMathLib {\\n  function times(uint a, uint b) public pure returns (uint) {\\n    uint c = a * b;\\n    assert(a == 0 || c / a == b);\\n    return c;\\n  }\\n\\n  function minus(uint a, uint b) public pure returns (uint) {\\n    assert(b \\u003c= a);\\n    return a - b;\\n  }\\n\\n  function plus(uint a, uint b) public pure returns (uint) {\\n    uint c = a + b;\\n    assert(c\\u003e=a \\u0026\\u0026 c\\u003e=b);\\n    return c;\\n  }\\n\\n}\\n\"}}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"freezeDays\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"frozenTokensMap\",\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"dateFrozen\",\"type\":\"uint256\"},{\"name\":\"lengthFreezeDays\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"frozen\",\"type\":\"bool\"},{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numCoinsFrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"frozenBalanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"unFreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"bank\",\"type\":\"address\"},{\"name\":\"initialBalance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"freezer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"lengthFreezeDays\",\"type\":\"uint256\"}],\"name\":\"TokensFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"unfreezer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"TokensUnfrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"}]","ContractName":"HipToken","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000b793faf25bfdc5214d26111a7741e48a81af1bd80000000000000000000000000000000000000000033b2e3c9fd0803ce8000000","Library":"SafeMathLib:79275171a5afd93028d83245220203714a4f670c","LicenseType":"GNU GPLv3","SwarmSource":"bzzr://9f740d9eaa87a651cd146441c143c7a30aa3035d9ea04b2d20f329894591bc65"}]}