{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.5 .1;\r\n\r\ninterface tokenRecipient {\r\n\tfunction receiveApproval(address from, uint256 value, address token, bytes calldata extraData) external;\r\n}\r\n\r\n\r\ncontract ERC20Token {\r\n\tstring private _name;\r\n\r\n\tfunction name() public view returns(string memory) {\r\n\t\treturn _name;\r\n\t}\r\n\tstring private _symbol;\r\n\r\n\tfunction symbol() public view returns(string memory) {\r\n\t\treturn _symbol;\r\n\t}\r\n\tuint8 private _decimals = 18;\r\n\r\n\tfunction decimals() public view returns(uint8) {\r\n\t\treturn _decimals;\r\n\t}\r\n\t// 18 decimals is the strongly suggested default, avoid changing it\r\n\tuint256 public _totalSupply;\r\n\r\n\tfunction totalSupply() public view returns(uint256) {\r\n\t\treturn _totalSupply;\r\n\t}\r\n\t//账户与代币数量的映射\r\n\t// This creates an array with all balances\r\n\tmapping(address => uint256) public _balanceOf;\r\n\r\n\tfunction balanceOf(address _owner) public view returns(uint256 balance) {\r\n\t\treturn _balanceOf[_owner];\r\n\t}\r\n\r\n\t//授权\r\n\tmapping(address => mapping(address => uint256)) public _allowance;\r\n\r\n\t//定义事件 转账事件\r\n\t// This generates a public event on the blockchain that will notify clients\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\t//定义事件 授权事件\r\n\t// This generates a public event on the blockchain that will notify clients\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n\t//定义事件 \r\n\t// This notifies clients about the amount burnt\r\n\tevent Burn(address indexed from, uint256 value);\r\n\r\n\t/**\r\n\t * Constructor function\r\n\t *\r\n\t * Initializes contract with initial supply tokens to the creator of the contract\r\n\t */\r\n\tconstructor(\r\n\t\tuint256 initialSupply,\r\n\t\tstring memory tokenName,\r\n\t\tstring memory tokenSymbol\r\n\t) public {\r\n\t\t_totalSupply = initialSupply * 10 ** uint256(_decimals); // Update total supply with the decimal amount\r\n\t\t//一开始，代币都在合约拥有者手里\r\n\t\t_balanceOf[msg.sender] = _totalSupply; // Give the creator all initial tokens\r\n\t\t_name = tokenName; // Set the name for display purposes\r\n\t\t_symbol = tokenSymbol; // Set the symbol for display purposes\r\n\t}\r\n\r\n\t//内部方法\r\n\tfunction _transfer(address from, address to, uint value) internal {\r\n\t\t// Prevent transfer to 0x0 address. Use burn() instead\r\n\t\trequire(to != address(0x0)); //断言，不能给一个空地址转代币\r\n\t\t// Check if the sender has enough\r\n\t\trequire(_balanceOf[from] >= value); //转出者必须拥有的代币数量必须大于等于转出的数量\r\n\t\t// Check for overflows\r\n\t\trequire(_balanceOf[to] + value >= _balanceOf[to]); //这里的技巧在于考虑到了数据的溢出\r\n\t\t// Save this for an assertion in the future\r\n\t\tuint previousBalances = _balanceOf[from] + _balanceOf[to]; //转出者和转入者的总量\r\n\t\t// Subtract from the sender\r\n\t\t_balanceOf[from] -= value; //转出\r\n\t\t// Add the same to the recipient\r\n\t\t_balanceOf[to] += value; //转入\r\n\t\t//提交事件\r\n\t\temit Transfer(from, to, value);\r\n\t\t// Asserts are used to use static analysis to find bugs in your code. They should never fail\r\n\t\tassert(_balanceOf[from] + _balanceOf[to] == previousBalances); //他们之间转账以后总量肯定是不变的\r\n\t}\r\n\r\n\r\n\t//公开方法\r\n\tfunction transfer(address to, uint256 value) public returns(bool success) {\r\n\t\t_transfer(msg.sender, to, value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\tfunction transferFrom(address from, address to, uint256 value) public returns(bool success) {\r\n\t\t//不能超额转账\r\n\t\trequire(value <= _allowance[from][msg.sender]); // Check allowance\r\n\t\t//减去授权的额度\r\n\t\t_allowance[from][msg.sender] -= value;\r\n\t\t//转账\r\n\t\t_transfer(from, to, value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\tfunction approve(address spender, uint256 value) public\r\n\treturns(bool success) {\r\n\t\t//授权额度，至于它有没有这么额度，它不管，因为转账的时候会有数量判断，这里不用关心\r\n\t\t_allowance[msg.sender][spender] = value;\r\n\t\t//提交授权事件\r\n\t\temit Approval(msg.sender, spender, value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction approveAndCall(address spender, uint256 value, bytes memory extraData) public returns(bool success) {\r\n\t\ttokenRecipient _spender = tokenRecipient(spender);\r\n\t\tif (approve(spender, value)) {\r\n\t\t\t_spender.receiveApproval(msg.sender, value, address(this), extraData);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction burn(uint256 value) public returns(bool success) {\r\n\t\trequire(_balanceOf[msg.sender] >= value); // Check if the sender has enough\r\n\t\t_balanceOf[msg.sender] -= value; // Subtract from the sender\r\n\t\t_totalSupply -= value; // Updates totalSupply\r\n\t\t//提交事件\r\n\t\temit Burn(msg.sender, value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction burnFrom(address from, uint256 value) public returns(bool success) {\r\n\t\trequire(_balanceOf[from] >= value); // Check if the targeted balance is enough\r\n\t\trequire(value <= _allowance[from][msg.sender]); // Check allowance\r\n\t\t_balanceOf[from] -= value; // Subtract from the targeted balance\r\n\t\t_allowance[from][msg.sender] -= value; // Subtract from the sender's allowance\r\n\t\t_totalSupply -= value; // Update totalSupply\r\n\t\t//提交事件\r\n\t\temit Burn(from, value);\r\n\t\treturn true;\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"_allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"ERC20Token","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000001ab3f00000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000034f504d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014d00000000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://5bcb2d9b612b42d99ce264ca325f67e0d8aa636d6a2f40de0fa31de627ed98b9"}]}