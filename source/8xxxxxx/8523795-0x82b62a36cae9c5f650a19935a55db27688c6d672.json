{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\ncontract Ownable {\r\n    \r\n    address public owner;\r\n    \r\n    event OwnershipTransferred(address indexed from, address indexed to);\r\n    \r\n    \r\n    /**\r\n     * Constructor assigns ownership to the address used to deploy the contract.\r\n     * */\r\n    function Ownable() public {\r\n        owner = 0x202abc6cf98863ee0126c182ca325a33a867acba ;\r\n    }\r\n\r\n\r\n    /**\r\n     * Any function with this modifier in its method signature can only be executed by\r\n     * the owner of the contract. Any attempt made by any other account to invoke the \r\n     * functions with this modifier will result in a loss of gas and the contract's state\r\n     * will remain untampered.\r\n     * */\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * Allows for the transfer of ownership to another address;\r\n     * \r\n     * @param _newOwner The address to be assigned new ownership.\r\n     * */\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(\r\n            _newOwner != address(0)\r\n            && _newOwner != owner \r\n        );\r\n        OwnershipTransferred(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n    event Pause();\r\n    event Unpause();\r\n    \r\n    bool public paused = false;\r\n    \r\n    \r\n    /**\r\n    * @dev Modifier to make a function callable only when the contract is not paused.\r\n    */\r\n    modifier whenNotPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n    \r\n    /**\r\n    * @dev Modifier to make a function callable only when the contract is paused.\r\n    */\r\n    modifier whenPaused() {\r\n        require(paused);\r\n        _;\r\n    }\r\n    \r\n    /**\r\n    * @dev called by the owner to pause, triggers stopped state\r\n    */\r\n    function pause() onlyOwner whenNotPaused public {\r\n        paused = true;\r\n        Pause();\r\n    }\r\n    \r\n    /**\r\n    * @dev called by the owner to unpause, returns to normal state\r\n    */\r\n    function unpause() onlyOwner whenPaused public {\r\n        paused = false;\r\n        Unpause();\r\n    }\r\n}\r\n\r\n\r\ncontract TokenTransferInterface {\r\n    function transfer(address _to, uint256 _value) public;\r\n}\r\n\r\n\r\ncontract SelfDropCYFM is Pausable {\r\n    \r\n    mapping (address => bool) public addrHasClaimedTokens;\r\n    \r\n    TokenTransferInterface public constant token = TokenTransferInterface(0x32b87fb81674aa79214e51ae42d571136e29d385);\r\n    \r\n    uint256 public tokensToSend = 5000e18;\r\n    \r\n    \r\n    function changeTokensToSend(uint256 _value) public onlyOwner {\r\n        require(_value != tokensToSend);\r\n        require(_value > 0);\r\n        tokensToSend = (_value * (10 ** 18));\r\n    }\r\n    \r\n    \r\n    function() public payable whenNotPaused {\r\n        require(!addrHasClaimedTokens[msg.sender]);\r\n        require(msg.value == 0);\r\n        addrHasClaimedTokens[msg.sender] = true;\r\n        token.transfer(msg.sender, tokensToSend);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"tokensToSend\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"addrHasClaimedTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"changeTokensToSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"SelfDropCYFM","CompilerVersion":"v0.4.20+commit.3155dd80","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://b15ef20c6a2926305899f2679ed1b1c4bac3e63277ae986af2e50a3d2f285242"}]}