{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.10;\r\npragma experimental ABIEncoderV2;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n}\r\ncontract GachaDrop is Ownable {\r\n    struct Drop {\r\n        string name;\r\n        uint periodToPlay;\r\n        mapping(address => uint) timeTrackUser;\r\n    }\r\n    // uint public periodToPlay = 1; // 86400; // seconds\r\n    mapping(string => Drop) public Drops;\r\n    string[] public DropNames;\r\n    event _random(address _from, uint _ticket, string _drop);\r\n    event _changePeriodToPlay(string _drop, uint _period);\r\n    constructor() public {\r\n        Drops['GodsUnchained'].name = 'GodsUnchained';\r\n        Drops['GodsUnchained'].periodToPlay = 1;\r\n        DropNames.push('GodsUnchained');\r\n    }\r\n    function getDropNames() public view returns(string[] memory) {\r\n        return DropNames;\r\n    }\r\n    function getAward(string memory _drop) public {\r\n        require(isValidToPlay(_drop));\r\n        Drops[_drop].timeTrackUser[msg.sender] = block.timestamp;\r\n        emit _random(msg.sender, block.timestamp, Drops[_drop].name);\r\n    }\r\n\r\n    function isValidToPlay(string memory _drop) public view returns (bool){\r\n        return Drops[_drop].periodToPlay <= now - Drops[_drop].timeTrackUser[msg.sender];\r\n    }\r\n    function changePeriodToPlay(string memory _drop, uint _period) onlyOwner public{\r\n        if(Drops[_drop].periodToPlay == 0) {\r\n            DropNames.push(_drop);\r\n            Drops[_drop].name = _drop;\r\n        }\r\n        \r\n        Drops[_drop].periodToPlay = _period;\r\n        emit _changePeriodToPlay(_drop, _period);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getDropNames\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"DropNames\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_drop\",\"type\":\"string\"}],\"name\":\"isValidToPlay\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"string\"}],\"name\":\"Drops\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"periodToPlay\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_drop\",\"type\":\"string\"}],\"name\":\"getAward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_drop\",\"type\":\"string\"},{\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"changePeriodToPlay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_ticket\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_drop\",\"type\":\"string\"}],\"name\":\"_random\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_drop\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"_changePeriodToPlay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"GachaDrop","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bca4dc586f7ddda38827012535a75d5f040f8c036027ca61b3f91f07dfa94f22"}]}