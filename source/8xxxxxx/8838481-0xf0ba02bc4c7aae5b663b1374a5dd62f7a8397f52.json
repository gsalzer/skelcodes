{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.12;\r\ncontract MyCoinHome {\r\n\r\n      mapping(string => bool) private restrictedUsernames;\r\n      \r\n      mapping(string=> string) usernameToIpfsHash;\r\n      mapping(string=>address)  usernameToOwner;\r\n      mapping(address=> string) ownerToUsername;\r\n\r\n      address public admin;\r\n\r\n\r\n      string[] restrictedNames = [\"admin\",\"message\",\"error\",\"notice\",\"home\",\"contact\",\"root\"];\r\n\r\n\r\n    constructor() public {\r\n\r\n        admin = msg.sender;\r\n\r\n      for(uint i=0;i<7;i++){\r\n            restrictedUsernames[restrictedNames[i]]=true;\r\n        }\r\n    }\r\n\r\n\r\n//   ************************ STATUS CHECK **********************************************\r\n    function hasUser(address userAddress) public view returns(bool) {\r\n        if(keccak256(abi.encodePacked(ownerToUsername[userAddress])) == keccak256 (\"\")){\r\n            return false;\r\n        }\r\n        return true;\r\n      }\r\n\r\n    function usernameTaken(string memory _username) public view returns(bool) {\r\n        if(usernameToOwner[_username] == address(0)){\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n      }\r\n\r\n    //   ************************** UTILITY FUNCTIONS *****************************************\r\n      function createUser(string  memory username, string memory ipfsHash) public  {\r\n        require(!hasUser(msg.sender), \"User already registered\");\r\n        require(!usernameTaken(username), \"Username has been taken\");\r\n        require(!(restrictedUsernames[username]==true), \"This username cannot be registered\");\r\n        bytes memory tempString = bytes(username); \r\n        require(tempString.length !=0, \"Cannot register an empty string\");\r\n        usernameToIpfsHash[username] = ipfsHash;\r\n        usernameToOwner[username] = msg.sender;\r\n        ownerToUsername[msg.sender] = username;\r\n      }\r\n      \r\n      function getOwner(string memory username) view public returns(address){\r\n          return usernameToOwner[username];\r\n      }\r\n      \r\n      \r\n      function updateUserIpfs(string memory ipfsHash) public  {\r\n        require(hasUser(msg.sender), \"You need to have an account to edit your profile\");\r\n        usernameToIpfsHash[getUsernameByAddress(msg.sender)] = ipfsHash;\r\n      }\r\n\r\n      function getIpfsHashByUsername(string memory username) public view returns(string memory ipfsHash){\r\n          return usernameToIpfsHash[username];\r\n      }\r\n\r\n      function getUsernameByAddress(address _address) public view returns( string memory username){\r\n            return ownerToUsername[_address];\r\n      }\r\n\r\n\r\n    //   ************************************* MODIFIERS *************************************\r\n\r\n      modifier onlyAdmin() {\r\n        require(msg.sender == admin);\r\n        _;\r\n       }\r\n\r\n\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"createUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"getIpfsHashByUsername\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getUsernameByAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"hasUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"updateUserIpfs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"}],\"name\":\"usernameTaken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"MyCoinHome","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://9b50674c8d8f7b99a6a3d46ce895d34a2f3aae64375e58fc39072300e75eb32e"}]}