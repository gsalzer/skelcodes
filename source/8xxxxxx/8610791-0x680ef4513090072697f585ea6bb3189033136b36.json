{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.11;\r\n\r\n// \r\n// * whitebetting.com - the whitest football betting game based on ethereum blockchain\r\n// on 2019-09-24\r\n//\r\n\r\ncontract WhiteBetting {\r\n  address payable public owner;\r\n\r\n  // Game information\r\n  struct GameInfo {\r\n    // game start time\r\n    uint256 timestamp;\r\n    // game odds\r\n    uint32 odd_homeTeam;\r\n    uint32 odd_drawTeam; \r\n    uint32 odd_awayTeam;\r\n    uint32 odd_over;\r\n    uint32 odd_under;\r\n    uint32 odd_homeTeamAndDraw;\r\n    uint32 odd_homeAndAwayTeam;\r\n    uint32 odd_awayTeamAndDraw;\r\n    // Checking the game status\r\n    uint8  open_status;\r\n    // Checking whether winning were paid\r\n    bool   isDone;\r\n  }\r\n  mapping(uint64 => GameInfo) public gameList;\r\n\r\n  // Player betting infomation\r\n  struct BetFixture {\r\n    address payable player;\r\n    uint256 stake;\r\n    uint32  odd;\r\n    // betting type\r\n    uint16  selectedTeam;\r\n  }\r\n  mapping(uint64 => BetFixture[]) public betList;\r\n\r\n  // Events that are issued to make statistic recovery easier\r\n  event Success(uint256 odd);\r\n  event Deposit(address sender, uint256 eth);\r\n  event Withdraw(address receiver, uint256 eth);\r\n  event NewStake(address player, uint64 fixtureId, uint16 selectedTeam, uint256 stake, uint256 odd );\r\n  event SetGame(uint64 _fixtureId, uint256 _timestamp, uint32 _odd_homeTeam, uint32 _odd_drawTeam, uint32 _odd_awayTeam, uint32 _odd_over, uint32 _odd_under, uint32 _odd_homeTeamAndDraw, uint32 _odd_homeAndAwayTeam , uint32 _odd_awayTeamAndDraw, uint8 _open_status);\r\n  event ChangeOdd (uint64 _fixtureId, uint32 _odd_homeTeam, uint32 _odd_drawTeam, uint32 _odd_awayTeam, uint32 _odd_over, uint32 _odd_under, uint32 _odd_homeTeamAndDraw, uint32 _odd_homeAndAwayTeam , uint32 _odd_awayTeamAndDraw);\r\n  event GivePrizeMoney(uint64 _fixtureId, uint8 _homeDrawAway, uint8 _overUnder);\r\n  \r\n  // Constructor\r\n  constructor() public {\r\n    owner   = msg.sender;\r\n  }\r\n\r\n  // Change the game status\r\n  function setOpenStatus(uint64 _fixtureId, uint8 _open_status) external onlyOwner {\r\n    gameList[_fixtureId].open_status = _open_status;\r\n  }\r\n\r\n  // Refresh the game odd\r\n  function changeOdd (uint64 _fixtureId, uint32 _odd_homeTeam, uint32 _odd_drawTeam, uint32 _odd_awayTeam, uint32 _odd_over, uint32 _odd_under, uint32 _odd_homeTeamAndDraw, uint32 _odd_homeAndAwayTeam , uint32 _odd_awayTeamAndDraw ) external onlyOwner {\r\n    gameList[_fixtureId].odd_homeTeam        = _odd_homeTeam;\r\n    gameList[_fixtureId].odd_drawTeam        = _odd_drawTeam;\r\n    gameList[_fixtureId].odd_awayTeam        = _odd_awayTeam;\r\n    gameList[_fixtureId].odd_over            = _odd_over;\r\n    gameList[_fixtureId].odd_under           = _odd_under;\r\n    gameList[_fixtureId].odd_homeTeamAndDraw = _odd_homeTeamAndDraw;\r\n    gameList[_fixtureId].odd_homeAndAwayTeam = _odd_homeAndAwayTeam;\r\n    gameList[_fixtureId].odd_awayTeamAndDraw = _odd_awayTeamAndDraw;\r\n    emit ChangeOdd (_fixtureId, _odd_homeTeam, _odd_drawTeam, _odd_awayTeam, _odd_over, _odd_under, _odd_homeTeamAndDraw, _odd_homeAndAwayTeam , _odd_awayTeamAndDraw);\r\n  }\r\n\r\n  // Save the game information\r\n  function setGameInfo (uint64 _fixtureId, uint256 _timestamp, uint32 _odd_homeTeam, uint32 _odd_drawTeam, uint32 _odd_awayTeam, uint32 _odd_over, uint32 _odd_under, uint32 _odd_homeTeamAndDraw, uint32 _odd_homeAndAwayTeam , uint32 _odd_awayTeamAndDraw, uint8 _open_status ) external onlyOwner {\r\n    gameList[_fixtureId].timestamp           = _timestamp;\r\n    gameList[_fixtureId].odd_homeTeam        = _odd_homeTeam;\r\n    gameList[_fixtureId].odd_drawTeam        = _odd_drawTeam;\r\n    gameList[_fixtureId].odd_awayTeam        = _odd_awayTeam;\r\n    gameList[_fixtureId].odd_over            = _odd_over;\r\n    gameList[_fixtureId].odd_under           = _odd_under;\r\n    gameList[_fixtureId].odd_homeTeamAndDraw = _odd_homeTeamAndDraw;\r\n    gameList[_fixtureId].odd_homeAndAwayTeam = _odd_homeAndAwayTeam;\r\n    gameList[_fixtureId].odd_awayTeamAndDraw = _odd_awayTeamAndDraw;\r\n    gameList[_fixtureId].open_status         = _open_status;\r\n    gameList[_fixtureId].isDone              = false;\r\n    emit SetGame(_fixtureId, _timestamp, _odd_homeTeam, _odd_drawTeam, _odd_awayTeam, _odd_over, _odd_under, _odd_homeTeamAndDraw, _odd_homeAndAwayTeam , _odd_awayTeamAndDraw, _open_status);\r\n  }\r\n\r\n  // Player make a bet\r\n  function placeBet(uint64 _fixtureId, uint16 _selectedTeam, uint32 _odd) external payable  {\r\n    uint stake = msg.value;\r\n    // Minium amount to bet is 0.001 ether\r\n    require(stake >= .001 ether);\r\n    // Check whether odds is valid\r\n    require(_odd != 0 );\r\n\r\n    // Compare to match mainnet odds with was submitted odds by betting type\r\n    if (_selectedTeam == 1 ) {\r\n      require(gameList[_fixtureId].odd_homeTeam == _odd);\r\n    } else if ( _selectedTeam == 2) {\r\n      require(gameList[_fixtureId].odd_drawTeam == _odd);\r\n    } else if ( _selectedTeam == 3) {\r\n      require(gameList[_fixtureId].odd_awayTeam == _odd);\r\n    } else if ( _selectedTeam == 4) {\r\n      require(gameList[_fixtureId].odd_over == _odd);\r\n    } else if ( _selectedTeam == 5) {\r\n      require(gameList[_fixtureId].odd_under == _odd);\r\n    } else if ( _selectedTeam == 6) {\r\n      require(gameList[_fixtureId].odd_homeTeamAndDraw == _odd);\r\n    } else if ( _selectedTeam == 7) {\r\n      require(gameList[_fixtureId].odd_homeAndAwayTeam == _odd);\r\n    } else if ( _selectedTeam == 8) {\r\n      require(gameList[_fixtureId].odd_awayTeamAndDraw == _odd);\r\n    } else {\r\n      revert();\r\n    }\r\n\r\n    // Betting is possible when the game was opening\r\n    require(gameList[_fixtureId].open_status == 3);\r\n    // Betting is possible only 10 min. ago\r\n    require( now < ( gameList[_fixtureId].timestamp  - 10 minutes ) );\r\n\r\n    // Save the betting information\r\n    betList[_fixtureId].push(BetFixture( msg.sender, stake,  _odd, _selectedTeam));\r\n    emit NewStake(msg.sender, _fixtureId, _selectedTeam, stake, _odd );\r\n\r\n  }\r\n\r\n  // Give prize money by the game result\r\n  function givePrizeMoney(uint64 _fixtureId, uint8 _homeDrawAway, uint8 _overUnder) external onlyOwner payable {\r\n    // Check the game status whether is opening\r\n    require(gameList[_fixtureId].open_status == 3);\r\n    // Check if it has ever compensated\r\n    require(gameList[_fixtureId].isDone == false);\r\n    // Check if it has any player who betted\r\n    require(betList[_fixtureId][0].player != address(0) );\r\n\r\n    // Give the prize money!\r\n    for (uint i= 0 ; i < betList[_fixtureId].length; i++){\r\n      uint16 selectedTeam = betList[_fixtureId][i].selectedTeam;\r\n      uint256 returnEth = (betList[_fixtureId][i].stake * betList[_fixtureId][i].odd) / 1000 ;\r\n      if ( (selectedTeam == 1 && _homeDrawAway == 1) \r\n        || (selectedTeam == 2 && _homeDrawAway == 2) \r\n        || (selectedTeam == 3 && _homeDrawAway == 3) \r\n        || (selectedTeam == 4 && _overUnder == 1) \r\n        || (selectedTeam == 5 && _overUnder == 2) \r\n        || (selectedTeam == 6 && ( _homeDrawAway == 1 || _homeDrawAway == 2) )\r\n        || (selectedTeam == 7 && ( _homeDrawAway == 1 || _homeDrawAway == 3) )\r\n        || (selectedTeam == 8 && ( _homeDrawAway == 3 || _homeDrawAway == 2) ) \r\n        ){ \r\n        betList[_fixtureId][i].player.transfer(returnEth);\r\n      }\r\n    }\r\n\r\n    // Change the game status.\r\n    gameList[_fixtureId].open_status = 5;\r\n    // It was paid.\r\n    gameList[_fixtureId].isDone = true; // 보상을 마쳤으므로 true로 변경.\r\n\r\n    emit GivePrizeMoney( _fixtureId,  _homeDrawAway,  _overUnder);\r\n  }\r\n\r\n  // Standard modifier on methods invokable only by contract owner.\r\n  modifier onlyOwner {\r\n    require (msg.sender == owner, \"OnlyOwner methods called by non-owner.\");\r\n    _;\r\n  }\r\n\r\n  // Get this balance of CA\r\n  function getBalance() external view returns(uint){\r\n    return address(this).balance;\r\n  }\r\n\r\n  // Deposit from owner to CA\r\n  function deposit(uint256 _eth) external payable{\r\n    emit Deposit(msg.sender, _eth);\r\n  }\r\n\r\n  // Change Owner\r\n  function changeOwner(address payable _newOwner ) external onlyOwner {\r\n    owner = _newOwner;\r\n  }\r\n\r\n  // Fallback function\r\n  function () external payable{\r\n    owner.transfer(msg.value);    \r\n  }\r\n\r\n  // Withdraw from CA to owner\r\n  function withdraw(uint256 _amount) external payable onlyOwner {\r\n    require(_amount > 0 && _amount <= address(this).balance );\r\n    owner.transfer(_amount);\r\n    emit Withdraw(owner, _amount);\r\n  }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_fixtureId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"_odd_homeTeam\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_odd_drawTeam\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_odd_awayTeam\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_odd_over\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_odd_under\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_odd_homeTeamAndDraw\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_odd_homeAndAwayTeam\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_odd_awayTeamAndDraw\",\"type\":\"uint32\"}],\"name\":\"changeOdd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_fixtureId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"_selectedTeam\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_odd\",\"type\":\"uint32\"}],\"name\":\"placeBet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"betList\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"odd\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"selectedTeam\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"gameList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"odd_homeTeam\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"odd_drawTeam\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"odd_awayTeam\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"odd_over\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"odd_under\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"odd_homeTeamAndDraw\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"odd_homeAndAwayTeam\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"odd_awayTeamAndDraw\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"open_status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isDone\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_fixtureId\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_homeDrawAway\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_overUnder\",\"type\":\"uint8\"}],\"name\":\"givePrizeMoney\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_fixtureId\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_open_status\",\"type\":\"uint8\"}],\"name\":\"setOpenStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eth\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_fixtureId\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_odd_homeTeam\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_odd_drawTeam\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_odd_awayTeam\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_odd_over\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_odd_under\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_odd_homeTeamAndDraw\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_odd_homeAndAwayTeam\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_odd_awayTeamAndDraw\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"_open_status\",\"type\":\"uint8\"}],\"name\":\"setGameInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"odd\",\"type\":\"uint256\"}],\"name\":\"Success\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"fixtureId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"selectedTeam\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"odd\",\"type\":\"uint256\"}],\"name\":\"NewStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_fixtureId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_homeTeam\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_drawTeam\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_awayTeam\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_over\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_under\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_homeTeamAndDraw\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_homeAndAwayTeam\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_awayTeamAndDraw\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_open_status\",\"type\":\"uint8\"}],\"name\":\"SetGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_fixtureId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_homeTeam\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_drawTeam\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_awayTeam\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_over\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_under\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_homeTeamAndDraw\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_homeAndAwayTeam\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_odd_awayTeamAndDraw\",\"type\":\"uint32\"}],\"name\":\"ChangeOdd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_fixtureId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_homeDrawAway\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_overUnder\",\"type\":\"uint8\"}],\"name\":\"GivePrizeMoney\",\"type\":\"event\"}]","ContractName":"WhiteBetting","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://a6faf57d2075100211ad335c146532b1f24aede8d135e55fc407de03de0106e6"}]}