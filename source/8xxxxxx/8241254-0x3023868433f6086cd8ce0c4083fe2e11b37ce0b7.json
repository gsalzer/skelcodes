{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.10;\r\n\r\ncontract Alec {\r\n    address payable public owner;\r\n    \r\n    int256 public guesses_allowed;\r\n    \r\n    bytes32 public answer;\r\n    \r\n    string public quiz;\r\n    \r\n    constructor() payable public {\r\n        owner = tx.origin;\r\n        \r\n        quiz = \"What runs but never walks, has a mouth but never talks, has a choice he cannot make, and is wrong for his own sake?\";\r\n        answer = 0x33a9640cbe967f2bd7a3eff25df2f6e818e74919f3ecb842a0a766dac2479231;\r\n        \r\n        guesses_allowed = 1;\r\n    }\r\n    \r\n    function buy_guess() payable external {\r\n        require(msg.value >= .2 ether);\r\n        guesses_allowed++;\r\n    }\r\n    \r\n    function guess(string calldata attempt) external {\r\n        if(guesses_allowed <= 0) {\r\n            return;\r\n        }\r\n        \r\n        if(owner != tx.origin) {\r\n            return;\r\n        }\r\n        \r\n        if(keccak256(abi.encode(\"saltysaltsalt\", attempt)) == answer) {\r\n            // send ether for winning\r\n            msg.sender.call.value(.2 ether)(\"\");\r\n        }\r\n        \r\n        guesses_allowed--;\r\n    }\r\n    \r\n\r\n    // do not give up\r\n    function igiveup() external {\r\n        require(tx.origin == owner);\r\n        selfdestruct(owner);\r\n    }    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"guesses_allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"quiz\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"attempt\",\"type\":\"string\"}],\"name\":\"guess\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"answer\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy_guess\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"igiveup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}]","ContractName":"Alec","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a984122903a16032ddd1da221217186c5b76ef62644bb285a70956d71c2e740e"}]}