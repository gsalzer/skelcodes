{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\n\r\n  \r\ncontract ESCARCE {\r\n   \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    event Burn(address indexed from, uint256 value);\r\n    \r\n   \r\n    string public constant symbol = \"ESCARCE\";\r\n    string public constant name = \"E-scarce\";\r\n    uint8 public constant decimals = 8;\r\n    uint256 _totalSupply = 500000000000;    \r\n    uint256 _totalBurned = 0;                            \r\n     \r\n   \r\n    address public owner;\r\n    mapping(address => uint256) balances;\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n  \r\n    function ESCARCE() \r\n    {\r\n        owner = msg.sender;\r\n        balances[owner] = _totalSupply;\r\n    }\r\n  \r\n     function totalSupply() constant returns (uint256 l_totalSupply) \r\n     {\r\n        l_totalSupply = _totalSupply;\r\n     }\r\n\r\n     function totalBurned() constant returns (uint256 l_totalBurned)\r\n     {\r\n        l_totalBurned = _totalBurned;\r\n     }\r\n  \r\n     \r\n     function balanceOf(address _owner) constant returns (uint256 balance) \r\n     {\r\n        return balances[_owner];\r\n     }\r\n  \r\n     \r\n     function transfer(address _to, uint256 _amount) returns (bool success) \r\n     {\r\n        if (_to == 0x0) throw;      \r\n\r\n        if (balances[msg.sender] >= _amount && _amount > 0 && balances[_to] + _amount > balances[_to]) \r\n        {\r\n            balances[msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(msg.sender, _to, _amount);\r\n            return true;\r\n         } \r\n         else \r\n         {\r\n            return false;\r\n         }\r\n     }\r\n  \r\n     function transferFrom(address _from, address _to, uint256 _amount) returns (bool success) \r\n     {\r\n        if (_to == 0x0) throw;      \r\n\r\n        if (balances[_from] >= _amount && allowed[_from][msg.sender] >= _amount && _amount > 0 && balances[_to] + _amount > balances[_to]) \r\n        {\r\n            balances[_from] -= _amount;\r\n            allowed[_from][msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(_from, _to, _amount);\r\n            return true;\r\n         } \r\n         else \r\n         {\r\n            return false;\r\n         }\r\n     }\r\n  \r\n    \r\n     \r\n     \r\n     function approve(address _spender, uint256 _amount) returns (bool success) \r\n     {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n     }\r\n  \r\n     \r\n     function allowance(address _owner, address _spender) constant returns (uint256 remaining) \r\n     {\r\n        return allowed[_owner][_spender];\r\n     }\r\n\r\n    function aidrop(address[] addresses,uint256 _amount) //onlyOwner \r\n    {   \r\n       for (uint i = 0; i < addresses.length; i++) \r\n        {\r\n             balances[msg.sender] -= _amount;\r\n             balances[addresses[i]] += _amount;\r\n             Transfer(msg.sender, addresses[i], _amount);\r\n         }\r\n     }\r\n    \r\n    \r\n    function burn(uint256 _value) returns (bool success) \r\n    {\r\n        if (balances[msg.sender] < _value) throw;            \r\n        balances[msg.sender] -= _value;                      \r\n        \r\n        _totalSupply -= _value;          \r\n        _totalBurned += _value;                             \r\n        \r\n        Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    function burnFrom(address _from, uint256 _value) returns (bool success) \r\n    {\r\n        if (balances[_from] < _value) throw;                \r\n        if (_value > allowed[_from][msg.sender]) throw;     \r\n        balances[_from] -= _value;                          \r\n        \r\n        _totalSupply -= _value;                           \r\n        _totalBurned += _value;\r\n     \r\n        Burn(_from, _value);\r\n        return true;\r\n    }\r\n }","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"l_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"aidrop\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"name\":\"l_totalBurned\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"ESCARCE","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d9e44ab1f45514132e0b7216172c2d1fc0395495c2893e874d15bbbf4842a4ea"}]}