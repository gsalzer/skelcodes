{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4 .18;\r\npragma experimental ABIEncoderV2;\r\ncontract Shuffle {\r\n    \r\n function shuffle(uint random)\r\n  public pure returns(string[52]) \r\n  {\r\n      //init porks\r\n       string[52] memory data=[\r\n           \"♠A\",\"♠2\",\"♠3\",\"♠4\",\"♠5\",\"♠6\",\"♠7\",\"♠8\",\"♠9\",\"♠10\",\"♠J\",\"♠Q\",\"♠K\",\r\n           \"♥A\",\"♥2\",\"♥3\",\"♥4\",\"♥5\",\"♥6\",\"♥7\",\"♥8\",\"♥9\",\"♥10\",\"♥J\",\"♥Q\",\"♥K\",\r\n           \"♣A\",\"♣2\",\"♣3\",\"♣4\",\"♣5\",\"♣6\",\"♣7\",\"♣8\",\"♣9\",\"♣10\",\"♣J\",\"♣Q\",\"♣K\",\r\n           \"♦A\",\"♦2\",\"♦3\",\"♦4\",\"♦5\",\"♦6\",\"♦7\",\"♦8\",\"♦9\",\"♦10\",\"♦J\",\"♦Q\",\"♦K\"];\r\n      \r\n       //exchanging\r\n       for(uint j=0;j<100;j++)\r\n       {\r\n          uint m=(j%52);\r\n          uint seed= uint256(keccak256(abi.encodePacked(random+j)));\r\n          uint inx=seed%52;\r\n          string memory t=data[inx];\r\n          data[inx]=data[m];\r\n          data[m]=t;\r\n       }\r\n      return data;\r\n   }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"random\",\"type\":\"uint256\"}],\"name\":\"shuffle\",\"outputs\":[{\"name\":\"\",\"type\":\"string[52]\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"Shuffle","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://65e47aa0fe8e650223f11076e0497ecfb6a8b48dd6ca19219653389d7da4999c"}]}