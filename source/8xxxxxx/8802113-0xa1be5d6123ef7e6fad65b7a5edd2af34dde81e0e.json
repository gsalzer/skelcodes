{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\n\n\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    \n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    \n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    \n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    \n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    \n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    \n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    \n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\ncontract IFreezable {\n    event AccountFrozen(address indexed account);\n    event AccountUnfrozen(address indexed account);\n\n    function _freezeAccount(address account) internal;\n    function _unfreezeAccount(address account) internal;\n    function _isAccountFrozen(address account) internal view returns (bool);\n}\n\ncontract IPausable {\n    event Paused(address account);\n    event Unpaused(address account);\n\n    function paused() public view returns (bool);\n\n    function _pause() internal;\n    function _unpause() internal;\n}\n\ncontract IFeatured is IPausable, IFreezable {\n    \n    event AccountFrozen(address indexed account);\n    event AccountUnfrozen(address indexed account);\n    event TokenFrozen();\n    event TokenUnfrozen();\n    \n    uint8 public constant ForceTransfer = 0x01;\n    uint8 public constant Pausable = 0x02;\n    uint8 public constant AccountBurning = 0x04;\n    uint8 public constant AccountFreezing = 0x08;\n\n    function _enable(uint8 features) internal;\n    function isEnabled(uint8 feature) public view returns (bool);\n\n    function checkTransfer(address from, address to) external view returns (bool);\n    function isAccountFrozen(address account) external view returns (bool);\n    function freezeAccount(address account) external;\n    function unfreezeAccount(address account) external;\n    function isTokenPaused() external view returns (bool);\n    function pauseToken() external;\n    function unPauseToken() external;\n}\n\ncontract Pausable is IPausable {\n    bool private _paused;\n\n    \n    modifier whenNotPaused() {\n        require(!_paused, \"Pausable: paused\");\n        _;\n    }\n\n    \n    modifier whenPaused() {\n        require(_paused, \"Pausable: not paused\");\n        _;\n    }\n\n    \n    constructor () internal {\n        _paused = false;\n    }\n\n    \n    function paused() public view returns (bool) {\n        return _paused;\n    }\n\n    \n    function _pause() internal whenNotPaused {\n        _paused = true;\n        emit Paused(msg.sender);\n    }\n\n    \n    function _unpause() internal whenPaused {\n        _paused = false;\n        emit Unpaused(msg.sender);\n    }\n}\n\ncontract Freezable is IFreezable {\n    mapping (address => bool) private _frozen;\n\n    event AccountFrozen(address indexed account);\n    event AccountUnfrozen(address indexed account);\n\n    \n    function _freezeAccount(address account) internal {\n        _frozen[account] = true;\n        emit AccountFrozen(account);\n    }\n\n    \n    function _unfreezeAccount(address account) internal {\n         _frozen[account] = false;\n         emit AccountUnfrozen(account);\n    }\n\n    \n    function _isAccountFrozen(address account) internal view returns (bool) {\n         return _frozen[account];\n    }\n}\n\ncontract Featured is IFeatured, Pausable, Freezable, Ownable {\n    uint8 public _enabledFeatures;\n\n    modifier enabled(uint8 feature) {\n        require(isEnabled(feature), \"Token feature is not enabled\");\n        _;\n    }\n\n    constructor (address owner, uint8 features) public {\n        _enable(features);\n        _transferOwnership(owner);\n    }\n\n    \n    function _enable(uint8 features) internal {\n        _enabledFeatures = features;\n    }\n\n    \n    function isEnabled(uint8 feature) public view returns (bool) {\n        return _enabledFeatures & feature > 0;\n    }\n\n    \n    function checkTransfer(address from, address to) external view returns (bool) {\n        return !_isAccountFrozen(from) && !_isAccountFrozen(to) && !paused();\n    }\n\n    \n    function isAccountFrozen(address account) external view returns (bool) {\n        return _isAccountFrozen(account);\n    }\n\n    \n    function freezeAccount(address account)\n    external\n    enabled(AccountFreezing)\n    onlyOwner\n    {\n        _freezeAccount(account);\n    }\n\n    \n    function unfreezeAccount(address account)\n    external\n    enabled(AccountFreezing)\n    onlyOwner\n    {\n        _unfreezeAccount(account);\n    }\n\n    \n    function isTokenPaused() external view returns (bool) {\n        return paused();\n    }\n\n    \n    function pauseToken()\n    external\n    enabled(Pausable)\n    onlyOwner\n    {\n        _pause();\n    }\n\n    \n    function unPauseToken()\n    external\n    enabled(Pausable)\n    onlyOwner\n    {\n        _unpause();\n    }\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"isTokenPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pauseToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Pausable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"feature\",\"type\":\"uint8\"}],\"name\":\"isEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"AccountBurning\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"unfreezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"AccountFreezing\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_enabledFeatures\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unPauseToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ForceTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"checkTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountFrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"features\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AccountFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AccountUnfrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TokenFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TokenUnfrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"}]","ContractName":"Featured","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000c39bf343cfc1083497549d7f10468769becc79e40000000000000000000000000000000000000000000000000000000000000000","Library":"","LicenseType":"","SwarmSource":"bzzr://7a7160f3998d6959774558fd19b3191263b6171caec83c13c408b0a5eae50eaf"}]}