{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\ninterface ERC20 {\r\n    function totalSupply()  external returns (uint supply);\r\n    function balanceOf(address _owner) external returns (uint balance);\r\n    function transfer(address _to, uint _value) external returns (bool success);\r\n    function transferFrom(address _from, address _to, uint _value) external returns (bool success);\r\n    function approve(address _spender, uint _value) external returns (bool success);\r\n    function allowance(address _owner, address _spender) external view returns (uint remaining);\r\n    function decimals() external view returns(uint digits);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\n\r\ncontract EmpowCreateEosAccount {\r\n    \r\n    event CreateEosAccountEvent(string _name, string _activePublicKey, string _ownerPublicKey);\r\n    \r\n    struct AccountHistory {\r\n        uint32 payment_type;\r\n        string name;\r\n        string activePublicKey;\r\n        string ownerPublicKey;\r\n        uint256 amount;\r\n    }\r\n    \r\n    mapping (address => uint256) public countAccount;\r\n    mapping (address => mapping (uint256 => AccountHistory)) public accountHistories;\r\n    \r\n    ERC20 USDT_CONTRACT = ERC20(0xdAC17F958D2ee523a2206206994597C13D831ec7);\r\n    uint256 public PRICE = 144000000;\r\n    uint256 public USDT_PRICE = 3000000;\r\n    uint256 public NAME_LENGTH_LIMIT = 12;\r\n    uint256 public PUBLIC_KEY_LENGTH_LIMIT = 53;\r\n    address payable owner;\r\n    \r\n    modifier onlyOwner () {\r\n        require(msg.sender == owner, \"owner require\");\r\n        _;\r\n    }\r\n    \r\n    constructor ()\r\n        public\r\n    {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function createEosAccount(string memory _name, string memory _activePublicKey, string memory _ownerPublicKey)\r\n        public\r\n        payable\r\n        returns (bool)\r\n    {\r\n        // check name length\r\n        require(getStringLength(_name) == NAME_LENGTH_LIMIT, \"Name must be 12 characters\");\r\n        // check public key\r\n        require(getStringLength(_activePublicKey) == PUBLIC_KEY_LENGTH_LIMIT, \"Active Public Key not correct\");\r\n        require(getStringLength(_ownerPublicKey) == PUBLIC_KEY_LENGTH_LIMIT, \"Owner Public Key not correct\");\r\n        // check price\r\n        require(msg.value >= PRICE, \"Amount send is not enough\");\r\n        \r\n        // save history\r\n        accountHistories[msg.sender][countAccount[msg.sender]].payment_type = 0; // 1 is USDT, 0 is ETH\r\n        accountHistories[msg.sender][countAccount[msg.sender]].name = _name;\r\n        accountHistories[msg.sender][countAccount[msg.sender]].activePublicKey = _activePublicKey;\r\n        accountHistories[msg.sender][countAccount[msg.sender]].ownerPublicKey = _ownerPublicKey;\r\n        accountHistories[msg.sender][countAccount[msg.sender]].amount = msg.value;\r\n        countAccount[msg.sender]++;\r\n        \r\n        // emit event\r\n        emit CreateEosAccountEvent(_name, _activePublicKey, _ownerPublicKey);\r\n        return true;\r\n    }\r\n    \r\n    function createEosAccountWithUSDT(string memory _name, string memory _activePublicKey, string memory _ownerPublicKey)\r\n        public\r\n        returns (bool)\r\n    {\r\n         // check name length\r\n        require(getStringLength(_name) == NAME_LENGTH_LIMIT, \"Name must be 12 characters\");\r\n        // check public key\r\n        require(getStringLength(_activePublicKey) == PUBLIC_KEY_LENGTH_LIMIT, \"Active Public Key not correct\");\r\n        require(getStringLength(_ownerPublicKey) == PUBLIC_KEY_LENGTH_LIMIT, \"Owner Public Key not correct\");\r\n        // transfer USDT\r\n        require(USDT_CONTRACT.transferFrom(msg.sender, address(this), USDT_PRICE));\r\n        // save history\r\n        accountHistories[msg.sender][countAccount[msg.sender]].payment_type = 1; // 1 is USDT, 0 is ETH\r\n        accountHistories[msg.sender][countAccount[msg.sender]].name = _name;\r\n        accountHistories[msg.sender][countAccount[msg.sender]].activePublicKey = _activePublicKey;\r\n        accountHistories[msg.sender][countAccount[msg.sender]].ownerPublicKey = _ownerPublicKey;\r\n        accountHistories[msg.sender][countAccount[msg.sender]].amount = USDT_PRICE;\r\n        countAccount[msg.sender]++;\r\n        \r\n        // emit event\r\n        emit CreateEosAccountEvent(_name, _activePublicKey, _ownerPublicKey);\r\n        return true;\r\n    }\r\n    \r\n    // OWNER FUNCTIONS\r\n    \r\n    function updateUSDTAddress (ERC20 _address) \r\n        public\r\n        onlyOwner\r\n        returns (bool)\r\n    {\r\n        USDT_CONTRACT = _address;\r\n        return true;\r\n    }\r\n    \r\n    function setPrice (uint256 _price, uint256 _usdtPrice)\r\n        public\r\n        onlyOwner\r\n        returns (bool)\r\n    {\r\n        PRICE = _price;\r\n        USDT_PRICE = _usdtPrice;\r\n        return true;\r\n    }\r\n    \r\n    function ownerWithdraw (uint256 _amount)\r\n        public\r\n        onlyOwner\r\n        returns (bool)\r\n    {\r\n        owner.transfer(_amount);\r\n        return true;\r\n    }\r\n\r\n    function ownerWithdrawUSDT ()\r\n        public\r\n        onlyOwner\r\n        returns(bool)\r\n    {\r\n        USDT_CONTRACT.transfer(owner, USDT_CONTRACT.balanceOf(address(this)));\r\n        return true;\r\n    }\r\n    \r\n    // HELPER FUNCTIONS\r\n    function getStringLength (string memory _string)\r\n        private\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        bytes memory stringBytes = bytes(_string);\r\n        return stringBytes.length;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accountHistories\",\"outputs\":[{\"name\":\"payment_type\",\"type\":\"uint32\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"activePublicKey\",\"type\":\"string\"},{\"name\":\"ownerPublicKey\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NAME_LENGTH_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownerWithdrawUSDT\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ownerWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"USDT_PRICE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_activePublicKey\",\"type\":\"string\"},{\"name\":\"_ownerPublicKey\",\"type\":\"string\"}],\"name\":\"createEosAccountWithUSDT\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"updateUSDTAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_activePublicKey\",\"type\":\"string\"},{\"name\":\"_ownerPublicKey\",\"type\":\"string\"}],\"name\":\"createEosAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PUBLIC_KEY_LENGTH_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_usdtPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"countAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_activePublicKey\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_ownerPublicKey\",\"type\":\"string\"}],\"name\":\"CreateEosAccountEvent\",\"type\":\"event\"}]","ContractName":"EmpowCreateEosAccount","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5e3971a63577f993ea8a3ef97e26397d7185d4b4c7a79f95df640ffbc3a6be79"}]}