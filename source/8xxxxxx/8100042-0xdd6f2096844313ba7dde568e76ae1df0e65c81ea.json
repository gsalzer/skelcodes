{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.5.1 <0.6.0;\r\n\r\ncontract crossword_reward {\r\n    bytes32 solution_hash;\r\n    \r\n    // Contract constructor\r\n    constructor () public {\r\n        solution_hash = 0x2d64478620cf2836ecf1a6ef9ec90e5a540899939c5e411ae44656ddadc6081e;\r\n    }\r\n    \r\n    // Claim the reward\r\n    function claim(bytes20 solution, bytes32 salt) public {\r\n        require(keccak256(abi.encodePacked(solution, salt)) == solution_hash, \"Mauvaise solution ou mauvais sel.\");\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n    \r\n    // Accept any incoming amount\r\n    function () external payable {}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"solution\",\"type\":\"bytes20\"},{\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"crossword_reward","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ec30bf4f43abe936c0a94c24aa760b68a0b549e326c03fc6280058b4197eae41"}]}