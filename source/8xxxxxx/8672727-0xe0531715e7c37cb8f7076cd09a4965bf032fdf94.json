{"status":"1","message":"OK","result":[{"SourceCode":"{\"ERC20StandartBurnable.sol\":{\"content\":\"pragma solidity ^0.5.7;\\r\\n\\r\\nlibrary SafeMath {\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b);\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b \\u003e 0);\\r\\n        uint256 c = a / b;\\r\\n        \\r\\n\\treturn c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b \\u003c= a);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c \\u003e= a);\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b != 0);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract ERC20StandartBurnable {\\r\\n\\tusing SafeMath for uint256;\\r\\n\\tuint public totalSupply;\\r\\n\\t\\r\\n\\tstring public name;\\r\\n\\tuint8 public decimals;\\r\\n\\tstring public symbol;\\r\\n\\tstring public version;\\r\\n\\t\\r\\n\\tmapping (address =\\u003e uint256) balances;\\r\\n\\tmapping (address =\\u003e mapping (address =\\u003e uint)) allowed;\\r\\n\\r\\n\\t//Fix for short address attack against ERC20\\r\\n\\tmodifier onlyPayloadSize(uint size) {\\r\\n\\t\\tassert(msg.data.length == size + 4);\\r\\n\\t\\t_;\\r\\n\\t} \\r\\n\\r\\n\\tfunction balanceOf(address _owner) public view returns (uint balance) {\\r\\n\\t\\treturn balances[_owner];\\r\\n\\t}\\r\\n\\r\\n\\tfunction transfer(address _recipient, uint _value) public onlyPayloadSize(2*32) {\\r\\n\\t    require(balances[msg.sender] \\u003e= _value \\u0026\\u0026 _value \\u003e 0);\\r\\n\\t    balances[msg.sender] = balances[msg.sender].sub(_value);\\r\\n\\t    balances[_recipient] = balances[_recipient].add(_value);\\r\\n\\t    emit Transfer(msg.sender, _recipient, _value);        \\r\\n        }\\r\\n\\r\\n\\tfunction transferFrom(address _from, address _to, uint _value) public {\\r\\n\\t    require(balances[_from] \\u003e= _value \\u0026\\u0026 allowed[_from][msg.sender] \\u003e= _value \\u0026\\u0026 _value \\u003e 0);\\r\\n            balances[_to] = balances[_to].add(_value);\\r\\n            balances[_from] = balances[_from].sub(_value);\\r\\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\\r\\n            emit Transfer(_from, _to, _value);\\r\\n        }\\r\\n\\r\\n\\tfunction  approve(address _spender, uint _value) public {\\r\\n\\t\\tallowed[msg.sender][_spender] = _value;\\r\\n\\t\\temit Approval(msg.sender, _spender, _value);\\r\\n\\t}\\r\\n\\r\\n\\tfunction allowance(address _spender, address _owner) public view returns (uint balance) {\\r\\n\\t\\treturn allowed[_owner][_spender];\\r\\n\\t}\\r\\n        \\r\\n    function burn(uint256 _value) public returns (bool success) {\\r\\n        require(balances[msg.sender] \\u003e= _value);   \\r\\n        balances[msg.sender] -= _value;            \\r\\n        totalSupply -= _value;                      \\r\\n         \\r\\n        return true;\\r\\n    }\\r\\n        \\r\\n    function burnFrom(address _from, uint _value) public returns (bool success) {\\r\\n        require(balances[_from] \\u003e= _value);\\r\\n        require(_value \\u003c= allowed[_from][msg.sender]);\\r\\n        \\r\\n        balances[_from] -= _value;\\r\\n        totalSupply -= _value;\\r\\n        \\r\\n        return true;\\r\\n        \\r\\n    }    \\r\\n\\r\\n\\t//Event which is triggered to log all transfers to this contract\\u0027s event log\\r\\n\\tevent Transfer(\\r\\n\\t\\taddress indexed _from,\\r\\n\\t\\taddress indexed _to,\\r\\n\\t\\tuint _value\\r\\n\\t\\t);\\r\\n\\t\\t\\r\\n\\t//Event which is triggered whenever an owner approves a new allowance for a spender.\\r\\n\\tevent Approval(\\r\\n\\t\\taddress indexed _owner,\\r\\n\\t\\taddress indexed _spender,\\r\\n\\t\\tuint _value\\r\\n\\t\\t);\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n}\"},\"RBXtoken.sol\":{\"content\":\"pragma solidity ^0.5.7;\\r\\n\\r\\nimport \\\"./ERC20StandartBurnable.sol\\\";\\r\\n\\r\\ncontract RBXtoken is ERC20StandartBurnable {\\r\\n\\tconstructor() public {\\r\\n\\t\\ttotalSupply = 1300000000000;\\r\\n\\t\\tname = \\\"Richbit coin\\\";\\r\\n\\t\\tdecimals = 4;\\r\\n\\t\\tsymbol = \\\"RBX\\\";\\r\\n\\t\\tversion = \\\"1.0\\\";\\r\\n\\t\\tbalances[msg.sender] = totalSupply;\\r\\n\\t}\\r\\n}\"}}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"RBXtoken","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://287103d626ee8f1a3ec3ef0d2810e1c6db0376f20289a19a21fb2d8f929d0293"}]}