{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract BadBitSettings {\r\n\r\n    uint public constant GWEI_TO_WEI = 1000000000;\r\n    uint public constant ETH_TO_WEI = 1000000000000000000;\r\n    uint public ORACLIZE_GAS_LIMIT = 220000;\r\n    uint public MAX_GAS_PRICE = 30000000000; // in wei\r\n    uint public MIN_GAS_PRICE = 1000000000; // in wei\r\n    uint public BIG_WIN_THRESHOLD = 3 ether;\r\n    uint public MAX_CHANCE_FOR_BONUS_BETTING = 25;\r\n    uint public MAX_DON_IN_ROW = 3;\r\n    uint public HOUSE_EDGE = 2000;\r\n    uint public MAX_WP = 9500;\r\n    uint public MIN_WP = 476;\r\n    uint public REVENUE_TO_INITIAL_DEPOSIT_RATIO = 2;\r\n    bool public BETS_ALLOWED = true;\r\n    bool public USE_BLOCKHASH_RANDOM_SEED = false;\r\n\r\n    /**\r\n    * @dev mapping holding game addresses\r\n    */\r\n    mapping(address => bool) public isGameAddress;\r\n    /**\r\n    * @dev mapping holding operator addresses\r\n    */\r\n    mapping(address => bool) public isOperatorAddress;\r\n    /**\r\n    * @dev keeps track of all games\r\n    */\r\n    address[] public gameContractAddresses;\r\n    /**\r\n    * @dev keeps track of all operators\r\n    */\r\n    address[] public operators;\r\n    /**\r\n    * @dev keep token win chance reward for each level, stored as percentage times 100\r\n    */\r\n    uint[] public tokenWinChanceRewardForLevel;\r\n    /**\r\n    * @dev keep bonus balance reward for each level\r\n    */\r\n    uint[] public bonusBalanceRewardForLevel;\r\n\r\n    event GamePaused(bool indexed yes);\r\n    event MaxGasPriceSet(uint amount);\r\n    event MinGasPriceSet(uint amount);\r\n    event BigWinThresholdSet(uint amount);\r\n    event MaxChanceForBonusBetSet(uint amount);\r\n    event MaxDonInRowSet(uint count);\r\n    event HouseEdgeSet(uint houseEdge);\r\n    event MaxWPSet(uint maxWp);\r\n    event MinWPSet(uint minWp);\r\n\r\n    modifier onlyOperators() {\r\n        require (isOperatorAddress[msg.sender]);\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        operators.push(msg.sender);\r\n        isOperatorAddress[msg.sender] = true;\r\n\r\n        bonusBalanceRewardForLevel = [0, 0, 0.01 ether, 0.02 ether, 0,\r\n            0.03 ether, 0.04 ether, 0.05 ether, 0, 0.06 ether, 0.07 ether,\r\n            0.08 ether, 0, 0.09 ether, 0.10 ether, 0.11 ether, 0, 0.12 ether,\r\n            0.13 ether, 0.14 ether, 0, 0.15 ether, 0.16 ether, 0.17 ether, 0,\r\n            0.18 ether, 0.19 ether, 0.20 ether, 0, 0.21 ether, 0.22 ether,\r\n            0.23 ether, 0, 0.24 ether, 0.25 ether, 0.26 ether, 0, 0.27 ether,\r\n            0.28 ether, 0.29 ether, 0, 0.30 ether, 0.31 ether, 0.32 ether, 0,\r\n            0.33 ether, 0.34 ether, 0.35 ether, 0, 0.36 ether, 0.37 ether,\r\n            0.38 ether, 0, 0.39 ether, 0.40 ether, 0.41 ether, 0, 0.42 ether,\r\n            0.43 ether, 0.44 ether, 0, 0.45 ether, 0.46 ether, 0.47 ether, 0,\r\n            0.48 ether, 0.49 ether, 0.50 ether, 0, 0.51 ether, 0.52 ether,\r\n            0.53 ether, 0, 0.54 ether, 0.55 ether, 0.56 ether, 0, 0.57 ether,\r\n            0.58 ether, 0.59 ether, 0, 0.60 ether, 0.61 ether, 0.62 ether, 0,\r\n            0.63 ether, 0.64 ether, 0.65 ether, 0, 0.66 ether, 0.67 ether,\r\n            0.68 ether, 0, 0.69 ether, 0.70 ether, 0.71 ether, 0, 0.72 ether,\r\n            0.73 ether, 0.74 ether, 0];\r\n\r\n\r\n        tokenWinChanceRewardForLevel = [0, 0, 0, 0, 40, 40, 40, 40, 80, 80, 80, 80,\r\n            120, 120, 120, 120, 160, 160, 160, 160, 200, 200, 200, 200, 250, 250, 250, 250, 300, 300, 300, 300,\r\n            350, 350, 350, 350, 400, 400, 400, 400, 450, 450, 450, 450, 510, 510, 510, 510, 570, 570, 570, 570,\r\n            630, 630, 630, 630, 690, 690, 690, 690, 750, 750, 750, 750, 820, 820, 820, 820, 890, 890, 890, 890,\r\n            960, 960, 960, 960, 1030, 1030, 1030, 1030, 1100, 1100, 1100, 1100, 1180, 1180, 1180, 1180, 1260, 1260, 1260, 1260,\r\n            1340, 1340, 1340, 1340, 1420, 1420, 1420, 1420, 1500];\r\n    }\r\n\r\n    /**\r\n    * @dev Method that allows operators to add allowed address\r\n    * @param _address represents address that should be added\r\n    */\r\n    function addGame(address _address) public onlyOperators {\r\n        require(!isGameAddress[_address]);\r\n\r\n        gameContractAddresses.push(_address);\r\n        isGameAddress[_address] = true;\r\n    }\r\n\r\n    /**\r\n    * @dev Method that allows operators to remove allowed address\r\n    * @param _address represents address that should be removed\r\n    */\r\n    function removeGame(address _address) public onlyOperators {\r\n        require(isGameAddress[_address]);\r\n\r\n        uint len = gameContractAddresses.length;\r\n\r\n        for (uint i=0; i<len; i++) {\r\n            if (gameContractAddresses[i] == _address) {\r\n                // move last game to i-th position\r\n                gameContractAddresses[i] = gameContractAddresses[len-1];\r\n                // delete last game in array (its already moved so its duplicate)\r\n                delete gameContractAddresses[len-1];\r\n                // resize gameContractAddresses array\r\n                gameContractAddresses.length--;\r\n                // remove allowed address\r\n                isGameAddress[_address] = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n    * @dev Method that allows operators to add allowed address\r\n    * @param _address represents address that should be added\r\n    */\r\n    function addOperator(address _address) public onlyOperators {\r\n        require(!isOperatorAddress[_address]);\r\n\r\n        operators.push(_address);\r\n        isOperatorAddress[_address] = true;\r\n    }\r\n\r\n    /**\r\n    * @dev Method that allows operators to remove allowed address\r\n    * @param _address represents address that should be removed\r\n    */\r\n    function removeOperator(address _address) public onlyOperators {\r\n        require(isOperatorAddress[_address]);\r\n\r\n        uint len = operators.length;\r\n\r\n        for (uint i=0; i<len; i++) {\r\n            if (operators[i] == _address) {\r\n                // move last game to i-th position\r\n                operators[i] = operators[len-1];\r\n                // delete last game in array (its already moved so its duplicate)\r\n                delete operators[len-1];\r\n                // resize operators array\r\n                operators.length--;\r\n                // remove allowed address\r\n                isOperatorAddress[_address] = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function setMaxGasPriceInGwei(uint _maxGasPrice) public onlyOperators {\r\n        MAX_GAS_PRICE = _maxGasPrice * GWEI_TO_WEI;\r\n\r\n        emit MaxGasPriceSet(MAX_GAS_PRICE);\r\n    }\r\n\r\n    function setMinGasPriceInGwei(uint _minGasPrice) public onlyOperators {\r\n        MIN_GAS_PRICE = _minGasPrice * GWEI_TO_WEI;\r\n\r\n        emit MinGasPriceSet(MIN_GAS_PRICE);\r\n    }\r\n\r\n    function setBetsAllowed(bool _betsAllowed) public onlyOperators {\r\n        BETS_ALLOWED = _betsAllowed;\r\n\r\n        emit GamePaused(!_betsAllowed);\r\n    }\r\n\r\n    function setBigWin(uint _bigWin) public onlyOperators {\r\n        BIG_WIN_THRESHOLD = _bigWin;\r\n\r\n        emit BigWinThresholdSet(BIG_WIN_THRESHOLD);\r\n    }\r\n\r\n    function setMaxChanceForBonus(uint _chance) public onlyOperators {\r\n        MAX_CHANCE_FOR_BONUS_BETTING = _chance;\r\n\r\n        emit MaxChanceForBonusBetSet(MAX_CHANCE_FOR_BONUS_BETTING);\r\n    }\r\n\r\n    function setMaxDonInRow(uint _count) public onlyOperators {\r\n        MAX_DON_IN_ROW = _count;\r\n\r\n        emit MaxDonInRowSet(MAX_DON_IN_ROW);\r\n    }\r\n\r\n    function setHouseEdge(uint _edge) public onlyOperators {\r\n        // we allow three decimal places, so it is 100 * 1000\r\n        require(_edge < 100000);\r\n\r\n        HOUSE_EDGE = _edge;\r\n\r\n        emit HouseEdgeSet(HOUSE_EDGE);\r\n    }\r\n\r\n    function setOraclizeGasLimit(uint _gas) public onlyOperators {\r\n        ORACLIZE_GAS_LIMIT = _gas;\r\n    }\r\n\r\n    function setMaxWp(uint _wp) public onlyOperators {\r\n        MAX_WP = _wp;\r\n\r\n        emit MaxWPSet(_wp);\r\n    }\r\n\r\n    function setMinWp(uint _wp) public onlyOperators {\r\n        MIN_WP = _wp;\r\n\r\n        emit MinWPSet(_wp);\r\n    }\r\n\r\n    function setUseBlockhashRandomSeed(bool _use) public onlyOperators {\r\n        USE_BLOCKHASH_RANDOM_SEED = _use;\r\n    }\r\n\r\n    function setRevenueToInitialDepositRatio(uint _ratio) public onlyOperators {\r\n        require(_ratio >= 2);\r\n\r\n        REVENUE_TO_INITIAL_DEPOSIT_RATIO = _ratio;\r\n    }\r\n\r\n    function getOperators() public view returns(address[] memory) {\r\n        return operators;\r\n    }\r\n\r\n    function getGames() public view returns(address[] memory) {\r\n        return gameContractAddresses;\r\n    }\r\n\r\n    function getNumberOfGames() public view returns(uint) {\r\n        return gameContractAddresses.length;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"MIN_WP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BETS_ALLOWED\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REVENUE_TO_INITIAL_DEPOSIT_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_use\",\"type\":\"bool\"}],\"name\":\"setUseBlockhashRandomSeed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOperatorAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_betsAllowed\",\"type\":\"bool\"}],\"name\":\"setBetsAllowed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_CHANCE_FOR_BONUS_BETTING\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETH_TO_WEI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_DON_IN_ROW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BIG_WIN_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ORACLIZE_GAS_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxGasPrice\",\"type\":\"uint256\"}],\"name\":\"setMaxGasPriceInGwei\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_edge\",\"type\":\"uint256\"}],\"name\":\"setHouseEdge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_GAS_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"setRevenueToInitialDepositRatio\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GWEI_TO_WEI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"}],\"name\":\"setMaxDonInRow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chance\",\"type\":\"uint256\"}],\"name\":\"setMaxChanceForBonus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HOUSE_EDGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gas\",\"type\":\"uint256\"}],\"name\":\"setOraclizeGasLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minGasPrice\",\"type\":\"uint256\"}],\"name\":\"setMinGasPriceInGwei\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bonusBalanceRewardForLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bigWin\",\"type\":\"uint256\"}],\"name\":\"setBigWin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_wp\",\"type\":\"uint256\"}],\"name\":\"setMaxWp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getGames\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"USE_BLOCKHASH_RANDOM_SEED\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_wp\",\"type\":\"uint256\"}],\"name\":\"setMinWp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addGame\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumberOfGames\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gameContractAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"operators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenWinChanceRewardForLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_GAS_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isGameAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_WP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"yes\",\"type\":\"bool\"}],\"name\":\"GamePaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MaxGasPriceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MinGasPriceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BigWinThresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MaxChanceForBonusBetSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"MaxDonInRowSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"houseEdge\",\"type\":\"uint256\"}],\"name\":\"HouseEdgeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxWp\",\"type\":\"uint256\"}],\"name\":\"MaxWPSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minWp\",\"type\":\"uint256\"}],\"name\":\"MinWPSet\",\"type\":\"event\"}]","ContractName":"BadBitSettings","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://39e5e51e68aa70bee77cf8c85cec5d56c6a3c9561b3ab7644b0b0255e90823a3"}]}