{"status":"1","message":"OK","result":[{"SourceCode":"//Compatible Solidity Compiler Version\r\n\r\npragma solidity ^0.4.25;\r\n\r\n/*\r\nThis TokenPesa DAO Token contract is based on the ERC20 token contract standard. Additional\r\nfunctionality has been integrated:\r\n*/\r\n\r\ncontract TokenPesaDAOToken  {\r\n\r\n    string public constant name = \"TokenPesa DAO Token\";\r\n\tstring public constant symbol = \"TDAT\";\r\n\tuint8 public constant decimals = 18;\r\n\t\r\n//database to match user Accounts and their respective balances\r\n  mapping(address => uint) _balances;\r\n  mapping(address => mapping( address => uint )) _approvals;\r\n  \r\n//TokenPesa DAO Token Hard Cap\r\n  uint public cap_tdat;\r\n  \r\n//TokenPesa DAO Token Current Supply\r\n  uint public currentSupply;\r\n  \r\n//Authorized TokenPesa DAO Token Minter Ethereum address\r\n  address public minter;\r\n  \r\n//check if Account is the Authorized Minter\r\nmodifier onlyMinter {\r\n    \r\n      if (msg.sender != minter) revert();\r\n      _;\r\n  }\r\n  \r\n//check if hard cap is reached before minting new TDAT tokens\r\nmodifier capReached(uint amount) {\r\n    \r\n    if((currentSupply + amount) > cap_tdat) revert();\r\n    _;\r\n}\r\n\r\n  event Transfer(address indexed from, address indexed to, uint value );\r\n  event Approval(address indexed owner, address indexed spender, uint value );\r\n  event TokenMint(address newTokenHolder, uint amountOfTokens);\r\n  event MinterTransfered(address prevMinter, address nextMinter);\r\n \r\n \r\n//initialize TokenPesa DAO Token\r\n//TokenPesa DAO Token Constructor Configurations \r\n constructor(uint cap_token) public  {\r\n     \r\n    cap_tdat = cap_token;\r\n    minter = msg.sender;\r\n    \r\n  }\r\n\r\n//retrieve number of all TokenPesa DAO Tokens in existence\r\nfunction totalSupply() public constant returns (uint supply) {\r\n    return currentSupply;\r\n  }\r\n\r\n//check TokenPesa DAO Tokens balance of an Ethereum account\r\nfunction balanceOf(address who) public constant returns (uint value) {\r\n    return _balances[who];\r\n  }\r\n\r\n//check how many TokenPesa DAO Tokens a spender is allowed to spend from an owner\r\nfunction allowance(address _owner, address spender) public constant returns (uint _allowance) {\r\n    return _approvals[_owner][spender];\r\n  }\r\n\r\n  // A helper to notify if overflow occurs\r\nfunction safeToAdd(uint a, uint b) internal pure returns (bool) {\r\n    return (a + b >= a && a + b >= b);\r\n  }\r\n\r\n//transfer an amount of TokenPesa DAO Tokens to an Ethereum address\r\nfunction transfer(address to, uint value) public returns (bool ok) {\r\n\r\n    if(_balances[msg.sender] < value) revert();\r\n    \r\n    if(!safeToAdd(_balances[to], value)) revert();\r\n    \r\n    _balances[msg.sender] -= value;\r\n    _balances[to] += value;\r\n    \r\n    emit Transfer(msg.sender, to, value);\r\n    return true;\r\n  }\r\n\r\n//spend TokenPesa DAO Tokens from another Ethereum account that approves you as spender\r\nfunction transferFrom(address from, address to, uint value) public returns (bool ok) {\r\n    // if you don't have enough balance, throw\r\n    if(_balances[from] < value) revert();\r\n\r\n    // if you don't have approval, throw\r\n    if(_approvals[from][msg.sender] < value) revert();\r\n    \r\n    if(!safeToAdd(_balances[to], value)) revert();\r\n    \r\n    // transfer and return true\r\n    _approvals[from][msg.sender] -= value;\r\n    _balances[from] -= value;\r\n    _balances[to] += value;\r\n    \r\n    emit Transfer(from, to, value);\r\n    return true;\r\n  }\r\n  \r\n  \r\n//allow another Ethereum account to spend TokenPesa DAO Tokens from your Account\r\nfunction approve(address spender, uint value)\r\n    public\r\n    returns (bool ok) {\r\n    _approvals[msg.sender][spender] = value;\r\n    \r\n    emit Approval(msg.sender, spender, value);\r\n    return true;\r\n  }\r\n\r\n//mechanism for TokenPesa DAO Tokens Creation\r\n//only minter can create new TokenPesa DAO Tokens\r\n//check if TokenPesa DAO Token Hard Cap is reached before proceeding - revert if true\r\nfunction mint(address recipient, uint amount) onlyMinter capReached(amount)  public returns (bool ok)\r\n  {\r\n    if(!safeToAdd(_balances[recipient], amount)) revert();\r\n    if(!safeToAdd(currentSupply, amount)) revert();\r\n    \r\n   _balances[recipient] += amount;  \r\n   currentSupply += amount;\r\n    \r\n    emit TokenMint(recipient, amount);\r\n    return true;\r\n  }\r\n  \r\n//transfer the priviledge of creating new TokenPesa DAO Tokens to another Ethereum account\r\nfunction transferMintership(address newMinter) public onlyMinter returns (bool ok)\r\n  {\r\n    minter = newMinter;\r\n    \r\n    emit MinterTransfered(minter, newMinter);\r\n     return true;\r\n  }\r\n  \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap_tdat\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newMinter\",\"type\":\"address\"}],\"name\":\"transferMintership\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"_allowance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"cap_token\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newTokenHolder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountOfTokens\",\"type\":\"uint256\"}],\"name\":\"TokenMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"prevMinter\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"nextMinter\",\"type\":\"address\"}],\"name\":\"MinterTransfered\",\"type\":\"event\"}]","ContractName":"TokenPesaDAOToken","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000022bdd88fed9efc6a000000","Library":"","SwarmSource":"bzzr://fd42c50788d9250740841a8fcefeb15492338112150179c1f59456d124d46148"}]}