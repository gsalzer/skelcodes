{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.11;\r\n\r\ninterface Unisocks {\r\n    function changeURI(address _newURI) external;\r\n    function changeMinter(address _minter) external;\r\n    function mint(address _to) external returns (bool);\r\n}\r\n\r\ncontract UnisocksController {\r\n    Unisocks public unisocks;\r\n    mapping (address => bool) public owners;\r\n\r\n    modifier ensureCallerIsOwner() {\r\n        require(owners[msg.sender], \"Caller is not an owner.\");\r\n        _;\r\n    }\r\n\r\n    constructor () public {\r\n        unisocks = Unisocks(0x65770b5283117639760beA3F867b69b3697a91dd);\r\n        owners[msg.sender] = true;\r\n    }\r\n\r\n    function _addOwner(address newOwner) private {\r\n        owners[newOwner] = true;\r\n    }\r\n\r\n    function addOwner(address newOwner) public ensureCallerIsOwner {\r\n        _addOwner(newOwner);\r\n    }\r\n\r\n    function addOwners(address[] memory newOwners) public ensureCallerIsOwner {\r\n        for (uint i; i < newOwners.length; i++) {\r\n            _addOwner(newOwners[i]);\r\n        }\r\n    }\r\n\r\n    function _removeOwner(address currentOwner) private {\r\n        owners[currentOwner] = false;\r\n    }\r\n\r\n    function removeOwner(address currentOwner) public ensureCallerIsOwner {\r\n        _removeOwner(currentOwner);\r\n    }\r\n\r\n    function removeOwners(address[] memory currentOwners) public ensureCallerIsOwner {\r\n        for (uint i; i < currentOwners.length; i++) {\r\n            _removeOwner(currentOwners[i]);\r\n        }\r\n    }\r\n\r\n    function changeURI(address newURI) public ensureCallerIsOwner {\r\n        unisocks.changeURI(newURI);\r\n    }\r\n\r\n    function changeMinter(address minter) public ensureCallerIsOwner {\r\n        unisocks.changeMinter(minter);\r\n    }\r\n\r\n    function _mint(address to) private {\r\n        require(unisocks.mint(to), 'Minting was unsuccessful.');\r\n    }\r\n\r\n    function mint(address to) public ensureCallerIsOwner {\r\n        _mint(to);\r\n    }\r\n\r\n    function mint(address[] memory tos) public ensureCallerIsOwner {\r\n        for (uint i; i < tos.length; i++) {\r\n            _mint(tos[i]);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"changeMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newOwners\",\"type\":\"address[]\"}],\"name\":\"addOwners\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"currentOwners\",\"type\":\"address[]\"}],\"name\":\"removeOwners\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tos\",\"type\":\"address[]\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newURI\",\"type\":\"address\"}],\"name\":\"changeURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unisocks\",\"outputs\":[{\"internalType\":\"contract Unisocks\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"UnisocksController","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU GPLv3","SwarmSource":"bzzr://b3cc06cb4b26474d87e529dff42c2d631d1c8c087179d9247007bef82b617474"}]}