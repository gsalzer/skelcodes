{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\r\n///////////////////////////////////////////////////\r\n//  \r\n//  `iCashweb` ICW Token Contract\r\n//\r\n//  Name: iCashweb\r\n//  Symbol: ICWc\r\n//  Decimal Scheme: 18\r\n//  \r\n//  by Nishad Vadgama\r\n///////////////////////////////////////////////////\r\n\r\nlibrary iMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n    function add(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract iCashwebToken {\r\n    \r\n    address payable iOwner;\r\n    mapping(address => bool) iOperable;\r\n    bool _mintingStarted;\r\n    bool _minted;\r\n\r\n    modifier notMinted() {\r\n        require(_minted == false);\r\n        _;\r\n    }\r\n\r\n    modifier mintingStarted() {\r\n        require(_mintingStarted == true);\r\n        _;\r\n    }\r\n    \r\n    modifier iOnlyOwner() {\r\n        require(msg.sender == iOwner || iOperable[msg.sender] == true);\r\n        _;\r\n    }\r\n    \r\n    function manageOperable(address _from, bool _value) public returns(bool) {\r\n        require(msg.sender == iOwner);\r\n        iOperable[_from] = _value;\r\n        emit Operable(msg.sender, _from, _value);\r\n        return true;\r\n    }\r\n\r\n    function isOperable(address _addr) public view returns(bool) {\r\n        return iOperable[_addr];\r\n    }\r\n\r\n    function manageMinting(bool _val) public {\r\n        require(msg.sender == iOwner);\r\n        _mintingStarted = _val;\r\n        emit Minting(_val);\r\n    }\r\n\r\n    function destroyContract() public {\r\n        require(msg.sender == iOwner);\r\n        selfdestruct(iOwner);\r\n    }\r\n    \r\n    event Operable(address _owner, address _from, bool _value);\r\n    event Minting(bool _value);\r\n    event OwnerTransferred(address _from, address _to);\r\n}\r\n\r\ncontract iCashweb is iCashwebToken {\r\n    using iMath for uint256;\r\n    \r\n    string public constant name = \"iCashweb\";\r\n    string public constant symbol = \"ICWc\";\r\n    uint8 public constant decimals = 18;\r\n    uint256 _totalSupply;\r\n    uint256 _rate;\r\n    uint256 _totalMintSupply;\r\n    uint256 _maxMintable;\r\n    mapping (address => uint256) _balances;\r\n    mapping (address => mapping (address => uint256)) _approvals;\r\n    \r\n    constructor (uint256 _price, uint256 _val) public {\r\n        iOwner = msg.sender;\r\n        _mintingStarted = true;\r\n        _minted = false;\r\n        _rate = _price;\r\n        uint256 tokenVal = _val.mul(10 ** uint256(decimals));\r\n        _totalSupply = tokenVal.mul(2);\r\n        _maxMintable = tokenVal;\r\n        _balances[msg.sender] = tokenVal;\r\n        emit Transfer(address(0), msg.sender, tokenVal);\r\n    }\r\n\r\n    function getMinted() public view returns(bool) {\r\n        return _minted;\r\n    }\r\n\r\n    function isOwner(address _addr) public view returns(bool) {\r\n        return _addr == iOwner;\r\n    }\r\n\r\n    function getMintingStatus() public view returns(bool) {\r\n        return _mintingStarted;\r\n    }\r\n\r\n    function getRate() public view returns(uint256) {\r\n        return _rate;\r\n    }\r\n\r\n    function totalMintSupply() public view returns(uint256) {\r\n        return _totalMintSupply;\r\n    }\r\n    \r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n    \r\n    function balanceOf(address _addr) public view returns (uint256) {\r\n        return _balances[_addr];\r\n    }\r\n    \r\n    function allowance(address _from, address _to) public view returns (uint256) {\r\n        return _approvals[_from][_to];\r\n    }\r\n    \r\n    function transfer(address _to, uint _val) public returns (bool) {\r\n        assert(_balances[msg.sender] >= _val && msg.sender != _to);\r\n        _balances[msg.sender] = _balances[msg.sender].sub(_val);\r\n        _balances[_to] = _balances[_to].add(_val);\r\n        emit Transfer(msg.sender, _to, _val);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint _val) public returns (bool) {\r\n        assert(_balances[_from] >= _val);\r\n        assert(_approvals[_from][msg.sender] >= _val);\r\n        _approvals[_from][msg.sender] = _approvals[_from][msg.sender].sub(_val);\r\n        _balances[_from] = _balances[_from].sub(_val);\r\n        _balances[_to] = _balances[_to].add(_val);\r\n        emit Transfer(_from, _to, _val);\r\n        return true;\r\n    }\r\n    \r\n    function approve(address _to, uint256 _val) public returns (bool) {\r\n        _approvals[msg.sender][_to] = _val;\r\n        emit Approval(msg.sender, _to, _val);\r\n        return true;\r\n    }\r\n    \r\n    function () external mintingStarted payable  {\r\n        assert(msg.value > 0);\r\n        uint tokens = msg.value.mul(_rate);\r\n        uint totalToken = _totalMintSupply.add(tokens);\r\n        assert(_maxMintable >= totalToken);\r\n        _balances[msg.sender] = _balances[msg.sender].add(tokens);\r\n        _totalMintSupply = _totalMintSupply.add(tokens);\r\n        iOwner.transfer(msg.value);\r\n        emit Transfer(address(0), msg.sender, tokens);\r\n    }\r\n    \r\n    function moveMintTokens(address _from, address _to, uint256 _value) public iOnlyOwner returns(bool) {\r\n        require(_to != _from);\r\n        require(_balances[_from] >= _value);\r\n        _balances[_from] = _balances[_from].sub(_value);\r\n        _balances[_to] = _balances[_to].add(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    function transferMintTokens(address _to, uint256 _value) public iOnlyOwner returns(bool) {\r\n        uint totalToken = _totalMintSupply.add(_value);\r\n        require(_maxMintable >= totalToken);\r\n        _balances[_to] = _balances[_to].add(_value);\r\n        _totalMintSupply = _totalMintSupply.add(_value);\r\n        emit Transfer(address(0), _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function releaseMintTokens() public notMinted returns(bool) {\r\n        require(msg.sender == iOwner);\r\n        uint256 releaseAmount = _maxMintable.sub(_totalMintSupply);\r\n        uint256 totalReleased = _totalMintSupply.add(releaseAmount);\r\n        require(_maxMintable >= totalReleased);\r\n        _totalMintSupply = _totalMintSupply.add(releaseAmount);\r\n        _balances[msg.sender] = _balances[msg.sender].add(releaseAmount);\r\n        _minted = true;\r\n        emit Transfer(address(0), msg.sender, releaseAmount);\r\n        emit Release(msg.sender, releaseAmount);\r\n        return true;\r\n    }\r\n\r\n    function changeRate(uint256 _value) public returns (bool) {\r\n        require(msg.sender == iOwner && _value > 0);\r\n        _rate = _value;\r\n        return true;\r\n    }\r\n\r\n    function transferOwnership(address payable _to) public {\r\n        require(msg.sender == iOwner && _to != msg.sender);  \r\n        address oldOwner = iOwner;\r\n        uint256 balAmount = _balances[oldOwner];\r\n        _balances[_to] = _balances[_to].add(balAmount);\r\n        _balances[oldOwner] = 0;\r\n        iOwner = _to;\r\n        emit Transfer(oldOwner, _to, balAmount);\r\n        emit OwnerTransferred(oldOwner, _to);\r\n    }\r\n    \r\n    event Release(address _addr, uint256 _val);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _from, address indexed _to, uint256 _value);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroyContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferMintTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"manageOperable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseMintTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isOperable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"moveMintTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"changeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMintSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMintingStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_val\",\"type\":\"bool\"}],\"name\":\"manageMinting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_val\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"Release\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"Operable\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"Minting\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnerTransferred\",\"type\":\"event\"}]","ContractName":"iCashweb","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000000000000000000000000000001dcd6500","Library":"","SwarmSource":"bzzr://7872c9325254c006c452ad53557790e4511208bcd21528de255c1fece5ac81e2"}]}