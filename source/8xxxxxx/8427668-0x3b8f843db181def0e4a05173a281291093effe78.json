{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.21 <0.6.0;\r\n\r\ncontract SatoshiMoon {\r\n    address public owner;\r\n    address payable public admin1;\r\n    address payable public admin2;\r\n    address[] public addresses;\r\n\r\n    uint public admin1Percent = 50;\r\n    uint public admin2Percent = 50;\r\n\r\n    uint public firstReferrerPercent = 20;\r\n    uint public otherReferrerPercent = 5;\r\n\r\n    mapping(address => Investor) investors;\r\n\r\n    event Invest(address addr, uint amount, address referrer);\r\n    event Referrer(address addr, address referrer);\r\n    event Payout(address refferer, uint amount, address emitter);\r\n\r\n    struct Investor {\r\n        uint id;\r\n        address referrer;\r\n    }\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        addresses.length = 1;\r\n    }\r\n\r\n    function setAdmins(address _admin1, address _admin2) public onlyOwner {\r\n        require(_admin1 != address(0), 'First admin is required');\r\n        admin1 = address(uint160(address(_admin1)));\r\n        admin2 = address(uint160(address(_admin2)));\r\n    }\r\n\r\n    function setAdminsPercent(uint _admin1Percent, uint _admin2Percent) public onlyOwner {\r\n        admin1Percent = _admin1Percent;\r\n        admin2Percent = _admin2Percent;\r\n    }\r\n\r\n    function getAdmins() public view returns (address, address) {\r\n        return (admin1, admin2);\r\n    }\r\n\r\n    function setPercents(uint _firstPercent, uint _otherPercent) public onlyOwner {\r\n        firstReferrerPercent = _firstPercent;\r\n        otherReferrerPercent = _otherPercent;\r\n    }\r\n\r\n    function getPercents() public view returns (uint, uint, uint, uint) {\r\n        return (admin1Percent, admin2Percent, firstReferrerPercent, otherReferrerPercent);\r\n    }\r\n\r\n    function() payable external {\r\n        Investor storage user = investors[msg.sender];\r\n\r\n        if (user.id == 0) {\r\n            // new investor\r\n            user.id = addresses.length;\r\n            addresses.push(msg.sender);\r\n            address ref = bytesToAddress(msg.data);\r\n            if (investors[ref].id > 0 && ref != msg.sender) {\r\n                user.referrer = ref;\r\n                emit Referrer(msg.sender, user.referrer);\r\n            }\r\n        }\r\n\r\n        emit Invest(msg.sender, msg.value, user.referrer);\r\n\r\n        uint value = msg.value;\r\n        address payable referrer = address(uint160(address(user.referrer)));\r\n        for (uint i = 0; i < 7; i++) {\r\n            if (referrer != address(0)) {\r\n                uint txValue = i == 0 ? msg.value / 100 * firstReferrerPercent : msg.value / 100 * otherReferrerPercent;\r\n                if (referrer.send(txValue)) {\r\n                    emit Payout(referrer, txValue, msg.sender);\r\n                    value -= txValue;\r\n                }\r\n                referrer = address(uint160(address(investors[referrer].referrer)));\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (admin2 != address(0)) {\r\n            uint admin2Value = value / 100 * admin2Percent;\r\n            admin2.transfer(admin2Value);\r\n            emit Payout(admin2, admin2Value, msg.sender);\r\n            value -= admin2Value;\r\n        }\r\n\r\n        admin1.transfer(value);\r\n        emit Payout(admin1, value, msg.sender);\r\n    }\r\n\r\n    modifier onlyOwner {if (msg.sender == owner) _;}\r\n\r\n    function bytesToAddress(bytes memory bys) private pure returns (address addr) {\r\n        assembly {\r\n            addr := mload(add(bys, 20))\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getPercents\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAdmins\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin1Percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_firstPercent\",\"type\":\"uint256\"},{\"name\":\"_otherPercent\",\"type\":\"uint256\"}],\"name\":\"setPercents\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin2Percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin1\",\"type\":\"address\"},{\"name\":\"_admin2\",\"type\":\"address\"}],\"name\":\"setAdmins\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"firstReferrerPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"otherReferrerPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin1Percent\",\"type\":\"uint256\"},{\"name\":\"_admin2Percent\",\"type\":\"uint256\"}],\"name\":\"setAdminsPercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"Invest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"Referrer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"refferer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"Payout\",\"type\":\"event\"}]","ContractName":"SatoshiMoon","CompilerVersion":"v0.5.2+commit.1df8f40c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://abdbbe40a457c6b393ebbd8c7f6a7fc649c069b68fc7ee5f08ec2c5f3b25bebb"}]}