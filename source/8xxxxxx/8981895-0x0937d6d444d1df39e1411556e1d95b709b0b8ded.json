{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.12;\r\n\r\ncontract RunDice {\r\n    address public owner;\r\n    address private nextOwner;\r\n    address private RunDiceToken; \r\n    \r\n    modifier onlyBy(address user) {\r\n        require(msg.sender == user, \"Caller have no access to this method.\");\r\n        _;\r\n    }\r\n    \r\n    event Payment(\r\n        address indexed user,\r\n        uint amount\r\n        );\r\n    event PaymentFailed(\r\n        address indexed user,\r\n        uint amount\r\n        );\r\n    event Rolled(\r\n        int16 number,\r\n        uint amount,\r\n        address indexed user\r\n        );\r\n    \r\n    event Deposited(\r\n        address indexed user,\r\n        uint amount\r\n        );\r\n    event Withdrew(\r\n        address indexed user,\r\n        uint amount\r\n        );\r\n    event WithdrewFailed(\r\n        address indexed user,\r\n        uint amount\r\n        );\r\n    event TokensSent(\r\n        uint amount\r\n        );\r\n    event TokensSendFailed(\r\n        uint amount\r\n        );\r\n    event NotEnough(uint amount);\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function Random(uint min, uint max) view private returns (uint) {\r\n        bytes32 hash = keccak256(abi.encodePacked(min, max, blockhash(block.number)));\r\n        return min + ((uint(hash) + block.difficulty) % (max - min + 1));\r\n    }\r\n    \r\n    function ChangeOwner(address newOwner) onlyBy(owner) public {\r\n        nextOwner = newOwner;\r\n    }\r\n    \r\n    function AcceptOwner() onlyBy(nextOwner) public {\r\n        owner = nextOwner;\r\n    }\r\n    \r\n    function Roll(int16 min, int16 max) payable public {\r\n        require (min >= 0 && max <= 9999 && min <= max, \"Min and Max parameters set wrong.\");\r\n        require (msg.value >= 100000000000000, \"Bet amount set wrong.\");\r\n        \r\n        uint amount = msg.value;\r\n        int16 number = int16(Random(0, 9999));\r\n        \r\n        if(number >= min && number <= max) {\r\n            address payable to = msg.sender;\r\n            uint multiply = uint(100000000 / uint((max - min + 1)));\r\n            uint value = amount * multiply / 10000000 * 975;\r\n            \r\n            emit Rolled(number, value, to);\r\n            \r\n            if(to.send(value)) {\r\n                emit Payment(to, value);\r\n            }\r\n            else {\r\n                emit PaymentFailed(to, value);\r\n                if(!to.send(amount)) {\r\n                    emit NotEnough(value - amount);\r\n                }\r\n            }\r\n        }\r\n        \r\n        else {\r\n            emit Rolled(number, 0, msg.sender);\r\n        }\r\n    }\r\n    \r\n    function Deposit() onlyBy(owner) payable public {\r\n        emit Deposited(msg.sender, msg.value);\r\n    }\r\n    \r\n    function Withdraw(uint value) onlyBy(owner) public {\r\n        address payable to = msg.sender;\r\n        if(value <= address(this).balance) {\r\n            if(to.send(value)) {\r\n                emit Withdrew(to, value);\r\n            }\r\n            else {\r\n                emit WithdrewFailed(to, value);\r\n            }\r\n        }\r\n        \r\n        else {\r\n            emit WithdrewFailed(to, value);\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NotEnough\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Payment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int16\",\"name\":\"number\",\"type\":\"int16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Rolled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensSendFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrew\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrewFailed\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"AcceptOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"int16\",\"name\":\"min\",\"type\":\"int16\"},{\"internalType\":\"int16\",\"name\":\"max\",\"type\":\"int16\"}],\"name\":\"Roll\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"RunDice","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://e9a88e96c7782dbafb356fc4f27d0ac2e375328d47552213a3a80733f70f9c9a"}]}