{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2019-09-09\r\n * BEB dapp for www.betbeb.com\r\n*/\r\npragma solidity^0.4.24;  \r\ninterface tokenTransfer {\r\n    function transfer(address receiver, uint amount);\r\n    function transferFrom(address _from, address _to, uint256 _value);\r\n    function balanceOf(address receiver) returns(uint256);\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n \r\n    function Ownable () public {\r\n        owner = msg.sender;\r\n    }\r\n \r\n    modifier onlyOwner {\r\n        require (msg.sender == owner);\r\n        _;\r\n    }\r\n \r\n    /**\r\n     * @param  newOwner address\r\n     */\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        if (newOwner != address(0)) {\r\n        owner = newOwner;\r\n      }\r\n    }\r\n}\r\n\r\ncontract BEBmining is Ownable{\r\ntokenTransfer public bebTokenTransfer; //代币 \r\n    uint8 decimals = 18;\r\n   struct BebUser {\r\n        address customerAddr;\r\n        uint256 amount; \r\n        uint256 bebtime;\r\n        uint256 interest;\r\n    }\r\n    //ETH miner\r\n    struct miner{\r\n        uint256 mining;\r\n        uint256 _mining;\r\n        uint256 lastDate;\r\n        uint256 amountdays;\r\n        uint256 ethbomus;\r\n        uint256 amountTotal;\r\n        uint256 ETHV1;\r\n        uint256 ETHV2;\r\n        uint256 ETHV3;\r\n        uint256 ETHV4;\r\n        uint256 ETHV5;\r\n        uint256 IntegralMining;\r\n    }\r\n    mapping(address=>miner)public miners;\r\n    address[]public minersArray;\r\n    uint256 ethExchuangeRate=210;//eth-usd\r\n    uint256 bebethexchuang=105000;//beb-eth\r\n    uint256 bebethex=100000;//eth-beb\r\n    uint256 bounstotal;\r\n    uint256 TotalInvestment;\r\n    uint256 sumethbos;\r\n    uint256 depreciationTime=120;\r\n    uint256 SellBeb;//SellBeb MAX 10000BEB\r\n    uint256 BuyBeb;//BuyBeb MAX 100000BEB\r\n    uint256 IncomePeriod=730;//Income period\r\n    address addressDraw;\r\n    uint256 intotime=1579073112;\r\n    event bomus(address to,uint256 amountBouns,string lx);\r\n    function BEBmining(address _tokenAddress,address Draw){\r\n         bebTokenTransfer = tokenTransfer(_tokenAddress);\r\n         addressDraw=Draw;\r\n     }\r\n      //BUY Ethminter\r\n    function EthTomining(address _addr)payable public{\r\n        uint256 amount=msg.value;\r\n        uint256 usdt=amount;\r\n        uint256 _udst=amount;\r\n        miner storage user=miners[_addr];\r\n        require(amount>800000000000000000);\r\n        if(usdt>40000000000000000000){\r\n           usdt=amount*150/100;\r\n           user.ETHV5+=1;\r\n        }else{\r\n            if (usdt > 25000000000000000000){\r\n                    usdt = amount* 130 / 100;\r\n                    user.ETHV4+=1;\r\n                }\r\n                else{\r\n                    if (usdt > 9000000000000000000){\r\n                        usdt = amount * 120 / 100;\r\n                         user.ETHV3+=1;\r\n                    }\r\n                    else{\r\n                        if (usdt > 4000000000000000000){\r\n                            usdt = amount * 110 / 100;\r\n                             user.ETHV2+=1;\r\n                        }\r\n                        else{\r\n                          user.ETHV1+=1;  \r\n                        }\r\n                    }\r\n                }\r\n        }\r\n        uint256 _transfer=amount*15/100;\r\n        addressDraw.transfer(_transfer);\r\n        TotalInvestment+=usdt;\r\n        user.mining+=usdt;\r\n        user._mining+=_udst;\r\n        //user._mining+=_udst;\r\n        user.lastDate=now;\r\n        bomus(msg.sender,usdt,\"Purchase success!\");\r\n    }\r\n    //BUY BEBminter\r\n    function BebTomining(uint256 _value,address _addr)public{\r\n        uint256 usdt=_value* 10 ** 18;\r\n        uint256 _udst=usdt/bebethex;\r\n        uint256 bebudst=_udst;\r\n        miner storage user=miners[_addr];\r\n        require(usdt>40000000000000000000000);\r\n        if(usdt>2000000000000000000000000){\r\n           _udst=usdt/bebethex*150/100;\r\n        }else{\r\n            if (usdt > 400000000000000000000000){\r\n                    _udst = usdt / bebethex * 130 / 100;\r\n\r\n                }\r\n                else{\r\n                    if (usdt > 200000000000000000000000){\r\n                        _udst = usdt / bebethex * 120 / 100;\r\n                    }\r\n                    else{\r\n                        if (usdt > 120000000000000000000000){\r\n                            _udst = usdt / bebethex * 110 / 100;\r\n                        }else{\r\n                          //user.BEBV1+=1;  \r\n                        }\r\n                    }\r\n                }\r\n                \r\n            }\r\n        bebTokenTransfer.transferFrom(msg.sender,address(this),usdt);\r\n        TotalInvestment+=_udst;\r\n        user.mining+=_udst;\r\n        user._mining+=bebudst;\r\n        user.lastDate=now;\r\n        bomus(msg.sender,_udst,\"Purchase success!\");\r\n    }\r\n    //BUY  积分 minter\r\n    function integralTomining(uint256 _value,address _addr)onlyOwner{\r\n        uint256 eth=_value* 10 ** 18;\r\n        uint256 _eth=eth/bebethex;\r\n        miner storage user=miners[_addr];\r\n        bebTokenTransfer.transferFrom(msg.sender,address(this),eth);\r\n        TotalInvestment+=_eth;\r\n        user.mining+=_eth;\r\n        if(user.lastDate==0){\r\n           user.lastDate=now; \r\n        }\r\n        uint256 jifen=_value/50000;\r\n        user.IntegralMining+=jifen;\r\n        //user.lastDate=now;\r\n        bomus(_addr,_eth,\"Purchase success!\");\r\n    }\r\n    //BUY  迁移合约\r\n    function migrateTomining(uint256 _value,uint256 _minin,uint256 time,uint256 _amountTotal,address _addr)onlyOwner{\r\n        require(intotime>now);//函数过期功能作废\r\n        miner storage user=miners[_addr];\r\n        uint256 BEBETH=_minin* 10 ** 18;\r\n        uint256 _udst=_value/ethExchuangeRate;//USD-ETH\r\n        uint256 udst=BEBETH/bebethex;//BEB-ETH\r\n        user.amountTotal=_amountTotal;//ETH\r\n        user.mining+=_udst;\r\n        user._mining+=udst;\r\n        user.lastDate=time;\r\n    }\r\n    function setTomining(uint256 _value,uint256 _minin,address _addr)onlyOwner{\r\n        require(intotime>now);//函数过期功能作废\r\n        miner storage user=miners[_addr];\r\n        user.mining-=_value;//ETH\r\n        user._mining-=_minin;//ETH\r\n    }\r\n    function setToTomining(uint256 _value,uint256 _minin,address _addr)onlyOwner{\r\n        require(intotime>now);//函数过期功能作废\r\n        miner storage user=miners[_addr];\r\n        user.mining+=_value;//ETH\r\n        user._mining+=_minin;//ETH\r\n    }\r\n    //执行地址\r\n    function setaddress(address _addr)onlyOwner{\r\n        addressDraw=_addr;\r\n    }\r\n    function freeSettlement()public{\r\n        miner storage user=miners[msg.sender];\r\n        uint256 amuont=user.mining;\r\n        require(amuont>0,\"You don't have a mining machine\");\r\n        uint256 _ethbomus=user.ethbomus;\r\n        uint256 _lastDate=user.lastDate;\r\n        uint256 _amountTotal=user.amountTotal;\r\n        uint256 sumincome=_amountTotal*100/amuont;\r\n        uint256 depreciation=(now-_lastDate)/depreciationTime;\r\n        require(depreciation>0,\"Less than 1 day of earnings\");\r\n        //The expiration of the income period, the mining machine scrapped\r\n        uint256 Bebday=amuont*depreciation/100;\r\n        uint256 profit=Bebday;\r\n        require(profit>0,\"Mining amount 0\");\r\n        if(sumincome>IncomePeriod){\r\n           uint256 _Bebday=amuont*depreciation/100*3/100;\r\n           require(this.balance>_Bebday,\"Insufficient contract balance\");\r\n            user.lastDate=now;\r\n            user.ethbomus+=_Bebday;\r\n            user.amountTotal+=_Bebday;\r\n            user.amountdays+=depreciation;\r\n            bounstotal+=_Bebday;\r\n            user.ethbomus=0;\r\n            sumethbos=0;\r\n           msg.sender.transfer(_Bebday);\r\n           if(user.amountdays>730){\r\n               //收益730天后报废\r\n             //Mining machine scrap\r\n           user.mining=0;\r\n           user.lastDate=0;\r\n           user.ethbomus=0;\r\n           sumethbos=0;\r\n           user.amountTotal=0;\r\n           user.amountdays=0;\r\n           user.ETHV1=0;\r\n           user.ETHV2=0;\r\n           user.ETHV3=0;\r\n           user.ETHV4=0;\r\n           user.ETHV5=0;\r\n           user.IntegralMining=0;\r\n           user._mining=0;\r\n           }\r\n        }else{\r\n            require(this.balance>profit,\"Insufficient contract balance\");\r\n            user.lastDate=now;\r\n            user.ethbomus+=Bebday;\r\n            user.amountTotal+=Bebday;\r\n            user.amountdays+=depreciation;\r\n            bounstotal+=profit;\r\n            user.ethbomus=0;\r\n            sumethbos=0;\r\n           msg.sender.transfer(profit);  \r\n        }\r\n        \r\n    }\r\n    function Refund()public{\r\n        miner storage user=miners[msg.sender];\r\n        uint256 benjin=user._mining-user.amountTotal;\r\n        uint256 dayts=user.amountdays;\r\n        uint256 dayxi=benjin*1/1000*dayts;\r\n        uint256 _amount=benjin+dayxi;\r\n        require(dayts<30);\r\n        require(_amount>0,\"Insufficient contract balance\");\r\n        require(this.balance>_amount,\"Insufficient contract balance\");\r\n        msg.sender.transfer(_amount);\r\n           user.mining=0;\r\n           user.lastDate=0;\r\n           user.ethbomus=0;\r\n           sumethbos=0;\r\n           user.amountTotal=0;\r\n           user.amountdays=0;\r\n           user.ETHV1=0;\r\n           user.ETHV2=0;\r\n           user.ETHV3=0;\r\n           user.ETHV4=0;\r\n           user.ETHV5=0;\r\n           user.IntegralMining=0;\r\n           user._mining=0;\r\n    }\r\n     function querBalance()public view returns(uint256){\r\n         return this.balance;\r\n     }\r\n    function querYrevenue()public view returns(uint256,uint256,uint256,uint256,uint256,uint256){\r\n        miner storage user=miners[msg.sender];\r\n        uint256 _amuont=user.mining;\r\n        uint256 _min=user._mining;\r\n        uint256 _amountTotal=user.amountTotal;\r\n        if(_amuont==0){\r\n            percentage=0;\r\n        }else{\r\n        uint256 percentage=100-(_amountTotal*100/_amuont*100/730);    \r\n        }\r\n        uint256 _lastDate=user.lastDate;\r\n        uint256 dayzmount=_amuont/100;\r\n        uint256 depreciation=(now-_lastDate)/depreciationTime;\r\n        //require(depreciation>0,\"Less than 1 day of earnings\");\r\n        uint256  Bebday=_amuont*depreciation/100;\r\n                 sumethbos=Bebday;\r\n\r\n        uint256 profit=sumethbos;\r\n        return (percentage,dayzmount,_min,profit,user.amountTotal,user.lastDate);\r\n    }\r\n    function getquerYrevenue()public view returns(uint256,uint256,uint256){\r\n        miner storage user=miners[msg.sender];\r\n        return (user.mining,user.amountTotal,user.lastDate);\r\n    }\r\n    function RefundData()public view returns(uint256,uint256,uint256,uint256){\r\n        miner storage user=miners[msg.sender];\r\n        uint256 benjin=user._mining-user.amountTotal;\r\n        uint256 dayts=user.amountdays;\r\n        uint256 dayxi=benjin*1/1000*dayts;\r\n        return (user._mining,user.amountTotal,dayxi,benjin+dayxi);\r\n    }\r\n    function ModifyexchangeRate(uint256 sellbeb,uint256 buybeb,uint256 _ethExchuangeRate,uint256 maxsell,uint256 maxbuy) onlyOwner{\r\n        ethExchuangeRate=_ethExchuangeRate;\r\n        bebethexchuang=sellbeb;\r\n        bebethex=buybeb;\r\n        SellBeb=maxsell* 10 ** 18;\r\n        BuyBeb=maxbuy* 10 ** 18;\r\n        \r\n    }\r\n    // sellbeb-eth\r\n    function sellBeb(uint256 _sellbeb)public {\r\n        uint256 _sellbebt=_sellbeb* 10 ** 18;\r\n         require(_sellbeb>0,\"The exchange amount must be greater than 0\");\r\n         require(_sellbeb<SellBeb,\"More than the daily redemption limit\");\r\n         uint256 bebex=_sellbebt/bebethexchuang;\r\n         require(this.balance>bebex,\"Insufficient contract balance\");\r\n         bebTokenTransfer.transferFrom(msg.sender,address(this),_sellbebt);\r\n         msg.sender.transfer(bebex);\r\n    }\r\n    //buyBeb-eth\r\n    function buyBeb() payable public {\r\n        uint256 amount = msg.value;\r\n        uint256 bebamountub=amount*bebethex;\r\n        uint256 _transfer=amount*15/100;\r\n        require(getTokenBalance()>bebamountub);\r\n        addressDraw.transfer(_transfer);\r\n        bebTokenTransfer.transfer(msg.sender,bebamountub);  \r\n    }\r\n    function queryRate() public view returns(uint256,uint256,uint256,uint256,uint256){\r\n        return (ethExchuangeRate,bebethexchuang,bebethex,SellBeb,BuyBeb);\r\n    }\r\n    function TotalRevenue()public view returns(uint256,uint256) {\r\n     return (bounstotal,TotalInvestment/ethExchuangeRate);\r\n    }\r\n    function setioc(uint256 _value)onlyOwner{\r\n        IncomePeriod=_value;\r\n    }\r\n    event messageBetsGame(address sender,bool isScuccess,string message);\r\n    function getTokenBalance() public view returns(uint256){\r\n         return bebTokenTransfer.balanceOf(address(this));\r\n    }\r\n    function BEBwithdrawAmount(uint256 amount) onlyOwner {\r\n        uint256 _amountbeb=amount* 10 ** 18;\r\n        require(getTokenBalance()>_amountbeb,\"Insufficient contract balance\");\r\n       bebTokenTransfer.transfer(owner,_amountbeb);\r\n    } \r\n    function ()payable{\r\n        \r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setaddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minersArray\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bebTokenTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BEBwithdrawAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sellbeb\",\"type\":\"uint256\"},{\"name\":\"buybeb\",\"type\":\"uint256\"},{\"name\":\"_ethExchuangeRate\",\"type\":\"uint256\"},{\"name\":\"maxsell\",\"type\":\"uint256\"},{\"name\":\"maxbuy\",\"type\":\"uint256\"}],\"name\":\"ModifyexchangeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"EthTomining\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setioc\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getquerYrevenue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RefundData\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"miners\",\"outputs\":[{\"name\":\"mining\",\"type\":\"uint256\"},{\"name\":\"_mining\",\"type\":\"uint256\"},{\"name\":\"lastDate\",\"type\":\"uint256\"},{\"name\":\"amountdays\",\"type\":\"uint256\"},{\"name\":\"ethbomus\",\"type\":\"uint256\"},{\"name\":\"amountTotal\",\"type\":\"uint256\"},{\"name\":\"ETHV1\",\"type\":\"uint256\"},{\"name\":\"ETHV2\",\"type\":\"uint256\"},{\"name\":\"ETHV3\",\"type\":\"uint256\"},{\"name\":\"ETHV4\",\"type\":\"uint256\"},{\"name\":\"ETHV5\",\"type\":\"uint256\"},{\"name\":\"IntegralMining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_minin\",\"type\":\"uint256\"},{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"_amountTotal\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"migrateTomining\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"querYrevenue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"integralTomining\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"BebTomining\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"querBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TotalRevenue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_minin\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setToTomining\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"queryRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sellbeb\",\"type\":\"uint256\"}],\"name\":\"sellBeb\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"freeSettlement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyBeb\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_minin\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setTomining\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"Draw\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountBouns\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"lx\",\"type\":\"string\"}],\"name\":\"bomus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isScuccess\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"messageBetsGame\",\"type\":\"event\"}]","ContractName":"BEBmining","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000006798cc8ad079a7e663536f83ee26d63aabe03da900000000000000000000000086672b33ca6723d6da4a5cb69901f909824bdcfa","Library":"","LicenseType":"None","SwarmSource":"bzzr://dcefe96e93e4e3117d6b54d7344f086fee9d1844ac73eda474dbdef9a18b0134"}]}