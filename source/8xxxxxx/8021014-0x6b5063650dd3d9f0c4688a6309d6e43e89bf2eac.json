{"status":"1","message":"OK","result":[{"SourceCode":"{\"Migrations.sol\":{\"content\":\"pragma solidity ^0.4.23;\\n\\ncontract Migrations {\\n  address public owner;\\n  uint public last_completed_migration;\\n\\n  constructor() public {\\n    owner = msg.sender;\\n  }\\n  \\n  modifier restricted() {\\n    if (msg.sender == owner) _;\\n  }\\n\\n  function setCompleted(uint completed) public restricted {\\n    last_completed_migration = completed;\\n  }\\n\\n  function upgrade(address new_address) public restricted {\\n    Migrations upgraded = Migrations(new_address);\\n    upgraded.setCompleted(last_completed_migration);\\n  }\\n}\\n\"},\"TokenLock.sol\":{\"content\":\"pragma solidity 0.4.24;\\n\\ncontract ERC20Interface {\\n    function balanceOf(address _owner) public view returns (uint256 balance);\\n    function transfer(address _to, uint256 _value) public returns (bool success);\\n}\\n\\ncontract SqueezerTokenLock {\\n    ERC20Interface constant public SQR_TOKEN = ERC20Interface(0xf53e6deda250bc5fa12793ac49c257edf4efdbc2);\\n    uint constant public SQR_TOKEN_DECIMALS = 18;\\n    uint constant public SQR_TOKEN_MULTIPLIER = 10**SQR_TOKEN_DECIMALS;\\n    address constant public PROJECT_WALLET = 0xA76A464f409b5570a92b657E08FE23f9C4956068;\\n    uint constant public PROJECT_MONTHLY = (4687500 * SQR_TOKEN_MULTIPLIER) / 12;\\n    uint96 constant SEP_02_2019 = 1567426352;\\n    uint96 constant OCT_02_2019 = 1570018352;\\n    uint96 constant NOV_02_2019 = 1572696752;\\n    uint96 constant DEC_02_2019 = 1575288752;\\n    uint96 constant JAN_02_2020 = 1577967152;\\n    uint96 constant FEB_02_2020 = 1580645552;\\n    uint96 constant MAR_02_2020 = 1583151152;\\n    uint96 constant APR_02_2020 = 1585829552;\\n    uint96 constant MAY_02_2020 = 1588421552;\\n    uint96 constant JUN_02_2020 = 1591099952;\\n    uint96 constant JUL_02_2020 = 1593691952;\\n    uint96 constant AUG_02_2020 = 1596370352;\\n    uint96 constant SEP_02_2020 = 1599048752;\\n    uint96 constant OCT_02_2020 = 1601640752;\\n    uint96 constant NOV_02_2020 = 1604319152;\\n    uint96 constant DEC_02_2020 = 1606911152;\\n    uint96 constant JAN_02_2021 = 1609589552;\\n    uint96 constant FEB_02_2021 = 1612267952;\\n    uint96 constant MAR_02_2021 = 1614687152;\\n    uint96 constant APR_02_2021 = 1617365552;\\n    uint96 constant MAY_02_2021 = 1619957552;\\n    uint96 constant JUN_02_2021 = 1622635952;\\n    uint96 constant JUL_02_2021 = 1625227952;\\n    uint96 constant AUG_02_2021 = 1627906352;\\n    uint constant public TOTAL_LOCKS = 25;\\n    uint8 public unlockStep;\\n\\n    struct Lock {\\n        uint96 releaseDate;\\n        address receiver;\\n        uint amount;\\n    }\\n\\n    Lock[TOTAL_LOCKS] public locks;\\n\\n    event Released(uint step, uint date, address receiver, uint amount);\\n\\n    constructor() public {\\n        uint index = 0;\\n        _addLock(index++, SEP_02_2019, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, OCT_02_2019, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, NOV_02_2019, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, DEC_02_2019, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, JAN_02_2020, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, FEB_02_2020, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, MAR_02_2020, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, APR_02_2020, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, MAY_02_2020, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, JUN_02_2020, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, JUL_02_2020, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, AUG_02_2020, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, SEP_02_2020, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, OCT_02_2020, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, NOV_02_2020, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, DEC_02_2020, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, JAN_02_2021, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, FEB_02_2021, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, MAR_02_2021, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, APR_02_2021, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, MAY_02_2021, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, JUN_02_2021, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, JUL_02_2021, PROJECT_WALLET, PROJECT_MONTHLY);\\n        _addLock(index++, AUG_02_2021, PROJECT_WALLET, PROJECT_MONTHLY);\\n    }\\n\\n    function _addLock(uint _index, uint96 _releaseDate, address _receiver, uint _amount) internal {\\n        locks[_index].releaseDate = _releaseDate;\\n        locks[_index].receiver = _receiver;\\n        locks[_index].amount = _amount;\\n    }\\n\\n    function unlock() public returns(bool) {\\n        uint8 step = unlockStep;\\n        bool success = false;\\n        while (step \\u003c TOTAL_LOCKS) {\\n            Lock memory lock = locks[step];\\n            if (now \\u003c lock.releaseDate) {\\n                break;\\n            }\\n            require(SQR_TOKEN.transfer(lock.receiver, lock.amount), \\u0027Transfer failed\\u0027);\\n            delete locks[step];\\n            emit Released(step, lock.releaseDate, lock.receiver, lock.amount);\\n            success = true;\\n            step++;\\n        }\\n        unlockStep = step;\\n        return success;\\n    }\\n\\n    function () public {\\n        unlock();\\n    }\\n\\n    function recoverTokens(ERC20Interface _token) public returns(bool) {\\n        // Don\\u0027t allow recovering SQR Token till the end of lock.\\n        if (_token == SQR_TOKEN \\u0026\\u0026 (now \\u003c AUG_02_2021 || unlockStep != TOTAL_LOCKS)) {\\n            return false;\\n        }\\n        return _token.transfer(PROJECT_WALLET, _token.balanceOf(this));\\n    }\\n}\"}}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"recoverTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SQR_TOKEN_DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PROJECT_MONTHLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockStep\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PROJECT_WALLET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SQR_TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"locks\",\"outputs\":[{\"name\":\"releaseDate\",\"type\":\"uint96\"},{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SQR_TOKEN_MULTIPLIER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOTAL_LOCKS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"step\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"date\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"}]","ContractName":"SqueezerTokenLock","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2efc6b94744c183d7a8f2c47f5f809972b7f76075a4d86b12757ab81545dd529"}]}