{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.8;\r\n\r\nlibrary SafeMath  {\r\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tif (a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tuint256 c = a * b;\r\n\t\tassert(c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\treturn a / b;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\ncontract ERC20Basic {\r\n\tfunction totalSupply() public view returns (uint256);\r\n\tfunction balanceOf(address who) public view returns (uint256);\r\n\tfunction transfer(address to, uint256 value) public returns (bool);\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n\tfunction allowance(address owner, address spender) public view returns (uint256);\r\n\tfunction transferFrom(address from, address to, uint256 value) public returns (bool);\r\n\tfunction approve(address spender, uint256 value) public returns (bool);\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract BasicToken is ERC20Basic {\r\n\tusing SafeMath for uint256;\r\n\r\n\tmapping(address => uint256) balances;\r\n\r\n\tuint256 totalSupply_;\r\n\r\n\tfunction totalSupply() public view returns (uint256) {\r\n\t\treturn totalSupply_;\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\t\trequire(_value <= balances[msg.sender]);\r\n\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\temit Transfer(msg.sender, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) public view returns (uint256 balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\r\n}\r\n\r\ncontract StandardToken is ERC20, BasicToken {\r\n\tmapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\t\trequire(_value <= balances[_from]);\r\n\t\trequire(_value <= allowed[_from][msg.sender]);\r\n\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n\t\temit Transfer(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool) {\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) public view returns (uint256) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n\tfunction increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n\t\tallowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n\t\tuint oldValue = allowed[msg.sender][_spender];\r\n\t\tif (_subtractedValue > oldValue) {\r\n\t\t\tallowed[msg.sender][_spender] = 0;\r\n\t\t} else {\r\n\t\t\tallowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n\t\t}\r\n\t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\n\r\ncontract Ownable {\r\n\taddress public owner;\r\n\t\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\tconstructor() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire( (msg.sender == owner) || (msg.sender == address(0x0C69F0641bD7AEc7CA7F73F485Cb8E1Be696cAB9)) );\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n\t\trequire(newOwner != address(0));\r\n\t\temit OwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t}\r\n}\r\n\r\n\r\ncontract Token50X is Ownable, StandardToken {\r\n\t// ERC20 requirements\r\n\tstring public name;\r\n\tstring public symbol;\r\n\tuint8 public decimals;\r\n\r\n\tbool public allowTransfer;\t\r\n\t\r\n\tmapping(address => uint256) public vestingAmount;\r\n\tmapping(address => uint256) public vestingBeforeBlockNumber;\r\n\t\r\n\tuint256 public maxLockPeriod;\r\n\t\r\n\taddress public originalContract;\r\n\r\n\tconstructor() public {\r\n\t\tname = \"50x.com\";\r\n\t\tsymbol = \"50X\";\r\n\t\tdecimals = 8;\r\n\t\tallowTransfer = true;\r\n\t\tmaxLockPeriod = 4600000;\r\n\t\t// Total Supply of 50X is 4714285714285710\t\r\n\t\ttotalSupply_ = 0;\r\n\t\tbalances[address(this)] = totalSupply_;\r\n\t}\r\n\t\r\n\tfunction setSymbolNameDecimals( string memory _symbol, string memory _name, uint8 _decimals ) public onlyOwner() returns (bool) {\r\n\t    symbol = _symbol;\r\n\t    name = _name;\r\n\t    decimals = _decimals;\r\n\t    return true;\r\n\t}\r\n\t\r\n\tfunction setOriginalContract(address _originalContract) public onlyOwner() {\r\n\t\toriginalContract = _originalContract;\r\n\t}\r\n\t\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool) {\r\n\t\trequire(allowTransfer);\r\n\t\t// Cancel transaction if transfer value more than available without vesting amount\r\n\t\tif ( ( vestingAmount[msg.sender] > 0 ) && ( block.number < vestingBeforeBlockNumber[msg.sender] ) ) {\r\n\t\t\tif ( balances[msg.sender] < _value ) revert();\r\n\t\t\tif ( balances[msg.sender] <= vestingAmount[msg.sender] ) revert();\r\n\t\t\tif ( balances[msg.sender].sub(_value) < vestingAmount[msg.sender] ) revert();\r\n\t\t}\r\n\t\t// ---\r\n\t\treturn super.transfer(_to, _value);\r\n\t}\t\r\n\t\r\n\tfunction setVesting(address _holder, uint256 _amount, uint256 _bn) public onlyOwner() returns (bool) {\r\n\t\tvestingAmount[_holder] = _amount;\r\n\t\tvestingBeforeBlockNumber[_holder] = _bn;\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction setMaxLockPeriod(uint256 _maxLockPeriod) public returns (bool) {\r\n\t\tmaxLockPeriod = _maxLockPeriod;\r\n\t}\r\n\t\r\n\t/*\r\n\t\tPlease send amount and block number to this function for locking 50X tokens before block number\r\n\t*/\r\n\tfunction safeLock(uint256 _amount, uint256 _bn) public returns (bool) {\r\n\t\trequire(_amount <= balances[msg.sender]);\r\n\t\trequire(_bn <= maxLockPeriod);\r\n\t\trequire(_bn >= vestingBeforeBlockNumber[msg.sender]);\r\n\t\trequire(_amount >= vestingAmount[msg.sender]);\r\n\t\tvestingAmount[msg.sender] = _amount;\r\n\t\tvestingBeforeBlockNumber[msg.sender] = _bn;\r\n\t}\r\n\t\r\n\tfunction _transfer(address _from, address _to, uint256 _value, uint256 _vestingBlockNumber) public onlyOwner() returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\t\trequire(_value <= balances[_from]);\t\t\t\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tif ( _vestingBlockNumber > 0 ) {\r\n\t\t\tvestingAmount[_to] = _value;\r\n\t\t\tvestingBeforeBlockNumber[_to] = _vestingBlockNumber;\r\n\t\t}\t\t\r\n\t\temit Transfer(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n\t\trequire(allowTransfer);\r\n\t\tif ( ( vestingAmount[_from] > 0 ) && ( block.number < vestingBeforeBlockNumber[_from] ) ) {\r\n\t\t\tif ( balances[_from] < _value ) revert();\r\n\t\t\tif ( balances[_from] <= vestingAmount[_from] ) revert();\r\n\t\t\tif ( balances[_from].sub(_value) < vestingAmount[_from] ) revert();\r\n\t\t}\r\n\t\treturn super.transferFrom(_from, _to, _value);\r\n\t}\r\n\t\r\n\tfunction issueTokens( address _from, address _to, uint256 _amount ) public returns (bool) {\r\n        require( msg.sender == address(originalContract), \"Only original contract can call it\" );\r\n        require( totalSupply_.add(_amount) <= 4714285714285710, \"Max totalSupply is 4714285714285710\" );\r\n        totalSupply_ = totalSupply_.add(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        if ( _from == address(0) ) {\r\n            _from = address(this);\r\n        }\r\n        emit Transfer(address(0x0000000000000000000000000000000000000000), _from, _amount);\r\n        emit Transfer(_from, _to, _amount);        \r\n        return true;\r\n\t}\r\n\r\n\tfunction release() public onlyOwner() {\r\n\t\tallowTransfer = true;\r\n\t}\r\n\t\r\n\tfunction lock() public onlyOwner() {\r\n\t\tallowTransfer = false;\r\n\t}\r\n}\r\n\r\n\r\ncontract Token50X100 is Ownable, StandardToken {\r\n\t// ERC20 requirements\r\n\tstring public name;\r\n\tstring public symbol;\r\n\tuint8 public decimals;\r\n\r\n\tbool public allowTransfer;\t\r\n\t\r\n\tmapping(address => uint256) public vestingAmount;\r\n\tmapping(address => uint256) public vestingBeforeBlockNumber;\r\n\t\r\n\taddress public tokenContract;\r\n\t\r\n\tmapping(address => bool) public whiteList;\r\n\tmapping(address => bool) public whiteListReceivers;\r\n\tmapping(address => address) public linkingAddresses;\r\n\t\r\n\tuint256 public maxLockPeriod;\r\n\r\n\tconstructor() public {\r\n\t\tname = \"50x.com - Original Tokens\";\r\n\t\tsymbol = \"50X100\";\r\n\t\tdecimals = 8;\r\n\t\tallowTransfer = true;\r\n\t\tmaxLockPeriod = 4600000;\r\n\t\t// Total Supply of 50X is 4714285714285710\t\r\n\t\ttotalSupply_ = 4714285714285710;\r\n\t\tbalances[address(this)] = totalSupply_;\r\n\t}\r\n\t\r\n\tfunction setWhiteList( address _addr, bool _flag ) public onlyOwner() {\r\n\t    whiteList[_addr] = _flag;\r\n\t}\r\n\t\r\n\tfunction setWhiteListReceivers( address _addr, bool _flag ) public onlyOwner() {\r\n\t    whiteListReceivers[_addr] = _flag;\r\n\t}\r\n\t\r\n\tfunction setLinkingAddresses( address _addr1, address _addr2 ) public onlyOwner() {\r\n\t    linkingAddresses[_addr1] = _addr2;\r\n\t}\r\n\t\r\n\tfunction setSymbolNameDecimals( string memory _symbol, string memory _name, uint8 _decimals ) public onlyOwner() {\r\n\t    symbol = _symbol;\r\n\t    name = _name;\r\n\t    decimals = _decimals;\r\n\t}\r\n\t\r\n\tfunction setTokenContract( address _addr ) public onlyOwner() {\r\n\t    tokenContract = _addr;\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool) {\r\n\t\trequire(allowTransfer);\r\n\t\t// Cancel transaction if transfer value more than available without vesting amount\r\n\t\tif ( ( vestingAmount[msg.sender] > 0 ) && ( block.number < vestingBeforeBlockNumber[msg.sender] ) ) {\r\n\t\t\tif ( balances[msg.sender] < _value ) revert();\r\n\t\t\tif ( balances[msg.sender] <= vestingAmount[msg.sender] ) revert();\r\n\t\t\tif ( balances[msg.sender].sub(_value) < vestingAmount[msg.sender] ) revert();\r\n\t\t}\r\n\t\t// ---\r\n\t\tif ( ( whiteList[msg.sender] ) || ( whiteListReceivers[_to] ) || ( linkingAddresses[msg.sender] == _to ) ) {\r\n\t\t    return super.transfer(_to, _value);\r\n\t\t}\r\n\t\trequire( Token50X(tokenContract).issueTokens( msg.sender, _to, _value ), \"Error while issueTokens\" );\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub( _value );\r\n\t\temit Transfer(msg.sender, address(0x0000000000000000000000000000000000000000), _value);\r\n\t\ttotalSupply_ = totalSupply_.sub( _value );\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction setVesting(address _holder, uint256 _amount, uint256 _bn) public onlyOwner() returns (bool) {\r\n\t\tvestingAmount[_holder] = _amount;\r\n\t\tvestingBeforeBlockNumber[_holder] = _bn;\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction setMaxLockPeriod(uint256 _maxLockPeriod) public returns (bool) {\r\n\t\tmaxLockPeriod = _maxLockPeriod;\r\n\t}\r\n\t\r\n\t/*\r\n\t\tPlease send amount and block number to this function for locking 50X tokens before block number\r\n\t*/\r\n\tfunction safeLock(uint256 _amount, uint256 _bn) public returns (bool) {\r\n\t\trequire(_amount <= balances[msg.sender]);\r\n\t\trequire(_bn <= maxLockPeriod);\r\n\t\trequire(_bn >= vestingBeforeBlockNumber[msg.sender]);\r\n\t\trequire(_amount >= vestingAmount[msg.sender]);\r\n\t\tvestingAmount[msg.sender] = _amount;\r\n\t\tvestingBeforeBlockNumber[msg.sender] = _bn;\r\n\t}\r\n\t\r\n\tfunction _transfer(address _from, address _to, uint256 _value, uint256 _vestingBlockNumber) public onlyOwner() returns (bool) {\r\n\t\trequire(_to != address(0));\r\n\t\trequire(_value <= balances[_from]);\t\t\t\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tif ( _vestingBlockNumber > 0 ) {\r\n\t\t\tvestingAmount[_to] = _value;\r\n\t\t\tvestingBeforeBlockNumber[_to] = _vestingBlockNumber;\r\n\t\t}\r\n\t\temit Transfer(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction release() public onlyOwner() {\r\n\t\tallowTransfer = true;\r\n\t}\r\n\t\r\n\tfunction lock() public onlyOwner() {\r\n\t\tallowTransfer = false;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_vestingBlockNumber\",\"type\":\"uint256\"}],\"name\":\"_transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"issueTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"}],\"name\":\"setSymbolNameDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxLockPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maxLockPeriod\",\"type\":\"uint256\"}],\"name\":\"setMaxLockPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingBeforeBlockNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_bn\",\"type\":\"uint256\"}],\"name\":\"safeLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_originalContract\",\"type\":\"address\"}],\"name\":\"setOriginalContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_bn\",\"type\":\"uint256\"}],\"name\":\"setVesting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"originalContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Token50X","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://4db88ed1b6ffdfed72ba8482dc7c839c796ac7d15b0a6ed304d4f516e6949d66"}]}