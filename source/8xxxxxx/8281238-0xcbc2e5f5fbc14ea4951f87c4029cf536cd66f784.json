{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n * DO NOT EDIT! DO NOT EDIT! DO NOT EDIT!\r\n *\r\n * This is an automatically generated file. It will be overwritten.\r\n *\r\n * For the original source see\r\n *    '/Users/swaldman/Dropbox/BaseFolders/development-why/gitproj/ethdocstore/src/main/solidity/DocHashStore.sol'\r\n */\r\n\r\npragma solidity ^0.5.7;\r\n\r\ncontract DocHashStore {\r\n  struct Record {\r\n    uint    timestamp;\r\n    string  name;\r\n    string  description;\r\n    address filer;\r\n    address lastAmender;\r\n    uint    recordLastModifiedBlockNumber;\r\n  }\r\n\r\n  event Stored( bytes32 docHash, uint timestamp, string name, string description, address filer );\r\n  event Amended( bytes32 docHash, string name, string description, address updater, uint priorUpdateBlockNumber );\r\n  event Opened( address admin, uint timestamp );\r\n  event Closed( address closer, uint timestap );\r\n  event Authorized( address user );\r\n  event Deauthorized( address user );\r\n\r\n  address public admin;\r\n  bytes32[] public docHashes;\r\n  mapping ( address => bool ) public authorized;\r\n  uint public openTime;\r\n  uint public closeTime;\r\n  bool public closed;\r\n\r\n  mapping ( bytes32 => Record ) private records;\r\n\r\n  constructor() public {\r\n    admin    = msg.sender;\r\n    openTime = block.timestamp;\r\n    closed   = false;\r\n\r\n    emit Opened( admin, openTime );\r\n  }\r\n\r\n  modifier onlyAdmin {\r\n    require( msg.sender == admin, \"Administrator access only.\" );\r\n    _;\r\n  }\r\n\r\n  modifier adminOrAuthorized {\r\n    require( msg.sender == admin || authorized[msg.sender], \"Administrator or authorized user access only.\" );\r\n    _;\r\n  }\r\n\r\n  function close() public adminOrAuthorized {\r\n    closeTime = block.timestamp;\r\n    closed = true;\r\n\r\n    emit Closed( msg.sender, closeTime );\r\n  }\r\n\r\n  function authorize( address filer ) public onlyAdmin {\r\n    authorized[ filer ] = true;\r\n\r\n    emit Authorized( msg.sender );\r\n  }\r\n\r\n  function deauthorize( address filer ) public onlyAdmin {\r\n    authorized[ filer ] = false;\r\n\r\n    emit Deauthorized( msg.sender );\r\n  }\r\n\r\n  function canUpdate( address user ) public view returns (bool) {\r\n    return user == admin || authorized[user];\r\n  }\r\n\r\n  function store( bytes32 docHash, string memory name, string memory description ) public adminOrAuthorized {\r\n    require( !closed, \"This DocHashStore has been closed.\" );\r\n    require( records[ docHash ].timestamp == 0, \"DocHash has already been stored.\" );\r\n    \r\n    records[docHash] = Record( block.timestamp, name, description, msg.sender, msg.sender, block.number );\r\n    docHashes.push( docHash );\r\n\r\n    emit Stored( docHash, block.timestamp, name, description, msg.sender );\r\n  }\r\n  \r\n  function amend( bytes32 docHash, string memory name, string memory description ) public adminOrAuthorized {\r\n    require( !closed, \"This DocHashStore has been closed.\" );\r\n    require( records[ docHash ].timestamp != 0, \"DocHash has not been defined, must be stored, can't be amended.\" );\r\n\r\n    Record memory oldRecord = records[docHash]; // important that we copy to memory!\r\n    Record memory newRecord = Record( oldRecord.timestamp, name, description, oldRecord.filer, msg.sender, block.number );\r\n    \r\n    records[docHash] = newRecord;\r\n\r\n    emit Amended( docHash, name, description, msg.sender, oldRecord.recordLastModifiedBlockNumber );\r\n  }\r\n  \r\n  function isStored( bytes32 docHash ) public view returns (bool) {\r\n    return (records[ docHash ].timestamp != 0);\r\n  }\r\n  \r\n  function timestamp( bytes32 docHash ) public view returns (uint) {\r\n    return records[ docHash ].timestamp;\r\n  }\r\n  \r\n  function name( bytes32 docHash ) public view returns (string memory) {\r\n    return records[ docHash ].name;\r\n  }\r\n  \r\n  function description( bytes32 docHash ) public view returns (string memory) {\r\n    return records[ docHash ].description;\r\n  }\r\n  \r\n  function filer( bytes32 docHash ) public view returns (address) {\r\n    return records[ docHash ].filer;\r\n  }\r\n\r\n  function size() public view returns (uint) {\r\n    return docHashes.length;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"docHash\",\"type\":\"bytes32\"}],\"name\":\"filer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"filer\",\"type\":\"address\"}],\"name\":\"deauthorize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"docHash\",\"type\":\"bytes32\"}],\"name\":\"isStored\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"docHash\",\"type\":\"bytes32\"}],\"name\":\"timestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"docHash\",\"type\":\"bytes32\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"store\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closeTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"docHash\",\"type\":\"bytes32\"}],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"docHash\",\"type\":\"bytes32\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"amend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"size\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"filer\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"docHash\",\"type\":\"bytes32\"}],\"name\":\"description\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"docHashes\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"canUpdate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"docHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"filer\",\"type\":\"address\"}],\"name\":\"Stored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"docHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"updater\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"priorUpdateBlockNumber\",\"type\":\"uint256\"}],\"name\":\"Amended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Opened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"closer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"timestap\",\"type\":\"uint256\"}],\"name\":\"Closed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Deauthorized\",\"type\":\"event\"}]","ContractName":"DocHashStore","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ba1748c56cd4e04dbff645b9dc502ccb2b6c962fc7f7b329e6bdeaffea2c193a"}]}