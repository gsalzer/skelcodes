{"status":"1","message":"OK","result":[{"SourceCode":"// dmap .x.\r\n// the worst registry\r\n// do not use this one\r\n\r\npragma solidity ^0.5.10;\r\n\r\ncontract DMap {\r\n    address owner;\r\n    mapping(bytes32=>bytes32) values;\r\n\r\n    event ValueUpdate( bytes32 indexed key\r\n                     , bytes32 indexed value );\r\n    event OwnerUpdate( address indexed oldOwner\r\n                     , address indexed newOwner );\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        emit OwnerUpdate(address(0), owner);\r\n    }\r\n    function getValue(bytes32 key)\r\n        public view returns (bytes32)\r\n    {\r\n        return values[key];\r\n    }\r\n    function setValue(bytes32 key, bytes32 value)\r\n        public\r\n    {\r\n        assert(msg.sender == owner);\r\n        values[key] = value;\r\n        emit ValueUpdate(key, value);\r\n    }\r\n    function getOwner()\r\n        public view returns (address)\r\n    {\r\n        return owner;\r\n    }\r\n    function setOwner(address newOwner)\r\n        public\r\n    {\r\n        assert(msg.sender == owner);\r\n        owner = newOwner;\r\n        emit OwnerUpdate(msg.sender, owner);\r\n    }\r\n}\r\n\r\ncontract xreg {\r\n    DMap public x;\r\n    constructor() public {\r\n        x = new DMap();\r\n    }\r\n    function newChild(bytes32 name) public returns (DMap) {\r\n        DMap map = new DMap();\r\n        register(name, bytes32(bytes20(address( map ))));\r\n        map.setOwner(msg.sender);\r\n        return map;\r\n    }\r\n    function register(bytes32 key, bytes32 val) public {\r\n        assert(x.getValue(key) == 0x0);\r\n        x.setValue(key, val);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes32\"},{\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"newChild\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"xreg","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c791aae0b5c992959e6b03d52e13353c597c3b3cf6965f3be2e8a8d642082ab6"}]}