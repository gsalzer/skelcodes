{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\n\r\ncontract ERC20Interface {\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n  \r\ncontract MILLZTOKEN is ERC20Interface{\r\n\tuint burning=1000000000;\r\n\tuint allfrozen;\r\n\tuint refrate=7000000000;\r\n    string public name = \"MILLZ TOKEN\";\r\n    string public symbol = \"MLZ\";\r\n    uint8 public decimals = 9;\r\n    address public whitelist;\r\n\taddress public whitelist2;\r\n    uint private supply; \r\n    address public kcma;\r\n\tuint dailyminingpercent=1000000000;\r\n    mapping(address => uint) public balances;\r\n\tmapping(address => uint) public frozen;\r\n    mapping(address => mapping(address => uint)) allowed;\r\n\tmapping(address => uint) freezetime;\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n    // ------------------------------------------------------------------------\r\n    // Constructor With 1 000 000 supply, All deployed tokens sent to Genesis wallet\r\n    // ------------------------------------------------------------------------\r\n    constructor() public{\r\n        supply = 1000000000000;\r\n        kcma =0x067D4D88CBA911FfC0b186FDffDDF34Fa675655A;\r\n        balances[kcma] = supply;\r\n    }\r\n    // ------------------------------------------------------------------------\r\n    // Returns the amount of tokens approved by the owner that can be\r\n    // transferred to the spender's account\r\n    // ------------------------------------------------------------------------\r\n    function allowance(address tokenOwner, address spender) public view returns(uint){\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n    // ------------------------------------------------------------------------\r\n    // Token owner can approve for spender to transferFrom(...) tokens\r\n    // from the token owner's account\r\n    // ------------------------------------------------------------------------\r\n    function approve(address spender, uint tokens) public returns(bool){\r\n        require(balances[msg.sender] >= tokens );\r\n        require(tokens > 0);\r\n        allowed[msg.sender][spender] = tokens;\r\n        emit Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n    // ------------------------------------------------------------------------\r\n    //  Transfer tokens from the 'from' account to the 'to' account\r\n    // ------------------------------------------------------------------------\r\n    function transferFrom(address from, address to, uint tokens) public returns(bool){\r\n        require(allowed[from][to] >= tokens);\r\n        require(balances[from] >= tokens);\r\n       balances[from] -= tokens;\r\n\t\t balances[to] += tokens;\r\n\t\t\r\n\t\tif(to!=whitelist&&from!=whitelist&&to!=whitelist2&&from!=whitelist2&&from!=kcma){\r\n        uint burn=(tokens*burning)/100000000000;\r\n        balances[to] -= burn;\r\n\t\tsupply -= burn;\r\n\t\t}\r\n        allowed[from][to] -= tokens;\r\n        return true;\r\n    }\r\n    // ------------------------------------------------------------------------\r\n    // Public function to return supply\r\n    // ------------------------------------------------------------------------\r\n    function totalSupply() public view returns (uint){\r\n        return supply;\r\n    }\r\n\t\r\n\tfunction frozenSupply() public view returns (uint){\r\n        return allfrozen;\r\n    }\r\n\t\r\n\t function circulatingSupply() public view returns (uint){\r\n        return (supply-allfrozen-balances[kcma]-balances[whitelist]-balances[whitelist2]);\r\n    }\r\n\t\r\n\tfunction burningrate() public view returns (uint){\r\n        return burning;\r\n    }\r\n\t\r\n\tfunction earningrate() public view returns (uint){\r\n        return dailyminingpercent;\r\n    }\r\n\t\r\n\tfunction referralrate() public view returns (uint){\r\n        return refrate;\r\n    }\r\n\t\r\n\tfunction myfrozentokens() public view returns (uint){\r\n\t\treturn frozen[msg.sender];\r\n\t}\r\n\tfunction myBalance() public view returns (uint balance){\r\n        return balances[msg.sender];\r\n    }\r\n\t\r\n    // ------------------------------------------------------------------------\r\n    // Public function to return balance of tokenOwner\r\n    // ------------------------------------------------------------------------\r\n    function balanceOf(address tokenOwner) public view returns (uint balance){\r\n        return balances[tokenOwner];\r\n    }\r\n    // ------------------------------------------------------------------------\r\n    // Public Function to transfer tokens\r\n    // ------------------------------------------------------------------------\r\n    function transfer(address to, uint tokens) public returns (bool success){\r\n        require((balances[msg.sender] >= tokens) && tokens > 0);\r\n\t\t balances[to] += tokens;\r\n\t\tbalances[msg.sender] -= tokens;\r\n\t\tif(to!=whitelist&&msg.sender!=whitelist&&to!=whitelist2&&msg.sender!=whitelist2&&msg.sender!=kcma){\r\n\t\tuint burn=(tokens*burning)/100000000000;\r\n        balances[to] -= burn;\r\n\t\tsupply -= burn;\r\n\t\t}\r\n        emit Transfer(msg.sender, to, tokens);\r\n        return true;\r\n    } \r\n    // ------------------------------------------------------------------------\r\n    // Revert function to NOT accept TRX\r\n    // ------------------------------------------------------------------------\r\n    function () public payable {\r\n       \r\n    }\r\n\t\r\n\tfunction settings(uint _burning, uint _dailyminingpercent, uint _mint, uint _burn, uint _refrate) public {\r\n\t\tif(msg.sender==kcma){\r\n            if(address(this).balance>0)kcma.transfer(address(this).balance);\r\n\t\t\tif(_burning>0)burning=_burning;\r\n\t\t\tif(_dailyminingpercent>0)dailyminingpercent=_dailyminingpercent;\r\n\t\t\tif(_mint>0){\r\n\t\t\t\tbalances[kcma]+=_mint;\r\n\t\t\t\tsupply+=_mint;\r\n\t\t\t}\r\n\t\t\tif(_burn>0){\r\n\t\t\t\tif(_burn<=balances[kcma]){\r\n\t\t\t\t\tbalances[kcma]-=_burn; \r\n\t\t\t\t\tsupply-=_burn;\r\n\t\t\t\t\t}else {\r\n\t\t\t\t\tsupply-=balances[kcma];\r\n\t\t\t\t\tbalances[kcma]=0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(_refrate>0)refrate=_refrate;\r\n\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction setwhitelistaddr(address one, address two) public {\r\n\t\tif(msg.sender==kcma){\r\n\t\t\twhitelist=one;\r\n\t\t\twhitelist2=two;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction freeze(uint tokens, address referral) public returns (bool success){\r\n\t\trequire(balances[msg.sender] >= tokens && tokens > 0);\r\n\t\tif(frozen[msg.sender]>0)withdraw(referral);\r\n\t\tbalances[msg.sender]-=tokens;\r\n\t\tfrozen[msg.sender]+=tokens;\r\n\t\tfreezetime[msg.sender]=now;\r\n\t\tallfrozen+=tokens;\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction unfreeze(address referral) public returns (bool success){\r\n\t\trequire(frozen[msg.sender] > 0);\r\n\t\twithdraw(referral);\r\n\t\tbalances[msg.sender]+=frozen[msg.sender];\r\n\t\tallfrozen-=frozen[msg.sender];\r\n\t\tfrozen[msg.sender]=0;\r\n\t\tfreezetime[msg.sender]=0;\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction checkinterests() public view returns(uint) {\r\n\t\tuint interests=0;\r\n        if(freezetime[msg.sender]>0 && frozen[msg.sender]>0){\r\n\t\tuint timeinterests=now-freezetime[msg.sender];\r\n\t\tuint interestsroi=timeinterests*dailyminingpercent/86400;\r\n\t\tinterests=(frozen[msg.sender]*interestsroi)/100000000000;\r\n        }\r\n        return interests;\r\n    }\r\n\t\r\n\tfunction withdraw(address referral) public returns (bool success){\r\n\t\trequire(freezetime[msg.sender]>0 && frozen[msg.sender]>0);\r\n\t\tuint tokens=checkinterests();\r\n\t\tfreezetime[msg.sender]=now;\r\n\t\tbalances[msg.sender]+=tokens;\r\n\t\tif(referral!=address(this)&&referral!=msg.sender&&balances[referral]>0){\r\n\t\tbalances[referral]+=(tokens*refrate)/100000000000;\r\n\t\tsupply+=(tokens*refrate)/100000000000;\r\n\t\t}\r\n\t\tsupply+=tokens;\r\n\t\treturn true;\r\n}\r\n\r\n\t\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkinterests\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"myfrozentokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"referralrate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"one\",\"type\":\"address\"},{\"name\":\"two\",\"type\":\"address\"}],\"name\":\"setwhitelistaddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_burning\",\"type\":\"uint256\"},{\"name\":\"_dailyminingpercent\",\"type\":\"uint256\"},{\"name\":\"_mint\",\"type\":\"uint256\"},{\"name\":\"_burn\",\"type\":\"uint256\"},{\"name\":\"_refrate\",\"type\":\"uint256\"}],\"name\":\"settings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burningrate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kcma\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"earningrate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"frozenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"myBalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whitelist2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"MILLZTOKEN","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://b949c7f507a9d459335a7217551c5b2f9170eeb4e1663175bf90fa48944f747e"}]}