{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Safe maths\r\n// ----------------------------------------------------------------------------\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Contract function to receive approval and execute function in one call\r\n//\r\n// Borrowed from MiniMeToken\r\n// ----------------------------------------------------------------------------\r\n//contract ApproveAndCallFallBack {\r\n//  function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\r\n//}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Owned contract\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\nconstructor() public {\r\nowner = msg.sender;\r\n}\r\n\r\nmodifier onlyOwner {\r\nrequire(msg.sender == owner);\r\n_;\r\n}\r\n\r\nfunction transferOwnership(address _newOwner) public onlyOwner {\r\nnewOwner = _newOwner;\r\n}\r\nfunction acceptOwnership() public {\r\nrequire(msg.sender == newOwner);\r\nemit OwnershipTransferred(owner, newOwner);\r\nowner = newOwner;\r\nnewOwner = address(0);\r\n}\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC20 Token, with the addition of symbol, name and decimals and a\r\n// fixed supply\r\n// ----------------------------------------------------------------------------\r\ncontract DggToken is ERC20Interface, Owned {\r\nusing SafeMath for uint;\r\n\r\nstring public symbol;\r\nstring public  name;\r\nuint8 public decimals;\r\nuint _totalSupply;\r\n\r\nmapping(address => uint) balances;\r\nmapping(address => mapping(address => uint)) allowed;\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Constructor\r\n// ------------------------------------------------------------------------\r\nconstructor() public {\r\nsymbol = \"DGG\";\r\nname = \"DGG Token\";\r\ndecimals = 8;\r\n_totalSupply = 1000000000 * 10**uint(decimals);\r\nbalances[owner] = _totalSupply;\r\nemit Transfer(address(0), owner, _totalSupply);\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Total supply\r\n// ------------------------------------------------------------------------\r\nfunction totalSupply() public view returns (uint) {\r\nreturn _totalSupply.sub(balances[address(0)]);\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Get the token balance for account `tokenOwner`\r\n// ------------------------------------------------------------------------\r\nfunction balanceOf(address tokenOwner) public view returns (uint balance) {\r\nreturn balances[tokenOwner];\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Transfer the balance from token owner's account to `to` account\r\n// - Owner's account must have sufficient balance to transfer\r\n// - 0 value transfers are allowed\r\n// ------------------------------------------------------------------------\r\nfunction transfer(address to, uint tokens) public returns (bool success) {\r\nbalances[msg.sender] = balances[msg.sender].sub(tokens);\r\nbalances[to] = balances[to].add(tokens);\r\nemit Transfer(msg.sender, to, tokens);\r\nreturn true;\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Token owner can approve for `spender` to transferFrom(...) `tokens`\r\n// from the token owner's account\r\n//\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\r\n// recommends that there are no checks for the approval double-spend attack\r\n// as this should be implemented in user interfaces\r\n// ------------------------------------------------------------------------\r\nfunction approve(address spender, uint tokens) public returns (bool success) {\r\nallowed[msg.sender][spender] = tokens;\r\nemit Approval(msg.sender, spender, tokens);\r\nreturn true;\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Transfer `tokens` from the `from` account to the `to` account\r\n//\r\n// The calling account must already have sufficient tokens approve(...)-d\r\n// for spending from the `from` account and\r\n// - From account must have sufficient balance to transfer\r\n// - Spender must have sufficient allowance to transfer\r\n// - 0 value transfers are allowed\r\n// ------------------------------------------------------------------------\r\nfunction transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\nbalances[from] = balances[from].sub(tokens);\r\nallowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\nbalances[to] = balances[to].add(tokens);\r\nemit Transfer(from, to, tokens);\r\nreturn true;\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Returns the amount of tokens approved by the owner that can be\r\n// transferred to the spender's account\r\n// ------------------------------------------------------------------------\r\nfunction allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\nreturn allowed[tokenOwner][spender];\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Token owner can approve for `spender` to transferFrom(...) `tokens`\r\n// from the token owner's account. The `spender` contract function\r\n// `receiveApproval(...)` is then executed\r\n// ------------------------------------------------------------------------\r\n//function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\r\n//    allowed[msg.sender][spender] = tokens;\r\n//    emit Approval(msg.sender, spender, tokens);\r\n//    ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\r\n//    return true;\r\n//}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Don't accept ETH\r\n// ------------------------------------------------------------------------\r\nfunction () external payable {\r\nrevert();\r\n}\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Owner can transfer out any accidentally sent ERC20 tokens\r\n// ------------------------------------------------------------------------\r\nfunction transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r\nreturn ERC20Interface(tokenAddress).transfer(owner, tokens);\r\n}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"DggToken","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://460e6498e5ddf16613b16c53cb3a4fd09eae5517ab49aa6e82ec10a228c18f2f"}]}