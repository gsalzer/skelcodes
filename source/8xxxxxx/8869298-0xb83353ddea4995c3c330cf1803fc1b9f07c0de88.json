{"status":"1","message":"OK","result":[{"SourceCode":"//www.structuredeth.com/gift\r\n\r\npragma solidity ^0.4.26;\r\n\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n\r\ncontract GiftOfCompoundRegistry {\r\n    \r\n    using SafeMath for uint256;\r\n    \r\n    uint256 totalGifted;\r\n    uint256 numberGifts;\r\n    mapping (address=>uint256) addresses;\r\n    address cOffRamp;\r\n    \r\n    modifier onlyCOffRamp() {\r\n        if (msg.sender != cOffRamp) {\r\n            throw;\r\n        }\r\n        _;\r\n    }\r\n   \r\n    \r\n\r\n    function() payable {\r\n        \r\n    }\r\n    \r\n    \r\n    \r\n    function addGift(address contractAddress, uint256 initialAmount){\r\n        \r\n        if(initialAmount < 1000000000000000000000000000000){\r\n            totalGifted = totalGifted.add(initialAmount);\r\n        }\r\n        addresses[contractAddress] = initialAmount;\r\n        numberGifts = numberGifts.add(1);\r\n        emit NewGift(contractAddress, initialAmount);\r\n        \r\n        \r\n    }\r\n    function totalGiftedAmount()  constant returns (uint256){\r\n        return totalGifted;\r\n    }\r\n    \r\n    function totalGifts()  constant returns (uint256){\r\n        return numberGifts;\r\n    }\r\n    \r\n    function giftGiven(address theAddress)  constant returns (uint256){\r\n        return addresses[theAddress];\r\n    }\r\n    function receiveChange() onlyCOffRamp{\r\n        msg.sender.send(this.balance);\r\n    }\r\n    \r\n    function changeCOffRamp(address newCOffRamp) onlyCOffRamp returns(bool){\r\n            cOffRamp = newCOffRamp;\r\n    }\r\n    \r\n\r\n    constructor() public {\r\n        \r\n      cOffRamp = 0x4C8A4aEbB3F28F9e50BDF16eD8491A1FF2CFB6fe;\r\n    }\r\n    \r\n    event NewGift(address indexed _contract, uint _value);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"totalGiftedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"theAddress\",\"type\":\"address\"}],\"name\":\"giftGiven\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractAddress\",\"type\":\"address\"},{\"name\":\"initialAmount\",\"type\":\"uint256\"}],\"name\":\"addGift\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"receiveChange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalGifts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCOffRamp\",\"type\":\"address\"}],\"name\":\"changeCOffRamp\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_contract\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"NewGift\",\"type\":\"event\"}]","ContractName":"GiftOfCompoundRegistry","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://89cec73f01ee417ef1991ace526d4788dcf91c761999ea0933ca3d8fdfb9c6b3"}]}