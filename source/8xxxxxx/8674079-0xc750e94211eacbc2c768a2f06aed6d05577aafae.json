{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract ERC20Basic {\r\n  // events\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  // public functions\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address addr) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint256;\r\n\r\n      // public variables\r\n                     string public name;\r\n  string public symbol;\r\n  uint8 public decimals = 18;\r\n\r\n  // internal variables\r\n  uint256 _totalSupply;\r\n  mapping(address => uint256) _balances;\r\n  mapping(address => uint256) _freezeOf;\r\n\r\n  // events\r\n\r\n  // public functions\r\n  function totalSupply() public view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  function balanceOf(address addr) public view returns (uint256 balance) {\r\n    return _balances[addr];\r\n  }\r\n\r\n  function transfer(address to, uint256 value) public returns (bool) {\r\n    require(to != address(0));\r\n    require(value <= _balances[msg.sender]);\r\n\r\n    _balances[msg.sender] = _balances[msg.sender].sub(value);\r\n    _balances[to] = _balances[to].add(value);\r\n    emit Transfer(msg.sender, to, value);\r\n    return true;\r\n  }\r\n\r\n  // internal functions\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  // events\r\n  event Approval(address indexed owner, address indexed agent, uint256 value);\r\n\r\n  // public functions\r\n  function allowance(address owner, address agent) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address agent, uint256 value) public returns (bool);\r\n\r\n}\r\n\r\ncontract Ownable {\r\n\r\n  // public variables\r\n  address public owner;\r\n\r\n  // internal variables\r\n\r\n  // events\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  // public functions\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n  // internal functions\r\n}\r\n\r\ncontract StandardToken is ERC20, BasicToken {\r\n  // public variables\r\n\r\n  // internal variables\r\n  mapping (address => mapping (address => uint256)) _allowances;\r\n\r\n  // events\r\n\r\n  // public functions\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n    require(to != address(0));\r\n    require(value <= _balances[from]);\r\n    require(value <= _allowances[from][msg.sender]);\r\n\r\n    _balances[from] = _balances[from].sub(value);\r\n    _balances[to] = _balances[to].add(value);\r\n    _allowances[from][msg.sender] = _allowances[from][msg.sender].sub(value);\r\n    emit Transfer(from, to, value);\r\n    return true;\r\n  }\r\n\r\n  function approve(address agent, uint256 value) public returns (bool) {\r\n    _allowances[msg.sender][agent] = value;\r\n    emit Approval(msg.sender, agent, value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address owner, address agent) public view returns (uint256) {\r\n    return _allowances[owner][agent];\r\n  }\r\n\r\n  function increaseApproval(address agent, uint value) public returns (bool) {\r\n    _allowances[msg.sender][agent] = _allowances[msg.sender][agent].add(value);\r\n    emit Approval(msg.sender, agent, _allowances[msg.sender][agent]);\r\n    return true;\r\n  }\r\n\r\n  function decreaseApproval(address agent, uint value) public returns (bool) {\r\n    uint allowanceValue = _allowances[msg.sender][agent];\r\n    if (value > allowanceValue) {\r\n      _allowances[msg.sender][agent] = 0;\r\n    } else {\r\n      _allowances[msg.sender][agent] = allowanceValue.sub(value);\r\n    }\r\n    emit Approval(msg.sender, agent, _allowances[msg.sender][agent]);\r\n    return true;\r\n  }\r\n\r\n  // internal functions\r\n}\r\n\r\ncontract Vnk is StandardToken{\r\n  // public variables\r\n  address public manager;\r\n  string public name = \"vietnam digital ecology\";\r\n  string public symbol = \"VNK\";\r\n  uint8 public decimals = 8;\r\n\r\n  address[] public invs;\r\n  uint lastReleased = 0;\r\n\r\n  uint256 public releaseTime = 1548508570; // 2019.1.27\r\n  uint256 public rate = 100; // ¶Ò»»±ÈÀý\r\n\r\n\r\n  event Freeze(address indexed from, uint256 value);\r\n\r\n  /* This notifies clients about the amount unfrozen */\r\n  event Unfreeze(address indexed from, uint256 value);\r\n\r\n  function() public payable\r\n  {\r\n\r\n  }\r\n\r\n  constructor() public {\r\n    _totalSupply = 600000000 * (10 ** uint256(decimals));\r\n\r\n    _balances[msg.sender] = _totalSupply;\r\n    manager = msg.sender;\r\n    emit Transfer(0x0, msg.sender, _totalSupply);\r\n  }\r\n\r\n  modifier onlyManager(){//Ö»ÄÜ¹ÜÀíÔ±²Ù×÷\r\n    require(msg.sender == manager);\r\n    _;\r\n  }\r\n\r\n  function releaseByNum(uint256 num) public onlyManager() returns (bool){//num µÚnum´ÎÊÍ·Å\r\n    require(num >= 1);\r\n    require(num <= 12);\r\n    require(num == (lastReleased.add(1)));\r\n    //require(now > (releaseTime.add(num.mul(1)) ));//30ÌìÎªÒ»¸öÔÂ todo test\r\n    require(now > (releaseTime.add(num.mul(2592000)) ));//30ÌìÎªÒ»¸öÔÂ\r\n\r\n\r\n    for(uint i = 0; i < invs.length; i++)\r\n    {\r\n      uint256 releaseNum = _freezeOf[invs[i]].div( 13 - num );\r\n      _freezeOf[invs[i]] = _freezeOf[invs[i]].sub(releaseNum);\r\n      _balances[invs[i]] = _balances[invs[i]].add(releaseNum);\r\n      emit Freeze(invs[i], releaseNum);\r\n    }\r\n    lastReleased = lastReleased.add(1);\r\n\r\n  }\r\n\r\n  function releaseByInv(address inv, uint256 num) public onlyManager() returns (bool){//num ÊÍ·Å»õ±ÒÊý\r\n    require(num >= 1);\r\n    _freezeOf[inv] = _freezeOf[inv].sub(num);\r\n    _balances[inv] = _balances[inv].add(num);\r\n    emit Freeze(inv, num);\r\n  }\r\n\r\n  //ÊÍ·ÅÊ±¼äÊÇ·ñµ½´ï\r\n  function checkTime(uint256 num) public view returns (bool){\r\n    //return now > (releaseTime.add(num.mul(1))); //todo test 1535702756\r\n    return now > (releaseTime.add(num.mul(2592000)));\r\n  }\r\n\r\n  function sendToInv(address inv, uint256 eth) public onlyManager() returns (bool){// Ê×´Î·¢¸øÍ¶×ÊÈË\r\n    uint256 give = eth.mul(rate);\r\n    uint256 firstRealease = give.mul(20).div(100);\r\n    _freezeOf[inv] = give.sub(firstRealease);\r\n    _balances[inv] = firstRealease;\r\n    invs.push(inv);\r\n  }\r\n\r\n  function getAllInv() public view onlyManager() returns (address[]){\r\n    return invs;\r\n  }\r\n\r\n  function getLastReleased() public view onlyManager() returns (uint256){\r\n    return lastReleased;\r\n  }\r\n\r\n  function setRate(uint256 _rate) public onlyManager() returns (bool){\r\n    rate = _rate;\r\n  }\r\n\r\n  function setReleaseTime(uint256 _releaseTime) public onlyManager() returns (bool){\r\n    releaseTime = _releaseTime;\r\n  }\r\n\r\n\r\n\r\n  function getRate() public view returns (uint256){\r\n    return rate;\r\n  }\r\n\r\n}\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agent\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"inv\",\"type\":\"address\"},{\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"sendToInv\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllInv\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"releaseByNum\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"checkTime\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agent\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastReleased\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"inv\",\"type\":\"address\"},{\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"releaseByInv\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_releaseTime\",\"type\":\"uint256\"}],\"name\":\"setReleaseTime\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"invs\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agent\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Vnk","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://c0b2ec1bda5f8e82dbce83e90791cb1be664ba1e069033a92855df838e3c0f7a"}]}