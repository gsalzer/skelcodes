{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.9;\r\n\r\n// Made By Tom - tom@devtooth.com\r\n\r\nlibrary SafeMath\r\n{\r\n  \tfunction mul(uint256 a, uint256 b) internal pure returns (uint256)\r\n    \t{\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\r\n\t\treturn c;\r\n  \t}\r\n\r\n  \tfunction div(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a / b;\r\n\r\n\t\treturn c;\r\n  \t}\r\n\r\n  \tfunction sub(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tassert(b <= a);\r\n\r\n\t\treturn a - b;\r\n  \t}\r\n\r\n  \tfunction add(uint256 a, uint256 b) internal pure returns (uint256)\r\n\t{\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\r\n\t\treturn c;\r\n  \t}\r\n}\r\n\r\ncontract OwnerHelper\r\n{\r\n  \taddress public owner;\r\n\r\n  \tevent ChangeOwner(address indexed _from, address indexed _to);\r\n\r\n  \tmodifier onlyOwner\r\n\t{\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n  \t}\r\n  \t\r\n  \tconstructor() public\r\n\t{\r\n\t\towner = msg.sender;\r\n  \t}\r\n  \t\r\n  \tfunction transferOwnership(address _to) onlyOwner public\r\n  \t{\r\n    \trequire(_to != owner);\r\n    \trequire(_to != address(0x0));\r\n\r\n        address from = owner;\r\n      \towner = _to;\r\n  \t    \r\n      \temit ChangeOwner(from, _to);\r\n  \t}\r\n}\r\n\r\ncontract ERC20Interface\r\n{\r\n    event Transfer( address indexed _from, address indexed _to, uint _value);\r\n    event Approval( address indexed _owner, address indexed _spender, uint _value);\r\n    \r\n    function totalSupply() view public returns (uint _supply);\r\n    function balanceOf( address _who ) public view returns (uint _value);\r\n    function transfer( address _to, uint _value) public returns (bool _success);\r\n    function approve( address _spender, uint _value ) public returns (bool _success);\r\n    function allowance( address _owner, address _spender ) public view returns (uint _allowance);\r\n    function transferFrom( address _from, address _to, uint _value) public returns (bool _success);\r\n}\r\n\r\ncontract LIXToken is ERC20Interface, OwnerHelper\r\n{\r\n    using SafeMath for uint;\r\n    \r\n    string public name;\r\n    uint public decimals;\r\n    string public symbol;\r\n    \r\n    uint constant private E18 = 1000000000000000000;\r\n    uint constant private month = 2592000;\r\n    \r\n    // Total                                        3,000,000,000\r\n    uint constant public maxTotalSupply =           3000000000 * E18;\r\n    \r\n    // Operation                                     720,000,000 (24%)\r\n    uint constant public maxOperSupply =             720000000 * E18;\r\n    // - 3 months after Vesting 24 times\r\n    \r\n    // Marketing                                     540,000,000 (18%)\r\n    uint constant public maxMktSupply =              540000000 * E18;\r\n    // - 2 months after Vesting 18 times\r\n    \r\n    // Business Dev                                  450,000,000 (15%)\r\n    uint constant public maxBDevSupply =             450000000 * E18;\r\n    // - 3 months after Vesting 12 times\r\n    \r\n    // Reserve                                       330,000,000 (11%)\r\n    uint constant public maxRsvSupply =              330000000 * E18;\r\n    // - 1 months after Vesting 1 time\r\n    \r\n    // Event                                         210,000,000 (7%)\r\n    uint constant public maxEventSupply =            210000000 * E18;\r\n    // - Vesting 7 times\r\n    \r\n    // Sale Supply                                   750,000,000 (25%)\r\n    uint constant public maxSaleSupply =             750000000 * E18;\r\n    \r\n    // Lock\r\n    uint constant public operVestingSupply          = 30000000 * E18;\r\n    uint constant public operVestingLockDate        = 3 * month;\r\n    uint constant public operVestingTime = 24;\r\n    \r\n    uint constant public mktVestingSupply           = 30000000 * E18;\r\n    uint constant public mktVestingLockDate         = 2 * month;\r\n    uint constant public mktVestingTime = 18;\r\n    \r\n    uint constant public bDevVestingSupply          = 37500000 * E18;\r\n    uint constant public bDevVestingLockDate        = 3 * month;\r\n    uint constant public bDevVestingTime = 12;\r\n    \r\n    uint constant public rsvVestingLockDate         = 1 * month;\r\n    \r\n    uint constant public eventVestingSupply         = 30000000 * E18;\r\n    uint constant public eventVestingTime = 7;\r\n    \r\n    uint public totalTokenSupply;\r\n    uint public tokenIssuedOper;\r\n    uint public tokenIssuedMkt;\r\n    uint public tokenIssuedBDev;\r\n    uint public tokenIssuedRsv;\r\n    uint public tokenIssuedEvent;\r\n    uint public tokenIssuedSale;\r\n    \r\n    uint public burnTokenSupply;\r\n    \r\n    mapping (address => uint) public balances;\r\n    mapping (address => mapping ( address => uint )) public approvals;\r\n    \r\n    mapping (uint => uint) public operVestingTimer;\r\n    mapping (uint => uint) public operVestingBalances;\r\n    \r\n    mapping (uint => uint) public mktVestingTimer;\r\n    mapping (uint => uint) public mktVestingBalances;\r\n    \r\n    mapping (uint => uint) public bDevVestingTimer;\r\n    mapping (uint => uint) public bDevVestingBalances;\r\n    \r\n    uint public rsvVestingTime;\r\n    \r\n    mapping (uint => uint) public eventVestingTimer;\r\n    mapping (uint => uint) public eventVestingBalances;\r\n    \r\n    bool public tokenLock = true;\r\n    bool public saleTime = true;\r\n    uint public endSaleTime = 0;\r\n    \r\n    event OperIssue(address indexed _to, uint _tokens);\r\n    event MktIssue(address indexed _to, uint _tokens);\r\n    event BDevIssue(address indexed _to, uint _tokens);\r\n    event RsvIssue(address indexed _to, uint _tokens);\r\n    event EventIssue(address indexed _to, uint _tokens);\r\n    event SaleIssue(address indexed _to, uint _tokens);\r\n    \r\n    event Burn(address indexed _from, uint _tokens);\r\n    \r\n    event TokenUnlock(address indexed _to, uint _tokens);\r\n    event EndSale(uint _date);\r\n    \r\n    constructor() public\r\n    {\r\n        name        = \"LIX Token\";\r\n        decimals    = 18;\r\n        symbol      = \"LIX\";\r\n        \r\n        totalTokenSupply    = 0;\r\n        \r\n        tokenIssuedOper   = 0;\r\n        tokenIssuedMkt      = 0;\r\n        tokenIssuedBDev     = 0;\r\n        tokenIssuedRsv      = 0;\r\n        tokenIssuedEvent    = 0;\r\n        tokenIssuedSale     = 0;\r\n\r\n        burnTokenSupply     = 0;\r\n        \r\n        require(maxOperSupply == operVestingSupply.mul(operVestingTime));\r\n        require(maxMktSupply == mktVestingSupply.mul(mktVestingTime));\r\n        require(maxBDevSupply == bDevVestingSupply.mul(bDevVestingTime));\r\n        require(maxEventSupply == eventVestingSupply.mul(eventVestingTime));\r\n        \r\n        require(maxTotalSupply == maxOperSupply + maxMktSupply + maxBDevSupply + maxRsvSupply + maxEventSupply + maxSaleSupply);\r\n    }\r\n    \r\n    // ERC - 20 Interface -----\r\n\r\n    function totalSupply() view public returns (uint) \r\n    {\r\n        return totalTokenSupply;\r\n    }\r\n    \r\n    function balanceOf(address _who) view public returns (uint) \r\n    {\r\n        return balances[_who];\r\n    }\r\n    \r\n    function transfer(address _to, uint _value) public returns (bool) \r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[msg.sender] >= _value);\r\n        \r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        \r\n        emit Transfer(msg.sender, _to, _value);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function approve(address _spender, uint _value) public returns (bool)\r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[msg.sender] >= _value);\r\n        \r\n        approvals[msg.sender][_spender] = _value;\r\n        \r\n        emit Approval(msg.sender, _spender, _value);\r\n        \r\n        return true; \r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) view public returns (uint) \r\n    {\r\n        return approvals[_owner][_spender];\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) \r\n    {\r\n        require(isTransferable() == true);\r\n        require(balances[_from] >= _value);\r\n        require(approvals[_from][msg.sender] >= _value);\r\n        \r\n        approvals[_from][msg.sender] = approvals[_from][msg.sender].sub(_value);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to]  = balances[_to].add(_value);\r\n        \r\n        emit Transfer(_from, _to, _value);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    // -----\r\n    \r\n    // Vesting Function -----\r\n    \r\n    // _time : 1 ~ 24\r\n    function operIssue(address _to, uint _time) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require(_time <= operVestingTime);\r\n        \r\n        uint nowTime = now;\r\n        require(nowTime > operVestingTimer[_time] );\r\n        \r\n        uint tokens = operVestingSupply;\r\n\r\n        require(tokens == operVestingBalances[_time]);\r\n        require(maxOperSupply >= tokenIssuedOper.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        operVestingBalances[_time] = 0;\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedOper = tokenIssuedOper.add(tokens);\r\n        \r\n        emit OperIssue(_to, tokens);\r\n    }\r\n    \r\n    // _time : 1 ~ 18\r\n    function mktIssue(address _to, uint _time) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require( _time <= mktVestingTime);\r\n        \r\n        uint nowTime = now;\r\n        require( nowTime > mktVestingTimer[_time] );\r\n        \r\n        uint tokens = mktVestingSupply;\r\n\r\n        require(tokens == mktVestingBalances[_time]);\r\n        require(maxMktSupply >= tokenIssuedMkt.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        mktVestingBalances[_time] = 0;\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedMkt = tokenIssuedMkt.add(tokens);\r\n        \r\n        emit MktIssue(_to, tokens);\r\n    }\r\n    \r\n    // _time : 1 ~ 12\r\n    function bDevIssue(address _to, uint _time) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require( _time <= bDevVestingTime);\r\n        \r\n        uint nowTime = now;\r\n        require( nowTime > bDevVestingTimer[_time] );\r\n        \r\n        uint tokens = bDevVestingSupply;\r\n\r\n        require(tokens == bDevVestingBalances[_time]);\r\n        require(maxBDevSupply >= tokenIssuedBDev.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        bDevVestingBalances[_time] = bDevVestingBalances[_time].sub(tokens);\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedBDev = tokenIssuedBDev.add(tokens);\r\n        \r\n        emit BDevIssue(_to, tokens);\r\n    }\r\n    \r\n    function rsvIssue(address _to) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require(tokenIssuedRsv == 0);\r\n        \r\n        uint nowTime = now;\r\n        require( nowTime > rsvVestingTime );\r\n        \r\n        uint tokens = maxRsvSupply;\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedRsv = tokenIssuedRsv.add(tokens);\r\n        \r\n        emit RsvIssue(_to, tokens);\r\n    }\r\n    \r\n    // _time : 1 ~ 7\r\n    function eventIssue(address _to, uint _time) onlyOwner public\r\n    {\r\n        require(saleTime == false);\r\n        require( _time <= eventVestingTime);\r\n        \r\n        uint nowTime = now;\r\n        require( nowTime > eventVestingTimer[_time] );\r\n        \r\n        uint tokens = eventVestingSupply;\r\n\r\n        require(tokens == eventVestingBalances[_time]);\r\n        require(maxEventSupply >= tokenIssuedEvent.add(tokens));\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        eventVestingBalances[_time] = eventVestingBalances[_time].sub(tokens);\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedEvent = tokenIssuedEvent.add(tokens);\r\n        \r\n        emit EventIssue(_to, tokens);\r\n    }\r\n    \r\n    function saleIssue(address _to) onlyOwner public\r\n    {\r\n        require(tokenIssuedSale == 0);\r\n        \r\n        uint tokens = maxSaleSupply;\r\n        \r\n        balances[_to] = balances[_to].add(tokens);\r\n        \r\n        totalTokenSupply = totalTokenSupply.add(tokens);\r\n        tokenIssuedSale = tokenIssuedSale.add(tokens);\r\n        \r\n        emit SaleIssue(_to, tokens);\r\n    }\r\n    \r\n    // -----\r\n    \r\n    // Lock Function -----\r\n    \r\n    function isTransferable() private view returns (bool)\r\n    {\r\n        if(tokenLock == false)\r\n        {\r\n            return true;\r\n        }\r\n        else if(msg.sender == owner)\r\n        {\r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n    \r\n    function setTokenUnlock() onlyOwner public\r\n    {\r\n        require(tokenLock == true);\r\n        require(saleTime == false);\r\n        \r\n        tokenLock = false;\r\n    }\r\n    \r\n    function setTokenLock() onlyOwner public\r\n    {\r\n        require(tokenLock == false);\r\n        \r\n        tokenLock = true;\r\n    }\r\n    \r\n    // -----\r\n    \r\n    // ETC / Burn Function -----\r\n    \r\n    function endSale() onlyOwner public\r\n    {\r\n        require(saleTime == true);\r\n        require(maxSaleSupply == tokenIssuedSale);\r\n        \r\n        saleTime = false;\r\n        \r\n        uint nowTime = now;\r\n        endSaleTime = nowTime;\r\n        \r\n        for(uint i = 1; i <= operVestingTime; i++)\r\n        {\r\n            uint lockTime = endSaleTime + operVestingLockDate + (month * i);\r\n            operVestingTimer[i] = lockTime;\r\n            operVestingBalances[i] = operVestingSupply;\r\n        }\r\n        \r\n        for(uint i = 1; i <= mktVestingTime; i++)\r\n        {\r\n            uint lockTime = endSaleTime + mktVestingLockDate + (month * i);\r\n            mktVestingTimer[i] = lockTime;\r\n            mktVestingBalances[i] = mktVestingSupply;\r\n        }\r\n        \r\n        for(uint i = 1; i <= bDevVestingTime; i++)\r\n        {\r\n            uint lockTime = endSaleTime + bDevVestingLockDate + (month * i);\r\n            bDevVestingTimer[i] = lockTime;\r\n            bDevVestingBalances[i] = bDevVestingSupply;\r\n        }\r\n        \r\n        rsvVestingTime = endSaleTime + rsvVestingLockDate;\r\n        \r\n        for(uint i = 0; i < eventVestingTime; i++)\r\n        {\r\n            uint lockTime = endSaleTime + (month * i);\r\n            eventVestingTimer[i + 1] = lockTime;\r\n            eventVestingBalances[i + 1] = eventVestingSupply;\r\n        }\r\n        \r\n        emit EndSale(endSaleTime);\r\n    }\r\n    \r\n    function withdrawTokens(address _contract, uint _decimals, uint _value) onlyOwner public\r\n    {\r\n\r\n        if(_contract == address(0x0))\r\n        {\r\n            uint eth = _value.mul(10 ** _decimals);\r\n            msg.sender.transfer(eth);\r\n        }\r\n        else\r\n        {\r\n            uint tokens = _value.mul(10 ** _decimals);\r\n            ERC20Interface(_contract).transfer(msg.sender, tokens);\r\n            \r\n            emit Transfer(address(0x0), msg.sender, tokens);\r\n        }\r\n    }\r\n    \r\n    function burnToken(uint _value) onlyOwner public\r\n    {\r\n        uint tokens = _value * E18;\r\n        \r\n        require(balances[msg.sender] >= tokens);\r\n        \r\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n        \r\n        burnTokenSupply = burnTokenSupply.add(tokens);\r\n        totalTokenSupply = totalTokenSupply.sub(tokens);\r\n        \r\n        emit Burn(msg.sender, tokens);\r\n    }\r\n    \r\n    function close() onlyOwner public\r\n    {\r\n        selfdestruct(msg.sender);\r\n    }\r\n    \r\n    // -----\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eventVestingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleTime\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bDevVestingBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedBDev\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operVestingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"rsvIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedEvent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"saleIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mktVestingBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"operIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"operVestingTimer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"},{\"name\":\"_decimals\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedRsv\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endSaleTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxRsvSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eventVestingTimer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mktVestingTimer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"bDevIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxEventSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxOperSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eventVestingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenUnlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"eventIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setTokenLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedOper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eventVestingBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bDevVestingLockDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxMktSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mktVestingLockDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rsvVestingLockDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSaleSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mktVestingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"mktIssue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rsvVestingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxBDevSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"operVestingBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIssuedMkt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bDevVestingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bDevVestingTimer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operVestingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mktVestingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bDevVestingSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operVestingLockDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"OperIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"MktIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"BDevIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"RsvIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"EventIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"SaleIssue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"TokenUnlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"EndSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"LIXToken","CompilerVersion":"v0.5.9+commit.e560f70d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7e93e554b46765b6bb7064d95a5d3640d423b463cf689f91f0f9dc447d9d4447"}]}