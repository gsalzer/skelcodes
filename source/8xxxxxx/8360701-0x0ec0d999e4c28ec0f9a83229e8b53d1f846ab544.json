{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.11;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n}\r\n\r\ncontract IERC721 {\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    function balanceOf(address owner) public view returns (uint256 balance);\r\n\r\n    function ownerOf(uint256 tokenId) public view returns (address owner);\r\n\r\n    function approve(address to, uint256 tokenId) public;\r\n\r\n    function getApproved(uint256 tokenId) public view returns (address operator);\r\n\r\n    function setApprovalForAll(address operator, bool _approved) public;\r\n\r\n    function isApprovedForAll(address owner, address operator) public view returns (bool);\r\n\r\n    function transfer(address to, uint256 tokenId) public;\r\n\r\n    function transferFrom(address from, address to, uint256 tokenId) public;\r\n\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public;\r\n\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public;\r\n}\r\ncontract buyNFTInterface {\r\n    struct Price {\r\n        address payable tokenOwner;\r\n        uint256 Price;\r\n        uint256 fee;\r\n        uint isHightlight;\r\n    }\r\n    function getTokenPrice(address _game, uint256 _tokenId) public\r\n    returns (address _tokenOwner, uint256 _Price, uint256 _fee, uint _isHightlight);\r\n\r\n    function ownerOf(address _game, uint256 _tokenId) public view returns (address);\r\n\r\n    function balanceOf() public view returns (uint256);\r\n\r\n    function getApproved(address _game, uint256 _tokenId) public view returns (address);\r\n\r\n    function calFee(address _game, uint256 _price) public view returns (uint256);\r\n\r\n    function calFeeHightLight(address _game, uint256 _tokenId, uint _isHightLight) public view returns (uint256);\r\n\r\n    function calPrice(address _game, uint256 _tokenId, uint256 _Price, uint _isHightLight) public view returns(uint256 _Need);\r\n\r\n    function setPriceFee(address _game, uint256 _tokenId, uint256 _Price, uint _isHightLight) public payable;\r\n\r\n    function removePrice(address _game, uint256 _tokenId) public;\r\n\r\n    function setLimitFee(address _game, uint256 _Fee, uint256 _limitFee, uint256 _hightLightFee) public;\r\n    function withdraw(uint256 amount) public;\r\n    function revenue() public view returns (uint256);\r\n    function buy(address _game, uint256 tokenId) public payable;\r\n    function buyWithoutCheckApproved(address _game, uint256 tokenId) public payable;\r\n    function buyFromSmartcontractViaTransfer(address _game, uint256 _tokenId) public payable;\r\n}\r\n\r\ncontract BuyNFTProxy is Ownable {\r\n    string[] public cryptoSymbols;\r\n    mapping(string => address) public CryptoCurrencies;\r\n    struct Price {\r\n        string crypto;\r\n        address payable tokenOwner;\r\n        uint256 Price;\r\n        uint256 fee;\r\n        uint isHightlight;\r\n    }\r\n    constructor() public {\r\n        CryptoCurrencies['ETH'] = address(0xEC163d78d9904C9B0FD808383BA92BE3F56f28cE);\r\n        cryptoSymbols.push('ETH');\r\n    }\r\n    modifier isOwnerOf(address _game, uint256 _tokenId) {\r\n        IERC721 erc721Address = IERC721(_game);\r\n        require(erc721Address.ownerOf(_tokenId) == msg.sender);\r\n        _;\r\n    }\r\n    function getCryptoSymbols() public view returns(string[] memory) {\r\n        return cryptoSymbols;\r\n    }\r\n    function addCryptoCurrencies(string memory _crypto, address _cryptoAddress) public {\r\n        if(CryptoCurrencies[_crypto] == address(0x0000000000000000000000000000000000000000)) cryptoSymbols.push(_crypto);\r\n        CryptoCurrencies[_crypto] = address(_cryptoAddress);\r\n    }\r\n    function getTokenPrice(address _game, uint256 _tokenId) public\r\n    returns (string memory _crypto, address _tokenOwner, uint256 _Price, uint256 _fee, uint _isHightlight){\r\n        for(uint i = 0; i < cryptoSymbols.length; i++) {\r\n            buyNFTInterface cripto = buyNFTInterface(CryptoCurrencies[cryptoSymbols[i]]);\r\n            (_tokenOwner, _Price, _fee, _isHightlight) = cripto.getTokenPrice(_game, _tokenId);\r\n            _crypto = cryptoSymbols[i];\r\n            if(_Price > 0) break;\r\n        }\r\n    }\r\n    function calFee(string memory _crypto, address _game, uint256 _price) public view returns (uint256){\r\n        buyNFTInterface cripto = buyNFTInterface(CryptoCurrencies[_crypto]);\r\n        return cripto.calFee(_game, _price);\r\n    }\r\n    function calPrice(string memory _crypto, address _game, uint256 _tokenId, uint256 _Price, uint _isHightLight) public view returns(uint256 _Need){\r\n        buyNFTInterface cripto = buyNFTInterface(CryptoCurrencies[_crypto]);\r\n        return cripto.calPrice(_game, _tokenId, _Price, _isHightLight);\r\n    }\r\n    function calFeeHightLight(string memory _crypto, address _game, uint256 _tokenId, uint _isHightLight) public view returns (uint256){\r\n        buyNFTInterface cripto = buyNFTInterface(CryptoCurrencies[_crypto]);\r\n        return cripto.calFeeHightLight(_game, _tokenId, _isHightLight);\r\n    }\r\n\r\n    function revenue(string memory _crypto) public view returns (uint256){\r\n        buyNFTInterface cripto = buyNFTInterface(CryptoCurrencies[_crypto]);\r\n        return cripto.revenue();\r\n    }\r\n\r\n    function ownerOf(string memory _crypto, address _game, uint256 _tokenId) public view returns (address) {\r\n        buyNFTInterface cripto = buyNFTInterface(CryptoCurrencies[_crypto]);\r\n        return cripto.ownerOf(_game, _tokenId);\r\n    }\r\n    function balanceOf(string memory _crypto) public view returns (uint256){\r\n        buyNFTInterface cripto = buyNFTInterface(CryptoCurrencies[_crypto]);\r\n        return cripto.balanceOf();\r\n    }\r\n    function getApproved(string memory _crypto, address _game, uint256 _tokenId) public view returns (address){\r\n        buyNFTInterface cripto = buyNFTInterface(CryptoCurrencies[_crypto]);\r\n        return cripto.getApproved(_game, _tokenId);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_crypto\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_game\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCryptoSymbols\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_crypto\",\"type\":\"string\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cryptoSymbols\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_crypto\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_game\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_isHightLight\",\"type\":\"uint256\"}],\"name\":\"calFeeHightLight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_crypto\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_game\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_crypto\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_game\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"calFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"CryptoCurrencies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_crypto\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_game\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_Price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_isHightLight\",\"type\":\"uint256\"}],\"name\":\"calPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_Need\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_crypto\",\"type\":\"string\"}],\"name\":\"revenue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_game\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_crypto\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_Price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_isHightlight\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_crypto\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_cryptoAddress\",\"type\":\"address\"}],\"name\":\"addCryptoCurrencies\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"BuyNFTProxy","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0eb56671131af028a9a257d3b6b628f7f3a274133e731a1c758027e5fc3e451c"}]}