{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >= 0.4.24;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) external;\r\n\tfunction transferFrom(address from, address to, uint value) external;\r\n    function balanceOf(address tokenOwner) constant external returns (uint balance);\r\n    function allowance(address _owner, address _spender) constant external returns (uint remaining); \r\n}\r\n\r\ncontract againstTokenTransfer {\r\n    mapping(address => bool) public active;\r\n    mapping(address => string) public tkname;\r\n    mapping(address => uint) public decimals;\r\n\tmapping(address => uint) public rate; //9 decimal places\r\n\tmapping(address => uint) public buyoffer; //in AGAINST\r\n\ttoken tokenReward = token(0xF7Be133620a7D944595683cE2B14156591EFe609);\r\n\t\r\n\t\r\n    string public name = \"AGAINST GR\";\r\n    string public symbol = \"AGAINST\";\r\n    string public comment = \"AGAINST Graveyard Tokens\";\r\n    address internal owner;\r\n\t\r\n\tconstructor() public {\r\n       owner = address(msg.sender); \r\n    }\r\n\t\r\n\tfunction registerToken(address _token, string _name, uint _decimals, uint _rate, uint _buyoffer) public {\r\n\t   if (msg.sender == owner) {\r\n\t     active[_token] = false;\r\n\t\t tkname[_token] = _name;\r\n         decimals[_token] = _decimals;\r\n\t\t rate[_token] = _rate; //with 9 decimal places\r\n\t\t buyoffer[_token] = _buyoffer;\t//with 18 decimal places\t \r\n\t   }\r\n\t}\r\n\t\r\n\tfunction enableToken(address _token) public {\r\n\t   if (msg.sender == owner) {\r\n\t      active[_token] = true;\r\n\t   }\r\n\t}\t\r\n\t\r\n\tfunction disableToken(address _token) public {\r\n\t   if (msg.sender == owner) {\r\n\t      active[_token] = false;\r\n\t   }\r\n\t}\r\n\t\r\n\tfunction exchangeIt(address _token) public payable {\r\n\t   require(active[_token],'Token Disabled');\r\n       token swapToken = token(_token);\r\n       require(swapToken.allowance(msg.sender, address(this)) > 0);\r\n       uint tokenAmount = swapToken.allowance(msg.sender, address(this));\r\n       uint amount = (tokenAmount/(10**decimals[_token]))*(10**9)*rate[_token];\r\n\t   require(amount <= buyoffer[_token],'Too many coins');\r\n       require(tokenReward.balanceOf(address(this)) >= amount,'No contract Funds');\r\n       swapToken.transferFrom(msg.sender, address(this), tokenAmount);\r\n\t   buyoffer[_token] = buyoffer[_token]-amount;\r\n\t   tokenReward.transfer(msg.sender, amount);\r\n       swapToken.transfer(owner, tokenAmount);\r\n\t}\r\n\t\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"disableToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"exchangeIt\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"active\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint256\"},{\"name\":\"_rate\",\"type\":\"uint256\"},{\"name\":\"_buyoffer\",\"type\":\"uint256\"}],\"name\":\"registerToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tkname\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"enableToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyoffer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"comment\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"againstTokenTransfer","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://81030ef127563a0731803ebe9762b469745e090867d998aab0ab4faec341f3ef"}]}