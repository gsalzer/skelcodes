{"status":"1","message":"OK","result":[{"SourceCode":"// ----------------------------------------------------------------------------\r\n// IONS ICO Smart contract\r\n//\r\n// Symbol      : BuschCoin\r\n// Name        : BUC\r\n// Total Supply: 9 Billion (9.000.000.000)\r\n// Decimals    : 6\r\n// Price       : 0.22 CENT - 1 CENT\r\n// Rate        : 100 (1 ETH = 500 000 BUC)\r\n// Developer   : https://www.fiverr.com/mzn_rahi\r\n// ----------------------------------------------------------------------------\r\n\r\n/**\r\n *Submitted for verification at Etherscan.io on 2019-11-19\r\n*/\r\n\r\npragma solidity 0.4.24;\r\n\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract AltcoinToken {\r\n    function balanceOf(address _owner) constant public returns (uint256);\r\n    function transfer(address _to, uint256 _value) public returns (bool);\r\n}\r\n\r\ncontract ERC20Basic {\r\n    uint256 public totalSupply;\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address who) public constant returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender) public constant returns (uint256);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\ncontract ERC20Interface {\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n\r\n\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\r\n}\r\n\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\ncontract BuschCoin is ERC20, Owned {\r\n    \r\n    using SafeMath for uint256;\r\n    address owner = msg.sender;\r\n\t\t\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;    \r\n\r\n    string public constant name = \"BuschCoin\";\r\n    string public constant symbol = \"BUC\";\r\n    uint public constant decimals = 6;\r\n    \r\n    uint256 public totalSupply =  9000000000000000;\r\n    uint256 public totalDistributed = 0; \r\n    uint256 public totalIcoDistributed = 0;\r\n    uint256 public constant minContribution = 1 ether / 500000; // 0.000002 Eth\r\n\t\r\n\t\r\n\tuint256 public tokensPerEth = 0;\r\n\t\r\n\t// ------------------------------\r\n    // Token Distribution and Address\r\n    // ------------------------------\r\n    \r\n   // saleable 90%\r\n    uint256 public constant totalIco = 8100000000000000;\r\n    uint256 public totalIcoDist = 0;\r\n    address storageIco = owner;\r\n    \r\n    // airdrop 5%\r\n    uint256 public constant totalAirdrop = 450000000000000;\r\n    address private storageAirdrop = 0xb9Fd798AE37cE7936D87EFe0e6e4f17997235e74;\r\n    \r\n    // developer 5%\r\n    uint256 public constant totalDeveloper = 450000000000000;\r\n    address private storageDeveloper = 0x96Ee0179A270Bc22AEb1224B4d340dF4151F50b7;\r\n    \r\n    // ---------------------\r\n    // sale start  price and bonus\r\n    // ---------------------\r\n    \r\n    // presale\r\n\tuint public presaleStartTime = 1574096400; // Tuesday, 19 November 2019 00:00:00 GMT+07:00\r\n    uint256 public presalePerEth = 500000000000;\r\n    \r\n    // ico\r\n    uint public icoStartTime = 1575306000;   // Tuesday, 03 December 2019 00:00:00 GMT+07:00\r\n    uint256 public icoPerEth = 400000000000;\r\n    \r\n    // ico1\r\n    uint public ico1StartTime = 1576602000; // Wednesday, 18 December 2019 00:00:00 GMT+07:00\r\n    uint256 public ico1PerEth = 250000000000;\r\n    \r\n    // ico2\r\n    uint public ico2StartTime = 1577725200;  // Tuesday, 31 December  2019 00:00:00 GMT+07:00    \r\n    uint256 public ico2PerEth = 200000000000;\r\n    \r\n    // ico3\r\n    uint public ico3StartTime = 1579021200;  // Wednesday, 15 January 2020 00:00:00 GMT+07:00\r\n    uint256 public ico3PerEth = 180000000000;\r\n    \r\n     // ico4\r\n    uint public ico4StartTime = 1580317200;  // Thursday, 30 January 2020 00:00:00 GMT+07:00\r\n    uint256 public ico4PerEth = 150000000000;\r\n    \r\n    //ico start and end\r\n    uint public icoOpenTime = presaleStartTime;\r\n    uint public icoEndTime = 1585587600;  // Tuesday, 31 March 2020 00:00:00 GMT+07:00\r\n    \r\n\t// -----------------------\r\n\t// events\r\n\t// -----------------------\r\n\t\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    \r\n    event Distr(address indexed to, uint256 amount);\r\n    event DistrFinished();\r\n\r\n    event Airdrop(address indexed _owner, uint _amount, uint _balance);\r\n\r\n    event TokensPerEthUpdated(uint _tokensPerEth);\r\n    \r\n    event Burn(address indexed burner, uint256 value);\r\n\t\r\n\tevent Sent(address from, address to, uint amount);\r\n\t\r\n\t\r\n\t// -------------------\r\n\t// STATE\r\n\t// ---------------------\r\n    bool public icoOpen = false; \r\n    bool public icoFinished = false;\r\n    bool public distributionFinished = false;\r\n    \r\n    \r\n    // -----\r\n    // temp\r\n    // -----\r\n    uint256 public tTokenPerEth = 0;\r\n    uint256 public tAmount = 0;\r\n    uint i = 0;\r\n    bool private tIcoOpen = false;\r\n    \r\n    // ------------------------------------------------------------------------\r\n    // Constructor\r\n    // ------------------------------------------------------------------------\r\n    constructor() public {        \r\n        balances[owner] = totalIco;\r\n        balances[storageAirdrop] = totalAirdrop;\r\n        balances[storageDeveloper] = totalDeveloper;       \r\n    }\r\n    \r\n    // ------------------------------------------------------------------------\r\n    // Total supply\r\n    // ------------------------------------------------------------------------\r\n    function totalSupply() public constant returns (uint) {\r\n        return totalSupply  - balances[address(0)];\r\n    }\r\n\r\n    modifier canDistr() {\r\n        require(!distributionFinished);\r\n        _;\r\n    }\r\n\t\r\n\tfunction startDistribution() onlyOwner canDistr public returns (bool) {\r\n        icoOpen = true;\r\n        presaleStartTime = now;\r\n        icoOpenTime = now;\r\n        return true;\r\n    }\r\n    \r\n    function finishDistribution() onlyOwner canDistr public returns (bool) {\r\n        distributionFinished = true;\r\n        icoFinished = true;\r\n        emit DistrFinished();\r\n        return true;\r\n    }\r\n    \r\n    function distr(address _to, uint256 _amount) canDistr private returns (bool) {\r\n        totalDistributed = totalDistributed.add(_amount);        \r\n        balances[_to] = balances[_to].add(_amount);\r\n        balances[owner] = balances[owner].sub(_amount);\r\n        emit Distr(_to, _amount);\r\n        emit Transfer(address(0), _to, _amount);\r\n\r\n        return true;\r\n    }\r\n\t\r\n\tfunction send(address receiver, uint amount) public {\r\n        if (balances[msg.sender] < amount) return;\r\n        balances[msg.sender] -= amount;\r\n        balances[receiver] += amount;\r\n        emit Sent(msg.sender, receiver, amount);\r\n    }\r\n    \r\n   \r\n    function updateTokensPerEth(uint _tokensPerEth) public onlyOwner {        \r\n        tokensPerEth = _tokensPerEth;\r\n        emit TokensPerEthUpdated(_tokensPerEth);\r\n    }\r\n           \r\n    function () external payable {\r\n\t\t\t\t\r\n\t\t//owner withdraw \r\n\t\tif (msg.sender == owner && msg.value == 0){\r\n\t\t\twithdraw();\r\n\t\t}\r\n\t\t\r\n\t\tif(msg.sender != owner){\r\n\t\t\tif ( now < icoOpenTime ){\r\n\t\t\t\trevert('ICO does not open yet');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//is Open\r\n\t\t\tif ( ( now >= icoOpenTime ) && ( now <= icoEndTime ) ){\r\n\t\t\t\ticoOpen = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ( now > icoEndTime ){\r\n\t\t\t\ticoOpen = false;\r\n\t\t\t\ticoFinished = true;\r\n\t\t\t\tdistributionFinished = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ( icoFinished == true ){\r\n\t\t\t\trevert('ICO has finished');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ( distributionFinished == true ){\r\n\t\t\t\trevert('Token distribution has finished');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ( icoOpen == true ){\r\n\t\t\t\tif ( now >= presaleStartTime && now < icoStartTime){ tTokenPerEth = presalePerEth; }\r\n\t\t\t\tif ( now >= icoStartTime && now < ico1StartTime){ tTokenPerEth = icoPerEth; }\r\n\t\t\t\tif ( now >= ico1StartTime && now < ico2StartTime){ tTokenPerEth = ico1PerEth; }\r\n\t\t\t\tif ( now >= ico2StartTime && now < ico3StartTime){ tTokenPerEth = ico2PerEth; }\r\n\t\t\t\tif ( now >= ico3StartTime && now < ico4StartTime){ tTokenPerEth = ico3PerEth; }\r\n\t\t\t\tif ( now >= ico4StartTime && now < icoEndTime)   { tTokenPerEth = ico4PerEth; }\r\n\t\t\t\t\r\n\t\t\t\ttokensPerEth = tTokenPerEth;\t\t\t\t\r\n\t\t\t\tgetTokens();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n     }\r\n    \r\n    function getTokens() payable canDistr  public {\r\n        uint256 tokens = 0;\r\n\r\n        require( msg.value >= minContribution );\r\n\r\n        require( msg.value > 0 );\r\n        \r\n        tokens = tokensPerEth.mul(msg.value) / 1 ether;\r\n        address investor = msg.sender;\r\n        \r\n        \r\n        if ( icoFinished == true ){\r\n\t\t\trevert('ICO Has Finished');\r\n\t\t}\r\n        \r\n        if( balances[owner] < tokens ){\r\n\t\t\trevert('Insufficient Token Balance or Sold Out.');\r\n\t\t}\r\n        \r\n        if (tokens < 0){\r\n\t\t\trevert();\r\n\t\t}\r\n        \r\n        totalIcoDistributed += tokens;\r\n        \r\n        if (tokens > 0) {\r\n           distr(investor, tokens);           \r\n        }\r\n\r\n        if (totalIcoDistributed >= totalIco) {\r\n            distributionFinished = true;\r\n        }\r\n    }\r\n\t\r\n\t\r\n    function balanceOf(address _owner) constant public returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    // mitigates the ERC20 short address attack\r\n    modifier onlyPayloadSize(uint size) {\r\n        assert(msg.data.length >= size + 4);\r\n        _;\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _amount) onlyPayloadSize(2 * 32) public returns (bool success) {\r\n\r\n        require(_to != address(0));\r\n        require(_amount <= balances[msg.sender]);\r\n        \r\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        emit Transfer(msg.sender, _to, _amount);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _amount) onlyPayloadSize(3 * 32) public returns (bool success) {\r\n\r\n        require(_to != address(0));\r\n        require(_amount <= balances[_from]);\r\n        require(_amount <= allowed[_from][msg.sender]);\r\n        \r\n        balances[_from] = balances[_from].sub(_amount);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        emit Transfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n    \r\n    \r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        // mitigates the ERC20 spend/approval race condition\r\n        if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; }\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) constant public returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    \r\n    function getTokenBalance(address tokenAddress, address who) constant public returns (uint){\r\n        AltcoinToken t = AltcoinToken(tokenAddress);\r\n        uint bal = t.balanceOf(who);\r\n        return bal;\r\n    }\r\n    \r\n    function withdraw() onlyOwner public {\r\n        address myAddress = this;\r\n        uint256 etherBalance = myAddress.balance;\r\n        owner.transfer(etherBalance);\r\n    }\r\n    \r\n    function burn(uint256 _amount) onlyOwner public {\r\n        balances[owner] = balances[owner].sub(_amount);\r\n        totalSupply = totalSupply.sub(_amount);\r\n        totalDistributed = totalDistributed.sub(_amount);\r\n        emit Burn(owner, _amount);\r\n    }\r\n    \r\n  \r\n    \r\n    function withdrawAltcoinTokens(address _tokenContract) onlyOwner public returns (bool) {\r\n        AltcoinToken token = AltcoinToken(_tokenContract);\r\n        uint256 amount = token.balanceOf(address(this));\r\n        return token.transfer(owner, amount);\r\n    }\r\n    \r\n    function dist_privateSale(address _to, uint256 _amount) onlyOwner public {\r\n\t\t\r\n\t\trequire(_amount <= balances[owner]);\r\n\t\trequire(_amount > 0);\r\n\t\t\r\n\t\ttotalDistributed = totalDistributed.add(_amount);        \r\n        balances[_to] = balances[_to].add(_amount);\r\n        balances[owner] = balances[owner].sub(_amount);\r\n        emit Distr(_to, _amount);\r\n        emit Transfer(address(0), _to, _amount);\r\n        tAmount = 0;\r\n\t}\r\n\t\r\n\tfunction dist_airdrop(address _to, uint256 _amount) onlyOwner public {\t\t\r\n\t\trequire(_amount <= balances[storageAirdrop]);\r\n\t\trequire(_amount > 0);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        balances[storageAirdrop] = balances[storageAirdrop].sub(_amount);\r\n        emit Airdrop(_to, _amount, balances[_to]);\r\n        emit Transfer(address(0), _to, _amount);\r\n\t}\r\n\t\r\n\tfunction dist_multiple_airdrop(address[] _participants, uint256 _amount) onlyOwner public {\r\n\t\ttAmount = 0;\r\n\t\t\r\n\t\tfor ( i = 0; i < _participants.length; i++){\r\n\t\t\ttAmount = tAmount.add(_amount);\r\n\t\t}\r\n\t\t\r\n\t\trequire(tAmount <= balances[storageAirdrop]);\r\n\t\t\r\n\t\tfor ( i = 0; i < _participants.length; i++){\r\n\t\t\tdist_airdrop(_participants[i], _amount);\r\n\t\t}\r\n\t\t\r\n\t\ttAmount = 0;\r\n\t}    \r\n    \r\n    function dist_developer(address _to, uint256 _amount) onlyOwner public {\r\n\t\trequire(_amount <= balances[storageDeveloper]);\r\n\t\trequire(_amount > 0);\r\n\t\tbalances[_to] = balances[_to].add(_amount);\r\n        balances[storageDeveloper] = balances[storageDeveloper].sub(_amount);\r\n        emit Distr(_to, _amount);\r\n        emit Transfer(address(0), _to, _amount);\r\n        tAmount = 0;\r\n\t}\r\n\t\r\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\r\n    }\r\n    \r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"ico1StartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalIco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalIcoDist\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawAltcoinTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ico4StartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ico1PerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoOpenTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoPerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ico2PerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ico3StartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAirdrop\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presalePerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"dist_developer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ico4PerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoOpen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishDistribution\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokensPerEth\",\"type\":\"uint256\"}],\"name\":\"updateTokensPerEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalIcoDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tTokenPerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"dist_privateSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ico3PerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ico2StartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distributionFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startDistribution\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participants\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"dist_multiple_airdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDeveloper\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"dist_airdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Distr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DistrFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"Airdrop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_tokensPerEth\",\"type\":\"uint256\"}],\"name\":\"TokensPerEthUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"BuschCoin","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://381878a6456db6d818097a2a2bad019cc335de91673640fbb3b4eccf096e0e6a"}]}