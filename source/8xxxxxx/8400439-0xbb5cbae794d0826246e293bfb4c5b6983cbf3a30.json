{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract ProofOfProperty {\r\n\r\n    event ProofCreated(\r\n        bytes32 indexed objectId,\r\n        bytes32 zipHash\r\n    );\r\n\r\n    address public owner;\r\n  \r\n    mapping (bytes32 => bytes32) hashesByObjectId;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner is allowed to access this function.\");\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function notarizeHash(bytes32 objectId, bytes32 zipHash) public onlyOwner {\r\n        hashesByObjectId[objectId] = zipHash;\r\n\r\n        emit ProofCreated(objectId, zipHash);\r\n    }\r\n\r\n    function notarizeMultipleHash(bytes32[] memory objectIds, bytes32[] memory zipHashes) public onlyOwner {\r\n        for(uint i = 0; i < objectIds.length; i++) {\r\n            hashesByObjectId[objectIds[i]] = zipHashes[i];\r\n            emit ProofCreated(objectIds[i], zipHashes[i]);\r\n        }\r\n    }\r\n\r\n    function doesProofExist(bytes32 objectId, bytes32 zipHash) public view returns (bool) {\r\n        return hashesByObjectId[objectId] == zipHash;\r\n    }\r\n    \r\n    function getProof(bytes32 objectId) public view returns (bytes32) {\r\n        return hashesByObjectId[objectId];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"objectId\",\"type\":\"bytes32\"},{\"name\":\"zipHash\",\"type\":\"bytes32\"}],\"name\":\"doesProofExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"objectIds\",\"type\":\"bytes32[]\"},{\"name\":\"zipHashes\",\"type\":\"bytes32[]\"}],\"name\":\"notarizeMultipleHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"objectId\",\"type\":\"bytes32\"}],\"name\":\"getProof\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"objectId\",\"type\":\"bytes32\"},{\"name\":\"zipHash\",\"type\":\"bytes32\"}],\"name\":\"notarizeHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"objectId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"zipHash\",\"type\":\"bytes32\"}],\"name\":\"ProofCreated\",\"type\":\"event\"}]","ContractName":"ProofOfProperty","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://5ad9bccf512ac0f7827d4cb66ef09c1bd1a671df071c9cf7d5e21ce3b53493aa"}]}