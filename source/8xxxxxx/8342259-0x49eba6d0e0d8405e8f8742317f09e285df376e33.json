{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.1;\r\n\r\ninterface ERC20Interface {\r\n     function totalSupply() external view returns (uint);\r\n     function balanceOf(address tokenOwner) external view returns (uint balance);\r\n     function allowance(address tokenOwner, address spender) external view returns (uint remaining);\r\n     function transfer(address to, uint tokens) external returns (bool success);\r\n     function approve(address spender, uint tokens) external returns (bool success);\r\n     function transferFrom(address from, address to, uint tokens) external returns (bool success);\r\n}\r\n\r\ninterface Bancor {\r\n    function convert(ERC20Interface _fromToken, ERC20Interface _toToken, uint256 _amount, uint256 _minReturn) external returns (uint256);\r\n}\r\n\r\ncontract Experiment {\r\n    ERC20Interface constant public DAI = ERC20Interface(0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359);\r\n    ERC20Interface constant public BNT = ERC20Interface(0x1F573D6Fb3F13d689FF844B4cE37794d79a7FF1C);\r\n    ERC20Interface constant public DAIBNT = ERC20Interface(0xee01b3AB5F6728adc137Be101d99c678938E6E72);\r\n    Bancor         constant public bancor = Bancor(0x587044b74004E3D5eF2D453b7F8d198d9e4cB558);\r\n    \r\n    constructor() public {\r\n        BNT.approve(address(bancor), 1e30);\r\n        DAI.approve(address(bancor), 1e30);        \r\n        DAIBNT.approve(address(bancor), 1e30);        \r\n    }\r\n    \r\n    event StepPre(uint step,\r\n                  uint srcBalanceBefore,\r\n                  uint destBalanceBefore,\r\n                  uint srcAmount);\r\n\r\n    event StepPost(uint step,\r\n                   uint srcBalanceAfter,\r\n                   uint destBalanceAfter,\r\n                   uint destAmount);\r\n    \r\n    function step1(uint bntAmount) public returns(uint) {\r\n        emit StepPre(1, BNT.balanceOf(address(bancor)), DAIBNT.totalSupply(), bntAmount);\r\n        \r\n        uint retVal = bancor.convert(BNT, DAIBNT, bntAmount, 1);\r\n        \r\n        emit StepPost(1, BNT.balanceOf(address(bancor)), DAIBNT.totalSupply(), retVal);\r\n        \r\n        return retVal;\r\n    }\r\n    \r\n    function step2(uint daibntAmount) public returns(uint) {\r\n        emit StepPre(2, DAIBNT.totalSupply(), DAI.balanceOf(address(bancor)), daibntAmount);\r\n        \r\n        uint retVal = bancor.convert(DAIBNT, DAI, daibntAmount, 1);\r\n        \r\n        emit StepPost(2, DAIBNT.totalSupply(), DAI.balanceOf(address(bancor)), retVal);\r\n        \r\n        return retVal;\r\n    }\r\n    \r\n    function step3(uint daiAmount) public returns(uint) {\r\n        emit StepPre(3, DAI.balanceOf(address(bancor)), DAIBNT.totalSupply(), daiAmount);\r\n        \r\n        uint retVal = bancor.convert(DAI, DAIBNT, daiAmount, 1);\r\n        \r\n        emit StepPost(3, DAI.balanceOf(address(bancor)), DAIBNT.totalSupply(), retVal);\r\n        \r\n        return retVal;\r\n    }    \r\n    \r\n    function step4(uint daibntAmount) public returns(uint) {\r\n        emit StepPre(4, DAIBNT.totalSupply(), BNT.balanceOf(address(bancor)), daibntAmount);        \r\n        \r\n        uint retVal = bancor.convert(DAIBNT, BNT, daibntAmount, 1);\r\n        \r\n        emit StepPost(4, DAIBNT.totalSupply(), BNT.balanceOf(address(bancor)), retVal);\r\n        \r\n        return retVal;\r\n    }\r\n    \r\n    event AllBalance(uint bntBalance, uint daiBalance, uint daibntBalance);\r\n    \r\n    function allSteps(uint bntAmount) public {\r\n        BNT.transferFrom(msg.sender, address(this), bntAmount);\r\n        \r\n        emit AllBalance(BNT.balanceOf(address(bancor)),\r\n                   DAI.balanceOf(address(bancor)),\r\n                   DAIBNT.totalSupply());\r\n        \r\n        uint amount = step1(bntAmount);\r\n        amount = step2(amount);\r\n        amount = step3(amount);\r\n        amount = step4(amount);\r\n        \r\n        BNT.transfer(msg.sender, amount);\r\n        \r\n        emit AllBalance(BNT.balanceOf(address(bancor)),\r\n                   DAI.balanceOf(address(bancor)),\r\n                   DAIBNT.totalSupply());\r\n    }\r\n}\r\n\r\n\r\n//1 BNT => DAIBNT => DAI => DAIBNT => BNT","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"bntAmount\",\"type\":\"uint256\"}],\"name\":\"allSteps\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"daibntAmount\",\"type\":\"uint256\"}],\"name\":\"step4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DAIBNT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"bntAmount\",\"type\":\"uint256\"}],\"name\":\"step1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BNT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"daiAmount\",\"type\":\"uint256\"}],\"name\":\"step3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bancor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"daibntAmount\",\"type\":\"uint256\"}],\"name\":\"step2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"step\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"srcBalanceBefore\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"destBalanceBefore\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"srcAmount\",\"type\":\"uint256\"}],\"name\":\"StepPre\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"step\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"srcBalanceAfter\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"destBalanceAfter\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"destAmount\",\"type\":\"uint256\"}],\"name\":\"StepPost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"bntBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"daiBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"daibntBalance\",\"type\":\"uint256\"}],\"name\":\"AllBalance\",\"type\":\"event\"}]","ContractName":"Experiment","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2a83ab8cd0d563116d9df469deb2a359cbaafb924ee760350cecd1a5901f75b3"}]}