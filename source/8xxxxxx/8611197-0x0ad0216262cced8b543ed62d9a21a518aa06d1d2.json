{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.21 <0.6.0;\r\n\r\ncontract ProofOfExistence {\r\n\r\nenum BlockchainIdentification {Ixxo,Ethereum,Gochain}\r\n\r\nstruct FileExistenceStruct {\r\nuint256 date;\r\naddress filesender;\r\nstring fileHash;\r\nstring filePathHash;\r\naddress contractAddress;\r\nbytes32 QRCodeHash;\r\nBlockchainIdentification identifier;\r\n}\r\n\r\nmapping(address => FileExistenceStruct[]) fileExistenceProofs;\r\n\r\n\r\n/**\r\n *@dev function to set the Proof of existence for a file \r\n */\r\n    function SetFileExistenceProof(address dappBoxOrigin, string memory _fileHash, string memory _filePathHash, address _contractAddress ,BlockchainIdentification _identifier) public returns (bytes32)\r\n    {\r\n        FileExistenceStruct memory newInfo;\r\n        uint256 _date = now;\r\n        bytes32 QRCodeHash = generateQRCodeForFile(dappBoxOrigin,_fileHash,_filePathHash,_contractAddress ,_identifier);\r\n        newInfo.date = _date;\r\n        newInfo.filesender = dappBoxOrigin;\r\n        newInfo.fileHash = _fileHash;\r\n        newInfo.filePathHash = _filePathHash;\r\n        newInfo.contractAddress = _contractAddress;\r\n        newInfo.identifier = _identifier;\r\n        newInfo.QRCodeHash = QRCodeHash;\r\n\r\n        fileExistenceProofs[dappBoxOrigin].push(newInfo);\r\n        return QRCodeHash;\r\n    }\r\n\r\n\r\n/**\r\n *@dev function to get the Proof of existence for a file \r\n */\r\n    function GetFileExistenceProof(address dappBoxOrigin,string memory fileHash, string memory filePathHash) public view returns(uint256,address,address,BlockchainIdentification,bytes32) {\r\n    \r\n        for(uint i = 0 ; i < fileExistenceProofs[dappBoxOrigin].length ; i++)\r\n        {\r\n         \r\n          bool res = compareStrings(fileHash,fileExistenceProofs[dappBoxOrigin][i].fileHash) &&\r\n          compareStrings(filePathHash,fileExistenceProofs[dappBoxOrigin][i].filePathHash);\r\n            if(res == true )\r\n            {\r\n                return( fileExistenceProofs[dappBoxOrigin][i].date,\r\n                fileExistenceProofs[dappBoxOrigin][i].filesender,\r\n                fileExistenceProofs[dappBoxOrigin][i].contractAddress,\r\n                fileExistenceProofs[dappBoxOrigin][i].identifier,\r\n                fileExistenceProofs[dappBoxOrigin][i].QRCodeHash);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n/**\r\n *@dev function to compare strings \r\n */\r\n    function compareStrings(string memory a, string memory b) internal pure returns (bool)\r\n    {\r\n    if(bytes(a).length != bytes(b).length) {\r\n        return false;\r\n    } else {\r\n      return keccak256(abi.encode(a)) == keccak256(abi.encode(b));\r\n    }\r\n    }\r\n\r\n/**\r\n *@dev function to generate QR code string \r\n */\r\n    function generateQRCodeForFile(address dappBoxOrigin, string memory _fileHash, string memory filePath, address _contractAddress ,BlockchainIdentification _identifier ) internal pure returns (bytes32)\r\n    {\r\n        bytes32 QRCodeHash;\r\n        QRCodeHash = keccak256(abi.encodePacked(dappBoxOrigin, _fileHash,filePath,_contractAddress,_identifier));        \r\n        return QRCodeHash;\r\n    }\r\n\r\n\r\n/**\r\n *@dev function to retreive QR code in string format \r\n */\r\n\r\n    function getQRCode(address dappBoxOrigin, string memory fileHash, string memory filePathHash ) public view returns(bytes32) {\r\n        uint256 len = fileExistenceProofs[dappBoxOrigin].length;\r\n        for(uint i = 0 ; i < len ; i++)\r\n        {\r\n         \r\n          bool res = compareStrings(fileHash,fileExistenceProofs[dappBoxOrigin][i].fileHash) &&\r\n          compareStrings(filePathHash,fileExistenceProofs[dappBoxOrigin][i].filePathHash);\r\n            if(res == true )\r\n            {\r\n                return fileExistenceProofs[dappBoxOrigin][i].QRCodeHash;\r\n            }\r\n\r\n    }\r\n    }\r\n\r\n\r\n/**\r\n *@dev function to get proof of existence using QR code\r\n */\r\n    function searchExistenceProoUsngQRf(address dappBoxOrigin,bytes32 QRCodeHash) public view returns(uint256,address,address,BlockchainIdentification,bytes32) {\r\n         uint256 len = fileExistenceProofs[dappBoxOrigin].length;\r\n        for(uint i = 0 ; i < len ; i++)\r\n        {\r\n            if(QRCodeHash == fileExistenceProofs[dappBoxOrigin][i].QRCodeHash)\r\n            {\r\n             return( fileExistenceProofs[dappBoxOrigin][i].date,\r\n                fileExistenceProofs[dappBoxOrigin][i].filesender,\r\n                fileExistenceProofs[dappBoxOrigin][i].contractAddress,\r\n                fileExistenceProofs[dappBoxOrigin][i].identifier,\r\n                fileExistenceProofs[dappBoxOrigin][i].QRCodeHash);\r\n        }\r\n        }\r\n    }\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dappBoxOrigin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"fileHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"filePathHash\",\"type\":\"string\"}],\"name\":\"GetFileExistenceProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum ProofOfExistence.BlockchainIdentification\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dappBoxOrigin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"fileHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"filePathHash\",\"type\":\"string\"}],\"name\":\"getQRCode\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dappBoxOrigin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_fileHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_filePathHash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"enum ProofOfExistence.BlockchainIdentification\",\"name\":\"_identifier\",\"type\":\"uint8\"}],\"name\":\"SetFileExistenceProof\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dappBoxOrigin\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"QRCodeHash\",\"type\":\"bytes32\"}],\"name\":\"searchExistenceProoUsngQRf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum ProofOfExistence.BlockchainIdentification\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ProofOfExistence","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://afbc945a7ba47d58578b6d98485da857a35aaa1c30d9c4aa4c19af2c78c138e7"}]}