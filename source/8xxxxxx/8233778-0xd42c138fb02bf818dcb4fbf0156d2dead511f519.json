{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.22 <0.7.0;\r\n\r\ncontract GNSToken{\r\n\r\n\r\n    // -------------------------SafeMath Start-----------------------------------------------\r\n    //\r\n    function safeAdd(uint a, uint b) private pure returns (uint c) { c = a + b; require(c >= a); }\r\n    function safeSub(uint a, uint b) private pure returns (uint c) { require(b <= a); c = a - b; }\r\n    function safeMul(uint a, uint b) private pure returns (uint c) { c = a * b; require(a == 0 || c / a == b);}\r\n    function safeDiv(uint a, uint b) private pure returns (uint c) { require(b > 0); c = a / b; }\r\n    //\r\n    // -------------------------SafeMath End-------------------------------------------------\r\n\r\n    // -------------------------Owned Start-----------------------------------------------\r\n    //\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    // constructor() public {\r\n    //     owner = msg.sender;\r\n    // }\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n    modifier onlyOwner { require(msg.sender == owner); _; }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n    //\r\n    // -------------------------Owned End-------------------------------------------------\r\n\r\n    // -------------------------ERC20Interface Start-----------------------------------------------\r\n    //\r\n    string public symbol = \"GNS\";\r\n    string public name = \"Genesis\";\r\n    uint8 public decimals = 18;\r\n    uint public totalSupply = 988e24;//总量9.88亿\r\n\r\n    uint public exchange = 688e24;//用于兑换5.88亿（空投，离线兑换总额）\r\n    uint private retention = 3e26;//自留3亿\r\n\r\n    uint public airdrop = 1e26;//空投限额1亿\r\n    uint public airdropLimit = 1e21;//每个地址最多领取空投限制1000\r\n    uint public fadd = 5e19;//添加地址得50\r\n    uint public fshare = 2e19;//邀请得20\r\n\r\n    bool public allowTransfer = true;//是否允许交易\r\n    bool public allowAirdrop = true;//是否允许空投\r\n\r\n    mapping(address => uint) private balances;\r\n    mapping(address => uint) public airdropTotal;\r\n    mapping(address => address) public airdropRecord;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n\r\n    address private retentionAddress = 0x4FCf2310752A4D919C1819BdD9B155632465373e;\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        airdropRecord[owner] = owner;\r\n        airdropRecord[retentionAddress] = retentionAddress;\r\n\r\n        balances[retentionAddress] = retention;\r\n        emit Transfer(address(1), retentionAddress, retention);\r\n    }\r\n    function specialAddress(address addr) private pure returns(bool spe) {//特殊地址，0表示空投和销毁，1表示线下兑换\r\n        spe = (addr == address(0) || addr == address(1));\r\n    }\r\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n        require(specialAddress(tokenOwner) == false);\r\n        if(airdrop >= fadd && exchange >= fadd && airdropRecord[tokenOwner] == address(0)){//如果还有足够的空投额度，没激活\r\n            balance = balances[tokenOwner] + fadd;\r\n        }else{\r\n            balance = balances[tokenOwner];\r\n        }\r\n    }\r\n    function allowance(address tokenOwner, address spender) public pure returns (uint remaining) {\r\n        require(specialAddress(tokenOwner) == false);\r\n        require(specialAddress(spender) == false);\r\n        //------do nothing------\r\n        remaining = 0;\r\n    }\r\n    function activation(uint bounus, address addr) private {\r\n        if(airdrop >= bounus && exchange >= bounus && addr != retentionAddress && addr != owner){//如果还有足够的空投额度，不是保留地址\r\n            uint airdropBounus = safeAdd(airdropTotal[addr], bounus);\r\n            if (airdropBounus <= airdropLimit ) {//没有达到个人领取上限\r\n                balances[addr] = safeAdd(balances[addr], bounus);\r\n                airdropTotal[addr] = airdropBounus;\r\n                airdrop = safeSub(airdrop, bounus);\r\n                exchange = safeSub(exchange, bounus);\r\n                emit Transfer(address(0), addr, bounus);\r\n            }\r\n        }\r\n    }\r\n    function transfer(address to, uint tokens) public returns (bool success) {\r\n        require(allowTransfer && tokens > 0);\r\n        require(to != msg.sender);\r\n        require(specialAddress(to) == false);\r\n\r\n        if (allowAirdrop && airdropRecord[msg.sender] == address(0) && airdropRecord[to] != address(0)) {//没有激活过的，发给任意多个币给已经激活过的，视为邀请\r\n            activation(fadd, msg.sender);\r\n            activation(fshare, to);\r\n            airdropRecord[msg.sender] = to;//记录激活数据\r\n        }\r\n\r\n        balances[msg.sender] = safeSub(balances[msg.sender], tokens);\r\n        balances[to] = safeAdd(balances[to], tokens);\r\n        emit Transfer(msg.sender, to, tokens);\r\n        success = true;\r\n    }\r\n    function approve(address spender, uint tokens) public pure returns (bool success) {\r\n        require(tokens  > 0);\r\n        require(specialAddress(spender) == false);\r\n        //------do nothing------\r\n        success = false;\r\n    }\r\n    function transferFrom(address from, address to, uint tokens) public pure returns (bool success) {\r\n        require(tokens  > 0);\r\n        require(specialAddress(from) == false);\r\n        require(specialAddress(to) == false);\r\n        //------do nothing------\r\n        success = false;\r\n    }\r\n    //\r\n    // -------------------------ERC20Interface End-------------------------------------------------\r\n\r\n    // ------------------------------------------------------------------------\r\n    function offlineExchange(address to, uint tokens, uint fee) public onlyOwner {\r\n        require(exchange >= tokens);\r\n        balances[to] = safeAdd(balances[to], tokens);\r\n        exchange = safeSub(exchange, tokens);\r\n        emit Transfer(address(1), to, tokens);\r\n\r\n        balances[to] = safeSub(balances[to], fee);\r\n        emit Transfer(to, address(0), fee);\r\n\r\n        totalSupply = safeSub(totalSupply, fee);\r\n    }\r\n    function sendTokens(address[] memory to, uint[] memory tokens) public {\r\n        if (to.length == tokens.length) {\r\n            uint count = 0;\r\n            for (uint i = 0; i < tokens.length; i++) {\r\n                count = safeAdd(count, tokens[i]);\r\n            }\r\n            if (count <= balances[msg.sender]) {\r\n                balances[msg.sender] = safeSub(balances[msg.sender], count);\r\n                for (uint i = 0; i < to.length; i++) {\r\n                    balances[to[i]] = safeAdd(balances[to[i]], tokens[i]);\r\n                    emit Transfer(msg.sender, to[i], tokens[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    function chAirDropLimit(uint _airdropLimit) public onlyOwner {\r\n        airdropLimit = _airdropLimit;\r\n    }\r\n    function chAirDropFadd(uint _fadd) public onlyOwner {\r\n        fadd = _fadd;\r\n    }\r\n    function chAirDropFshare(uint _fshare) public onlyOwner {\r\n        fshare = _fshare;\r\n    }\r\n    function chAllowTransfer(bool _allowTransfer) public onlyOwner {\r\n        allowTransfer = _allowTransfer;\r\n    }\r\n    function chAllowAirdrop(bool _allowAirdrop) public onlyOwner {\r\n        allowAirdrop = _allowAirdrop;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowAirdrop\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allowTransfer\",\"type\":\"bool\"}],\"name\":\"chAllowTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fadd\",\"type\":\"uint256\"}],\"name\":\"chAirDropFadd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"airdropTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdrop\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdropLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fadd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"offlineExchange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"airdropRecord\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fshare\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchange\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address[]\"},{\"name\":\"tokens\",\"type\":\"uint256[]\"}],\"name\":\"sendTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_airdropLimit\",\"type\":\"uint256\"}],\"name\":\"chAirDropLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fshare\",\"type\":\"uint256\"}],\"name\":\"chAirDropFshare\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allowAirdrop\",\"type\":\"bool\"}],\"name\":\"chAllowAirdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"GNSToken","CompilerVersion":"v0.5.6+commit.b259423e","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0db1b3ad1db2cef634849207df0cc42fbc9e5ce069253c921f4922d750303c1a"}]}