{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.9;\r\n\r\ncontract ImmDomains {\r\n\r\n  address public owner;\r\n  address public registrar;\r\n\r\n  mapping(bytes => address) public addresses;\r\n\r\n  event OwnerUpdate(address _owner);\r\n  event RegistrarUpdate(address _registrar);\r\n  event Registration(bytes _domain, address _address);\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n    registrar = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function setOwner(address _owner) onlyOwner() external {\r\n    owner = _owner;\r\n    emit OwnerUpdate(_owner);\r\n  }\r\n\r\n  function setRegistrar(address _registrar) onlyOwner() external {\r\n    registrar = _registrar;\r\n    emit RegistrarUpdate(_registrar);\r\n  }\r\n\r\n  function isValidCharacter(uint8 _character) public pure returns (bool) {\r\n    if (_character >= 97 && _character <= 122) {\r\n      // ASCII \"a - z\"\r\n      return true;\r\n    }\r\n    if (_character >= 48 && _character <= 57) {\r\n      // ASCII \"0 - 9\"\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function isValidDomain(bytes memory _domain) public pure returns (bool) {\r\n    if(_domain.length == 0) {\r\n      return false;\r\n    }\r\n\r\n    for (uint i; i < _domain.length; i++) {\r\n      if(isValidCharacter(uint8(_domain[i])) == false) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function register(bytes calldata _domain, address _address) external {\r\n\r\n    require(msg.sender == registrar);\r\n    require(_address != address(0));\r\n    require(isValidDomain(_domain));\r\n    require(addresses[_domain] == address(0));\r\n\r\n    addresses[_domain] = _address;\r\n    emit Registration(_domain, _address);\r\n\r\n  }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_domain\",\"type\":\"bytes\"},{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_character\",\"type\":\"uint8\"}],\"name\":\"isValidCharacter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"addresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_registrar\",\"type\":\"address\"}],\"name\":\"setRegistrar\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_domain\",\"type\":\"bytes\"}],\"name\":\"isValidDomain\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_registrar\",\"type\":\"address\"}],\"name\":\"RegistrarUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_domain\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Registration\",\"type\":\"event\"}]","ContractName":"ImmDomains","CompilerVersion":"v0.5.9+commit.e560f70d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://59ae202777c126e820e813b578ad67f46f1bf34b5b9ee7a2f5e074ccc181d9a4"}]}