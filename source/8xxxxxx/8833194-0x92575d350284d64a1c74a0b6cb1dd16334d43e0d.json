{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4.24;\r\n\r\nlibrary SafeMath {\r\n    function sub(uint256 a, uint256 b) internal pure returns(uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns(uint256 c) {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns(uint256 c) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n}\r\ncontract ERC20Basic {\r\n    function totalSupply() public view returns(uint256);\r\n\r\n    function balanceOf(address who) public view returns(uint256);\r\n\r\n    function transfer(address to, uint256 value) public returns(bool);\r\n\r\n    function batchTransfer(address[] receivers, uint256[] values)\r\n    public returns(bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\ncontract BasicToken is ERC20Basic {\r\n    using SafeMath\r\n    for uint256;\r\n    mapping(address => uint256) internal balances;\r\n    uint256 internal totalSupply_;\r\n\r\n    function totalSupply() public view returns(uint256) {\r\n        return totalSupply_;\r\n    }\r\n\r\n    function balanceOf(address _owner) public view returns(uint256) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns(bool) {\r\n        require(_to != address(0));\r\n        require(_value <= balances[msg.sender]);\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function batchTransfer(address[] _receivers, uint256[] _values) public returns(bool) {\r\n        require(_receivers.length > 0);\r\n        require(_receivers.length < 100000);\r\n        require(_receivers.length == _values.length);\r\n        uint256 sum;\r\n        for (uint i = 0; i < _values.length; i++) {\r\n            sum = sum.add(_values[i]);\r\n            require(_receivers[i] != address(0));\r\n        }\r\n        require(sum <= balances[msg.sender]);\r\n        balances[msg.sender] = balances[msg.sender].sub(sum);\r\n        for (uint j = 0; j < _receivers.length; j++) {\r\n            balances[_receivers[j]] = balances[_receivers[j]].add(_values[j]);\r\n            emit Transfer(msg.sender, _receivers[j], _values[j]);\r\n        }\r\n        return true;\r\n    }\r\n}\r\ncontract AmoCoin is BasicToken {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    constructor() public {\r\n        name = \"Amodule Network\";\r\n        symbol = \"AMO\";\r\n        decimals = 18;\r\n        totalSupply_ = 1e27;\r\n        balances[msg.sender] = totalSupply_;\r\n        emit Transfer(address(0), msg.sender, totalSupply_);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receivers\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"AmoCoin","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://80c7747c6613bf23729e13fab8d276f1d3cbdf732bbc2bf156ddc724832079b8"}]}