{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract GAPS {\r\n \r\n \r\n    function transfer(address _to, uint256 _value) public returns (bool success) ;\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n\r\n   \r\n}\r\n\r\ncontract Timelock {\r\n    GAPS token;\r\n\r\n    struct LockBoxStruct {\r\n        address beneficiary;\r\n        uint256 balance;\r\n        uint releaseTime;\r\n    }\r\n    uint8 public decimals = 18;\r\n    uint256 changeNum = 10 ** uint256(decimals); \r\n    \r\n    LockBoxStruct[] public lockBoxStructs; \r\n\r\n    event LogLockBoxDeposit(address sender, uint256 amount, uint releaseTime);   \r\n    event LogLockBoxWithdrawal(address receiver, uint256 amount);\r\n\r\n    constructor(address _gaps) public {\r\n        token = GAPS(_gaps);\r\n    }\r\n\r\n    function deposit(address beneficiary, uint256 amount, uint releaseTime) public returns(bool success) {\r\n        uint256 _amount = amount * changeNum;\r\n        require(token.transferFrom(msg.sender, address(this), _amount));\r\n        LockBoxStruct memory l;\r\n        l.beneficiary = beneficiary;\r\n        l.balance = amount;\r\n        l.releaseTime = now + releaseTime;\r\n        lockBoxStructs.push(l);\r\n        emit LogLockBoxDeposit(msg.sender, amount, releaseTime);\r\n        return true;\r\n    }\r\n\r\n    function withdraw(uint lockBoxNumber) public returns(bool success) {\r\n        LockBoxStruct storage l = lockBoxStructs[lockBoxNumber];\r\n        require(l.beneficiary == msg.sender);\r\n        require(l.releaseTime <=  now);\r\n        uint256 amount = l.balance;\r\n        l.balance = 0;\r\n        emit LogLockBoxWithdrawal(msg.sender, amount);\r\n        uint256 _amount = amount * changeNum;\r\n        require(token.transfer(msg.sender, _amount));\r\n        return true;\r\n    }    \r\n    \r\n    \r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"lockBoxNumber\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockBoxStructs\",\"outputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"},{\"name\":\"balance\",\"type\":\"uint256\"},{\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_gaps\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"LogLockBoxDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogLockBoxWithdrawal\",\"type\":\"event\"}]","ContractName":"Timelock","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000cd8544defedec7c6b60b5a4232320365b1b21fcc","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://001fa92ef866b73d0cb08f2ef6898e321e36be216ed92566972c2ef2eea27ee1"}]}