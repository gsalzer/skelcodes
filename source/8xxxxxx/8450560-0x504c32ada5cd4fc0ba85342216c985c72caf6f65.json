{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\n\n\ninterface IERC20 {\n    \n    function totalSupply() external view returns (uint256);\n\n    \n    function balanceOf(address account) external view returns (uint256);\n\n    \n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    \n    function allowance(address owner, address spender) external view returns (uint256);\n\n    \n    function approve(address spender, uint256 amount) external returns (bool);\n\n    \n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    \n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    \n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract TokenDistribution {\n    constructor () public {\n    }\n\n    \n    function batchSend (\n        IERC20 _token, address[] calldata _addresses, uint256[] calldata _values) external returns (bool) {\n        require(_addresses.length == _values.length, \"Length mismatch\");\n\n        uint256 count = _addresses.length;\n        for (uint256 i = 0; i < count; i++) {\n            address to = _addresses[i];\n            uint256 value = _values[i];\n            if (!_token.transferFrom (msg.sender, to, value)) revert ();\n        }\n\n        return true;\n    }\n\n    \n    function encodedBatchSend (\n        IERC20 _token, uint160 _lotSize, uint256[] calldata _transfers) external returns (bool) {\n        uint256 count = _transfers.length;\n        for (uint256 i = 0; i < count; i++) {\n            uint256 transfer = _transfers [i];\n            uint256 value = (transfer >> 160) * _lotSize;\n            address to = address (\n                transfer & 0x00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\n            if (!_token.transferFrom (msg.sender, to, value)) revert ();\n        }\n\n        return true;\n    }\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"batchSend\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"_lotSize\",\"type\":\"uint160\"},{\"internalType\":\"uint256[]\",\"name\":\"_transfers\",\"type\":\"uint256[]\"}],\"name\":\"encodedBatchSend\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"TokenDistribution","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://54d2d165a552839ad21b313fa3ab6bc6fc477e266c9bf2d31629d11af4bfdd26"}]}