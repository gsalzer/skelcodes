{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.8;\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n */\r\ncontract ERC20Basic {\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20 interface\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender)\r\n    public view returns (uint256);\r\n\r\n  function transferFrom(address from, address to, uint256 value)\r\n    public returns (bool);\r\n\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(\r\n    address indexed owner,\r\n    address indexed spender,\r\n    uint256 value\r\n  );\r\n}\r\n\r\n/**\r\n * @title SwapContract\r\n * @dev A contract to depsoit Tokens and get your address registered for bep2 receival\r\n */\r\ncontract BawSwapContract{\r\n    \r\n    ERC20 public token;\r\n    address public owner;\r\n    uint public bb;\r\n    \r\n    /**\r\n    * @param _token An address for ERC20 token which would be swaped be bep2\r\n    */\r\n    constructor(ERC20 _token) public {\r\n        token = _token;\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Caller is not the owner\");\r\n        _;\r\n    }\r\n    \r\n    event OwnerChanged(address oldOwner, address newOwner);\r\n    \r\n    /**\r\n    * @dev only to be called by the owner of Swap contract\r\n    * @param _newOwner An address to replace the old owner with.\r\n    */\r\n    function changeOwner(address _newOwner) public onlyOwner {\r\n        owner = _newOwner;\r\n        emit OwnerChanged(msg.sender, owner);\r\n    }\r\n    \r\n    event Swaped(uint tokenAmount, string BNB_Address);\r\n    \r\n    /**\r\n    * @param tokenAmount Amount of tokens to swap with bep2\r\n    * @param BNB_Address address of Binance Chain to which to receive the bep2 tokens\r\n    */\r\n    function swap(uint tokenAmount, string memory BNB_Address) public returns(bool) {\r\n        \r\n        bool success = token.transferFrom(msg.sender, owner, tokenAmount);\r\n        \r\n        if(!success) {\r\n            revert(\"Transfer of tokens to Swap contract failed.\");\r\n        }\r\n        \r\n        emit Swaped(tokenAmount, BNB_Address);\r\n        \r\n        return true;\r\n        \r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"bb\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"name\":\"BNB_Address\",\"type\":\"string\"}],\"name\":\"swap\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"BNB_Address\",\"type\":\"string\"}],\"name\":\"Swaped\",\"type\":\"event\"}]","ContractName":"BawSwapContract","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000004bbbc57af270138ef2ff2c50dbfad684e9e0e604","Library":"","SwarmSource":"bzzr://2f31295e59185693190fdf87639d19c211387108b5b6a7578e6916140f5fa6e4"}]}