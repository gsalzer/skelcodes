{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.22;\r\n\r\n/**\r\n* Contract that will forward any incoming Ether to a receiver address\r\n*/\r\ncontract Forwarder {\r\n    // Address to which any funds sent to this contract will be forwarded\r\n    address public destinationAddress;\r\n    \r\n    // Events allow light clients to react on\r\n    // changes efficiently.\r\n    event Forward(address from, address to, uint amount);\r\n    \r\n    /**\r\n    * Create the contract, and set the destination address to that of the creator\r\n    */\r\n    constructor(address receiver) public {\r\n        destinationAddress = receiver;\r\n    }\r\n    \r\n    /**\r\n    * Default function; Gets called when Ether is deposited, and forwards it to the destination address\r\n    */\r\n    function() public payable {\r\n        if (!destinationAddress.send(msg.value))\r\n            revert();\r\n        \r\n        emit Forward(msg.sender, destinationAddress, msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"destinationAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Forward\",\"type\":\"event\"}]","ContractName":"Forwarder","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000036f60093bdf2c55386b05f1bf3132247aead2b25","Library":"","SwarmSource":"bzzr://5d38fb8e1dad7fd426323a92e40df86e868cc606dfe20069c51034b39f5e8062"}]}