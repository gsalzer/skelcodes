{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\ncontract exchange { \r\n   function getEthToTokenOutputPrice(uint256) external returns(uint256); \r\n   function getEthToTokenInputPrice(uint256) external returns(uint256);\r\n   function getTokenToEthInputPrice(uint256) external returns(uint256);\r\n   function getTokenToEthOutputPrice(uint256) external returns(uint256);\r\n}\r\n\r\ncontract testUniswap {\r\n    \r\n    uint256 r1;\r\n    uint256 r2;\r\n    uint256 r3;\r\n    uint256 r4;\r\n    \r\n    function testExchangeRates(address exAdd, uint256 ethAmount, uint256 tokenAmount) public  {\r\n\r\n        exchange exc = exchange(exAdd);\r\n\r\n        r1 = exc.getEthToTokenOutputPrice(tokenAmount);\r\n        r2 = exc.getEthToTokenInputPrice(ethAmount);\r\n        r3 = exc.getTokenToEthInputPrice(tokenAmount);\r\n        r4 = exc.getTokenToEthOutputPrice(ethAmount);\r\n        \r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"exAdd\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"testExchangeRates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"testUniswap","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://a4f8c9c0275ed6e257d35cf7ed5feccbd2a7c7816b7d3a9289cb5db1a681b961"}]}