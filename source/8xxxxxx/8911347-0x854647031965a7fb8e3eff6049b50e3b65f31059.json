{"status":"1","message":"OK","result":[{"SourceCode":"// Kelpie (KPE) coins are created in honour of 'Fagin' my dearest friend, my family and the craziest mutt in the world!\r\npragma  solidity ^0.5.12;\r\n\r\nlibrary KPElib {\r\n    function mul(uint A, uint B) internal pure returns (uint) {uint C = A*B; assert(A == 0 || C/A == B); return C;}\r\n    function add(uint A, uint B) internal pure returns (uint) {uint C = A+B; assert(C >= A); return C;}\r\n    function div(uint A, uint B) internal pure returns (uint) {return(A < B || A == 0 || B == 0) ? 0: A/B;}\r\n    function sub(uint A, uint B) internal pure returns (uint) {assert(B <= A); return A-B;}}\r\n\r\ncontract Kelpie {\r\n    using    KPElib for uint;\r\n    string   public     name;\r\n    string   public     symbol;\r\n    uint8    public     decimals;\r\n    uint     public     totalSupply;\r\n    address  payable    owner;\r\n    address  internal   sender;\r\n    mapping  (address=> uint) internal balances;\r\n\r\n    modifier lock()     {require(msg.sender == owner);_;}\r\n    event    Transfer(  address indexed _owner, address indexed _receiver, uint _amount);\r\n\r\n    function ()external payable {if (msg.sender != owner) transfer(owner, msg.sender, msg.value.div(price(1)));}\r\n    function ownership( address payable Address) lock external {transfer(owner, Address, balances[owner]); owner = Address;}          \r\n    function balanceOf( address Address) external view returns (uint Balance) {return balances[Address];}\r\n    function price(     uint _amt) internal view returns(uint Price) {return totalSupply.sub(balances[owner]).div(1e8).mul(_amt);}\r\n    function price()    public view returns(uint Price) {return price(1e8);}\r\n    function priceOf(   address Address) external view returns(uint Price) {return price(balances[Address]);}\r\n    function transfer(  address payable Address, uint Kelpies) external payable {transfer(msg.sender, Address, Kelpies);}\r\n\r\n    function transfer(address payable _from, address payable _to, uint _amt) internal {\r\n             require(_amt > 0 && _amt <= balances[_from]);\r\n             if (_to == address(this) && _from != owner) _to = owner;\r\n             balances[_from] = balances[_from].sub(_amt); if (_to == owner && sender != msg.sender) {_from.transfer(price(_amt));}\r\n             balances[_to  ] = balances[_to  ].add(_amt); if (_to == owner && sender == msg.sender) {_from.transfer(price(_amt));}\r\n             if (_from == owner) {sender = msg.sender;}   emit Transfer(_from, _to, _amt);}\r\n\r\n    function supply(uint Kelpies) lock external {\r\n             Kelpies         = Kelpies.mul(1e8);\r\n             balances[owner] = Kelpies.sub(totalSupply.sub(balances[owner]));\r\n             totalSupply     = Kelpies;\r\n             if (totalSupply == balances[address(this)]) selfdestruct(owner);}\r\n\r\n    constructor(address gift) public   {\r\n             name            = \"Kelpie\";\r\n             symbol          = \"KPE\";\r\n             decimals        = 8;\r\n             totalSupply     = 1e20;\r\n             owner           = msg.sender;\r\n             balances[gift ] = 1e14;\r\n             balances[owner] = totalSupply.sub(1e14);}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gift\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"Address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"Balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"Address\",\"type\":\"address\"}],\"name\":\"ownership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"Price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"Address\",\"type\":\"address\"}],\"name\":\"priceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"Price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Kelpies\",\"type\":\"uint256\"}],\"name\":\"supply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"Kelpies\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"Kelpie","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000de32572f2561bd6c3909d895dbd6f038e9b6f55c","Library":"","LicenseType":"None","SwarmSource":"bzzr://81ee15f6c4f681f8731b80bc91ba9d2492937cea847d7f870d6a1d4799f94a8d"}]}