{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\nlibrary SafeMath {\r\n\r\n    //加法\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n\r\n    //减法\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    //乘法\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    //除法\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * 合约管理员\r\n * 登记合约管理员地址，并可实现管理员转让\r\n */\r\ncontract Ownable {\r\n    /* 管理员钱包地址 */\r\n    address public owner;\r\n\r\n    /* 转让管理员日志 */\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev 设置合约创建者为合约管理员\r\n     */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n    * @dev 仅限合约管理员操作\r\n    */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n\r\n    /**\r\n    * @dev 将合约管理员权限转让给新管理员\r\n    * @param newOwner 新管理员钱包地址\r\n    */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n}\r\n\r\n/* 合约交易开关，只有合约管理员才能操作 */\r\ncontract Pausable is Ownable {\r\n    /* 开关事件，如果没有参数，仅记录事件名 */\r\n    event Pause();\r\n    event Unpause();\r\n\r\n    /* 合约交易开关变量 */\r\n    bool public paused = false;\r\n\r\n    /**\r\n    * @dev 仅限未停止合约交易情况下操作\r\n    */\r\n    modifier whenNotPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev 仅限停止合约交易情况下操作\r\n    */\r\n    modifier whenPaused() {\r\n        require(paused);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev 合约管理员停止合约交易\r\n    */\r\n    function pause() onlyOwner whenNotPaused public {\r\n        paused = true;\r\n        emit Pause();\r\n    }\r\n\r\n    /**\r\n    * @dev 合约管理员开启合约交易\r\n    */\r\n    function unpause() onlyOwner whenPaused public {\r\n        paused = false;\r\n        emit Unpause();\r\n    }\r\n}\r\n\r\n/* ERC20标准 */\r\ncontract ERC20Basic {\r\n    /* token总发行量 */\r\n    uint256 public totalSupply;\r\n    /* 获取指定钱包地址的token余额 */\r\n    function balanceOf(address who) public view returns (uint256);\r\n    /* 转账value个token到指定钱包地址to */\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    /* 转账日志 */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n/* ERC20标准 */\r\ncontract ERC20 is ERC20Basic {\r\n    /* 获取允许spender还能提取token的额度 */\r\n    function allowance(address owner, address spender) public view returns (uint256);\r\n    /* 批准spender账户从自己的账户转移value个token，可分多次转移 */\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    /* 与approve搭配使用，approve批准之后，调用transferFrom来转移token */\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    /* 当调用approve成功时，一定要触发Approval事件 */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/* 基础合约，实现ERC20标准 */\r\ncontract BasicToken is ERC20Basic {\r\n    /* 导入安全运算库 */\r\n    using SafeMath for uint256;\r\n\r\n    /* 存储指定钱包的token余额 */\r\n    mapping(address => uint256) balances;\r\n\r\n    /**\r\n     * @dev 转移_value个token到指定钱包地址_to\r\n     * @param _to 指定钱包地址\r\n     * @param _value token个数\r\n     */\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        require(_value <= balances[msg.sender]);\r\n\r\n        /* 如果余额不足，SafeMath.sub将抛出异常 */\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev 获取指定钱包地址的token余额\r\n     * @param _owner 指定钱包地址\r\n     * @return uint256\r\n     */\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n}\r\n\r\n/* 标准合约，实现ERC20标准 */\r\ncontract StandardToken is ERC20, BasicToken {\r\n\r\n    /* 指定账号的token额度 */\r\n    mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n\r\n    /**\r\n     * @dev 从一个钱包地址转移token到另一个钱包地址，更新被允许的token额度\r\n     * 与approve搭配使用，approve批准之后，调用transferFrom来转移token\r\n     * @param _from 从哪个钱包地址发送token\r\n     * @param _to 转移到哪个钱包地址\r\n     * @param _value 转移多少个token，个数必须为非负数\r\n     */\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        require(_value <= balances[_from]);\r\n        require(_value <= allowed[_from][msg.sender]);\r\n\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev 批准spender从自己的账户转移value个token，可分多次转移\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     * @param _spender 将要花费token的地址\r\n     * @param _value token个数，可以理解成token额度\r\n    */\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev 获取允许spender提取token的额度\r\n     * @param _owner 上一级钱包地址，如合约管理员钱包地址\r\n     * @param _spender 将要花费token的地址\r\n     * @return uint256\r\n     */\r\n    function allowance(address _owner, address _spender) public view returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    /**\r\n     * @dev 增加spender的可用token额度\r\n     * @param _spender 将要花费token的地址\r\n     * @param _addedValue 需要增加token的个数，可理解成可使用的token额度\r\n     */\r\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev 减少spender的可用token额度\r\n     * @param _spender 将要花费token的地址\r\n     * @param _subtractedValue 需要减少token的个数，可理解成可使用的token额度\r\n     */\r\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n        uint oldValue = allowed[msg.sender][_spender];\r\n        if (_subtractedValue > oldValue) {\r\n            allowed[msg.sender][_spender] = 0;\r\n        } else {\r\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n        }\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\ncontract PausableToken is StandardToken, Pausable {\r\n\r\n    function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\r\n        return super.approve(_spender, _value);\r\n    }\r\n\r\n    function increaseApproval(address _spender, uint _addedValue) public whenNotPaused returns (bool success) {\r\n        return super.increaseApproval(_spender, _addedValue);\r\n    }\r\n\r\n    function decreaseApproval(address _spender, uint _subtractedValue) public whenNotPaused returns (bool success) {\r\n        return super.decreaseApproval(_spender, _subtractedValue);\r\n    }\r\n}\r\n/**\r\n * 锁仓/解锁\r\n **/\r\ncontract TokenVesting is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    event Released(uint256 amount);\r\n    event Revoked();\r\n    //合约对象地址\r\n    address public beneficiary;\r\n    \r\n    uint256 public cliff;\r\n    uint256 public start;\r\n    uint256 public duration;\r\n    \r\n    //Token\r\n    MyETPToken _token;\r\n    \r\n    //是否可回收\r\n    bool public revocable;\r\n    \r\n    //已释放\r\n    uint256 public released;\r\n    bool public revoked;\r\n\r\n    /**\r\n    * 创建锁仓合约\r\n    * @param _ERC20Token ETP合约地址\r\n    * @param _beneficiary 锁仓钱包地址\r\n    * @param _start 开始时间戳\r\n    * @param _cliff 断崖时间\r\n    * @param _duration 锁仓持续时间(单位:s)\r\n    * @param _revocable 是否可回收未释放部分\r\n    */\r\n    constructor(address _ERC20Token, address _beneficiary, uint256 _start, uint256 _cliff, uint256 _duration, bool _revocable) public {\r\n        require(_beneficiary != address(0));\r\n        require(_cliff <= _duration);\r\n        _token = MyETPToken(_ERC20Token);\r\n        beneficiary = _beneficiary;\r\n        revocable = _revocable;\r\n        duration = _duration;\r\n        cliff = _start.add(_cliff);\r\n        start = _start;\r\n    }\r\n\r\n    /**\r\n    * 释放\r\n    */\r\n    function release() public {\r\n        uint256 unreleased = releasableAmount();\r\n        require(unreleased > 0);\r\n        released = released.add(unreleased);\r\n        _token.transfer(beneficiary, unreleased);\r\n        emit Released(unreleased);\r\n    }\r\n\r\n    /**\r\n    * 回收未释放\r\n    */\r\n    function revoke() public onlyOwner {\r\n        require(revocable);\r\n        require(!revoked);\r\n        uint256 balance = _token.balanceOf(address(this));\r\n        uint256 unreleased = releasableAmount();\r\n        uint256 refund = balance.sub(unreleased);\r\n        revoked = true;\r\n        _token.transfer(owner, refund);\r\n        emit Revoked();\r\n    }\r\n\r\n    /**\r\n    * 获取可释放\r\n    **/\r\n    function releasableAmount() public view returns (uint256) {\r\n        return vestedAmount().sub(released);\r\n    }\r\n\r\n    /**\r\n    * 获取可释放\r\n    */\r\n    function vestedAmount() public view returns (uint256) {\r\n        uint256 currentBalance = _token.balanceOf(address(this));\r\n        uint256 totalBalance = currentBalance.add(released);\r\n\r\n        if (block.timestamp < cliff) {\r\n            return 0;\r\n        } else if (block.timestamp >= start.add(duration) || revoked) {\r\n            return totalBalance;\r\n        } else {\r\n            return totalBalance.mul(block.timestamp.sub(start)).div(duration);\r\n        }\r\n    }\r\n}\r\n\r\ncontract MyETPToken is PausableToken {\r\n    /* Token名称 */\r\n    string public name;\r\n    /* Token符号 */\r\n    string public symbol;\r\n    /* Token精确位数 */\r\n    uint256 public decimals = 18;\r\n\r\n    //发布\r\n    constructor(uint256 _initialSupply, string memory _tokenName, string memory _tokenSymbol) public {\r\n        totalSupply = _initialSupply * 10 ** uint256(decimals);\r\n        balances[msg.sender] = totalSupply;\r\n        name = _tokenName;\r\n        symbol = _tokenSymbol;\r\n    }\r\n    \r\n    //更改合约名称\r\n    function changeContractName(string memory _newName, string memory _newSymbol) public onlyOwner {\r\n        name = _newName;\r\n        symbol = _newSymbol;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newName\",\"type\":\"string\"},{\"name\":\"_newSymbol\",\"type\":\"string\"}],\"name\":\"changeContractName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"MyETPToken","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000003b9aca00000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000f476c6f62616c20485220546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044748525400000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://7e31fd058d1a04a36147ab9a81d4be73791c98ff58dbf1c50566985e49fe0859"}]}