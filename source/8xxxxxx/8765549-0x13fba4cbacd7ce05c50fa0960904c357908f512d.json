{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n \r\ncontract Ownable {\r\n  address public owner;\r\n \r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n}\r\n\r\ninterface Token {\r\n  function balanceOf(address _owner) public constant returns (uint256 );\r\n  function transfer(address _to, uint256 _value) public ;\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n}\r\n\r\ncontract Airdropper is Ownable {\r\n    \r\n    function AirTransfer(address[] _recipients, uint[] _values, address _tokenAddress) onlyOwner public returns (bool) {\r\n        require(_recipients.length > 0);\r\n\r\n        Token token = Token(_tokenAddress);\r\n        \r\n        for(uint j = 0; j < _recipients.length; j++){\r\n            token.transfer(_recipients[j], _values[j]);\r\n        }\r\n \r\n        return true;\r\n    }\r\n \r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipients\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"AirTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Airdropper","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://29c530b4e25cd6fbff90bb773ad3612b4f0672248fae68e456f132fe352398f4"}]}