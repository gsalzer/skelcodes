{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract IUniswapExchange {\r\n    function getEthToTokenInputPrice(uint256 eth_sold) external view returns (uint256 tokens_bought);\r\n}\r\n\r\n\r\ncontract IKyberNetwork {\r\n    function getExpectedRate(address src, address dest, uint srcQty) external view\r\n    returns (uint expectedRate, uint slippageRate);\r\n}\r\n\r\ncontract IOasisExchange {\r\n\r\n    function getBuyAmount(address buy_gem, address pay_gem, uint pay_amt) public view returns (uint fill_amt);\r\n}\r\n\r\ncontract ETHDAIPrice {\r\n    function getPrice() external view returns(uint256) {\r\n        IUniswapExchange uniswap = IUniswapExchange(0x09cabEC1eAd1c0Ba254B09efb3EE13841712bE14);\r\n        uint ethtdai_uniswap = uniswap.getEthToTokenInputPrice(1000000000000000000);\r\n        \r\n        IKyberNetwork kyber = IKyberNetwork(0x818E6FECD516Ecc3849DAf6845e3EC868087B755);\r\n        (uint ethdai_kyber, uint slippageRate) = kyber.getExpectedRate(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE, 0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359, 10);\r\n        \r\n        IOasisExchange oasis = IOasisExchange(0x39755357759cE0d7f32dC8dC45414CCa409AE24e);\r\n        uint ethdai_oasis = oasis.getBuyAmount(0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359, 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2, 1000000000000000000);\r\n        \r\n        return (ethdai_kyber + ethtdai_uniswap + ethdai_oasis) / 3;\r\n        \r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"ETHDAIPrice","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://557c836584bf6a4a6a400bd6869b0bbb9a6e910c79751579e115a08440ec5015"}]}