{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract SafeMath {\r\n    constructor() public {\r\n    }\r\n\r\n    function safeAdd(uint256 _x, uint256 _y) internal pure returns (uint256) {\r\n        uint256 z = _x + _y;\r\n        assert(z >= _x);\r\n        return z;\r\n    }\r\n\r\n    function safeSub(uint256 _x, uint256 _y) internal pure returns (uint256) {\r\n        assert(_x >= _y);\r\n        return _x - _y;\r\n    }\r\n\r\n    function safeMul(uint256 _x, uint256 _y) internal pure returns (uint256) {\r\n        uint256 z = _x * _y;\r\n        assert(_x == 0 || z / _x == _y);\r\n        return z;\r\n    }\r\n}\r\n\r\ncontract TokenERC20{\r\n    \r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n\r\n    function approve(address _spender, uint256 _value) public;\r\n\r\n    function burn(uint256 _value) public returns (bool success);\r\n\r\n    function burnFrom(address _from, uint256 _value) public returns (bool success);\r\n    \r\n    function mintToken(address target, uint256 mintedAmount)  public;\r\n\r\n    function freezeAccount(address target, bool freeze)  public;\r\n    \r\n    function setPrices(uint256 newSellPrice, uint256 newBuyPrice)  public;\r\n    \r\n    function transferOwnership(address newOwner)  public;\r\n    \r\n}\r\n\r\n/******************************************/\r\n/*       ADVANCED TOKEN STARTS HERE       */\r\n/******************************************/\r\n\r\ncontract SpecialToken is SafeMath,owned {\r\n\r\n    /* errc20 contractAddress */\r\n    address public tokenAddr = 0x2108C55Ec6E6cC08De753aD94297400818065F9F;\r\n    \r\n    address public contractAddr = 0x3e895D5Fef09DaB60575AfE6801fAc965AF0e61E;\r\n    \r\n    address public silkAddr = 0xaD046e5DB29451b57C8D204321E71ea2db08c7dc;\r\n  \r\n    uint8 public vMintToken = 0;\r\n    uint8 public vFreezeAccount = 0;\r\n    uint8 public vSetPrices = 0;\r\n\r\n\r\n    /* Initializes contract with initial supply tokens to the creator of the contract */\r\n    constructor(\r\n       \r\n    ) public {\r\n       \r\n    }\r\n\r\n    function mintToken(address target, uint256 mintedAmount) public {\r\n        if(vMintToken == 0){\r\n            require(msg.sender == contractAddr);\r\n            vMintToken = 1;\r\n        }else if(vMintToken == 1){\r\n            require(msg.sender == silkAddr);\r\n            vMintToken = 0;\r\n            TokenERC20(tokenAddr).mintToken(target, mintedAmount);\r\n        }\r\n        \r\n    }\r\n\r\n    function freezeAccount(address target, bool freeze)  public {\r\n        if(vFreezeAccount == 0){\r\n            require(msg.sender == contractAddr);\r\n            vFreezeAccount = 1;\r\n        } else if(vFreezeAccount == 1){\r\n            require(msg.sender == silkAddr);\r\n            vFreezeAccount = 0;\r\n            TokenERC20(tokenAddr).freezeAccount(target,freeze);\r\n        }\r\n        \r\n    }\r\n\r\n    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) public {\r\n        if(vSetPrices == 0){\r\n            require(msg.sender == contractAddr);\r\n            vSetPrices = 1;\r\n        } else if(vSetPrices == 1){\r\n            require(msg.sender == silkAddr);\r\n            vSetPrices = 0;\r\n            TokenERC20(tokenAddr).setPrices(newSellPrice, newBuyPrice);\r\n        }\r\n        \r\n    }\r\n    \r\n    function transferOwnershipC(address newOwner) onlyOwner public {\r\n        TokenERC20(tokenAddr).transferOwnership(newOwner);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vMintToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vSetPrices\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnershipC\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"silkAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vFreezeAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"SpecialToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://c19720e0535e1ed1bbbc7b27eedbed6d58faf29c0992c5b134201df391658250"}]}