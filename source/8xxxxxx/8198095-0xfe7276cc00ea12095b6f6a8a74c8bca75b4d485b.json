{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.1;\r\n\r\ncontract RubyToken{\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => bool) private transferable;\r\n    \r\n    uint256 private _totalSupply=10000000000000000000000000000;\r\n    string private _name= \"RubyToken\";\r\n    string private _symbol= \"RUBY\";\r\n    uint256 private _decimals = 18;\r\n    address private _administrator = msg.sender;\r\n    \r\n    constructor () public {\r\n            balanceOf[msg.sender] = _totalSupply;\r\n        }\r\n\r\n        \r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n    \r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n    function decimals() public view returns (uint256) {\r\n        return _decimals;\r\n    }\r\n    \r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n    \r\n    function _transfer(address _from, address _to, uint256 _value) internal {\r\n        require(balanceOf[_from]>=_value);\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        require(transfercheck(_from) == true);\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n    }\r\n    \r\n    function transfer(address to, uint256 value) public {\r\n        _transfer(msg.sender, to, value);\r\n    }\r\n    \r\n    function transfercheck(address check) internal returns(bool) {\r\n        if (transferable[check]==false){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    \r\n    function lock(address lockee) public {\r\n        require(msg.sender == _administrator);\r\n        transferable[lockee] = true;\r\n    }\r\n    \r\n    function unlock(address unlockee) public {\r\n        require(msg.sender == _administrator);\r\n        transferable[unlockee] = false;\r\n    }\r\n    \r\n    function lockcheck(address checkee) public view returns (bool){\r\n        return transferable[checkee];\r\n    }\r\n    \r\n    \r\n    function _burn(address account, uint256 value) private {\r\n        require(account == _administrator);\r\n        require(msg.sender == _administrator);\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n        require(balanceOf[account]>value);\r\n        require(_totalSupply>value);\r\n        _totalSupply -= value;\r\n        balanceOf[account] -=value;\r\n    }\r\n    \r\n    function _addsupply(address account, uint256 value) private {\r\n        require(account == _administrator);\r\n        require(msg.sender == _administrator);\r\n        _totalSupply += value;\r\n        balanceOf[account] +=value;\r\n    }\r\n    \r\n    function burn(uint256 amount) public {\r\n        _burn(msg.sender, amount);\r\n    }\r\n    \r\n    function addsupply(uint256 amount) public {\r\n        _addsupply(msg.sender, amount);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"unlockee\",\"type\":\"address\"}],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addsupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"checkee\",\"type\":\"address\"}],\"name\":\"lockcheck\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"lockee\",\"type\":\"address\"}],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"RubyToken","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bdad554306927295303cccb1b143c5bbac9bcb9daa2fa04765f9c6345c73b48b"}]}