{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4.24;\r\n\r\ncontract CFG {\r\n\tevent BuyHistory(\r\n\t\taddress indexed addr,\r\n\t\tuint256 value\r\n\t);\r\n\t\r\n\tevent RenewHistory(\r\n\t\taddress indexed addr,\r\n\t\tuint256 value\r\n\t);\r\n\t\r\n\tevent Rescission(\r\n\t\taddress indexed addr\r\n\t);\r\n\t\r\n\tevent BalancetHistory(\r\n\t\taddress indexed addr,\r\n\t\tuint256 value,\r\n\t\tbool isin,\r\n\t\tstring t\r\n\t);\r\n\t\r\n\tevent ExchangeHistory(\r\n\t\taddress indexed addr,\r\n\t\tuint256 price,\r\n\t\tuint256 value,\r\n\t\tuint256 cfg\r\n\t);\r\n\t\r\n\tevent SuperPointHistory(\r\n\t\taddress indexed addr\r\n\t);\r\n}\r\n\r\ncontract CFGContract is CFG {\r\n\tusing SafeMath\r\n\tfor * ;\r\n\r\n\taddress public manager;\r\n\t\r\n\tuint256 public PERIOD = 864000;\r\n\t\r\n\tuint256 public MIN = 1000000000000000000;\r\n\t\r\n\tuint256 public MAX = 39000000000000000000;\r\n\t\r\n\taddress private COM = 0x9Dd7ae0FB7AF52954E709aA77F5541C3ddcF383C;\r\n\t\r\n\taddress private FUND = 0x96eEeB683440c4e5dc5aDD76657fc98edc5B6706;\r\n\t\r\n\taddress private ORI = 0x91819cF3ba30039D1f1f7FD0A0cb7273022FC1c9;\r\n\t\r\n\tuint256 public consume = 0;\r\n\t\r\n\tmapping (address => CFGDatasets.PlayerData) public player;\r\n\t\r\n\tmapping (address => CFGDatasets.PlayerContractData[]) public pcontract;\r\n\t\r\n\tmapping (address => mapping (uint256 => mapping (uint256 => bool))) public isbonus;\r\n\t\r\n\tmapping (address => mapping (uint256 => bool)) public ispbonus;\r\n\t\r\n\tCFGInterface constant private cfgtoken = CFGInterface(0x715a9405944c7e8b6b74374b8eabbb2260eba195);\r\n\r\n\tuint256 public superPointCount = 0;\r\n\t\r\n\tuint256 public superPointTotalSupply = 200;\r\n\t\r\n\tmapping (address => bool) public spoint;\r\n\t\r\n\tuint256 public rankingId = 0;\r\n\tmapping (uint256 => uint256) public rankingTotal;\r\n\t\r\n\tuint256 public gas = 50000000000000;\r\n\tuint256 public bonusGas = 150000000000000;\r\n\t\r\n\tfunction CFGContract() {\r\n\t\tmanager = msg.sender;\r\n\t}\r\n\t\r\n\tfunction()\r\n\tpublic\r\n\tpayable {\r\n\t\t\r\n\t}\r\n\t\r\n\tfunction exchange()\r\n\tpublic\r\n\tpayable {\r\n\t\tuint256 _price = getPrice();\r\n\t\t\r\n\t\tuint256 _cfg = msg.value.mul(1000000000000000000)/_price;\r\n\t\t\r\n\t\trequire(cfgtoken.transfer(msg.sender,_cfg), \"error\");\r\n\t\t\r\n\t\tFUND.transfer(msg.value);\r\n\t\t\r\n\t\temit ExchangeHistory(\r\n\t\t\tmsg.sender,\r\n\t\t\t_price,\r\n\t\t\tmsg.value,\r\n\t\t\t_cfg\r\n\t\t);\r\n\t\t\r\n\t}\r\n\t\r\n\tfunction superpoint()\r\n\tpublic\r\n\tpayable {\r\n\t\trequire(superPointCount < superPointTotalSupply, \"The number of superpoint is full.\");\r\n\t\t\r\n\t\trequire(!spoint[msg.sender], \"You have been a superpoint.\");\r\n\t\t\r\n\t\tif(superPointCount >= 100){\r\n\t\t\trequire(msg.value == 100000000000000000000, \"The payment amount is mismatch.\");\r\n\t\t}else if(superPointCount >= 50){\r\n\t\t\trequire(msg.value == 50000000000000000000, \"The payment amount is mismatch.\");\r\n\t\t}else if(superPointCount >= 20){\r\n\t\t\trequire(msg.value == 30000000000000000000, \"The payment amount is mismatch.\");\r\n\t\t}else{\r\n\t\t\trequire(msg.value == 15000000000000000000, \"The payment amount is mismatch.\");\r\n\t\t}\r\n\t\t\r\n\t\tspoint[msg.sender] = true;\r\n\t\t\r\n\t\tsuperPointCount = superPointCount.add(1);\r\n\t\t\r\n\t\tCOM.transfer(msg.value);\r\n\t\t\r\n\t\temit SuperPointHistory(\r\n\t\t\tmsg.sender\r\n\t\t);\r\n\t}\r\n\t\r\n\tfunction buy(address _aff)\r\n\tpublic\r\n\tpayable {\r\n\t\trequire(msg.value == (msg.value/1000000000000000000).mul(1000000000000000000), \"Please enter an integer.\");\r\n\r\n\t\trequire(msg.value >= MIN, \"The minimum quantity is 1.\");\r\n\t\t\r\n\t\trequire(msg.value <= MAX, \"The maximum quantity is 39.\");\r\n\t\t\r\n\t\tif(player[msg.sender].aff == address(0)){\r\n\t\t\tif(_aff == 0x0 || _aff == msg.sender || player[_aff].aff == address(0)){\r\n\t\t\t\t_aff = ORI;\r\n\t\t\t}\r\n\t\t\tplayer[msg.sender].aff = _aff;\r\n\t\t}else{\r\n\t\t\tuint256 _index = pcontract[msg.sender].length.sub(1);\r\n\t\t\t\r\n\t\t\trequire(msg.value >= pcontract[msg.sender][_index].value, \"The quantity must be more than the last contract.\");\r\n\t\t\t\r\n\t\t\trequire(pcontract[msg.sender][_index].isrescission,\"The current contract hasn't been released.\");\r\n\t\t}\r\n\t\t\r\n\t\tuint256 _cfg = msg.value.mul(10000000000000000)/getPrice();\r\n\t\t\r\n\t\trequire(cfgtoken.balanceOf(msg.sender) >= _cfg, \"You don't have enough CFG.\");\r\n\t\t\r\n\t\trequire(cfgtoken.consume(msg.sender,_cfg), \"consume error.\");\r\n\t\t\r\n\t\tconsume = consume.add(_cfg);\r\n\t\t\r\n\t\taddress _paddr = getSuperPointAddr(msg.sender);\r\n\t\t\r\n\t\tpcontract[msg.sender].push(CFGDatasets.PlayerContractData(now,msg.value,false,false,_paddr));\r\n\t\t\r\n\t\tCOM.transfer(msg.value.mul(4)/100);\r\n\t\t\r\n\t\temit BuyHistory(\r\n\t\t\tmsg.sender,\r\n\t\t\tmsg.value\r\n\t\t);\r\n\t}\r\n\t\r\n\tfunction renew()\r\n\tpublic\r\n\tpayable {\r\n\t\trequire(msg.value <= MAX, \"The maximun quantity is 39.\");\r\n\t\t\r\n\t\trequire(msg.value == (msg.value/1000000000000000000).mul(1000000000000000000), \"Please enter an integer.\");\r\n\t\t\r\n\t\tuint256 _index = pcontract[msg.sender].length.sub(1);\r\n\t\t\r\n\t\trequire(!pcontract[msg.sender][_index].isrescission, \"The contract has been released, you can't renew the contract.\");\r\n\t\t\r\n\t\tuint256 _time = now;\r\n\t\trequire(pcontract[msg.sender][_index].time.add(PERIOD) <= _time, \"The contract is unexpired, you can't renew the contract.\");\r\n\t\t\r\n\t\trequire(msg.value >= pcontract[msg.sender][_index].value, \"The quantity must be more than the original.\");\r\n\t\t\r\n\t\tuint256 _cfg = msg.value.mul(10000000000000000)/getPrice();\r\n\t\t\r\n\t\trequire(cfgtoken.balanceOf(msg.sender) >= _cfg, \"You don't have enough CFG.\");\r\n\t\t\r\n\t\trequire(cfgtoken.consume(msg.sender,_cfg), \"consume error.\");\r\n\t\t\r\n\t\tconsume = consume.add(_cfg);\r\n\t\t\r\n\t\tuint256 _income = 0;\r\n\t\tuint256 _value = pcontract[msg.sender][_index].value;\r\n\t\tif(!pcontract[msg.sender][_index].iswithdraw){\r\n\t\t\t_income = _value;\r\n\t\t}\r\n\t\tif(_value >= 31000000000000000000){\r\n\t\t\t_income = _income.add(_value.mul(1450)/10000);\r\n\t\t}else if(_value >= 21000000000000000000){\r\n\t\t\t_income = _income.add(_value.mul(1250)/10000);\r\n\t\t}else if(_value >= 11000000000000000000){\r\n\t\t\t_income = _income.add(_value.mul(1050)/10000);\r\n\t\t}else if(_value >= 6000000000000000000){\r\n\t\t\t_income = _income.add(_value.mul(950)/10000);\r\n\t\t}else{\r\n\t\t\t_income = _income.add(_value.mul(750)/10000);\r\n\t\t}\r\n\t\tplayer[msg.sender].balance = player[msg.sender].balance.add(_income);\r\n\t\t\r\n\t\taddress _paddr = getSuperPointAddr(msg.sender);\r\n\t\t\r\n\t\tpcontract[msg.sender].push(CFGDatasets.PlayerContractData(_time,msg.value,false,false,_paddr));\r\n\t\t\r\n\t\trankingTotal[rankingId] = rankingTotal[rankingId].add(_value);\r\n\t\t\r\n\t\tCOM.transfer(msg.value.mul(4)/100);\r\n\t\t\r\n\t\temit RenewHistory(\r\n\t\t\tmsg.sender,\r\n\t\t\tmsg.value\r\n\t\t);\r\n\t\temit BalancetHistory(\r\n\t\t\tmsg.sender,\r\n\t\t\t_income,\r\n\t\t\ttrue,\r\n\t\t\t\"renew\"\r\n\t\t);\r\n\t}\r\n\t\r\n\tfunction getSuperPointAddr(address _addr)\r\n\tprivate\r\n\treturns(address){\r\n\t\tif(spoint[_addr]){\r\n\t\t\treturn _addr;\r\n\t\t}else{\r\n\t\t\taddress _aff = player[msg.sender].aff;\r\n\t\t\taddress _paddr = address(0);\r\n\t\t\twhile(_aff != address(0)){\r\n\t\t\t\tif(spoint[_aff]){\r\n\t\t\t\t\t_paddr = _aff;\r\n\t\t\t\t\t_aff = address(0);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t_aff = player[_aff].aff;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn _paddr;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction rescission()\r\n\tpublic {\r\n\t\tuint256 _index = pcontract[msg.sender].length.sub(1);\r\n\t\t\r\n\t\tuint256 _time = now;\r\n\t\trequire(pcontract[msg.sender][_index].time.add(PERIOD) >= _time, \"The contract has been expired.\");\r\n\t\t\r\n\t\tuint256 _income = pcontract[msg.sender][_index].value.mul(90)/100;\r\n\t\tplayer[msg.sender].balance = player[msg.sender].balance.add(_income);\r\n\t\t\r\n\t\tpcontract[msg.sender][_index].isrescission = true;\r\n\t\tpcontract[msg.sender][_index].iswithdraw = true;\r\n\t\t\r\n\t\temit Rescission(\r\n\t\t\tmsg.sender\r\n\t\t);\r\n\t\temit BalancetHistory(\r\n\t\t\tmsg.sender,\r\n\t\t\t_income,\r\n\t\t\ttrue,\r\n\t\t\t\"rescission\"\r\n\t\t);\r\n\t}\r\n\t\r\n\tfunction withdraw()\r\n\tpublic {\r\n\t\tuint256 _index = pcontract[msg.sender].length.sub(1);\r\n\t\t\r\n\t\tuint256 _value = player[msg.sender].balance;\r\n\t\tif(!pcontract[msg.sender][_index].isrescission \r\n\t\t\t&& pcontract[msg.sender][_index].time.add(PERIOD) <= now\r\n\t\t\t&& !pcontract[msg.sender][_index].iswithdraw){\r\n\t\t\t_value = _value.add(pcontract[msg.sender][_index].value);\r\n\t\t\t\r\n\t\t\tpcontract[msg.sender][_index].iswithdraw = true;\r\n\t\t}\r\n\t\t\r\n\t\trequire(_value > 0, \"The balance is 0.\");\r\n\t\t\r\n\t\tif(player[msg.sender].balance > 0){\r\n\t\t\tplayer[msg.sender].balance = 0;\r\n\t\t}\r\n\t\t\r\n\t\t_value = _value.add(gas);\r\n\t\t\r\n\t\tmsg.sender.transfer(_value);\r\n\t\t\r\n\t\temit BalancetHistory(\r\n\t\t\tmsg.sender,\r\n\t\t\t_value,\r\n\t\t\tfalse,\r\n\t\t\t\"withdraw\"\r\n\t\t);\r\n\t}\r\n\t\r\n\tfunction withdrawBonuss(address[] _addrs,uint256[] _indexs,uint256[] _genNums,uint256[] _myIndexs,uint8[] _types)\r\n\tpublic {\r\n\t\trequire(_addrs.length == _indexs.length, \"array error 1.\");\r\n\t\trequire(_addrs.length == _genNums.length, \"array error 2.\");\r\n\t\trequire(_addrs.length == _myIndexs.length, \"array error 3.\");\r\n\t\trequire(_addrs.length == _types.length, \"array error 4.\");\r\n\r\n\t\tuint256 _value = 0;\r\n\t\tfor(uint256 i = 0; i < _addrs.length;i++){\r\n\t\t\tif(_types[i] == 1){\r\n\t\t\t\t_value = _value.add(bonus(_addrs[i], _indexs[i], _genNums[i],_myIndexs[i]));\r\n\t\t\t\tisbonus[_addrs[i]][_indexs[i]][_genNums[i]] = true;\r\n\t\t\t}else{\r\n\t\t\t\t_value = _value.add(pbonus(_addrs[i], _indexs[i], _myIndexs[i]));\r\n\t\t\t\tispbonus[_addrs[i]][_indexs[i]] = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t_value = _value.add(bonusGas);\r\n\t\t\r\n\t\tmsg.sender.transfer(_value);\r\n\t\temit BalancetHistory(\r\n\t\t\tmsg.sender,\r\n\t\t\t_value,\r\n\t\t\ttrue,\r\n\t\t\t\"bonus\"\r\n\t\t);\r\n\t}\r\n\t\r\n\tfunction withdrawBonus(address _addr,uint256 _index,uint256 _genNum,uint256 _myIndex,uint8 _type)\r\n\tpublic{\r\n\t\tuint256 _value = 0;\r\n\t\tif(_type == 1){\r\n\t\t\t_value = bonus(_addr, _index, _genNum,_myIndex);\r\n\t\t\tisbonus[_addr][_index][_genNum] = true;\r\n\t\t}else{\r\n\t\t\t_value = pbonus(_addr, _index, _myIndex);\r\n\t\t\tispbonus[_addr][_index] = true;\r\n\t\t}\r\n\t\t\r\n\t\tmsg.sender.transfer(_value);\r\n\t\temit BalancetHistory(\r\n\t\t\tmsg.sender,\r\n\t\t\t_value,\r\n\t\t\ttrue,\r\n\t\t\t\"bonus\"\r\n\t\t);\r\n\t}\r\n\t\r\n\tfunction bonus(address _addr,uint256 _index,uint256 _genNum,uint256 _myIndex)\r\n\tprivate \r\n\treturns(uint256){\r\n\t\trequire(!pcontract[msg.sender][_myIndex].isrescission, \"The contract has been released 1.\");\r\n\t\t\r\n\t\trequire(!pcontract[_addr][_index].isrescission, \"The contract has been released 2.\");\r\n\t\t\r\n\t\trequire(!isbonus[_addr][_index][_genNum], \"The dividend has been withdraw.\");\r\n\t\t\r\n\t\trequire(_index < pcontract[_addr].length.sub(1), \"contract error 1.\");\r\n\t\t\r\n\t\trequire(pcontract[msg.sender][_myIndex].time <= pcontract[_addr][_index].time, \"contract error 2.\");\r\n\t\t\r\n\t\trequire(pcontract[msg.sender][_myIndex.add(1)].time >= pcontract[_addr][_index].time, \"contract error 3.\");\r\n\t\t\r\n\t\tuint256 _value = pcontract[_addr][_index].value;\r\n\t\tuint256 _myValue = pcontract[msg.sender][_myIndex].value;\r\n\t\tuint256 _genValue = _myValue > _value ? _value : _myValue;\r\n\t\tuint256 _genLevel = 0;\r\n\t\tuint256 _earnings = 0;\r\n\t\tif(_genValue >= 31000000000000000000){\r\n\t\t\t_genLevel = 20;\r\n\t\t\t_earnings = _value.mul(1450)/10000;\r\n\t\t}else if(_genValue >= 21000000000000000000){\r\n\t\t\t_genLevel = 15;\r\n\t\t\t_earnings = _value.mul(1250)/10000;\r\n\t\t}else if(_genValue >= 11000000000000000000){\r\n\t\t\t_genLevel = 9;\r\n\t\t\t_earnings = _value.mul(1050)/10000;\r\n\t\t}else if(_genValue >= 6000000000000000000){\r\n\t\t\t_genLevel = 6;\r\n\t\t\t_earnings = _value.mul(950)/10000;\r\n\t\t}else{\r\n\t\t\t_genLevel = 3;\r\n\t\t\t_earnings = _value.mul(750)/10000;\r\n\t\t}\r\n\t\t\r\n\t\trequire(_genLevel >= _genNum, \"you can't get the bonus.\");\r\n\t\t\r\n\t\tfor(uint256 j = 0; j < _genNum; j++){\r\n\t\t\t_addr = player[_addr].aff;\r\n\t\t}\r\n\t\trequire(_addr == msg.sender, \"not yours.\");\r\n\t\t\r\n\t\tif(_genNum == 1){\r\n\t\t\treturn _earnings;\r\n\t\t}else if(_genNum == 2){\r\n\t\t\treturn _earnings.mul(20)/100;\r\n\t\t}else if(_genNum == 3){\r\n\t\t\treturn _earnings.mul(10)/100;\r\n\t\t}else if(_genNum > 3 && _genNum <= 10){\r\n\t\t\treturn _earnings.mul(5)/100;\r\n\t\t}else{\r\n\t\t\treturn _earnings.mul(2)/100;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction pbonus(address _addr,uint256 _index,uint256 _myIndex)\r\n\tprivate \r\n\treturns(uint256){\r\n\t\trequire(!pcontract[msg.sender][_myIndex].isrescission, \"p:The contract has been released.\");\r\n\t\t\r\n\t\trequire(!pcontract[_addr][_index].isrescission, \"p: contract has been released.\");\r\n\t\t\r\n\t\trequire(!ispbonus[_addr][_index], \"p:The dividend has been withdraw.\");\r\n\t\t\r\n\t\trequire(_index < pcontract[_addr].length.sub(1), \"p:contract error 1.\");\r\n\t\t \r\n\t\trequire(pcontract[msg.sender][_myIndex].time <= pcontract[_addr][_index].time, \"p:contract error 2.\");\r\n\t\t\r\n\t\trequire(pcontract[msg.sender][_myIndex.add(1)].time >= pcontract[_addr][_index].time, \"p:contract error 3.\");\r\n\r\n\t\trequire(pcontract[_addr][_index].paddr == msg.sender, \"p:not yours.\");\r\n\t\t\r\n\t\treturn pcontract[_addr][_index].value.mul(5)/100;\r\n\t}\r\n\t\r\n\tfunction updateSuperPoint(uint256 _superPointTotalSupply)\r\n\tpublic{\r\n\t\trequire(manager == msg.sender, \"error\");\r\n\t\tsuperPointTotalSupply = _superPointTotalSupply;\r\n\t}\r\n\t\r\n\tfunction updateGas(uint256 _gas,uint256 _bonusGas)\r\n\tpublic{\r\n\t\trequire(manager == msg.sender, \"error\");\r\n\t\trequire(_gas < 10000000000000000, \"error\");\r\n\t\trequire(_gas > 10000000000000, \"error\");\r\n\t\trequire(_bonusGas >= 0, \"error\");\r\n\t\trequire(_bonusGas >= 0, \"error\");\r\n\t\tgas = _gas;\r\n\t\tbonusGas = _bonusGas;\r\n\t}\r\n\t\r\n\tfunction uploadRanking(address[] _addrs,uint256[] _ratios)\r\n\tpublic{\r\n\t\trequire(manager == msg.sender, \"error 1\");\r\n\t\trequire(_addrs.length == _ratios.length, \"error 2\");\r\n\t\t\r\n\t\tuint256 _total = 0;\r\n\t\tfor(uint256 j = 0; j < _ratios.length; j++){\r\n\t\t\t_total = _total.add(_ratios[j]);\r\n\t\t}\r\n\t\tuint256 _rankingTotal = rankingTotal[rankingId].mul(3)/100;\r\n\t\tfor(uint256 i = 0; i < _addrs.length; i++){\r\n\t\t\trequire(spoint[_addrs[i]], \"error\");\r\n\t\t\tuint256 _value = _rankingTotal.mul(_ratios[i])/_total;\r\n//\t\t\tplayer[_addrs[i]].balance = player[_addrs[i]].balance.add(_value);\r\n\t\t\t_addrs[i].transfer(_value);\r\n\t\t\temit BalancetHistory(\r\n\t\t\t\t_addrs[i],\r\n\t\t\t\t_value,\r\n\t\t\t\ttrue,\r\n\t\t\t\t\"ranking\"\r\n\t\t\t);\r\n\t\t}\r\n\t\trankingId = rankingId.add(1);\r\n\t\t\r\n\t}\r\n\t\r\n\tfunction balanceOf(address _addr)\r\n\tpublic\r\n\tview\r\n\treturns(uint256) {\r\n\t\tif(pcontract[_addr].length == 0){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tuint256 _value = player[_addr].balance;\r\n\t\tuint256 _index = pcontract[_addr].length.sub(1);\r\n\t\tif(!pcontract[_addr][_index].isrescission\r\n\t\t\t&& pcontract[_addr][_index].time.add(PERIOD) <= now\r\n\t\t\t&& !pcontract[_addr][_index].iswithdraw){\r\n\t\t\t_value = _value.add(pcontract[_addr][_index].value);\r\n\t\t}\r\n\t\treturn _value;\r\n\t}\r\n\t\r\n\tfunction getPrice()\r\n\tpublic\r\n\tview\r\n\treturns(uint256){\r\n\t\tuint256 _price = 1000000000000000;\r\n\t\t\r\n\t\tif(consume >= 1000000000000000000000000){\r\n\t\t\tuint256 _count = consume/1000000000000000000000000;\r\n\t\t\tfor(uint256 i = 0; i < _count; i++ ){\r\n\t\t\t\t_price = _price.add(_price/10);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn _price;\r\n\t}\r\n\t\r\n\tfunction getPointMsg()\r\n\tpublic\r\n\tview\r\n\treturns(uint256,uint256,uint256){\r\n\t\tuint256 _price = 0;\r\n\t\tif(superPointCount >= 100){\r\n\t\t\t_price = 100000000000000000000;\r\n\t\t}else if(superPointCount >= 50){\r\n\t\t\t_price = 50000000000000000000;\r\n\t\t}else if(superPointCount >= 20){\r\n\t\t\t_price = 30000000000000000000;\r\n\t\t}else{\r\n\t\t\t_price = 15000000000000000000;\r\n\t\t}\r\n\t\treturn(superPointCount,_price,superPointTotalSupply);\r\n\t}\r\n\t\r\n\tfunction getTotal()\r\n\tpublic\r\n\tview\r\n\treturns(uint256){\r\n\t\treturn rankingTotal[rankingId];\r\n\t}\r\n\t\r\n}\r\n\r\ninterface CFGInterface {\r\n\t\r\n\tfunction balanceOf(address _addr) returns(uint256);\r\n\r\n\tfunction transfer(address _to, uint256 _value) returns(bool);\r\n\r\n\tfunction approve(address _spender, uint256 _value) returns(bool);\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) returns(bool success);\r\n\t\r\n\tfunction consume(address _from,uint256 _value) returns(bool success);\r\n}\r\n\r\nlibrary CFGDatasets{\r\n\t\r\n\tstruct PlayerData{\r\n\t\tuint256 balance;\r\n\t\taddress aff;\r\n\t}\r\n\t\r\n\tstruct PlayerContractData{\r\n\t\tuint256 time;\r\n\t\tuint256 value;\r\n\t\tbool iswithdraw;\r\n\t\tbool isrescission;\r\n\t\taddress paddr;\r\n\t}\r\n\t\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n\tfunction mul(uint256 a, uint256 b)\r\n\tinternal\r\n\tpure\r\n\treturns(uint256 c) {\r\n\t\tif(a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tc = a * b;\r\n\t\trequire(c / a == b, \"mul failed\");\r\n\t\treturn c;\r\n\t}\r\n\t\r\n\tfunction sub(uint256 a, uint256 b)\r\n\tinternal\r\n\tpure\r\n\treturns(uint256 c) {\r\n\t\trequire(b <= a, \"sub failed\");\r\n\t\tc = a - b;\r\n\t\trequire(c <= a, \"sub failed\");\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b)\r\n\tinternal\r\n\tpure\r\n\treturns(uint256 c) {\r\n\t\tc = a + b;\r\n\t\trequire(c >= a, \"add failed\");\r\n\t\treturn c;\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"renew\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rankingId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"consume\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isbonus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusGas\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"spoint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pcontract\",\"outputs\":[{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"iswithdraw\",\"type\":\"bool\"},{\"name\":\"isrescission\",\"type\":\"bool\"},{\"name\":\"paddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"superPointCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"player\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"},{\"name\":\"aff\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rankingTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_superPointTotalSupply\",\"type\":\"uint256\"}],\"name\":\"updateSuperPoint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"rescission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gas\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"superpoint\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrs\",\"type\":\"address[]\"},{\"name\":\"_ratios\",\"type\":\"uint256[]\"}],\"name\":\"uploadRanking\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrs\",\"type\":\"address[]\"},{\"name\":\"_indexs\",\"type\":\"uint256[]\"},{\"name\":\"_genNums\",\"type\":\"uint256[]\"},{\"name\":\"_myIndexs\",\"type\":\"uint256[]\"},{\"name\":\"_types\",\"type\":\"uint8[]\"}],\"name\":\"withdrawBonuss\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint256\"},{\"name\":\"_genNum\",\"type\":\"uint256\"},{\"name\":\"_myIndex\",\"type\":\"uint256\"},{\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"withdrawBonus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gas\",\"type\":\"uint256\"},{\"name\":\"_bonusGas\",\"type\":\"uint256\"}],\"name\":\"updateGas\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERIOD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ispbonus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPointMsg\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exchange\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_aff\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"superPointTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BuyHistory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RenewHistory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Rescission\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isin\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"t\",\"type\":\"string\"}],\"name\":\"BalancetHistory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"cfg\",\"type\":\"uint256\"}],\"name\":\"ExchangeHistory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"SuperPointHistory\",\"type\":\"event\"}]","ContractName":"CFGContract","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://0d76317077db4c84e9713f766824b5e301ec473214b911ede9adfef0c9ce4a84"}]}