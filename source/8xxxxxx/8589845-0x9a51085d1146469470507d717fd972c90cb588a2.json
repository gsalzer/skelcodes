{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2019-09-09\r\n * BEB dapp for www.betbeb.com www.bitbeb.com\r\n*/\r\npragma solidity^0.4.24;  \r\ninterface tokenTransfer {\r\n    function transfer(address receiver, uint amount);\r\n    function transferFrom(address _from, address _to, uint256 _value);\r\n    function balanceOf(address receiver) returns(uint256);\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n \r\n    function Ownable () public {\r\n        owner = msg.sender;\r\n    }\r\n \r\n    modifier onlyOwner {\r\n        require (msg.sender == owner);\r\n        _;\r\n    }\r\n \r\n    /**\r\n     * @param  newOwner address\r\n     */\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        if (newOwner != address(0)) {\r\n        owner = newOwner;\r\n      }\r\n    }\r\n}\r\n\r\ncontract BebPos is Ownable{\r\ntokenTransfer public bebTokenTransfer; //代币 \r\n    uint8 decimals = 18;\r\n   struct BebUser {\r\n        address customerAddr;\r\n        uint256 amount; \r\n        uint256 bebtime;\r\n        uint256 interest;\r\n    }\r\n    //ETH miner\r\n    struct miner{\r\n        uint256 mining;\r\n        //uint256 _mining;\r\n        uint256 lastDate;\r\n        uint256 ethbomus;\r\n        uint256 amountTotal;\r\n    }\r\n    mapping(address=>miner)public miners;\r\n    uint256 ethExchuangeRate=220;//eth-usd\r\n    uint256 bebethexchuang=83000;//beb-eth\r\n    uint256 bebethex=81000;//eth-beb\r\n    uint256 bounstotal;\r\n    uint256 TotalInvestment;\r\n    uint256 sumethbos;\r\n    address minter;\r\n    uint256 depreciationTime=86400;\r\n    uint256 SellBeb=100000000000000000000000;//SellBeb MAX 10000BEB\r\n    uint256 BuyBeb=1000000000000000000000000;//BuyBeb MAX 100000BEB\r\n    uint256 IncomePeriod=730;//Income period\r\n    event bomus(address to,uint256 amountBouns,string lx);\r\n    function BebPos(address _tokenAddress,address _minter){\r\n         bebTokenTransfer = tokenTransfer(_tokenAddress);\r\n         minter=_minter;\r\n     }\r\n    //BUY minter\r\n    function BebTomining(uint256 _value,uint usdt,address _addr)public{\r\n         miner storage user=miners[_addr];\r\n        require(_value>0);\r\n        uint _udst=usdt* 10 ** 18;\r\n        bebTokenTransfer.transferFrom(_addr,address(this),_value * 10 ** 18);\r\n        TotalInvestment+=_udst;\r\n        user.mining+=_udst;\r\n        //user._mining+=_udst;\r\n        user.lastDate=now;\r\n        bomus(_addr,_udst,\"Purchase success!\");\r\n    }\r\n    function freeSettlement()public{\r\n        miner storage user=miners[msg.sender];\r\n        uint256 amuont=user.mining;\r\n        //uint256 _amuontmin=user.mining;\r\n        require(amuont>0,\"You don't have a mining machine\");\r\n        uint256 _ethbomus=user.ethbomus;\r\n        uint256 _lastDate=user.lastDate;\r\n        //uint256 _ethbos=0;\r\n        uint256 _amountTotal=user.amountTotal;\r\n        uint256 sumincome=_amountTotal*100/amuont;\r\n        uint256 depreciation=(now-_lastDate)/depreciationTime;\r\n        require(depreciation>0,\"Less than 1 day of earnings\");\r\n        //The expiration of the income period, the mining machine scrapped\r\n        uint256 Bebday=amuont*depreciation/100;\r\n        uint256 profit=Bebday/ethExchuangeRate;\r\n        require(profit>0,\"Mining amount 0\");\r\n        if(sumincome>IncomePeriod){\r\n           //Mining machine scrap\r\n           user.mining=0;\r\n           user.lastDate=0;\r\n           user.ethbomus=0;\r\n           sumethbos=0;\r\n           user.amountTotal=0;\r\n        }else{\r\n            require(this.balance>profit,\"Insufficient contract balance\");\r\n            user.lastDate=now;\r\n            user.ethbomus+=Bebday;\r\n            user.amountTotal+=Bebday;\r\n            bounstotal+=profit;\r\n            user.ethbomus=0;\r\n            sumethbos=0;\r\n           msg.sender.transfer(profit);  \r\n        }\r\n        \r\n    }\r\n     function querBalance()public view returns(uint256){\r\n         return this.balance;\r\n     }\r\n    function querYrevenue()public view returns(uint256,uint256,uint256,uint256,uint256){\r\n        miner storage user=miners[msg.sender];\r\n        //sumethbos=0;\r\n        //uint256 amuont=user._mining;\r\n        uint256 _amuont=user.mining;\r\n        uint256 _amountTotal=user.amountTotal;\r\n        if(_amuont==0){\r\n            percentage=0;\r\n        }else{\r\n        uint256 percentage=100-(_amountTotal*100/_amuont*100/730);    \r\n        }\r\n        uint256 _lastDate=user.lastDate;\r\n        uint256 dayzmount=_amuont/100;\r\n        uint256 depreciation=(now-_lastDate)/depreciationTime;\r\n        require(depreciation>0,\"Less than 1 day of earnings\");\r\n        uint256  Bebday=_amuont*depreciation/100;\r\n                 sumethbos=Bebday;\r\n\r\n        uint256 profit=sumethbos/ethExchuangeRate;\r\n        return (percentage,dayzmount/ethExchuangeRate,profit,user.amountTotal/ethExchuangeRate,user.lastDate);\r\n    }\r\n    function ModifyexchangeRate(uint256 sellbeb,uint256 buybeb,uint256 _ethExchuangeRate,uint256 maxsell,uint256 maxbuy) public{\r\n        require(msg.sender ==minter,\"Insufficient\"); \r\n        ethExchuangeRate=_ethExchuangeRate;\r\n        bebethexchuang=sellbeb;\r\n        bebethex=buybeb;\r\n        SellBeb=maxsell* 10 ** 18;\r\n        BuyBeb=maxbuy* 10 ** 18;\r\n        \r\n    }\r\n    function sendEth()payable onlyOwner{\r\n        \r\n    }\r\n    // sellbeb-eth\r\n    function sellBeb(uint256 _sellbeb)public {\r\n        uint256 _sellbebt=_sellbeb* 10 ** 18;\r\n         require(_sellbeb>0,\"The exchange amount must be greater than 0\");\r\n         require(_sellbeb<SellBeb,\"More than the daily redemption limit\");\r\n         uint256 bebex=_sellbebt/bebethexchuang;\r\n         require(this.balance>bebex,\"Insufficient contract balance\");\r\n         bebTokenTransfer.transferFrom(msg.sender,address(this),_sellbebt);\r\n         msg.sender.transfer(bebex);\r\n    }\r\n    //buyBeb-eth\r\n    function buyBeb() payable public {\r\n        uint256 amount = msg.value;\r\n        uint256 bebamountub=amount*bebethex;\r\n        require(getTokenBalance()>bebamountub);\r\n        bebTokenTransfer.transfer(msg.sender,bebamountub);  \r\n    }\r\n    function queryRate() public view returns(uint256,uint256,uint256,uint256,uint256){\r\n        return (ethExchuangeRate,bebethexchuang,bebethex,SellBeb,BuyBeb);\r\n    }\r\n    function TotalRevenue()public view returns(uint256,uint256) {\r\n     return (bounstotal,TotalInvestment/ethExchuangeRate);\r\n    }\r\n    function setioc(uint256 _value)onlyOwner{\r\n        IncomePeriod=_value;\r\n    }\r\n    event messageBetsGame(address sender,bool isScuccess,string message);\r\n    function getTokenBalance() public view returns(uint256){\r\n         return bebTokenTransfer.balanceOf(address(this));\r\n    }\r\n    function withdrawAmount(uint256 amount) onlyOwner {\r\n        uint256 _amountbeb=amount* 10 ** 18;\r\n        require(getTokenBalance()>_amountbeb,\"Insufficient contract balance\");\r\n       bebTokenTransfer.transfer(owner,_amountbeb);\r\n    } \r\n    function ETHwithdrawal(uint256 amount) payable  onlyOwner {\r\n       uint256 _amount=amount* 10 ** 18;\r\n       require(this.balance>_amount,\"Insufficient contract balance\");\r\n      owner.transfer(_amount);\r\n    }\r\n    function ()payable{\r\n        \r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sendEth\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bebTokenTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sellbeb\",\"type\":\"uint256\"},{\"name\":\"buybeb\",\"type\":\"uint256\"},{\"name\":\"_ethExchuangeRate\",\"type\":\"uint256\"},{\"name\":\"maxsell\",\"type\":\"uint256\"},{\"name\":\"maxbuy\",\"type\":\"uint256\"}],\"name\":\"ModifyexchangeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setioc\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"miners\",\"outputs\":[{\"name\":\"mining\",\"type\":\"uint256\"},{\"name\":\"lastDate\",\"type\":\"uint256\"},{\"name\":\"ethbomus\",\"type\":\"uint256\"},{\"name\":\"amountTotal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"querYrevenue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"querBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TotalRevenue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"queryRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sellbeb\",\"type\":\"uint256\"}],\"name\":\"sellBeb\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ETHwithdrawal\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"usdt\",\"type\":\"uint256\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"BebTomining\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"freeSettlement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyBeb\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_minter\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountBouns\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"lx\",\"type\":\"string\"}],\"name\":\"bomus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"isScuccess\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"messageBetsGame\",\"type\":\"event\"}]","ContractName":"BebPos","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000006798cc8ad079a7e663536f83ee26d63aabe03da9000000000000000000000000fcbec1643a847e1fb0cdbb7673261e2b364d0d27","Library":"","LicenseType":"None","SwarmSource":"bzzr://bf9498398b4c5f52e7f4e0bc2500ecac045b6ba59404f005ae4c6a8fc4e303cb"}]}