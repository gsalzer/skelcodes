{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.12;\r\n\r\ncontract tokenInterface {\r\n\tfunction balanceOf(address _owner) public view returns (uint256 balance);\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool);\r\n}\r\n\r\ncontract Timelock_Swap_Trustless {\r\n\t\r\n\ttokenInterface public tcj;\r\n\ttokenInterface public xra;\r\n\tuint256 public dataUnlock;\r\n\taddress public addrCoinshare;\r\n\taddress public addrXriba;\r\n\r\n\tconstructor(address _tcj, address _xra, uint256 _dataUnlock, address _addrCoinshare, address _addrXriba) public {\r\n\t\ttcj = tokenInterface(_tcj);\r\n\t\txra = tokenInterface(_xra);\r\n\t\t\r\n\t\tdataUnlock = _dataUnlock;\r\n\t\t\r\n\t\taddrCoinshare = _addrCoinshare;\r\n\t\taddrXriba = _addrXriba;\r\n\t}\r\n\t\r\n\tbool withdrawn;\r\n\t\r\n\tfunction enabled() public view returns(bool) {\r\n\t    bool xriba_paid = xra.balanceOf(address(this)) > 3333333 * 1e18;\r\n\t    bool coinshare_paid = tcj.balanceOf(address(this)) >= 8333333 * 1e18;\r\n\t    \r\n\t    if(coinshare_paid && xriba_paid) {\r\n\t        return true;\r\n\t    } else if (withdrawn) {\r\n\t        return true;\r\n\t    } else {\r\n\t        return false;\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction () external {\r\n\t    uint256 tcj_amount = tcj.balanceOf(address(this));\r\n\t    uint256 xra_amount = xra.balanceOf(address(this));\r\n\t    \r\n\t    if(enabled()) {\r\n\t        require(now>dataUnlock,\"now>dataUnlock\");\r\n\t        if(msg.sender == addrCoinshare) {\r\n\t            require(xra_amount > 0, \"xra_amount > 0\");\r\n\t            withdrawn = true;\r\n\t            xra.transfer(addrCoinshare, xra_amount);\r\n\t        } else if ( msg.sender == addrXriba ) {\r\n\t            require(tcj_amount > 0, \"tcj_amount > 0\");\r\n\t            withdrawn = true;\r\n\t            tcj.transfer(addrXriba, tcj_amount);\r\n\t        } else {\r\n\t            revert(\"No auth.\");\r\n\t        }\r\n\t    } else {\r\n\t        if(msg.sender == addrCoinshare) {\r\n\t            require(tcj_amount > 0, \"tcj_amount > 0\");\r\n\t            tcj.transfer(addrCoinshare, tcj_amount);\r\n\t        } else if ( msg.sender == addrXriba ) {\r\n\t            require(xra_amount > 0, \"xra_amount > 0\");\r\n\t            xra.transfer(addrXriba, xra_amount);\r\n\t        } else {\r\n\t            revert(\"No auth.\");\r\n\t        }\r\n\t    }\r\n\t}\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tcj\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_xra\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_dataUnlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_addrCoinshare\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addrXriba\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"addrCoinshare\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addrXriba\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dataUnlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tcj\",\"outputs\":[{\"internalType\":\"contract tokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xra\",\"outputs\":[{\"internalType\":\"contract tokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Timelock_Swap_Trustless","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000044744e3e608d1243f55008b328fe1b09bd42e4cc0000000000000000000000007025bab2ec90410de37f488d1298204cd4d6b29d000000000000000000000000000000000000000000000000000000005f4d72e0000000000000000000000000c9d32ab70a7781a128692e9b4fecebca6c1bcce400000000000000000000000098719cfc0aee5de1ff30bb5f22ae3c2ce45e43f7","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://059d9699034dc8f004e3ff56372f9a0dd28bfd1a7763b81c1760467f50aa653e"}]}