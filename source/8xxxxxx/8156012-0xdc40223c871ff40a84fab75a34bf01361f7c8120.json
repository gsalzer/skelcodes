{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n/*\r\nOTOMAIN Token details :\r\n\r\nName            : OTOMAIN \r\nSymbol          : OTO \r\nTotal Supply    : 250.000.000.000 OTO\r\nDecimals        : 18 \r\nMainweb         : https://www.otomain.com\r\n\r\nTotal Supply  : 250.000.000.000\r\nTotal for Tokensale  : 150.000.000.000 OTO\r\nFuture development : 50.000.000.000 OTO\r\nTeam  :   25.000.000.000 OTO \r\nPromotion and Airdrop  :   25.000.000.000 OTO\r\n\r\n* No Minimum contribution on OTOMAIN Tokensale\r\nSend ETH To Contract Address you will get OTO Token directly\r\n\r\n** Don't send ETH Directly From Exchange Like Binance , Bittrex , Okex etc or you will lose your fund !!\r\n\r\nA Wallett Address can make more than once transaction on tokensale\r\n\r\nYou can also get OTO airdrop with send 0 ETH to contract address , you will get some OTO Token directly\r\n\r\nSet GAS Limits 150.000 and GAS Price always check on ethgasstation.info (use Standard Gas Price or Fast Gas Price)\r\n\r\nUnsold token will Burned \r\n\r\n*/\r\n\r\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; }\r\n\r\ncontract OTO {\r\n    // Public variables of the token\r\n    string public name = \"OTOMAIN\";\r\n    string public symbol = \"OTO\";\r\n    uint8 public decimals = 18;\r\n    // Decimals = 18\r\n    uint256 public totalSupply;\r\n    uint256 public otoSupply = 250000000000;\r\n    uint256 public buyPrice = 100000000;\r\n    address public creator;\r\n    // This creates an array with all balances\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    // This generates a public event on the blockchain\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n    \r\n    \r\n    /**\r\n     * Constrctor function\r\n     *\r\n     * Initializes contract with initial supply tokens to the creator of the contract\r\n     */\r\n    function OTO() public {\r\n        totalSupply = otoSupply * 10 ** uint256(decimals);  // Update total supply with the decimal amount\r\n        balanceOf[msg.sender] = totalSupply;    // Give OTO Token the total created tokens\r\n        creator = msg.sender;\r\n    }\r\n    /**\r\n     * Internal transfer, only can be called by this contract\r\n     */\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(_to != 0x0); //Burn\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        Transfer(_from, _to, _value);\r\n      \r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    \r\n    \r\n    /// @notice Buy tokens from contract by sending ethereum to contract address with no minimum contribution\r\n    function () payable internal {\r\n        uint amount = msg.value * buyPrice +100000e18 ;                    // calculates the amount\r\n        uint amountRaised;                                     \r\n        amountRaised += msg.value;                            \r\n        require(balanceOf[creator] >= amount);               \r\n        require(msg.value >=0);                        \r\n        balanceOf[msg.sender] += amount;                  // adds the amount to buyer's balance\r\n        balanceOf[creator] -= amount;                        \r\n        Transfer(creator, msg.sender, amount);               \r\n        creator.transfer(amountRaised);\r\n    }    \r\n    \r\n }","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"otoSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"OTO","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://62b3bfacf12fd1ba7f15c0c3bdbda79257fcb6efaadb43c809e9b11206acf48a"}]}