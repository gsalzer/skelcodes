{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\n/**\r\n * token contract functions\r\n*/\r\ncontract token {\r\n    function transfer(address receiver, uint256 amount) public;\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n}\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n  \r\n}\r\n\r\ncontract owned {\r\n        address public owner;\r\n\r\n        constructor() public {\r\n            owner = msg.sender;\r\n        }\r\n\r\n        modifier onlyOwner {\r\n            require(msg.sender == owner);\r\n            _;\r\n        }\r\n\r\n        function transferOwnership(address newOwner) onlyOwner public {\r\n            owner = newOwner;\r\n        }\r\n}\r\n\r\ncontract GenjiCrowdsale is owned{\r\n    using SafeMath for uint256;\r\n    \r\n    address public beneficiary;\r\n    uint256 public amountRaised;\r\n    uint256 public preSaleStartdate;\r\n    uint256 public preSaleDeadline;\r\n    uint256 public mainSaleStartdate;\r\n    uint256 public mainSaleDeadline;\r\n    uint256 public preSalePrice;\r\n    uint256 public price;\r\n    uint256 public fundTransferred;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n    bool crowdsaleClosed = false;\r\n\r\n    /**\r\n     * Constrctor function\r\n     *\r\n     */\r\n    constructor() public{\r\n        beneficiary = 0xBCEb3a1Ff8dF1eD574bdEeBf8c2feEf47351Ba42;\r\n        preSaleStartdate = 1563580800;\r\n        preSaleDeadline = 1564617599;\r\n        mainSaleStartdate = 1564617600;\r\n        mainSaleDeadline = 1567641599;\r\n        preSalePrice = 0.00002345 ether;\r\n        price = 0.0000335 ether;\r\n        tokenReward = token(0xb49b4d400D66AAa53ec07184A8C7c6C9c23374c9);\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function () payable external {\r\n        require(!crowdsaleClosed);\r\n        uint256 bonus;\r\n        uint256 amount;\r\n        uint256 ethamount = msg.value;\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].add(ethamount);\r\n        amountRaised = amountRaised.add(ethamount);\r\n        \r\n        //add bounus for funders\r\n        if(now >= preSaleStartdate && now <= preSaleDeadline){\r\n            amount =  ethamount.div(preSalePrice);\r\n            bonus = amount * 50 / 100;\r\n            amount = amount.add(bonus);\r\n        }\r\n        else if(now >= mainSaleStartdate && now <= mainSaleStartdate + 1 weeks){\r\n            amount =  ethamount.div(price);\r\n            bonus = amount * 40/100;\r\n            amount = amount.add(bonus);\r\n        }\r\n        else if(now >= mainSaleStartdate + 1 weeks && now <= mainSaleStartdate + 2 weeks){\r\n            amount =  ethamount.div(price);\r\n            bonus = amount * 33/100;\r\n            amount = amount.add(bonus);\r\n        }\r\n        else if(now >= mainSaleStartdate + 2 weeks && now <= mainSaleStartdate + 3 weeks){\r\n            amount =  ethamount.div(price);\r\n            bonus = amount * 25/100;\r\n            amount = amount.add(bonus);\r\n        }\r\n        else if(now >= mainSaleStartdate + 3 weeks && now <= mainSaleStartdate + 4 weeks){\r\n            amount =  ethamount.div(price);\r\n            bonus = amount * 15/100;\r\n            amount = amount.add(bonus);\r\n        }\r\n        else {\r\n            amount =  ethamount.div(price);\r\n            bonus = amount * 8/100;\r\n            amount = amount.add(bonus);\r\n        }\r\n        \r\n        amount = amount.mul(1000000000000000000);\r\n        tokenReward.transfer(msg.sender, amount);\r\n        beneficiary.transfer(ethamount);\r\n        fundTransferred = fundTransferred.add(ethamount);\r\n    }\r\n\r\n    modifier afterDeadline() { if (now >= mainSaleDeadline) _; }\r\n\r\n    /**\r\n     *ends the campaign after deadline\r\n     */\r\n     \r\n    function endCrowdsale() public afterDeadline onlyOwner {\r\n         crowdsaleClosed = true;\r\n    }\r\n    \r\n    /**\r\n     *change pre sale price\r\n    */\r\n\tfunction ChangepreSalePrice(uint256 _preSalePrice) public onlyOwner {\r\n\t\t  preSalePrice = _preSalePrice;\t\r\n\t}\r\n\t\r\n    /**\r\n     *change price\r\n    */\r\n\tfunction ChangePrice(uint256 _price) public onlyOwner {\r\n\t\t  price = _price;\t\r\n\t}\r\n\t\r\n\t/**\r\n     *change beneficiary\r\n    */\r\n\tfunction ChangeBeneficiary(address _beneficiary) public onlyOwner {\r\n\t\t  beneficiary = _beneficiary;\t\r\n\t}\r\n\t\r\n\t/**\r\n     *change dates\r\n    */\r\n    function ChangeDates(uint256 _preSaleStartdate, uint256 _preSaleDeadline, uint256 _mainSaleStartdate, uint256 _mainSaleDeadline) public onlyOwner {\r\n        \r\n          if(_preSaleStartdate != 0){\r\n               preSaleStartdate = _preSaleStartdate;\r\n          }\r\n          if(_preSaleDeadline != 0){\r\n               preSaleDeadline = _preSaleDeadline;\r\n          }\r\n          if(_mainSaleStartdate != 0){\r\n               mainSaleStartdate = _mainSaleStartdate;\r\n          }\r\n          if(_mainSaleDeadline != 0){\r\n               mainSaleDeadline = _mainSaleDeadline; \r\n          }\r\n\t\t  \r\n\t\t  if(crowdsaleClosed == true){\r\n\t\t\t crowdsaleClosed = false;\r\n\t\t  }\r\n    }\r\n    \r\n    function getTokensBack() public onlyOwner {\r\n        uint256 remaining = tokenReward.balanceOf(this);\r\n        tokenReward.transfer(beneficiary, remaining);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"endCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleDeadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundTransferred\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"ChangeBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getTokensBack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_preSalePrice\",\"type\":\"uint256\"}],\"name\":\"ChangepreSalePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleStartdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSalePrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_preSaleStartdate\",\"type\":\"uint256\"},{\"name\":\"_preSaleDeadline\",\"type\":\"uint256\"},{\"name\":\"_mainSaleStartdate\",\"type\":\"uint256\"},{\"name\":\"_mainSaleDeadline\",\"type\":\"uint256\"}],\"name\":\"ChangeDates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainSaleStartdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleDeadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"ChangePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"GenjiCrowdsale","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://514d06d150c0e39933fd8c7109f3485ac37feffd75e58a960858211d25e29dca"}]}