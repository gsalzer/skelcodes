{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\ncontract distributer{\r\n    \r\n    struct partner {\r\n        address payable addr;\r\n        uint ratio;\r\n        uint payout;\r\n    }\r\n\r\n    partner[] public partners;\r\n\r\n    modifier onlyPayeeOne() { \r\n        if (msg.sender == partners[0].addr){\r\n            _;\r\n        }\r\n    }\r\n\r\n    constructor() public {\r\n        partners.push(partner(address(0x4D90517Ad43e8B7bd90b55C6e7e4b2292162607b),7840, 0)); //78.4 - onlyPayeeOne\r\n        partners.push(partner(address(0x1102934CD05901fdc9A98265d30DF902Ad7d78E1),1080, 0)); //10.8\r\n        partners.push(partner(address(0xd5f7ce66673F74D1a136D29cCD111000fdEd70B3),990, 0)); //9.9\r\n        partners.push(partner(address(0xDa470AB346A57D403e725138682F3544ba64a9C1),90, 0)); //0.9\r\n    }\r\n    \r\n    function() payable external {}\r\n    \r\n    function calculatePayouts() internal {\r\n        //set payouts to each address\r\n        for (uint i=0; i< partners.length; i++) {\r\n            partners[i].payout += (address(this).balance * partners[i].ratio) / 10000;\r\n        }\r\n    }\r\n    \r\n    function payout() public onlyPayeeOne {\r\n        //This payout is only suitable for a trusted setup and has security consideration where the addresses in partners can be contracts or extended more than 4 addresses.\r\n        calculatePayouts();\r\n        for (uint i=0; i<partners.length; i++) {\r\n            if (partners[i].addr.send(partners[i].payout)) {\r\n                partners[i].payout = 0;\r\n            }\r\n        }\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"payout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"partners\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"ratio\",\"type\":\"uint256\"},{\"name\":\"payout\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"distributer","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://485cd2b7f507651bf68cb6b2016ca14dda7b527be4513607dbd9bb5bf951ebbb"}]}