{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n\r\n\r\n// Safe maths\r\n\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n\r\n\r\ncontract FICO {\r\n    \r\n    using SafeMath for uint;\r\n    \r\n    address owner; \r\n    uint constant a_1 = 1000000000000000000;\r\n    uint constant a_2 = 0;\r\n    uint constant b_1 = 6000000000000000000;\r\n    uint constant b_2 = 18;\r\n    uint constant c_1 = 10000000000000000000;\r\n    uint constant c_2 = 30;\r\n    uint constant d_1 = 25000000000000000000;\r\n    uint constant d_2 = 75;\r\n    uint constant e_1 = 50000000000000000000;\r\n    uint constant e_2 = 150;\r\n    uint constant f_1 = 80000000000000000000;\r\n    uint constant f_2 = 240;\r\n    \r\n    \r\n    constructor()public{\r\n        owner = msg.sender;\r\n        verification[owner]=keccak256(abi.encodePacked(owner));\r\n        quota[owner] = f_2;\r\n        quota_2[owner]=quota[owner].mul(7).div(24);\r\n        quota_3[owner]=quota[owner].mul(4).div(24);\r\n        amount[owner] = f_1;\r\n        age[owner]=1;\r\n        menber_count=menber_count.add(1);\r\n        menbership[owner] = menber(\"Weber\" ,owner,amount[owner],quota[owner],quota_2[owner],quota_3[owner],age[owner],superior[0x0]);\r\n    }\r\n  \r\n     //---投資者的分潤配比---//\r\n    mapping(address => uint)quota; \r\n    mapping(address => uint)quota_2;\r\n    mapping(address => uint)quota_3;\r\n   \r\n     //---投資者的資訊---//\r\n    mapping(address => uint)amount; //投資者的投資金額\r\n    mapping(address => address) superior;//輸入地址查詢其推薦人\r\n    mapping(address => menber)public menbership; // 會員的資料\r\n    mapping(address => bytes32) verification;//驗證專用的密文\r\n    mapping(address => uint)age; //第幾代\r\n    uint public menber_count;//會員人數\r\n   \r\n    \r\n    event usermap(address menbership ,address refferer,uint amount );\r\n    event set_user(address admin ,address refferer,string name );\r\n    \r\n    struct menber{\r\n        string name; \r\n        address user_key;\r\n        uint invest_amout;\r\n        uint quota;\r\n        uint quota_2;\r\n        uint quota_3;\r\n        uint age;\r\n        address superior;\r\n    }\r\n    \r\n    \r\n    \r\n     modifier _verification {\r\n         bytes32 user = keccak256(abi.encodePacked(msg.sender));\r\n         require (verification[msg.sender] != user ,\"這組地址使用過\");\r\n         verification[msg.sender] =user;\r\n        _;\r\n    }\r\n    \r\n    \r\n    function project (address refferer,string name)public _verification payable{\r\n        \r\n        require (msg.sender != refferer,\"不能投給自己\");\r\n        require (refferer != address(0x0),\"\");\r\n        require (age[refferer] != 0 ,\"沒有該名會員\");\r\n        \r\n        \r\n        if(msg.value == a_1){\r\n            quota[msg.sender] = a_2;\r\n            amount[msg.sender] = msg.value;\r\n        }else if (msg.value == b_1){\r\n            quota[msg.sender] = b_2;\r\n            amount[msg.sender] = msg.value;\r\n        }else if(msg.value == c_1){\r\n            quota[msg.sender] = c_2;\r\n            amount[msg.sender] = msg.value;\r\n        }else if(msg.value == d_1){\r\n            quota[msg.sender] = d_2;\r\n            amount[msg.sender] = msg.value;\r\n        }else if(msg.value == e_1){\r\n            quota[msg.sender] = e_2;\r\n            amount[msg.sender] = msg.value;\r\n        }else if(msg.value == f_1){\r\n            quota[msg.sender] = f_2;\r\n            amount[msg.sender] = msg.value;\r\n        }else{\r\n              revert(\"沒有這個項目\");\r\n        }\r\n        \r\n        age[msg.sender] = age[refferer].add(1);\r\n        superior[msg.sender]=refferer;\r\n        \r\n       \r\n        refferer.transfer(msg.value.mul(quota[refferer]).div(1000)); \r\n        \r\n        address A = superior[refferer];\r\n        A.transfer(msg.value.mul(quota[A]).mul(7).div(24).div(1000));\r\n        \r\n        address B = superior[superior[refferer]];\r\n        B.transfer(msg.value.mul(quota[B]).mul(4).div(24).div(1000));\r\n        \r\n        quota_2[msg.sender] = quota[msg.sender].mul(7).div(24);\r\n        quota_3[msg.sender] = quota[msg.sender].mul(4).div(24);\r\n        \r\n        \r\n        //Safe_location();\r\n        \r\n        menber_count=menber_count.add(1);\r\n        menbership[msg.sender] = menber(name ,msg.sender,msg.value,quota[msg.sender],quota_2[msg.sender],quota_3[msg.sender],age[msg.sender],superior[msg.sender]);\r\n        \r\n        emit usermap(msg.sender , refferer ,msg.value );\r\n    }\r\n    \r\n    \r\n    function querybalance()public view returns (uint){\r\n        return address(this).balance;\r\n    }\r\n    \r\n    \r\n    function Safe_location() private  {\r\n        uint money = querybalance();\r\n        owner.transfer(money);\r\n    }\r\n   \r\n    function transfer() public {\r\n        require(owner == msg.sender,\"你沒有權限\");\r\n        uint money = querybalance();\r\n        owner.transfer(money);\r\n    } \r\n    \r\n    function add_menber(address set_menber , string name)public {\r\n        require(owner == msg.sender,\"你沒有權限\");\r\n        bytes32 user = keccak256(abi.encodePacked(set_menber));\r\n        require (verification[set_menber] != user,\"你已經輸入過該該組公鑰\");\r\n        verification[set_menber]=user;\r\n        \r\n        quota[set_menber] = f_2;\r\n        quota_2[set_menber]=quota[set_menber].mul(7).div(24);\r\n        quota_3[set_menber]=quota[set_menber].mul(4).div(24);\r\n        amount[set_menber] = f_1;\r\n        superior[set_menber]=owner;\r\n        age[set_menber] = age[owner].add(1);\r\n        menber_count=menber_count.add(1);\r\n        menbership[set_menber] = menber(name ,set_menber,amount[set_menber],quota[set_menber],quota_2[set_menber],quota_3[set_menber],age[set_menber],superior[set_menber]);\r\n        \r\n        emit set_user( msg.sender,set_menber,name);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"menber_count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"refferer\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"project\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"querybalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"menbership\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"user_key\",\"type\":\"address\"},{\"name\":\"invest_amout\",\"type\":\"uint256\"},{\"name\":\"quota\",\"type\":\"uint256\"},{\"name\":\"quota_2\",\"type\":\"uint256\"},{\"name\":\"quota_3\",\"type\":\"uint256\"},{\"name\":\"age\",\"type\":\"uint256\"},{\"name\":\"superior\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"set_menber\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"add_menber\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"menbership\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"refferer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"usermap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"refferer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"}],\"name\":\"set_user\",\"type\":\"event\"}]","ContractName":"FICO","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://3cbc62c98de84e7b9a6ea6db77dfbc568514f91fa19b5d9d6dc180918fc59b8a"}]}