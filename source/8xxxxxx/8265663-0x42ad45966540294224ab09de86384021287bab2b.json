{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.23;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract SEA {\r\n    using SafeMath for uint256;\r\n    string public name;\r\n    string public symbol;\r\n    uint256 public decimals;\r\n    uint256 public totalSupply;\r\n\taddress public owner;\r\n\tuint256 public basisPointsRate = 0;\r\n\tuint256 public maximumFee = 0;\r\n\tuint256 public minimumFee = 0;\r\n\r\n    mapping (address => uint256) public balances;\r\n    mapping (address => uint256) public freezes;\r\n    mapping (address => mapping (address => uint256)) public allowed;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event CollectFee(address indexed from, address indexed _owner, uint256 fee);\r\n    event Approval(address indexed from, address indexed _spender, uint256 _value);\r\n    event Params(address indexed _owner, uint256 feeBasisPoints, uint256 minFee, uint256 maxFee); \r\n    event Freeze(address indexed to, uint256 value);\r\n    event Unfreeze(address indexed to, uint256 value);\r\n\tevent Withdraw(address indexed to, uint256 value);\r\n\r\n    constructor(uint256 initialSupply, uint8 decimalUnits, string tokenName, string tokenSymbol) public {\r\n        balances[msg.sender] = initialSupply;\r\n        totalSupply = initialSupply;\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n        decimals = decimalUnits;\r\n\t\towner = msg.sender;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n\t\trequire(_to != address(0));\r\n        uint256 fee = calFee(_value);\r\n        require(_value > fee);\r\n        uint256 sendAmount = _value.sub(fee);\r\n\t\trequire(balances[msg.sender] >= _value && _value > 0 && balances[_to] + sendAmount > balances[_to]);\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(sendAmount);\r\n\t\tif (fee > 0) {\r\n            balances[owner] = balances[owner].add(fee);\r\n            emit CollectFee(msg.sender, owner, fee);\r\n        }\r\n        emit Transfer(msg.sender, _to, sendAmount);\r\n\t\treturn true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n\t\trequire(_spender != address(0));\r\n\t\trequire((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n        allowed[msg.sender][_spender] = _value;\r\n\t\temit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n\t\trequire((_from != address(0)) && (_to != address(0)));\r\n        uint256 fee = calFee(_value);\r\n        require(_value > fee);\r\n        uint256 sendAmount = _value.sub(fee);\r\n\t\trequire(balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0 && balances[_to] + sendAmount > balances[_to]);\r\n\t\tbalances[_to] = balances[_to].add(sendAmount);\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n\t\tif (fee > 0) {\r\n            balances[owner] = balances[owner].add(fee);\r\n            emit CollectFee(msg.sender, owner, fee);\r\n        }\r\n\t\temit Transfer(_from, _to, _value);\r\n\t\treturn true;\r\n    }\r\n    \r\n    function freeze(address _to,uint256 _value) public returns (bool success) {\r\n\t\trequire(msg.sender == owner);\r\n        require(balances[_to] >= _value);\r\n        require(_value > 0);\r\n        balances[_to] = balances[_to].sub(_value);\r\n        freezes[_to] = freezes[_to].add(_value);\r\n        emit Freeze(_to, _value);\r\n        return true;\r\n    }\r\n\t\r\n\tfunction unfreeze(address _to,uint256 _value) public returns (bool success) {\r\n\t\trequire(msg.sender == owner);\r\n        require(freezes[_to] >= _value);\r\n        require(_value > 0);\r\n        freezes[_to] = freezes[_to].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n        emit Unfreeze(_to, _value);\r\n        return true;\r\n    }\r\n\t\r\n\tfunction setParams(uint256 newBasisPoints, uint256 newMinFee, uint256 newMaxFee) public returns (bool success) {\r\n\t    require(msg.sender == owner);\r\n        require(newBasisPoints <= 20);\r\n        require(newMinFee <= 50);\r\n        require(newMaxFee <= 50);\r\n\t\trequire(newMinFee <= newMaxFee);\r\n        basisPointsRate = newBasisPoints;\r\n        minimumFee = newMinFee.mul(10**decimals);\r\n        maximumFee = newMaxFee.mul(10**decimals);\r\n        emit Params(msg.sender, basisPointsRate, minimumFee, maximumFee);\r\n        return true;\r\n    }\r\n    \r\n    function calFee(uint256 _value) private view returns (uint256 fee) {\r\n        fee = (_value.mul(basisPointsRate)).div(10000);\r\n        if (fee > maximumFee) {\r\n            fee = maximumFee;\r\n        }\r\n        if (fee < minimumFee) {\r\n            fee = minimumFee;\r\n        }\r\n    }\r\n\t\r\n\tfunction withdrawEther(uint256 amount) public returns (bool success) {\r\n\t\trequire (msg.sender == owner);\r\n\t\towner.transfer(amount);\r\n\t\temit Withdraw(msg.sender,amount);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction destructor() public returns (bool success) {\r\n\t    require(msg.sender == owner);\r\n        selfdestruct(owner);\r\n        return true;\r\n    }\r\n\t\r\n\tfunction() payable private {\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destructor\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMinFee\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"CollectFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"minFee\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"}]","ContractName":"SEA","CompilerVersion":"v0.4.23+commit.124ca40d","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000e8d4a5100000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000a546574686572205345410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035345410000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://41180f97f646e2c46eb8c3a4d8e16bb34edbca15c52ea3e98aaa76f68e8d72ab"}]}