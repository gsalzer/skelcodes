{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ncontract SafeMath {\r\n    \r\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) { \r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n  \r\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b > 0);\r\n        uint256 c = a / b;\r\n        assert(a == b * c + a % b);\r\n        return c;\r\n    }\r\n \r\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        assert(b >=0);\r\n        return a - b;\r\n    }\r\n \r\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c>=a && c>=b);\r\n        return c;\r\n    }\r\n}\r\n \r\ncontract TokenCreation is SafeMath{\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n    address public owner;\r\n \r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    mapping (address => uint256) public freezeOf;\r\n \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Burn(address indexed from, uint256 value);\r\n    event Freeze(address indexed from, uint256 value);\r\n    event Unfreeze(address indexed from, uint256 value);\r\n \r\n    constructor(\r\n        string tokenSymbol,\r\n        string tokenName,\r\n        uint256 tokenSupply\r\n    ) public {\r\n        owner = msg.sender;\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n        decimals = 18;\r\n        totalSupply = tokenSupply * (10 ** 18);\r\n        balanceOf[0x94eE12284824C91dB533d4745cD02098d7284460] = SafeMath.safeDiv(totalSupply, 10);\r\n        balanceOf[0xfaDB28B22b1b5579f877c78098948529175F81Eb] = SafeMath.safeSub(totalSupply, SafeMath.safeDiv(totalSupply, 10));\r\n    }\r\n \r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        if (_to != 0x0 && _value >0 && balanceOf[msg.sender] >= _value && balanceOf[_to] + _value >= balanceOf[_to]) {\r\n            assert(_to != 0x0);\r\n            assert(_value > 0);\r\n            assert(balanceOf[msg.sender] >= _value); \r\n            assert(balanceOf[_to] + _value >= balanceOf[_to]); \r\n            balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value); \r\n            balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value); \r\n            emit Transfer(msg.sender, _to, _value);// Notify anyone listening that this transfer took place\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n \r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        assert(_value > 0);\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n \r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        assert(_to != 0x0);\r\n        assert(_value > 0);\r\n        assert(balanceOf[_from] >= _value);\r\n        assert(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        assert(_value <= allowance[_from][msg.sender]);\r\n        balanceOf[_from] = SafeMath.safeSub(balanceOf[_from], _value); \r\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value); \r\n        allowance[_from][msg.sender] = SafeMath.safeSub(allowance[_from][msg.sender], _value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n \r\n    function burn(uint256 _value) public returns (bool success) {\r\n        assert(balanceOf[msg.sender] >= _value);\r\n        assert(_value > 0);\r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);\r\n        totalSupply = SafeMath.safeSub(totalSupply,_value);\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n \r\n    function freeze(uint256 _value) public returns (bool success) {\r\n        assert(balanceOf[msg.sender] >= _value);\r\n        assert(_value > 0);\r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value); \r\n        freezeOf[msg.sender] = SafeMath.safeAdd(freezeOf[msg.sender], _value); \r\n        emit Freeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n \r\n    function unfreeze(uint256 _value) public returns (bool success) {\r\n        assert(freezeOf[msg.sender] >= _value);\r\n        assert(_value > 0); \r\n        freezeOf[msg.sender] = SafeMath.safeSub(freezeOf[msg.sender], _value); \r\n        balanceOf[msg.sender] = SafeMath.safeAdd(balanceOf[msg.sender], _value);    \r\n        emit Unfreeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n \r\n    function withdrawByOwner(uint256 amount) public {\r\n        assert(msg.sender == owner);\r\n        owner.transfer(amount);\r\n    }\r\n    \r\n    function resetTokenName(string tokenNameNew) public {\r\n        assert(msg.sender == owner);\r\n        name = tokenNameNew;\r\n    }\r\n    \r\n    function resetTokenSymbol(string tokenSymbolNew) public {\r\n        assert(msg.sender == owner);\r\n        symbol = tokenSymbolNew;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawByOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenSymbolNew\",\"type\":\"string\"}],\"name\":\"resetTokenSymbol\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenNameNew\",\"type\":\"string\"}],\"name\":\"resetTokenName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"}]","ContractName":"TokenCreation","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000003b9aca0000000000000000000000000000000000000000000000000000000000000000035649430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001356616c7565206f6620496e646976696475616c00000000000000000000000000","Library":"","LicenseType":"None","SwarmSource":"bzzr://951c409f5d9d03e8fc2260b5ee125b0702649299b2523ce4f04047f2817220ea"}]}