{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.12;\n\n\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    \n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    \n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    \n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    \n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    \n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    \n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    \n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\ncontract Certificate is Ownable  {\n    bytes32 private _certificateHolderNameHash;\n    string private _eventName;\n    string private _organizer;\n    string private _issuedBy;\n    string private _issuedOn;\n\n    constructor(\n        string memory eventName,\n        string memory organizer,\n        string memory issuedBy,\n        string memory issuedOn\n    )\n        public\n    {\n        _eventName = eventName;\n        _organizer = organizer;\n        _issuedBy = issuedBy;\n        _issuedOn = issuedOn;\n    }\n    \n    function setCertificateHolderNameHash(\n        bytes32 certificateHolderNameHash\n    )\n        external\n        onlyOwner\n    {\n        _certificateHolderNameHash = certificateHolderNameHash;\n    }\n    \n    function name()\n        external pure\n        returns (string memory)\n    {\n        return \"Lykke Academy Certificate\";\n    }\n    \n    function certificateType()\n        external pure\n        returns (string memory)\n    {\n        return \"CERTIFICATE OF PARTICIPATION\";\n    }\n\n    function certificateHolderNameHash()\n        external view\n        returns (bytes32)\n    {\n        return _certificateHolderNameHash;\n    }\n    \n    function eventName()\n        external view\n        returns (string memory)\n    {\n        return _eventName;\n    }\n    \n    function organizer()\n        external view\n        returns (string memory)\n    {\n        return _organizer;\n    }\n    \n    function issuedBy()\n        external view\n        returns (string memory)\n    {\n        return _issuedBy;\n    }\n\n    function issuedOn()\n        external view\n        returns (string memory)\n    {\n        return _issuedOn;\n    }\n\n    function validateCertificateHolderName(\n        string calldata certificateHolderName\n    )\n        external view\n        returns (bool)\n    {\n        return _certificateHolderNameHash == keccak256(abi.encode(certificateHolderName));\n    }\n    \n}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"eventName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"organizer\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"issuedBy\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"issuedOn\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"certificateHolderNameHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"certificateType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eventName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"issuedBy\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"issuedOn\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"organizer\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"certificateHolderNameHash\",\"type\":\"bytes32\"}],\"name\":\"setCertificateHolderNameHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"certificateHolderName\",\"type\":\"string\"}],\"name\":\"validateCertificateHolderName\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Certificate","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"1","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000003346554e44414d454e54414c53202d204449474954414c2041535345545320414e442046494e414e4349414c204d41524b45545300000000000000000000000000000000000000000000000000000000000000000000000000000000000000001f4c796b6b6520427573696e65737320414720666f722042435044204c74642e0000000000000000000000000000000000000000000000000000000000000000104c796b6b6520427573696e657320414700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001132372053657074656d6265722032303139000000000000000000000000000000","Library":"","LicenseType":"","SwarmSource":"bzzr://1454c4dd69c1a199a8e30c3c12501e2c2a27d41829889d6adeda695b45235d34"}]}