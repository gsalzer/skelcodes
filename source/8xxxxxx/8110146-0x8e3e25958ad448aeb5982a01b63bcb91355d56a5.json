{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.22 <0.6.0;\r\n\r\ninterface collectible {\r\n    function transfer(address receiver, uint amount) external;\r\n}\r\n\r\ncontract Swap {\r\n    address public beneficiary;\r\n    uint public amountRaised;\r\n    uint public price;\r\n    bool contractover = false;\r\n    collectible public swapaddress;\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => bool) public check;\r\n\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * Setup the owner\r\n     */\r\n    constructor(\r\n        address SendTo,\r\n        uint etherCostOfEachCollectible,\r\n        address addressOfCollectibleUsedAsReward\r\n    ) public {\r\n        beneficiary = SendTo;\r\n        price = etherCostOfEachCollectible * 1 szabo;\r\n        swapaddress = collectible(addressOfCollectibleUsedAsReward);\r\n    }\r\n\r\n    \r\n    function () payable external {\r\n        require(check[msg.sender] == false);\r\n        require(msg.value < 1000000000000000001 wei);\r\n        \r\n        uint amount = msg.value;\r\n        balanceOf[msg.sender] += amount;\r\n        amountRaised += amount;\r\n        uint copy = price;\r\n        uint second = price;\r\n        uint third = price;\r\n        \r\n        if (amountRaised <= 100 ether) {\r\n        uint newvalue = copy / 10;\r\n        swapaddress.transfer(msg.sender, amount / newvalue);\r\n        } else if (amountRaised <= 2100 ether) {\r\n        uint secondvalue = second / 2;\r\n        swapaddress.transfer(msg.sender, amount / secondvalue);\r\n        } else {\r\n        swapaddress.transfer(msg.sender, amount / third);\r\n        }\r\n        \r\n        beneficiary.send(msg.value);\r\n        emit FundTransfer(msg.sender, amount, true);\r\n        check[msg.sender] = true;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"swapaddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"check\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"SendTo\",\"type\":\"address\"},{\"name\":\"etherCostOfEachCollectible\",\"type\":\"uint256\"},{\"name\":\"addressOfCollectibleUsedAsReward\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"Swap","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000048fef98cd893bcc05fe748aed04d04bf246f5dc2000000000000000000000000000000000000000000000000000000000000000100000000000000000000000081fd787a4808209a98ee53075441b8eb9ce6b7e5","Library":"","SwarmSource":"bzzr://cf9d8173036538acf308ecccbca0712b7188976ceb46a6e742262990d1177191"}]}