{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.7;\r\n\r\n\r\ninterface PrimaryStorage {\r\n    function isPlatformModerator(address who) external view returns (bool);\r\n    function isCommunityModerator(address who) external view returns (bool);\r\n    function getInsuranceControllerState(uint256 insId) external view returns (bytes32);\r\n    function oldProjectCtrl(bytes32 controllersHash) external view returns (address payable);\r\n    function oldRefundCtrl(bytes32 controllersHash) external view returns (address payable);\r\n    function oldDisputeCtrl(bytes32 controllersHash) external view returns (address payable);\r\n    function oldUtilityCtrl(bytes32 controllersHash) external view returns (address payable);\r\n    function getIsNetworkDeployed() external view returns (bool);\r\n    function getNumberOfInvestors() external view returns (uint256);\r\n    function getMinInvestorContribution() external view returns (uint256);\r\n    function getMaxInvestorContribution() external view returns (uint256);\r\n    function isInvestor(address who) external view returns (bool);\r\n    function getRegularContributionPercentage() external view returns (uint256);\r\n    function getInsuranceRate(uint256 insId) external view returns (uint256);\r\n    function getMinProtectionPercentage() external view returns (uint256);\r\n    function getMinOwnerContribution() external view returns (uint256);\r\n    function getMaxProtectionPercentage() external view returns (uint256);\r\n    function isCanceled(uint256 insId) external view returns (bool);\r\n    function getInsuranceOwner(uint256 insId) external view returns (address);\r\n    function getEtherSecured(uint256 insId) external view returns (uint256);\r\n    function getProjectCurrentState(uint256) external view returns (uint8);\r\n    function getPoolContribution(uint256 insId) external view returns (uint256);\r\n    function getProjectOfInvestment(uint256 insId) external view returns (uint256 projectId);\r\n    function getTimeOfTheRequest(uint256 insId) external view returns (uint256);\r\n    function getVotedForARefund(uint256 insId) external view returns (bool);\r\n    function getVotedAfterFailedVoting(uint256 insId) external view returns (bool);\r\n    function getIsRefunded(uint256 insId) external view returns (bool);\r\n    function getInvestorAddressByInsurance(uint256 insId) external view returns (address);\r\n    function getInvestorAddressById(uint256 insId) external view returns (address);\r\n    function getInvestorId(address investor) external view returns (uint256);\r\n    function getAmountAvailableForWithdraw(address userAddr, uint256 pid) external view returns (uint256);\r\n    function getReferrer(address investor) external view returns (address);\r\n    function isProjectOwner(address who) external view returns (bool);\r\n    function isArbiter(address who) external view returns (bool);\r\n    function getDisputeVotePeriod(uint256 disputeId) external view returns (uint256);\r\n    function getResultCountPeriod(uint256 disputeId) external view returns (uint256);\r\n    function getDisputeLotteryPrize(uint256 disputeId) external view returns (uint256 votingPrize);\r\n    function getEntryFee(uint256 disputeId) external view returns (uint256);\r\n    function getDisputeNumberOfVoters(uint256 disputeId) external view returns (uint256);\r\n    function getHiddenVote(uint256 disputeId, address voter) external view returns (bytes32);\r\n    function getRevealedVote(uint256 disputeId, address voter) external view returns (bool);\r\n    function getPublicDisputeURL(uint256 disputeId) external view returns (bytes memory);\r\n    function getDisputeVoter(uint256 disputeId, uint256 voterId) external view returns (address);\r\n    function getNumberOfInvestments() external view returns (uint256);\r\n    function getCurrentControllersHash() external view returns (bytes32);\r\n    function getProjectController() external view returns (address payable);\r\n    function getRefundController() external view returns (address payable);\r\n    function getDisputeController() external view returns (address payable);\r\n    function getUtilityController() external view returns (address payable);\r\n    function getRefundEtherTokenAddress() external view returns (address payable) ;\r\n    function getAffiliateEscrow() external view returns (address payable);\r\n    function getRefundPool() external view returns (address payable);\r\n    function getEventLogger() external view returns (address);\r\n    function getModerationResources() external view returns (address payable);\r\n    function getMainContract() external view returns (address payable);\r\n    function getSecondaryStorage() external view returns (address);\r\n    function getPrimaryStorage() external view returns(address);\r\n    function getdAppState(bytes32 cntrllrs)\r\n\t\t    external\r\n\t\t\t\tview\r\n\t\t\t\treturns (address payable projectCtrl, address payable refundCtrl, address payable disputeCtrl, address payable utilityCtrl);\r\n    function getDefaultLotteryPrize() external view returns (uint256);\r\n    function getNumberOfVotesForRefundState(uint256 disputeId) external view returns (uint256);\r\n    function getNumberOfVotesAgainstRefundState(uint256 disputeId) external view returns (uint256);\r\n    function getPayment(address payment, uint256 did) external view returns (uint256);\r\n    function getDisputeCreator(uint256 disputeId) external view returns (address payable);\r\n    function getValidationToken(address verificatedUser) external view returns (uint256);\r\n    function isVoteRevealed(uint256 disputeId, address voter) external view returns (bool);\r\n    function getDefaultPolicyDuration() external view returns (uint256);\r\n    function getDefaultBasePolicyDuration() external view returns (uint256);\r\n}\r\n\r\n\r\ninterface SecondaryStorage {\r\n    function getCrowdsaleEndTime(uint256 pid) external view returns (uint256);\r\n    function getAlreadyProtected(uint256 pid, address investor) external view returns(bool isProtected);\r\n    function getProjectControllerState(uint256 pid) external view returns (bytes32);\r\n    function getTokenDecimals(uint256 pid) external view returns (uint8);\r\n    function getProtectionRate(uint256 pid) external view returns (uint256);\r\n    function getTotalAmountSecuredEther(uint256 pid) external view returns (uint256);\r\n    function getAmountOfFundsContributed(uint256 pid) external view returns (uint256);\r\n    function getOwnerContribution(uint256 pid) external view returns (uint256);\r\n    function getNumberOfProjectInvestments(uint256 pid) external view returns (uint256);\r\n    function getOwnerFunds(uint256 pid, address ownerAddr) external view returns (uint256);\r\n    function getInvestmentToProject(uint256 pid, uint256 insuranceNumber) external view returns (uint256 investmentId);\r\n    function getMinAmountProjectTokens(uint256 pid, address investor) external view returns (uint256);\r\n    function getProjectName(uint256 pid) external view returns (bytes memory);\r\n    function getProjectId(bytes calldata projectName ) external view returns (uint256);\r\n    function getPercentageFloatContainer(uint256 pid) external view returns (uint256);\r\n    function getPolicyEndDate(uint256 pid) external view returns (uint256);\r\n    function getPolicyBase(uint256 pid) external view returns (uint256);\r\n    function getRefundStatePeriod(uint256 pid) external view returns (uint256);\r\n    function getFreezeStatePeriod(uint256 pid) external view returns (uint256);\r\n    function getVoteEnd(uint256 pid) external view returns (uint256);\r\n    function getIsInvestorsVoteFailed(uint256 pid) external view returns(bool);\r\n    function getReturnedRefundTokens(uint256 pid) external view returns (uint256);\r\n    function getIsRefundInProgress(uint256 pid) external view returns(bool);\r\n    function getIsBasePolicyExpired(uint256 pid) external view returns(bool);\r\n    function getProjectTokenContract(uint256 pid) external view returns (address);\r\n    function getNumberOfInvestmentToProject(uint256 pid, uint256 insId) external view returns (uint256);\r\n    function getInvestmentId(uint256 pid, address investor) external view returns (uint256 insId);\r\n    function getHighestTokenPrice(uint256 pid) external view returns (uint256);\r\n    function getProjectCurrentState(uint256 pid) external view returns (uint8);\r\n    function getOwnerPercentageFloatContainer(uint256 pid) external view returns (uint256);\r\n    function getIsDisputed(uint256 pid) external view returns (bool);\r\n    function getRefundControllerOfProject(uint256 pid) external view returns (address payable);\r\n    function getDisputeControllerOfProject(uint256 pid) external view returns (address payable);\r\n    function getUtilityControllerOfProject(uint256 pid) external view returns (address payable);\r\n    function getProjectControllerOfProject(uint256 pid) external view returns (address payable);\r\n    function getTokenLitter(uint256 pid, uint256 ins) external view returns (address);\r\n    function getActiveProjects() external view returns (uint256);\r\n    function getOverallSecuredFunds() external view returns (uint256);\r\n    function getAddressOfInvestorInProject(uint256 pid, uint256 investorIndex) external view returns(address);\r\n    function getBasePolicyExpired(uint256 pid) external view returns (bool);\r\n    function getEligibleForInternalVote(uint256 pid) external  view  returns (uint256 eligibleInvestors, uint256 validSecuredEther);\r\n    function getNumberOfCoveredProjects() external view returns (uint256);\r\n    function getOwnerBaseFundsRepaid(uint256 pid, address owner) external view returns (bool);\r\n    function isRefundStateForced(uint256 pid) external view returns (uint8);\r\n}\r\n\r\n\r\ninterface AffiliateEscrow {\r\n    function getAffiliatePayment(address affiliate) external view returns (uint256);\r\n}\r\n\r\n\r\ninterface UtilityInterface {\r\n    function verifyEligibility(uint256 projectId) external view returns (uint256[8] memory invalidInsuranceI);\r\n    function getBadVoters(uint256 pid) external view returns(uint[8] memory invalidInsuranceId);\r\n}\r\n\r\n\r\ncontract RefundableTokenOfferingView {\r\n    PrimaryStorage    private masterStorage;\r\n    SecondaryStorage  private secondStorage;\r\n    AffiliateEscrow   private affiliate;\r\n    UtilityInterface  private utility;\r\n    constructor(\r\n        address primaryStorageAddr,\r\n        address secondaryStorageAddr,\r\n        address affiliateEscrowAddr,\r\n        address utilityControllerAddr\r\n    )\r\n        public\r\n    {\r\n        masterStorage = PrimaryStorage(primaryStorageAddr);\r\n        secondStorage = SecondaryStorage(secondaryStorageAddr);\r\n        affiliate     = AffiliateEscrow(affiliateEscrowAddr);\r\n        utility       = UtilityInterface(utilityControllerAddr);\r\n    }\r\n\r\n    function checkIsNetworkDeplyed() public view returns (bool) {\r\n        return masterStorage.getIsNetworkDeployed();\r\n    }\r\n\r\n    function getCurrentControllersHash() public view returns (bytes32) {\r\n        return masterStorage.getCurrentControllersHash();\r\n    }\r\n\r\n    function getProjectController() public view returns (address payable) {\r\n        return masterStorage.getProjectController();\r\n    }\r\n\r\n    function getProjectControllerOfProject(uint256 pid) public view returns (address payable) {\r\n        return secondStorage.getProjectControllerOfProject(pid);\r\n    }\r\n\r\n    function getRefundController() public view returns (address payable) {\r\n        return masterStorage.getRefundController();\r\n    }\r\n\r\n    function getRefundControllerOfProject(uint256 pid) public view returns (address payable) {\r\n        return secondStorage.getRefundControllerOfProject(pid);\r\n    }\r\n\r\n    function getDisputeController() public view returns (address payable) {\r\n        return masterStorage.getDisputeController();\r\n    }\r\n\r\n    function getDisputeControllerOfProject(uint256 pid) public view returns (address payable) {\r\n        return secondStorage.getDisputeControllerOfProject(pid);\r\n    }\r\n\r\n    function getUtilityController() public view returns (address payable) {\r\n        return masterStorage.getUtilityController();\r\n    }\r\n\r\n    function getUtilityControllerOfProject(uint256 pid) public view returns (address payable) {\r\n        return secondStorage.getUtilityControllerOfProject(pid);\r\n    }\r\n\r\n    function getRefundEtherTokenContract() public view returns (address payable) {\r\n        return masterStorage.getRefundEtherTokenAddress();\r\n    }\r\n\r\n    function getAffiliateEscrow() public view returns (address payable) {\r\n        return masterStorage.getAffiliateEscrow();\r\n    }\r\n\r\n    function getRefundPool() public view returns (address payable) {\r\n        return masterStorage.getRefundPool();\r\n    }\r\n\r\n    function getPlatformEscrow() public view returns (address payable) {\r\n        return masterStorage.getModerationResources();\r\n    }\r\n\r\n    function getEventLogger() public view returns (address) {\r\n        return masterStorage.getEventLogger();\r\n    }\r\n\r\n    function getPoolHealth() public view returns (uint256) {\r\n        address payable poolAddress = masterStorage.getRefundPool();\r\n        int256 totalFunds = int256(secondStorage.getOverallSecuredFunds());\r\n        int256 poolBalance = int256(poolAddress.balance);\r\n        int256 poolLiquidity = 100;\r\n        // Check if the contract is not just deployed - if there is at least 5 covered projects\r\n        if (secondStorage.getActiveProjects() > 4) {\r\n            int256 mxhlth = totalFunds * 125 / 1000;\r\n            if (poolBalance >= mxhlth) {\r\n                return uint256(poolLiquidity);\r\n            } else {\r\n                int256 poolHealth = poolLiquidity - (1000 * (mxhlth - poolBalance) / totalFunds);\r\n                if (poolHealth > 0) {\r\n                    return uint256(poolHealth);\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n        } else {\r\n            return uint256(poolLiquidity);\r\n        }\r\n    }\r\n\r\n    function getMainContract() public view returns (address payable) {\r\n        return masterStorage.getMainContract();\r\n    }\r\n\r\n    function getNumberOfCoveredProjects() public view returns (uint256) {\r\n        return secondStorage.getNumberOfCoveredProjects();\r\n    }\r\n\r\n    function getSecondaryStorage() public view returns (address) {\r\n        return masterStorage.getSecondaryStorage();\r\n    }\r\n\r\n    function getPrimaryStorage() public view returns (address) {\r\n        return masterStorage.getPrimaryStorage();\r\n    }\r\n\r\n    function getdAppState(bytes32 ctrl)\r\n        public\r\n        view\r\n        returns (\r\n            address payable projectCtrl,\r\n            address payable refundCtrl,\r\n            address payable disputeCtrl,\r\n            address payable utilityCtrl\r\n        )\r\n    {\r\n        return masterStorage.getdAppState(ctrl);\r\n    }\r\n\r\n    function getProjectControllerByHash(bytes32 controllerHash) public view returns (address payable) {\r\n        return masterStorage.oldProjectCtrl(controllerHash);\r\n    }\r\n\r\n    function getRefundControllerByHash(bytes32 controllerHash) public view returns (address payable) {\r\n        return masterStorage.oldRefundCtrl(controllerHash);\r\n    }\r\n\r\n    function getDisputeControllerByHash(bytes32 controllerHash) public view returns (address payable) {\r\n        return masterStorage.oldDisputeCtrl(controllerHash);\r\n    }\r\n\r\n    function getUtilityControllerByHash(bytes32 controllerHash) public view returns (address payable) {\r\n        return masterStorage.oldUtilityCtrl(controllerHash);\r\n    }\r\n\r\n    function getNumberOfInvestors() public view returns (uint256) {\r\n        return masterStorage.getNumberOfInvestors();\r\n    }\r\n\r\n    function getNumberOfInvestments() public view returns (uint256) {\r\n        return masterStorage.getNumberOfInvestments();\r\n    }\r\n\r\n    function getActiveProjects() public view returns (uint256) {\r\n        return secondStorage.getActiveProjects();\r\n    }\r\n\r\n    function getOverallAmountOfSecuredFunds() public view returns (uint256) {\r\n        return secondStorage.getOverallSecuredFunds();\r\n    }\r\n\r\n    function getMinInvestorContribution() public view returns (uint256) {\r\n        return masterStorage.getMinInvestorContribution();\r\n    }\r\n\r\n    function getMaxInvestorContribution() public view returns (uint256) {\r\n        return masterStorage.getMaxInvestorContribution();\r\n    }\r\n\r\n    function getMinProtectionPercentage() external view returns (uint256) {\r\n        return masterStorage.getMinProtectionPercentage();\r\n    }\r\n\r\n    function getMaxProtectionPercentage() external view returns (uint256) {\r\n        return masterStorage.getMaxProtectionPercentage();\r\n    }\r\n\r\n    function getMinOwnerContribution() external view returns (uint256) {\r\n        return masterStorage.getMinOwnerContribution();\r\n    }\r\n\r\n    function getDefaultPolicyDuration() external view returns (uint256) {\r\n        return masterStorage.getDefaultPolicyDuration();\r\n    }\r\n\r\n    function getDefaultBasePolicyDuration() external view returns (uint256) {\r\n        return masterStorage.getDefaultBasePolicyDuration();\r\n    }\r\n\r\n    function getDefaultFee() external view returns (uint256) {\r\n        return masterStorage.getRegularContributionPercentage();\r\n    }\r\n\r\n    function getProjectCurrentState(uint256 pid) public view returns (uint8) {\r\n        return secondStorage.getProjectCurrentState(pid);\r\n    }\r\n\r\n    function getProjectName(uint256 pid) public view returns (bytes memory) {\r\n        return secondStorage.getProjectName(pid);\r\n    }\r\n\r\n    function getProjectId(bytes memory projectName) public view returns (uint256) {\r\n        return secondStorage.getProjectId(projectName);\r\n    }\r\n\r\n    function getAmountOfFundsContributed(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getAmountOfFundsContributed(pid);\r\n    }\r\n\r\n    function getOwnerContribution(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getOwnerContribution(pid);\r\n    }\r\n\r\n    function getOwnerFunds(uint256 pid, address owner) public view returns (uint256) {\r\n        return secondStorage.getOwnerFunds(pid, owner);\r\n    }\r\n\r\n    function getProtectionRate(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getProtectionRate(pid);\r\n    }\r\n\r\n    function getPercentageFloatContainer(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getPercentageFloatContainer(pid);\r\n    }\r\n\r\n    function getOwnerPercentageFloatContainer(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getOwnerPercentageFloatContainer(pid);\r\n    }\r\n\r\n    function getTotalAmountSecuredEther(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getTotalAmountSecuredEther(pid);\r\n    }\r\n\r\n    function getReturnedRefundTokens(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getReturnedRefundTokens(pid);\r\n    }\r\n\r\n    function getNumberOfProjectInvestments(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getNumberOfProjectInvestments(pid);\r\n    }\r\n\r\n    function getPolicyBase(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getPolicyBase(pid);\r\n    }\r\n\r\n    function getBasePolicyExpired(uint256 pid) public view returns (bool) {\r\n        return secondStorage.getBasePolicyExpired(pid);\r\n    }\r\n\r\n    function getOwnerBaseFundsRepaid(uint256 pid, address owner) public view returns (bool) {\r\n        return secondStorage.getOwnerBaseFundsRepaid(pid, owner);\r\n    }\r\n\r\n    function getPolicyEndDate(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getPolicyEndDate(pid);\r\n    }\r\n\r\n    function getNumberOfInvestmentToProject(uint256 pid, uint256 insId)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return secondStorage.getNumberOfInvestmentToProject(pid, insId);\r\n    }\r\n\r\n    function getRefundStatePeriod(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getRefundStatePeriod(pid);\r\n    }\r\n\r\n    function getFreezeStatePeriod(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getFreezeStatePeriod(pid);\r\n    }\r\n\r\n    function getVoteEnd(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getVoteEnd(pid);\r\n    }\r\n\r\n    function isInvestorVoteFailed(uint256 pid) public view returns (bool) {\r\n        return secondStorage.getIsInvestorsVoteFailed(pid);\r\n    }\r\n\r\n    function isRefundInProgress(uint256 pid) public view returns (bool) {\r\n        return secondStorage.getIsRefundInProgress(pid);\r\n    }\r\n\r\n    function getCrowdsaleEndDate(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getCrowdsaleEndTime(pid);\r\n    }\r\n\r\n    function getHighestTokenPrice(uint256 pid) public view returns (uint256) {\r\n        return secondStorage.getHighestTokenPrice(pid);\r\n    }\r\n\r\n    function getTokenDecimals(uint256 pid) public view returns (uint8) {\r\n        return secondStorage.getTokenDecimals(pid);\r\n    }\r\n\r\n    function getProjectTokenContract(uint256 pid) public view returns (address) {\r\n        return address(secondStorage.getProjectTokenContract(pid));\r\n    }\r\n\r\n    function isRefundStateForced(uint256 pid) external view returns (bool) {\r\n        return secondStorage.isRefundStateForced(pid) == 1;\r\n    }\r\n\r\n    function isForcedRefundStateOverturned(uint256 pid) external view returns (bool) {\r\n        return secondStorage.isRefundStateForced(pid) == 2;\r\n    }\r\n\r\n    function getProjectControllerHash(uint256 pid) external view returns (bytes32) {\r\n        return secondStorage.getProjectControllerState(pid);\r\n    }\r\n\r\n    function getDisputeVotePeriod(uint256 disputeId) public view returns (uint256) {\r\n        return masterStorage.getDisputeVotePeriod(disputeId);\r\n    }\r\n\r\n    function getDisputeCreator(uint256 disputeId) public view returns (address payable) {\r\n        return masterStorage.getDisputeCreator(disputeId);\r\n    }\r\n\r\n    function getResultCountPeriod(uint256 disputeId) public view returns (uint256) {\r\n        return masterStorage.getResultCountPeriod(disputeId);\r\n    }\r\n\r\n    function getDisputeLotteryPrize(uint256 disputeId) public view returns (uint256) {\r\n        return masterStorage.getDisputeLotteryPrize(disputeId);\r\n    }\r\n\r\n    function getDisputeVoteCollateral(uint256 disputeId) public view returns (uint256) {\r\n        return masterStorage.getEntryFee(disputeId);\r\n    }\r\n\r\n    function getPublicDisputeURL(uint256 disputeId) public view returns (string memory) {\r\n        return string(masterStorage.getPublicDisputeURL(disputeId));\r\n    }\r\n\r\n    function getDisputeVoter(uint256 disputeId, uint256 voterId) public view returns (address) {\r\n        return masterStorage.getDisputeVoter(disputeId, voterId);\r\n    }\r\n\r\n    function getIsDisputed(uint256 pid) public view returns (bool) {\r\n        return secondStorage.getIsDisputed(pid);\r\n    }\r\n\r\n    function getPayment(address payable user, uint256 did) public view returns (uint256) {\r\n        return masterStorage.getPayment(user, did);\r\n    }\r\n\r\n    function getNumberOfVotesForRefundState (uint256 disputeId) public view returns (uint256) {\r\n        if (block.number > masterStorage.getResultCountPeriod(disputeId)) {\r\n            return masterStorage.getNumberOfVotesForRefundState(disputeId) - 1;\r\n        }\r\n    }\r\n\r\n    function getNumberOfVotesAgainstrRefundState(uint256 disputeId) public view returns (uint256) {\r\n        if (block.number > masterStorage.getResultCountPeriod(disputeId)) {\r\n            return masterStorage.getNumberOfVotesAgainstRefundState(disputeId) - 1;\r\n        }\r\n    }\r\n\r\n    function getDisputeNumberOfVoters(uint256 disputeId) public view returns (uint256) {\r\n        return masterStorage.getDisputeNumberOfVoters(disputeId);\r\n    }\r\n\r\n    function getHiddenVote(uint256 disputeId, address voter) public view returns (bytes32) {\r\n        return masterStorage.getHiddenVote(disputeId, voter);\r\n    }\r\n\r\n    function isDisputeVoteSent(uint256 disputeId, address voter) public view returns (bool) {\r\n        return (masterStorage.getHiddenVote(disputeId, voter) != bytes32(0));\r\n    }\r\n\r\n    function getRevealedVote(uint256 disputeId, address voter) public view returns (bool) {\r\n        return masterStorage.getRevealedVote(disputeId, voter);\r\n    }\r\n\r\n    function isVoteRevealed(uint256 disputeId, address voter) public view returns (bool) {\r\n        return masterStorage.isVoteRevealed(disputeId, voter);\r\n    }\r\n\r\n    function getInsuranceControllerState(uint256 insId) public view returns (bytes32) {\r\n        return masterStorage.getInsuranceControllerState(insId);\r\n    }\r\n\r\n    function getInvestmentId(uint256 pid, address investor) public view returns (uint256) {\r\n        return secondStorage.getInvestmentId(pid, investor);\r\n    }\r\n\r\n    function getPoolContribution(uint256 insId) public view returns (uint256) {\r\n        return masterStorage.getPoolContribution(insId);\r\n    }\r\n\r\n    function getInsuranceRate(uint256 insId) public view returns (uint256) {\r\n        return masterStorage.getInsuranceRate(insId);\r\n    }\r\n\r\n    function isInsuranceCanceled(uint256 insId) public view returns (bool) {\r\n        return masterStorage.isCanceled(insId);\r\n    }\r\n    function getProjectOfInvestment(uint256 insId) public view returns (uint256) {\r\n        return masterStorage.getProjectOfInvestment(insId);\r\n    }\r\n\r\n    function getInvestmentToProject(\r\n        uint256 pid,\r\n        uint256 insuranceNumber\r\n    )\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return secondStorage.getInvestmentToProject(pid, insuranceNumber);\r\n    }\r\n\r\n    function getInvestorToProject(uint256 pid, uint256 investorNumber) public view returns (address) {\r\n        return secondStorage.getAddressOfInvestorInProject(pid, investorNumber);\r\n    }\r\n\r\n    function getEtherSecured(uint256 insId) public view returns (uint256) {\r\n        return masterStorage.getEtherSecured(insId);\r\n    }\r\n\r\n    function getInsuranceOwner(uint256 insId) public view returns (address) {\r\n        return masterStorage.getInsuranceOwner(insId);\r\n    }\r\n\r\n    function getTimeOfTheRequest(uint256 insId) public view returns (uint256) {\r\n        return masterStorage.getTimeOfTheRequest(insId);\r\n    }\r\n\r\n    function getVotedAfterVoteFailure(uint256 insId) public view returns (bool) {\r\n        return masterStorage.getVotedAfterFailedVoting(insId);\r\n    }\r\n\r\n    function getVotedForARefund(uint256 insId) public view returns (bool) {\r\n        return masterStorage.getVotedForARefund(insId);\r\n    }\r\n\r\n    function getIsRefunded(uint256 insId) public view returns (bool) {\r\n        return masterStorage.getIsRefunded(insId);\r\n    }\r\n\r\n    function getTokenLitter(uint256 pid, uint256 insId) public view returns (address) {\r\n        return secondStorage.getTokenLitter(pid, insId);\r\n    }\r\n\r\n    function getInvestorAddressByInsurance(uint256 insId) public view returns (address) {\r\n        return masterStorage.getInvestorAddressByInsurance(insId);\r\n    }\r\n\r\n    function getInvestorAddressByID(uint256 investorId) public view returns (address) {\r\n        return masterStorage.getInvestorAddressById(investorId);\r\n    }\r\n\r\n    function getInvestorId(address investor) public view returns (uint256) {\r\n        return masterStorage.getInvestorId(investor);\r\n    }\r\n\r\n    function getReferrer(address investor) public view returns (address) {\r\n        return masterStorage.getReferrer(investor);\r\n    }\r\n\r\n    function isInvestor(address who) public view returns (bool) {\r\n        return masterStorage.isInvestor(who);\r\n    }\r\n\r\n    function isPlatformModerator(address who) public view returns (bool) {\r\n        return masterStorage.isPlatformModerator(who);\r\n    }\r\n\r\n    function isCommunityModerator(address who) public view returns (bool) {\r\n        return masterStorage.isCommunityModerator(who);\r\n    }\r\n\r\n    function isProjectOwner(address who) public view returns (bool) {\r\n        return masterStorage.isProjectOwner(who);\r\n    }\r\n\r\n    function isArbiter(address who) public view returns (bool) {\r\n        return masterStorage.isArbiter(who);\r\n    }\r\n\r\n    function getAmountAvailableForWithdraw(address investor, uint256 pid) public view returns (uint256) {\r\n        return masterStorage.getAmountAvailableForWithdraw(investor, pid);\r\n    }\r\n\r\n    function getAffiliateEarnings(address referrer) public view returns (uint256) {\r\n        return affiliate.getAffiliatePayment(referrer);\r\n    }\r\n\r\n    function getMinAmountProjectTokens(uint256 pid, address investor) public view returns (uint256) {\r\n        return secondStorage.getMinAmountProjectTokens(pid, investor);\r\n    }\r\n\r\n    function isAlreadyProtected(uint256 pid, address investor) public view returns (bool) {\r\n        return secondStorage.getAlreadyProtected(pid, investor);\r\n    }\r\n\r\n    function getValidationToken(address verifiedUser) public view returns (uint256) {\r\n        return masterStorage.getValidationToken(verifiedUser);\r\n    }\r\n\r\n    function verifyInsurances(uint256 projectId)\r\n        public\r\n        view\r\n        returns (uint256[8] memory invalidInsurance)\r\n    {\r\n        return utility.verifyEligibility(projectId);\r\n    }\r\n\r\n    function encryptPublicVote(bool isTheProjectFailed, uint64 pin)\r\n        external\r\n        pure\r\n        returns (bytes32 encryptedVote)\r\n    {\r\n        return keccak256(abi.encodePacked(pin, isTheProjectFailed));\r\n    }\r\n\r\n    function getEligibleInvestorsAndSecuredAmount(uint256 pid)\r\n        public\r\n        view\r\n        returns (uint256 eligibleInvestors, uint256 validSecuredEther)\r\n    {\r\n        return secondStorage.getEligibleForInternalVote(pid);\r\n    }\r\n\r\n    function getBadVoters(uint256 pid)\r\n        public\r\n        view\r\n        returns (uint256[8] memory invalidInsuranceIdx)\r\n    {\r\n        return utility.getBadVoters(pid);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"disputeId\",\"type\":\"uint256\"},{\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getHiddenVote\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getNumberOfProjectInvestments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"insId\",\"type\":\"uint256\"}],\"name\":\"isInsuranceCanceled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"getDisputeCreator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPoolHealth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSecondaryStorage\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"insId\",\"type\":\"uint256\"}],\"name\":\"getProjectOfInvestment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getPolicyBase\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"verifiedUser\",\"type\":\"address\"}],\"name\":\"getValidationToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"insId\",\"type\":\"uint256\"}],\"name\":\"getInvestorAddressByInsurance\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRefundEtherTokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"},{\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"getInvestmentId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDefaultFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getTotalAmountSecuredEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getActiveProjects\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRefundController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"},{\"name\":\"insId\",\"type\":\"uint256\"}],\"name\":\"getTokenLitter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getHighestTokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getVoteEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"getResultCountPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"isRefundStateForced\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getUtilityControllerOfProject\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getBasePolicyExpired\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"},{\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"isAlreadyProtected\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"getReferrer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEventLogger\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMaxInvestorContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getCrowdsaleEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"getInvestorId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"isForcedRefundStateOverturned\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getDisputeControllerOfProject\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"isTheProjectFailed\",\"type\":\"bool\"},{\"name\":\"pin\",\"type\":\"uint64\"}],\"name\":\"encryptPublicVote\",\"outputs\":[{\"name\":\"encryptedVote\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"controllerHash\",\"type\":\"bytes32\"}],\"name\":\"getRefundControllerByHash\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"getNumberOfVotesForRefundState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ctrl\",\"type\":\"bytes32\"}],\"name\":\"getdAppState\",\"outputs\":[{\"name\":\"projectCtrl\",\"type\":\"address\"},{\"name\":\"refundCtrl\",\"type\":\"address\"},{\"name\":\"disputeCtrl\",\"type\":\"address\"},{\"name\":\"utilityCtrl\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getOwnerContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getFreezeStatePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"isRefundInProgress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getRefundControllerOfProject\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentControllersHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isPlatformModerator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"controllerHash\",\"type\":\"bytes32\"}],\"name\":\"getUtilityControllerByHash\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getIsDisputed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getPolicyEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getReturnedRefundTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDisputeController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getAmountOfFundsContributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMaxProtectionPercentage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"getDisputeVoteCollateral\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"disputeId\",\"type\":\"uint256\"},{\"name\":\"voterId\",\"type\":\"uint256\"}],\"name\":\"getDisputeVoter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkIsNetworkDeplyed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"disputeId\",\"type\":\"uint256\"},{\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"isVoteRevealed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"getAffiliateEarnings\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getRefundStatePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"getDisputeLotteryPrize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getBadVoters\",\"outputs\":[{\"name\":\"invalidInsuranceIdx\",\"type\":\"uint256[8]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getOwnerPercentageFloatContainer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMainContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"controllerHash\",\"type\":\"bytes32\"}],\"name\":\"getProjectControllerByHash\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"insId\",\"type\":\"uint256\"}],\"name\":\"getInsuranceOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getOwnerFunds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getOwnerBaseFundsRepaid\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"},{\"name\":\"insId\",\"type\":\"uint256\"}],\"name\":\"getNumberOfInvestmentToProject\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"insId\",\"type\":\"uint256\"}],\"name\":\"getInsuranceControllerState\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"insId\",\"type\":\"uint256\"}],\"name\":\"getTimeOfTheRequest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"did\",\"type\":\"uint256\"}],\"name\":\"getPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isCommunityModerator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getProjectTokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"},{\"name\":\"insuranceNumber\",\"type\":\"uint256\"}],\"name\":\"getInvestmentToProject\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"verifyInsurances\",\"outputs\":[{\"name\":\"invalidInsurance\",\"type\":\"uint256[8]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"insId\",\"type\":\"uint256\"}],\"name\":\"getIsRefunded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getProjectControllerOfProject\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getTokenDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrimaryStorage\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMinInvestorContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getProjectControllerHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPlatformEscrow\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"investor\",\"type\":\"address\"},{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getAmountAvailableForWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"insId\",\"type\":\"uint256\"}],\"name\":\"getVotedAfterVoteFailure\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumberOfInvestments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"insId\",\"type\":\"uint256\"}],\"name\":\"getVotedForARefund\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getProjectCurrentState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"getNumberOfVotesAgainstrRefundState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDefaultBasePolicyDuration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUtilityController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"projectName\",\"type\":\"bytes\"}],\"name\":\"getProjectId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"getPublicDisputeURL\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getProtectionRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getPercentageFloatContainer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"insId\",\"type\":\"uint256\"}],\"name\":\"getEtherSecured\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isInvestor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProjectController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isProjectOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getEligibleInvestorsAndSecuredAmount\",\"outputs\":[{\"name\":\"eligibleInvestors\",\"type\":\"uint256\"},{\"name\":\"validSecuredEther\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"isInvestorVoteFailed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumberOfCoveredProjects\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"insId\",\"type\":\"uint256\"}],\"name\":\"getInsuranceRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumberOfInvestors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"getDisputeNumberOfVoters\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"investorId\",\"type\":\"uint256\"}],\"name\":\"getInvestorAddressByID\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"insId\",\"type\":\"uint256\"}],\"name\":\"getPoolContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"},{\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"getMinAmountProjectTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAffiliateEscrow\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMinOwnerContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDefaultPolicyDuration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"},{\"name\":\"investorNumber\",\"type\":\"uint256\"}],\"name\":\"getInvestorToProject\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getProjectName\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"getDisputeVotePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOverallAmountOfSecuredFunds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isArbiter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRefundPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"disputeId\",\"type\":\"uint256\"},{\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"isDisputeVoteSent\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMinProtectionPercentage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"disputeId\",\"type\":\"uint256\"},{\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getRevealedVote\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"controllerHash\",\"type\":\"bytes32\"}],\"name\":\"getDisputeControllerByHash\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"primaryStorageAddr\",\"type\":\"address\"},{\"name\":\"secondaryStorageAddr\",\"type\":\"address\"},{\"name\":\"affiliateEscrowAddr\",\"type\":\"address\"},{\"name\":\"utilityControllerAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"RefundableTokenOfferingView","CompilerVersion":"v0.5.7+commit.6da8b019","OptimizationUsed":"1","Runs":"500000","ConstructorArguments":"00000000000000000000000057d504f3ebcc43b8a894a7933676eb17236cc35d000000000000000000000000ac5ae06a85b710c1c68708bb04b80f2d81c00617000000000000000000000000eddbae4ba377f490b0d7331d135d147855d0f86a000000000000000000000000ce793557dcca2924de6060543d6d1899c5e88465","Library":"","SwarmSource":"bzzr://9174219ae8855afdff1910538b59a1a748705ada540fee9ff9a1d293eefbd81e"}]}