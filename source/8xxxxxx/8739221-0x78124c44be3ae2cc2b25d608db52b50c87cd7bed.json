{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    require(newOwner != address(0));\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\ninterface Token {\r\n  function transfer(address _to, uint256 _value) returns (bool);\r\n  function balanceOf(address _owner) constant returns (uint256 balance);\r\n}\r\n\r\ncontract AirDrop is Ownable {\r\n\r\n  Token token;\r\n\r\n  event TransferredToken(address indexed to, uint256 value);\r\n  event FailedTransfer(address indexed to, uint256 value);\r\n  \r\n  function sendTokens(address tokenAddr, address[] dests, uint256[] values) onlyOwner external {\r\n    uint256 i = 0;\r\n\r\n    while (i < dests.length) {\r\n        uint256 toSend = values[i] * 10**18;\r\n        sendInternally(tokenAddr, dests[i] , toSend, values[i]);\r\n        i++;\r\n    }\r\n  }\r\n\r\n  function sendTokensSingleValue(address tokenAddr, address[] dests, uint256 value) onlyOwner external {\r\n    uint256 i = 0;\r\n    uint256 toSend = value * 10**18;\r\n    \r\n    while (i < dests.length) {\r\n        sendInternally(tokenAddr, dests[i] , toSend, value);\r\n        i++;\r\n    }\r\n  }  \r\n\r\n  function sendInternally(address tokenAddr, address recipient, uint256 tokensToSend, uint256 valueToPresent) internal {\r\n    if(recipient == address(0)) return;\r\n\r\n    if(tokensAvailable(tokenAddr) >= tokensToSend) {\r\n      Token(tokenAddr).transfer(recipient, tokensToSend);\r\n      TransferredToken(recipient, valueToPresent);\r\n    } else {\r\n      FailedTransfer(recipient, valueToPresent); \r\n    }\r\n  }   \r\n\r\n  function tokensAvailable(address tokenAddr) constant returns (uint256) {\r\n    return Token(tokenAddr).balanceOf(this);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenAddr\",\"type\":\"address\"}],\"name\":\"tokensAvailable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddr\",\"type\":\"address\"},{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"sendTokensSingleValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddr\",\"type\":\"address\"},{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"sendTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferredToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FailedTransfer\",\"type\":\"event\"}]","ContractName":"AirDrop","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://eb6d613e1c3a56c73d0ab905da60fd2450da7ff9a69af955b40a32abea30a9ea"}]}