{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.22 <0.6.0;\r\n\r\ncontract BWSERC20\r\n{\r\n    string public standard = 'https://leeks.cc';\r\n    string public name=\"Bretton Woods system\"; //代币名称\r\n    string public symbol=\"BWS\"; //代币符号\r\n    uint8 public decimals = 18;  //代币单位，展示的小数点后面多少个0,和以太币一样后面是是18个0\r\n    uint256 public totalSupply=100000000 ether; //代币总量\r\n\r\n    uint256 public st_bws_pool;//币仓\r\n    uint256 public st_ready_for_listing;//准备上市　\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    mapping (address => uint32) public CredibleContract;//可信任的智能合约，主要是后期的游戏之类的\r\n    /* 在区块链上创建一个事件，用以通知客户端*/\r\n    event Transfer(address indexed from, address indexed to, uint256 value);  //转帐通知事件\r\n    event Burn(address indexed from, uint256 value);  //减去用户余额事件\r\n    \r\n    function _transfer(address _from, address _to, uint256 _value) internal;\r\n    \r\n    function transfer(address _to, uint256 _value) public ;\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    \r\n    function approve(address _spender, uint256 _value) public returns (bool success) ;\r\n    \r\n    //管理员可以解锁1400万币到指定地址\r\n    function unlock_listing(address _to) public;\r\n    //管理员指定可信的合约地址，这些地址可以进行一些敏感操作，比如从币仓取走股币发放给指定玩家\r\n    function set_CredibleContract(address tract_address) public;\r\n    \r\n    //从币仓取出指定量的bws给指定玩家\r\n    function TransferFromPool(address _to ,uint256 _value)public;\r\n}\r\n\r\ncontract BWS_ICO\r\n{\r\n    //address ad=address();\r\n    BWSERC20 public st_bws_erc = BWSERC20(0x95eBEBf79Bf59b6DeE7e7709D0F67Bae81DCA09C);//初始化该合约\r\n    uint160 private st_random;\r\n    uint32 private st_rnd_index=0;\r\n    event BackBWSNumber(address add_r,uint32 BWS,uint32 Bei);\r\n    event BSWtoETH(uint256 eth);\r\n    address payable st_admin;\r\n    //\r\n    constructor()public\r\n    {\r\n        st_admin=msg.sender;\r\n        st_random=uint160(msg.sender);\r\n    }\r\n    //随机数\r\n    function GetRandom(uint32 num)private returns(uint32)\r\n    {\r\n        require(num>0);\r\n        \r\n        uint32 [50] memory prime=[uint32(1),2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227];\r\n        uint160 random=st_random/2+uint160(msg.sender);\r\n        random/=prime[st_rnd_index];\r\n        st_random=uint160(ripemd160(abi.encode(random)));\r\n        uint32 ret=uint32(st_random % num);\r\n        if(++st_rnd_index==50)\r\n        {\r\n            st_rnd_index=0;\r\n        }\r\n        return ret;\r\n    }\r\n    //幸运大转盘\r\n    function wheel_of_fortune()public payable\r\n    {\r\n        require(msg.value>=0.02 ether,\"每次游戏必须0.02ETH\");\r\n        uint32 rnd=GetRandom(1000);//0~1000的随机数\r\n        uint32 multiple=0;\r\n        if(rnd<=50)multiple=5;\r\n        else if(rnd<=150)multiple=8;\r\n        else if(rnd<=650)multiple=10;\r\n        else if(rnd<=844)multiple=15;\r\n        else if(rnd<=944)multiple=20;\r\n        else if(rnd<=994)multiple=30;\r\n        else if(rnd<=999)multiple=50;\r\n        else if(rnd==1000)multiple=100;\r\n        \r\n        uint256 value=msg.value*10000;\r\n        require(multiple>=5 && multiple <=100,\"随机数不正常\");\r\n        value=value*multiple/10;\r\n        \r\n        uint256 this_bws=st_bws_erc.balanceOf(address(this));\r\n        assert(this_bws>=value);\r\n        \r\n        //提取一半资金\r\n        st_admin.transfer(msg.value/2);\r\n        \r\n        st_bws_erc.transfer(msg.sender,value);\r\n        \r\n        emit BackBWSNumber(msg.sender,uint32(value/10000000000000000),multiple);\r\n    }\r\n    //兑奖\r\n    function GetETHformBWS(uint256 bws)public\r\n    {\r\n        require(bws>0,\"bws为0\");\r\n        uint256 my_bws=st_bws_erc.balanceOf(msg.sender);\r\n        require(bws<=my_bws,\"BWS数量不足\");\r\n        address add=address(this);\r\n        uint256 pool_eth = add.balance;\r\n        require(pool_eth>=bws/20000,\"兑币池资金不足\");\r\n        \r\n        uint256 allowance=st_bws_erc.allowance(msg.sender,add);\r\n        require(allowance>=bws,\"本合约权限不足，请给本合约授权\");\r\n        \r\n        st_bws_erc.transferFrom(msg.sender,add,bws);\r\n        \r\n        msg.sender.transfer(bws/20000);\r\n        \r\n        emit BSWtoETH(bws/20000);\r\n    }\r\n    //销毁合约\r\n    function DeleteContract()public\r\n    {\r\n        require(msg.sender==st_admin);\r\n        st_bws_erc.transfer(st_admin,st_bws_erc.balanceOf(address(this)));\r\n          \r\n        selfdestruct(st_admin);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"bws\",\"type\":\"uint256\"}],\"name\":\"GetETHformBWS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"st_bws_erc\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"DeleteContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"wheel_of_fortune\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"add_r\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"BWS\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"Bei\",\"type\":\"uint32\"}],\"name\":\"BackBWSNumber\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"BSWtoETH\",\"type\":\"event\"}]","ContractName":"BWS_ICO","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c9b4ecc35815bf6f2abdd55ddbbe5035cf9e79f1ad551d6d68416a30e31cde4d"}]}