{"status":"1","message":"OK","result":[{"SourceCode":"{\"SRC_Latest.sol\":{\"content\":\"pragma solidity 0.4.24;\\r\\n\\r\\nimport \\\"./TokenInterface.sol\\\";\\r\\ncontract SR_Coin is TokenInterface {\\r\\n    uint256 constant private MAX_UINT256 = 2**256 - 1;\\r\\n    mapping (address =\\u003e uint256) public token_balances;\\r\\n    mapping (address =\\u003e mapping (address =\\u003e uint256)) public allowed;\\r\\n\\r\\n    string public token_name;                   \\r\\n    uint8 public decimalUnits;                \\r\\n    string public token_symbol;                 \\r\\n    address public token_owner;\\r\\n    uint256 public token_price;\\r\\n    uint256 public token_current_batch_sold;    \\r\\n\\r\\n    function SR_Coin(\\r\\n        uint256 _initialAmount,\\r\\n        string _tokenName,\\r\\n        uint8 _decimalUnits,\\r\\n        string _tokenSymbol,\\r\\n        uint256 _price,\\r\\n        uint256 _batch_sold\\r\\n    ) public {\\r\\n        token_balances[msg.sender] = _initialAmount;               \\r\\n        totalSupply = _initialAmount;                        \\r\\n        token_name = _tokenName;                                   \\r\\n        decimalUnits = _decimalUnits;                            \\r\\n        token_symbol = _tokenSymbol;                               \\r\\n        token_owner = msg.sender;   \\r\\n        token_price = _price;\\r\\n        token_current_batch_sold = _batch_sold;\\r\\n    }\\r\\n\\r\\n    function transfer(address _to, uint256 _value) public returns (bool success) {\\r\\n        require(token_balances[msg.sender] \\u003e= _value);\\r\\n        token_balances[msg.sender] -= _value;\\r\\n        token_balances[_to] += _value;\\r\\n        emit Transfer(msg.sender, _to, _value); //solhint-disable-line indent, no-unused-vars\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\\r\\n        uint256 allowance = allowed[token_owner][_from];\\r\\n        require(token_balances[_from] \\u003e= _value \\u0026\\u0026 allowance \\u003e= _value);\\r\\n        token_balances[_to] += _value;\\r\\n        token_balances[_from] -= _value;\\r\\n        allowed[token_owner][_from] -= _value;\\r\\n        emit Transfer(_from, _to, _value); //solhint-disable-line indent, no-unused-vars\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address _owner) public view returns (uint256 balance) {\\r\\n        return token_balances[_owner];\\r\\n    }\\r\\n    \\r\\n    function get_price() public constant returns (uint256 result){\\r\\n        return token_price;\\r\\n    }\\r\\n    \\r\\n    function tokenBalanceOf(address _owner) public constant returns (uint256 balance) {\\r\\n        return token_balances[_owner];\\r\\n    }\\r\\n\\r\\n    function approve(address _spender, uint256 _value) public returns (bool success) {\\r\\n        allowed[msg.sender][_spender] = _value;\\r\\n        emit Approval(msg.sender, _spender, _value); //solhint-disable-line indent, no-unused-vars\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\\r\\n        return allowed[_owner][_spender];\\r\\n    }\\r\\n    \\r\\n}\"},\"TokenInterface.sol\":{\"content\":\"pragma solidity 0.4.24;\\r\\n\\r\\n\\r\\ncontract TokenInterface {\\r\\n    /* This is a slight change to the ERC20 base standard.\\r\\n    function totalSupply() constant returns (uint256 supply);\\r\\n    is replaced with:\\r\\n    uint256 public totalSupply;\\r\\n    This automatically creates a getter function for the totalSupply.\\r\\n    This is moved to the base contract since public getter functions are not\\r\\n    currently recognised as an implementation of the matching abstract\\r\\n    function by the compiler.\\r\\n    */\\r\\n    /// total amount of tokens\\r\\n    uint256 public totalSupply;\\r\\n\\r\\n    /// @param _owner The address from which the balance will be retrieved\\r\\n    /// @return The balance\\r\\n    function balanceOf(address _owner) public view returns (uint256 balance);\\r\\n\\r\\n    /// @notice send `_value` token to `_to` from `msg.sender`\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _value The amount of token to be transferred\\r\\n    /// @return Whether the transfer was successful or not\\r\\n    function transfer(address _to, uint256 _value) public returns (bool success);\\r\\n\\r\\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\\r\\n    /// @param _from The address of the sender\\r\\n    /// @param _to The address of the recipient\\r\\n    /// @param _value The amount of token to be transferred\\r\\n    /// @return Whether the transfer was successful or not\\r\\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\\r\\n\\r\\n    /// @notice `msg.sender` approves `_spender` to spend `_value` tokens\\r\\n    /// @param _spender The address of the account able to transfer the tokens\\r\\n    /// @param _value The amount of tokens to be approved for transfer\\r\\n    /// @return Whether the approval was successful or not\\r\\n    function approve(address _spender, uint256 _value) public returns (bool success);\\r\\n\\r\\n    /// @param _owner The address of the account owning tokens\\r\\n    /// @param _spender The address of the account able to transfer the tokens\\r\\n    /// @return Amount of remaining tokens allowed to spent\\r\\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\\r\\n\\r\\n    // solhint-disable-next-line no-simple-event-func-name\\r\\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\\r\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\\r\\n}\"}}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get_price\",\"outputs\":[{\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimalUnits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_current_batch_sold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"token_balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokenBalanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialAmount\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_batch_sold\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"SR_Coin","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000001d700d41a001a00000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000136eef9eebe0000000000000000000000000000000000000000000000000001d700d41a001a000000000000000000000000000000000000000000000000000000000000000000753522d436f696e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000453522d4300000000000000000000000000000000000000000000000000000000","Library":"","LicenseType":"None","SwarmSource":"bzzr://ff338921841bdfbabbde284b0ca2f8014d4c160a0c4943be9bcd5aea7c386678"}]}