{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.21 <0.6.0;\r\n\r\ncontract AlumniStoreContract {\r\n    constructor() public { owner = msg.sender; }\r\n    address payable owner;\r\n\r\n    modifier onlyOwner {\r\n        require(\r\n            msg.sender == owner,\r\n            \"Only owner can call this function.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    struct Alumni {\r\n        address payable _address;\r\n        bool _exists;\r\n    }\r\n\r\n    mapping(bytes32 => Alumni) alumni;\r\n\r\n    function addStudent(bytes32 _blockchainCertificateHash, address payable _address) public onlyOwner returns (bool) {\r\n        alumni[_blockchainCertificateHash]._address = _address;\r\n        alumni[_blockchainCertificateHash]._exists = true;\r\n        return true;\r\n    }\r\n\r\n    function getAlumniAddress(bytes32 _blockchainCertificateHash) public view returns (address payable _address) {\r\n        return alumni[_blockchainCertificateHash]._address;\r\n    }\r\n\r\n    function removeCertificate(bytes32 _blockchainCertificateHash) public onlyOwner returns (bool) {\r\n       delete(alumni[_blockchainCertificateHash]);\r\n       return true;\r\n    }\r\n\r\n    function changeCertificateAddress(bytes32 _blockchainCertificateHash, address payable _newAddress) public onlyOwner returns (bool) {\r\n        if (alumni[_blockchainCertificateHash]._exists) {\r\n            alumni[_blockchainCertificateHash]._address = _newAddress;\r\n            return true;\r\n        } else return false;\r\n    }\r\n\r\n    function selfDestruct() public onlyOwner {\r\n        selfdestruct(owner);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_blockchainCertificateHash\",\"type\":\"bytes32\"}],\"name\":\"removeCertificate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"selfDestruct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blockchainCertificateHash\",\"type\":\"bytes32\"},{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"changeCertificateAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_blockchainCertificateHash\",\"type\":\"bytes32\"}],\"name\":\"getAlumniAddress\",\"outputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blockchainCertificateHash\",\"type\":\"bytes32\"},{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addStudent\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"AlumniStoreContract","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://9e1eabf8cb1982eab8c6df39d38593c269f1b1749f7e2e949369395b7b5c2c1f"}]}