{"status":"1","message":"OK","result":[{"SourceCode":"/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//:                                                                                                                                                        ://\r\n//:                              Pylon Token ERC20                                                                                          ://\r\n//:                          https://pylon-network.org                                                                                     ://\r\n//:                                                                                                                                                        ://\r\n//:                                                                                                                                                        ://\r\n//: This contract is just a way to complete the ERC20 functions for the                                            ://\r\n//: original Pylon Token (Smart Contract 0x7703C35CfFdC5CDa8D27aa3df2F9ba6964544b6e)     ://\r\n//:                                                                                                                                                        ://\r\n//: Now Pylon_ERC20 takes the ownership of the original Pylon Token contract.                             ://\r\n//: This means that onlyOwner functions of the original Pylon Token contract,                                 ://\r\n//: (mint, burn, frezze, transferOwner) will not be possible to execute anymore.                               ://\r\n//:                                                                                                                                                        ://\r\n//: All this guarantees that no one can take control of the Pylon Tokens.                                          ://\r\n//:                                                                                                                                                        ://\r\n//:                                                                                                                                                        ://\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\npragma solidity ^0.5.11;\r\n\r\n\r\n//Interface to functions of the original Pylon Token smart contract. \r\n\r\ncontract PylonToken {\r\n\r\n    function balanceOf(address _owner) external pure returns (uint256 balance);\r\n\r\n    function burnFrom(address _from, uint256 _value) external returns (bool success);\r\n\r\n    function mintToken(address _to, uint256 _value) external;\r\n\r\n}\r\n\r\n\r\n\r\ncontract Pylon_ERC20 {\r\n\r\n\r\n    string public name = \"PYLNT\";               // Extended name of this contract\r\n    string public symbol = \"PYLNT\";             // Symbol of the Pylon Token\r\n    uint256 public decimals = 18;               // The decimals to consider\r\n    uint256 public totalSupply= 633858311346493889668246;  // TotalSupply of Pylon Token\r\n\r\n    PylonToken PLNTToken;  //Pointer to the original Pylon Token Contract \r\n\r\n    mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n    \r\n    // addrPYLNT is the address of the original Pylon Token Contract 0x7703C35CfFdC5CDa8D27aa3df2F9ba6964544b6e\r\n    constructor(address addrPYLNT) public {\r\n        \r\n        PLNTToken = PylonToken(addrPYLNT);      \r\n    }\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    \r\n    function balanceOf(address _owner) public view returns (uint256) {\r\n        \r\n        return PLNTToken.balanceOf(address(_owner));\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        \r\n        allowed[msg.sender][msg.sender] += _value;\r\n        return transferFrom(msg.sender, _to, _value);\r\n    }\r\n\r\n    // The original Pylon Token contract lacks the transferFrom function, which is mandatory for the ERC20 standar.\r\n    // Below it is implemented by using the burnFrom & mintToken functions from the original contract.\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool){\r\n        \r\n        require(_value <= allowed[_from][msg.sender]);\r\n        PLNTToken.burnFrom(_from, _value);\r\n        PLNTToken.mintToken(_to, _value);\r\n\r\n        allowed[_from][msg.sender] -= _value;\r\n\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        \r\n        allowed[msg.sender][_spender] = _value;\r\n        \r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public view returns (uint256) {\r\n        \r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    \r\n    function approveAndCall(address _spender, uint256 _value, bytes calldata _extraData) external returns (bool success) {\r\n        \r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        \r\n        if (approve(_spender, _value)) {\r\n            \r\n            spender.receiveApproval(msg.sender, _value, address(this), _extraData);\r\n            return true;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\ninterface tokenRecipient {\r\n    \r\n    function receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData) external;\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addrPYLNT\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Pylon_ERC20","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000007703c35cffdc5cda8d27aa3df2f9ba6964544b6e","Library":"","LicenseType":"None","SwarmSource":"bzzr://cc84e0b2862356ad07db39c30cde146f7d605f2155f008e0cce6105824aa34be"}]}