{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.11;\r\n\r\ncontract Ownable {\r\n    function acceptOwnership() public;\r\n}\r\n\r\n/* This contract has the sole function of accepting the ownership of a contract and has no other method of making use of it, actually making the property burned and thus making it a trustless contract. */\r\n\r\ncontract Burn_Ownership {\r\n    function burnOwnership(address _contract) public {\r\n        Ownable(_contract).acceptOwnership();\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"burnOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Burn_Ownership","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://273a09f7cd10bf22eb5ce6c5aa829504b814e3c70e18ffecfc2d0031bd5cac0d"}]}