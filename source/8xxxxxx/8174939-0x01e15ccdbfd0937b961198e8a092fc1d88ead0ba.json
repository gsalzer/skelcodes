{"status":"1","message":"OK","result":[{"SourceCode":"// pragma solidity ^0.5.0;\r\n\r\ncontract Vulnerable {\r\n    address public owner;\r\n    bool public claimed;\r\n    \r\n    constructor() public payable {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function() external payable {}\r\n\r\n    function claimOwnership() public payable {\r\n        require(msg.value >= 0.1 ether);\r\n        \r\n        if (claimed == false) {\r\n            owner = msg.sender;\r\n            claimed = true;\r\n        }\r\n    }\r\n    \r\n    function retrieve() public {\r\n        require(msg.sender == owner);\r\n        \r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"claimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Vulnerable","CompilerVersion":"v0.5.1+commit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a69767eb89906ded33e243c1098c27d66acd5d52f15c23c49e1622840474379f"}]}