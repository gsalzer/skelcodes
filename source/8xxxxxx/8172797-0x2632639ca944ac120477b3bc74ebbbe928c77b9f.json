{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n\r\n\r\ncontract SATToken{     \r\n\r\n    uint public totalSupply = 10000000000*10**4;\r\n    uint8 constant public decimals = 4;\r\n    string constant public name = \"smartx\";\r\n    string constant public symbol = \"SAT\";\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    function transfer(address _to, uint256 _value) public;\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n\r\n}\r\n\r\n\r\ncontract MultiSigWallet{\r\n    \r\n    \r\n    SATToken public RCCC = SATToken(0x1f0f468ee03a6d99cd8a09dd071494a83dc1c0e5);\r\n  \r\n    function getbalance() public payable returns(uint)\r\n    {\r\n        return RCCC.totalSupply();\r\n    } \r\n    \r\n    \r\n    \r\n    address private owner;\r\n    mapping (address => uint8) private managers;\r\n    \r\n    modifier isOwner{\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    modifier isManager{\r\n        require(\r\n            msg.sender == owner || managers[msg.sender] == 1);\r\n        _;\r\n    }\r\n    \r\n    uint constant MIN_SIGNATURES = 2;\r\n    uint public transactionIdx;\r\n    uint public manger_num=0;\r\n    \r\n     struct Transaction  {\r\n        address from;\r\n        address to;\r\n        uint amount;\r\n        uint8 signatureCount;\r\n        mapping (address => uint8) signatures;\r\n    }\r\n    \r\n    mapping (uint => Transaction) public transactions;\r\n    uint[] public pendingTransactions;\r\n    \r\n    function MultiSigWallet () public{\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    event DepositFunds(address from, uint amount);\r\n    event TransferFunds(address to, uint amount);\r\n    event TransactionCreated(\r\n        address from,\r\n        address to,\r\n        uint amount,\r\n        uint transactionId\r\n        );\r\n    \r\n    function addManager(address manager) public isOwner{\r\n        managers[manager] = 1;\r\n        manger_num=manger_num+1;\r\n    }\r\n    \r\n    function removeManager(address manager) public isOwner{\r\n        managers[manager] = 0;\r\n        manger_num=manger_num-1;\r\n        \r\n    }\r\n\r\n    function withdraw(uint amount) isManager public{\r\n        transferTo(msg.sender, amount);\r\n    }\r\n    function transferTo(address to,  uint amount) isManager public{\r\n        require(RCCC.balanceOf(this) >= amount);\r\n        uint transactionId = transactionIdx++;\r\n        \r\n        Transaction memory transaction;\r\n        transaction.from = msg.sender;\r\n        transaction.to = to;\r\n        transaction.amount = amount;\r\n        transaction.signatureCount = 0;\r\n        transactions[transactionId] = transaction;\r\n        pendingTransactions.push(transactionId);\r\n    }\r\n    \r\n    function getPendingTransactions() public isManager view returns(uint[]){\r\n        return pendingTransactions;\r\n    }\r\n    \r\n    function signTransaction(uint transactionId) public isManager{\r\n        Transaction storage transaction = transactions[transactionId];\r\n        require(0x0 != transaction.from);\r\n        require(transaction.signatures[msg.sender]!=1);\r\n        transaction.signatures[msg.sender] = 1;\r\n        transaction.signatureCount++;\r\n        \r\n        if(transaction.signatureCount >= MIN_SIGNATURES){\r\n            require(RCCC.balanceOf(this)  >= transaction.amount);\r\n            RCCC.transfer(transaction.to, transaction.amount);\r\n            deleteTransactions(transactionId);\r\n        }\r\n    }\r\n    \r\n    function deleteTransactions(uint transacionId) public isManager{\r\n        uint8 replace = 0;\r\n        for(uint i = 0; i< pendingTransactions.length; i++){\r\n            if(1==replace){\r\n                pendingTransactions[i-1] = pendingTransactions[i];\r\n            }else if(transacionId == pendingTransactions[i]){\r\n                replace = 1;\r\n            }\r\n        } \r\n        delete pendingTransactions[pendingTransactions.length - 1];\r\n        pendingTransactions.length--;\r\n        delete transactions[transacionId];\r\n    }\r\n    \r\n    function walletBalance() public isManager view returns(uint){\r\n        return RCCC.balanceOf(this);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"addManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getbalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"signTransaction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingTransactions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manger_num\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"signatureCount\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transactionIdx\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"removeManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RCCC\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"walletBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPendingTransactions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"transacionId\",\"type\":\"uint256\"}],\"name\":\"deleteTransactions\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"transactionId\",\"type\":\"uint256\"}],\"name\":\"TransactionCreated\",\"type\":\"event\"}]","ContractName":"MultiSigWallet","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cfe6cca22e541152dadb8ec2809c0c4455b10a692b28806e055650e00963d8d5"}]}