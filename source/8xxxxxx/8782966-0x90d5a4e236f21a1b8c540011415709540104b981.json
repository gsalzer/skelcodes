{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\n\n\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    \n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    \n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    \n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    \n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    \n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    \n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    \n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\ninterface IManager {\n \n    event SRC20SupplyMinted(address src20, address swmAccount, uint256 swmValue, uint256 src20Value);\n    event SRC20StakeIncreased(address src20, address swmAccount, uint256 swmValue);\n    event SRC20StakeDecreased(address src20, address swmAccount, uint256 swmValue);\n\n    function mintSupply(address src20, address swmAccount, uint256 swmValue, uint256 src20Value) external returns (bool);\n    function increaseSupply(address src20, address swmAccount, uint256 srcValue) external returns (bool);\n    function decreaseSupply(address src20, address swmAccount, uint256 srcValue) external returns (bool);\n    function renounceManagement(address src20) external returns (bool);\n    function transferManagement(address src20, address newManager) external returns (bool);\n    function calcTokens(address src20, uint256 swmValue) external view returns (uint256);\n\n    function getStake(address src20) external view returns (uint256);\n    function swmNeeded(address src20, uint256 srcValue) external view returns (uint256);\n    function getSrc20toSwmRatio(address src20) external returns (uint256);\n    function getTokenOwner(address src20) external view returns (address);\n}\n\ninterface INetAssetValueUSD {\n\n    function getNetAssetValueUSD(address src20) external view returns (uint256);\n}\n\ncontract SetRateMinter is Ownable {\n    IManager public _registry;\n\n    constructor(address registry) public {\n        _registry = IManager(registry);\n    }\n\n    \n    function mintSupply(address src20, address swmAccount, uint256 swmValue, uint256 src20Value)\n    external\n    onlyOwner\n    returns (bool)\n    {\n        require(_registry.mintSupply(src20, swmAccount, swmValue, src20Value), 'supply minting failed');\n\n        return true;\n    }\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src20\",\"type\":\"address\"},{\"name\":\"swmAccount\",\"type\":\"address\"},{\"name\":\"swmValue\",\"type\":\"uint256\"},{\"name\":\"src20Value\",\"type\":\"uint256\"}],\"name\":\"mintSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"registry\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"SetRateMinter","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000a79958571d55749898292f09366ce2b7c2f89b74","Library":"","LicenseType":"","SwarmSource":"bzzr://e0ca29baa37d41966660a6b659e0e1c62231bc8f93b8a4373b4dcc288d070938"}]}