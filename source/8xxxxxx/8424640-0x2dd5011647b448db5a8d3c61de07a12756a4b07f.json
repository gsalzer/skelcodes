{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/contract_address_locator/interfaces/IContractAddressLocator.sol\r\n\r\npragma solidity 0.4.25;\r\n\r\n/**\r\n * @title Contract Address Locator Interface.\r\n */\r\ninterface IContractAddressLocator {\r\n    /**\r\n     * @dev Get the contract address mapped to a given identifier.\r\n     * @param _identifier The identifier.\r\n     * @return The contract address.\r\n     */\r\n    function getContractAddress(bytes32 _identifier) external view returns (address);\r\n\r\n    /**\r\n     * @dev Determine whether or not a contract address is relates to one of the given identifiers.\r\n     * @param _contractAddress The contract address to look for.\r\n     * @param _identifiers The identifiers.\r\n     * @return Is the contract address relates to one of the identifiers.\r\n     */\r\n    function isContractAddressRelates(address _contractAddress, bytes32[] _identifiers) external view returns (bool);\r\n}\r\n\r\n// File: contracts/contract_address_locator/ContractAddressLocator.sol\r\n\r\npragma solidity 0.4.25;\r\n\r\n\r\n/**\r\n * @title Contract Address Locator.\r\n * @dev Map a unique identifier to every contract address in the system.\r\n * @dev On-chain, this contract is used for retrieving the address of any contract in the system.\r\n * @dev Off-chain, this contract is used for initializing the mapping between identifiers and contract addresses.\r\n */\r\ncontract ContractAddressLocator is IContractAddressLocator {\r\n    string public constant VERSION = \"1.0.0\";\r\n\r\n    uint256 identifiersCount;\r\n\r\n    mapping(bytes32 => address) private contractAddresses;\r\n\r\n    event Mapped(bytes32 indexed _identifier, address indexed _contractAddress);\r\n\r\n    /**\r\n     * @dev Create the contract.\r\n     * @param _identifiers A list of identifiers.\r\n     * @param _contractAddresses A list of contract addresses.\r\n     * @notice This contract is designated to be deployed every time the system is upgraded.\r\n     * @notice Deployment will fail if the length of the lists yields gas requirement larger than the block gas-limit.\r\n     * @notice However, there is no point in setting a restriction on the length of the lists in order to prevent this scenario.\r\n     * @notice Instead, if such scenario is ever encountered, this function will need to be adjusted in order to allow its execution.\r\n     */\r\n    constructor(bytes32[] memory _identifiers, address[] _contractAddresses) public {\r\n        identifiersCount = _identifiers.length;\r\n        require(identifiersCount == _contractAddresses.length, \"list lengths are not equal\");\r\n        for (uint256 i = 0; i < identifiersCount; i++) {\r\n            require(uint256(contractAddresses[_identifiers[i]]) == 0, \"identifiers are not unique\");\r\n            contractAddresses[_identifiers[i]] = _contractAddresses[i];\r\n            emit Mapped(_identifiers[i], _contractAddresses[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Get the contract address mapped to a given identifier.\r\n     * @param _identifier The identifier.\r\n     * @return The contract address.\r\n     */\r\n    function getContractAddress(bytes32 _identifier) external view returns (address) {\r\n        return contractAddresses[_identifier];\r\n    }\r\n\r\n    /**\r\n     * @dev Determine whether or not a contract address is relates to one of the identifiers.\r\n     * @param _contractAddress The contract address to look for.\r\n     * @param _identifiers The identifiers.\r\n     * @return Is the contract address relates to one of the identifiers.\r\n     */\r\n    function isContractAddressRelates(address _contractAddress, bytes32[] _identifiers) external view returns (bool){\r\n        assert(_contractAddress != address(0));\r\n        uint256 _identifiersCount = _identifiers.length;\r\n        require(_identifiersCount <= identifiersCount, \"cannot be more than actual identifiers count\");\r\n        bool isRelate = false;\r\n        for (uint256 i = 0; i < _identifiersCount; i++) {\r\n            if (_contractAddress == contractAddresses[_identifiers[i]]) {\r\n                isRelate = true;\r\n                break;\r\n            }\r\n        }\r\n        return isRelate;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_identifier\",\"type\":\"bytes32\"}],\"name\":\"getContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contractAddress\",\"type\":\"address\"},{\"name\":\"_identifiers\",\"type\":\"bytes32[]\"}],\"name\":\"isContractAddressRelates\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_identifiers\",\"type\":\"bytes32[]\"},{\"name\":\"_contractAddresses\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_identifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"Mapped\",\"type\":\"event\"}]","ContractName":"ContractAddressLocator","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000000b4953474e417574686f72697a6174696f6e4d616e6167657200000000000000004953474e546f6b656e0000000000000000000000000000000000000000000000494d696e7448616e646c657200000000000000000000000000000000000000004957616c6c65747354726164696e6744617461536f75726365000000000000004953474e436f6e76657273696f6e4d616e61676572000000000000000000000049417574686f72697a6174696f6e44617461536f757263650000000000000000494d696e744d616e6167657200000000000000000000000000000000000000004954726164696e67436c617373657300000000000000000000000000000000004957616c6c657473544c56616c7565436f6e76657274657200000000000000004953474e546f6b656e4d616e616765720000000000000000000000000000000057616c6c657473544c53474e546f6b656e4d616e616765720000000000000000000000000000000000000000000000000000000000000000000000000000000b000000000000000000000000966b76ccb4a0637d41f01548880e8282bb503e1000000000000000000000000005da1276859443bfd9129772e36c18f1c258624800000000000000000000000005da1276859443bfd9129772e36c18f1c25862480000000000000000000000003a156fb997f25284b561f303e9219b6303f37b8f00000000000000000000000078d5509c55042d538c56936798813589ce19d1be00000000000000000000000042249e898b1a50fd7b26f3c56a48c84085eef681000000000000000000000000f79c2205fe520680b4d4b0c7be7bcf87ed62d560000000000000000000000000b70a2ed8c6c8be49a16e10ab2dad655599ec3718000000000000000000000000383b963ea86e7fd2b955a386d9c2a445930b22ab000000000000000000000000020208ae9b7fcd2b4b7fba2ce95934d4ee248565000000000000000000000000b146551420961c2736bdee322bef68724faee8e3","Library":"","SwarmSource":"bzzr://84064bc058f1c195a5d1e5d1f48452e7dad04c9c5d39a7c9c9181ec8a70067cb"}]}