{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.8;\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract weeWMA\r\n{\r\n    using SafeMath for uint256;\r\n    string public name;\r\n    uint8 public decimals;\r\n    string public symbol;\r\n    address owner;\r\n    uint256 private _totalSupply;\r\n    mapping (address => mapping (address => uint256)) private _allowed;\r\n    mapping (address => uint) private _balanceOf;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    \r\n    \r\n    constructor() public {\r\n        \r\n        // Creating a Contract of 20 billion token. name of the token \r\n        // is weeMarketplaceAccessToken and the symbol of token is WMA\r\n        decimals = 18;\r\n        _totalSupply = 20000000000 * 10**uint(decimals);\r\n        name = \"weeMarketplaceAccessToken\";\r\n        \r\n        symbol = \"WMA\";\r\n        _balanceOf[msg.sender] = _totalSupply;            \r\n        owner = msg.sender;\r\n        emit Transfer( address(0),msg.sender, _totalSupply);\r\n        \r\n    }\r\n    \r\n    \r\n    function allowance(address _owner, address _spender) public view returns (uint256) {\r\n        return _allowed[_owner][_spender];\r\n    }\r\n    \r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n\r\n    function approve(address spender, uint256 _value) public returns (bool) {\r\n          \r\n        \r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        require(msg.sender != address(0), \"ERC20: approve from the zero address\");\r\n\r\n        // To change the approve amount you first have to reduce the addresses`\r\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n        //  already 0 to mitigate the race condition described here:\r\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n        require(!((_value != 0) && (_allowed[msg.sender][spender] != 0)));\r\n\r\n        _allowed[msg.sender][spender] = _value;\r\n        emit Approval(msg.sender, spender, _value);\r\n        \r\n             \r\n        return true;        \r\n    }\r\n    \r\n  \r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_from` cannot be the zero address.\r\n     * - `_to` cannot be the zero address.\r\n     * - `_from` must have a balance of at least `amount`.\r\n     */\r\n    \r\n    function _transfer(address _from, address _to, uint256 _value) internal returns (bool)\r\n    {\r\n        \r\n        require(_from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(_to != address(0), \"ERC20: transfer to the zero address\");\r\n        require (_balanceOf[_from] >= _value);\r\n        \r\n        _balanceOf[_from] = _balanceOf[_from].sub(_value) ; \r\n        _balanceOf[_to] = _balanceOf[_to].add(_value);\r\n        emit Transfer(_from, _to, _value);\r\n\r\n        return true;\r\n        \r\n    }\r\n    \r\n\r\n    function transferFrom(address _from,address _to, uint256 _value) public returns (bool){\r\n        \r\n        require(_allowed[_from][msg.sender] >= _value, \"Insufficient Balance\");\r\n        _allowed[_from][msg.sender] = _allowed[_from][msg.sender].sub(_value);\r\n       // emit Approval(_from,msg.sender, _allowed[_from][msg.sender]); \r\n        return _transfer(_from, _to, _value);\r\n        \r\n    }\r\n   \r\n    function transfer(address _to, uint256 _value) public returns (bool){\r\n        \r\n       return _transfer(msg.sender, _to, _value);\r\n        \r\n    }\r\n   \r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n\r\n    function balanceOf(address _owner) public view returns (uint256) \r\n    {\r\n        \r\n        return _balanceOf[_owner];\r\n        \r\n    }\r\n    \r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view returns (uint256 supply) \r\n    {\r\n        \r\n        return _totalSupply;\r\n        \r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"weeWMA","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU GPLv3","SwarmSource":"bzzr://27427e07d6c6f662ec4b588fd1dcfdc6696944fceafa0ce8520b9a77bef8ee2d"}]}