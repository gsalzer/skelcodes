{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\n\r\nabstract contract Resolver {\r\n    function get(string memory key, uint256 tokenId) public virtual view returns (string memory);\r\n}\r\n\r\ncontract CryptoToken {\r\n    uint256 private constant _CRYPTO_HASH =\r\n        0x0f4a10a4f46c288cea365fcf45cccf0e9d901b945b9829ccdb54c10dc3cb7a6f;\r\n    address private constant _RESOLVER = 0xA1cAc442Be6673C49f8E74FFC7c4fD746f3cBD0D;\r\n    function root() public pure returns (uint256) {\r\n        return _CRYPTO_HASH;\r\n    }  \r\n    function resolver() public pure returns(address) {\r\n        return _RESOLVER;\r\n    }\r\n    fallback() external{}\r\n    \r\n    function getTokenId(string memory label) public pure returns(uint256) {\r\n        return uint256(keccak256(abi.encodePacked(root(), keccak256(abi.encodePacked(label)))));\r\n    }\r\n    \r\n    function getIpfs(uint256 tokenId) public view returns(string memory) {\r\n        return Resolver(resolver()).get(\"ipfs.html.value\",tokenId);\r\n    }\r\n\r\n}","ABI":"[{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getIpfs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"root\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"CryptoToken","CompilerVersion":"v0.6.1+commit.e6f7d5a4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"ipfs://755aa03957fb6aef03161a3c86dc63ec6cbb8e6b8ef645b26072f4ce6fccea38"}]}