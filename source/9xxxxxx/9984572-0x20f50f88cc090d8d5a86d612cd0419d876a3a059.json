{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.6.3 <0.7.0;\r\n\r\n\r\ncontract EthernityMoneyX10 {\r\n    address public creator;\r\n    uint256 MAX_LEVEL = 2;\r\n    uint256 REFERRALS_LIMIT = 100;\r\n    uint256 LEVEL_EXPIRE_TIME = 30 days;\r\n    uint256 LEVEL_HIGHER_FOUR_EXPIRE_TIME = 10000 days;\r\n    mapping(address => User) public users;\r\n    mapping(uint256 => address) public userAddresses;\r\n    uint256 public last_uid;\r\n    mapping(uint256 => uint256) public feePrice;\r\n    mapping(uint256 => uint256) public directPrice;\r\n    mapping(uint256 => uint256) public levelPrice;\r\n    mapping(uint256 => uint256) public uplinesToRcvEth;\r\n    mapping(address => ProfitsRcvd) public rcvdProfits;\r\n    mapping(address => ProfitsGiven) public givenProfits;\r\n    mapping(address => LostProfits) public lostProfits;\r\n\r\n    struct User {\r\n        uint256 id;\r\n        uint256 referrerID;\r\n        address[] referrals;\r\n        mapping(uint256 => uint256) levelExpiresAt;\r\n    }\r\n\r\n    struct ProfitsRcvd {\r\n        uint256 uid;\r\n        uint256[] fromId;\r\n        address[] fromAddr;\r\n        uint256[] amount;\r\n    }\r\n\r\n    struct LostProfits {\r\n        uint256 uid;\r\n        uint256[] toId;\r\n        address[] toAddr;\r\n        uint256[] amount;\r\n        uint256[] level;\r\n    }\r\n\r\n    struct ProfitsGiven {\r\n        uint256 uid;\r\n        uint256[] toId;\r\n        address[] toAddr;\r\n        uint256[] amount;\r\n        uint256[] level;\r\n        uint256[] line;\r\n    }\r\n\r\n    modifier validLevelAmount(uint256 _level) {\r\n        require(msg.value == levelPrice[_level], \"Invalid level amount sent\");\r\n        _;\r\n    }\r\n\r\n    modifier userRegistered() {\r\n        require(users[msg.sender].id != 0, \"User does not exist\");\r\n        _;\r\n    }\r\n\r\n    modifier validReferrerID(uint256 _referrerID) {\r\n        require(\r\n            _referrerID > 0 && _referrerID <= last_uid,\r\n            \"Invalid referrer ID\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier userNotRegistered() {\r\n        require(users[msg.sender].id == 0, \"User is already registered\");\r\n        _;\r\n    }\r\n\r\n    modifier validLevel(uint256 _level) {\r\n        require(_level > 0 && _level <= MAX_LEVEL, \"Invalid level entered\");\r\n        _;\r\n    }\r\n\r\n    event RegisterUserEvent(\r\n        address indexed user,\r\n        address indexed referrer,\r\n        uint256 time\r\n    );\r\n    event BuyLevelEvent(\r\n        address indexed user,\r\n        uint256 indexed level,\r\n        uint256 time\r\n    );\r\n    event GetLevelProfitEvent(\r\n        address indexed user,\r\n        address indexed referral,\r\n        uint256 indexed level,\r\n        uint256 time\r\n    );\r\n    event LostLevelProfitEvent(\r\n        address indexed user,\r\n        address indexed referral,\r\n        uint256 indexed level,\r\n        uint256 time\r\n    );\r\n\r\n    constructor() public {\r\n        last_uid++;\r\n        creator = msg.sender;\r\n        levelPrice[1] = 0.17 ether;\r\n        levelPrice[2] = 0.35 ether;\r\n        levelPrice[3] = 0.80 ether;\r\n        levelPrice[4] = 1.60 ether;\r\n        levelPrice[5] = 2.50 ether;\r\n        levelPrice[6] = 3.50 ether;\r\n        levelPrice[7] = 6.60 ether;\r\n        levelPrice[8] = 15.20 ether;\r\n        levelPrice[9] = 24.50 ether;\r\n        feePrice[1] = 0.03 ether;\r\n        feePrice[2] = 0.04 ether;\r\n        feePrice[3] = 0.05 ether;\r\n        feePrice[4] = 0.06 ether;\r\n        feePrice[5] = 0.07 ether;\r\n        feePrice[6] = 0.08 ether;\r\n        feePrice[7] = 0.09 ether;\r\n        feePrice[8] = 0.10 ether;\r\n        feePrice[9] = 0.20 ether;\r\n        directPrice[1] = 0.04 ether;\r\n        directPrice[2] = 0.09 ether;\r\n        directPrice[3] = 0.15 ether;\r\n        directPrice[4] = 0.24 ether;\r\n        directPrice[5] = 0.34 ether;\r\n        directPrice[6] = 0.42 ether;\r\n        directPrice[7] = 0.51 ether;\r\n        directPrice[8] = 0.70 ether;\r\n        directPrice[9] = 1.26 ether;\r\n        uplinesToRcvEth[1] = 10;\r\n        uplinesToRcvEth[2] = 11;\r\n        uplinesToRcvEth[3] = 12;\r\n        uplinesToRcvEth[4] = 13;\r\n        uplinesToRcvEth[5] = 14;\r\n        uplinesToRcvEth[6] = 15;\r\n        uplinesToRcvEth[7] = 16;\r\n        uplinesToRcvEth[8] = 17;\r\n        uplinesToRcvEth[9] = 18;\r\n\r\n        users[creator] = User({\r\n            id: last_uid,\r\n            referrerID: 0,\r\n            referrals: new address[](0)\r\n        });\r\n        userAddresses[last_uid] = creator;\r\n\r\n        for (uint256 i = 1; i <= MAX_LEVEL; i++) {\r\n            users[creator].levelExpiresAt[i] = 1 << 37;\r\n        }\r\n    }\r\n\r\n    function registerUser(uint256 _referrerID)\r\n        public\r\n        payable\r\n        userNotRegistered()\r\n        validReferrerID(_referrerID)\r\n        validLevelAmount(1)\r\n    {\r\n        uint256 _level = 1;\r\n\r\n        if (\r\n            users[userAddresses[_referrerID]].referrals.length >=\r\n            REFERRALS_LIMIT\r\n        ) {\r\n            _referrerID = users[findReferrer(userAddresses[_referrerID])].id;\r\n        }\r\n        last_uid++;\r\n        users[msg.sender] = User({\r\n            id: last_uid,\r\n            referrerID: _referrerID,\r\n            referrals: new address[](0)\r\n        });\r\n        userAddresses[last_uid] = msg.sender;\r\n        users[msg.sender].levelExpiresAt[_level] =\r\n            now +\r\n            getLevelExpireTime(_level);\r\n        users[userAddresses[_referrerID]].referrals.push(msg.sender);\r\n\r\n        transferLevelPayment(_level, msg.sender);\r\n        emit RegisterUserEvent(msg.sender, userAddresses[_referrerID], now);\r\n    }\r\n\r\n    function buyLevel(uint256 _level)\r\n        public\r\n        payable\r\n        userRegistered()\r\n        validLevel(_level)\r\n        validLevelAmount(_level)\r\n    {\r\n        for (uint256 l = _level - 1; l > 0; l--) {\r\n            require(\r\n                getUserLevelExpiresAt(msg.sender, l) >= now,\r\n                \"Buy previous level first\"\r\n            );\r\n        }\r\n\r\n        if (getUserLevelExpiresAt(msg.sender, _level) == 0) {\r\n            users[msg.sender].levelExpiresAt[_level] =\r\n                now +\r\n                getLevelExpireTime(_level);\r\n        } else {\r\n            users[msg.sender].levelExpiresAt[_level] += getLevelExpireTime(\r\n                _level\r\n            );\r\n        }\r\n\r\n        transferLevelPayment(_level, msg.sender);\r\n        emit BuyLevelEvent(msg.sender, _level, now);\r\n    }\r\n\r\n    function getLevelExpireTime(uint256 _level) public view returns (uint256) {\r\n        if (_level < 5) {\r\n            return LEVEL_EXPIRE_TIME;\r\n        } else {\r\n            return LEVEL_HIGHER_FOUR_EXPIRE_TIME;\r\n        }\r\n    }\r\n\r\n    function findReferrer(address _user) public view returns (address) {\r\n        if (users[_user].referrals.length < REFERRALS_LIMIT) {\r\n            return _user;\r\n        }\r\n\r\n        address[1632] memory referrals;\r\n        referrals[0] = users[_user].referrals[0];\r\n        referrals[1] = users[_user].referrals[1];\r\n\r\n        address referrer;\r\n\r\n        for (uint256 i = 0; i < 16382; i++) {\r\n            if (users[referrals[i]].referrals.length < REFERRALS_LIMIT) {\r\n                referrer = referrals[i];\r\n                break;\r\n            }\r\n\r\n            if (i >= 8191) {\r\n                continue;\r\n            }\r\n\r\n            referrals[(i + 1) * 2] = users[referrals[i]].referrals[0];\r\n            referrals[(i + 1) * 2 + 1] = users[referrals[i]].referrals[1];\r\n        }\r\n\r\n        require(referrer != address(0), \"Referrer not found\");\r\n        return referrer;\r\n    }\r\n\r\n    function transferLevelPayment(uint256 _level, address _user) internal {\r\n        uint256 height = _level;\r\n        address referrer = getUserUpline(_user, height);\r\n\r\n        if (referrer == address(0)) {\r\n            referrer = creator;\r\n        }\r\n\r\n        uint256 uplines = uplinesToRcvEth[_level];\r\n        bool chkLostProfit = false;\r\n        address lostAddr;\r\n        \r\n        uint256 eth = msg.value;\r\n        \r\n        for (uint256 i = 1; i <= uplines; i++) {\r\n            referrer = getUserUpline(_user, i);\r\n\r\n            if (chkLostProfit) {\r\n                lostProfits[lostAddr].uid = users[referrer].id;\r\n                lostProfits[lostAddr].toId.push(users[referrer].id);\r\n                lostProfits[lostAddr].toAddr.push(referrer);\r\n                lostProfits[lostAddr].amount.push(\r\n                    (msg.value - feePrice[_level] -  directPrice[_level])/ uplinesToRcvEth[_level]\r\n                );\r\n                lostProfits[lostAddr].level.push(getUserLevel(referrer));\r\n                chkLostProfit = false;\r\n\r\n                emit LostLevelProfitEvent(referrer, msg.sender, _level, 0);\r\n            }\r\n\r\n            if (\r\n                referrer != address(0) &&\r\n                (users[_user].levelExpiresAt[_level] == 0 ||\r\n                    getUserLevelExpiresAt(referrer, _level) < now)\r\n            ) {\r\n                chkLostProfit = true;\r\n                uplines++;\r\n                lostAddr = referrer;\r\n                continue;\r\n            } else {\r\n                chkLostProfit = false;\r\n            }\r\n\r\n            if (referrer == address(0)) {\r\n                referrer = creator;\r\n            }\r\n\r\n     \r\n            if (\r\n                address(uint160(referrer)).send(\r\n                    (msg.value - feePrice[_level] -  directPrice[_level])/ uplinesToRcvEth[_level]\r\n                )\r\n            ) {\r\n                eth = eth - ((msg.value - feePrice[_level] -  directPrice[_level])/ uplinesToRcvEth[_level]);\r\n            \r\n                rcvdProfits[referrer].uid = users[referrer].id;\r\n                rcvdProfits[referrer].fromId.push(users[msg.sender].id);\r\n                rcvdProfits[referrer].fromAddr.push(msg.sender);\r\n                rcvdProfits[referrer].amount.push(\r\n                    (levelPrice[_level] - feePrice[_level] -  directPrice[_level])/ uplinesToRcvEth[_level]\r\n                );\r\n\r\n                givenProfits[msg.sender].uid = users[msg.sender].id;\r\n                givenProfits[msg.sender].toId.push(users[referrer].id);\r\n                givenProfits[msg.sender].toAddr.push(referrer);\r\n                givenProfits[msg.sender].amount.push(\r\n                    (levelPrice[_level] - feePrice[_level] -  directPrice[_level]) / uplinesToRcvEth[_level]\r\n                );\r\n                givenProfits[msg.sender].level.push(getUserLevel(referrer));\r\n                givenProfits[msg.sender].line.push(i);\r\n\r\n                emit GetLevelProfitEvent(referrer, msg.sender, _level, now);\r\n            }\r\n            \r\n        }\r\n        \r\n        address directRefer =  userAddresses[users[msg.sender].referrerID];\r\n        \r\n        if (\r\n            address(uint160(directRefer)).send(\r\n                   directPrice[_level]\r\n                )\r\n            ) {\r\n                eth = eth - directPrice[_level];\r\n                rcvdProfits[referrer].uid = users[directRefer].id;\r\n                rcvdProfits[referrer].fromId.push(users[msg.sender].id);\r\n                rcvdProfits[referrer].fromAddr.push(msg.sender);\r\n                rcvdProfits[referrer].amount.push(\r\n                    directPrice[_level]\r\n                );\r\n\r\n                givenProfits[msg.sender].uid = users[msg.sender].id;\r\n                givenProfits[msg.sender].toId.push(users[directRefer].id);\r\n                givenProfits[msg.sender].toAddr.push(directRefer);\r\n                givenProfits[msg.sender].amount.push(\r\n                    directPrice[_level]\r\n                );\r\n                givenProfits[msg.sender].level.push(getUserLevel(directRefer));\r\n                givenProfits[msg.sender].line.push(1);\r\n\r\n                emit GetLevelProfitEvent(directRefer, msg.sender, _level, now);\r\n            }\r\n            \r\n        if(address(uint160(creator)).send(eth)){\r\n            emit GetLevelProfitEvent(creator, msg.sender, _level, now);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function getUserUpline(address _user, uint256 height)\r\n        public\r\n        view\r\n        returns (address)\r\n    {\r\n        if (height <= 0 || _user == address(0)) {\r\n            return _user;\r\n        }\r\n\r\n        return\r\n            this.getUserUpline(\r\n                userAddresses[users[_user].referrerID],\r\n                height - 1\r\n            );\r\n    }\r\n\r\n    function getUserReferrals(address _user)\r\n        public\r\n        view\r\n        returns (address[] memory)\r\n    {\r\n        return users[_user].referrals;\r\n    }\r\n\r\n    function getUserProfitsFromId(address _user)\r\n        public\r\n        view\r\n        returns (uint256[] memory)\r\n    {\r\n        return rcvdProfits[_user].fromId;\r\n    }\r\n\r\n    function getUserProfitsFromAddr(address _user)\r\n        public\r\n        view\r\n        returns (address[] memory)\r\n    {\r\n        return rcvdProfits[_user].fromAddr;\r\n    }\r\n\r\n    function getUserProfitsAmount(address _user)\r\n        public\r\n        view\r\n        returns (uint256[] memory)\r\n    {\r\n        return rcvdProfits[_user].amount;\r\n    }\r\n\r\n    function getUserProfitsGivenToId(address _user)\r\n        public\r\n        view\r\n        returns (uint256[] memory)\r\n    {\r\n        return givenProfits[_user].toId;\r\n    }\r\n\r\n    function getUserProfitsGivenToAddr(address _user)\r\n        public\r\n        view\r\n        returns (address[] memory)\r\n    {\r\n        return givenProfits[_user].toAddr;\r\n    }\r\n\r\n    function getUserProfitsGivenToAmount(address _user)\r\n        public\r\n        view\r\n        returns (uint256[] memory)\r\n    {\r\n        return givenProfits[_user].amount;\r\n    }\r\n\r\n    function getUserProfitsGivenToLevel(address _user)\r\n        public\r\n        view\r\n        returns (uint256[] memory)\r\n    {\r\n        return givenProfits[_user].level;\r\n    }\r\n\r\n    function getUserProfitsGivenToLine(address _user)\r\n        public\r\n        view\r\n        returns (uint256[] memory)\r\n    {\r\n        return givenProfits[_user].line;\r\n    }\r\n\r\n    function getUserLostsToId(address _user)\r\n        public\r\n        view\r\n        returns (uint256[] memory)\r\n    {\r\n        return (lostProfits[_user].toId);\r\n    }\r\n\r\n    function getUserLostsToAddr(address _user)\r\n        public\r\n        view\r\n        returns (address[] memory)\r\n    {\r\n        return (lostProfits[_user].toAddr);\r\n    }\r\n\r\n    function getUserLostsAmount(address _user)\r\n        public\r\n        view\r\n        returns (uint256[] memory)\r\n    {\r\n        return (lostProfits[_user].amount);\r\n    }\r\n\r\n    function getUserLostsLevel(address _user)\r\n        public\r\n        view\r\n        returns (uint256[] memory)\r\n    {\r\n        return (lostProfits[_user].level);\r\n    }\r\n\r\n    function getUserLevelExpiresAt(address _user, uint256 _level)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return users[_user].levelExpiresAt[_level];\r\n    }\r\n\r\n    function getUserLevel(address _user) public view returns (uint256) {\r\n        if (getUserLevelExpiresAt(_user, 1) < now) {\r\n            return (0);\r\n        } else if (getUserLevelExpiresAt(_user, 2) < now) {\r\n            return (1);\r\n        } else if (getUserLevelExpiresAt(_user, 3) < now) {\r\n            return (2);\r\n        } else if (getUserLevelExpiresAt(_user, 4) < now) {\r\n            return (3);\r\n        } else if (getUserLevelExpiresAt(_user, 5) < now) {\r\n            return (4);\r\n        } else if (getUserLevelExpiresAt(_user, 6) < now) {\r\n            return (5);\r\n        } else if (getUserLevelExpiresAt(_user, 7) < now) {\r\n            return (6);\r\n        } else if (getUserLevelExpiresAt(_user, 8) < now) {\r\n            return (7);\r\n        } else if (getUserLevelExpiresAt(_user, 9) < now) {\r\n            return (8);\r\n        } else if (getUserLevelExpiresAt(_user, 10) < now) {\r\n            return (9);\r\n        }\r\n    }\r\n\r\n    function getUserDetails(address _user)\r\n        public\r\n        view\r\n        returns (uint256, uint256)\r\n    {\r\n        if (getUserLevelExpiresAt(_user, 1) < now) {\r\n            return (1, users[_user].id);\r\n        } else if (getUserLevelExpiresAt(_user, 2) < now) {\r\n            return (2, users[_user].id);\r\n        } else if (getUserLevelExpiresAt(_user, 3) < now) {\r\n            return (3, users[_user].id);\r\n        } else if (getUserLevelExpiresAt(_user, 4) < now) {\r\n            return (4, users[_user].id);\r\n        } else if (getUserLevelExpiresAt(_user, 5) < now) {\r\n            return (5, users[_user].id);\r\n        } else if (getUserLevelExpiresAt(_user, 6) < now) {\r\n            return (6, users[_user].id);\r\n        } else if (getUserLevelExpiresAt(_user, 7) < now) {\r\n            return (7, users[_user].id);\r\n        } else if (getUserLevelExpiresAt(_user, 8) < now) {\r\n            return (8, users[_user].id);\r\n        } else if (getUserLevelExpiresAt(_user, 9) < now) {\r\n            return (9, users[_user].id);\r\n        }\r\n    }\r\n\r\n    receive() external payable {\r\n        revert();\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"BuyLevelEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"GetLevelProfitEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"LostLevelProfitEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"RegisterUserEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"buyLevel\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"directPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"findReferrer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"getLevelExpireTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"getUserLevelExpiresAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserLostsAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserLostsLevel\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserLostsToAddr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserLostsToId\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsFromAddr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsFromId\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsGivenToAddr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsGivenToAmount\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsGivenToId\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsGivenToLevel\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserProfitsGivenToLine\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserReferrals\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"name\":\"getUserUpline\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"givenProfits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"uid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"last_uid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levelPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lostProfits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"uid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rcvdProfits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"uid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_referrerID\",\"type\":\"uint256\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uplinesToRcvEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referrerID\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"EthernityMoneyX10","CompilerVersion":"v0.6.3+commit.8dda9521","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"ipfs://98a5a9e8fbfee7f15bdcf20f09ae3df806bd1c73b775b3c993523114537731cf"}]}