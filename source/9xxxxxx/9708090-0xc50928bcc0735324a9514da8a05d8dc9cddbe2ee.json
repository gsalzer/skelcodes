{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.16;\r\n\r\ninterface ICEther {\r\n    function mint() external payable;\r\n    function redeem(uint redeemTokens) external returns (uint);\r\n    function redeemUnderlying(uint redeemAmount) external returns (uint);\r\n    function borrow(uint borrowAmount) external returns (uint);\r\n    function repayBorrow(uint repayAmount) external returns (uint);\r\n    function repayBorrowBehalf(address borrower, uint repayAmount) external returns (uint);\r\n    function transfer(address dst, uint amount) external returns (bool);\r\n    function transferFrom(address src, address dst, uint amount) external returns (bool);\r\n    function approve(address spender, uint amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function balanceOfUnderlying(address owner) external returns (uint);\r\n    function getAccountSnapshot(address account) external view returns (uint, uint, uint, uint);\r\n    function borrowRatePerBlock() external view returns (uint);\r\n    function supplyRatePerBlock() external view returns (uint);\r\n    function totalBorrowsCurrent() external returns (uint);\r\n    function borrowBalanceCurrent(address account) external returns (uint);\r\n    function borrowBalanceStored(address account) external view returns (uint);\r\n    function exchangeRateCurrent() external returns (uint);\r\n    function exchangeRateStored() external view returns (uint);\r\n    function getCash() external view returns (uint);\r\n    function accrueInterest() external returns (uint);\r\n    function seize(address liquidator, address borrower, uint seizeTokens) external returns (uint);\r\n\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function decimals() external view returns (uint8);\r\n    function admin() external view returns (address);\r\n    function pendingAdmin() external view returns (address);\r\n    function reserveFactorMantissa() external view returns (uint256);\r\n    function accrualBlockNumber() external view returns (uint256);\r\n    function borrowIndex() external view returns (uint256);\r\n    function totalBorrows() external view returns (uint256);\r\n    function totalReserves() external view returns (uint256);\r\n    function totalSupply() external view returns (uint256);\r\n}\r\n\r\n// File: localhost/contracts/handlers/HandlerBase.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\ncontract HandlerBase {\r\n    address[] public tokens;\r\n\r\n    function _updateToken(address token) internal {\r\n        tokens.push(token);\r\n    }\r\n}\r\n\r\n// File: localhost/contracts/handlers/compound/HCEther.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n\r\n\r\ncontract HCEther is HandlerBase {\r\n    function getCEther() public pure returns (address result) {\r\n        return 0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5;\r\n    }\r\n\r\n    function mint(uint256 value) external payable {\r\n        ICEther compound = ICEther(getCEther());\r\n        compound.mint.value(value)();\r\n\r\n        // Update involved token\r\n        _updateToken(getCEther());\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getCEther\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"result\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"HCEther","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://95e826bed8cac1e4a61a58530b8e0694e952a42ef1fdc4577259d165eec2780e"}]}