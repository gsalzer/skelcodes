{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\ncontract SafeMath {\r\n    \r\n    // 乘法（internal修饰的函数只能够在当前合约或子合约中使用）\r\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) { \r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n  \r\n    // 除法\r\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b > 0);\r\n        uint256 c = a / b;\r\n        assert(a == b * c + a % b);\r\n        return c;\r\n    }\r\n \r\n    // 减法\r\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        assert(b >=0);\r\n        return a - b;\r\n    }\r\n \r\n    // 加法\r\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c>=a && c>=b);\r\n        return c;\r\n    }\r\n}\r\n \r\ncontract kjlETH is SafeMath{\r\n    // 代币的名字\r\n    string public name; \r\n    // 代币的符号\r\n    string public symbol;\r\n    // 代币支持的小数位\r\n    uint8 public decimals;\r\n    // 代表发行的总量\r\n    uint256 public totalSupply;\r\n    // 管理者\r\n    address public owner;\r\n \r\n    // 该mapping保存账户余额，Key表示账户地址，Value表示token个数\r\n    mapping (address => uint256) public balanceOf;\r\n    // 该mappin保存指定帐号被授权的token个数\r\n    // key1表示授权人，key2表示被授权人，value2表示被授权token的个数\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    // 冻结指定帐号token的个数\r\n    mapping (address => uint256) public freezeOf;\r\n \r\n    // 定义事件\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Burn(address indexed from, uint256 value);\r\n    event Freeze(address indexed from, uint256 value);\r\n    event Unfreeze(address indexed from, uint256 value);\r\n \r\n    // 构造函数（1000000, \"ZhongB\", 18, \"ZB\"）\r\n    constructor( \r\n        uint256 initialSupply,  // 发行数量\r\n        string tokenName,       // token的名字 BinanceToken\r\n        uint8 decimalUnits,     // 最小分割，小数点后面的尾数 1ether = 10** 18wei\r\n        string tokenSymbol      // ZB\r\n    ) public {\r\n        decimals = decimalUnits;                           \r\n        balanceOf[msg.sender] = initialSupply * 10 ** 18;    \r\n        totalSupply = initialSupply * 10 ** 18;   \r\n        name = tokenName;      \r\n        symbol = tokenSymbol;\r\n        owner = msg.sender;\r\n    }\r\n \r\n    // 转账：某个人花费自己的币\r\n    function transfer(address _to, uint256 _value) public {\r\n        // 防止_to无效\r\n        assert(_to != 0x0);\r\n        // 防止_value无效                       \r\n        assert(_value > 0);\r\n        // 防止转账人的余额不足\r\n        assert(balanceOf[msg.sender] >= _value);\r\n        // 防止数据溢出\r\n        assert(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        // 从转账人的账户中减去一定的token的个数\r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);                     \r\n        // 往接收帐号增加一定的token个数\r\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value); \r\n        // 转账成功后触发Transfer事件，通知其他人有转账交易发生\r\n        emit Transfer(msg.sender, _to, _value);// Notify anyone listening that this transfer took place\r\n    }\r\n \r\n    // 授权：授权某人花费自己账户中一定数量的token\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        assert(_value > 0);\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n \r\n \r\n    // 授权转账：被授权人从_from帐号中给_to帐号转了_value个token\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        // 防止地址无效\r\n        assert(_to != 0x0);\r\n        // 防止转账金额无效\r\n        assert(_value > 0);\r\n        // 检查授权人账户的余额是否足够\r\n        assert(balanceOf[_from] >= _value);\r\n        // 检查数据是否溢出\r\n        assert(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        // 检查被授权人在allowance中可以使用的token数量是否足够\r\n        assert(_value <= allowance[_from][msg.sender]);\r\n        // 从授权人帐号中减去一定数量的token\r\n        balanceOf[_from] = SafeMath.safeSub(balanceOf[_from], _value); \r\n        // 往接收人帐号中增加一定数量的token\r\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value); \r\n        // 从allowance中减去被授权人可使用token的数量\r\n        allowance[_from][msg.sender] = SafeMath.safeSub(allowance[_from][msg.sender], _value);\r\n        // 交易成功后触发Transfer事件，并返回true\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n \r\n    // 消币\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        // 检查当前帐号余额是否足够\r\n        assert(balanceOf[msg.sender] >= _value);\r\n        // 检查_value是否有效\r\n        assert(_value > 0);\r\n        // 从sender账户中中减去一定数量的token\r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);\r\n        // 更新发行币的总量\r\n        totalSupply = SafeMath.safeSub(totalSupply,_value);\r\n        // 消币成功后触发Burn事件，并返回true\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n \r\n    // 冻结\r\n    function freeze(uint256 _value) public returns (bool success) {\r\n        // 检查sender账户余额是否足够\r\n        assert(balanceOf[msg.sender] >= _value);\r\n        // 检查_value是否有效\r\n        assert(_value > 0);\r\n        // 从sender账户中减去一定数量的token\r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value); \r\n        // 往freezeOf中给sender账户增加指定数量的token\r\n        freezeOf[msg.sender] = SafeMath.safeAdd(freezeOf[msg.sender], _value); \r\n        // freeze成功后触发Freeze事件，并返回true\r\n        emit Freeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n \r\n    // 解冻\r\n    function unfreeze(uint256 _value) public returns (bool success) {\r\n        // 检查解冻金额是否有效\r\n        assert(freezeOf[msg.sender] >= _value);\r\n        // 检查_value是否有效\r\n        assert(_value > 0); \r\n        // 从freezeOf中减去指定sender账户一定数量的token\r\n        freezeOf[msg.sender] = SafeMath.safeSub(freezeOf[msg.sender], _value); \r\n        // 向sender账户中增加一定数量的token\r\n        balanceOf[msg.sender] = SafeMath.safeAdd(balanceOf[msg.sender], _value);    \r\n        // 解冻成功后触发事件\r\n        emit Unfreeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n \r\n    // 管理者自己取钱\r\n    function withdrawEther(uint256 amount) public {\r\n        // 检查sender是否是当前合约的管理者\r\n        assert(msg.sender == owner);\r\n        // sender给owner发送token\r\n        owner.transfer(amount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"}]","ContractName":"kjlETH","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000059682f000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000015546563686e6f6c6f677920536d61727420506c616e000000000000000000000000000000000000000000000000000000000000000000000000000000000000035453500000000000000000000000000000000000000000000000000000000000","Library":"","LicenseType":"None","SwarmSource":"bzzr://48bb2ac985df189d9685f77bce84e78109a53e23fa5e74f9bf04cf0cff5f1e6b"}]}