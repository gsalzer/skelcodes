{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\n\r\nabstract contract Resolver {\r\n    function get(string memory key, uint256 tokenId) public virtual view returns (string memory);\r\n}\r\nabstract contract Registry {\r\n    function resolverOf(uint256 tokenId) external virtual view returns (address);\r\n}\r\n\r\ncontract CryptoToken {\r\n    uint256 private constant _CRYPTO_HASH =\r\n        0x0f4a10a4f46c288cea365fcf45cccf0e9d901b945b9829ccdb54c10dc3cb7a6f;\r\n    address private constant _REGISTRY_CONTRACT = 0xD1E5b0FF1287aA9f9A268759062E4Ab08b9Dacbe;\r\n\r\n    function resolver(uint256 tokenId) public view returns(address) {\r\n        return Registry(_REGISTRY_CONTRACT).resolverOf(tokenId);\r\n    }\r\n    fallback() external{}\r\n    \r\n    function getTokenId(string memory label) public pure returns(uint256) {\r\n        return uint256(keccak256(abi.encodePacked(_CRYPTO_HASH, keccak256(abi.encodePacked(label)))));\r\n    }\r\n    \r\n    function getIpfs(uint256 tokenId) public view returns(string memory) {\r\n        return Resolver(resolver(tokenId)).get(\"ipfs.html.value\",tokenId);\r\n    }\r\n    \r\n    function getIpfs(string memory label) public view returns(string memory) {\r\n        uint256 _tokenId = getTokenId(label);\r\n        return Resolver(resolver(_tokenId)).get(\"ipfs.html.value\",_tokenId);\r\n    }\r\n\r\n}","ABI":"[{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"getIpfs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getIpfs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"resolver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"CryptoToken","CompilerVersion":"v0.6.1+commit.e6f7d5a4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"ipfs://e37fcbbc0f780b2c0870fb6673d95ab0f91592ca7e4095c4bb845dbab06f26e4"}]}