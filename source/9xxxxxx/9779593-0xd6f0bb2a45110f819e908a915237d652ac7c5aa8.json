{"status":"1","message":"OK","result":[{"SourceCode":"{\"IERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\"},\"IMVDProxy.sol\":{\"content\":\"pragma solidity ^0.6.0;\\r\\n\\r\\ninterface IMVDProxy {\\r\\n\\r\\n    function init(address votingTokenAddress, address stateHolderAddress, address functionalityModelsManagerAddress, address functionalityProposalManagerAddress, address functionalitiesManagerAddress) external;\\r\\n\\r\\n    function getToken() external view returns(address);\\r\\n    function setToken(address newAddress) external;\\r\\n    function getStateHolderAddress() external view returns(address);\\r\\n    function setStateHolderAddress(address newAddress) external;\\r\\n    function getMVDFunctionalityProposalManagerAddress() external view returns(address);\\r\\n    function setMVDFunctionalityProposalManagerAddress(address newAddress) external;\\r\\n    function getMVDFunctionalityModelsManagerAddress() external view returns(address);\\r\\n    function setMVDFunctionalityModelsManagerAddress(address newAddress) external;\\r\\n    function getMVDFunctionalitiesManagerAddress() external view returns(address);\\r\\n    function setMVDFunctionalitiesManagerAddress(address newAddress) external;\\r\\n    function changeProxy(address payable newAddress) external payable;\\r\\n    function getFunctionalitiesAmount() external view returns(uint256);\\r\\n    function isValidProposal(address proposal) external view returns (bool);\\r\\n    function isValidFunctionality(address functionality) external view returns(bool);\\r\\n    function isAuthorizedFunctionality(address functionality) external view returns(bool);\\r\\n    function getFunctionalityAddress(string calldata codeName) external view returns(address);\\r\\n    function hasFunctionality(string calldata codeName) external view returns(bool);\\r\\n    function functionalitiesToJSON() external view returns(string memory functionsJSONArray);\\r\\n    function functionalitiesToJSON(uint256 start, uint256 l) external view returns(string memory functionsJSONArray);\\r\\n    function getPendingProposal(string calldata codeName) external view returns(address proposalAddress, bool isPending);\\r\\n    function newProposal(string calldata codeName, bool emergency, address sourceLocation, uint256 sourceLocationId, address location, bool submitable, string calldata methodSignature, string calldata returnParametersJSONArray, bool isInternal, bool needsSender, string calldata replaces) external returns(address proposalAddress);\\r\\n    function startProposal(address proposalAddress) external;\\r\\n    function disableProposal(address proposalAddress) external;\\r\\n    function transfer(address receiver, uint256 value, address token) external;\\r\\n    function setProposal() external;\\r\\n    function read(string calldata codeName, bytes calldata data) external view returns(bytes memory returnData);\\r\\n    function submit(string calldata codeName, bytes calldata data) external payable returns(bytes memory returnData);\\r\\n    function callFromManager(address location, bytes calldata payload) external returns(bool, bytes memory);\\r\\n    function emitFromManager(string calldata codeName, uint256 position, address proposal, string calldata replaced, address location, bool submitable, string calldata methodSignature, bool isInternal, bool needsSender, address proposalAddress, uint256 replacedPosition) external;\\r\\n\\r\\n    function emitEvent(string calldata eventSignature, bytes calldata firstIndex, bytes calldata secondIndex, bytes calldata data) external;\\r\\n\\r\\n    event TokenChanged(address indexed oldAddress, address indexed newAddress);\\r\\n    event MVDFunctionalityProposalManagerChanged(address indexed oldAddress, address indexed newAddress);\\r\\n    event MVDFunctionalityModelsManagerChanged(address indexed oldAddress, address indexed newAddress);\\r\\n    event MVDFunctionalitiesManagerChanged(address indexed oldAddress, address indexed newAddress);\\r\\n    event StateHolderChanged(address indexed oldAddress, address indexed newAddress);\\r\\n    event ProxyChanged(address indexed newAddress);\\r\\n\\r\\n    event PaymentReceived(address indexed sender, uint256 value);\\r\\n    event Proposal(address proposal);\\r\\n    event ProposalSet(address indexed proposal, bool success);\\r\\n    event FunctionalitySet(string indexed codeName, uint256 position, address proposal, string indexed replaced, address replacedLocation, bool replacedWasSubmitable, string replacedMethodSignature, bool replacedWasInternal, bool replacedNeededSender, address replacedProposal, uint256 replacedPosition);\\r\\n\\r\\n    event Event(string indexed key, bytes32 indexed firstIndex, bytes32 indexed secondIndex, bytes data);\\r\\n}\"},\"IVotingToken.sol\":{\"content\":\"pragma solidity ^0.6.0;\\r\\n\\r\\ninterface IVotingToken {\\r\\n    function init(string calldata name, string calldata symbol, uint256 decimals, uint256 totalSupply) external;\\r\\n\\r\\n    function getProxy() external view returns (address);\\r\\n    function setProxy() external;\\r\\n\\r\\n    function name() external view returns(string memory);\\r\\n    function symbol() external view returns(string memory);\\r\\n    function decimals() external view returns(uint256);\\r\\n\\r\\n    function mint(uint256 amount) external;\\r\\n    function burn(uint256 amount) external;\\r\\n\\r\\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\\r\\n}\"},\"VotingToken.sol\":{\"content\":\"pragma solidity ^0.6.0;\\r\\n\\r\\nimport \\\"./IMVDProxy.sol\\\";\\r\\nimport \\\"./IERC20.sol\\\";\\r\\nimport \\\"./IVotingToken.sol\\\";\\r\\n\\r\\ncontract VotingToken is IERC20, IVotingToken {\\r\\n\\r\\n    mapping (address =\\u003e uint256) private _balances;\\r\\n\\r\\n    mapping (address =\\u003e mapping (address =\\u003e uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n    uint256 private _decimals;\\r\\n    address private _proxy;\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n\\r\\n    constructor(string memory name, string memory symbol, uint256 decimals, uint256 totalSupply) public override {\\r\\n        if(totalSupply == 0) {\\r\\n            return;\\r\\n        }\\r\\n        init(name, symbol, decimals, totalSupply);\\r\\n    }\\r\\n\\r\\n    function init(string memory name, string memory symbol, uint256 decimals, uint256 totalSupply) public override {\\r\\n        require(_totalSupply == 0, \\\"Init already called!\\\");\\r\\n\\r\\n        _name = name;\\r\\n        _symbol = symbol;\\r\\n        _decimals = decimals;\\r\\n        _totalSupply = totalSupply * (10 ** decimals);\\r\\n        _balances[msg.sender] = _totalSupply;\\r\\n        emit Transfer(address(this), msg.sender, _totalSupply);\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        revert(\\\"ETH not accepted\\\");\\r\\n    }\\r\\n\\r\\n    function getProxy() public override view returns(address) {\\r\\n        return _proxy;\\r\\n    }\\r\\n\\r\\n    function name() public override view returns(string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public override view returns(string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public override view returns(uint256) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public override view returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public override view returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        require(_proxy == address(0) ? true : !IMVDProxy(_proxy).isValidProposal(recipient), \\\"Cannot transfer to DFC Survey Proposal!\\\");\\r\\n        _transfer(msg.sender, recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) public override view returns (uint256) {\\r\\n        if(IMVDProxy(_proxy).isValidProposal(spender)) {\\r\\n            return _balances[owner];\\r\\n        }\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\r\\n        require(!IMVDProxy(_proxy).isValidProposal(spender), \\\"Cannot approve Proposals to spend tokens\\\");\\r\\n        _approve(msg.sender, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        address txSender = msg.sender;\\r\\n        if(!(IMVDProxy(_proxy).isValidProposal(txSender) \\u0026\\u0026 recipient == txSender)) {\\r\\n            _approve(sender, txSender, _allowances[sender][txSender] = sub(_allowances[sender][txSender], amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public override returns (bool) {\\r\\n        _approve(msg.sender, spender, add(_allowances[msg.sender][spender], addedValue));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public override returns (bool) {\\r\\n        _approve(msg.sender, spender, sub(_allowances[msg.sender][spender], subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function _transfer(address sender, address recipient, uint256 amount) internal {\\r\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n\\r\\n        _balances[sender] = sub(_balances[sender], amount, \\\"ERC20: transfer amount exceeds balance\\\");\\r\\n        _balances[recipient] = add(_balances[recipient], amount);\\r\\n        emit Transfer(sender, recipient, amount);\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) internal {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        c = a + b;\\r\\n        require(c \\u003e= a, \\\"SafeMath: addition overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256 c) {\\r\\n        require(b \\u003c= a, errorMessage);\\r\\n        c = a - b;\\r\\n    }\\r\\n\\r\\n    function setProxy() public override {\\r\\n        require(_totalSupply != 0, \\\"Init not called!\\\");\\r\\n        require(_proxy == address(0) || _proxy == msg.sender, _proxy != address(0) ? \\\"Proxy already set!\\\" : \\\"Only Proxy can toggle itself!\\\");\\r\\n        _proxy = _proxy == address(0) ?  msg.sender : address(0);\\r\\n    }\\r\\n\\r\\n    function mint(uint256 amount) public override {\\r\\n        require(IMVDProxy(_proxy).isAuthorizedFunctionality(msg.sender), \\\"Unauthorized access!\\\");\\r\\n\\r\\n        _totalSupply = add(_totalSupply, amount);\\r\\n        _balances[_proxy] = add(_balances[_proxy], amount);\\r\\n        emit Transfer(address(0), _proxy, amount);\\r\\n    }\\r\\n\\r\\n    function burn(uint256 amount) public override {\\r\\n        _balances[msg.sender] = sub(_balances[msg.sender], amount, \\\"VotingToken: burn amount exceeds balance\\\");\\r\\n        _totalSupply = sub(_totalSupply, amount, \\\"VotingToken: burn amount exceeds total supply\\\");\\r\\n        emit Transfer(msg.sender, address(0), amount);\\r\\n    }\\r\\n}\"}}","ABI":"[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"VotingToken","CompilerVersion":"v0.6.4+commit.1dca32f3","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000280de80000000000000000000000000000000000000000000000000000000000000000644464f48756200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005425549444c000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://39815213c15f7fbb5b214cefafe8f54f3ba7b3f4a455d29dbbd748a390a05341"}]}