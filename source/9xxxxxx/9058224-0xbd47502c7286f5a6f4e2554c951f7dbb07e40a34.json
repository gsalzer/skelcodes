{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * Copyright 2017-2019, bZeroX, LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0.\r\n */\r\n\r\npragma solidity 0.5.13;\r\n\r\n\r\ncontract iERC20 {\r\n  string public name;\r\n  uint8 public decimals;\r\n  string public symbol;\r\n  function totalSupply() public view returns (uint256);\r\n  function balanceOf(address _who) public view returns (uint256);\r\n  function transfer(address _to, uint256 _value) public returns (bool);\r\n  function allowance(address _owner, address _spender) public view returns (uint256);\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\r\n  function approve(address _spender, uint256 _value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract iWETH is iERC20 {\r\n    function deposit() external payable;\r\n    function withdraw(uint256 wad) external;\r\n}\r\n\r\ncontract WethHelper {\r\n\r\n    iWETH public weth = iWETH(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\r\n\r\n    function()\r\n        external\r\n        payable\r\n    {}\r\n\r\n    function claimEther(\r\n        address receiver,\r\n        uint256 amount)\r\n        external\r\n        returns (uint256 claimAmount)\r\n    {\r\n        claimAmount = weth.balanceOf(address(this));\r\n        if (claimAmount != 0) {\r\n            weth.withdraw(claimAmount);\r\n        }\r\n        claimAmount = address(this).balance;\r\n\r\n        if (amount != 0) {\r\n            require (amount <= claimAmount,\r\n                \"balance too low\"\r\n            );\r\n            claimAmount = amount;\r\n        }\r\n\r\n        (bool success,) = receiver.call.value(claimAmount)(\"\");\r\n        require(success,\r\n            \"transfer failed\"\r\n        );\r\n    }\r\n\r\n    function claimToken(\r\n        address tokenAddress,\r\n        address receiver,\r\n        uint256 amount)\r\n        external\r\n        returns (uint256 claimAmount)\r\n    {\r\n        iERC20 token = iERC20(tokenAddress);\r\n        claimAmount = token.balanceOf(address(this));\r\n\r\n        if (amount != 0) {\r\n            require (amount <= claimAmount,\r\n                \"balance too low\"\r\n            );\r\n            claimAmount = amount;\r\n        }\r\n\r\n        require(token.transfer(\r\n            receiver,\r\n            claimAmount),\r\n            \"transfer failed\"\r\n        );\r\n    }\r\n}","ABI":"[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract iWETH\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"WethHelper","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://690c2478e92a7a63e233f69f5454becbe741455d21a512a2a8ddeed06b4ef47a"}]}