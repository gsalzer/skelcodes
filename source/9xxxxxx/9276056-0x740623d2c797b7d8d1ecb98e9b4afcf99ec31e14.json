{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.5.10;\r\n \r\ninterface IERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function approve(address spender, uint256 value) external returns (bool);\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n \r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n \r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n \r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n \r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n \r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n \r\n  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\r\n    uint256 c = add(a,m);\r\n    uint256 d = sub(c,1);\r\n    return mul(div(d,m),m);\r\n  }\r\n}\r\n\r\ncontract Owned {\r\n  address public owner;\r\n  address public newOwner;\r\n\r\n  event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    newOwner = _newOwner;\r\n  }\r\n  function acceptOwnership() public {\r\n    require(msg.sender == newOwner);\r\n    emit OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n    newOwner = address(0);\r\n  }\r\n}\r\n\r\ncontract ERC20Detailed is IERC20, Owned {\r\n \r\n  uint8 private _Tokendecimals;\r\n  string private _Tokenname;\r\n  string private _Tokensymbol;\r\n \r\n  constructor(string memory name, string memory symbol, uint8 decimals) public {\r\n   \r\n   _Tokendecimals = decimals;\r\n    _Tokenname = name;\r\n    _Tokensymbol = symbol;\r\n   \r\n  }\r\n \r\n  function name() public view returns(string memory) {\r\n    return _Tokenname;\r\n  }\r\n \r\n  function symbol() public view returns(string memory) {\r\n    return _Tokensymbol;\r\n  }\r\n \r\n  function decimals() public view returns(uint8) {\r\n    return _Tokendecimals;\r\n  }\r\n}\r\n\r\ncontract DoYourTip is ERC20Detailed {\r\n \r\n  using SafeMath for uint256;\r\n  mapping (address => uint256) private _DoYourTipTokenBalances;\r\n  mapping (address => mapping (address => uint256)) private _allowed;\r\n  string constant tokenName = \"DoYourTip\";\r\n  string constant tokenSymbol = \"DYT\";\r\n  uint8  constant tokenDecimals = 18;\r\n  uint256 _totalSupply = 2000000000000000000000000;\r\n  \r\n  mapping (address => bool) private _DoYourTipTokenWhitelistAddrs;\r\n  bool _burningFlag = true;\r\n \r\n  constructor() public payable ERC20Detailed(tokenName, tokenSymbol, tokenDecimals) {\r\n    _mint(msg.sender, _totalSupply);\r\n  }\r\n \r\n  function totalSupply() public view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n \r\n  function balanceOf(address owner) public view returns (uint256) {\r\n    return _DoYourTipTokenBalances[owner];\r\n  }\r\n \r\n  function allowance(address owner, address spender) public view returns (uint256) {\r\n    return _allowed[owner][spender];\r\n  }\r\n \r\n  function transfer(address to, uint256 value) public returns (bool) {\r\n    require(value <= _DoYourTipTokenBalances[msg.sender]);\r\n    require(to != address(0));\r\n    \r\n    uint256 DoYourTipTokenDecay = 0;\r\n    uint256 tokensToTransfer = value;\r\n    \r\n    bool burnSomeDYT = ((_burningFlag) && (_DoYourTipTokenWhitelistAddrs[to] != true) && (_DoYourTipTokenWhitelistAddrs[msg.sender] != true));\r\n    \r\n    if(burnSomeDYT) {\r\n        DoYourTipTokenDecay = value.div(50);\r\n        tokensToTransfer = value.sub(DoYourTipTokenDecay);\r\n    }\r\n    _DoYourTipTokenBalances[msg.sender] = _DoYourTipTokenBalances[msg.sender].sub(value);\r\n    _DoYourTipTokenBalances[to] = _DoYourTipTokenBalances[to].add(tokensToTransfer);\r\n    \r\n    if(burnSomeDYT) {\r\n        _totalSupply = _totalSupply.sub(DoYourTipTokenDecay);\r\n        emit Transfer(msg.sender, address(0), DoYourTipTokenDecay);\r\n    }\r\n    emit Transfer(msg.sender, to, tokensToTransfer);\r\n    return true;\r\n  }\r\n \r\n  function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {\r\n    for (uint256 i = 0; i < receivers.length; i++) {\r\n      transfer(receivers[i], amounts[i]);\r\n    }\r\n  }\r\n \r\n  function approve(address spender, uint256 value) public returns (bool) {\r\n    require(spender != address(0));\r\n    _allowed[msg.sender][spender] = value;\r\n    emit Approval(msg.sender, spender, value);\r\n    return true;\r\n  }\r\n \r\n  function transferFrom(address from, address to, uint256 value) public returns (bool) {\r\n    require(value <= _DoYourTipTokenBalances[from]);\r\n    require(value <= _allowed[from][msg.sender]);\r\n    require(to != address(0));\r\n \r\n    _DoYourTipTokenBalances[from] = _DoYourTipTokenBalances[from].sub(value);\r\n    \r\n    uint256 DoYourTipTokenDecay = 0;\r\n    uint256 tokensToTransfer = value;\r\n    bool burnSomeDYT = ((_burningFlag) && (_DoYourTipTokenWhitelistAddrs[to] != true) && (_DoYourTipTokenWhitelistAddrs[msg.sender] != true));\r\n    \r\n    if(burnSomeDYT) {\r\n        DoYourTipTokenDecay = value.div(50);\r\n        tokensToTransfer = value.sub(DoYourTipTokenDecay);\r\n    }\r\n \r\n    _DoYourTipTokenBalances[to] = _DoYourTipTokenBalances[to].add(tokensToTransfer);\r\n    _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\r\n \r\n    emit Transfer(from, to, tokensToTransfer);\r\n    \r\n    if(burnSomeDYT) {\r\n        _totalSupply = _totalSupply.sub(DoYourTipTokenDecay);\r\n        emit Transfer(from, address(0), DoYourTipTokenDecay);\r\n    }\r\n    return true;\r\n  }\r\n \r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    require(spender != address(0));\r\n    _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].add(addedValue));\r\n    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n    return true;\r\n  }\r\n \r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    require(spender != address(0));\r\n    _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].sub(subtractedValue));\r\n    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n    return true;\r\n  }\r\n \r\n  function _mint(address account, uint256 amount) internal {\r\n    require(amount != 0);\r\n    _DoYourTipTokenBalances[account] = _DoYourTipTokenBalances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n \r\n  function burn(uint256 amount) external {\r\n    _burn(msg.sender, amount);\r\n  }\r\n \r\n  function _burn(address account, uint256 amount) internal {\r\n    require(amount != 0);\r\n    require(amount <= _DoYourTipTokenBalances[account]);\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    _DoYourTipTokenBalances[account] = _DoYourTipTokenBalances[account].sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n \r\n  function burnFrom(address account, uint256 amount) external {\r\n    require(amount <= _allowed[account][msg.sender]);\r\n    _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(amount);\r\n    _burn(account, amount);\r\n  }\r\n  \r\n  //OWNER ONLY FUNCTIONS\r\n\r\n  function addWhitelist(address user) public onlyOwner() {\r\n    require(_DoYourTipTokenWhitelistAddrs[user] != true);\r\n    _DoYourTipTokenWhitelistAddrs[user] = true;\r\n  }\r\n  \r\n  function removeWhitelist(address user) public onlyOwner() {\r\n    require(_DoYourTipTokenWhitelistAddrs[user] == true);\r\n    delete _DoYourTipTokenWhitelistAddrs[user];\r\n  }\r\n\r\n  function turnBurningOn() public onlyOwner() {\r\n    _burningFlag = true;\r\n  }\r\n\r\n  function turnBurningOff() public onlyOwner() {\r\n    _burningFlag = false;\r\n  }\r\n\r\n}","ABI":"[{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"turnBurningOff\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"turnBurningOn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DoYourTip","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://2a2293cc3443224cfe330886e7e72bfe41fdda2faba5c99de7420e0dbbb0734a"}]}