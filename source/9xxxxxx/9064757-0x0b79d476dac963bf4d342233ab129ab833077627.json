{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\n/*******************************************************************************\r\n *\r\n * Copyright (c) 2019 Modenero Corp.\r\n * Released under the MIT License.\r\n *\r\n * ModeneroDb - An eternal database, providing a sustainable storage solution\r\n *              for use throughout the upgrade lifecycle of managing contracts.\r\n *\r\n * Version 19.12.7\r\n *\r\n * https://modenero.com\r\n * support@modenero.com\r\n */\r\n\r\n\r\n/*******************************************************************************\r\n * Owned contract\r\n */\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n\r\n        emit OwnershipTransferred(owner, newOwner);\r\n\r\n        owner = newOwner;\r\n\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\n\r\n/*******************************************************************************\r\n * Modenero Db Contract\r\n */\r\ncontract ModeneroDb is Owned {\r\n    /* Initialize all storage types. */\r\n    mapping(bytes32 => address)    private addressStorage;\r\n    mapping(bytes32 => bool)       private boolStorage;\r\n    mapping(bytes32 => bytes)      private bytesStorage;\r\n    mapping(bytes32 => int256)     private intStorage;\r\n    mapping(bytes32 => string)     private stringStorage;\r\n    mapping(bytes32 => uint256)    private uIntStorage;\r\n\r\n    /**\r\n     * @dev Only allow access from the latest version of a Modenero contract\r\n     *      or authorized Modnenero administrator.\r\n     */\r\n    modifier onlyAuthByModenero() {\r\n        /***********************************************************************\r\n         * The owner is only allowed to set the authorized contracts upon\r\n         * deployment, to register the initial contracts, afterwards their\r\n         * direct access is permanently disabled.\r\n         */\r\n        if (msg.sender == owner) {\r\n            /* Verify owner's write access has not already been disabled. */\r\n            require(boolStorage[keccak256(\r\n                abi.encodePacked('owner.auth.disabled'))] != true);\r\n        } else {\r\n            /* Verify write access is only permitted to authorized accounts. */\r\n            require(boolStorage[keccak256(\r\n                abi.encodePacked(msg.sender, '.has.auth'))] == true);\r\n        }\r\n\r\n        _;      // function code is inserted here\r\n    }\r\n\r\n    /***************************************************************************\r\n     * Initialize all getter methods.\r\n     */\r\n\r\n    /// @param _key The key for the record\r\n    function getAddress(bytes32 _key) external view returns (address) {\r\n        return addressStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function getBool(bytes32 _key) external view returns (bool) {\r\n        return boolStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function getBytes(bytes32 _key) external view returns (bytes memory) {\r\n        return bytesStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function getInt(bytes32 _key) external view returns (int) {\r\n        return intStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function getString(bytes32 _key) external view returns (string memory) {\r\n        return stringStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function getUint(bytes32 _key) external view returns (uint) {\r\n        return uIntStorage[_key];\r\n    }\r\n\r\n\r\n    /***************************************************************************\r\n     * Initialize all setter methods.\r\n     */\r\n\r\n    /// @param _key The key for the record\r\n    function setAddress(bytes32 _key, address _value) onlyAuthByModenero external {\r\n        addressStorage[_key] = _value;\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function setBool(bytes32 _key, bool _value) onlyAuthByModenero external {\r\n        boolStorage[_key] = _value;\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function setBytes(bytes32 _key, bytes calldata _value) onlyAuthByModenero external {\r\n        bytesStorage[_key] = _value;\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function setInt(bytes32 _key, int _value) onlyAuthByModenero external {\r\n        intStorage[_key] = _value;\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function setString(bytes32 _key, string calldata _value) onlyAuthByModenero external {\r\n        stringStorage[_key] = _value;\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function setUint(bytes32 _key, uint _value) onlyAuthByModenero external {\r\n        uIntStorage[_key] = _value;\r\n    }\r\n\r\n\r\n    /***************************************************************************\r\n     * Initialize all delete methods.\r\n     */\r\n\r\n    /// @param _key The key for the record\r\n    function deleteAddress(bytes32 _key) onlyAuthByModenero external {\r\n        delete addressStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function deleteBool(bytes32 _key) onlyAuthByModenero external {\r\n        delete boolStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function deleteBytes(bytes32 _key) onlyAuthByModenero external {\r\n        delete bytesStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function deleteInt(bytes32 _key) onlyAuthByModenero external {\r\n        delete intStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function deleteString(bytes32 _key) onlyAuthByModenero external {\r\n        delete stringStorage[_key];\r\n    }\r\n\r\n    /// @param _key The key for the record\r\n    function deleteUint(bytes32 _key) onlyAuthByModenero external {\r\n        delete uIntStorage[_key];\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteBool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"bytes\"}],\"name\":\"setBytes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"int256\"}],\"name\":\"setInt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteBytes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"string\"}],\"name\":\"setString\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getBool\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteInt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setBool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getUint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getBytes\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getInt\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setUint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteUint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"deleteString\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"ModeneroDb","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://78c64b62326656669d8307afbef9edcf0319d328c73711b37070cc6d21b5d8ee"}]}