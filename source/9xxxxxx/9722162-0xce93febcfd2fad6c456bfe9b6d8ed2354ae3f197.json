{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\n\r\n/**\r\n * @title ConnectAuth.\r\n * @dev Connector For Adding Auth.\r\n */\r\n\r\ninterface AccountInterface {\r\n    function enable(address user) external;\r\n    function disable(address user) external;\r\n}\r\n\r\ninterface EventInterface {\r\n    function emitEvent(uint _connectorType, uint _connectorID, bytes32 _eventCode, bytes calldata _eventData) external;\r\n}\r\n\r\n\r\ncontract Basics {\r\n\r\n    /**\r\n     * @dev Return InstaEvent Address.\r\n     */\r\n    function getEventAddr() public pure returns (address) {\r\n        return 0x3Df02A43dEE6cDDC1060ff95122548621622fbD1;\r\n    }\r\n\r\n     /**\r\n     * @dev Connector ID and Type.\r\n     */\r\n    function connectorID() public pure returns(uint _type, uint _id) {\r\n        (_type, _id) = (1, 1);\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract Auth is Basics {\r\n\r\n    event LogAddAuth(address indexed _msgSender, address indexed _auth);\r\n    event LogRemoveAuth(address indexed _msgSender, address indexed _auth);\r\n\r\n    /**\r\n     * @dev Add New Owner\r\n     * @param user User Address.\r\n     */\r\n    function addModule(address user) public payable {\r\n        AccountInterface(address(this)).enable(user);\r\n\r\n        emit LogAddAuth(msg.sender, user);\r\n\r\n        bytes32 _eventCode = keccak256(\"LogAddAuth(address,address)\");\r\n        bytes memory _eventParam = abi.encode(msg.sender, user);\r\n        (uint _type, uint _id) = connectorID();\r\n        EventInterface(getEventAddr()).emitEvent(_type, _id, _eventCode, _eventParam);\r\n    }\r\n\r\n    /**\r\n     * @dev Remove New Owner\r\n     * @param user User Address.\r\n     */\r\n    function removeModule(address user) public payable {\r\n        AccountInterface(address(this)).disable(user);\r\n\r\n        emit LogRemoveAuth(msg.sender, user);\r\n\r\n        bytes32 _eventCode = keccak256(\"LogRemoveAuth(address,address)\");\r\n        bytes memory _eventParam = abi.encode(msg.sender, user);\r\n        (uint _type, uint _id) = connectorID();\r\n        EventInterface(getEventAddr()).emitEvent(_type, _id, _eventCode, _eventParam);\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract ConnectAuth is Auth {\r\n    string public constant name = \"Auth-v1\";\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_msgSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_auth\",\"type\":\"address\"}],\"name\":\"LogAddAuth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_msgSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_auth\",\"type\":\"address\"}],\"name\":\"LogRemoveAuth\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addModule\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"connectorID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEventAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeModule\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"ConnectAuth","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"ipfs://1b74e842d19723456b49f66ae811c4b5287a6174fa0499498b190b89fca27f80"}]}