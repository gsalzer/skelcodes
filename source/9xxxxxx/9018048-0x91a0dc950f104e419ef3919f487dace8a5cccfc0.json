{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts\\interfaces\\IAdmin.sol\r\n\r\npragma solidity ^0.4.24;\r\n\r\n/**\r\n * @dev Interface for System Config admin.\r\n */\r\ncontract IAdmin\r\n{\r\n\tfunction isAdmin(address _account) public view returns (bool);\r\n\t\r\n\tfunction addAdmin(address _account) public;\r\n\t\r\n\tfunction removeAdmin(address _account) public;\r\n\t\r\n    function renounceAdmin() public;\r\n}\r\n\r\n// File: contracts\\Owned.sol\r\n\r\npragma solidity ^0.4.24;\r\n\r\n/**\r\n * @dev Contract used to give other contracts ownership rights and management features.\r\n * based on:\r\n * https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol\r\n */\r\ncontract Owned {\r\n\t\r\n    address public owner;\r\n    address public newOwner;\r\n\t\r\n\t/**\r\n\t * @dev Event raised when ownership was transfered to a different address.\r\n\t * @param _from Current owner address we transfer ownership from\r\n\t * @param _to New owner address that just acquired ownership\r\n\t */\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * @dev Constructor\r\n\t */\r\n    constructor() internal {\r\n        owner = msg.sender;\r\n\t\temit OwnershipTransferred(address(0), owner);\r\n    }\r\n\t\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"Owner required\");\r\n        _;\r\n    }\r\n\t\r\n\t/**\r\n\t * @dev Transfer ownership function\r\n\t * @param _newOwner New owner address acquiring ownership of contract\r\n\t */\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n\t\r\n\t/**\r\n\t * @dev New owner pending to accept ownership executes this function to confirm his ownership.\r\n\t */\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner, \"Owned: Only user with pending ownership acceptance can accept ownership!\");\r\n\t\t\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        \r\n\t\towner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\n// File: contracts\\Named.sol\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n/**\r\n * @dev Contract used to give a name to implementing contract.\r\n */\r\ncontract Named is Owned\r\n{\r\n\tbytes32 public name;\r\n\t\r\n\t/**\r\n\t * @dev Event raised when name was changed.\r\n\t * @param _owner Contract owner performing the operation.\r\n\t * @param _newName New name given to contract.\r\n\t */\r\n\tevent NameChanged(address indexed _owner, bytes32 _newName);\r\n    \r\n\t\r\n\t\r\n\t/**\r\n\t * @dev Constructor\r\n\t */\r\n    constructor() internal {\r\n\t\tname = \"\";\r\n    }\r\n\t\r\n    /**\r\n\t * @dev Change contract name, only admin can do it.\r\n\t * @param _newName New name given to contract.\r\n\t */\r\n    function setName(bytes32 _newName) public onlyOwner returns (bool success) {\r\n\t\tif (name != _newName) {\r\n\t\t\tname = _newName;\r\n\t\t\temit NameChanged(msg.sender, _newName);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n    }\r\n}\r\n\r\n// File: contracts\\Admin.sol\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n\r\n\r\ncontract Admin is IAdmin\r\n\t, Owned\r\n\t, Named\r\n{\r\n\t/**\r\n\t * @dev Event is raised when a new admin was added.\r\n\t * @param admin Admin address performing the operation.\r\n\t * @param account New admin address added.\r\n\t */\r\n\tevent AdminAdded(address indexed admin, address indexed account);\r\n\t\r\n\t/**\r\n\t * @dev Event is raised when admin was removed.\r\n\t * @param admin Admin address performing the operation.\r\n\t * @param account Admin address being removed.\r\n\t */\r\n    event AdminRemoved(address indexed admin, address indexed account);\r\n\t\r\n\t/**\r\n\t * @dev Event is raised when admin renounces to his admin role.\r\n\t * @param account Admin address renouncing to his admin role.\r\n\t */\r\n\tevent AdminRenounced(address indexed account);\r\n\t\r\n\t\r\n\t\r\n\tmapping(address => bool) public admin;\r\n\t\r\n\tconstructor()\r\n\t\tOwned()\r\n\t\tpublic\r\n\t{\r\n\t\taddAdmin(msg.sender);\r\n\t\tname = \"Fiatech admins\";\r\n\t}\r\n\t\r\n\tmodifier onlyAdmin() {\r\n\t\trequire(admin[msg.sender], \"Admin required\");\r\n\t\t_;\r\n\t}\r\n\t\r\n\tfunction isAdmin(address _account) public view returns (bool) {\r\n\t\treturn admin[_account];\r\n\t}\r\n\t\r\n\tfunction addAdmin(address _account) public onlyOwner {\r\n\t\trequire(_account != address(0));\r\n\t\trequire(!admin[_account], \"Admin already added\");\r\n\t\tadmin[_account] = true;\r\n\t\temit AdminAdded(msg.sender, _account);\r\n\t}\r\n\t\r\n\tfunction removeAdmin(address _account) public onlyOwner {\r\n\t\trequire(_account != address(0));\r\n\t\trequire(_account != owner, \"Owner can not remove his admin role\");\r\n\t\trequire(admin[_account], \"Remove admin only\");\r\n\t\tadmin[_account] = false;\r\n\t\temit AdminRemoved(msg.sender, _account);\r\n\t}\r\n\t\r\n\tfunction renounceAdmin() public {\r\n\t\trequire(msg.sender != owner, \"Owner can not renounce to his admin role\");\r\n\t\trequire(admin[msg.sender], \"Renounce admin only\");\r\n\t\tadmin[msg.sender] = false;\r\n\t\temit AdminRenounced(msg.sender);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newName\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AdminRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newName\",\"type\":\"bytes32\"}],\"name\":\"NameChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"Admin","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://0d44f192262cda9eb5066f92118ae8d6668629c1641d42284c3d20c57bc9272c"}]}