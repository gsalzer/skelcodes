{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2019-12-16\r\n*/\r\n\r\npragma solidity ^0.4.26;\r\n\r\n\r\n// Defined Owned Contract\r\ncontract Owned {\r\n    \r\n    //Setting Contract Creator As Owner via Constructor\r\n    constructor() public { owner = msg.sender; }\r\n    address owner;\r\n\r\n    //Changing Owner\r\n    modifier onlyOwner {\r\n        require(\r\n            msg.sender == owner,\r\n            \"Only owner can call this function.\"\r\n        );\r\n        _;\r\n    }\r\n}\r\n\r\n// Defined Generic ERC-20 Contract Functions\r\n\r\ninterface ERC20Interface {\r\n    function totalSupply() external constant returns (uint);\r\n    function balanceOf(address tokenOwner) external constant returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) external constant returns (uint remaining);\r\n    function transfer(address to, uint tokens) external returns (bool success);\r\n    function approve(address spender, uint tokens) external returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) external returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n\r\n// Defined JOBTokenMultiDrop Contract\r\n\r\ncontract JOBTokenMultiDrop is Owned{\r\n\r\n    // Withdraw Tokens from JOBTokenMultiDrop Contract\r\n    function withdrawTokens(address tokenContractAddress, uint tokens) public onlyOwner returns (bool success) {\r\n        return ERC20Interface(tokenContractAddress).transfer(msg.sender, tokens);\r\n    }\r\n    \r\n    function multiDropSameQty(address tokenContractAddress, uint tokens, address[] userAddresses) public onlyOwner\r\n    {\r\n        for (uint i=0; i<userAddresses.length; i++) {\r\n            ERC20Interface(tokenContractAddress).transfer(userAddresses[i], tokens);\r\n        }\r\n    }\r\n    \r\n    function multiDropSameQty(address tokenContractAddress, uint[] tokens, address[] userAddresses) public onlyOwner\r\n    {\r\n        for (uint i=0; i<userAddresses.length; i++) {\r\n            ERC20Interface(tokenContractAddress).transfer(userAddresses[i], tokens[i]);\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"tokenContractAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenContractAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"userAddresses\",\"type\":\"address[]\"}],\"name\":\"multiDropSameQty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenContractAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256[]\"},{\"name\":\"userAddresses\",\"type\":\"address[]\"}],\"name\":\"multiDropSameQty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"JOBTokenMultiDrop","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://a03eb5d93318a83009484cce6f23e3cb59f5c4d7ccfb375d113eeb3a3480c23a"}]}