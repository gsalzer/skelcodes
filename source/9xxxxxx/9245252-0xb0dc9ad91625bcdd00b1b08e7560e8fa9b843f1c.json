{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * Source Code first verified at www.betbeb.com on Thursday, July 6, 2020\r\n (UTC) */\r\n\r\npragma solidity ^0.4.24;\r\n\r\n/**\r\n * Math operations with safety checks\r\n */\r\n interface tokenTransfer {\r\n    function transfer(address receiver, uint amount);\r\n    function transferFrom(address _from, address _to, uint256 _value);\r\n    function balanceOf(address receiver) returns(uint256);\r\n}\r\ninterface tokenTransfers {\r\n    function transfer(address receiver, uint amount);\r\n    function transferFrom(address _from, address _to, uint256 _value);\r\n    function balanceOf(address receiver) returns(uint256);\r\n}\r\ncontract SafeMath {\r\n  function safeMul(uint256 a, uint256 b) internal returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint256 a, uint256 b) internal returns (uint256) {\r\n    assert(b > 0);\r\n    uint256 c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint256 a, uint256 b) internal returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint256 a, uint256 b) internal returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n  function assert(bool assertion) internal {\r\n    if (!assertion) {\r\n      throw;\r\n    }\r\n  }\r\n}\r\ncontract bitbeb is SafeMath{\r\n    tokenTransfer public bebTokenTransfer; //BEB 1.0代币 \r\n    tokenTransfers public bebTokenTransfers; //BEB 2.0代币 \r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n\taddress public owner;\r\n\tuint256 Destruction;//销毁数量\r\n\tuint256 BEBPrice;//初始价格0.00007142ETH\r\n\tuint256 RiseTime;//上涨时间\r\n\tuint256 attenuation;//衰减\r\n\tuint256 exchangeRate;//汇率默认1:14000\r\n\tuint256 TotalMachine;//矿机总量\r\n\tuint256 AccumulatedDays;//创世至今天数\r\n\tuint256 sumExbeb;//总流通\r\n\tuint256 BebAirdrop;//BEB空投\r\n\tuint256 AirdropSum;//空投冻结总量\r\n\tuint256 TimeDay;\r\n\taddress[] public Airdrops;\r\n\tstruct MinUser{\r\n         uint256 amount;//累计收益\r\n         uint256 MiningMachine;//矿机\r\n         uint256 WithdrawalTime;//取款时间\r\n         uint256 PendingRevenue;//待收益\r\n         uint256 dayRevenue;//日收益\r\n     }\r\n\r\n    /* This creates an array with all balances */\r\n    mapping (address=>MinUser) public MinUsers;\r\n    mapping (address=>uint256) public locking;//锁定\r\n    mapping (address => uint256) public balanceOf;\r\n\tmapping (address => uint256) public freezeOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    /* This generates a public event on the blockchain that will notify clients */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /* This notifies clients about the amount burnt */\r\n    event Burn(address indexed from, uint256 value);\r\n\t\r\n\t/* This notifies clients about the amount frozen */\r\n    event Freeze(address indexed from, uint256 value);\r\n\t\r\n\t/* This notifies clients about the amount unfrozen */\r\n    event Unfreeze(address indexed from, uint256 value);\r\n\r\n    /* Initializes contract with initial supply tokens to the creator of the contract */\r\n    function bitbeb(\r\n        uint256 initialSupply,\r\n        string tokenName,\r\n        uint8 decimalUnits,\r\n        string tokenSymbol,\r\n        address _tokenAddress\r\n        ) {\r\n        name = tokenName; // Set the name for display purposes\r\n        symbol = tokenSymbol; // Set the symbol for display purposes\r\n        decimals = decimalUnits;  \r\n        totalSupply = initialSupply * 10 ** uint256(decimals);\r\n        balanceOf[address(this)] = totalSupply;  // Amount of decimals for display purposes\r\n\t\towner = msg.sender;\r\n\t\tbebTokenTransfer = tokenTransfer(_tokenAddress);\r\n\t\tRiseTime=1578725653;//BEB价格初始化开始上涨时间\r\n\t\tBebAirdrop=388* 10 ** uint256(decimals);//初始空投388BEB\r\n\t\tBEBPrice=166600000000000;//初始价格0.0001666 ETH\r\n\t\texchangeRate=6002;\r\n\t\tattenuation=5;\r\n\t\tTimeDay=86400;\r\n    }\r\n\r\n    /* Send coins */\r\n    function transfer(address _to, uint256 _value) {\r\n        require(locking[msg.sender]==0,\"Please activate on the website www.exbeb.com\");\r\n        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead\r\n\t\tif (_value <= 0) throw; \r\n        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough\r\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows\r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);                     // Subtract from the sender\r\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);                            // Add the same to the recipient\r\n        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place\r\n    }\r\n    /* Allow another contract to spend some tokens in your behalf */\r\n    function approve(address _spender, uint256 _value)\r\n        returns (bool success) {\r\n\t\tif (_value <= 0) throw; \r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n       \r\n\r\n    /* A contract attempts to get the coins */\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        require(locking[msg.sender]==0,\"Please activate on the website www.exbeb.com\");\r\n        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead\r\n\t\tif (_value <= 0) throw; \r\n        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough\r\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows\r\n        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance\r\n        balanceOf[_from] = SafeMath.safeSub(balanceOf[_from], _value);                           // Subtract from the sender\r\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);                             // Add the same to the recipient\r\n        allowance[_from][msg.sender] = SafeMath.safeSub(allowance[_from][msg.sender], _value);\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function burn(uint256 _value) returns (bool success) {\r\n        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough\r\n\t\tif (_value <= 0) throw; \r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);                      // Subtract from the sender\r\n        totalSupply = SafeMath.safeSub(totalSupply,_value);                                // Updates totalSupply\r\n        Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\t\r\n\tfunction freeze(uint256 _value) returns (bool success) {\r\n\t    require(locking[msg.sender]==0,\"Please activate on the website www.exbeb.com\");\r\n        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough\r\n\t\tif (_value <= 0) throw; \r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);                      // Subtract from the sender\r\n        freezeOf[msg.sender] = SafeMath.safeAdd(freezeOf[msg.sender], _value);                                // Updates totalSupply\r\n        Freeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n\t\r\n\tfunction unfreeze(uint256 _value) returns (bool success) {\r\n\t    require(locking[msg.sender]==0,\"Please activate on the website www.exbeb.com\");\r\n        if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough\r\n\t\tif (_value <= 0) throw; \r\n        freezeOf[msg.sender] = SafeMath.safeSub(freezeOf[msg.sender], _value);                      // Subtract from the sender\r\n\t\tbalanceOf[msg.sender] = SafeMath.safeAdd(balanceOf[msg.sender], _value);\r\n        Unfreeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n    //以下是矿机函数\r\n    function IntoBebMiner(uint256 _value)public{\r\n        if(_value<=0)throw;\r\n        require(_value>=1 ether*exchangeRate,\"BEB The sum is too small\");\r\n        MinUser storage _user=MinUsers[msg.sender];\r\n        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough\r\n        uint256 _miner=SafeMath.safeDiv(_value,exchangeRate);\r\n        balanceOf[msg.sender]=SafeMath.safeSub(balanceOf[msg.sender], _value);\r\n        if(locking[msg.sender]>0){\r\n           if(locking[msg.sender]==1){\r\n            uint256 _shouyi=SafeMath.safeDiv(24000 ether,TotalMachine);\r\n            uint256 _time=SafeMath.safeSub(now, _user.WithdrawalTime);//计算出时间\r\n            uint256 _days=_time/TimeDay;\r\n            if(_days>0){\r\n                uint256 _sumshouyi=SafeMath.safeMul(1000000000000000000,_shouyi);\r\n                uint256 _BEBsumshouyi=SafeMath.safeMul(_sumshouyi,_days);\r\n                bebTokenTransfers.transfer(msg.sender,_BEBsumshouyi);\r\n                sumExbeb=SafeMath.safeAdd(sumExbeb,_sumshouyi); \r\n            }\r\n          }else{\r\n            sumExbeb=SafeMath.safeAdd(sumExbeb,locking[msg.sender]); \r\n            //AirdropjieDong=SafeMath.safeAdd(AirdropjieDong,locking[msg.sender]);//空投解冻\r\n            locking[msg.sender]=0;\r\n          }   \r\n        }\r\n         _user.MiningMachine=SafeMath.safeAdd(_user.MiningMachine,_miner);\r\n        _user.WithdrawalTime=now;\r\n        locking[msg.sender]=0;\r\n        totalSupply=SafeMath.safeSub(totalSupply, _value);//销毁\r\n        TotalMachine=SafeMath.safeAdd(TotalMachine,_miner);\r\n        Destruction=SafeMath.safeAdd(Destruction, _value);//销毁数量增加\r\n        sumExbeb=SafeMath.safeSub(sumExbeb,_value);\r\n        Burn(msg.sender, _value);   \r\n    }\r\n    function MinerToBeb()public{\r\n        if(now-RiseTime>TimeDay){\r\n            RiseTime=SafeMath.safeAdd(RiseTime,TimeDay);\r\n            BEBPrice=SafeMath.safeAdd(BEBPrice,660000000000);//每日固定上涨0.00000066ETH\r\n            AccumulatedDays+=1;//计算BEB创始天数\r\n            exchangeRate=SafeMath.safeDiv(1 ether,BEBPrice);\r\n        }\r\n        MinUser storage _user=MinUsers[msg.sender];\r\n        if(_user.MiningMachine>1000000000000000000){\r\n            if(locking[msg.sender]>1){\r\n               sumExbeb=SafeMath.safeAdd(sumExbeb,locking[msg.sender]); \r\n               locking[msg.sender]=0;\r\n            }\r\n        }\r\n        require(_user.MiningMachine>0,\"You don't have a miner\");\r\n        require(locking[msg.sender]==0,\"Please activate on the website www.exbeb.com\");\r\n        //判断用户是不是免费矿机或者空投用户，如果是返回，需要购买矿机后解锁\r\n        uint256 _miners=_user.MiningMachine;\r\n        uint256 _times=SafeMath.safeSub(now, _user.WithdrawalTime);\r\n        require(_times>TimeDay,\"No withdrawal for less than 24 hours\");\r\n        uint256 _days=SafeMath.safeDiv(_times,TimeDay);//计算总天数\r\n        uint256 _shouyi=SafeMath.safeDiv(240000 ether,TotalMachine);//计算每台矿机每天收益\r\n        uint256 _dayshouyi=SafeMath.safeMul(_miners,_shouyi);\r\n        //uint256 _daysumshouyi=SafeMath.safeDiv(_dayshouyi,1 ether);//计算用户每天总收益\r\n        uint256 _aaaa=SafeMath.safeMul(_dayshouyi,_days);\r\n            uint256 _attenuation=_miners*5/1000*_days;//计算每天衰减量\r\n            bebTokenTransfers.transfer(msg.sender,_aaaa);\r\n           _user.MiningMachine=SafeMath.safeSub( _user.MiningMachine,_attenuation);\r\n           _user.WithdrawalTime=now;\r\n           sumExbeb=SafeMath.safeAdd(sumExbeb,_aaaa);\r\n           TotalMachine=SafeMath.safeSub(TotalMachine,_attenuation);\r\n           _user.amount=SafeMath.safeAdd( _user.amount,_aaaa);\r\n    }\r\n    function FreeMiningMachine()public{\r\n        if(now-RiseTime>TimeDay){\r\n            RiseTime=SafeMath.safeAdd(RiseTime,TimeDay);\r\n            BEBPrice=SafeMath.safeAdd(BEBPrice,660000000000);//每日固定上涨0.00000066ETH\r\n            AccumulatedDays+=1;//计算BEB创始天数\r\n            exchangeRate=SafeMath.safeDiv(1 ether,BEBPrice);\r\n        }\r\n        require(locking[msg.sender]==0,\"Please activate on the website www.exbeb.com\");\r\n        MinUser storage _user=MinUsers[msg.sender];\r\n        require(_user.MiningMachine==0,\"I can't get it. You already have a miner\");\r\n        //uint256 _miner=1000000000000000000;//0.1ETH\r\n        _user.MiningMachine=SafeMath.safeAdd(_user.MiningMachine,1000000000000000000);//增加0.1台矿机\r\n        _user.WithdrawalTime=now;\r\n        locking[msg.sender]=1;\r\n    }\r\n    //1.0 BEB兑换POS矿机\r\n    function OldBebToMiner(uint256 _value)public{\r\n      if(now<1582591205)throw;\r\n      uint256 _bebminer=SafeMath.safeDiv(_value,exchangeRate);\r\n      if(_bebminer<=0)throw;\r\n      MinUser storage _user=MinUsers[msg.sender];\r\n        bebTokenTransfer.transferFrom(msg.sender,address(this),_value);  \r\n        _user.MiningMachine=SafeMath.safeAdd(_user.MiningMachine,_bebminer);\r\n        _user.WithdrawalTime=now;\r\n        TotalMachine=SafeMath.safeAdd(TotalMachine,_bebminer);\r\n    }\r\n    //买BEB\r\n    function buyBeb(address _addr) payable public {\r\n        if(now-RiseTime>TimeDay){\r\n            RiseTime=SafeMath.safeAdd(RiseTime,TimeDay);\r\n            BEBPrice=SafeMath.safeAdd(BEBPrice,660000000000);//每日固定上涨0.00000066ETH\r\n            AccumulatedDays+=1;//计算BEB创始天数\r\n            exchangeRate=SafeMath.safeDiv(1 ether,BEBPrice);\r\n        }\r\n        uint256 amount = msg.value;\r\n        if(amount<=0)throw;\r\n        uint256 bebamountub=SafeMath.safeMul(amount,exchangeRate);\r\n        //require(bebamountub<=buyTota,\"Exceeded the maximum quantity available for sale\");\r\n        uint256 _transfer=amount*2/100;\r\n        uint256 _bebtoeth=amount*98/100;\r\n       require(balanceOf[_addr]>=bebamountub,\"Sorry, your credit is running low\");\r\n       bebTokenTransfers.transferFrom(_addr,msg.sender,bebamountub);\r\n        owner.transfer(_transfer);//支付2%手续费给项目方\r\n        _addr.transfer(_bebtoeth);\r\n        //sellTota=SafeMath.safeAdd(sellTota,bebamountub);\r\n       // buyTota=SafeMath.safeSub(buyTota,bebamountub);\r\n    }\r\n    // sellbeb-eth\r\n    function sellBeb(uint256 _sellbeb)public {\r\n        if(now-RiseTime>TimeDay){\r\n            RiseTime=SafeMath.safeAdd(RiseTime,TimeDay);\r\n            BEBPrice=SafeMath.safeAdd(BEBPrice,660000000000);//每日固定上涨0.00000066ETH\r\n            AccumulatedDays+=1;//计算BEB创始天数\r\n            exchangeRate=SafeMath.safeDiv(1 ether,BEBPrice);\r\n        }\r\n         require(locking[msg.sender]==0,\"Please activate on the website www.exbeb.com\");\r\n         approve(address(this),_sellbeb);\r\n    }\r\n    //空投Airdrop\r\n    function AirdropBeb()public{\r\n        if(now-RiseTime>TimeDay){\r\n            RiseTime=SafeMath.safeAdd(RiseTime,TimeDay);\r\n            BEBPrice=SafeMath.safeAdd(BEBPrice,660000000000);//每日固定上涨0.00000066ETH\r\n            AccumulatedDays+=1;//计算BEB创始天数\r\n            exchangeRate=SafeMath.safeDiv(1 ether,BEBPrice);\r\n        }\r\n        MinUser storage _user=MinUsers[msg.sender];\r\n        require(_user.MiningMachine<=0);\r\n        require(locking[msg.sender]==0,\"Please activate on the website www.exbeb.com\");\r\n        uint256 _airbeb=SafeMath.safeMul(BebAirdrop,166600000000000);\r\n        BebAirdrop=SafeMath.safeDiv(_airbeb,BEBPrice);\r\n        bebTokenTransfers.transfer(msg.sender,BebAirdrop);//发送BEB\r\n        locking[msg.sender]=BebAirdrop;\r\n        AirdropSum=SafeMath.safeAdd(AirdropSum,BebAirdrop);\r\n    }\r\n    function setAddress(address[] _addr)public{\r\n        if(msg.sender != owner)throw;\r\n        Airdrops=_addr;\r\n    }\r\n    //执行空投\r\n    function batchAirdrop()public{\r\n        if(now<1586306405)throw;//2020年4月9日前可以使用这个空投函数\r\n        if(msg.sender != owner)throw;\r\n        for(uint i=0;i<Airdrops.length;i++){\r\n            bebTokenTransfers.transfer(Airdrops[i],BebAirdrop);\r\n            locking[Airdrops[i]]=BebAirdrop;\r\n        }\r\n    }\r\n    //初始化分配矿机\r\n    function setMiner(address _addr,uint256 _value)public{\r\n        if(msg.sender != owner)throw;\r\n        if(now>1580519056)throw;//2020年1月20日之后这个功能就不能使用了\r\n        MinUser storage _user=MinUsers[_addr];\r\n        _user.MiningMachine=_value;\r\n        _user.WithdrawalTime=now;\r\n        TotalMachine+=_value;\r\n    }\r\n    function setBebTokenTransfers(address _addr)public{\r\n        if(msg.sender != owner)throw;\r\n         if(now>1580519056)throw;//2020年1月20日之后这个功能就不能使用了\r\n        bebTokenTransfers=tokenTransfers(_addr);\r\n        \r\n    }\r\n    //个人查询总收益，矿机数量，取款时间，日收益\r\n    function getUser(address _addr)public view returns(uint256,uint256,uint256,uint256,uint256){\r\n            MinUser storage _user=MinUsers[_addr];\r\n            uint256 edays=240000 ether / TotalMachine;\r\n            uint256 _day=_user.MiningMachine*edays;\r\n         return (_user.amount,_user.MiningMachine,_user.WithdrawalTime,_day,(now-_user.WithdrawalTime)/TimeDay*_day);\r\n    }\r\n    function getQuanju()public view returns(uint256,uint256,uint256,uint256,uint256,uint256){\r\n        //uint256 Destruction;//销毁数量\r\n\t    //uint256 BEBPrice;//初始价格0.00007142ETH\r\n\t    //uint256 TotalMachine;//矿机总量\r\n\t    //uint256 AccumulatedDays;//创世至今天数\r\n\t    //uint256 sumExbeb;//BEB总流通\r\n\t    //uint256 BebAirdrop;//BEB每次空投数量\r\n            \r\n         return (TotalMachine,Destruction,sumExbeb,BEBPrice,AccumulatedDays,BebAirdrop);\r\n    }\r\n    function querBalance()public view returns(uint256){\r\n         return this.balance;\r\n     }\r\n     //项目方数据\r\n     function getowner()public view returns(uint256,uint256){ \r\n         MinUser storage _user=MinUsers[owner];\r\n         return (_user.MiningMachine,balanceOf[owner]);\r\n    }\r\n    //以上是矿机函数\r\n\t// can accept ether\r\n\tfunction() payable {\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"IntoBebMiner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getQuanju\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Airdrops\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bebTokenTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"FreeMiningMachine\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMiner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bebTokenTransfers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setBebTokenTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"querBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"MinerToBeb\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"buyBeb\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sellbeb\",\"type\":\"uint256\"}],\"name\":\"sellBeb\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"batchAirdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address[]\"}],\"name\":\"setAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"OldBebToMiner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"locking\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"MinUsers\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"MiningMachine\",\"type\":\"uint256\"},{\"name\":\"WithdrawalTime\",\"type\":\"uint256\"},{\"name\":\"PendingRevenue\",\"type\":\"uint256\"},{\"name\":\"dayRevenue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"AirdropBeb\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getowner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"}]","ContractName":"bitbeb","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000218711a0000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000e00000000000000000000000006798cc8ad079a7e663536f83ee26d63aabe03da9000000000000000000000000000000000000000000000000000000000000000a6265746265622e636f6d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034245420000000000000000000000000000000000000000000000000000000000","Library":"","LicenseType":"None","SwarmSource":"bzzr://78ce32dbd5db8235a46f6769edee3f265275abb75bbed221dd8637590389a581"}]}