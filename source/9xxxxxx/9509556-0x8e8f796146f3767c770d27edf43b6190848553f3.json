{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/home/julian/betx/betx-contracts/contracts/impl/SystemParameters.sol\": {\r\n      \"keccak256\": \"0xf3f93f3a6ed8bdbfc5819c12f2ffbd6a318fa2ce3b7e2a874e25c4831719c3f5\",\r\n      \"content\": \"pragma solidity 0.5.16;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../interfaces/permissions/IWhitelist.sol\\\";\\nimport \\\"../interfaces/ISystemParameters.sol\\\";\\n\\n\\n/// @title SystemParameters\\n/// @author Julian Wilson <julian@nextgenbt.com>\\n/// @notice Stores system parameters.\\ncontract SystemParameters is ISystemParameters {\\n    address private oracleFeeRecipient;\\n\\n    IWhitelist private systemParamsWhitelist;\\n\\n    constructor(IWhitelist _systemParamsWhitelist) public {\\n        systemParamsWhitelist = _systemParamsWhitelist;\\n    }\\n\\n    /// @notice Throws if the caller is not a system params admin.\\n    modifier onlySystemParamsAdmin() {\\n        require(\\n            systemParamsWhitelist.getWhitelisted(msg.sender),\\n            \\\"NOT_SYSTEM_PARAM_ADMIN\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @notice Sets the oracle fee recipient. Only callable by SystemParams admins.\\n    /// @param newOracleFeeRecipient The new oracle fee recipient address\\n    function setNewOracleFeeRecipient(address newOracleFeeRecipient)\\n        public\\n        onlySystemParamsAdmin\\n    {\\n        oracleFeeRecipient = newOracleFeeRecipient;\\n    }\\n\\n    function getOracleFeeRecipient() public view returns (address) {\\n        return oracleFeeRecipient;\\n    }\\n}\"\r\n    },\r\n    \"/home/julian/betx/betx-contracts/contracts/interfaces/ISystemParameters.sol\": {\r\n      \"keccak256\": \"0xbc89207a086ff51f62593b3c362e6faab4505e91c0d97e4d2b31654286294f40\",\r\n      \"content\": \"pragma solidity 0.5.16;\\n\\ncontract ISystemParameters {\\n    function getOracleFeeRecipient() public view returns (address);\\n    function setNewOracleFeeRecipient(address) public;\\n}\\n\"\r\n    },\r\n    \"/home/julian/betx/betx-contracts/contracts/interfaces/permissions/IWhitelist.sol\": {\r\n      \"keccak256\": \"0x43b8d9573b5d37864e6084472019925ff7947299dd39b9081dcef6df940fb76a\",\r\n      \"content\": \"pragma solidity 0.5.16;\\n\\ncontract IWhitelist {\\n    function addAddressToWhitelist(address) public;\\n    function removeAddressFromWhitelist(address) public;\\n    function getWhitelisted(address) public view returns (bool);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"optimizer\": {\r\n      \"details\": {\r\n        \"constantOptimizer\": true,\r\n        \"cse\": true,\r\n        \"deduplicate\": true,\r\n        \"jumpdestRemover\": true,\r\n        \"orderLiterals\": true,\r\n        \"peephole\": true,\r\n        \"yul\": true,\r\n        \"yulDetails\": {\r\n          \"stackAllocation\": true\r\n        }\r\n      },\r\n      \"runs\": 200\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"contract IWhitelist\",\"name\":\"_systemParamsWhitelist\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOracleFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOracleFeeRecipient\",\"type\":\"address\"}],\"name\":\"setNewOracleFeeRecipient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"SystemParameters","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000de4728956c0f86450a604335c8787a540494296f","EVMVersion":"istanbul","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://48cb1c6f7f56f9176a2ec98530f9544c5915cbb4f4b567dfdab38d40f86da310"}]}