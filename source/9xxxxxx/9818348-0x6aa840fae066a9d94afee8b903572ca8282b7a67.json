{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2020-03-25\r\n*/\r\n\r\npragma solidity ^0.4.25;\r\n\r\n\r\n// Access controls access contracts' private methods\r\ncontract Access {\r\n\r\n    mapping(address => bool) private _admins;\r\n    mapping(address => bool) private _services;\r\n\r\n    modifier onlyAdmin() {\r\n        require(_admins[msg.sender], \"not admin\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdminOrService() {\r\n        require(_admins[msg.sender] || _services[msg.sender], \"not admin/service\");\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        _admins[msg.sender] = true;\r\n    }\r\n\r\n    function addAdmin(address addr) public onlyAdmin {\r\n        _admins[addr] = true;\r\n    }\r\n\r\n    function removeAdmin(address addr) public onlyAdmin {\r\n        _admins[addr] = false;\r\n    }\r\n\r\n    function isAdmin(address addr) public view returns (bool) {\r\n        return _admins[addr];\r\n    }\r\n\r\n    function addService(address addr) public onlyAdmin {\r\n        _services[addr] = true;\r\n    }\r\n\r\n    function removeService(address addr) public onlyAdmin {\r\n        _services[addr] = false;\r\n    }\r\n\r\n    function isService(address addr) public view returns (bool) {\r\n        return _services[addr];\r\n    }\r\n}\r\n\r\n\r\n// Cyberbridge receives ETH deposits\r\ncontract Cyberbridge {\r\n\r\n    Access public access;\r\n\r\n    bool public isActual = true;\r\n    bool public isActive = true;\r\n\r\n    event onDeposit(address from, uint256 amount, uint64 userID, bytes32 token);\r\n    event onWithdraw(address to, uint256 amount, uint64 userID, bytes32 token);\r\n\r\n    modifier onlyAdmin() {\r\n        require(access.isAdmin(msg.sender), \"not admin\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdminOrService() {\r\n        require(access.isAdmin(msg.sender) || access.isService(msg.sender), \"not admin/service\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyValidAddress(address addr) {\r\n        require(addr != address(0x0), \"nil address\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyActiveContract() {\r\n        require(isActive, \"inactive contract\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyInactiveContract() {\r\n        require(!isActive, \"active contract\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyActualContract() {\r\n        require(isActual, \"outdated contract\");\r\n        _;\r\n    }\r\n\r\n    constructor(address accessAddr) public onlyValidAddress(accessAddr) {\r\n        access = Access(accessAddr);\r\n    }\r\n\r\n    function deactivate(address ethRecipientAddr) public onlyAdmin onlyValidAddress(ethRecipientAddr) {\r\n        uint256 ethAmount = address(this).balance;\r\n        if (ethAmount > 0) {\r\n            ethRecipientAddr.transfer(ethAmount);\r\n        }\r\n        isActive = false;\r\n        isActual = false;\r\n    }\r\n\r\n    function setActive(bool active) public onlyAdmin onlyActualContract {\r\n        isActive = active;\r\n    }\r\n\r\n    // ---\r\n\r\n    function deposit(uint64 userID, bytes32 token) public payable {\r\n        require(msg.value > 0, \"zero eth amount\");\r\n        emit onDeposit(msg.sender, msg.value, userID, token);\r\n    }\r\n    \r\n    function withdraw(address to, uint256 amount, uint64 userID, bytes32 token) public onlyAdminOrService onlyValidAddress(to) {\r\n        require(amount > 0, \"zero eth amount\");\r\n        require(amount <= address(this).balance, \"not enough eth\");\r\n        to.transfer(amount);\r\n        emit onWithdraw(msg.sender, amount, userID, token);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"removeService\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addService\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isService\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Access","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://16fd38bb400a435e0560e76bc530059a0f0074f97fab183e3c90f9feb00466ac"}]}