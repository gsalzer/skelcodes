{"status":"1","message":"OK","result":[{"SourceCode":"// Verified using https://dapp.tools\n\n// hevm: flattened sources of src/deployer.sol\npragma solidity >=0.5.15 <0.6.0;\n\n////// src/deployer.sol\n// Copyright (C) 2020 Centrifuge\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n/* pragma solidity >=0.5.15 <0.6.0; */\n\ncontract MainDeployer {\n    function deploy(bytes memory bytecode, bytes32 salt) public returns (address addr)  {\n        assembly {\n            addr := create2(0, add(bytecode, 0x20), mload(bytecode), salt)\n            if iszero(extcodesize(addr)) { revert(0, 0) }\n        }\n    }\n\n    /// returns address(0) if contract doesn't exist\n    function getAddress(bytes32 bytecodeHash, bytes32 salt) public view returns(address) {\n        // create2 address calculation\n        // name is used as salt\n        // keccak256(0xff ++ deployingAddr ++ salt ++ keccak256(bytecode))[12:]\n        bytes32 _data = keccak256(\n            abi.encodePacked(bytes1(0xff), address(this), salt, bytecodeHash)\n        );\n        address addr = address(bytes20(_data << 96));\n        uint size;\n        assembly {\n            size := extcodesize(addr)\n        }\n        if (size > 0) {\n            return addr;\n        }\n        return address(0);\n    }\n\n    function bytecodeHash(bytes memory bytecode) public view returns(bytes32) {\n        return keccak256(bytecode);\n    }\n}\n","ABI":"[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"}],\"name\":\"bytecodeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bytecodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"MainDeployer","CompilerVersion":"v0.5.15+commit.6a57276f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}