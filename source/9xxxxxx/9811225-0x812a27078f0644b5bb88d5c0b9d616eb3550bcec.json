{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.7;\r\n\r\ncontract ERC20 {\r\n   //core ERC20 functions\r\n  function allowance(address _owner, address _spender) public view returns (uint remaining);\r\n  function approve(address _spender, uint _value)  public returns (bool success);\r\n  function balanceOf(address _owner) public view returns (uint balance);\r\n  function totalSupply() public view returns (uint);\r\n  function transfer(address _to, uint _value) public returns (bool success);\r\n  function transferFrom(address _from, address _to, uint _value) public returns (bool success);\r\n// logging events\r\n  event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n  event Transfer(address indexed _from, address indexed _to, uint  _value);\r\n}\r\n\r\ncontract Transfer  {\r\n    ERC20 public token;\r\n    uint public balance = 0;\r\n    address public owner;\r\n    constructor (address _tokenAddress) public {\r\n        owner = msg.sender;\r\n        token = ERC20(_tokenAddress);\r\n    }\r\n\r\n    function() payable external {\r\n        balance += msg.value;\r\n    }\r\n\r\n    function transferETH(address payable _to, uint256 _value) public onlyOwner returns (bool){\r\n        _to.transfer(_value);\r\n        return true;\r\n    }\r\n\r\n    function transferEth2Many(address payable[] memory _receivers, uint[] memory _values) public onlyOwner returns (bool) {\r\n        require(_receivers.length == _values.length && _receivers.length >= 1);\r\n        for (uint j = 0; j < _receivers.length; j++) {\r\n            _receivers[j].transfer(_values[j]);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint) {\r\n        return token.totalSupply();\r\n    }\r\n\r\n    function balanceOf(address who) public view returns (uint) {\r\n        return token.balanceOf(who);\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public view returns (uint){\r\n        return token.allowance(_owner, _spender);\r\n    }\r\n\r\n    function approve(address _spender, uint _value) public returns (bool success){\r\n        return token.approve(_spender, _value);\r\n    }\r\n\r\n    function transfer(address _to, uint _value) public returns (bool success) {\r\n        return token.transfer(_to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success) {\r\n        return token.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n    function TransferOne2Many(address[] memory _receivers, uint[] memory _values) public onlyOwner returns (bool) {\r\n        require(_receivers.length == _values.length && _receivers.length >= 1);\r\n        for (uint j = 0; j < _receivers.length; j++) {\r\n            token.transfer(_receivers[j], _values[j]);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function TransferFromOne2Many(address _from, address[] memory _receivers, uint[] memory _values) public onlyOwner returns (bool) {\r\n        require(_receivers.length == _values.length && _receivers.length >= 1);\r\n        for (uint j = 0; j < _receivers.length; j++) {\r\n            token.transferFrom(_from, _receivers[j], _values[j]);\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    function TransferFromMany2one(address[] memory _froms, address _receiver, uint[] memory _values) public onlyOwner returns (bool) {\r\n        require(_froms.length == _values.length && _froms.length >= 1);\r\n        for (uint j = 0; j < _froms.length; j++) {\r\n            token.transferFrom(_froms[j], _receiver, _values[j]);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_froms\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferFromMany2one\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferFromOne2Many\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferOne2Many\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferETH\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"_receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"transferEth2Many\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Transfer","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7","Library":"","LicenseType":"None","SwarmSource":"bzzr://b98b223a0e81cc3bc66a54f9e60e0fc14cc1d4e92f8b1cb510ca27a55dd745b5"}]}