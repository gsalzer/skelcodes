{"status":"1","message":"OK","result":[{"SourceCode":"{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/home/julian/betx/betx-contracts/contracts/impl/permissions/SystemParamsWhitelist.sol\": {\r\n      \"keccak256\": \"0xa073bace6e0c4af5f3b42fadb0a58e318e71f7ae5221e2696e5e75a51586bc1c\",\r\n      \"content\": \"pragma solidity 0.5.16;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../../interfaces/permissions/ISuperAdminRole.sol\\\";\\nimport \\\"./Whitelist.sol\\\";\\n\\n\\n/// @title OutcomeReporterWhitelist\\n/// @author Julian Wilson <julian@nextgenbt.com>\\n/// @notice A whitelist that represents all members allowed to\\n///         change parameters in the protocol.\\ncontract SystemParamsWhitelist is Whitelist {\\n    constructor(ISuperAdminRole _superAdminRole) public Whitelist(_superAdminRole) {}\\n}\"\r\n    },\r\n    \"/home/julian/betx/betx-contracts/contracts/impl/permissions/Whitelist.sol\": {\r\n      \"keccak256\": \"0xd869bdaf9c50af72815561efa7c7ad0b61a7b483b7f76fee1c08179537bd2a2d\",\r\n      \"content\": \"pragma solidity 0.5.16;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../../interfaces/permissions/ISuperAdminRole.sol\\\";\\nimport \\\"../../interfaces/permissions/IWhitelist.sol\\\";\\n\\n\\n/// @title Whitelist\\n/// @author Julian Wilson <julian@nextgenbt.com>\\n/// @notice The Whitelist contract has a whitelist of addresses, and provides basic authorization control functions.\\n///         This simplifies the implementation of \\\"user permissions\\\".\\n///         This Whitelist is special in that only super admins can add others to this whitelist.\\n///         This is copied verbatim, plus the SuperAdminRole authorization, from openzeppelin.\\ncontract Whitelist is IWhitelist {\\n    ISuperAdminRole internal superAdminRole;\\n\\n    mapping (address => bool) public whitelisted;\\n\\n    constructor(ISuperAdminRole _superAdminRole) public {\\n        superAdminRole = _superAdminRole;\\n    }\\n\\n    /// @notice Throws if the operator is not a super admin.\\n    /// @param operator The operator.\\n    modifier onlySuperAdmin(address operator) {\\n        require(\\n            superAdminRole.isSuperAdmin(operator),\\n            \\\"NOT_A_SUPER_ADMIN\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @notice Adds an operator to the whitelist\\n    ///         Only callable by the SuperAdmin role.\\n    /// @param operator The operator to add.\\n    function addAddressToWhitelist(address operator)\\n        public\\n        onlySuperAdmin(msg.sender)\\n    {\\n        whitelisted[operator] = true;\\n    }\\n\\n    /// @notice Removes an address from the whitelist\\n    ///         Only callable by the SuperAdmin role.\\n    /// @param operator The operator to remove.\\n    function removeAddressFromWhitelist(address operator)\\n        public\\n        onlySuperAdmin(msg.sender)\\n    {\\n        whitelisted[operator] = false;\\n    }\\n\\n    /// @notice Checks if the operator is whitelisted.\\n    /// @param operator The operator.\\n    /// @return true if the operator is whitelisted, false otherwise\\n    function getWhitelisted(address operator) public view returns (bool) {\\n        return whitelisted[operator];\\n    }\\n}\"\r\n    },\r\n    \"/home/julian/betx/betx-contracts/contracts/interfaces/permissions/ISuperAdminRole.sol\": {\r\n      \"keccak256\": \"0x6ad66846e01a39300df731455ab5aa8984edd52807700a5da232fecef83532e9\",\r\n      \"content\": \"pragma solidity 0.5.16;\\n\\ncontract ISuperAdminRole {\\n    function isSuperAdmin(address account) public view returns (bool);\\n    function addSuperAdmin(address account) public;\\n    function removeSuperAdmin(address account) public;\\n    function getSuperAdminCount() public view returns (uint256);\\n}\\n\"\r\n    },\r\n    \"/home/julian/betx/betx-contracts/contracts/interfaces/permissions/IWhitelist.sol\": {\r\n      \"keccak256\": \"0x43b8d9573b5d37864e6084472019925ff7947299dd39b9081dcef6df940fb76a\",\r\n      \"content\": \"pragma solidity 0.5.16;\\n\\ncontract IWhitelist {\\n    function addAddressToWhitelist(address) public;\\n    function removeAddressFromWhitelist(address) public;\\n    function getWhitelisted(address) public view returns (bool);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {},\r\n    \"optimizer\": {\r\n      \"details\": {\r\n        \"constantOptimizer\": true,\r\n        \"cse\": true,\r\n        \"deduplicate\": true,\r\n        \"jumpdestRemover\": true,\r\n        \"orderLiterals\": true,\r\n        \"peephole\": true,\r\n        \"yul\": true,\r\n        \"yulDetails\": {\r\n          \"stackAllocation\": true\r\n        }\r\n      },\r\n      \"runs\": 200\r\n    },\r\n    \"remappings\": [],\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}","ABI":"[{\"inputs\":[{\"internalType\":\"contract ISuperAdminRole\",\"name\":\"_superAdminRole\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"addAddressToWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"removeAddressFromWhitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Whitelist","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000087d712688a706d4343704eeb382cb72abe76452e","EVMVersion":"istanbul","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://d457e61d6afa20f94b620dbc73f87bf81a00da3cce81638fbecb0c1ec1277ddb"}]}