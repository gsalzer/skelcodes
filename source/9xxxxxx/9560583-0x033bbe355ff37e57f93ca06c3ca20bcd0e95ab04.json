{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.1;\r\n\r\n\r\ninterface Zxc { \r\n\r\n   \r\n  function name()\r\n    external\r\n    view\r\n    returns (string memory _name);\r\n\r\n  \r\n  function symbol()\r\n    external\r\n    view\r\n    returns (string memory _symbol);\r\n\r\n  \r\n  function decimals()\r\n    external\r\n    view\r\n    returns (uint8 _decimals);\r\n\r\n  \r\n  function totalSupply()\r\n    external\r\n    view\r\n    returns (uint256 _totalSupply);\r\n\r\n  \r\n  function balanceOf(\r\n    address _owner\r\n  )\r\n    external\r\n    view\r\n    returns (uint256 _balance);\r\n\r\n  \r\n  function transfer(\r\n    address _to,\r\n    uint256 _value\r\n  )\r\n    external\r\n    returns (bool _success);\r\n\r\n  \r\n  function transferFrom(\r\n    address _from,\r\n    address _to,\r\n    uint256 _value\r\n  )\r\n    external\r\n    returns (bool _success);\r\n\r\n  \r\n  function approve(\r\n    address _spender,\r\n    uint256 _value\r\n  )\r\n    external\r\n    returns (bool _success);\r\n\r\n  \r\n  function allowance(\r\n    address _owner,\r\n    address _spender\r\n  )\r\n    external\r\n    view\r\n    returns (uint256 _remaining);\r\n\r\n  \r\n  function transferOwnership(\r\n    address _newOwner\r\n  )\r\n    external;\r\n\r\n  \r\n  function claimOwnership()\r\n    external;\r\n\r\n  \r\n  function enableTransfer()\r\n    external;\r\n\r\n  \r\n  function burn(\r\n    uint256 _value\r\n  )\r\n    external;\r\n\r\n  \r\n  function setCrowdsaleAddress(\r\n    address crowdsaleAddr\r\n  )\r\n    external;\r\n\r\n  \r\n  event Transfer(\r\n    address indexed _from,\r\n    address indexed _to,\r\n    uint256 _value\r\n  );\r\n\r\n  \r\n  event Approval(\r\n    address indexed _owner,\r\n    address indexed _spender,\r\n    uint256 _value\r\n  );\r\n\r\n   \r\n  event Burn(\r\n    address indexed _burner,\r\n    uint256 _value\r\n  );\r\n\r\n}\r\n\r\ncontract ZxcBurner {\r\n  \r\n  Zxc zxcToken;\r\n\r\n  \r\n  constructor(address _zxcAddress)\r\n    public\r\n  {\r\n    zxcToken = Zxc(_zxcAddress);\r\n  }\r\n\r\n  \r\n  function claim()\r\n    external\r\n  {\r\n    zxcToken.claimOwnership();\r\n  }\r\n\r\n  \r\n  function burn(\r\n    uint256 _value\r\n  )\r\n    external\r\n  {\r\n    zxcToken.transferFrom(msg.sender, address(this), _value);\r\n    zxcToken.burn(_value);\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zxcAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ZxcBurner","CompilerVersion":"v0.6.1+commit.e6f7d5a4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000083e2be8d114f9661221384b3a50d24b96a5653f5","Library":"","LicenseType":"MIT","SwarmSource":"ipfs://d6d2076d109c9f7237d0680fcc09b5c5ad882b8a4926cbaad1f1ecd32ab0969a"}]}