{"status":"1","message":"OK","result":[{"SourceCode":"{\"Everbin.sol\":{\"content\":\"pragma solidity 0.6.4;\\r\\n\\r\\nimport \\\"./SafeMath.sol\\\";\\r\\nimport \\\"./Ownable.sol\\\";\\r\\n\\r\\ncontract Everbin is Ownable {\\r\\n    using SafeMath for uint;\\r\\n\\r\\n    uint public binCount;\\r\\n    uint public bytesCount;\\r\\n\\r\\n    mapping(uint =\\u003e string) public bins;\\r\\n\\r\\n    event BinCreated(address indexed by, uint id, uint bytes_);\\r\\n    event Donation(address indexed from, uint amount);\\r\\n\\r\\n    function create(string memory content) public returns(uint) {\\r\\n        binCount = binCount.add(1);\\r\\n\\r\\n        uint totalBytes = bytes(content).length;\\r\\n        bytesCount = bytesCount.add(totalBytes);\\r\\n        bins[binCount] = content;\\r\\n\\r\\n        emit BinCreated(msg.sender, binCount, totalBytes);\\r\\n\\r\\n        return binCount;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        require(address(this).balance \\u003e 0, \\\"Insufficient funds\\\");\\r\\n\\r\\n        msg.sender.transfer(address(this).balance);\\r\\n    }\\r\\n\\r\\n    function status() public view returns(uint, uint) {\\r\\n        return (binCount, bytesCount);\\r\\n    }\\r\\n\\r\\n    receive() payable external {\\r\\n        emit Donation(msg.sender, msg.value);\\r\\n    }\\r\\n}\"},\"Ownable.sol\":{\"content\":\"pragma solidity 0.6.4;\\r\\n\\r\\ncontract Ownable {\\r\\n    address payable public owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor() internal {\\r\\n        emit OwnershipTransferred(address(0), msg.sender);\\r\\n\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(owner == msg.sender, \\\"Ownable: only owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address payable newOwner) public onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n\\r\\n        emit OwnershipTransferred(owner, newOwner);\\r\\n\\r\\n        owner = newOwner;\\r\\n    }\\r\\n}\"},\"SafeMath.sol\":{\"content\":\"pragma solidity 0.6.4;\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint a, uint b) internal pure returns(uint) {\\r\\n        uint c = a + b;\\r\\n        require(c \\u003e= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n}\"}}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bytes_\",\"type\":\"uint256\"}],\"name\":\"BinCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Donation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"binCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bins\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bytesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"Everbin","CompilerVersion":"v0.6.4+commit.1dca32f3","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://39c5126ef3bc1ca57e318fa44040e6ea349d685c781ba51bcfe541be798b07e0"}]}