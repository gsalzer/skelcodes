{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.1;\r\n\r\ncontract Owned\r\n{\r\n    address payable internal _owner;\r\n\r\n    constructor() public\r\n    {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner \r\n    {\r\n        require(msg.sender == _owner, \"Only contract owner can do this.\");\r\n        _;\r\n    }   \r\n\r\n    function () external payable \r\n    {\r\n        require(false, \"eth transfer is disabled.\"); // throw\r\n    }\r\n}\r\n\r\ncontract Mortal is Owned {\r\n    function die() public onlyOwner\r\n    {\r\n        selfdestruct(_owner);\r\n    }\r\n}\r\n\r\ncontract Erc20\r\n{\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool success);\r\n}\r\n\r\ncontract Erc20TransferContract is Mortal\r\n{\r\n    address private _erc20;\r\n\r\n    event Erc20Transfer(address indexed from, address to, uint256 value, string indexed ccid);\r\n\r\n    constructor(address erc20) public\r\n    {\r\n        _erc20 = erc20;\r\n    }\r\n    \r\n    function getErc20() public view returns (address erc20)\r\n    {\r\n        erc20 = _erc20;\r\n    }\r\n\r\n    function transfer(address to, uint256 value, string memory ccid) public returns (bool success)\r\n    {\r\n        require(bytes(ccid).length == 70, \"Invalid creditcoin id length\");\r\n        Erc20 erc20 = Erc20(_erc20);\r\n        success = erc20.transferFrom(msg.sender, to, value);\r\n        emit Erc20Transfer(msg.sender, to, value, ccid);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"ccid\",\"type\":\"string\"}],\"name\":\"Erc20Transfer\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[],\"name\":\"die\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getErc20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ccid\",\"type\":\"string\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Erc20TransferContract","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000004cc8486f2f3dce2d3b5e27057cf565e16906d12d","Library":"","LicenseType":"GNU LGPLv3","SwarmSource":"bzzr://ac0b80d5fd9a038cc2a4668aac083defeff72f262c98cc3a66586b815100e1e2"}]}