{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.12;\r\n\r\n// EtherBuy is a DApp to buy and sell anything on Ethereum.\r\ncontract EtherBuy {\r\n\tstruct oneSale {\r\n\t\taddress payable seller;\r\n\t\tstring title;\r\n\t\tstring content;\r\n\t\tuint price;\r\n\t\tuint locked; //money will be locked until the buyer sends feedback or the seller cancels sale\r\n\t\tbool available;\r\n\t}\r\n\tstruct oneBuy {\r\n\t\taddress payable buyer;\r\n\t\tstring message;\r\n\t\tbool lockReleased;\r\n\t\tbool hasReceived;\r\n\t\tstring commentByBuyer;\r\n\t\tstring commentBySeller;\r\n\t}\r\n\t\r\n\toneSale[] public sales;\r\n\tmapping(uint => oneBuy[]) public buys;\r\n\r\n\tevent SellEvent();\r\n\tevent BuyEvent(uint SaleID, string message);\r\n\tevent CancelEvent(uint SaleID);\r\n\tevent FeedbackEvent(uint SaleID, uint BuyID);\r\n\r\n\tfunction sell(string memory title, string memory content, uint price, uint locked) public {\r\n\t\tsales.push(oneSale(\r\n\t\t\tmsg.sender,\r\n\t\t\ttitle,\r\n\t\t\tcontent,\r\n\t\t\tprice,\r\n\t\t\tlocked,\r\n\t\t\ttrue\r\n\t\t));\t\t\r\n\t\temit SellEvent();\r\n\t}\r\n\r\n\tfunction buy(uint SaleID, string memory message) public payable {\r\n\t\trequire(sales[SaleID].available);\r\n\t\trequire(msg.value==sales[SaleID].price+sales[SaleID].locked);\r\n\r\n\t\tbuys[SaleID].push(oneBuy(\r\n\t\t\tmsg.sender,\r\n\t\t\tmessage,\r\n\t\t\tfalse,\r\n\t\t\tfalse,\r\n\t\t\t\"\",\r\n\t\t\t\"\"\r\n\t\t));\r\n\r\n\t\tsales[SaleID].seller.transfer(sales[SaleID].price);\r\n\t\t\r\n\t\temit BuyEvent(SaleID, message);\r\n\t}\r\n\r\n\tfunction cancel(uint SaleID) public {\r\n\t\trequire(msg.sender==sales[SaleID].seller);\r\n\t\tsales[SaleID].available = false;\r\n\t\tif(sales[SaleID].locked>0) {\r\n\t\t\tuint lockedValue = sales[SaleID].locked;\r\n\t\t\tfor (uint BuyID=0; BuyID<buys[SaleID].length; BuyID++) {\r\n\t\t\t\tif(buys[SaleID][BuyID].lockReleased==false) {\r\n\t\t\t\t\tbuys[SaleID][BuyID].lockReleased = true;\r\n\t\t\t\t\tbuys[SaleID][BuyID].buyer.transfer(lockedValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\temit CancelEvent(SaleID);\r\n\t}\r\n\r\n\tfunction buyerFeedback(uint SaleID, uint BuyID, bool hasReceived, string memory comment) public {\r\n\t\trequire(msg.sender==buys[SaleID][BuyID].buyer);\r\n\r\n\t\tif(!buys[SaleID][BuyID].lockReleased && sales[SaleID].locked>0) {\r\n\t\t\tbuys[SaleID][BuyID].lockReleased = true;\r\n\t\t\tmsg.sender.transfer(sales[SaleID].locked);\r\n\t\t}\r\n\r\n\t\tbuys[SaleID][BuyID].hasReceived = hasReceived;\r\n\t\tbuys[SaleID][BuyID].commentByBuyer = comment;\r\n\t\temit FeedbackEvent(SaleID, BuyID);\r\n\t}\r\n\r\n\tfunction sellerFeedback(uint SaleID, uint BuyID, string memory comment) public {\r\n\t\trequire(msg.sender==sales[SaleID].seller);\r\n\t\tbuys[SaleID][BuyID].commentBySeller = comment;\r\n\t\temit FeedbackEvent(SaleID, BuyID);\r\n\t}\r\n\r\n    function getCountOfSales() view public returns (uint) {\r\n    \treturn sales.length;\r\n    }\r\n    \r\n    function getCountOfBuys(uint SaleID) view public returns (uint) {\r\n    \treturn buys[SaleID].length;\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"SaleID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"BuyEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"SaleID\",\"type\":\"uint256\"}],\"name\":\"CancelEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"SaleID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"BuyID\",\"type\":\"uint256\"}],\"name\":\"FeedbackEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SellEvent\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"SaleID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"SaleID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"BuyID\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasReceived\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"buyerFeedback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buys\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"lockReleased\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasReceived\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"commentByBuyer\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"commentBySeller\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"SaleID\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"SaleID\",\"type\":\"uint256\"}],\"name\":\"getCountOfBuys\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCountOfSales\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sales\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"locked\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"available\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"locked\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"SaleID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"BuyID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"sellerFeedback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"EtherBuy","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://557b3b504cbadcf0435a5e043fb45bd30db60c231cc51a5ccfb098e130d133a8"}]}