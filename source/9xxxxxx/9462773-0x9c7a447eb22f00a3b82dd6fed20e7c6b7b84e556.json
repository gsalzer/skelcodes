{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\ncontract LockableToken is Ownable {\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address who) public view returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    function allowance(address owner, address spender) public view returns (uint256);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    function approveAndCall(address _spender, uint256 _value, bytes _data) public payable returns (bool);\r\n    function transferAndCall(address _to, uint256 _value, bytes _data) public payable returns (bool);\r\n    function transferFromAndCall(address _from, address _to, uint256 _value, bytes _data) public payable returns (bool);\r\n}\r\n\r\ncontract Market is Ownable{\r\n    LockableToken private token;\r\n    string public Detail;\r\n    uint256 public SellAmount = 0;\r\n    uint256 public WeiRatio = 7000;\r\n\r\n    event TokenAddressChange(address token);\r\n    event Buy(address sender,uint256 rate,uint256 value,uint256 amount);\r\n\r\n    function () payable public {\r\n        buyTokens(msg.sender);\r\n    }\r\n    \r\n    function tokenDetail(string memory _detail) onlyOwner public {\r\n        Detail = _detail;\r\n    }\r\n    \r\n    function tokenPrice(uint256 _price) onlyOwner public {\r\n        WeiRatio = _price;\r\n    }\r\n\r\n    function tokenAddress(address _token) onlyOwner public {\r\n        require(_token != address(0), \"Token address cannot be null-address\");\r\n        token = LockableToken(_token);\r\n        emit TokenAddressChange(_token);\r\n    }\r\n\r\n    function tokenBalance() public view returns (uint256) {\r\n        return token.balanceOf(address(this));\r\n    }\r\n\r\n    function withdrawEther() onlyOwner public  {\r\n        require(address(this).balance > 0, \"Not have Ether for withdraw\");\r\n        owner.transfer(address(this).balance);\r\n    }\r\n    \r\n    function withdrawToken() onlyOwner public  {\r\n        token.transfer(owner, tokenBalance());\r\n    }\r\n\r\n    function buyTokens(address _buyer) private {\r\n        require(_buyer != 0x0);\r\n        require(msg.value > 0);\r\n\r\n        uint256 tokens = msg.value * WeiRatio;\r\n        require(tokenBalance() >= tokens, \"Not enough tokens for sale\");\r\n        token.transfer(_buyer, tokens);\r\n        SellAmount += tokens;\r\n\r\n        emit Buy(msg.sender,WeiRatio,msg.value,tokens);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"SellAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WeiRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"tokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Detail\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"tokenPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_detail\",\"type\":\"string\"}],\"name\":\"tokenDetail\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenAddressChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"}]","ContractName":"Market","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://7bc467db112dd5464c6da05e1a23b78ee819f7a7a802c5fdf9879e7b746cadf1"}]}