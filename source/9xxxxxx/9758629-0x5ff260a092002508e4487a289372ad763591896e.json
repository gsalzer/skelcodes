{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.13;\r\ncontract EtherParadiseFund {\r\n    address private owner;\r\n    constructor () public{\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier isOwner{\r\n        require(msg.sender==owner,\"not owner\");\r\n        _;\r\n    }\r\n\r\n    function() external payable{}\r\n    function balance() public view returns(uint){\r\n        address payable addr = address(this);\r\n        return addr.balance;\r\n    }\r\n    function take(address addr,uint payamount) external isOwner{\r\n        uint amount = payamount;\r\n        if(owner==addr){\r\n            if(payamount > address(this).balance){\r\n                amount = address(this).balance;\r\n            }\r\n        }else{\r\n            require(address(this).balance>=amount,\"Insufficient balance\");\r\n        }\r\n        address payable takeAddr = address(uint160(addr));\r\n        takeAddr.transfer(amount);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"payamount\",\"type\":\"uint256\"}],\"name\":\"take\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"EtherParadiseFund","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://2e98078c08b3c82ae7411c31ad77cd4a1ba77ac6d8eba8fd69bdd1decd8fbf30"}]}