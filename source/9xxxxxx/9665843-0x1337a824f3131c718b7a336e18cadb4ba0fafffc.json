{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >0.6.0;\r\n\r\ninterface GnosisSafeSetup {\r\n     function setup(\r\n        address[] calldata _owners,\r\n        uint256 _threshold,\r\n        address to,\r\n        bytes calldata data,\r\n        address fallbackHandler,\r\n        address paymentToken,\r\n        uint256 payment,\r\n        address payable paymentReceiver\r\n    ) external;\r\n}\r\n\r\ninterface ProxyFactory {\r\n     function createProxy(address masterCopy, bytes calldata data) external returns (address payable proxy);\r\n}\r\n\r\ncontract Safe_1_1_1_Factory {\r\n    ProxyFactory private constant PROXY_FACTORY = ProxyFactory(0x76E2cFc1F5Fa8F6a5b3fC4c8F4788F0116861F9B);\r\n    address private constant MASTER_COPY = 0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F;\r\n    \r\n    fallback() payable external {\r\n        address[] memory owners = new address[](1);\r\n        owners[0] = msg.sender;\r\n        bytes memory proxyInitData = abi.encodeWithSelector(\r\n            GnosisSafeSetup.setup.selector,\r\n            owners,\r\n            1,\r\n            address(0x0),\r\n            new bytes(0),\r\n            address(0x0),\r\n            address(0x0),\r\n            0,\r\n            address(0x0)\r\n        );\r\n        address payable safe = PROXY_FACTORY.createProxy(MASTER_COPY, proxyInitData);\r\n        require(safe != address(0x0), \"Safe deployment failed\");\r\n        if (msg.value > 0) {\r\n            safe.transfer(msg.value);\r\n        }\r\n    }\r\n}","ABI":"[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Safe_1_1_1_Factory","CompilerVersion":"v0.6.3+commit.8dda9521","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU GPLv3","SwarmSource":"ipfs://a65e8c46b41ca4d890eb7e850f2ec5eebdc9ee3c633c8729307bb4c83c11898a"}]}