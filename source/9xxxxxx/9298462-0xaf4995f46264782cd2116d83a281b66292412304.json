{"status":"1","message":"OK","result":[{"SourceCode":"{\"BaseERC20Token.sol\":{\"content\":\"pragma solidity ^0.4.21;\\r\\n\\r\\ncontract BaseERC20Token {\\r\\n    // Track how many tokens are owned by each address.\\r\\n    mapping (address =\\u003e uint256) public balanceOf;\\r\\n\\r\\n    string public name = \\\"ebloks.io\\\";\\r\\n    string public symbol = \\\"EBLOK\\\";\\r\\n    uint8 public decimals = 6;\\r\\n    uint256 public totalSupply = 1000000 * (uint256(10) ** decimals);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    constructor() public {\\r\\n        // Initially assign all tokens to the contract\\u0027s creator.\\r\\n        balanceOf[msg.sender] = totalSupply;\\r\\n        emit Transfer(address(0), msg.sender, totalSupply);\\r\\n    }\\r\\n\\r\\n    function transfer(address to, uint256 value) public returns (bool success) {\\r\\n        require(balanceOf[msg.sender] \\u003e= value);\\r\\n\\r\\n        balanceOf[msg.sender] -= value;  // deduct from sender\\u0027s balance\\r\\n        balanceOf[to] += value;          // add to recipient\\u0027s balance\\r\\n        emit Transfer(msg.sender, to, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    mapping(address =\\u003e mapping(address =\\u003e uint256)) public allowance;\\r\\n\\r\\n    function approve(address spender, uint256 value)\\r\\n        public\\r\\n        returns (bool success)\\r\\n    {\\r\\n        allowance[msg.sender][spender] = value;\\r\\n        emit Approval(msg.sender, spender, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address from, address to, uint256 value)\\r\\n        public\\r\\n        returns (bool success)\\r\\n    {\\r\\n        require(value \\u003c= balanceOf[from]);\\r\\n        require(value \\u003c= allowance[from][msg.sender]);\\r\\n\\r\\n        balanceOf[from] -= value;\\r\\n        balanceOf[to] += value;\\r\\n        allowance[from][msg.sender] -= value;\\r\\n        emit Transfer(from, to, value);\\r\\n        return true;\\r\\n    }\\r\\n}\"},\"MintableERC20Token.sol\":{\"content\":\"pragma solidity ^0.4.24;\\r\\n\\r\\nimport \\\"BaseERC20Token.sol\\\";\\r\\n\\r\\ncontract MintableToken is BaseERC20Token {\\r\\n    address public owner = msg.sender;\\r\\n\\r\\n    constructor(\\r\\n        /*\\r\\n        uint256 _totalSupply,\\r\\n        uint8 _decimals,\\r\\n        string _name,\\r\\n        string _symbol\\r\\n        */\\r\\n    ) BaseERC20Token() public\\r\\n    {\\r\\n    }\\r\\n\\r\\n    function mint(address recipient, uint256 amount) public {\\r\\n        require(msg.sender == owner);\\r\\n        require(totalSupply + amount \\u003e= totalSupply); // Overflow check\\r\\n\\r\\n        totalSupply += amount;\\r\\n        balanceOf[recipient] += amount;\\r\\n        emit Transfer(address(0), recipient, amount);\\r\\n    }\\r\\n\\r\\n    function burn(uint256 amount) public {\\r\\n        require(amount \\u003c= balanceOf[msg.sender]);\\r\\n\\r\\n        totalSupply -= amount;\\r\\n        balanceOf[msg.sender] -= amount;\\r\\n        emit Transfer(msg.sender, address(0), amount);\\r\\n    }\\r\\n\\r\\n    function burnFrom(address from, uint256 amount) public {\\r\\n        require(amount \\u003c= balanceOf[from]);\\r\\n        require(amount \\u003c= allowance[from][msg.sender]);\\r\\n\\r\\n        totalSupply -= amount;\\r\\n        balanceOf[from] -= amount;\\r\\n        allowance[from][msg.sender] -= amount;\\r\\n        emit Transfer(from, address(0), amount);\\r\\n    }\\r\\n}\"}}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"MintableToken","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://6bf4bf7f0fdcc72180a26cac48634d9524379d1e13eed755cc21c4d540a50ab6"}]}