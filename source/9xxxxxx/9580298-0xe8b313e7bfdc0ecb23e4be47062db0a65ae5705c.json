{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/interfaces/IUnderlyingTokenValuator.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\ninterface IUnderlyingTokenValuator {\r\n\r\n    /**\r\n      * @dev Gets the tokens value in terms of USD.\r\n      *\r\n      * @return The value of the `amount` of `token`, as a number with 18 decimals\r\n      */\r\n    function getTokenValue(address token, uint amount) external view returns (uint);\r\n\r\n}\r\n\r\n// File: contracts/libs/StringHelpers.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\nlibrary StringHelpers {\r\n\r\n    function toString(address _address) public pure returns (string memory) {\r\n        bytes memory b = new bytes(20);\r\n        for (uint i = 0; i < 20; i++) {\r\n            b[i] = byte(uint8(uint(_address) / (2 ** (8 * (19 - i)))));\r\n        }\r\n        return string(b);\r\n    }\r\n\r\n}\r\n\r\n// File: contracts/impl/UnderlyingTokenValuatorImplV1.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n\r\n\r\ncontract UnderlyingTokenValuatorImplV1 is IUnderlyingTokenValuator {\r\n\r\n    using StringHelpers for address;\r\n\r\n    address public dai;\r\n    address public usdc;\r\n\r\n    constructor(\r\n        address _dai,\r\n        address _usdc\r\n    ) public {\r\n        dai = _dai;\r\n        usdc = _usdc;\r\n    }\r\n\r\n    // For right now, we use stable-coins, which we assume are worth $1.00\r\n    function getTokenValue(address token, uint amount) public view returns (uint) {\r\n        if (token == usdc) {\r\n            return amount;\r\n        } else if (token == dai) {\r\n            return amount;\r\n        } else {\r\n            revert(string(abi.encodePacked(\"Invalid token, found: \", token.toString())));\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dai\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getTokenValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"UnderlyingTokenValuatorImplV1","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","Library":"StringHelpers:50add802bbe45d06ac5d52bf3cdac40f8648cf95","LicenseType":"Apache-2.0","SwarmSource":"bzzr://9fa673dcb48377a5c544a698ae7a5dada242cb2b1c2094d627f705c226db3796"}]}