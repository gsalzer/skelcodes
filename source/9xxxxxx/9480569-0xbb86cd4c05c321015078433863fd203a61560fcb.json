{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.0;\r\n\r\ncontract Gruppa_Istoricheskiy_Roman {\r\n\r\n\r\n    mapping (address => uint) contributions;\r\n    uint totalContributors;     // TOTAL COUNT OF CONTRIBUTORS\r\n    uint goal;                  // AMOUNT NEEDS TO BE RAISED\r\n    uint raisedAmount;          // AMOUNT RAISED\r\n    uint totalSentToGruppa;     // TOTAL AMOUNT TRANSFERRED IN ALL ROUNDS\r\n    address Owner;              // PROJECT OWNER\r\n    address payable recepientAddress;\r\n    bool uje_sobrali;\r\n    bool paid;\r\n\r\n    address[] refund;\r\n    address[] addresses;\r\n\r\n    constructor (uint _goal) public {\r\n        \r\n        goal = _goal;\r\n        raisedAmount = 0;\r\n        Owner = msg.sender;\r\n        recepientAddress = 0x7B43e50058Da1565806e946A7d93c6beD14F75ed;\r\n        goal = 0.1 ether; //AMOUNT NEEEDED\r\n        totalSentToGruppa = 0;\r\n    \r\n    }\r\n    \r\n    \r\n    function donate() public payable  {\r\n        require(msg.value >= 0.01 ether, \"Send at least 0.001 Ether\");\r\n        if(contributions[msg.sender] == 0) {\r\n            totalContributors++;\r\n        }\r\n        contributions[msg.sender] += msg.value;\r\n        raisedAmount += msg.value;\r\n   \r\n    }\r\n    \r\n    function getRefund() public payable {\r\n        require(contributions[msg.sender] > 0);\r\n        msg.sender.transfer(contributions[msg.sender]);\r\n        raisedAmount -= contributions[msg.sender];\r\n        contributions[msg.sender] = 0;\r\n        totalContributors -= 1;\r\n        \r\n    }\r\n    \r\n    function send_funds_to_Gruppa_Istoricheskiy_Roman() public payable {\r\n        require(raisedAmount >= goal);\r\n        recepientAddress.transfer(raisedAmount);\r\n        paid == true;\r\n        totalSentToGruppa += raisedAmount;\r\n        raisedAmount = 0;\r\n        }\r\n    \r\n    \r\n    function skolko_nado_sobrat() public view returns (uint) {\r\n    return goal;\r\n    }\r\n    \r\n    function skolko_uje_sobrali() public view returns (uint) {\r\n    return raisedAmount;\r\n    }\r\n    \r\n    function skolkoVsegoOtpravleno() public view returns (uint) {\r\n    return totalSentToGruppa;\r\n    }\r\n    \r\n    \r\n    function skolko_chelovek_skinulis() public view returns (uint) {\r\n    return totalContributors;\r\n    }\r\n    \r\n    function uje_sobrali_li() public view returns (bool) {\r\n        if(raisedAmount >= goal){\r\n            return true;\r\n        }\r\n        else return false;\r\n    }\r\n    \r\n    function kill() public onlyOwner {\r\n    selfdestruct(msg.sender);\r\n    }\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == Owner);\r\n        _;\r\n    }\r\n \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"skolko_uje_sobrali\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"send_funds_to_Gruppa_Istoricheskiy_Roman\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"uje_sobrali_li\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getRefund\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"skolko_nado_sobrat\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"skolko_chelovek_skinulis\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"skolkoVsegoOtpravleno\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_goal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Gruppa_Istoricheskiy_Roman","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000000","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://4b20b1df594d73e6a85d8b8b4aec775831b7acf76b9c1a7cb3027c16170eb66b"}]}