{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.16;\r\n\r\ncontract VoteOption {\r\n    VoteProposal creator;\r\n    address owner;\r\n    uint32 deadline;\r\n    string name;\r\n    string option;\r\n\r\n    constructor(uint32 _deadline, string memory _name, string memory _option) public {\r\n        owner = msg.sender;\r\n        creator = VoteProposal(msg.sender);\r\n        deadline = _deadline;\r\n        name = _name;\r\n        option = _option;\r\n    }\r\n\r\n    event AnonymousDeposit(address indexed from, uint value, string name, string option);\r\n\r\n    function() external payable {\r\n\t    emit AnonymousDeposit(msg.sender, msg.value, name, option);\r\n    }\r\n}\r\n\r\ncontract VoteProposal {\r\n    VoteProposalPool creator;\r\n    address owner;\r\n    uint32 deadline;\r\n    string name;\r\n    string data;\r\n\r\n    mapping(uint => address) public options;\r\n\r\n    constructor(uint32 _deadline, string memory _name, string memory _data) public {\r\n        owner = msg.sender;\r\n        creator = VoteProposalPool(msg.sender);\r\n        deadline = _deadline;\r\n        name = _name;\r\n        data = _data;\r\n    }\r\n\r\n    function createOptions(uint32 _deadline, string calldata _name)\r\n        external\r\n        returns (VoteOption yes, VoteOption no)\r\n    {\r\n        yes = new VoteOption(_deadline, _name, \"yes\");\r\n        no = new VoteOption(_deadline, _name, \"no\");\r\n        options[0] = address(yes);\r\n        options[1] = address(no);\r\n    }\r\n}\r\n\r\ncontract VoteProposalPool {\r\n\r\n    function newVoteProposal(\r\n        string calldata _name,\r\n        string calldata _data,\r\n        uint32 _deadline\r\n    )\r\n        external\r\n        validateDeadline(_deadline)\r\n\tvalidateDescription(_data)\r\n        validateName(_name)\r\n        returns (VoteProposal newProposal)\r\n    {\r\n        newProposal = new VoteProposal(_deadline, _name, _data);\r\n        newProposal.createOptions(_deadline, _name);\r\n        emit newProposalIssued(\r\n            address(newProposal),\r\n            msg.sender,\r\n            _deadline,\r\n            _name,\r\n            _data,\r\n            \"yes\",\r\n            newProposal.options(0),\r\n            \"no\",\r\n            newProposal.options(1));\r\n    }\r\n\r\n\r\n    modifier validateDeadline(uint32 _deadline) {\r\n        require(_deadline >= (now + 604800), \"Deadline must be at least one week from now\");\r\n        require(_deadline <= (now + 31622400), \"Deadline must be no more than one year from now\");\r\n        _;\r\n    }\r\n\r\n    modifier validateName(string memory _name) {\r\n        bytes memory nameBytes = bytes(_name);\r\n        require(nameBytes.length <= 100, \"Proposal name must be less than 280 characters (ASCII)\");\r\n        require(nameBytes.length >= 4, \"Proposal name at least 4 characters (ASCII)\");\r\n        _;\r\n    }\r\n    \r\n    modifier validateDescription(string memory _description) {\r\n        bytes memory descriptionBytes = bytes(_description);\r\n        require(descriptionBytes.length <= 1000, \"Proposal description must be less than 1,000 characters (ASCII)\");\r\n        _;\r\n    }\r\n\r\n    event newProposalIssued(\r\n        address proposal,\r\n        address issuer,\r\n        uint32 deadline,\r\n        string name,\r\n        string data,\r\n        string optionA,\r\n        address optionAaddr,\r\n        string optionB,\r\n        address optionBaddr);\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"deadline\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"optionA\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"optionAaddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"optionB\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"optionBaddr\",\"type\":\"address\"}],\"name\":\"newProposalIssued\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_data\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"_deadline\",\"type\":\"uint32\"}],\"name\":\"newVoteProposal\",\"outputs\":[{\"internalType\":\"contract VoteProposal\",\"name\":\"newProposal\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"VoteProposalPool","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://f6623c80bdca081e5159369b848fcd0d950a3576dc413176e85bc1673ebc395e"}]}