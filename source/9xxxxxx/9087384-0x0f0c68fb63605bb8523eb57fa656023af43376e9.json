{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n//ERC20标准接口\r\ncontract ERC20 {\r\n    //function name() public returns (string name);//代币名字\r\n    //function symbol() public returns (string symbol);//代币简称\r\n    //function decimals() public returns (uint8 decimals);//token使用的小数点后几位\r\n    //function totalSupply() public returns (uint totalSupply);//token的总供应量\r\n\r\n    function balanceOf(address who) public view  returns(uint256);//某个地址(账户)的账户余额\r\n    function transfer(address to, uint256 value) public returns(bool);//从代币合约的调用者地址上转移_value的数量token到的地址_to，并且必须触发Transfer事件\r\n    function allowance(address owner, address spender) public view returns(uint256);//_spender仍然被允许从_owner提取的金额\r\n    function approve(address spender, uint value) public returns(bool);//允许_spender多次取回您的帐户，最高达_value金额。 如果再次调用此函数，它将以_value覆盖当前的余量\r\n    function transferFrom(address from, address to, uint256 value) public  returns(bool);//从地址_from发送数量为_value的token到地址_to,必须触发Transfer事件,transferFrom方法用于允许合同代理某人转移token。条件是from账户必须经过了approve\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);//代币被转移时触发\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);//调用approve方法时触发\r\n  }\r\n\r\n  //接口\r\ninterface TokenRecipient{\r\n  function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);\r\n}\r\n\r\n//构造函数\r\ncontract TokenERC20 is ERC20{\r\n  string public name;//token名称\r\n  string public symbol;//token标识（eth btc）\r\n  uint8 public decimals = 18;//精度：18位小数\r\n\r\n  mapping(address => uint256) balances;//地址与余额的映射\r\n  mapping(address => mapping(address => uint256)) allowances;//可以从指定地址查询对应的余额\r\n\r\n  event Burn(address indexed from, uint256 value); //清除部分TOKEN代币\r\n\r\n  function TokenERC20(uint256 _initialSupply, string _tonkenName, string _tokenSymbol, uint8 _decimals){\r\n    uint256 totalSupply = _initialSupply * 10 ** uint256(decimals);\r\n    name = _tonkenName;\r\n    symbol = _tokenSymbol;\r\n    decimals = _decimals;\r\n    balances[msg.sender] = totalSupply;\r\n  }\r\n\r\n  /*ERC20接口实现*/\r\n  //获取余额\r\n  function balanceOf(address _owner) view public returns (uint256){\r\n    return balances[_owner];//查询_owner的余额\r\n  }\r\n  //查询指定帐户的代币余额\r\n  function allowance(address _owner, address _spender) public view returns(uint256){\r\n    return allowances[_owner][_spender];\r\n  }\r\n\r\n  //内部转账的公共函数\r\n  function _transfer(address _from, address _to, uint _value) internal returns(bool){\r\n    require(_to !=0x0);//确保转帐的目标地址有效,目标地址不能是一个空地址\r\n    require(balances[_from] >= _value);//确保有足够的余额,即源地址余额大于转帐金额\r\n    require(balances[_to] + _value > balances[_to]);//确保转账之后目标地址的余额有所增加，即不能转一个负数或0\r\n    uint previousBalances = balances[_from] + balances[_to];//转帐之前源地址和目标地址余额之和，用于转帐后比较\r\n    balances[_from] -= _value;//源地址余额减去转账金额\r\n    balances[_to] += _value;//目标地址余额加上转账金额\r\n    Transfer(_from, _to, _value);//必须触发的transfer事件\r\n    assert(balances[_from] + balances[_to] == previousBalances);//断言，通过后即为转帐成功\r\n    return true;\r\n  }\r\n\r\n  //实现transfer\r\n  function transfer(address _to, uint256 _value) public returns(bool){\r\n    return _transfer(msg.sender, _to, _value);\r\n  }\r\n\r\n  //实现transferFrom\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns(bool){\r\n    require(_value <= allowances[_from][msg.sender]);//确保转出余额小于账户余额\r\n    allowances[_from][msg.sender] -= _value;//减去转出的金额\r\n    return _transfer(_from,_to,_value);\r\n  }\r\n\r\n  //设定限额\r\n  function approve(address _spender, uint256 _value) public returns(bool) {\r\n    allowances[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  //\r\n  function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns(bool){\r\n    if (approve(_spender,_value)) {\r\n      TokenRecipient spender = TokenRecipient(_spender);\r\n      spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function burn(uint256 _value) public returns(bool){\r\n    require(balances[msg.sender] >= _value);//确保余额足够\r\n    balances[msg.sender] -= _value;\r\n    //totalSupply -= _value;\r\n    Burn(msg.sender, _value);\r\n  }\r\n\r\n  function burnFrom(address _from, uint256 _value) public returns(bool){\r\n    require(balances[_from] >= _value);//确保余额足够\r\n    require(_value <= allowances[_from][msg.sender]);\r\n    balances[_from] -= _value;\r\n    //totalSupply -= _value;\r\n    allowances[_from][msg.sender] -= _value;\r\n    Burn(_from, _value);\r\n    return true;\r\n  }\r\n\r\n  function increaseApproval(address _spender, uint _addedvalue) public returns(bool){\r\n      require(allowances[msg.sender][_spender] - _addedvalue > allowances[msg.sender][_spender]);\r\n      allowances[msg.sender][_spender] += _addedvalue;\r\n      Approval(msg.sender, _spender, allowances[msg.sender][_spender]);\r\n      return true;\r\n  }\r\n\r\n  function decreaseApproval(address _spender, uint _subtractedvalue) public returns(bool) {\r\n      uint oldValue = allowances[msg.sender][_spender];\r\n      if (oldValue < _subtractedvalue) {\r\n          allowances[msg.sender][_spender] = 0;\r\n      } else {\r\n          allowances[msg.sender][_spender] -= _subtractedvalue;\r\n      }\r\n      Approval(msg.sender, _spender, allowances[msg.sender][_spender]);\r\n      return true;\r\n  }\r\n\r\n  function _balances(address addr)  public returns(uint){\r\n    return balances[addr];\r\n  }\r\n}\r\n\r\n//对外发布合约\r\ncontract FairToken is TokenERC20 {\r\n    function FairToken() TokenERC20(2000000000,\"test_watt\", \"watt\", 18) public {\r\n\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedvalue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"_balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedvalue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"FairToken","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://ad6527c4b73bda37ab5824e7c75045a6a6011c85aeb91f2ca31d735cf209d443"}]}