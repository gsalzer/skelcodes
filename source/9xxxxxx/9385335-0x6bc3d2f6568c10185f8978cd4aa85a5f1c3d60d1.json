{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.0;\r\n\r\ncontract DappHeroTest {\r\n    uint important = 20;\r\n    bytes32 hello = \"hello\";\r\n    uint fee = 1 ether / 100;\r\n    \r\n    function viewNoArgsMultipleReturn() public view returns(uint _important, bytes32 _hello){\r\n        return (\r\n            important,\r\n            hello\r\n        );\r\n    }\r\n    \r\n    function viewMultipleArgsSingleReturn(address from, uint multiplier) public view returns(uint _balanceMultiplied){\r\n        return address(from).balance * multiplier;\r\n    }\r\n    \r\n    function viewMultipleArgsMultipleReturn(address from, uint multiplier) public view returns(uint _balanceMultiplied, bytes32 _hello){\r\n        return (\r\n            address(from).balance * multiplier,\r\n            hello\r\n        );\r\n    }\r\n\r\n    event EventTrigger(address indexed sender, uint value);\r\n    event ValueSent(address indexed sender);\r\n    event ValueSentWithMessage(address indexed sender, bytes32 message);\r\n\r\n    function triggerEvent(uint value) public {\r\n        emit EventTrigger (msg.sender, value);\r\n    }\r\n\r\n    modifier isCorrectFee() {\r\n        require(msg.value == fee);\r\n        _;\r\n    }\r\n\r\n    function sendEthNoArgs() isCorrectFee public payable {\r\n        emit ValueSent(msg.sender);\r\n    }\r\n\r\n    function sendEthWithArgs(bytes32 message) isCorrectFee public payable {\r\n        emit ValueSentWithMessage(msg.sender, message);\r\n    }\r\n\r\n    function sendVariableEthNoArgs() public payable {\r\n        require(msg.value > fee / 10);\r\n        emit ValueSent(msg.sender);\r\n    }\r\n\r\n    function sendVariableEthWithArgs(bytes32 message) public payable {\r\n        require(msg.value > fee / 10);\r\n        emit ValueSentWithMessage(msg.sender, message);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"message\",\"type\":\"bytes32\"}],\"name\":\"sendEthWithArgs\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"viewMultipleArgsMultipleReturn\",\"outputs\":[{\"name\":\"_balanceMultiplied\",\"type\":\"uint256\"},{\"name\":\"_hello\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sendVariableEthNoArgs\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"viewMultipleArgsSingleReturn\",\"outputs\":[{\"name\":\"_balanceMultiplied\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"viewNoArgsMultipleReturn\",\"outputs\":[{\"name\":\"_important\",\"type\":\"uint256\"},{\"name\":\"_hello\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"message\",\"type\":\"bytes32\"}],\"name\":\"sendVariableEthWithArgs\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sendEthNoArgs\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"triggerEvent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"EventTrigger\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ValueSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"message\",\"type\":\"bytes32\"}],\"name\":\"ValueSentWithMessage\",\"type\":\"event\"}]","ContractName":"DappHeroTest","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://6d66d0b86e0090ca8be942f23a9531a13e8ec76278c774b3535dd47406790787"}]}