{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.11; // optimization runs: 200, evm version: petersburg\r\n\r\n\r\n/**\r\n * @title DharmaDai\r\n * @author 0age\r\n * @notice Dharma Dai is an upgradeable ERC20 token that delegates all logic to\r\n * an implementation contract specified by a hard-coded \"upgrade beacon\"\r\n * contract.\r\n */\r\ncontract DharmaDai {\r\n  // Set upgrade beacon address as a constant (i.e. not in contract storage).\r\n  address private constant _UPGRADE_BEACON = address(\r\n    0x0000000000ccCf289727C20269911159a7bf9eBd\r\n  );\r\n\r\n  /**\r\n   * @notice In the fallback, delegate execution to the implementation set on\r\n   * the upgrade beacon.\r\n   */\r\n  function () external payable {\r\n    // Get the current implementation address from the upgrade beacon.\r\n    (bool ok, bytes memory returnData) = _UPGRADE_BEACON.staticcall(\"\");\r\n\r\n    // Revert and pass along revert message if call to upgrade beacon reverts.\r\n    if (!ok) {\r\n      assembly {\r\n        returndatacopy(0, 0, returndatasize)\r\n        revert(0, returndatasize)\r\n      }\r\n    }\r\n\r\n    // Put implementation address returned from the upgrade beacon on the stack.\r\n    address implementation = abi.decode(returnData, (address));\r\n\r\n    assembly {\r\n      // Copy msg.data. We take full control of memory in this inline assembly\r\n      // block because it will not return to Solidity code. We overwrite the\r\n      // Solidity scratch pad at memory position 0.\r\n      calldatacopy(0, 0, calldatasize)\r\n\r\n      // Delegatecall to the implementation, supplying calldata and gas.\r\n      // Out and outsize are set to zero - instead, use the return buffer.\r\n      let result := delegatecall(gas, implementation, 0, calldatasize, 0, 0)\r\n\r\n      // Copy the returned data from the return buffer.\r\n      returndatacopy(0, 0, returndatasize)\r\n\r\n      switch result\r\n      // Delegatecall returns 0 on error.\r\n      case 0 { revert(0, returndatasize) }\r\n      default { return(0, returndatasize) }\r\n    }\r\n  }\r\n}","ABI":"[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"DharmaDai","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://20202020202020446861726d6120446169202864446169292020202020202020"}]}