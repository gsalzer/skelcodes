{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.26;\r\n\r\ninterface OrFeedInterface {\r\n    function getExchangeRate ( string fromSymbol, string toSymbol, string venue, uint256 amount ) external view returns ( uint256 );\r\n    function getTokenDecimalCount ( address tokenAddress ) external view returns ( uint256 );\r\n    function getTokenAddress ( string symbol ) external view returns ( address );\r\n    function getSynthBytes32 ( string symbol ) external view returns ( bytes32 );\r\n    function getForexAddress ( string symbol ) external view returns ( address );\r\n}\r\n\r\ncontract ArbitrageTest {\r\n    uint256 internal constant _ETH_UNIT = 1000000000000000000;\r\n\r\n    OrFeedInterface internal _orfeed;\r\n\r\n    address private _owner;\r\n\r\n    modifier onlyOwner() {\r\n        require(isOwner());\r\n        _;\r\n    }\r\n\r\n    //\r\n    // Initialize\r\n    //\r\n    constructor() public {\r\n        _owner = msg.sender;\r\n        _orfeed = OrFeedInterface(0x3c1935Ebe06Ca18964A5B49B8Cd55A4A71081DE2);\r\n    }\r\n\r\n    function () external payable  {}\r\n\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n\r\n\r\n\r\n    function getKyberBuyEthPrice() public view returns (uint256){\r\n        uint256 currentPrice =  _orfeed.getExchangeRate(\"ETH\", \"SAI\", \"BUY-KYBER-EXCHANGE\", _ETH_UNIT);\r\n        return currentPrice;\r\n    }\r\n    function getKyberSellEthPrice() public view returns (uint256){\r\n        uint256 currentPrice =  _orfeed.getExchangeRate(\"ETH\", \"SAI\", \"SELL-KYBER-EXCHANGE\", _ETH_UNIT);\r\n        return currentPrice;\r\n    }\r\n\r\n    function getUniswapBuyEthPrice() public view returns (uint256){\r\n        uint256 currentPrice =  _orfeed.getExchangeRate(\"ETH\", \"SAI\", \"BUY-UNISWAP-EXCHANGE\", _ETH_UNIT);\r\n        return currentPrice;\r\n    }\r\n    function getUniswapSellEthPrice() public view returns (uint256){\r\n        uint256 currentPrice =  _orfeed.getExchangeRate(\"ETH\", \"SAI\", \"SELL-UNISWAP-EXCHANGE\", _ETH_UNIT);\r\n        return currentPrice;\r\n    }\r\n\r\n\r\n\r\n    function getPrice(string from, string to, string venue, uint256 amount) public view returns (uint256) {\r\n        uint256 currentPrice = _orfeed.getExchangeRate(from, to, venue, amount);\r\n        return currentPrice;\r\n    }\r\n\r\n\r\n\r\n    function getKyberBuyPrice(string tokenSymbol) public constant returns (uint256) {\r\n        return _orfeed.getExchangeRate(\"ETH\", tokenSymbol, \"BUY-KYBER-EXCHANGE\", 1 ether);\r\n    }\r\n\r\n    function getKyberSellPrice(string tokenSymbol) public constant returns (uint256) {\r\n        return _orfeed.getExchangeRate(\"ETH\", tokenSymbol, \"SELL-KYBER-EXCHANGE\", 1 ether);\r\n    }\r\n\r\n    function getUniswapBuyPrice(string tokenSymbol) public constant returns (uint256) {\r\n        return _orfeed.getExchangeRate(\"ETH\", tokenSymbol, \"BUY-UNISWAP-EXCHANGE\", 1 ether);\r\n    }\r\n\r\n    function getUniswapSellPrice(string tokenSymbol) public constant returns (uint256) {\r\n        return _orfeed.getExchangeRate(\"ETH\", tokenSymbol, \"SELL-UNISWAP-EXCHANGE\", 1 ether);\r\n    }\r\n\r\n\r\n    function setOrFeedInterface(OrFeedInterface orfeed) public onlyOwner {\r\n        require(address(orfeed) != address(0), \"Invalid OrFeedInterface address\");\r\n        _orfeed = OrFeedInterface(orfeed);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getKyberSellEthPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"from\",\"type\":\"string\"},{\"name\":\"to\",\"type\":\"string\"},{\"name\":\"venue\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"getUniswapBuyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orfeed\",\"type\":\"address\"}],\"name\":\"setOrFeedInterface\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"getKyberSellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUniswapBuyEthPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUniswapSellEthPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"getKyberBuyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getKyberBuyEthPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"getUniswapSellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"ArbitrageTest","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://3e0a1bb6c1508eba4a841fce037d2adfb1f098e9d54f49ce58b1a1711b8cbec3"}]}