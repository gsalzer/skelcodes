{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\n\r\ncontract DropETH { // transfer msg.sender ETH to recipients per attached drop amount w/ msg.\r\n    event ETHDropped(string indexed message);\r\n    \r\n    function dropETH(address payable[] memory recipients, string memory message) public payable {\r\n        uint256 amount = msg.value / recipients.length;\r\n        for (uint256 i = 0; i < recipients.length; i++) {\r\n\t         recipients[i].transfer(amount);\r\n        }\r\n        emit ETHDropped(message);\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"ETHDropped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"dropETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"DropETH","CompilerVersion":"v0.6.1+commit.e6f7d5a4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"ipfs://d1fa1eead098aca4f3be46556855334c71637087a5b9c7f981e7ec6cd1ab0c66"}]}