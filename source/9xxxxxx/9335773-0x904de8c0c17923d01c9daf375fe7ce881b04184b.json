{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\nlibrary SafeMath \r\n{\r\n    function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) \r\n    {\r\n        if (_a == 0) \r\n        {\r\n          return 0;\r\n\r\n        }\r\n\r\n        c = _a * _b;\r\n\r\n        require(c / _a == _b);\r\n\r\n        return c;\r\n        \r\n    }\r\n\r\n    function div(uint256 _a, uint256 _b) internal pure returns (uint256) \r\n    {\r\n        require(_b != 0); \r\n\r\n        return _a / _b;\r\n        \r\n    }\r\n\r\n    function sub(uint256 _a, uint256 _b) internal pure returns (uint256) \r\n    {\r\n        require(_a >= _b); \r\n\r\n        return _a - _b;\r\n        \r\n    }\r\n\r\n    function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) \r\n    {\r\n        c = _a + _b;\r\n\r\n        require(c >= _a);\r\n\r\n        return c;\r\n        \r\n    }\r\n\r\n}\r\n\r\ncontract Ownable \r\n{\r\n    address public owner;\r\n\r\n    event OwnershipRenounced( address indexed previousOwner );\r\n\r\n    event OwnershipTransferred( address indexed previousOwner, address indexed newOwner );\r\n\r\n    constructor() public \r\n    {\r\n        owner = msg.sender;\r\n        \r\n    }\r\n \r\n    function transferOwnership(address _newOwner) public onlyOwner \r\n    {\r\n        _transferOwnership(_newOwner);\r\n        \r\n    }\r\n \r\n    function _transferOwnership(address _newOwner) internal \r\n    {\r\n        require(_newOwner != address(0));\r\n    \r\n        emit OwnershipTransferred(owner, _newOwner);\r\n    \r\n        owner = _newOwner;\r\n        \r\n    }\r\n \r\n    modifier onlyOwner() \r\n    {\r\n        require(msg.sender == owner);\r\n        _;\r\n        \r\n    }\r\n}\r\n\r\ncontract RegistroTransportes_v1 is Ownable\r\n{\r\n\tusing SafeMath for uint256;\r\n\t\r\n\tstruct ListaOperaciones\r\n    {\r\n\t\tuint     idMovimiento;\r\n\t\tuint256  idCliente;\r\n        string   cliente;\r\n        uint256  unidad;\r\n        uint256  idChofer;\r\n        string   chofer;\r\n        string   fecha;\r\n        string   evento;\r\n        \r\n\t}\r\n\r\n    mapping (uint => ListaOperaciones) private Operaciones;\r\n    \r\n    mapping (uint => bool) private OperacionesRegistradas;\r\n\r\n    event registramovimiento (uint, uint256, string, uint256, uint256, string, string, string);\r\n    \r\n    event Pause();\r\n\r\n    event Unpause();\r\n\r\n    bool public paused = false;\r\n\r\n    function contractAddress() public view returns(address)\r\n    { \r\n        return address(this); \r\n        \r\n    }\r\n    \r\n    function RegistraMovimiento(uint _idMovimiento, uint256 _idCliente, string _cliente, uint256 _unidad, uint256 _idChofer, string _chofer, string _fecha, string _evento) public onlyOwner\r\n    {\r\n        require(!MovimientoRegistrado(_idMovimiento));\r\n        \r\n        ListaOperaciones storage lista = Operaciones[_idMovimiento];\r\n        \r\n        lista.idMovimiento = _idMovimiento;\r\n        lista.idCliente = _idCliente;\r\n        lista.cliente = _cliente;\r\n        lista.unidad = _unidad;\r\n        lista.idCliente = _idChofer;\r\n        lista.chofer = _chofer;\r\n        lista.fecha = _fecha;\r\n        lista.evento = _evento;\r\n        \r\n        OperacionesRegistradas[_idMovimiento] = true;\r\n        \r\n        emit registramovimiento(lista.idMovimiento, lista.idCliente, lista.cliente, lista.unidad, lista.idCliente, lista.chofer, lista.fecha, lista.evento);\r\n\r\n    }\r\n    \r\n    function ConsultaMovimiento(uint _idMovimiento) public view returns (uint, uint256, string, uint256, uint256, string, string, string)\r\n    {\r\n        require(_idMovimiento != 0, 'Escriba un movimiento valido');\r\n        \r\n        require(MovimientoRegistrado(_idMovimiento));\r\n        \r\n        ListaOperaciones memory lista = Operaciones[_idMovimiento];\r\n        \r\n        return (lista.idMovimiento, \r\n                lista.idCliente, \r\n                lista.cliente, \r\n                lista.unidad, \r\n                lista.idCliente, \r\n                lista.chofer, \r\n                lista.fecha, \r\n                lista.evento);\r\n                \r\n    }\r\n    \r\n    function MovimientoRegistrado(uint _idMovimiento) private view returns (bool)\r\n    {\r\n        return OperacionesRegistradas[_idMovimiento];\r\n        \r\n    }\r\n    \r\n    function pause() public onlyOwner whenNotPaused \r\n    { \r\n        paused = true;\r\n        \r\n        emit Pause(); \r\n        \r\n    }\r\n\r\n    function unpause() public onlyOwner whenPaused \r\n    { \r\n        paused = false; \r\n        \r\n        emit Unpause(); \r\n        \r\n    }\r\n\r\n    function destroyContract() public onlyOwner \r\n    { \r\n        selfdestruct(owner); \r\n        \r\n    }\r\n\r\n    modifier whenNotPaused() \r\n    { \r\n        require(!paused); \r\n        _; \r\n        \r\n    }\r\n    \r\n    modifier whenPaused() \r\n    { \r\n        require(paused); \r\n        _; \r\n        \r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"destroyContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idMovimiento\",\"type\":\"uint256\"},{\"name\":\"_idCliente\",\"type\":\"uint256\"},{\"name\":\"_cliente\",\"type\":\"string\"},{\"name\":\"_unidad\",\"type\":\"uint256\"},{\"name\":\"_idChofer\",\"type\":\"uint256\"},{\"name\":\"_chofer\",\"type\":\"string\"},{\"name\":\"_fecha\",\"type\":\"string\"},{\"name\":\"_evento\",\"type\":\"string\"}],\"name\":\"RegistraMovimiento\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_idMovimiento\",\"type\":\"uint256\"}],\"name\":\"ConsultaMovimiento\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"\",\"type\":\"string\"}],\"name\":\"registramovimiento\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"RegistroTransportes_v1","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://8cc4d595c3fd7b2b3bb834fda049b54f87a457d77c34dcaeb84ad1b8f4f201c2"}]}