{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.1;\r\n\r\nlibrary SafeMath {\r\n  \r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    \r\n    address public owner = address(0);\r\n    bool public stoped  = false;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event Stoped(address setter ,bool newValue);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier whenNotStoped() {\r\n        require(!stoped);\r\n        _;\r\n    }\r\n\r\n    function setStoped(bool _needStoped) public onlyOwner {\r\n        require(stoped != _needStoped);\r\n        stoped = _needStoped;\r\n        emit Stoped(msg.sender,_needStoped);\r\n    }\r\n\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(owner, address(0));\r\n        owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract Cmoable is Ownable {\r\n    address public cmo = address(0);\r\n\r\n    event CmoshipTransferred(address indexed previousCmo, address indexed newCmo);\r\n\r\n    modifier onlyCmo() {\r\n        require(msg.sender == cmo);\r\n        _;\r\n    }\r\n\r\n    function renounceCmoship() public onlyOwner {\r\n        emit CmoshipTransferred(cmo, address(0));\r\n        owner = address(0);\r\n    }\r\n\r\n    function transferCmoship(address newCmo) public onlyOwner {\r\n        _transferCmoship(newCmo);\r\n    }\r\n\r\n    function _transferCmoship(address newCmo) internal {\r\n        require(newCmo != address(0));\r\n        emit CmoshipTransferred(cmo, newCmo);\r\n        cmo = newCmo;\r\n    }\r\n}\r\n\r\n\r\ncontract BaseToken is Ownable, Cmoable {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint8  public decimals;\r\n    uint256 public totalSupply;\r\n    uint256 public initedSupply = 0;\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    modifier onlyOwnerOrCmo() {\r\n        require(msg.sender == cmo || msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint256 _value) internal whenNotStoped {\r\n        require(_to != address(0x0));\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n        uint256 previousBalances = balanceOf[_from].add(balanceOf[_to]);\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        balanceOf[_to] = balanceOf[_to].add(_value);\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n        emit Transfer(_from, _to, _value);\r\n    }\r\n    \r\n    function _approve(address _spender, uint256 _value) internal whenNotStoped returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        return _approve(_spender, _value);\r\n    }\r\n}\r\n\r\n\r\ncontract BurnToken is BaseToken {\r\n    uint256 public burnSupply = 0;\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    function _burn(address _from, uint256 _value) internal whenNotStoped returns(bool success) {\r\n        require(balanceOf[_from] >= _value);\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        totalSupply = totalSupply.sub(_value);\r\n        burnSupply  = burnSupply.add(_value);\r\n        emit Burn(_from, _value);\r\n        return true;        \r\n    }\r\n\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        return _burn(msg.sender,_value);\r\n    }\r\n\r\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n        return _burn(_from,_value);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n \r\ncontract LockToken is BaseToken {\r\n    struct LockMeta {\r\n        uint256 amount;\r\n        uint256 endtime;\r\n        bool    deleted;\r\n    }\r\n\r\n    // 0 删除 1 静态 2 动态\r\n    event Locked(uint32 indexed _type, address indexed _who, uint256 _amounts, uint256 _endtimes);\r\n    event Released(uint32 indexed _type, address indexed _who, uint256 _amounts);\r\n    //  0 静态 1 动态 2 总的\r\n    mapping (address => mapping(uint32 => uint256)) public lockedAmount;\r\n     // 0 静态 1 动态\r\n    mapping (address => mapping(uint32 => LockMeta[])) public lockedDetail;\r\n\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(balanceOf[_from] >= _value + lockedAmount[_from][2]);\r\n        super._transfer(_from, _to, _value);\r\n    }\r\n\r\n    function lockRelease() public whenNotStoped {\r\n        \r\n        require(lockedAmount[msg.sender][3] != 0);\r\n\r\n        uint256 fronzed_released = 0;\r\n        uint256 dynamic_released = 0;\r\n\r\n        if ( lockedAmount[msg.sender][0] != 0 )\r\n        {\r\n            for (uint256 i = 0; i < lockedDetail[msg.sender][0].length; i++) {\r\n\r\n                LockMeta storage _meta = lockedDetail[msg.sender][0][i];\r\n                if ( !_meta.deleted && _meta.endtime <= now)\r\n                {\r\n                    _meta.deleted = true;\r\n                    fronzed_released = fronzed_released.add(_meta.amount);\r\n                    emit Released(1, msg.sender, _meta.amount);\r\n                }\r\n            }\r\n        }\r\n\r\n        if ( lockedAmount[msg.sender][1] != 0 )\r\n        {\r\n            for (uint256 i = 0; i < lockedDetail[msg.sender][1].length; i++) {\r\n\r\n                LockMeta storage _meta = lockedDetail[msg.sender][0][i];\r\n                if ( !_meta.deleted && _meta.endtime <= now)\r\n                {\r\n                    _meta.deleted = true;\r\n                    dynamic_released = dynamic_released.add(_meta.amount);\r\n                    emit Released(2, msg.sender, _meta.amount);\r\n                    \r\n                }\r\n            }\r\n        }\r\n\r\n        if ( fronzed_released > 0 || dynamic_released > 0 ) {\r\n            lockedAmount[msg.sender][0] = lockedAmount[msg.sender][0].sub(fronzed_released);\r\n            lockedAmount[msg.sender][1] = lockedAmount[msg.sender][1].sub(dynamic_released);\r\n            lockedAmount[msg.sender][2] = lockedAmount[msg.sender][2].sub(dynamic_released).sub(fronzed_released);\r\n        }\r\n    }\r\n\r\n    // type = 0 删除 1 静态  2 动态\r\n    function lock(uint32 _type, address _who, uint256[] memory _amounts, uint256[] memory _endtimes) public  onlyOwnerOrCmo {\r\n        require(_amounts.length == _endtimes.length);\r\n\r\n        uint256 _total;\r\n\r\n        if ( _type == 2 ) {\r\n            if ( lockedDetail[_who][1].length > 0 )\r\n            {\r\n                emit Locked(0, _who, lockedAmount[_who][1], 0);\r\n                delete lockedDetail[_who][1];\r\n            }\r\n\r\n            for (uint256 i = 0; i < _amounts.length; i++) {\r\n                _total = _total.add(_amounts[i]);\r\n                lockedDetail[_who][1].push(LockMeta({\r\n                    amount: _amounts[i],\r\n                    endtime: _endtimes[i],\r\n                    deleted:false\r\n                }));\r\n                emit Locked(2, _who, _amounts[i], _endtimes[i]);\r\n            }\r\n            lockedAmount[_who][1] = _total;\r\n            lockedAmount[_who][2] = lockedAmount[_who][0].add(_total);\r\n            return;\r\n        }\r\n\r\n\r\n        if ( _type == 1 ) {\r\n            if ( lockedDetail[_who][0].length > 0 )\r\n            {\r\n                revert();\r\n            }\r\n\r\n            for (uint256 i = 0; i < _amounts.length; i++) {\r\n                _total = _total.add(_amounts[i]);\r\n                lockedDetail[_who][0].push(LockMeta({\r\n                    amount: _amounts[i],\r\n                    endtime: _endtimes[i],\r\n                    deleted:false\r\n                }));\r\n                emit Locked(1, _who, _amounts[i], _endtimes[i]);\r\n            }\r\n            lockedAmount[_who][0] = _total;\r\n            lockedAmount[_who][2] = lockedAmount[_who][1].add(_total);\r\n            return;\r\n        }\r\n\r\n        if ( _type == 0 ) {\r\n            lockedAmount[_who][2] = lockedAmount[_who][2].sub(lockedAmount[_who][1]);\r\n            emit Locked(0, _who, lockedAmount[_who][1], 0);\r\n            delete lockedDetail[_who][1];\r\n            \r\n        }\r\n    }\r\n}\r\n\r\ncontract Proxyable is BaseToken,BurnToken{\r\n\r\n    mapping (address => bool) public disabledProxyList;\r\n\r\n    function enableProxy() public whenNotStoped {\r\n\r\n        disabledProxyList[msg.sender] = false;\r\n    }\r\n\r\n    function disableProxy() public whenNotStoped{\r\n        disabledProxyList[msg.sender] = true;\r\n    }\r\n\r\n    function proxyBurnFrom(address _from, uint256 _value) public  onlyOwnerOrCmo returns (bool success) {\r\n        \r\n        require(!disabledProxyList[_from]);\r\n        super._burn(_from, _value);\r\n        return true;\r\n    }\r\n\r\n    function proxyTransferFrom(address _from, address _to, uint256 _value) public onlyOwnerOrCmo returns (bool success) {\r\n        \r\n        require(!disabledProxyList[_from]);\r\n        super._transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n  \r\n}\r\n\r\n \r\n\r\ncontract CustomToken is BaseToken,BurnToken,LockToken,Proxyable {\r\n\r\n    constructor() public {\r\n        \r\n  \r\n        totalSupply  = 2000000000000000000000000000;\r\n        initedSupply = 2000000000000000000000000000;\r\n        name = 'Lionex Coin';\r\n        symbol = 'LIN';\r\n        decimals = 18;\r\n        balanceOf[0x441ca6D0Ae6567a128570DEA2a573A01e4f71e42] = 2000000000000000000000000000;\r\n        emit Transfer(address(0), 0x441ca6D0Ae6567a128570DEA2a573A01e4f71e42, 2000000000000000000000000000);\r\n\r\n        // 管理者\r\n        owner = 0xbC8e1AcA830A37646cEDEb14c7158F3F1529C909;\r\n        cmo   = 0xA3A2B7d2Cb75D53FfAF710824a51a4B3cF30e9D1;\r\n        \r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"lockedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cmo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCmo\",\"type\":\"address\"}],\"name\":\"transferCmoship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lockRelease\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stoped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_needStoped\",\"type\":\"bool\"}],\"name\":\"setStoped\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enableProxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"proxyBurnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableProxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockedDetail\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endtime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"proxyTransferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_type\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_endtimes\",\"type\":\"uint256[]\"}],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceCmoship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"disabledProxyList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"_type\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amounts\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_endtimes\",\"type\":\"uint256\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"_type\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amounts\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousCmo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newCmo\",\"type\":\"address\"}],\"name\":\"CmoshipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newValue\",\"type\":\"bool\"}],\"name\":\"Stoped\",\"type\":\"event\"}]","ContractName":"CustomToken","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://b6ad45c83b4a44b640472ce5f6bbe013190d76e2b400ede7861e81efbc3a5a3b"}]}