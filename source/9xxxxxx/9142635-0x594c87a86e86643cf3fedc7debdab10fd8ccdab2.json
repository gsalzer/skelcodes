{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts\\IERC20.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev ERC20 contract interface.\r\n */\r\ncontract IERC20\r\n{\r\n\tfunction totalSupply() public view returns (uint);\r\n\t\r\n\tfunction transfer(address _to, uint _value) public returns (bool success);\r\n\t\r\n\tfunction transferFrom(address _from, address _to, uint _value) public returns (bool success);\r\n\t\r\n\tfunction balanceOf(address _owner) public view returns (uint balance);\r\n\t\r\n\tfunction approve(address _spender, uint _value) public returns (bool success);\r\n\t\r\n\tfunction allowance(address _owner, address _spender) public view returns (uint remaining);\r\n\t\r\n\tevent Transfer(address indexed from, address indexed to, uint tokens);\r\n\tevent Approval(address indexed owner, address indexed spender, uint tokens);\r\n}\r\n\r\n// File: contracts\\SafeMathLib.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// Safe maths\r\n// ----------------------------------------------------------------------------\r\n\r\nlibrary SafeMathLib {\r\n\t\r\n\tusing SafeMathLib for uint;\r\n\t\r\n\t/**\r\n\t * @dev Sum two uint numbers.\r\n\t * @param a Number 1\r\n\t * @param b Number 2\r\n\t * @return uint\r\n\t */\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a, \"SafeMathLib.add: required c >= a\");\r\n    }\r\n\t\r\n\t/**\r\n\t * @dev Substraction of uint numbers.\r\n\t * @param a Number 1\r\n\t * @param b Number 2\r\n\t * @return uint\r\n\t */\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a, \"SafeMathLib.sub: required b <= a\");\r\n        c = a - b;\r\n    }\r\n\t\r\n\t/**\r\n\t * @dev Product of two uint numbers.\r\n\t * @param a Number 1\r\n\t * @param b Number 2\r\n\t * @return uint\r\n\t */\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require((a == 0 || c / a == b), \"SafeMathLib.mul: required (a == 0 || c / a == b)\");\r\n    }\r\n\t\r\n\t/**\r\n\t * @dev Division of two uint numbers.\r\n\t * @param a Number 1\r\n\t * @param b Number 2\r\n\t * @return uint\r\n\t */\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0, \"SafeMathLib.div: required b > 0\");\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n// File: contracts\\FITHTokenSale.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n\r\n\r\n/**\r\n * @dev Fiatech FITH token sale contract.\r\n */\r\ncontract FITHTokenSale\r\n{\r\n\tusing SafeMathLib for uint;\r\n\t\r\n    address payable public admin;\r\n    \r\n\tIERC20 public tokenContract;\r\n\t\r\n\tuint256 public tokenPrice;\r\n    uint256 public tokensSold;\r\n\t\r\n\t// sell event raised when buyer purchases tokens\r\n    event Sell(address _buyer, uint256 _amount, uint256 _tokensSold);\r\n\t\r\n\t// token price update event\r\n\tevent TokenPriceUpdate(address _admin, uint256 _tokenPrice);\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * @dev Constructor\r\n\t */\r\n    constructor(IERC20 _tokenContract, uint256 _tokenPrice) public\r\n\t{\r\n\t\trequire(_tokenPrice > 0, \"_tokenPrice greater than zero required\");\r\n\t\t\r\n        admin = msg.sender;\r\n        tokenContract = _tokenContract;\r\n        tokenPrice = _tokenPrice;\r\n    }\r\n\t\r\n\tmodifier onlyAdmin() {\r\n        require(msg.sender == admin, \"Admin required\");\r\n        _;\r\n    }\r\n\t\r\n\tfunction updateTokenPrice(uint256 _tokenPrice) public onlyAdmin {\r\n        require(_tokenPrice > 0 && _tokenPrice != tokenPrice, \"Token price must be greater than zero and different than current\");\r\n        \r\n\t\ttokenPrice = _tokenPrice;\r\n\t\temit TokenPriceUpdate(admin, _tokenPrice);\r\n    }\r\n\t\r\n    function buyTokens(uint256 _numberOfTokens) public payable {\r\n        require(msg.value == (_numberOfTokens * tokenPrice), \"Incorrect number of tokens\");\r\n        require(tokenContract.balanceOf(address(this)) >= _numberOfTokens, \"insufficient tokens on token-sale contract\");\r\n        require(tokenContract.transfer(msg.sender, _numberOfTokens), \"Transfer tokens to buyer failed\");\r\n\t\t\r\n        tokensSold += _numberOfTokens;\r\n\t\t\r\n        emit Sell(msg.sender, _numberOfTokens, tokensSold);\r\n    }\r\n\t\r\n    function endSale() public onlyAdmin {\r\n        require(tokenContract.transfer(admin, tokenContract.balanceOf(address(this))), \"Transfer token-sale token balance to admin failed\");\r\n\t\t\r\n        // Just transfer the ether balance to the admin\r\n        admin.transfer(address(this).balance);\r\n    }\r\n\t\r\n\t/**\r\n\t * Do not accept ETH donations\r\n\t */\r\n    function () external payable {\r\n\t\trevert();\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"name\":\"updateTokenPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_tokensSold\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"name\":\"TokenPriceUpdate\",\"type\":\"event\"}]","ContractName":"FITHTokenSale","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000075d7fafbe8c7df07b157394d60c6a6848de507600000000000000000000000000000000000000000000000000000000ee6b2800","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://b9dc95d82cb45dfcb4b9ff8cf418d9f4741e06038e558f801ee0314ec3d10bf1"}]}