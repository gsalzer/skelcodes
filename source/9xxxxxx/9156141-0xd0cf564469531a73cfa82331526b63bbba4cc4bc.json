{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.12;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath { \r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      assert(b <= a);\r\n      return a - b;\r\n    }\r\n    \r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      uint256 c = a + b;\r\n      assert(c >= a);\r\n      return c;\r\n    }\r\n    \r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n}\r\n\r\n contract Multisig {\r\n    using SafeMath for uint256;\r\n    address payable public superAdmin;\r\n    address[] public owners;\r\n    uint256 public transactionId;\r\n    uint256 public transactionCount;\r\n    bool public status;\r\n\r\n    mapping (address => bool) public newOwner;\r\n    mapping (uint256 => bool) public confirmations;\r\n    mapping (uint256 => bool) public isConfirmed;\r\n    mapping (address => mapping(uint256 => bool)) public setConfirm;\r\n    mapping (uint256 => uint256) public confirmCount;\r\n    mapping (address => mapping(address => bool)) public ownertnx;\r\n    \r\n    event Ownerchange(address indexed owneraddress, address newowner, uint256 indexed tnxid);\r\n    event Mint(address indexed owneraddress, uint256 _time, uint256 indexed tnxid);\r\n    event Vest(address indexed owneraddress, address useraddress, uint256 vestamount, uint256 indexed tnxid);\r\n    event Approved(address indexed owneraddress, uint256 indexed tnxid);\r\n\r\n    constructor(bool _status) public {\r\n        superAdmin = msg.sender;\r\n        owners.push(superAdmin);\r\n        newOwner[msg.sender] = true;\r\n        status = _status;\r\n    } \r\n    \r\n    modifier onlySuperAdmin() {\r\n        require (msg.sender == superAdmin, \"onlySuperAdmin\");\r\n        _;\r\n    }\r\n    \r\n    modifier isOwner() {\r\n        require (newOwner[msg.sender], \"Not a owner\");\r\n        _;\r\n    }\r\n    \r\n    modifier contractStatus() {\r\n         require(status, \"Contract Inactive\");\r\n         _;\r\n    }\r\n    \r\n    /**\r\n     * @dev Change and update Super admin \r\n     * @param _address New address to be changed \r\n     */ \r\n    function changeSuperadmin(address payable _address) public onlySuperAdmin returns(bool) {\r\n        require(_address != address(0), \"Null Address\");\r\n        superAdmin = _address;\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * @dev Add owner\r\n     * @param ownerAddress Address to be added as owner list\r\n     */ \r\n    function addOwner(address[] memory ownerAddress) public onlySuperAdmin contractStatus returns (bool) {\r\n        for(uint i=0; i < ownerAddress.length; i++) {\r\n            require (!newOwner[ownerAddress[i]],\"Already a owner\");\r\n            newOwner[ownerAddress[i]] = true;\r\n            owners.push(ownerAddress[i]);\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * @dev Remove Owner \r\n     * @param _address Address to be removed from owner list\r\n     */\r\n    function removeOwner(address _address) public onlySuperAdmin contractStatus returns (bool) {\r\n        require (newOwner[_address], \"Not a owner\");\r\n        for(uint i=0; i < owners.length; i++) {\r\n            if(owners[i] == _address) {\r\n                owners[i] = owners[owners.length.sub(1)];\r\n                owners.length = owners.length.sub(1);\r\n            }\r\n        }\r\n        newOwner[_address] = false;\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * @dev Request submission for owner change in AFX contract \r\n     * @param currentOwner Current owner address \r\n     * @param _newOwner New owner address\r\n     */ \r\n    function requestOwnerChange(address currentOwner, address _newOwner) public contractStatus returns (uint256) {\r\n        require ((currentOwner != address(0)) && (_newOwner != address(0)),\"Null address\");\r\n        require (newOwner[currentOwner], \"Should already be a owner\"); \r\n        require(!newOwner[_newOwner],\"Should not be a owner\");\r\n        require(!ownertnx[currentOwner][_newOwner], \"Transaction submitted already\");\r\n        ownertnx[currentOwner][_newOwner] = true;\r\n        transactionId = transactionCount.add(1);\r\n        confirmations[transactionId] = true;\r\n        transactionCount = transactionCount.add(1);\r\n        emit Ownerchange(currentOwner, _newOwner, transactionId);\r\n        return transactionId;\r\n    }\r\n    \r\n    /** @dev Approve Request \r\n     * _transactionId Id to be approved\r\n     */ \r\n    function approveRequest(uint256 _transactionId) public isOwner contractStatus returns (bool) {\r\n        require(confirmations[_transactionId], \"Invalid Transaction\");\r\n        require(_setConfirmation(_transactionId), \"Transaction not confirmed\");\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * @dev Internal function\r\n     */ \r\n    function _setConfirmation(uint256 _transactionId) internal returns (bool) {\r\n        require (!setConfirm[msg.sender][_transactionId], \"Transaction already confirmed\");\r\n        setConfirm[msg.sender][_transactionId] = true;\r\n        confirmCount[_transactionId] = confirmCount[_transactionId].add(1);\r\n        if(confirmCount[_transactionId] > (owners.length).div(2)) {\r\n            isConfirmed[_transactionId] = true;\r\n        }\r\n        emit Approved(msg.sender, transactionId);\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * @dev Check if request is approved\r\n     * @param _transactionId Id to check \r\n     */ \r\n    function executeAdminChange(uint256 _transactionId, address _newaddress) public returns (bool) {\r\n        require(confirmations[_transactionId], \"Invalid Transaction\");\r\n        newOwner[_newaddress] = true;\r\n        owners.push(_newaddress);\r\n        return isConfirmed[_transactionId];\r\n    }\r\n    \r\n    /**\r\n     * @dev Check if request is approved\r\n     * @param _transactionId Id to check \r\n     */ \r\n    function executeChange(uint256 _transactionId) public view returns (bool) {\r\n        require(confirmations[_transactionId], \"Invalid Transaction\");\r\n        return isConfirmed[_transactionId];\r\n    }\r\n\r\n    /**\r\n     * @dev Request submission for vesting in AFX contract \r\n     * @param _owner Token holder address \r\n     * @param _address User address \r\n     * @param _amount Amount to be vest\r\n     */ \r\n    function vestingTransaction(address _owner, address _address, uint256 _amount) public contractStatus returns (uint256) {\r\n        require (newOwner[_owner],\"Not a owner\");\r\n        transactionId = transactionCount.add(1);\r\n        confirmations[transactionId] = true;\r\n        transactionCount = transactionCount.add(1);\r\n        emit Vest(_owner, _address, _amount, transactionId);\r\n        return transactionId;\r\n    }\r\n    \r\n    /**\r\n     * @dev Request submission for Minting in AFX contract\r\n     * @param _owner Token holder address \r\n     * @param _amount Amount to mint \r\n     * @param _time Requested time\r\n     */ \r\n    function mintTransaction(address _owner, uint256 _amount, uint256 _time) public contractStatus returns (uint256) {\r\n        require (newOwner[_owner],\"Not a owner\");\r\n        transactionId = transactionCount.add(1);\r\n        confirmations[transactionId] = true;\r\n        transactionCount = transactionCount.add(1);\r\n        emit Mint(_owner, _amount, _time);\r\n        return transactionId;\r\n    }\r\n    \r\n    /**\r\n     * @dev Return owner count \r\n     */ \r\n    function ownerscount() public view returns(uint256) {\r\n        return owners.length;\r\n    }\r\n    \r\n    /**\r\n     * @dev Update Contract status\r\n     * @param _status Status to be updated\r\n     */ \r\n    function updatecontractStatus(bool _status) public onlySuperAdmin returns(bool) {\r\n        require(status != _status);\r\n        status = _status;\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * @dev Selfdestruct\r\n     */ \r\n    function kill() public onlySuperAdmin {\r\n        selfdestruct(superAdmin);\r\n    }\r\n    \r\n }","ABI":"[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owneraddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tnxid\",\"type\":\"uint256\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owneraddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tnxid\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owneraddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newowner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tnxid\",\"type\":\"uint256\"}],\"name\":\"Ownerchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owneraddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"useraddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestamount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tnxid\",\"type\":\"uint256\"}],\"name\":\"Vest\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"ownerAddress\",\"type\":\"address[]\"}],\"name\":\"addOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_transactionId\",\"type\":\"uint256\"}],\"name\":\"approveRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"changeSuperadmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"confirmCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"confirmations\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_transactionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_newaddress\",\"type\":\"address\"}],\"name\":\"executeAdminChange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_transactionId\",\"type\":\"uint256\"}],\"name\":\"executeChange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"mintTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerscount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownertnx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"requestOwnerChange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"setConfirm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"superAdmin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transactionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"updatecontractStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"vestingTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Multisig","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000001","Library":"","LicenseType":"None","SwarmSource":"bzzr://8be3e0079a56844de12b17c03bfc69c28238d9b48b0b79e1e15ebc692d717aa6"}]}