{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;//告诉编译器solidity版本号\r\n//SafeMath库，用来防止加减乘除运算中出现数据溢出\r\nlibrary SafeMath {\r\n    //乘法\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n       //任何数乘0，结果都是0，\r\n       //很像一句废话，但可以防止下面除0运算出现。\r\n        if (a == 0) {\r\n          return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);//逆向检查，如果c溢\r\n//出将终止执行，也就是括号里为假，程序终止。\r\n        return c;\r\n    }\r\n    //除法\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;//由于整数除以整数不会溢出，不需要做逆向检查。\r\n        return c;\r\n    }\r\n    //减法\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);//如果b>a，b-a是负数，溢出\r\n        return a - b;\r\n    }\r\n    //加法\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);//如果a加上b结果更小了，说明溢出了  \r\n        //有人可能会问，为啥不检查c=>b呢？\r\n       //因为如果c<a，则说明a+b结果溢出，也就是b+a会溢出，也就是b越加a越小，即c<b。\r\n        return c;   \r\n    }\r\n}\r\n//所有权合约，用来判断操作币的人是否合法，以及转移所有权\r\ncontract Owned {\r\n    address public owner;//全局变量\r\n    address public newOwner;//全局变量\r\n    modifier onlyOwner { require(msg.sender == owner); _; }//修饰函数用的，在函数运行前检查调用者是否为所有者\r\n    event OwnerUpdate(address _prevOwner, address _newOwner);//事件，更新所有者\r\n\r\n    function Owned() public {//构造函数，与合约同名，第一次构造合约的时候调用一次，就只有这一次哦\r\n        owner = msg.sender;//初始化所有者\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {//更新所有者函数，onlyOwner使得只有原所有者可以调用该函数\r\n        require(_newOwner != owner);\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() public {//确认所有权，在原所有者出让所有权后，新所有者发起事件，将新所有权写入区块链\r\n        require(msg.sender == newOwner);\r\n        OwnerUpdate(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = 0x0;\r\n    }\r\n}\r\n\r\n// ERC20 Interface，定义ERC20代币规范的函数和事件接口\r\ncontract ERC20 {\r\n   //总发行量查询函数\r\n    function totalSupply() public view returns (uint _totalSupply);\r\n   //账户余额查询函数\r\n    function balanceOf(address _owner) public view returns (uint balance);\r\n   //代币转移函数1，发送者调用发币\r\n    function transfer(address _to, uint _value) public returns (bool success);\r\n    //代币转移函数2，接收者调用收币，或者转移给第三方，类似于比特币中消费UTXO\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success);\r\n    //批准代币转移函数，配合transferFrom使用，类似于比特币中构造UTXO\r\n    function approve(address _spender, uint _value) public returns (bool success);\r\n    //可消费余额查询函数\r\n    function allowance(address _owner, address _spender) public view returns (uint remaining);\r\n  //代币转移事件\r\n    event Transfer(address indexed _from, address indexed _to, uint _value);\r\n    //代币转移批准事件\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\n\r\n// ERC20Token，定义ERC20代币的函数内容\r\ncontract ERC20Token is ERC20 {\r\n    using SafeMath for uint256;//使用SafeMath库\r\n    mapping(address => uint256) balances;//记录账户余额的表，地址为索引，余额为值\r\n    mapping (address => mapping (address => uint256)) allowed;//记录转移可用余额的表，索引是转移的输入地址和输出地址，余额为值，类似于比特币里的未消费输出UTXO。\r\n    uint256 public totalToken; //代币总量\r\n//代币转移函数，_to目标地址，_value代币数量，公有函数哦，谁调用就转谁的币，函数将返回转移是否成功\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        if (balances[msg.sender] >= _value && _value > 0) {//转移者必须有足够的币吧，而且格外检查数量不是负数，防止有人没钱装大佬，设计合约真的是要格外小心啊\r\n            balances[msg.sender] = balances[msg.sender].sub(_value);\r\n            balances[_to] = balances[_to].add(_value);\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n//调用函数者将其控制的币（别人调用approve函数得来）转移（可以给自己，也可以给第三个人）\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n            balances[_from] = balances[_from].sub(_value);\r\n            balances[_to] = balances[_to].add(_value);\r\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n            Transfer(_from, _to, _value);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    //总发行量查询\r\n    function totalSupply() public view returns (uint256) {\r\n        return totalToken;\r\n    }\r\n    //账户余额查询\r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n//调用函数者将其_value币给_spender控制，_spender通过调用transferFrom可将币转给自己，也可以转给别人\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n//查询_owner给_spender的可用余额\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n}\r\n\r\n//OTCBTC合约，定义OTB的基本信息和燃烧OTB的方法\r\ncontract OTCBTC is ERC20Token, Owned {\r\n\r\n    string  public constant name = \"Starlink\";\r\n    string  public constant symbol = \"SLC\";\r\n    uint256 public constant decimals = 18;\r\n    uint256 public tokenDestroyed;\r\n    event Burn(address indexed _from, uint256 _tokenDestroyed, uint256 _timestamp);\r\n\r\n//在构造函数中定义代币初始发行量\r\n    function OTCBTC() public {\r\n        totalToken = 100000005;\r\n        balances[msg.sender] = totalToken;\r\n    }\r\n//转移代币\r\n    function transferAnyERC20Token(address _tokenAddress, address _recipient, uint256 _amount) public onlyOwner returns (bool success) {\r\n        return ERC20(_tokenAddress).transfer(_recipient, _amount);\r\n    }\r\n//燃烧代币\r\n    function burn (uint256 _burntAmount) public returns (bool success) {\r\n        require(balances[msg.sender] >= _burntAmount && _burntAmount > 0);\r\n        balances[msg.sender] = balances[msg.sender].sub(_burntAmount);\r\n        totalToken = totalToken.sub(_burntAmount);\r\n        tokenDestroyed = tokenDestroyed.add(_burntAmount);\r\n        require (tokenDestroyed <= 100000005);\r\n  //燃烧就是转移到0地址      Transfer(address(this), 0x0, _burntAmount);\r\n        Burn(msg.sender, _burntAmount, block.timestamp);\r\n        return true;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"ERC20Token","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://a14f6dbc5b8ba72b5faefe29c4d2631f43e482d80e52c04dca651943816fb7ca"}]}