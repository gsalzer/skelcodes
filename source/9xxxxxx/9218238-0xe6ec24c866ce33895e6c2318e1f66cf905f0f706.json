{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n\r\n\r\n/**------------------------------------\r\n\r\nENERGY Token   \r\n\r\nEnergy Token is a new ERC20 token that is human-neutral, trustless, and scarce.  The contract is non-owned, meaning there is no monarch and no initial supply. \r\n\r\nThe acquire energy tokens, simply send Proof of Work pure-mined 0xBTC tokens to the contract and that will mint new Energy tokens.  \r\n\r\n\r\n------------------------------------*/\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n \r\ncontract ERC20Interface {\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\r\n}\r\n\r\n\r\ncontract EnergyToken {\r\n\r\n    using SafeMath for uint;\r\n\r\n    address constant public masterToken = 0xB6eD7644C69416d67B522e20bC294A9a9B405B31;\r\n\r\n    string public name     = \"Energy\";\r\n    string public symbol   = \"EGY\";\r\n    uint8  public decimals = 8;\r\n    uint private _totalSupply;\r\n\r\n    event  Approval(address indexed src, address indexed ext, uint amt);\r\n    event  Transfer(address indexed src, address indexed dst, uint amt);\r\n    event  Deposit(address indexed dst, uint amt);\r\n    event  Withdrawal(address indexed src, uint amt);\r\n\r\n    mapping (address => uint)                       public  balances;\r\n    mapping (address => mapping (address => uint))  public  allowance;  \r\n\r\n  \r\n\r\n    constructor() public {\r\n\r\n    }\r\n\r\n    /**\r\n    * Do not allow ETH to enter\r\n    */\r\n     function() external payable\r\n     {\r\n         revert();\r\n     }\r\n\r\n\r\n    /**\r\n     * @dev Deposit original tokens, receive proxy tokens 1:1\r\n     * This method requires token approval.\r\n     *\r\n     * @param amount of tokens to deposit\r\n     */\r\n    function mutateTokens(address from, uint amount) public returns (bool)\r\n    {\r\n\r\n        require( amount >= 0 );\r\n\r\n        require( ERC20Interface( masterToken ).transferFrom( from, address(this), amount) );\r\n\r\n        balances[from] = balances[from].add(amount);\r\n        _totalSupply = _totalSupply.add(amount);\r\n\r\n        emit Transfer(address(this), from, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n \r\n\r\n\r\n   //standard ERC20 method\r\n    function totalSupply() public view returns (uint) {\r\n        return _totalSupply;\r\n    }\r\n\r\n   //standard ERC20 method\r\n     function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n        return balances[tokenOwner];\r\n    }\r\n\r\n     //standard ERC20 method\r\n    function getAllowance(address owner, address spender) public view returns (uint)\r\n    {\r\n      return allowance[owner][spender];\r\n    }\r\n\r\n   //standard ERC20 method\r\n  function approve(address spender,   uint tokens) public returns (bool success) {\r\n      allowance[msg.sender][spender] = tokens;\r\n      emit Approval(msg.sender, spender, tokens);\r\n      return true;\r\n  }\r\n\r\n\r\n  //standard ERC20 method\r\n   function transfer(address to,  uint tokens) public returns (bool success) {\r\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n        balances[to] = balances[to].add(tokens);\r\n        emit Transfer(msg.sender, to, tokens);\r\n        return true;\r\n    }\r\n\r\n\r\n   //standard ERC20 method\r\n   function transferFrom( address from, address to,  uint tokens) public returns (bool success) {\r\n       balances[from] = balances[from].sub(tokens);\r\n       allowance[from][to] = allowance[from][to].sub(tokens);\r\n       balances[to] = balances[to].add(tokens);\r\n       emit Transfer( from, to, tokens);\r\n       return true;\r\n   }\r\n\r\n  \r\n \r\n \r\n   \r\n\r\n\r\n   \r\n \r\n \r\n \r\n\r\n\r\n       /*\r\n         Receive approval from ApproveAndCall() to mutate tokens.\r\n\r\n         This method allows 0xBTC to be mutated into this token using a single method call.\r\n       */\r\n     function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public returns (bool success) {\r\n\r\n        require(token == masterToken);\r\n\r\n        require(mutateTokens(from, tokens));\r\n\r\n        return true;\r\n\r\n     }\r\n\r\n\r\n \r\n\r\n     function bytesEqual(bytes memory b1,bytes memory b2) pure internal returns (bool)\r\n        {\r\n          if(b1.length != b2.length) return false;\r\n\r\n          for (uint i=0; i<b1.length; i++) {\r\n            if(b1[i] != b2[i]) return false;\r\n          }\r\n\r\n          return true;\r\n        }\r\n\r\n\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"getAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"masterToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mutateTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"ext\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"}]","ContractName":"EnergyToken","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://b956aa1f22b172eaba196f9077394a64da893752c91ad7b772963f40311b9a52"}]}