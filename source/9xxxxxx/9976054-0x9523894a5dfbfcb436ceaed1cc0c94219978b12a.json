{"status":"1","message":"OK","result":[{"SourceCode":"// Copyright (C) 2020 Zerion Inc. <https://zerion.io>\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program. If not, see <https://www.gnu.org/licenses/>.\r\n\r\npragma solidity 0.6.5;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface ERC20 {\r\n    function balanceOf(address) external view returns (uint256);\r\n}\r\n\r\n\r\n/**\r\n * @title Protocol adapter interface.\r\n * @dev adapterType(), tokenType(), and getBalance() functions MUST be implemented.\r\n * @author Igor Sobolev <sobolev@zerion.io>\r\n */\r\ninterface ProtocolAdapter {\r\n\r\n    /**\r\n     * @dev MUST return \"Asset\" or \"Debt\".\r\n     * SHOULD be implemented by the public constant state variable.\r\n     */\r\n    function adapterType() external pure returns (string memory);\r\n\r\n    /**\r\n     * @dev MUST return token type (default is \"ERC20\").\r\n     * SHOULD be implemented by the public constant state variable.\r\n     */\r\n    function tokenType() external pure returns (string memory);\r\n\r\n    /**\r\n     * @dev MUST return amount of the given token locked on the protocol by the given account.\r\n     */\r\n    function getBalance(address token, address account) external view returns (uint256);\r\n}\r\n\r\n\r\n/**\r\n * @dev CurveRewards contract interface.\r\n * Only the functions required for SynthetixAssetAdapter contract are added.\r\n * The CurveRewards contract is available here\r\n * github.com/Synthetixio/Unipool/blob/master/contracts/CurveRewards.sol.\r\n */\r\ninterface CurveRewards {\r\n    function earned(address) external view returns (uint256);\r\n}\r\n\r\n\r\n/**\r\n * @dev iETHRewards contract interface.\r\n * Only the functions required for SynthetixAssetAdapter contract are added.\r\n * The iETHRewards contract is available here\r\n * github.com/Synthetixio/Unipool/blob/master/contracts/iETHRewards.sol.\r\n */\r\ninterface iETHRewards {\r\n    function earned(address) external view returns (uint256);\r\n}\r\n\r\n\r\n/**\r\n * @dev Unipool contract interface.\r\n * Only the functions required for SynthetixAssetAdapter contract are added.\r\n * The Unipool contract is available here\r\n * github.com/Synthetixio/Unipool/blob/master/contracts/Unipool.sol.\r\n */\r\ninterface Unipool {\r\n    function earned(address) external view returns (uint256);\r\n}\r\n\r\n\r\n/**\r\n * @dev Proxy contract interface.\r\n * Only the functions required for SynthetixAssetAdapter contract are added.\r\n * The Proxy contract is available here\r\n * github.com/Synthetixio/synthetix/blob/master/contracts/Proxy.sol.\r\n */\r\ninterface Proxy {\r\n    function target() external view returns (address);\r\n}\r\n\r\n\r\n/**\r\n * @dev Synthetix contract interface.\r\n * Only the functions required for SynthetixAssetAdapter contract are added.\r\n * The Synthetix contract is available here\r\n * github.com/Synthetixio/synthetix/blob/master/contracts/Synthetix.sol.\r\n */\r\ninterface Synthetix {\r\n    function collateral(address) external view returns (uint256);\r\n}\r\n\r\n\r\n/**\r\n * @title Asset adapter for Synthetix protocol.\r\n * @dev Implementation of ProtocolAdapter interface.\r\n * @author Igor Sobolev <sobolev@zerion.io>\r\n */\r\ncontract SynthetixAssetAdapter is ProtocolAdapter {\r\n\r\n    string public constant override adapterType = \"Asset\";\r\n\r\n    string public constant override tokenType = \"ERC20\";\r\n\r\n    address internal constant SNX = 0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F;\r\n    address internal constant SUSD_POOL_TOKEN = 0xC25a3A3b969415c80451098fa907EC722572917F;\r\n    address internal constant IETH = 0xA9859874e1743A32409f75bB11549892138BBA1E;\r\n    address internal constant UNISWAP_SETH = 0xe9Cf7887b93150D4F2Da7dFc6D502B216438F244;\r\n    address internal constant LP_REWARD_CURVE = 0xDCB6A51eA3CA5d3Fd898Fd6564757c7aAeC3ca92;\r\n    address internal constant LP_REWARD_IETH = 0xC746bc860781DC90BBFCD381d6A058Dc16357F8d;\r\n    address internal constant LP_REWARD_UNISWAP = 0x48D7f315feDcaD332F68aafa017c7C158BC54760;\r\n\r\n    /**\r\n     * @return Amount of SNX locked on the protocol by the given account.\r\n     * @dev Implementation of ProtocolAdapter interface function.\r\n     */\r\n    function getBalance(address token, address account) external view override returns (uint256) {\r\n        if (token == SNX) {\r\n            uint256 balance = Synthetix(Proxy(SNX).target()).collateral(account);\r\n            balance += CurveRewards(LP_REWARD_CURVE).earned(account);\r\n            balance += iETHRewards(LP_REWARD_IETH).earned(account);\r\n            balance += Unipool(LP_REWARD_UNISWAP).earned(account);\r\n            return balance;\r\n        } else if (token == SUSD_POOL_TOKEN) {\r\n            return ERC20(LP_REWARD_CURVE).balanceOf(account);\r\n        } else if (token == IETH) {\r\n            return ERC20(LP_REWARD_IETH).balanceOf(account);\r\n        } else if (token == UNISWAP_SETH) {\r\n            return ERC20(LP_REWARD_UNISWAP).balanceOf(account);\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"name\":\"adapterType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"SynthetixAssetAdapter","CompilerVersion":"v0.6.5+commit.f956cc89","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU LGPLv3","SwarmSource":"ipfs://b0c2870df8e59afeeee760704e57755fef1267f4bcf30ca6a0fc3e95c954fde4"}]}