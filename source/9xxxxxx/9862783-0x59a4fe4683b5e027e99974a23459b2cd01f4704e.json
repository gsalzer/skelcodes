{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/validators/IValidator.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\ninterface IValidator {\r\n    function validate(uint256 _building, uint256 _base, uint256 _body, uint256 _roof, uint256 _exterior) external view returns (bool);\r\n}\r\n\r\n// File: contracts/validators/CityBuildingValidator.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n\r\ncontract CityBuildingValidator is IValidator {\r\n\r\n    uint256 public city;\r\n    uint256 public rotation;\r\n\r\n    mapping(uint256 => uint256[]) public buildingMappings;\r\n    mapping(uint256 => mapping(uint256 => uint256[])) public buildingBaseMappings;\r\n    mapping(uint256 => mapping(uint256 => uint256[])) public buildingBodyMappings;\r\n    mapping(uint256 => mapping(uint256 => uint256[])) public buildingRoofMappings;\r\n\r\n    mapping(uint256 => uint256[]) public exteriorMappings;\r\n\r\n    address payable public platform;\r\n    address payable public partner;\r\n\r\n    modifier onlyPlatformOrPartner() {\r\n        require(msg.sender == platform || msg.sender == partner);\r\n        _;\r\n    }\r\n\r\n    constructor (address payable _platform, uint256 _city) public {\r\n        platform = _platform;\r\n        partner = msg.sender;\r\n\r\n        city = _city;\r\n    }\r\n\r\n    function validate(uint256 _building, uint256 _base, uint256 _body, uint256 _roof, uint256 _exterior) external view returns (bool) {\r\n        uint256[] memory buildingOptions = buildingMappings[rotation];\r\n        if (!contains(buildingOptions, _building)) {\r\n            return false;\r\n        }\r\n\r\n        uint256[] memory baseOptions = buildingBaseMappings[rotation][_building];\r\n        if (!contains(baseOptions, _base)) {\r\n            return false;\r\n        }\r\n\r\n        uint256[] memory bodyOptions = buildingBodyMappings[rotation][_building];\r\n        if (!contains(bodyOptions, _body)) {\r\n            return false;\r\n        }\r\n\r\n        uint256[] memory roofOptions = buildingRoofMappings[rotation][_building];\r\n        if (!contains(roofOptions, _roof)) {\r\n            return false;\r\n        }\r\n\r\n        uint256[] memory exteriorOptions = exteriorMappings[rotation];\r\n        if (!contains(exteriorOptions, _exterior)) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function contains(uint256[] memory _array, uint256 _val) internal pure returns (bool) {\r\n\r\n        bool found = false;\r\n        for (uint i = 0; i < _array.length; i++) {\r\n            if (_array[i] == _val) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    function updateRotation(uint256 _rotation) public onlyPlatformOrPartner {\r\n       rotation = _rotation;\r\n    }\r\n\r\n    function updateBuildingMappings(uint256 _rotation, uint256[] memory _params) public onlyPlatformOrPartner {\r\n        buildingMappings[_rotation] = _params;\r\n    }\r\n\r\n    function updateBuildingBaseMappings(uint256 _rotation, uint256 _building, uint256[] memory _params) public onlyPlatformOrPartner {\r\n        buildingBaseMappings[_rotation][_building] = _params;\r\n    }\r\n\r\n    function updateBuildingBodyMappings(uint256 _rotation, uint256 _building, uint256[] memory _params) public onlyPlatformOrPartner {\r\n        buildingBodyMappings[_rotation][_building] = _params;\r\n    }\r\n\r\n    function updateBuildingRoofMappings(uint256 _rotation, uint256 _building, uint256[] memory _params) public onlyPlatformOrPartner {\r\n        buildingRoofMappings[_rotation][_building] = _params;\r\n    }\r\n\r\n    function updateExteriorMappings(uint256 _rotation, uint256[] memory _params) public onlyPlatformOrPartner {\r\n        exteriorMappings[_rotation] = _params;\r\n    }\r\n\r\n    function buildingMappingsArray() public view returns (uint256[] memory) {\r\n        return buildingMappings[rotation];\r\n    }\r\n\r\n    function buildingBaseMappingsArray(uint256 _building) public view returns (uint256[] memory) {\r\n        return buildingBaseMappings[rotation][_building];\r\n    }\r\n\r\n    function buildingBodyMappingsArray(uint256 _building) public view returns (uint256[] memory) {\r\n        return buildingBodyMappings[rotation][_building];\r\n    }\r\n\r\n    function buildingRoofMappingsArray(uint256 _building) public view returns (uint256[] memory) {\r\n        return buildingRoofMappings[rotation][_building];\r\n    }\r\n\r\n    function exteriorMappingsArray() public view returns (uint256[] memory) {\r\n        return exteriorMappings[rotation];\r\n    }\r\n\r\n    function currentRotation() public view returns (uint256) {\r\n        return rotation;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_platform\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_city\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buildingBaseMappings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_building\",\"type\":\"uint256\"}],\"name\":\"buildingBaseMappingsArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buildingBodyMappings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_building\",\"type\":\"uint256\"}],\"name\":\"buildingBodyMappingsArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buildingMappings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buildingMappingsArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buildingRoofMappings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_building\",\"type\":\"uint256\"}],\"name\":\"buildingRoofMappingsArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"city\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentRotation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exteriorMappings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exteriorMappingsArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"partner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"platform\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rotation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rotation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_building\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_params\",\"type\":\"uint256[]\"}],\"name\":\"updateBuildingBaseMappings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rotation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_building\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_params\",\"type\":\"uint256[]\"}],\"name\":\"updateBuildingBodyMappings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rotation\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_params\",\"type\":\"uint256[]\"}],\"name\":\"updateBuildingMappings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rotation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_building\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_params\",\"type\":\"uint256[]\"}],\"name\":\"updateBuildingRoofMappings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rotation\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_params\",\"type\":\"uint256[]\"}],\"name\":\"updateExteriorMappings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rotation\",\"type\":\"uint256\"}],\"name\":\"updateRotation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_building\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_base\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_body\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_roof\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_exterior\",\"type\":\"uint256\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"CityBuildingValidator","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000064c971d7e3c0483fa97a7714ec55d1e1943731c70000000000000000000000000000000000000000000000000000000000000001","Library":"","LicenseType":"None","SwarmSource":"bzzr://0212eeb5274e843d3d3d47b3956c35c5b78994a3a4eb73f2e7c1346f990cf2f2"}]}