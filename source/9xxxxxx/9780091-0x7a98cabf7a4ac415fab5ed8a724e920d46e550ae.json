{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.26;\r\n\r\ncontract owned {\r\n    \r\n    address public owner;\r\n    \r\n    function owned() payable{\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    modifier onlyOwner{\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    function changeOwner(address _newOwner) onlyOwner public{\r\n        owner = _newOwner;\r\n    }\r\n    \r\n    \r\n}\r\n\r\ncontract ProofOfExistence is owned {\r\n    \r\n    mapping (string => uint256) private hashOf;\r\n    uint256 price;\r\n    string public name = 'Proof of Existence';\r\n    bool pause;\r\n    \r\n    \r\n    modifier isNotPaused{\r\n        require(!pause);\r\n        _;\r\n    }\r\n    \r\n    modifier isNotExist(string _hash){\r\n        require(hashOf[_hash] == 0);\r\n        _;\r\n    }\r\n    \r\n    modifier Payed{\r\n\r\n        require(msg.value >= 1 ether / price);\r\n        _;\r\n    }\r\n    \r\n    \r\n    function ProofOfExistence(uint256 _price) owned() payable{\r\n        hashOf['Created'] = block.timestamp;\r\n        price = _price;\r\n        pause = false;\r\n    }\r\n    \r\n    \r\n    \r\n    function getCurrentPrice() public view returns (uint256){\r\n        return 1 ether / price;\r\n    }\r\n    \r\n    function createProof(string _hash) isNotExist(_hash) isNotPaused Payed public payable{\r\n        \r\n            hashOf[_hash] = block.timestamp;\r\n        \r\n    }\r\n    \r\n    function checkProof(string _hash) public view returns (uint256){\r\n    \r\n           return hashOf[_hash];\r\n           \r\n    }\r\n    \r\n    function changePrice(uint256 _price) onlyOwner public{\r\n        price = _price;\r\n    }\r\n    \r\n    function withdraw() isNotPaused onlyOwner public{\r\n        owner.transfer(this.balance);\r\n    }\r\n    \r\n    \r\n    // function killThis() onlyOwner public{\r\n    //     selfdestruct(owner);\r\n    // }\r\n    \r\n    function setPause(bool _pause) onlyOwner public{\r\n        pause = _pause;\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"createProof\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"checkProof\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}]","ContractName":"ProofOfExistence","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000c8","Library":"","LicenseType":"GNU GPLv3","SwarmSource":"bzzr://d94f24966db965945f689fe14a8b01d778c3ae1baacf14870eb6e9830b510779"}]}