{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >0.5.13;\r\n\r\ncontract FronrunGame {\r\n    address public owner;\r\n\r\n    uint public index = 0;\r\n\r\n    mapping(address => uint) public successfulCallCount;\r\n    mapping(address => uint) public unsuccessfulCallCount;\r\n\r\n    address player1;\r\n    address player2;\r\n\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Only the owner is allowed.\");\r\n        _;\r\n    }\r\n\r\n    constructor () public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function resetGame(address _player1, address _player2) onlyOwner public {\r\n        successfulCallCount[_player1] = 0;\r\n        successfulCallCount[_player2] = 0;\r\n\r\n        unsuccessfulCallCount[_player1] = 0;\r\n        unsuccessfulCallCount[_player2] = 0;\r\n\r\n        index = 0;\r\n    }\r\n\r\n    function callMe(uint _index) public {\r\n        bool first = false;\r\n\r\n        if (_index == index) {\r\n            successfulCallCount[msg.sender]++;\r\n            index++;\r\n            first = true;\r\n        } else {\r\n            unsuccessfulCallCount[msg.sender]++;\r\n        }\r\n\r\n        emit NextIndex(index);\r\n        emit First(first);\r\n    }\r\n\r\n    function showStats(address _player) public view returns (uint, uint, uint) {\r\n        return (\r\n            successfulCallCount[_player],\r\n            unsuccessfulCallCount[_player],\r\n            index\r\n        );\r\n    }\r\n\r\n    event NextIndex(uint index);\r\n    event First(bool first);\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"first\",\"type\":\"bool\"}],\"name\":\"First\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"NextIndex\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"callMe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_player1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_player2\",\"type\":\"address\"}],\"name\":\"resetGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"showStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"successfulCallCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unsuccessfulCallCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"FronrunGame","CompilerVersion":"v0.6.1+commit.e6f7d5a4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"ipfs://90b4dfdf4025c9f49faec00aed78015b628cde5f93fd50fb60b5af4046fd7845"}]}