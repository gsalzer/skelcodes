{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.12;\r\n\r\ncontract HEX {\r\n    function xfLobbyEnter(address referrerAddr)\r\n    external\r\n    payable;\r\n\r\n    function xfLobbyExit(uint256 enterDay, uint256 count)\r\n    external;\r\n\r\n    function xfLobbyPendingDays(address memberAddr)\r\n    external\r\n    view\r\n    returns (uint256[2] memory words);\r\n\r\n    function balanceOf (address account)\r\n    external\r\n    view\r\n    returns (uint256);\r\n\r\n    function transfer (address recipient, uint256 amount)\r\n    external\r\n    returns (bool);\r\n\r\n    function currentDay ()\r\n    external\r\n    view\r\n    returns (uint256);\r\n}\r\n\r\ncontract StakeHexReferralSplitter {\r\n\r\n    event DistributedShares(\r\n        uint40 timestamp,\r\n        address indexed memberAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    HEX internal hx = HEX(0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39);\r\n\r\n    address payable public alpha = 0xE9DED01D21C6DDbec4D56c1822dE41E511EdfF34; // 12.5\r\n    address payable public bravo = 0x5a952b3501c827Ef96412C5CA61418DF93d955C4; // 15\r\n    address payable public charlie = 0x072297fC12fca02f184e6bD7B99697b7490e5aBf; // 5\r\n    address payable public delta = 0xe551072153c02fa33d4903CAb0435Fb86F1a80cb; // 15\r\n    address payable public echo = 0x5eCb4D3B4b451b838242c3CF8404ef18f5C486aB; // 5\r\n    address payable public foxtrot = 0x7f4F3E2c70D4FEE9cf9798F3d57629B5a1B5AF46; // 35\r\n    address payable public golf = 0xD30BC4859A79852157211E6db19dE159673a67E2; // 12.5\r\n\r\n    function distribute ()\r\n    public\r\n    {\r\n        uint256 balance = hx.balanceOf(address(this));\r\n        uint256 fivePercent;\r\n        if(balance > 99){\r\n            fivePercent = balance / 20;\r\n            hx.transfer(charlie, fivePercent); // 5%\r\n            hx.transfer(echo, fivePercent); // 5%\r\n            hx.transfer(delta, 3*fivePercent); // 15%\r\n            hx.transfer(bravo, 3*fivePercent); // 15%\r\n            hx.transfer(foxtrot, 7*fivePercent); // 40%\r\n            balance = balance - (15 * fivePercent); // 100% - 15*5% = 25%\r\n            hx.transfer(alpha, balance >> 1); // floor(12.5%)\r\n            hx.transfer(golf, balance - (balance >> 1)); // ceil(12.5%)\r\n        }\r\n    }\r\n\r\n    // Probably never used, but better safe than sorry\r\n    function flushEth()\r\n    public\r\n    {\r\n        uint256 balance = address(this).balance;\r\n        uint256 fivePercent;\r\n        if(address(this).balance > 99){\r\n            fivePercent = balance / 20;\r\n            charlie.transfer(fivePercent); // 5%\r\n            echo.transfer(fivePercent); // 5%\r\n            delta.transfer(3*fivePercent); // 15%\r\n            bravo.transfer(3*fivePercent); // 15%\r\n            foxtrot.transfer(7*fivePercent); // 40%\r\n            balance = balance - (15 * fivePercent); // 100% - 15*5% = 25%\r\n            alpha.transfer(balance >> 1); // floor(12.5%)\r\n            golf.transfer(balance - (balance >> 1)); // ceil(12.5%)\r\n        }\r\n    }\r\n\r\n    function updatealpha(address payable newalpha)\r\n    public\r\n    {\r\n        require(msg.sender == alpha && newalpha != address(0), \"Changing user address restricted to that user\");\r\n        alpha = newalpha;\r\n    }\r\n\r\n    function updatebravo(address payable newbravo)\r\n    public\r\n    {\r\n        require(msg.sender == bravo && newbravo != address(0), \"Changing user address restricted to that user\");\r\n        bravo = newbravo;\r\n    }\r\n\r\n    function updatecharlie(address payable newcharlie)\r\n    public\r\n    {\r\n        require(msg.sender == charlie && newcharlie != address(0), \"Changing user address restricted to that user\");\r\n        charlie = newcharlie;\r\n    }\r\n\r\n    function updatedelta(address payable newdelta)\r\n    public\r\n    {\r\n        require(msg.sender == delta && newdelta != address(0), \"Changing user address restricted to that user\");\r\n        delta = newdelta;\r\n    }\r\n\r\n    function updateecho(address payable newecho)\r\n    public\r\n    {\r\n        require(msg.sender == echo && newecho != address(0), \"Changing user address restricted to that user\");\r\n        echo = newecho;\r\n    }\r\n\r\n    function updatefoxtrot(address payable newfoxtrot)\r\n    public\r\n    {\r\n        require(msg.sender == foxtrot && newfoxtrot != address(0), \"Changing user address restricted to that user\");\r\n        foxtrot = newfoxtrot;\r\n    }\r\n\r\n    function updategolf(address payable newgolf)\r\n    public\r\n    {\r\n        require(msg.sender == golf && newgolf != address(0), \"Changing user address restricted to that user\");\r\n        golf = newgolf;\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"timestamp\",\"type\":\"uint40\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"memberAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DistributedShares\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"alpha\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bravo\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"charlie\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"delta\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"distribute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"echo\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"flushEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foxtrot\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"golf\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newalpha\",\"type\":\"address\"}],\"name\":\"updatealpha\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newbravo\",\"type\":\"address\"}],\"name\":\"updatebravo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newcharlie\",\"type\":\"address\"}],\"name\":\"updatecharlie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newdelta\",\"type\":\"address\"}],\"name\":\"updatedelta\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newecho\",\"type\":\"address\"}],\"name\":\"updateecho\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newfoxtrot\",\"type\":\"address\"}],\"name\":\"updatefoxtrot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newgolf\",\"type\":\"address\"}],\"name\":\"updategolf\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"StakeHexReferralSplitter","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://7f778ab3078a36c962fee3c0f5f11b247ed2b353c46d024834dc24e454a2fdbf"}]}