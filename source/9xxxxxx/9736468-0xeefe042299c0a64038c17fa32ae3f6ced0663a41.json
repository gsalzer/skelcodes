{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.1;\r\n\r\n// HiveNet Token (HNT) contract\r\n//\r\n// For any information please refer to our white paper and official communication:\r\n// www.HiveNet.cloud\r\n//\r\n// Total Supply: 700,000,000 HNT\r\n//\r\n// Before the  HiveNet main net launches, HNT will be transferrable into HiveCoins.\r\n// Please note that no HNT are reserved for HiveNet's team, who will only receive HiveCoins once the main net launches.\r\n// For HiveNet's main net launch a total supply of 1,000,000,000 HiveCoins is defined.\r\n// The amount of HNT is lower than that, because the missing 300,000,000 HiveCoins are allocated to:\r\n// 150,000,000 HiveCoins for the HiveNet GmbH\r\n// 100,000,000 HiveCoins for HiveNet's team\r\n// 50,000,000 provider reward deposit\r\n// These allocations will only be generated at HiveNet's main net launch to protect the interests of HiveNet Token buyers.\r\n// For further details please refer to our white paper at www.HiveNet.cloud\r\n\r\n\r\n// SafeMath\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n\r\n// Context\r\n\r\ncontract Context {\r\n\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\n// ERC20Interface\r\n\r\ninterface ERC20Interface {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address _owner) external view returns (uint256);\r\n    function transfer(address _recipient, uint256 _amount) external returns (bool);\r\n    function allowance(address _owner, address _spender) external view returns (uint256);\r\n    function approve(address _spender, uint256 _amount) external returns (bool);\r\n    function transferFrom(address _sender, address _recipient, uint256 _amount) external returns (bool);\r\n    event Transfer(address indexed _sender, address indexed _recipient, uint256);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256);\r\n}\r\n\r\n\r\n// contract StandardToken\r\n\r\ncontract StandardToken is Context, ERC20Interface {\r\n    using SafeMath for uint256;\r\n\r\n    mapping (address => uint256) public _balances;\r\n    mapping (address => mapping (address => uint256)) public _allowances;\r\n    uint256 public _totalSupply;\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address _owner) public view override returns (uint256) {\r\n        return _balances[_owner];\r\n    }\r\n\r\n    function transfer(address _recipient, uint256 _amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), _recipient, _amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public view virtual override returns (uint256) {\r\n        return _allowances[_owner][_spender];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _sender, address _recipient, uint256 _amount) public virtual override returns (bool) {\r\n        _transfer(_sender, _recipient, _amount);\r\n        _approve(_sender, _msgSender(), _allowances[_sender][_msgSender()].sub(_amount, \"HNT: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    // check https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 for details\r\n    function increaseAllowance(address _spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), _spender, _allowances[_msgSender()][_spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    // check https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 for details\r\n    function decreaseAllowance(address _spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), _spender, _allowances[_msgSender()][_spender].sub(subtractedValue, \"HNT: decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address _sender, address _recipient, uint256 _amount) internal virtual {\r\n        require(_sender != address(0), \"HNT: transfer from the zero address\");\r\n        require(_recipient != address(0), \"HNT: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(_sender, _recipient, _amount);\r\n\r\n        _balances[_sender] = _balances[_sender].sub(_amount, \"HNT: transfer amount exceeds balance\");\r\n        _balances[_recipient] = _balances[_recipient].add(_amount);\r\n        emit Transfer(_sender, _recipient, _amount);\r\n    }\r\n\r\n  function _approve(address _owner, address _spender, uint256 _amount) internal virtual {\r\n        require(_owner != address(0), \"HNT: approve from the zero address\");\r\n        require(_spender != address(0), \"HNT: approve to the zero address\");\r\n\r\n        _allowances[_owner][_spender] = _amount;\r\n        emit Approval(_owner, _spender, _amount);\r\n    }\r\n\r\n    function _beforeTokenTransfer(address _sender, address _recipient, uint256 _amount) internal virtual { }\r\n}\r\n\r\n\r\n// contract HiveNetToken\r\n\r\ncontract HiveNetToken is ERC20Interface, StandardToken {\r\n    using SafeMath for uint256;\r\n\r\n    string public _name = \"HiveNet Token\";\r\n    string public _symbol = \"HNT\";\r\n    uint8 public _decimals = 18;\r\n\r\n    constructor () public {\r\n        _totalSupply = 700000000000000000000000000;\r\n        _balances[0x8bdE0C97fA65823A7d098fa6355498da24230248] = _totalSupply;\r\n        emit Transfer(address(0), 0x8bdE0C97fA65823A7d098fa6355498da24230248, _totalSupply);\r\n      }\r\n\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_allowances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"HiveNetToken","CompilerVersion":"v0.6.1+commit.e6f7d5a4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"ipfs://85a9ecd310f32963e4b80582f5953020fe22e4aeca253ed929c06f4d3f6009c4"}]}