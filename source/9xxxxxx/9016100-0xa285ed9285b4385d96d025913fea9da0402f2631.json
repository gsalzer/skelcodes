{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.6;\r\n\r\ncontract HIKENJasvinderSinghContract {\r\n\r\n    address public HikenContract;\r\n    address public JasvinderSinghT;\r\n\r\n    struct documentStruct {\r\n        bool approvedByHikenContract;\r\n        bool approvedByJasvinderSinghT;\r\n    }\r\n\r\n    // this data is all publicly explorable\r\n\r\n    mapping(bytes32 => documentStruct) public documentStructs;\r\n    bytes32[] public documentList; // all\r\n    bytes32[] public approvedDocuments; // approved\r\n\r\n    // for event listeners    \r\n\r\n    event LogProposedDocument(address proposer, bytes32 docHash);\r\n    event LogApprovedDocument(address approver, bytes32 docHash);\r\n\r\n    // constructor needs to know who HikenContract & JasvinderSinghT are\r\n\r\n    function HIKENJasvinderSinghContract(address addressA, address addressB) {\r\n        HikenContract = 0xB85b310739f6ccf1aA439C8785Cdd4Bb716b8C18;\r\n        JasvinderSinghT = 0xe6659A0504230AEb1559145a429Da78EE9C49269;\r\n    }\r\n\r\n    // for convenient iteration over both lists\r\n    function getDocumentsCount() public constant returns(uint docCount) {\r\n        return documentList.length;\r\n    }\r\n\r\n    function getApprovedCount() public constant returns(uint apprCount) {\r\n        return approvedDocuments.length;\r\n    }\r\n\r\n    // propose / Approve\r\n\r\n    function agreeDoc(bytes32 hash) public returns(bool success) {\r\n        if(msg.sender != HikenContract && msg.sender != JasvinderSinghT) throw; // stranger. abort. \r\n        if(msg.sender == HikenContract) documentStructs[hash].approvedByHikenContract = true; // could do else. it's HikenContract or JasvinderSinghT.\r\n        if(msg.sender == JasvinderSinghT) documentStructs[hash].approvedByJasvinderSinghT = true; \r\n\r\n        if(documentStructs[hash].approvedByHikenContract == true && documentStructs[hash].approvedByJasvinderSinghT == true) {\r\n            uint docCount = documentList.push(hash);\r\n            LogApprovedDocument(msg.sender, hash);\r\n        } else {\r\n            uint apprCount = approvedDocuments.push(hash);\r\n            LogProposedDocument(msg.sender, hash);\r\n        }\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getDocumentsCount\",\"outputs\":[{\"name\":\"docCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HikenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"documentList\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"agreeDoc\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"documentStructs\",\"outputs\":[{\"name\":\"approvedByHikenContract\",\"type\":\"bool\"},{\"name\":\"approvedByJasvinderSinghT\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approvedDocuments\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getApprovedCount\",\"outputs\":[{\"name\":\"apprCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JasvinderSinghT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addressA\",\"type\":\"address\"},{\"name\":\"addressB\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"docHash\",\"type\":\"bytes32\"}],\"name\":\"LogProposedDocument\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"docHash\",\"type\":\"bytes32\"}],\"name\":\"LogApprovedDocument\",\"type\":\"event\"}]","ContractName":"HIKENJasvinderSinghContract","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://587b70df4c31ce41a91bd44d8ea4036a7df902b4bd67838ef425ccd908b5b6fc"}]}