{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n/*\r\n * @title Price/numberic Pull Oracle mapping contract\r\n*/\r\n\r\ncontract OracleIDDescriptions {\r\n\r\n    /*Variables*/\r\n    mapping(uint=>bytes32) tellorIDtoBytesID;\r\n    mapping(bytes32 => uint) bytesIDtoTellorID;\r\n    mapping(uint => int) tellorCodeToStatusCode;\r\n    mapping(int => uint) statusCodeToTellorCode;\r\n    address public owner;\r\n\r\n    /*Events*/\r\n    event TellorIdMappedToBytes(uint _requestID, bytes32 _id);\r\n    event StatusMapped(uint _tellorStatus, int _status);\r\n    \r\n\r\n    /*Functions*/\r\n    constructor() public{\r\n        owner =msg.sender;\r\n    }\r\n\r\n    /**\r\n    * @dev This fucntion allows for ownership transfer\r\n    * @param newOwner is the address for the new owner\r\n    */\r\n    function transferOwnership(address payable newOwner) external {\r\n        require(msg.sender == owner, \"Sender is not owner\");\r\n        owner = newOwner;\r\n    }\r\n\r\n    /**\r\n    * @dev This fuction allows the owner to map the tellor uint data status code to the standarized \r\n    * ADO int status code such as null, retreived etc...\r\n    * _tellorStatus uint the tellor status\r\n    * _status the data ADO standarized int status\r\n    */\r\n    function defineTellorCodeToStatusCode(uint _tellorStatus, int _status) external{\r\n        require(msg.sender == owner, \"Sender is not owner\");\r\n        tellorCodeToStatusCode[_tellorStatus] = _status;\r\n        statusCodeToTellorCode[_status] = _tellorStatus;\r\n        emit StatusMapped(_tellorStatus, _status);\r\n    }\r\n\r\n    /**\r\n    * @dev Allows owner to map the standarized bytes32 Id to a specific requestID from Tellor\r\n    * The dev should ensure the _requestId exists otherwise request the data on Tellor to get a requestId\r\n    * _requestID is the existing Tellor RequestID \r\n    * _id is the descption of the ID in bytes \r\n    */ \r\n    function defineTellorIdToBytesID(uint _requestID, bytes32 _id) external{\r\n        require(msg.sender == owner, \"Sender is not owner\");\r\n        tellorIDtoBytesID[_requestID] = _id;\r\n        bytesIDtoTellorID[_id] = _requestID;\r\n        emit TellorIdMappedToBytes(_requestID,_id);\r\n    }\r\n\r\n    /**\r\n    * @dev Getter function for the uint Tellor status code from the specified int ADO standarized status code\r\n    * @param _status the int ADO standarized status\r\n    * @return _tellorStatus uint \r\n    */ \r\n    function getTellorStatusFromStatus(int _status) public view returns(uint _tellorStatus){\r\n        return statusCodeToTellorCode[_status];\r\n    }\r\n\r\n    /**\r\n    * @dev Getter function of the int ADO standarized status code from the specified Tellor uint status\r\n    * @param _tellorStatus uint \r\n    * @return _status the int ADO standarized status\r\n    */ \r\n    function getStatusFromTellorStatus (uint _tellorStatus) public view returns(int _status) {\r\n        return tellorCodeToStatusCode[_tellorStatus];\r\n    }\r\n    \r\n    /**\r\n    * @dev Getter function of the Tellor RequestID based on the specified bytes32 ADO standaraized _id\r\n    * @param _id is the bytes32 descriptor mapped to an existing Tellor's requestId\r\n    * @return _requestId is Tellor's requestID corresnpoding to _id\r\n    */ \r\n    function getTellorIdFromBytes(bytes32 _id) public view  returns(uint _requestId)  {\r\n       return bytesIDtoTellorID[_id];\r\n    }\r\n\r\n    /**\r\n    * @dev Getter function of the bytes32 ADO standaraized _id based on the specified Tellor RequestID \r\n    * @param _requestId is Tellor's requestID\r\n    * @return _id is the bytes32 descriptor mapped to an existing Tellor's requestId\r\n    */ \r\n    function getBytesFromTellorID(uint _requestId) public view returns(bytes32 _id) {\r\n        return tellorIDtoBytesID[_requestId];\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getBytesFromTellorID\",\"outputs\":[{\"name\":\"_id\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestID\",\"type\":\"uint256\"},{\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"defineTellorIdToBytesID\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tellorStatus\",\"type\":\"uint256\"}],\"name\":\"getStatusFromTellorStatus\",\"outputs\":[{\"name\":\"_status\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_status\",\"type\":\"int256\"}],\"name\":\"getTellorStatusFromStatus\",\"outputs\":[{\"name\":\"_tellorStatus\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"getTellorIdFromBytes\",\"outputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tellorStatus\",\"type\":\"uint256\"},{\"name\":\"_status\",\"type\":\"int256\"}],\"name\":\"defineTellorCodeToStatusCode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_requestID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"TellorIdMappedToBytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_tellorStatus\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_status\",\"type\":\"int256\"}],\"name\":\"StatusMapped\",\"type\":\"event\"}]","ContractName":"OracleIDDescriptions","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://c9c91615f7d32810507cbcec0fa64ab3be32bb535838a3df49d5995bc607323b"}]}