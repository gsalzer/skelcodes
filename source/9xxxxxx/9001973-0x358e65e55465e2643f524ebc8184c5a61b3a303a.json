{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.22 <0.7.0;\r\n\r\ncontract OCCToken{\r\n\r\n\r\n    // -------------------------SafeMath Start-----------------------------------------------\r\n    //\r\n    function safeAdd(uint a, uint b) private pure returns (uint c) { c = a + b; require(c >= a); }\r\n    function safeSub(uint a, uint b) private pure returns (uint c) { require(b <= a); c = a - b; }\r\n    function safeMul(uint a, uint b) private pure returns (uint c) { c = a * b; require(a == 0 || c / a == b);}\r\n    function safeDiv(uint a, uint b) private pure returns (uint c) { require(b > 0); c = a / b; }\r\n    //\r\n    // -------------------------SafeMath End-------------------------------------------------\r\n\r\n    // -------------------------Owned Start-----------------------------------------------\r\n    //\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n    modifier onlyOwner { require(msg.sender == owner); _; }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n    //\r\n    // -------------------------Owned End-------------------------------------------------\r\n\r\n    // -------------------------ERC20Interface Start-----------------------------------------------\r\n    //\r\n    string public symbol = \"OCC\";\r\n    string public name = \"O‘Community Chain\";\r\n    uint8 public decimals = 18;\r\n    uint public totalSupply = 21e24;\r\n    bool public allowTransfer = true;\r\n\r\n    mapping(address => uint) private balances;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n\r\n    address private foundingTeamAddress = 0x6345613c3EF87D1e62E4f0eA043Bff46834f4D40;\r\n    address private communityMiningAddress = 0xd70B8174Be3B49D203f3AA2311D6036422D09625;\r\n    address private communityNodeLockAddress = 0x09e042d647E7E082Fc1b7Ae99FdFf2E9617Dab9C;\r\n    address private mediaAnnouncementAddress = 0x6FBe46eb6327f131C0607A6eC77cA643B858D712;\r\n    address private communityAirdropIncentivesAddress = 0xCE6E467ac481938F30824Af4244B9D7A2b397Ff4;\r\n    \r\n    address payable private exchangeAddress = 0x02505896bD3d99E42DC955304d1aFb6B83eb3a71;\r\n    address payable private ticketAddress = 0xf2556DBD19CD4581901b05e40062664e9277c500;\r\n\r\n    bool public allowExchange = true;\r\n    uint public exchangeEthMin = 1e16;\r\n    uint public exchangeRate = 90;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n\r\n        balances[foundingTeamAddress] = 63e23;\r\n        emit Transfer(address(this), foundingTeamAddress, 21e23);\r\n        emit Transfer(address(this), foundingTeamAddress, 42e23);\r\n\r\n        balances[communityMiningAddress] = 735e22;\r\n        emit Transfer(address(this), communityMiningAddress, 735e22);\r\n\r\n        balances[communityNodeLockAddress] = 42e23;\r\n        emit Transfer(address(this), communityNodeLockAddress, 42e23);\r\n\r\n        balances[mediaAnnouncementAddress] = 105e22;\r\n        emit Transfer(address(this), mediaAnnouncementAddress, 105e22);\r\n\r\n        balances[communityAirdropIncentivesAddress] = 21e23;\r\n        emit Transfer(address(this), communityAirdropIncentivesAddress, 21e23);\r\n    }\r\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n        balance = balances[tokenOwner];\r\n    }\r\n    function allowance(address tokenOwner, address spender) public pure returns (uint remaining) {\r\n        require(tokenOwner != spender);\r\n        //------do nothing------\r\n        remaining = 0;\r\n    }\r\n    function transfer(address to, uint tokens) public returns (bool success) {\r\n        require(to != msg.sender);\r\n        require(to != address(this));\r\n        require(allowTransfer);\r\n\r\n        balances[msg.sender] = safeSub(balances[msg.sender], tokens);\r\n        balances[to] = safeAdd(balances[to], tokens);\r\n        \r\n        emit Transfer(msg.sender, to, tokens);\r\n        success = true;\r\n    }\r\n    function approve(address spender, uint tokens) public pure returns (bool success) {\r\n        require(spender == spender);\r\n        require(tokens == tokens);\r\n        //------do nothing------\r\n        success = false;\r\n    }\r\n    function transferFrom(address from, address to, uint tokens) public pure returns (bool success) {       \r\n        require(from != to);\r\n        require(tokens == tokens);\r\n        //------do nothing------\r\n        success = false;\r\n    }\r\n    //\r\n    // -------------------------ERC20Interface End-------------------------------------------------\r\n\r\n    // ------------------------------------------------------------------------\r\n    function () external payable {\r\n        require(allowExchange);\r\n        require(msg.value >= exchangeEthMin);\r\n\r\n        uint tokens = safeMul(msg.value, exchangeRate);\r\n        uint eth = safeDiv(tokens, 100);\r\n        exchangeAddress.transfer(eth);\r\n        ticketAddress.transfer(msg.value - eth);\r\n    }\r\n    function chExchangeAddress(address payable _exchangeAddress) external onlyOwner {\r\n        exchangeAddress = _exchangeAddress;\r\n    }\r\n    function chTicketAddress(address payable _ticketAddress) external onlyOwner {\r\n        ticketAddress = _ticketAddress;\r\n    }\r\n    function chExchangeRage(uint _exchangeRate) external onlyOwner {\r\n        exchangeRate = _exchangeRate;\r\n    }\r\n    function chExchangeEthMin(uint _exchangeEthMin) external onlyOwner {\r\n        exchangeEthMin = _exchangeEthMin;\r\n    }\r\n    function chAllowExchange(bool _allowExchange) external onlyOwner {\r\n        allowExchange =  _allowExchange;\r\n    }\r\n    function chAllowTransfer(bool _allowTransfer) external onlyOwner {\r\n        allowTransfer = _allowTransfer;\r\n    }\r\n    //清除异常情况下遗留在合约内的ETH\r\n    function clearEth(address payable addr) external onlyOwner {\r\n        addr.transfer(address(this).balance);\r\n    }\r\n    function sendTokens(address[] calldata to, uint[] calldata tokens) external {\r\n        if (to.length == tokens.length) {\r\n            uint count = 0;\r\n            for (uint i = 0; i < tokens.length; i++) {\r\n                count = safeAdd(count, tokens[i]);\r\n            }\r\n            if (count <= balances[msg.sender]) {\r\n                balances[msg.sender] = safeSub(balances[msg.sender], count);\r\n                for (uint i = 0; i < to.length; i++) {\r\n                    balances[to[i]] = safeAdd(balances[to[i]], tokens[i]);\r\n                    emit Transfer(msg.sender, to[i], tokens[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function sendEths(address payable[]  calldata to, uint[] calldata values) external payable{\r\n        require(to.length == values.length);\r\n        uint count = 0;\r\n        for (uint i = 0; i < values.length; i++) {\r\n            count = safeAdd(count, values[i]);\r\n        }\r\n        require(count <= msg.value);\r\n        for (uint i = 0; i < to.length; i++) {\r\n            to[i].transfer(values[i]);\r\n        }\r\n        msg.sender.transfer(msg.value - count);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowExchange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_allowExchange\",\"type\":\"bool\"}],\"name\":\"chAllowExchange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_allowTransfer\",\"type\":\"bool\"}],\"name\":\"chAllowTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_exchangeAddress\",\"type\":\"address\"}],\"name\":\"chExchangeAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeEthMin\",\"type\":\"uint256\"}],\"name\":\"chExchangeEthMin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeRate\",\"type\":\"uint256\"}],\"name\":\"chExchangeRage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_ticketAddress\",\"type\":\"address\"}],\"name\":\"chTicketAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"clearEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeEthMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"sendEths\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokens\",\"type\":\"uint256[]\"}],\"name\":\"sendTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"OCCToken","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://6f6a017777b7848f0fae4da5d3712da61808876ed0a792e7117a0cceed66cec7"}]}