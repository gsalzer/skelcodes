{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract DigitalSecretary {\r\n\r\n    uint256 public entityFilings; // tallies number of successful entity registrations\r\n\r\n    mapping (uint256 => Entity) public entities; // mapping registered entities to filing numbers\r\n    \r\n    event entityRegistered(uint256 fileNumber, uint256 filingDate, string entityName, uint8 entityKind);\r\n    \r\n    struct Entity {\r\n        uint256 fileNumber; // latest successful registration function call\r\n        uint256 filingDate; // blocktime of successful registration function call\r\n        string entityName; // Full Legal Name / e.g., \"ACME LLC\"\r\n        uint8 entityKind; // see below enum / default, '3' - \"LLC\"\r\n        uint8 entityType; // see below enum / default, '1' - \"General\"\r\n        string registeredAgentdetails; // could be IPFS hash, plaintext, or JSON detailing registered agent\r\n        string filingDetails; // could be IPFS hash, plaintext, or JSON detailing articles or certificate of incorporation\r\n        address registrant; // address of new entity registrant\r\n    }\r\n      \r\n    // compare: Delaware resource: https://icis.corp.delaware.gov/Ecorp/FieldDesc.aspx#ENTITY%20TYPE \r\n    enum Kind {\r\n        CORP,\r\n        LP,\r\n        LLC,\r\n        TRUST,\r\n        PARTNERSHIP,\r\n        UNPA\r\n    }\r\n    \r\n    // compare: Delaware resource: https://icis.corp.delaware.gov/Ecorp/FieldDesc.aspx#ENTITY%20TYPE\r\n    enum Type {\r\n        GENERAL,\r\n        BANK,\r\n        CLOSED,\r\n        DISC,\r\n        PA,\r\n        GP,\r\n        RIC,\r\n        LLP,\r\n        NT,\r\n        NP,\r\n        STOCK\r\n    }\r\n    \r\n    // public function to register entity with digital secretary \r\n    function registerEntity(\r\n        string memory entityName,\r\n        uint8 entityKind,\r\n        uint8 entityType,\r\n        string memory registeredAgentdetails,\r\n        string memory filingDetails) public {\r\n            \r\n        Kind(entityKind);\r\n        Type(entityType);\r\n        \r\n        uint256 fileNumber = entityFilings + 1; // tallies from running total\r\n        uint256 filingDate = block.timestamp; // \"now\"\r\n        \r\n        entityFilings = entityFilings + 1; // tallies new filing to running total\r\n            \r\n        entities[fileNumber] = Entity(\r\n            fileNumber,\r\n            filingDate,\r\n            entityName,\r\n            entityKind,\r\n            entityType,\r\n            registeredAgentdetails,\r\n            filingDetails,\r\n            msg.sender);\r\n            \r\n            emit entityRegistered(fileNumber, filingDate, entityName, entityKind);\r\n    }\r\n    \r\n    /***************\r\n    ENTITY MGMT \r\n    ***************/\r\n    // registrant can update entity name   \r\n    function updateEntityName(uint256 fileNumber, string memory newName) public {\r\n        Entity storage entity = entities[fileNumber];\r\n        require(msg.sender == entity.registrant);\r\n        entity.entityName = newName; \r\n    }\r\n    \r\n    // registrant can update registered agent details  \r\n    function updateRegisteredAgent(uint256 fileNumber, string memory registeredAgentdetails) public {\r\n        Entity storage entity = entities[fileNumber];\r\n        require(msg.sender == entity.registrant);\r\n        entity.registeredAgentdetails = registeredAgentdetails; \r\n    }\r\n    \r\n    // registrant can convert entity kind   \r\n    function convertEntityKind(uint256 fileNumber, uint8 newKind) public {\r\n        Entity storage entity = entities[fileNumber];\r\n        require(msg.sender == entity.registrant);\r\n        entity.entityKind = newKind; \r\n    }\r\n    \r\n    // registrant can convert entity type   \r\n    function convertEntityType(uint256 fileNumber, uint8 newType) public {\r\n        Entity storage entity = entities[fileNumber];\r\n        require(msg.sender == entity.registrant);\r\n        entity.entityType = newType; \r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fileNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filingDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"entityName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"entityKind\",\"type\":\"uint8\"}],\"name\":\"entityRegistered\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fileNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"newKind\",\"type\":\"uint8\"}],\"name\":\"convertEntityKind\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fileNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"newType\",\"type\":\"uint8\"}],\"name\":\"convertEntityType\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"entities\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fileNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"filingDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"entityName\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"entityKind\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"entityType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"registeredAgentdetails\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"filingDetails\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"entityFilings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"entityName\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"entityKind\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"entityType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"registeredAgentdetails\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"filingDetails\",\"type\":\"string\"}],\"name\":\"registerEntity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fileNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"updateEntityName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fileNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"registeredAgentdetails\",\"type\":\"string\"}],\"name\":\"updateRegisteredAgent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"DigitalSecretary","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://e0de6964e841f81af52fee01c87be65a94d4e55f6a80b0d86f73b6339e252b4e"}]}