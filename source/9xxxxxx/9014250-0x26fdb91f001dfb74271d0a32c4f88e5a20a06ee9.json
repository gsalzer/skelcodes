{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2019-09-09\r\n * BEB dapp for www.betbeb.com\r\n*/\r\npragma solidity^0.4.24;  \r\ninterface tokenTransfer {\r\n    function transfer(address receiver, uint amount);\r\n    function transferFrom(address _from, address _to, uint256 _value);\r\n    function balanceOf(address receiver) returns(uint256);\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n \r\n    function Ownable () public {\r\n        owner = msg.sender;\r\n    }\r\n \r\n    modifier onlyOwner {\r\n        require (msg.sender == owner);\r\n        _;\r\n    }\r\n \r\n    /**\r\n     * @param  newOwner address\r\n     */\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        if (newOwner != address(0)) {\r\n        owner = newOwner;\r\n      }\r\n    }\r\n}\r\n\r\ncontract LUCK is Ownable{\r\n    address[] public bebdsds;\r\ntokenTransfer public bebTokenTransfer; //代币 \r\n    function LUCK(address _tokenAddress){\r\n         bebTokenTransfer = tokenTransfer(_tokenAddress);\r\n     }\r\n     function present(address[] nanee)onlyOwner{\r\n      bebdsds=nanee;\r\n      //bebTokenTransfer.transfer(msg.sender,888*10**18);\r\n\r\n     }\r\n     function presentok()onlyOwner{\r\n      delete bebdsds;\r\n      //bebTokenTransfer.transfer(msg.sender,888*10**18);\r\n     }\r\n     function presentto()public{\r\n      for(uint i=0;i<bebdsds.length;i++){\r\n       bebTokenTransfer.transfer(bebdsds[i],88888*10**18);\r\n        }\r\n      //bebTokenTransfer.transfer(msg.sender,888*10**18);\r\n\r\n     }\r\n     function getSumAmount() public view returns(uint256){\r\n        return bebdsds.length;\r\n    }\r\n    function ()payable{\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"bebTokenTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"presentto\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bebdsds\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nanee\",\"type\":\"address[]\"}],\"name\":\"present\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"presentok\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSumAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"LUCK","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000002916f61253dbb0a82a09ec15a9bcd38090da56b0","Library":"","LicenseType":"None","SwarmSource":"bzzr://87dd5ba9356b748b380f752e1e51969d9ce6c64e8555e7f5040d1b4d9495dcc1"}]}