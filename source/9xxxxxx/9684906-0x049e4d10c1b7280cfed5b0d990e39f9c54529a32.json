{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.12;\r\n\r\n// import \"lib/dss-interfaces/src/dapp/DSPauseAbstract.sol\";\r\n// https://github.com/dapphub/ds-pause\r\ncontract DSPauseAbstract {\r\n    function delay() public view returns (uint256);\r\n    function plot(address, bytes32, bytes memory, uint256) public;\r\n    function exec(address, bytes32, bytes memory, uint256) public returns (bytes memory);\r\n}\r\n\r\n// import \"lib/dss-interfaces/src/dss/VatAbstract.sol\";\r\n// https://github.com/makerdao/dss/blob/master/src/vat.sol\r\ncontract VatAbstract {\r\n    function rely(address) external;\r\n    function init(bytes32) external;\r\n    function file(bytes32, uint256) external;\r\n    function file(bytes32, bytes32, uint256) external;\r\n}\r\n\r\n//import \"lib/dss-interfaces/src/dss/CatAbstract.sol\";\r\n// https://github.com/makerdao/dss/blob/master/src/cat.sol\r\ncontract CatAbstract {\r\n    function file(bytes32, address) external;\r\n    function file(bytes32, bytes32, uint256) external;\r\n    function file(bytes32, bytes32, address) external;\r\n}\r\n\r\n//import \"lib/dss-interfaces/src/dss/JugAbstract.sol\";\r\n// https://github.com/makerdao/dss/blob/master/src/jug.sol\r\ncontract JugAbstract {\r\n    function init(bytes32) external;\r\n    function file(bytes32, bytes32, uint256) external;\r\n    function file(bytes32, uint256) external;\r\n    function file(bytes32, address) external;\r\n}\r\n\r\n//import \"lib/dss-interfaces/src/dss/FlipAbstract.sol\";\r\n// https://github.com/makerdao/dss/blob/master/src/flip.sol\r\ncontract FlipAbstract {\r\n    function rely(address usr) external;\r\n    function file(bytes32, uint256) external;\r\n}\r\n\r\n//import \"lib/dss-interfaces/src/dss/SpotAbstract.sol\";\r\n// https://github.com/makerdao/dss/blob/master/src/spot.sol\r\ncontract SpotAbstract {\r\n    function file(bytes32, bytes32, address) external;\r\n    function file(bytes32, uint256) external;\r\n    function file(bytes32, bytes32, uint256) external;\r\n    function poke(bytes32) external;\r\n}\r\n\r\n//import \"lib/dss-interfaces/src/dss/FlipperMomAbstract.sol\";\r\n// https://github.com/makerdao/flipper-mom/blob/master/src/FlipperMom.sol\r\ncontract FlipperMomAbstract {\r\n    function deny(address) external;\r\n}\r\n\r\ncontract FlipFabAbstract {\r\n    function newFlip(address, bytes32) public returns (address);\r\n}\r\n\r\ncontract SpellAction {\r\n    address constant public MCD_VAT = 0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B;\r\n    address constant public MCD_CAT = 0x78F2c2AF65126834c51822F56Be0d7469D7A523E;\r\n    address constant public MCD_JUG = 0x19c0976f590D67707E62397C87829d896Dc0f1F1;\r\n    address constant public MCD_SPOT = 0x65C79fcB50Ca1594B025960e539eD7A9a6D434A3;\r\n    address constant public MCD_END = 0xaB14d3CE3F733CACB76eC2AbE7d2fcb00c99F3d5;\r\n    address constant public FLIPPER_MOM = 0x9BdDB99625A711bf9bda237044924E34E8570f75;\r\n    address constant public FLIP_FAB = 0xBAB4FbeA257ABBfe84F4588d4Eedc43656E46Fc5;\r\n\r\n    address constant public MCD_JOIN_USDC_A = 0xA191e578a6736167326d05c119CE0c90849E84B7;\r\n    address constant public PIP_USDC = 0x77b68899b99b686F415d074278a9a16b336085A0;\r\n\r\n    uint256 constant public THOUSAND = 10**3;\r\n    uint256 constant public MILLION = 10**6;\r\n    uint256 constant public WAD = 10**18;\r\n    uint256 constant public RAY = 10**27;\r\n    uint256 constant public RAD = 10**45;\r\n\r\n    // Many of the settings that change weekly rely on the rate accumulator\r\n    // described at https://docs.makerdao.com/smart-contract-modules/rates-module\r\n    // To check this yourself, use the following rate calculation (example 0.5%):\r\n    //\r\n    // $ bc -l <<< 'scale=27; e( l(1.2)/(60 * 60 * 24 * 365) )'\r\n    //\r\n    uint256 constant public TWENTY_PCT_RATE = 1000000005781378656804591712;\r\n\r\n    function execute() public {\r\n        bytes32 ilk = \"USDC-A\";\r\n\r\n        // Create the USDC-A Flipper via the original FlipFab\r\n        address MCD_FLIP_USDC_A = FlipFabAbstract(FLIP_FAB).newFlip(MCD_VAT, ilk);\r\n\r\n        // Set the USDC PIP in the Spotter\r\n        SpotAbstract(MCD_SPOT).file(ilk, \"pip\", PIP_USDC);\r\n\r\n        // Set the USDC-A Flipper in the Cat\r\n        CatAbstract(MCD_CAT).file(ilk, \"flip\", MCD_FLIP_USDC_A);\r\n\r\n        // Init USDC-A ilk in Vat\r\n        VatAbstract(MCD_VAT).init(ilk);\r\n        // Init USDC-A ilk in Jug\r\n        JugAbstract(MCD_JUG).init(ilk);\r\n\r\n        // Allow USDC-A Join to modify Vat registry\r\n        VatAbstract(MCD_VAT).rely(MCD_JOIN_USDC_A);\r\n        // Allow Cat to kick auctions in USDC-A Flipper (which will be denied at the end, just doing this for explicitness)\r\n        FlipAbstract(MCD_FLIP_USDC_A).rely(MCD_CAT);\r\n        // Allow End to yank auctions in USDC-A Flipper\r\n        FlipAbstract(MCD_FLIP_USDC_A).rely(MCD_END);\r\n        // Allow FlipperMom to access to the USDC-A Flipper\r\n        FlipAbstract(MCD_FLIP_USDC_A).rely(FLIPPER_MOM);\r\n\r\n        // Set the global debt ceiling to 133 MM\r\n        VatAbstract(MCD_VAT).file(\"Line\", 133 * MILLION * RAD);\r\n        // Set the USDC-A debt ceiling to 20 MM\r\n        VatAbstract(MCD_VAT).file(ilk, \"line\", 20 * MILLION * RAD);\r\n        // Set the USDC-A dust\r\n        VatAbstract(MCD_VAT).file(ilk, \"dust\", 20 * RAD);\r\n        // Set the Lot size to 50K USDC-A\r\n        CatAbstract(MCD_CAT).file(ilk, \"lump\", 50 * THOUSAND * WAD);\r\n        // Set the USDC-A liquidation penalty to 13%\r\n        CatAbstract(MCD_CAT).file(ilk, \"chop\", 113 * RAY / 100);\r\n        // Set the USDC-A stability fee to 20%\r\n        JugAbstract(MCD_JUG).file(ilk, \"duty\", TWENTY_PCT_RATE);\r\n        // Set the USDC-A percentage between bids to 3%\r\n        FlipAbstract(MCD_FLIP_USDC_A).file(\"beg\", 103 * WAD / 100);\r\n        // Set the USDC-A time max time between bids to 6 hours\r\n        FlipAbstract(MCD_FLIP_USDC_A).file(\"ttl\", 6 hours);\r\n        // Set the USDC-A max auction duration to 3 days\r\n        FlipAbstract(MCD_FLIP_USDC_A).file(\"tau\", 3 days);\r\n        // Set the USDC-A min collateralization ratio to 125%\r\n        SpotAbstract(MCD_SPOT).file(ilk, \"mat\", 125 * RAY / 100);\r\n\r\n        // Update USDC-A spot value in Vat\r\n        SpotAbstract(MCD_SPOT).poke(ilk);\r\n\r\n        // Deny Cat in the USDC-A Flipper via FlipperMom\r\n        FlipperMomAbstract(FLIPPER_MOM).deny(MCD_FLIP_USDC_A);\r\n    }\r\n}\r\n\r\ncontract DssSpell {\r\n    // MAINNET ADDRESS\r\n    DSPauseAbstract public pause = DSPauseAbstract(\r\n        0xbE286431454714F511008713973d3B053A2d38f3\r\n    );\r\n\r\n    address public action;\r\n    bytes32 public tag;\r\n    uint256 public eta;\r\n    bytes   public sig;\r\n    uint256 public expiration;\r\n    bool    public done;\r\n\r\n    constructor() public {\r\n        action = address(new SpellAction());\r\n        sig = abi.encodeWithSignature(\"execute()\");\r\n        bytes32 _tag;\r\n        address _action = action;\r\n        assembly { _tag := extcodehash(_action) }\r\n        tag = _tag;\r\n        expiration = now + 30 days;\r\n    }\r\n\r\n    function schedule() public {\r\n        require(now <= expiration, \"This contract has expired\");\r\n        require(eta == 0, \"spell-already-scheduled\");\r\n\r\n        eta = now + pause.delay();\r\n        pause.plot(action, tag, sig, eta);\r\n    }\r\n\r\n    function cast() public {\r\n        require(!done, \"spell-already-cast\");\r\n        done = true;\r\n        pause.exec(action, tag, sig, eta);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"action\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cast\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"done\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"expiration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"contract DSPauseAbstract\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"schedule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tag\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"DssSpell","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU GPLv3","SwarmSource":"bzzr://b72007de77c2ccc84f978a0743353678a3147b6a1f6a30b2e0f8db0eb59ad071"}]}