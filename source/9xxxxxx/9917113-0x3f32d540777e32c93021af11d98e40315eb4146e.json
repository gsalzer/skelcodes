{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\n\r\ninterface Minereum {\r\n  function BurnTokens ( uint256 mneToBurn ) external returns ( bool success );\r\n  function CreateTokenICO (  ) payable external;\r\n  function availableBalanceOf ( address _address ) external view returns ( uint256 Balance );\r\n  function balanceOf ( address _address ) external view returns ( uint256 balance );\r\n  function transfer ( address _to, uint256 _value ) external;\r\n  function transferFrom ( address _from, address _to, uint256 _amount ) external returns ( bool success );  \r\n}\r\n\r\n\r\ncontract MinereumLuckyDraw\r\n{\r\n\tMinereum public mne;\r\n\tuint public stakeHoldersfee = 30;\r\n\tuint public mnefee = 20000000000;\r\n\tuint public ethfee = 10000000000000000;\r\n\tuint public totalSentToStakeHolders = 0;\r\n\tuint public totalPaidOut = 0;\r\n\tuint public ticketsSold = 0;\r\n\taddress public owner = 0x0000000000000000000000000000000000000000;\r\n\t\r\n\tconstructor(address mneAddress) public\r\n\t{\r\n\t\tmne = Minereum(mneAddress);\r\n\t\towner = payable(msg.sender);\t\t\r\n\t}\r\n    event Numbers(address indexed from, uint[] n, string m);\r\n    \r\n\tuint public maxNumber = 10001;\r\n\tuint public systemNumber = 3223;\r\n\t\r\n\treceive() external payable { }\r\n    \r\n    function BuyTickets (uint max) public payable\r\n    {\r\n\t\tuint totalEthfee = ethfee * max;\r\n\t\tuint totalMneFee = mnefee * max;\r\n\t\tif (msg.value < totalEthfee) revert('Not enough ETH.');\r\n\t\tuint valueStakeHolder = msg.value * stakeHoldersfee / 100;\r\n\t\tmne.CreateTokenICO.value(valueStakeHolder)();\r\n\t\ttotalSentToStakeHolders += valueStakeHolder;\r\n\t\tif (!mne.transferFrom(msg.sender, address(this), totalMneFee)) revert('Not enough MNE.');\r\n\t\tmne.BurnTokens(totalMneFee);\r\n\t\t\r\n        uint[] memory numbers = new uint[](max);\r\n        uint i = 0;\r\n        bool win = false;\r\n\t\t\r\n\t\t//some sort of security to prevent miners from hacking block.timestamp. Contract Valid for 6 months.\r\n\t\tif (!(block.timestamp >= 1587477930 && block.timestamp <= 1603256393))\r\n\t\t\trevert('wrong timestamp');\t\t\r\n\t\t\r\n        while (i < max)\r\n        {\r\n            //Random number generation\r\n\t\t\tnumbers[i] = uint256(uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender, i)))%maxNumber);\r\n            if (numbers[i] == systemNumber)\r\n                win = true;\r\n            i++;\r\n        }\r\n        \r\n        if (win)\r\n\t\t{\r\n\t\t\taddress payable add = payable(msg.sender);\r\n\t\t\tuint contractBalance = address(this).balance;\r\n\t\t\temit Numbers(msg.sender, numbers, \"You WON!\");\r\n\t\t\tif (!add.send(contractBalance)) revert('Error While Executing Payment.');\r\n\t\t\ttotalPaidOut += contractBalance;\r\n\t\t}\r\n        else\r\n\t\t{\r\n            emit Numbers(msg.sender, numbers, \"Your numbers don't match the System Number! Try Again.\");\r\n\t\t}\r\n\t\tticketsSold += max;\r\n    }\r\n\t\r\n\tfunction transferFundsOut() public\r\n\t{\r\n\t\tif (msg.sender == owner)\r\n\t\t{\r\n\t\t\taddress payable add = payable(msg.sender);\r\n\t\t\tuint contractBalance = address(this).balance;\r\n\t\t\tif (!add.send(contractBalance)) revert('Error While Executing Payment.');\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\trevert();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateFees(uint _stakeHoldersfee, uint _mnefee, uint _ethfee) public\r\n\t{\r\n\t\tif (msg.sender == owner)\r\n\t\t{\r\n\t\t\tstakeHoldersfee = _stakeHoldersfee;\r\n\t\t\tmnefee = _mnefee;\r\n\t\t\tethfee = _ethfee;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\trevert();\r\n\t\t}\r\n\t}\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mneAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"n\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"m\",\"type\":\"string\"}],\"name\":\"Numbers\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"BuyTickets\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mne\",\"outputs\":[{\"internalType\":\"contract Minereum\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mnefee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeHoldersfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketsSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPaidOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSentToStakeHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFundsOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakeHoldersfee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mnefee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ethfee\",\"type\":\"uint256\"}],\"name\":\"updateFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"MinereumLuckyDraw","CompilerVersion":"v0.6.1+commit.e6f7d5a4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000c92e74b131d7b1d46e60e07f3fae5d8877dd03f0","Library":"","LicenseType":"None","SwarmSource":"ipfs://e3e7484b152deb6506bc997691ff535872282917a9410a530c95663d370e36e6"}]}