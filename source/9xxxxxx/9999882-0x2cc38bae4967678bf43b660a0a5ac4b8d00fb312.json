{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity  ^0.6.3;\r\n\r\ncontract EtherFundRaiser {\r\n\r\nfunction multisend(uint256[] memory amounts, address payable[] memory receivers) payable public {\r\nassert(amounts.length == receivers.length);\r\nassert(receivers.length <= 100); //maximum receievers can be 100\r\n\r\n        for(uint i = 0; i< receivers.length; i++){\r\n            receivers[i].transfer(amounts[i]);\r\n        }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address payable[]\",\"name\":\"receivers\",\"type\":\"address[]\"}],\"name\":\"multisend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"EtherFundRaiser","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://ac87f28dcc7c76ea053fc4c0c123d9b65271295edbe37b8d534c25e92fbb03c4"}]}