{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/openzeppelin/SafeMath.sol\r\n\r\npragma solidity 0.4.24;\r\n\r\n\r\n/**\r\n* @title SafeMath\r\n* @dev Math operations with safety checks that throw on error\r\n*/\r\nlibrary SafeMath {\r\n/**\r\n* @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n*/\r\nfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\nrequire(b <= a);\r\nuint256 c = a - b;\r\n\r\nreturn c;\r\n}\r\n\r\n/**\r\n* @dev Adds two numbers, reverts on overflow.\r\n*/\r\nfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\nuint256 c = a + b;\r\nrequire(c >= a);\r\n\r\nreturn c;\r\n}\r\n\r\n/**\r\n* @dev Multiplies two unsigned integers, reverts on overflow.\r\n*/\r\nfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n// Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n// benefit is lost if 'b' is also tested.\r\n// See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\nif (a == 0) {\r\nreturn 0;\r\n}\r\n\r\nuint256 c = a * b;\r\nrequire(c / a == b);\r\n\r\nreturn c;\r\n}\r\n\r\n/**\r\n* @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r\n*/\r\nfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n// Solidity only automatically asserts when dividing by 0\r\nrequire(b > 0);\r\nuint256 c = a / b;\r\n// assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\nreturn c;\r\n}\r\n}\r\n\r\n// File: contracts/AltinLiraXAL.sol\r\n\r\npragma solidity 0.4.24;\r\npragma experimental \"v0.5.0\";\r\n\r\n/// @title AltinLiraXAL\r\n/// @author Ömür Gökyar | https://twitter.com/omurgokyar\r\n/// @notice AltinLiraXAL is a ERC20 token and it's value equal to one gram of 24 carat Gold\r\n/// @dev AltinLiraXAL is Ownable, Pausable, Burn and Mint controlled by a central SupplyController\r\n\r\n\r\ncontract AltinLiraXAL {\r\n\r\nusing SafeMath for uint256;\r\n\r\n/// INITIALIZATION DATA ///\r\nbool private initialized = false;\r\n\r\n/// INITIALIZATION FUNCTIONALITY ///\r\nfunction initialize() public {\r\nrequire(!initialized, \"Contract is already initialized\");\r\nowner = msg.sender;\r\nproposedOwner = address(0);\r\nassetProtectionRole = address(0);\r\ntotalSupply_ = 0;\r\nsupplyController = msg.sender;\r\nfeeRate = 0;\r\nfeeController = msg.sender;\r\nfeeRecipient = msg.sender;\r\ninitialized = true;\r\n}\r\n\r\nconstructor() public {\r\ninitialize();\r\npause();\r\n}\r\n\r\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ///\r\n    \r\n/// ERC20 BASIC DATA ///\r\nmapping(address => uint256) internal balances;\r\nuint256 internal totalSupply_;\r\nstring public constant name = \"ALTIN LIRA\"; // solium-disable-line\r\nstring public constant symbol = \"XAL\"; // solium-disable-line uppercase\r\nuint8 public constant decimals = 18; // solium-disable-line uppercase\r\n\r\n/// ERC20 DATA ///\r\nmapping(address => mapping(address => uint256)) internal allowed;\r\n\r\n/// ERC20 BASIC EVENTS ///\r\nevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n/// ERC20 EVENTS ///\r\nevent Approval(\r\naddress indexed owner,\r\naddress indexed spender,\r\nuint256 value\r\n);\r\n\r\n/// ERC20 BASIC FUNCTIONALITY ///\r\nfunction totalSupply() public view returns (uint256) {\r\nreturn totalSupply_;\r\n}\r\n\r\nfunction transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {\r\nrequire(_to != address(0), \"cannot transfer to address zero\");\r\nrequire(!frozen[_to] && !frozen[msg.sender], \"address frozen\");\r\nrequire(_value <= balances[msg.sender], \"insufficient funds\");\r\n\r\n_transfer(msg.sender, _to, _value);\r\nreturn true;\r\n}\r\n\r\nfunction balanceOf(address _addr) public view returns (uint256) {\r\nreturn balances[_addr];\r\n}\r\n\r\n/// ERC20 FUNCTIONALITY ///\r\nfunction transferFrom(\r\naddress _from,\r\naddress _to,\r\nuint256 _value\r\n)\r\npublic\r\nwhenNotPaused\r\nreturns (bool)\r\n{\r\nrequire(_to != address(0), \"cannot transfer to address zero\");\r\nrequire(!frozen[_to] && !frozen[_from] && !frozen[msg.sender], \"address frozen\");\r\nrequire(_value <= balances[_from], \"insufficient funds\");\r\nrequire(_value <= allowed[_from][msg.sender], \"insufficient allowance\");\r\n\r\nallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n_transfer(_from, _to, _value);\r\n\r\nreturn true;\r\n}\r\n\r\nfunction approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {\r\nrequire(!frozen[_spender] && !frozen[msg.sender], \"address frozen\");\r\nallowed[msg.sender][_spender] = _value;\r\nemit Approval(msg.sender, _spender, _value);\r\nreturn true;\r\n}\r\n\r\nfunction allowance(\r\naddress _owner,\r\naddress _spender\r\n)\r\npublic\r\nview\r\nreturns (uint256)\r\n{\r\nreturn allowed[_owner][_spender];\r\n}\r\n\r\nfunction _transfer(address _from, address _to, uint256 _value) internal returns (uint256) {\r\nuint256 _fee = getFeeFor(_value);\r\nuint256 _principle = _value.sub(_fee);\r\nbalances[_from] = balances[_from].sub(_value);\r\nbalances[_to] = balances[_to].add(_principle);\r\nemit Transfer(_from, _to, _principle);\r\nemit Transfer(_from, feeRecipient, _fee);\r\nif (_fee > 0) {\r\nbalances[feeRecipient] = balances[feeRecipient].add(_fee);\r\nemit FeeCollected(_from, feeRecipient, _fee);\r\n}\r\n\r\nreturn _principle;\r\n}\r\n\r\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ///\r\n\r\n/// OWNER DATA ///\r\naddress public owner;\r\naddress public proposedOwner;\r\n\r\n/// OWNER EVENTS ///\r\nevent OwnershipTransferProposed(\r\naddress indexed currentOwner,\r\naddress indexed proposedOwner\r\n);\r\nevent OwnershipTransferDisregarded(\r\naddress indexed oldProposedOwner\r\n);\r\nevent OwnershipTransferred(\r\naddress indexed oldOwner,\r\naddress indexed newOwner\r\n);\r\n\r\n/// OWNER FUNCTIONALITY ///\r\nmodifier onlyOwner() {\r\nrequire(msg.sender == owner, \"onlyOwner\");\r\n_;\r\n}\r\n\r\nfunction proposeOwner(address _proposedOwner) public onlyOwner {\r\nrequire(_proposedOwner != address(0), \"cannot transfer ownership to address zero\");\r\nrequire(msg.sender != _proposedOwner, \"caller already is owner\");\r\nproposedOwner = _proposedOwner;\r\nemit OwnershipTransferProposed(owner, proposedOwner);\r\n}\r\n\r\nfunction disregardProposeOwner() public {\r\nrequire(msg.sender == proposedOwner || msg.sender == owner, \"only proposedOwner or owner\");\r\nrequire(proposedOwner != address(0), \"can only disregard a proposed owner that was previously set\");\r\naddress _oldProposedOwner = proposedOwner;\r\nproposedOwner = address(0);\r\nemit OwnershipTransferDisregarded(_oldProposedOwner);\r\n}\r\n\r\nfunction claimOwnership() public {\r\nrequire(msg.sender == proposedOwner, \"onlyProposedOwner\");\r\naddress _oldOwner = owner;\r\nowner = proposedOwner;\r\nproposedOwner = address(0);\r\nemit OwnershipTransferred(_oldOwner, owner);\r\n}\r\n\r\nfunction reclaimXAL() external onlyOwner {\r\nuint256 _balance = balances[this];\r\nbalances[this] = 0;\r\nbalances[owner] = balances[owner].add(_balance);\r\nemit Transfer(this, owner, _balance);\r\n}\r\n\r\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ///\r\n\r\n/// PAUSABLE DATA ///\r\nbool public paused = false;\r\n\r\n/// PAUSABLE EVENTS ///\r\nevent Pause();\r\nevent Unpause();\r\n\r\n/// PAUSABLE FUNCTIONALITY ///\r\nmodifier whenNotPaused() {\r\nrequire(!paused, \"whenNotPaused\");\r\n_;\r\n}\r\n\r\nfunction pause() public onlyOwner {\r\nrequire(!paused, \"already paused\");\r\npaused = true;\r\nemit Pause();\r\n}\r\n\r\nfunction unpause() public onlyOwner {\r\nrequire(paused, \"already unpaused\");\r\npaused = false;\r\nemit Unpause();\r\n}\r\n\r\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ///\r\n\r\n/// ASSET PROTECTION DATA ///\r\naddress public assetProtectionRole;\r\nmapping(address => bool) internal frozen;\r\n\r\n/// ASSET PROTECTION EVENTS ///\r\nevent AddressFrozen(address indexed addr);\r\nevent AddressUnfrozen(address indexed addr);\r\nevent FrozenAddressWiped(address indexed addr);\r\nevent AssetProtectionRoleSet (\r\naddress indexed oldAssetProtectionRole,\r\naddress indexed newAssetProtectionRole\r\n);\r\n\r\n/// ASSET PROTECTION FUNCTIONALITY ///\r\nmodifier onlyAssetProtectionRole() {\r\nrequire(msg.sender == assetProtectionRole, \"onlyAssetProtectionRole\");\r\n_;\r\n}\r\n\r\nfunction setAssetProtectionRole(address _newAssetProtectionRole) public {\r\nrequire(msg.sender == assetProtectionRole || msg.sender == owner, \"only assetProtectionRole or Owner\");\r\nemit AssetProtectionRoleSet(assetProtectionRole, _newAssetProtectionRole);\r\nassetProtectionRole = _newAssetProtectionRole;\r\n}\r\n\r\nfunction freeze(address _addr) public onlyAssetProtectionRole {\r\nrequire(!frozen[_addr], \"address already frozen\");\r\nfrozen[_addr] = true;\r\nemit AddressFrozen(_addr);\r\n}\r\n\r\nfunction unfreeze(address _addr) public onlyAssetProtectionRole {\r\nrequire(frozen[_addr], \"address already unfrozen\");\r\nfrozen[_addr] = false;\r\nemit AddressUnfrozen(_addr);\r\n}\r\n\r\nfunction wipeFrozenAddress(address _addr) public onlyAssetProtectionRole {\r\nrequire(frozen[_addr], \"address is not frozen\");\r\nuint256 _balance = balances[_addr];\r\nbalances[_addr] = 0;\r\ntotalSupply_ = totalSupply_.sub(_balance);\r\nemit FrozenAddressWiped(_addr);\r\nemit SupplyDecreased(_addr, _balance);\r\nemit Transfer(_addr, address(0), _balance);\r\n}\r\n\r\nfunction isFrozen(address _addr) public view returns (bool) {\r\nreturn frozen[_addr];\r\n}\r\n\r\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ///\r\n\r\n/// SUPPLY CONTROL DATA ///\r\naddress public supplyController;\r\n\r\n/// SUPPLY CONTROL EVENTS ///\r\nevent SupplyIncreased(address indexed to, uint256 value);\r\nevent SupplyDecreased(address indexed from, uint256 value);\r\nevent SupplyControllerSet(\r\naddress indexed oldSupplyController,\r\naddress indexed newSupplyController\r\n);\r\n\r\n/// SUPPLY CONTROL FUNCTIONALITY ///\r\nmodifier onlySupplyController() {\r\nrequire(msg.sender == supplyController, \"onlySupplyController\");\r\n_;\r\n}\r\n\r\nfunction setSupplyController(address _newSupplyController) public {\r\nrequire(msg.sender == supplyController || msg.sender == owner, \"only SupplyController or Owner\");\r\nrequire(_newSupplyController != address(0), \"cannot set supply controller to address zero\");\r\nemit SupplyControllerSet(supplyController, _newSupplyController);\r\nsupplyController = _newSupplyController;\r\n}\r\n\r\nfunction increaseSupply(uint256 _value) public onlySupplyController returns (bool success) {\r\ntotalSupply_ = totalSupply_.add(_value);\r\nbalances[supplyController] = balances[supplyController].add(_value);\r\nemit SupplyIncreased(supplyController, _value);\r\nemit Transfer(address(0), supplyController, _value);\r\nreturn true;\r\n}\r\n\r\nfunction decreaseSupply(uint256 _value) public onlySupplyController returns (bool success) {\r\nrequire(_value <= balances[supplyController], \"not enough supply\");\r\nbalances[supplyController] = balances[supplyController].sub(_value);\r\ntotalSupply_ = totalSupply_.sub(_value);\r\nemit SupplyDecreased(supplyController, _value);\r\nemit Transfer(supplyController, address(0), _value);\r\nreturn true;\r\n}\r\n\r\n/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ///\r\n\r\n/// FEE CONTROLLER DATA ///\r\nuint8 public constant feeDecimals = 6;\r\nuint256 public constant feeParts = 1000000;\r\nuint256 public feeRate;\r\naddress public feeController;\r\naddress public feeRecipient;\r\n\r\n/// FEE CONTROLLER EVENTS ///\r\nevent FeeCollected(address indexed from, address indexed to, uint256 value);\r\nevent FeeRateSet(\r\nuint256 indexed oldFeeRate,\r\nuint256 indexed newFeeRate\r\n);\r\nevent FeeControllerSet(\r\naddress indexed oldFeeController,\r\naddress indexed newFeeController\r\n);\r\nevent FeeRecipientSet(\r\naddress indexed oldFeeRecipient,\r\naddress indexed newFeeRecipient\r\n);\r\n\r\n/// FEE CONTROLLER FUNCTIONALITY ///\r\nmodifier onlyFeeController() {\r\nrequire(msg.sender == feeController, \"only FeeController\");\r\n_;\r\n}\r\n\r\nfunction setFeeController(address _newFeeController) public {\r\nrequire(msg.sender == feeController || msg.sender == owner, \"only FeeController or Owner\");\r\nrequire(_newFeeController != address(0), \"cannot set fee controller to address zero\");\r\naddress _oldFeeController = feeController;\r\nfeeController = _newFeeController;\r\nemit FeeControllerSet(_oldFeeController, feeController);\r\n}\r\n\r\nfunction setFeeRecipient(address _newFeeRecipient) public onlyFeeController {\r\nrequire(_newFeeRecipient != address(0), \"cannot set fee recipient to address zero\");\r\naddress _oldFeeRecipient = feeRecipient;\r\nfeeRecipient = _newFeeRecipient;\r\nemit FeeRecipientSet(_oldFeeRecipient, feeRecipient);\r\n}\r\n\r\nfunction setFeeRate(uint256 _newFeeRate) public onlyFeeController {\r\nrequire(_newFeeRate <= feeParts, \"cannot set fee rate above 100%\");\r\nuint256 _oldFeeRate = feeRate;\r\nfeeRate = _newFeeRate;\r\nemit FeeRateSet(_oldFeeRate, feeRate);\r\n}\r\n\r\nfunction getFeeFor(uint256 _value) public view returns (uint256) {\r\nif (feeRate == 0) {\r\nreturn 0;\r\n}\r\n\r\nreturn _value.mul(feeRate).div(feeParts);\r\n}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"disregardProposeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"assetProtectionRole\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"getFeeFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFeeController\",\"type\":\"address\"}],\"name\":\"setFeeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFeeRate\",\"type\":\"uint256\"}],\"name\":\"setFeeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSupplyController\",\"type\":\"address\"}],\"name\":\"setSupplyController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeParts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAssetProtectionRole\",\"type\":\"address\"}],\"name\":\"setAssetProtectionRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"decreaseSupply\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proposedOwner\",\"type\":\"address\"}],\"name\":\"proposeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increaseSupply\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reclaimXAL\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposedOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"wipeFrozenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFeeRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"supplyController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"currentOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldProposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferDisregarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"AddressFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"AddressUnfrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"FrozenAddressWiped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldAssetProtectionRole\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newAssetProtectionRole\",\"type\":\"address\"}],\"name\":\"AssetProtectionRoleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SupplyIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SupplyDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldSupplyController\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newSupplyController\",\"type\":\"address\"}],\"name\":\"SupplyControllerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FeeCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldFeeRate\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"newFeeRate\",\"type\":\"uint256\"}],\"name\":\"FeeRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldFeeController\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newFeeController\",\"type\":\"address\"}],\"name\":\"FeeControllerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldFeeRecipient\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newFeeRecipient\",\"type\":\"address\"}],\"name\":\"FeeRecipientSet\",\"type\":\"event\"}]","ContractName":"AltinLiraXAL","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://c6acb926883f49aa492cadb335dee5d3e76b5ee245a3e6f70709f77986fec1ac"}]}