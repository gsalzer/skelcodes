{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.13;\r\n\r\ninterface RNGOracle {\r\n\tfunction createSeries(uint256[] calldata _newSeries) external returns (uint256 seriesIndex);\r\n\tfunction seriesRequest(uint256 _seriesIndex, uint256 _runs, bytes32 _seed, uint256 _callbackGasLimit) external returns (bytes32 queryId);\r\n\tfunction getSeries(uint256 _seriesIndex) external view returns (uint256 sum, uint256 maxRuns, uint256[] memory values, uint256[] memory cumulativeSum, uint256[] memory resolutions);\r\n\tfunction queryWallet(address _user) external view returns (uint256);\r\n}\r\n\r\ninterface DDN {\r\n\tfunction transfer(address _to, uint256 _tokens) external returns (bool);\r\n\tfunction balanceOf(address _user) external view returns (uint256);\r\n\tfunction dividendsOf(address _user) external view returns (uint256);\r\n\tfunction buy() external payable returns (uint256);\r\n\tfunction reinvest() external returns (uint256);\r\n}\r\n\r\ncontract Pooling {\r\n\r\n\tuint256 constant private FLOAT_SCALAR = 2**64;\r\n\r\n\tstruct User {\r\n\t\tuint256 shares;\r\n\t\tint256 scaledPayout;\r\n\t\tbytes32 seed;\r\n\t}\r\n\r\n\tstruct BetInfo {\r\n\t\taddress user;\r\n\t\tuint256 betAmount;\r\n\t}\r\n\r\n\tstruct Info {\r\n\t\tuint256 seriesIndex;\r\n\t\tuint256 totalShares;\r\n\t\tuint256 scaledCumulativeDDN;\r\n\t\tmapping(address => User) users;\r\n\t\tmapping(bytes32 => BetInfo) betInfo;\r\n\t\tRNGOracle oracle;\r\n\t\tDDN ddn;\r\n\t}\r\n\tInfo private info;\r\n\r\n\r\n\tevent BetPlaced(address indexed user, bytes32 queryId);\r\n\tevent BetResolved(address indexed user, bytes32 indexed queryId, uint256 betAmount, uint256 shares);\r\n\tevent BetFailed(address indexed user, bytes32 indexed queryId, uint256 betAmount);\r\n\tevent Withdraw(address indexed user, uint256 amount);\r\n\r\n\r\n\tconstructor(address _oracleAddress, address _DDN_address) public {\r\n\t\tinfo.oracle = RNGOracle(_oracleAddress);\r\n\t\tinfo.ddn = DDN(_DDN_address);\r\n\t\tuint256[] memory _chances = new uint256[](10);\r\n\t\t_chances[0] = 1;\r\n\t\t_chances[1] = 2;\r\n\t\t_chances[2] = 3;\r\n\t\t_chances[3] = 5;\r\n\t\t_chances[4] = 7;\r\n\t\t_chances[5] = 11;\r\n\t\t_chances[6] = 13;\r\n\t\t_chances[7] = 17;\r\n\t\t_chances[8] = 19;\r\n\t\t_chances[9] = 23;\r\n\t\tinfo.seriesIndex = info.oracle.createSeries(_chances);\r\n\t}\r\n\r\n\tfunction pool() external payable {\r\n\t\trequire(msg.value > 0);\r\n\t\treinvestPool();\r\n\t\t_placeBet(msg.sender, info.ddn.buy.value(msg.value)());\r\n\t}\r\n\r\n\tfunction tokenCallback(address _from, uint256 _tokens, bytes calldata) external returns (bool) {\r\n\t\trequire(msg.sender == address(info.ddn));\r\n\t\trequire(_tokens > 0);\r\n\t\treinvestPool();\r\n\t\t_placeBet(_from, _tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction withdraw() external returns (uint256) {\r\n\t\tuint256 _dividends = dividendsOf(msg.sender);\r\n\t\trequire(_dividends >= 0);\r\n\t\tinfo.users[msg.sender].scaledPayout += int256(_dividends * FLOAT_SCALAR);\r\n\t\tinfo.ddn.transfer(msg.sender, _dividends);\r\n\t\temit Withdraw(msg.sender, _dividends);\r\n\t\treturn _dividends;\r\n\t}\r\n\r\n\tfunction setSeed(bytes32 _seed) public {\r\n\t\tinfo.users[msg.sender].seed = _seed;\r\n\t}\r\n\r\n\tfunction reinvestPool() public {\r\n\t\tif (info.ddn.dividendsOf(address(this)) > 0) {\r\n\t\t\tinfo.scaledCumulativeDDN += info.ddn.reinvest() * FLOAT_SCALAR / info.totalShares;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction seriesCallback(bytes32 _queryId, uint256 _resolution, uint256[] calldata) external {\r\n\t\trequire(msg.sender == address(info.oracle));\r\n\t\tBetInfo memory _betInfo = info.betInfo[_queryId];\r\n\t\tuint256 _shares = _betInfo.betAmount * _resolution / FLOAT_SCALAR;\r\n\t\tinfo.totalShares += _shares;\r\n\t\tinfo.users[_betInfo.user].shares += _shares;\r\n\t\tinfo.users[_betInfo.user].scaledPayout += int256(info.scaledCumulativeDDN * _shares);\r\n\t\tinfo.scaledCumulativeDDN += _betInfo.betAmount * FLOAT_SCALAR / info.totalShares / 2;\r\n\t\temit BetResolved(_betInfo.user, _queryId, _betInfo.betAmount, _shares);\r\n\t}\r\n\r\n\tfunction queryFailed(bytes32 _queryId) external {\r\n\t\trequire(msg.sender == address(info.oracle));\r\n\t\tBetInfo memory _betInfo = info.betInfo[_queryId];\r\n\t\tinfo.ddn.transfer(_betInfo.user, _betInfo.betAmount);\r\n\t\temit BetFailed(_betInfo.user, _queryId, _betInfo.betAmount);\r\n\t}\r\n\r\n\r\n\tfunction pooledDDN() public view returns (uint256) {\r\n\t\treturn info.ddn.balanceOf(address(this));\r\n\t}\r\n\r\n\tfunction totalShares() public view returns (uint256) {\r\n\t\treturn info.totalShares;\r\n\t}\r\n\r\n\tfunction sharesOf(address _user) public view returns (uint256) {\r\n\t\treturn info.users[_user].shares;\r\n\t}\r\n\r\n\tfunction dividendsOf(address _user) public view returns (uint256) {\r\n\t\treturn uint256(int256(info.scaledCumulativeDDN * sharesOf(_user)) - info.users[_user].scaledPayout) / FLOAT_SCALAR;\r\n\t}\r\n\r\n\tfunction allInfoFor(address _user) public view returns (uint256 totalPooled, uint256 totalPoolShares, uint256 userQueryWallet, uint256 userBalance, uint256 userShares, uint256 userDividends) {\r\n\t\treturn (pooledDDN(), totalShares(), info.oracle.queryWallet(_user), info.ddn.balanceOf(_user), sharesOf(_user), dividendsOf(_user));\r\n\t}\r\n\r\n\tfunction getPayouts() public view returns (uint256 sum, uint256[] memory chances, uint256[] memory cumulativeSum, uint256[] memory scaledPayouts) {\r\n\t\t(sum, , chances, cumulativeSum, scaledPayouts) = info.oracle.getSeries(info.seriesIndex);\r\n\t\tfor (uint256 i = 0; i < scaledPayouts.length; i++) {\r\n\t\t\tscaledPayouts[i] = 1e18 * scaledPayouts[i] / FLOAT_SCALAR;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction _placeBet(address _user, uint256 _betAmount) internal {\r\n\t\tbytes32 _queryId = info.oracle.seriesRequest(info.seriesIndex, 1, info.users[_user].seed, info.users[_user].shares == 0 ? 300000 : 200000);\r\n\t\tBetInfo memory _betInfo = BetInfo({\r\n\t\t\tuser: _user,\r\n\t\t\tbetAmount: _betAmount\r\n\t\t});\r\n\t\tinfo.betInfo[_queryId] = _betInfo;\r\n\t\temit BetPlaced(_user, _queryId);\r\n\t}\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_DDN_address\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"}],\"name\":\"BetFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"}],\"name\":\"BetPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"BetResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"allInfoFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalPooled\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPoolShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userQueryWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userDividends\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"dividendsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPayouts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sum\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"chances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"cumulativeSum\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scaledPayouts\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pool\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pooledDDN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"}],\"name\":\"queryFailed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reinvestPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_resolution\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"name\":\"seriesCallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_seed\",\"type\":\"bytes32\"}],\"name\":\"setSeed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"sharesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenCallback\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Pooling","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000005a4e4b5e2e78bf2d9df2cd916106862e5873f819000000000000000000000000dd17d00c4bba48008d49bb4cc292819f5a4282d4","Library":"","LicenseType":"None","SwarmSource":"bzzr://8fd05d69a255a55f8d4951aa9c03c2423aa3dfb188b9b3c66a03bc920bf7ff24"}]}