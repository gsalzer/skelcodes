{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  //transfer owner to another address\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    if (_newOwner != address(0)) {\r\n      owner = _newOwner;\r\n    }\r\n  }\r\n}\r\n\r\ncontract Tombstone{\r\n    string public name;\r\n    string public born_on;\r\n    string public died_on;\r\n    string public epitaph;\r\n    string public place;\r\n    \r\n    event Mourn(address indexed who);\r\n    \r\n    bool built = false;\r\n    \r\n    function build(\r\n        string memory _name, \r\n        string memory _born_on, \r\n        string memory _died_on, \r\n        string memory _epitaph, \r\n        string memory _place\r\n    ) public {\r\n        require(!built);\r\n        name = _name;\r\n        born_on = _born_on;\r\n        died_on = _died_on;\r\n        epitaph = _epitaph;\r\n        place = _place;\r\n        built = true;\r\n    }\r\n    \r\n    \r\n    function info() public view \r\n        returns(\r\n            string memory, \r\n            string memory, \r\n            string memory, \r\n            string memory,\r\n            string memory\r\n        )\r\n    {\r\n        return (name, born_on, died_on, epitaph, place);\r\n    }\r\n    \r\n    function mourn() public {\r\n        emit Mourn(msg.sender);\r\n    }\r\n}\r\n\r\n// Mourn victims of coronavirus pandemic.\r\n// R.I.P\r\n// https://restinpeace.world/\r\n\r\ncontract RestInPeace is Ownable {\r\n    address public templateAddress;\r\n    \r\n    event Created(address indexed sender, address tombstone);\r\n    \r\n    constructor(address _template) public {\r\n        templateAddress = _template;\r\n    }\r\n    \r\n    function updateTemplate(address _template) public onlyOwner {\r\n        templateAddress = _template;\r\n    }\r\n    \r\n    /// @dev create tombstone\r\n    /// @param name name of deceased\r\n    /// @param born_on (yyyymmdd) birth date of deceased\r\n    /// @param died_on (yyyymmdd) death date of deceased\r\n    /// @param epitaph epitaph to deceased\r\n    /// @param place place of birth\r\n    /// @return tombstone Tombstone\r\n    function createTombstone(\r\n        string memory name, \r\n        string memory born_on, \r\n        string memory died_on, \r\n        string memory epitaph, \r\n        string memory place\r\n    ) public returns (Tombstone tombstone) {\r\n        \r\n        require(bytes(name).length <= 150, \"Too long name\");\r\n        require(bytes(born_on).length == 8, \"Invalid date format\");\r\n        require(bytes(died_on).length == 8, \"Invalid date format\");\r\n        require(bytes(epitaph).length <= 300, \"Too long inputs\");\r\n        require(bytes(place).length <= 150, \"Too long inputs\");\r\n        \r\n        tombstone = Tombstone(createFromTemplate(templateAddress));\r\n        tombstone.build(name, born_on, died_on, epitaph, place);\r\n        emit Created(msg.sender, address(tombstone));\r\n    }\r\n    \r\n    function createFromTemplate(address target) internal returns (address result) {\r\n        bytes20 targetBytes = bytes20(target);\r\n        assembly {\r\n          let clone := mload(0x40)\r\n          mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\r\n          mstore(add(clone, 0x14), targetBytes)\r\n          mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\r\n          result := create(0, clone, 0x37)\r\n        }\r\n   }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"templateAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"born_on\",\"type\":\"string\"},{\"name\":\"died_on\",\"type\":\"string\"},{\"name\":\"epitaph\",\"type\":\"string\"},{\"name\":\"place\",\"type\":\"string\"}],\"name\":\"createTombstone\",\"outputs\":[{\"name\":\"tombstone\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_template\",\"type\":\"address\"}],\"name\":\"updateTemplate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_template\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tombstone\",\"type\":\"address\"}],\"name\":\"Created\",\"type\":\"event\"}]","ContractName":"RestInPeace","CompilerVersion":"v0.5.10+commit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000004bb8bc8ad8ccef3b68f0e6a70a741de942b3b8af","Library":"","LicenseType":"None","SwarmSource":"bzzr://76dea78e7034b134acb6faa4979facea649aca7139c3086e7e67e5d3c394399e"}]}