{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.6;\r\n\r\n\r\n/**\r\n * @title Utils\r\n * @dev This contract is used to combine multiple web3 node calls into\r\n *      preferrably one single call.\r\n * @author Christian Engel - @chrsengel\r\n */\r\ncontract Utils {\r\n  /**\r\n   * @dev Get ERC20 balances of a list of tokens\r\n   *\r\n   * @param _tokens the tokens\r\n   * @param _owner the owner address\r\n   */\r\n  function getERC20Balances(address[] memory _tokens, address _owner)\r\n    public\r\n    view\r\n    returns (uint256[] memory)\r\n  {\r\n    uint256[] memory balances = new uint256[](_tokens.length);\r\n    for (uint256 i = 0; i < _tokens.length; i++) {\r\n      balances[i] = MultiToken(_tokens[i]).balanceOf(_owner);\r\n    }\r\n    return balances;\r\n  }\r\n\r\n  /**\r\n   * @dev Get balances of cTokens and balances of underlying assets\r\n   *\r\n   * @param _tokens the cTokens\r\n   * @param _owner the owner address\r\n   */\r\n  function getCompoundBalances(address[] memory _tokens, address _owner)\r\n    public\r\n    view\r\n    returns (uint256[] memory, uint256[] memory)\r\n  {\r\n    uint256[] memory balances = new uint256[](_tokens.length);\r\n    uint256[] memory underlyings = new uint256[](_tokens.length);\r\n    for (uint256 i = 0; i < _tokens.length; i++) {\r\n      balances[i] = MultiToken(_tokens[i]).balanceOf(_owner);\r\n      underlyings[i] = MultiToken(_tokens[i]).balanceOfUnderlying(_owner);\r\n    }\r\n    return (balances, underlyings);\r\n  }\r\n\r\n  /**\r\n   * @dev Get the current supply rates of all cTokens.\r\n   * This can be used to quickly calculate all APYs of all cTokens.\r\n   * To get the APY in percent simply multiply the result by 2102400\r\n   * and then divide by 1e18.\r\n   *\r\n   * APY = (SUPPLY_RATE * BLOCKS_PER_YEAR) / 1e18\r\n   *\r\n   * @param _tokens the cTokens\r\n   */\r\n  function getSupplyRates(address[] memory _tokens) public view returns (uint256[] memory) {\r\n    uint256[] memory supplyRates = new uint256[](_tokens.length);\r\n    for (uint256 i = 0; i < _tokens.length; i++) {\r\n      supplyRates[i] = MultiToken(_tokens[i]).supplyRatePerBlock();\r\n    }\r\n    return supplyRates;\r\n  }\r\n\r\n  /**\r\n   * @dev Get the current borrow rates of all cTokens.\r\n   *\r\n   * @param _tokens the cTokens\r\n   */\r\n  function getBupplyRates(address[] memory _tokens) public view returns (uint256[] memory) {\r\n    uint256[] memory borrowRates = new uint256[](_tokens.length);\r\n    for (uint256 i = 0; i < _tokens.length; i++) {\r\n      borrowRates[i] = MultiToken(_tokens[i]).borrowRatePerBlock();\r\n    }\r\n    return borrowRates;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n + @title MultiToken\r\n * @dev Multi token interface that can be used to interact with cToken and\r\n *      other ERC20 contracts.\r\n */\r\ninterface MultiToken {\r\n  function supplyRatePerBlock() external view returns (uint256);\r\n\r\n  function borrowRatePerBlock() external view returns (uint256);\r\n\r\n  function balanceOf(address owner) external view returns (uint256);\r\n\r\n  function balanceOfUnderlying(address owner) external view returns (uint256);\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"getBupplyRates\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getCompoundBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getERC20Balances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"getSupplyRates\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Utils","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"ipfs://d5e1d00afa49d192f1d61ebf7ab453ab3c56bea12ef4d428a9844d6a780cbc0b"}]}