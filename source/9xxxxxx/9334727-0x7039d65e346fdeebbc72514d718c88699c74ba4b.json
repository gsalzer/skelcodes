{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.16;\r\n    //This is the official Happy Face Place.\r\n    //You can send ChainFaces to this contract, but nobody will ever be able to retrieve them.\r\n    //No, not even Zoma\r\n\r\ncontract ChainFaces{\r\n    //Come to the Happy Face Place my beautiful children <3\r\n    function createFace(uint256 seed) public payable {}\r\n}\r\n\r\ncontract IERC721Receiver {\r\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes memory data) public returns (bytes4);\r\n}\r\n\r\ncontract HappyFacePlace is IERC721Receiver{\r\n    \r\n    address natealex;\r\n    \r\n    uint previousBlockNumber;\r\n    \r\n    uint totalAscended = 0;\r\n    \r\n    ChainFaces chainFaces;\r\n    \r\n    modifier ZomaNotAllowed {\r\n        require(msg.sender == natealex);\r\n        _;\r\n    }\r\n    \r\n    constructor () public{\r\n        natealex = msg.sender;\r\n        chainFaces = ChainFaces(0x91047Abf3cAb8da5A9515c8750Ab33B4f1560a7A);\r\n    }\r\n    \r\n    function MintAFaceForTheHappyPlace() public ZomaNotAllowed{\r\n        //A Block a Face keeps the Faces Happy\r\n        require(previousBlockNumber < block.number,\"Each block deserves a Face in the Happy Face Place.\");\r\n        require(address(this).balance > 20 finney, \"Any amount of Eth is worth eternal pleasure.\");\r\n        previousBlockNumber = block.number-10; //Lets not get too crazy in here loves\r\n        \r\n        //Come home to papa\r\n        chainFaces.createFace.value(14 finney)(4206969);\r\n        \r\n        totalAscended++;\r\n    }\r\n    \r\n    function UseDifferentAddress(address addr) public ZomaNotAllowed{\r\n        natealex = addr;\r\n    }\r\n    \r\n    function AddEth() public payable{\r\n        //Zoma you can use this one if you like >.>\r\n        require(msg.value > 0 wei);\r\n    }\r\n    \r\n    function SubWei(uint weiAmt) public ZomaNotAllowed{\r\n        msg.sender.transfer(weiAmt);\r\n    }\r\n    function EmptyEth() public ZomaNotAllowed{\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n    function GetTotalAscended() external view returns(uint){\r\n        return totalAscended;\r\n    }\r\n    //IERC721Receiver implementation\r\n    function onERC721Received(address, address, uint256, bytes memory) public returns (bytes4) {\r\n        return this.onERC721Received.selector;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[],\"name\":\"AddEth\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"EmptyEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetTotalAscended\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"MintAFaceForTheHappyPlace\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"weiAmt\",\"type\":\"uint256\"}],\"name\":\"SubWei\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"UseDifferentAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"HappyFacePlace","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://542107d0553199f7823d5b2a6ac324429dad8ab1156849fc8377b64b1123e9a2"}]}