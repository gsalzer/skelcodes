{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.16;\r\n\r\ncontract Coinosis {\r\n    \r\n    string constant DIFFERENT_LENGTHS =\r\n        \"The number of recipients differs from the number of amounts \\\r\n(different-lengths)\";\r\n    string constant INSUFFICIENT_VALUE =\r\n        \"The ether value sent is less than the total intended amount to send \\\r\n(insufficient-value).\";\r\n    \r\n    event Paid(address recipient, uint amount);\r\n    \r\n    function distribute(\r\n        address payable[] memory recipients,\r\n        uint[] memory amounts\r\n    ) public payable {\r\n        require(recipients.length == amounts.length, DIFFERENT_LENGTHS);\r\n        uint totalAmount = 0;\r\n        for (uint i = 0; i < amounts.length; i++) {\r\n            totalAmount += amounts[i];\r\n        }\r\n        require(msg.value >= totalAmount, INSUFFICIENT_VALUE);\r\n        for (uint i = 0; i < recipients.length; i++) {\r\n            recipients[i].transfer(amounts[i]);\r\n            emit Paid(recipients[i], amounts[i]);\r\n        }\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"distribute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"Coinosis","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU GPLv3","SwarmSource":"bzzr://eae722760ffd260c554181522c5778fd65962856e60fa1f5f1b244f5f1efd7db"}]}