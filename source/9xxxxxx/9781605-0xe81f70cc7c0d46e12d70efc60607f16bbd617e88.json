{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface CTokenInterface {\r\n    function underlying() external view returns (address);\r\n}\r\n\r\ninterface GemJoinInterface {\r\n    function ilk() external view returns (bytes32);\r\n}\r\n\r\ninterface ConnectorsInterface {\r\n    function chief(address) external view returns (bool);\r\n}\r\n\r\ninterface IndexInterface {\r\n    function master() external view returns (address);\r\n}\r\n\r\n\r\ncontract Helpers {\r\n    address public constant connectors = 0xD6A602C01a023B98Ecfb29Df02FBA380d3B21E0c;\r\n    address public constant instaIndex = 0x2971AdFa57b20E5a416aE5a708A8655A9c74f723;\r\n    uint public version = 1;\r\n\r\n    mapping (address => address) public cTokenMapping;\r\n    mapping (bytes32 => address) public gemJoinMapping;\r\n\r\n    event LogAddCTokenMapping(address[] cTokens);\r\n    event LogAddGemJoinMapping(address[] gemJoin);\r\n    \r\n    modifier isChief {\r\n        require(\r\n            ConnectorsInterface(connectors).chief(msg.sender) ||\r\n            IndexInterface(instaIndex).master() == msg.sender, \"not-Chief\");\r\n        _;\r\n    }\r\n    function addCtknMapping(address[] memory cTkn) public isChief {\r\n        require(cTkn.length > 0, \"No-CToken-Address\");\r\n        for (uint i = 0; i < cTkn.length; i++) {\r\n            address cErc20 = cTkn[i];\r\n            address erc20 = CTokenInterface(cErc20).underlying();\r\n            require(cTokenMapping[erc20] == address(0), \"Token-Already-Added\");\r\n            cTokenMapping[erc20] = cErc20;\r\n        }\r\n        emit LogAddCTokenMapping(cTkn);\r\n    }\r\n\r\n\r\n    function addGemJoinMapping(address[] memory gemJoins) public isChief {\r\n        require(gemJoins.length > 0, \"No-GemJoin-Address\");\r\n        for (uint i = 0; i < gemJoins.length; i++) {\r\n            address gemJoin = gemJoins[i];\r\n            bytes32 ilk = GemJoinInterface(gemJoin).ilk();\r\n            require(gemJoinMapping[ilk] == address(0), \"GemJoin-Already-Added\");\r\n            gemJoinMapping[ilk] = gemJoin;\r\n        }\r\n        emit LogAddGemJoinMapping(gemJoins);\r\n    }\r\n}\r\n\r\n\r\ncontract InstaMapping is Helpers {\r\n    string constant public name = \"Compound-And-Maker-Mapping-v1\";\r\n    constructor() public {\r\n        address ethAddress = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n        address cEth = 0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5;\r\n        cTokenMapping[ethAddress] = cEth;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"cTokens\",\"type\":\"address[]\"}],\"name\":\"LogAddCTokenMapping\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"gemJoin\",\"type\":\"address[]\"}],\"name\":\"LogAddGemJoinMapping\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"cTkn\",\"type\":\"address[]\"}],\"name\":\"addCtknMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"gemJoins\",\"type\":\"address[]\"}],\"name\":\"addGemJoinMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cTokenMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"connectors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"gemJoinMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"instaIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"InstaMapping","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"ipfs://35a60f64ab4cc8e4b1ccea5933328fb1f43041d65c75a87a81f3c95fce260cb3"}]}