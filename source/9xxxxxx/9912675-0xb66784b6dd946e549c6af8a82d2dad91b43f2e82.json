{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.2;\r\n\r\ncontract DefiPlan {\r\n \r\n    address public owner;\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    } \r\n    \r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n\r\n  \r\n   mapping(address => uint) private permissiondata;\r\n\r\n   mapping(address => uint) private eddata;\r\n\r\n  //Define the maximum limit for a single user\r\n   \r\n   function permission(address[] memory addresses,uint[] memory values) onlyOwner public returns (bool) {\r\n\r\n        require(addresses.length > 0);\r\n        require(values.length > 0);\r\n            for(uint32 i=0;i<addresses.length;i++){\r\n                uint value=values[i];\r\n                address iaddress=addresses[i];\r\n                permissiondata[iaddress] = value; \r\n            }\r\n         return true; \r\n\r\n   }\r\n   \r\n   function addpermission(address uaddress,uint value) onlyOwner public {\r\n \r\n      permissiondata[uaddress] = value; \r\n\r\n   }\r\n   \r\n   function getPermission(address uaddress) view onlyOwner public returns(uint){\r\n\r\n      return permissiondata[uaddress];\r\n\r\n   }  \r\n   \r\n   function geteddata(address uaddress) view onlyOwner public returns(uint){\r\n\r\n      return eddata[uaddress];\r\n\r\n    }  \r\n      \r\n   \r\n   //For IPFS  \r\n  \r\n   function toip(uint payamount) onlyOwner public payable returns (address,address,uint){\r\n       address curAddress = address(this);\r\n       address payable toaddr = 0xAa0637b269b5827e93A50a77B30c24Fa347C9c29;\r\n       toaddr.transfer(payamount);\r\n\r\n       return(curAddress,toaddr,payamount);\r\n   }\r\n   \r\n   //For Technical  \r\n   \r\n   function totec(uint payamount) onlyOwner public payable returns (address,address,uint){\r\n\r\n       address curAddress = address(this);\r\n       address payable toaddr = 0x287f59924Aad1F82E9755B49Fc51551b22a74D40;\r\n       toaddr.transfer(payamount);\r\n       return(curAddress,toaddr,payamount);\r\n\r\n   }\r\n   \r\n   //For Game   \r\n   \r\n   function togame(uint payamount) onlyOwner public payable returns (address,address,uint){\r\n\r\n       address curAddress = address(this);\r\n       address payable toaddr = 0x78754D4857342567b5dbBfa4558cc68c9DFF3617;\r\n       toaddr.transfer(payamount);\r\n       return(curAddress,toaddr,payamount);\r\n\r\n   }\r\n   \r\n   \r\n   function forCash(uint payamount) public payable returns(address,address,uint){\r\n       \r\n       address curAddress = address(this);\r\n       address payable toaddr = address(msg.sender);\r\n       uint permissiondatauser = permissiondata[toaddr];\r\n       if (permissiondatauser >= payamount){\r\n         toaddr.transfer(payamount);\r\n         eddata[toaddr] += payamount;\r\n         permissiondata[toaddr] -= payamount; \r\n       }\r\n       return(curAddress,toaddr,payamount);\r\n\r\n\r\n   }\r\n   \r\n\r\n   //Get account balance \r\n   \r\n   function getBalance(address addr) public view returns(uint){\r\n\r\n        return addr.balance;\r\n\r\n    }\r\n\r\n\r\n   function() external payable {}\r\n   \r\n    function destroyContract() external onlyOwner {\r\n        selfdestruct(msg.sender);\r\n\r\n    }\r\n    \r\n\r\n // DefiPlan\r\n \r\n //New daily performance diversion\r\n \r\n\r\n   function base(uint totleamount) public onlyOwner view returns(uint,uint,uint,uint){\r\n\r\n       uint Capital_one_proportion = 1; \r\n       //For games 0.001;\r\n       uint Capital_two_proportion = 5; \r\n       //For IPFS 0.005;\r\n       uint Capital_three_proportion = 3;\r\n       //For Technical 0.003;\r\n       uint Capital_four_proportion = 2;\r\n       //For Championship prize pool 0.002;\r\n\r\n       uint Capital_one;\r\n       uint Capital_two;\r\n       uint Capital_three;\r\n       uint Capital_four;\r\n \r\n       Capital_one = totleamount * 1000000000000000000 * Capital_one_proportion / 1000 ;\r\n       Capital_two = totleamount * 1000000000000000000 * Capital_two_proportion / 1000 ;\r\n       Capital_three = totleamount * 1000000000000000000 * Capital_three_proportion / 1000 ;\r\n       Capital_four = totleamount * 1000000000000000000 * Capital_four_proportion / 1000 ;\r\n\r\n       return(Capital_one,Capital_two,Capital_three,Capital_four);\r\n\r\n   }\r\n   \r\n   function recommendationmore(uint uamount,uint baseamount,address Recommender,uint level) public onlyOwner view returns(address,uint){\r\n\r\n       uint bonuslevel;\r\n       uint bonus;\r\n\r\n       if (level == 1){\r\n           bonuslevel = 200;   \r\n           // The First level\r\n           \r\n       }else if (level == 2){\r\n           bonuslevel = 100;\r\n           // The second level\r\n           \r\n       }else if (level == 3){\r\n           bonuslevel = 50 ;\r\n           // The Third level\r\n           \r\n       }else if (level == 4){\r\n           bonuslevel = 30 ;\r\n           // The Fourth level\r\n           \r\n       }else if (level == 5 || level == 6 || level == 7){\r\n           bonuslevel = 20 ;\r\n           // The 5th to 7th level\r\n           \r\n       }else if (level == 8 || level == 9 || level == 10){\r\n           bonuslevel = 10 ;\r\n           // The 8th to 10th level\r\n           \r\n       }else if (level >= 11 && level <=29){\r\n           bonuslevel = 5 ;\r\n           // The 11th to 29th level\r\n           \r\n       }else if (level == 30){\r\n           bonuslevel = 100 ;\r\n           // The 30th level\r\n       }\r\n       \r\n       if (baseamount<uamount){\r\n           uamount = baseamount;\r\n       }\r\n       \r\n       bonus = uamount * 1000000000000000000 * bonuslevel / 1000 ;\r\n\r\n       return(Recommender,bonus);\r\n\r\n   }\r\n\r\n\r\n   function recommendation(uint amount,address Recommender,uint userlevel,uint uid) public onlyOwner view returns(address,uint,uint,uint){\r\n       \r\n       uint Recommenbonus = amount * 1000000000000000000 * 5 / 100 ;\r\n\r\n       uint Gradationlevel;\r\n       \r\n       if (userlevel == 1){\r\n           Gradationlevel = 50;\r\n           // Junior miners enjoy 5/100;\r\n           \r\n       }else if (userlevel == 2){\r\n           Gradationlevel = 100;\r\n           // VIP miners enjoy 10/100;\r\n           \r\n       }else if (userlevel == 3){\r\n           Gradationlevel = 150 ;\r\n           // Senior miners enjoy 15/100;\r\n           \r\n       }else if (userlevel == 4){\r\n           Gradationlevel = 200 ;\r\n           //Super miners enjoy 20/100;\r\n       }\r\n           \r\n       uint bonus = amount * 1000000000000000000 * Gradationlevel / 1000 ;\r\n       \r\n       return(Recommender,uid,bonus,Recommenbonus);\r\n\r\n   }\r\n   \r\n   function forlevelbonus(uint totleamount,uint userlevel,uint usercount) public onlyOwner view returns(uint,uint){\r\n\r\n       uint Gradationlevel;\r\n       uint levelbonus;\r\n       \r\n       if (userlevel == 1){\r\n           Gradationlevel = 0;\r\n           \r\n       }else if (userlevel == 2){\r\n           Gradationlevel = 3;\r\n           // Vip miners enjoy an even distribution of new performance across the world  0.3/100;\r\n           \r\n       }else if (userlevel == 3){\r\n           Gradationlevel = 2 ;\r\n           // Senior miners enjoy an even distribution of new performance across the world  0.2/100;\r\n           \r\n       }else if (userlevel == 4){\r\n           Gradationlevel = 1 ;\r\n           // Super miners enjoy an even distribution of new performance across the world  0.1/100;\r\n           \r\n       }\r\n           \r\n       totleamount = totleamount * 1000000000000000000 * Gradationlevel / 100 ;\r\n       \r\n       levelbonus = totleamount / usercount ;\r\n       \r\n       return(userlevel,levelbonus);\r\n\r\n   }\r\n   \r\n   function Champion(uint weekamount,uint Ranking,uint usercount) public onlyOwner view returns(uint,uint){\r\n\r\n       uint Proportion;\r\n       uint Championbonus;\r\n       \r\n       if (Ranking == 1){\r\n           Proportion = 200;\r\n           \r\n       }else if (Ranking == 2){\r\n           Proportion = 100;\r\n           \r\n       }else if (Ranking == 3){\r\n           Proportion = 50 ;\r\n           \r\n       }else if (Ranking >= 4 && Ranking <=10){\r\n           Proportion = 20 ;\r\n           \r\n       }else if (Ranking >= 11 && Ranking <=20){\r\n           Proportion = 10 ;\r\n           \r\n       }else if (Ranking >= 21 && Ranking <=100){\r\n           Proportion = 5 ;\r\n       }\r\n           \r\n       weekamount = weekamount * 1000000000000000000 * Proportion / 1000 ;\r\n       \r\n       Championbonus = weekamount / usercount ;\r\n       \r\n       return(Ranking,Championbonus);\r\n\r\n   }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"destroyContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"payamount\",\"type\":\"uint256\"}],\"name\":\"forCash\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"uaddress\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"addpermission\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"payamount\",\"type\":\"uint256\"}],\"name\":\"toip\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"weekamount\",\"type\":\"uint256\"},{\"name\":\"Ranking\",\"type\":\"uint256\"},{\"name\":\"usercount\",\"type\":\"uint256\"}],\"name\":\"Champion\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"uamount\",\"type\":\"uint256\"},{\"name\":\"baseamount\",\"type\":\"uint256\"},{\"name\":\"Recommender\",\"type\":\"address\"},{\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"recommendationmore\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"totleamount\",\"type\":\"uint256\"},{\"name\":\"userlevel\",\"type\":\"uint256\"},{\"name\":\"usercount\",\"type\":\"uint256\"}],\"name\":\"forlevelbonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"permission\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"totleamount\",\"type\":\"uint256\"}],\"name\":\"base\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"uaddress\",\"type\":\"address\"}],\"name\":\"getPermission\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"payamount\",\"type\":\"uint256\"}],\"name\":\"totec\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"Recommender\",\"type\":\"address\"},{\"name\":\"userlevel\",\"type\":\"uint256\"},{\"name\":\"uid\",\"type\":\"uint256\"}],\"name\":\"recommendation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"payamount\",\"type\":\"uint256\"}],\"name\":\"togame\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"uaddress\",\"type\":\"address\"}],\"name\":\"geteddata\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"DefiPlan","CompilerVersion":"v0.5.2+commit.1df8f40c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://c2cf2a2a9121aa6a4403053b619abe3730f693e7e9d196e1e5417911fcb406ae"}]}