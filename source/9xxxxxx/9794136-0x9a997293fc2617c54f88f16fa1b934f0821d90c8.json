{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.4; \r\n\r\ncontract Oasisosc\r\n {\r\n    \r\n    event StorageEvent(address payable indexed from, bytes32 digestO, bytes32 digestQ); //storage event \r\n    event DestroyEvent(address payable indexed from); //destroy event\r\n     \r\n    struct Multihash\r\n    {\r\n      uint8 hashFunction;\r\n      uint8 size;\r\n      bytes32 digest;\r\n    } \r\n     \r\n    struct OSC\r\n    {\r\n     address payable owner_addr; //the owner address\r\n     Multihash ontology;\r\n     Multihash query;\r\n     address previous_v; //previous version of the ontology\r\n    }\r\n    \r\n    OSC private osc; // the struct\r\n    //initialize the contract\r\n    constructor(uint8 hashO, uint8 sizeO, bytes32 digestO,\r\n                uint8 hashQ, uint8 sizeQ, bytes32 digestQ, address _prev) public \r\n    {\r\n      osc= OSC(msg.sender, Multihash(hashO, sizeO, digestO), Multihash(hashQ, sizeQ, digestQ), _prev);\r\n      emit StorageEvent(msg.sender, digestO, digestQ);\r\n    }\r\n    \r\n    function getOntology() public view returns(uint8 hashO, uint8 sizeO, bytes32 digestO)\r\n    {\r\n      return (osc.ontology.hashFunction, osc.ontology.size, osc.ontology.digest);\r\n    }\r\n    \r\n    function getSPARQLQuery() public view returns(uint8 hashQ, uint8 sizeQ, bytes32 digestQ)\r\n    {\r\n      return (osc.query.hashFunction, osc.query.size, osc.query.digest);\r\n    }\r\n    \r\n    function getOwner() public view returns(address)\r\n    {\r\n      return osc.owner_addr;    \r\n    }\r\n    \r\n    function getPreviousVersion() public view returns(address)\r\n    {\r\n      return osc.previous_v;   \r\n    }\r\n   \r\n    modifier owner_allowed\r\n    {\r\n      require (msg.sender == osc.owner_addr, \"Only contract owner is allowed to call this function\");    \r\n      _;\r\n    }\r\n    \r\n    //contract destructor\r\n    function destroy() public owner_allowed\r\n    {\r\n      emit DestroyEvent(msg.sender);    \r\n      selfdestruct(msg.sender);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"hashO\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"sizeO\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"digestO\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"hashQ\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"sizeQ\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"digestQ\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_prev\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address payable\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"DestroyEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address payable\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"digestO\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"digestQ\",\"type\":\"bytes32\"}],\"name\":\"StorageEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOntology\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"hashO\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"sizeO\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"digestO\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPreviousVersion\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSPARQLQuery\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"hashQ\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"sizeQ\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"digestQ\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Oasisosc","CompilerVersion":"v0.6.4+commit.1dca32f3","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000142190d981ccbdf147179cab2595a5c7e8ee4c4945c0286558988185572e813a34000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001495e80f2907ed80042353b9f871a74030549a3d04cdf92efa630ba16e280de2b20000000000000000000000000000000000000000000000000000000000000000","Library":"","LicenseType":"GNU GPLv3","SwarmSource":"ipfs://8ed83741f6b8860602d05c9d2c18f60b16b2e5a909b2e9aef46c6f78dabff293"}]}