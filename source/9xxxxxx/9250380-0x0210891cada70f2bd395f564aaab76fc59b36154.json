{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.11;\r\npragma experimental ABIEncoderV2;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n}\r\ncontract ERC20BasicInterface {\r\n    function totalSupply() public view returns (uint256);\r\n\r\n    function balanceOf(address who) public view returns (uint256);\r\n\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    uint8 public decimals;\r\n}\r\ncontract GachaDrop is Ownable {\r\n    struct Drop {\r\n        string name;\r\n        uint periodToPlay;\r\n        address erc20Need;\r\n        uint256 requireErc20;\r\n        mapping(address => uint) timeTrackUser;\r\n        uint countCallTime;\r\n    }\r\n    mapping(string => Drop) public Drops;\r\n    string[] public DropNames;\r\n    event _random(address _from, uint _ticket, string _drop, uint _countCallTime);\r\n    event _changePeriodToPlay(string _drop, uint _period);\r\n\r\n    constructor() public {\r\n        Drops['tomorrowprice'].name = 'tomorrowprice';\r\n        Drops['tomorrowprice'].periodToPlay = 0;\r\n        Drops['tomorrowprice'].erc20Need = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\r\n        Drops['tomorrowprice'].requireErc20 = 0;\r\n        DropNames.push('tomorrowprice');\r\n    }\r\n    function getDropNames() public view returns(string[] memory) {\r\n        return DropNames;\r\n    }\r\n    function getTimeTrackUser(string memory _drop, address _player) public view returns(uint _periodToPlay, uint _timeTrackUser, uint _countCallTime) {\r\n        return (Drops[_drop].periodToPlay, Drops[_drop].timeTrackUser[_player], Drops[_drop].countCallTime);\r\n    }\r\n    function getAward(string memory _drop) public {\r\n        require(isValidToPlay(_drop));\r\n        Drops[_drop].timeTrackUser[msg.sender] = block.timestamp;\r\n        Drops[_drop].countCallTime = Drops[_drop].countCallTime + 1;\r\n        emit _random(msg.sender, block.timestamp, Drops[_drop].name, Drops[_drop].countCallTime);\r\n    }\r\n\r\n    function isValidToPlay(string memory _drop) public view returns (bool){\r\n        ERC20BasicInterface erc20 = ERC20BasicInterface(Drops[_drop].erc20Need);\r\n        return Drops[_drop].periodToPlay <= now - Drops[_drop].timeTrackUser[msg.sender]\r\n        && erc20.balanceOf(msg.sender) >= Drops[_drop].requireErc20;\r\n    }\r\n    function changePeriodToPlay(string memory _drop, uint _period, address _erc20Need, uint256 _requireErc20) onlyOwner public{\r\n\r\n        if(Drops[_drop].periodToPlay == 0) {\r\n            DropNames.push(_drop);\r\n            Drops[_drop].name = _drop;\r\n        }\r\n\r\n        Drops[_drop].periodToPlay = _period;\r\n        Drops[_drop].erc20Need = _erc20Need;\r\n        Drops[_drop].requireErc20 = _requireErc20;\r\n        emit _changePeriodToPlay(_drop, _period);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getDropNames\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"DropNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_drop\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"getTimeTrackUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodToPlay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeTrackUser\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_countCallTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_drop\",\"type\":\"string\"}],\"name\":\"isValidToPlay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"Drops\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"periodToPlay\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20Need\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requireErc20\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"countCallTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_drop\",\"type\":\"string\"}],\"name\":\"getAward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_drop\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20Need\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_requireErc20\",\"type\":\"uint256\"}],\"name\":\"changePeriodToPlay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ticket\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_drop\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_countCallTime\",\"type\":\"uint256\"}],\"name\":\"_random\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_drop\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"_changePeriodToPlay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"GachaDrop","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://48c9e2dfbdfab4a539c16144eebb339d4648796e5512b242b3b6b37a7cd52d69"}]}