{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\n\r\n/**\r\nproxy.huff\r\n\r\n#define macro MAIN = takes(0) returns(0) {\r\n  0xffffffffffffffffffffffffffffffffffffffff // (fallthrough address)\r\n  address caller eq do_destroy jumpi\r\n  calldatasize 0x00 0x00 calldatacopy\r\n  0x00 calldatasize 0x00 0x00 // [0, 0, size, 0, proxy]\r\n  swap4 // [proxy, 0, size, 0, 0]\r\n  gas delegatecall\r\n  returndatasize 0x00 0x00 returndatacopy\r\n  iszero do_revert jumpi\r\n  returndatasize 0x00 return\r\n  do_revert: returndatasize 0x00 revert\r\n  do_destroy: selfdestruct\r\n}\r\n<address>\r\n<string>\r\n*/\r\n\r\ncontract Proxy {\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    constructor(address to, string memory name) public {\r\n        emit Transfer(msg.sender, to, 1);\r\n        // 0x1b19d2c7f95fcf7e554a77e68d65daeef52fb2dd\r\n        // 73ffffffffffffffffffffffffffffffffffffffff3033146100405736600060003760003660006000935af43d600060003e1561003b573d6000f35b3d6000fd5bff\r\n        bytes memory proxyCode = hex\"731b19d2c7f95fcf7e554a77e68d65daeef52fb2dd3033146100405736600060003760003660006000935af43d600060003e1561003b573d6000f35b3d6000fd5bff\";\r\n        assembly {\r\n            let stringLen := mload(name)\r\n            let ptr := add(proxyCode, 0x20)\r\n            let addr := shl(0x60, to)\r\n            mstore(add(ptr, 66), addr)\r\n            mstore(add(ptr, 86), mload(add(name, 0x20)))\r\n            return(ptr, add(86, mload(name)))\r\n        }\r\n    }\r\n}\r\n\r\ncontract Notify {\r\n    address payable private _owner;\r\n\r\n    constructor() public {\r\n        _owner = msg.sender;\r\n    }\r\n    \r\n    function withdraw() public {\r\n        _owner.transfer(address(this).balance);\r\n    }\r\n    \r\n    function notify(address to, string memory message) public payable returns (address notifyToken) {\r\n        require(msg.value == 0.001 ether, \"Insufficient value sent.\");\r\n        notifyToken = address(new Proxy(to, message));\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"notify\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"notifyToken\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Notify","CompilerVersion":"v0.6.1+commit.e6f7d5a4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"ipfs://2e073ddc725f903c0aeee174b27481ac27c8cfd4acd04ff87f4e36c2e068650e"}]}