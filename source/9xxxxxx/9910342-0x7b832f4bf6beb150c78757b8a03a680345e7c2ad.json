{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.6;\r\n\r\n\r\n/**\r\n * Utility library of inline functions on addresses\r\n */\r\nlibrary Address {\r\n    /**\r\n     * Returns whether the target address is a contract\r\n     * @dev This function will return false if invoked during the constructor of a contract,\r\n     * as the code is not actually created until after the constructor finishes.\r\n     * @param account address of the account to check\r\n     * @return whether the target address is a contract\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        uint256 size;\r\n        // XXX Currently there is no better way to check if there is a contract in an address\r\n        // than to check the size of the code at that address.\r\n        // See https://ethereum.stackexchange.com/a/14016/36603\r\n        // for more details about how this works.\r\n        // TODO Check this again before the Serenity release, because all addresses will be\r\n        // contracts then.\r\n        // solium-disable-next-line security/no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n}\r\n\r\n\r\ninterface Aggregator {\r\n    function latestAnswer() external view returns(uint256);\r\n    function latestTimestamp() external view returns(uint256);\r\n}\r\n\r\n\r\ncontract OracleResolver {\r\n    using Address for address;\r\n\r\n    Aggregator aggr;\r\n\r\n    uint256 internal constant expiration = 2 hours;\r\n\r\n    constructor() public {\r\n        if (address(0xF79D6aFBb6dA890132F9D7c355e3015f15F3406F).isContract()) {\r\n            // mainnet\r\n            aggr = Aggregator(0xF79D6aFBb6dA890132F9D7c355e3015f15F3406F);\r\n        } else revert();\r\n    }\r\n\r\n    function ethUsdPrice() public view returns (uint256) {\r\n        require(now < aggr.latestTimestamp() + expiration, \"Oracle data are outdated\");\r\n        return aggr.latestAnswer() / 1000;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ethUsdPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"OracleResolver","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU LGPLv3","SwarmSource":"ipfs://996eaa2238c3b7d5769bfee74bc7a994b5802cbfbe897b9f594fd3ab9663272c"}]}