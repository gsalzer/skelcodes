{"status":"1","message":"OK","result":[{"SourceCode":"// Copyright (C) 2020, The Maker Foundation\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\npragma solidity 0.5.12;\r\n\r\n// https://github.com/makerdao/sai/blob/master/src/top.sol\r\ncontract SaiTopAbstract {\r\n    function vox() public view returns (address);\r\n    function tub() public view returns (address);\r\n    function tap() public view returns (address);\r\n    function sai() public view returns (address);\r\n    function sin() public view returns (address);\r\n    function skr() public view returns (address);\r\n    function gem() public view returns (address);\r\n    function fix() public view returns (uint256);\r\n    function fit() public view returns (uint256);\r\n    function caged() public view returns (uint256);\r\n    function cooldown() public view returns (uint256);\r\n    function era() public view returns (uint256);\r\n    function cage() public;\r\n    function flow() public;\r\n    function setCooldown(uint256) public;\r\n    function authority() public view returns (address);\r\n    function owner() public view returns (address);\r\n    function setOwner(address) public;\r\n    function setAuthority(address) public;\r\n}\r\n\r\ncontract SaiSlayer {\r\n    uint256 constant public T2020_05_12_1600UTC = 1589299200;\r\n    SaiTopAbstract constant public SAITOP = SaiTopAbstract(0x9b0ccf7C8994E19F39b2B4CF708e0A7DF65fA8a3);\r\n\r\n    function cage() public {\r\n        require(now >= T2020_05_12_1600UTC);\r\n        SAITOP.cage();\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"SAITOP\",\"outputs\":[{\"internalType\":\"contract SaiTopAbstract\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"T2020_05_12_1600UTC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"SaiSlayer","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://89c27755f1afe1a548c19059ef9b52be4e612679e90523d982be1f2d790ffb8b"}]}