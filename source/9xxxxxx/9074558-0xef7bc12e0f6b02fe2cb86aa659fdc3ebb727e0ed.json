{"status":"1","message":"OK","result":[{"SourceCode":"/* Orchid - WebRTC P2P VPN Market (on Ethereum)\r\n * Copyright (C) 2017-2019  The Orchid Authors\r\n*/\r\n\r\n/* GNU Affero General Public License, Version 3 {{{ */\r\n/*\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n**/\r\n/* }}} */\r\n\r\n\r\npragma solidity 0.5.13;\r\n\r\ncontract OrchidLocation {\r\n    struct Location {\r\n        uint256 set_;\r\n        bytes url_;\r\n        bytes tls_;\r\n        bytes gpg_;\r\n    }\r\n\r\n    mapping (address => Location) private locations_;\r\n\r\n    event Update(address indexed provider);\r\n\r\n    function poke() external {\r\n        Location storage location = locations_[msg.sender];\r\n        location.set_ = block.timestamp;\r\n        emit Update(msg.sender);\r\n    }\r\n\r\n    function move(bytes calldata url, bytes calldata tls, bytes calldata gpg) external {\r\n        Location storage location = locations_[msg.sender];\r\n        location.set_ = block.timestamp;\r\n        location.url_ = url;\r\n        location.tls_ = tls;\r\n        location.gpg_ = gpg;\r\n        emit Update(msg.sender);\r\n    }\r\n\r\n    function look(address target) external view returns (uint256, bytes memory, bytes memory, bytes memory) {\r\n        Location storage location = locations_[target];\r\n        return (location.set_, location.url_, location.tls_, location.gpg_);\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"Update\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"look\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"url\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"tls\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"gpg\",\"type\":\"bytes\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"poke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"OrchidLocation","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU GPLv3","SwarmSource":"bzzr://56fb09e0306eba8129c9a33f0f84f441384cf3f0174c60c17694bb41271ded2f"}]}