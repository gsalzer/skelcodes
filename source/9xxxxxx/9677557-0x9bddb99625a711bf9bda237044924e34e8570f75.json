{"status":"1","message":"OK","result":[{"SourceCode":"/// FlipperMom -- governance interface for the Flipper\r\n\r\n// Copyright (C) 2019 Maker Ecosystem Growth Holdings, INC.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published\r\n// by the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\npragma solidity ^0.5.12;\r\n\r\ncontract FlipLike {\r\n    function wards(address) public returns (uint);\r\n    function rely(address) external;\r\n    function deny(address) external;\r\n}\r\n\r\ncontract AuthorityLike {\r\n    function canCall(address src, address dst, bytes4 sig) public view returns (bool);\r\n}\r\n\r\ncontract FlipperMom {\r\n    address public owner;\r\n    modifier onlyOwner { require(msg.sender == owner, \"flipper-mom/only-owner\"); _;}\r\n\r\n    address public authority;\r\n    modifier auth {\r\n        require(isAuthorized(msg.sender, msg.sig), \"flipper-mom/not-authorized\");\r\n        _;\r\n    }\r\n    function isAuthorized(address src, bytes4 sig) internal view returns (bool) {\r\n        if (src == address(this)) {\r\n            return true;\r\n        } else if (src == owner) {\r\n            return true;\r\n        } else if (authority == address(0)) {\r\n            return false;\r\n        } else {\r\n            return AuthorityLike(authority).canCall(src, address(this), sig);\r\n        }\r\n    }\r\n\r\n    // only this contract can be denied/relied\r\n    address public cat;\r\n\r\n    constructor(address cat_) public {\r\n        owner = msg.sender;\r\n        cat = cat_;\r\n    }\r\n\r\n    event SetOwner(address oldOwner, address newOwner);\r\n    function setOwner(address owner_) external onlyOwner {\r\n        emit SetOwner(owner, owner_);\r\n        owner = owner_;\r\n    }\r\n\r\n    event SetAuthority(address oldAuthority, address newAuthority);\r\n    function setAuthority(address authority_) external onlyOwner {\r\n        emit SetAuthority(authority, authority_);\r\n        authority = authority_;\r\n    }\r\n\r\n    event Rely(address flip, address usr);\r\n    function rely(address flip) external auth {\r\n        emit Rely(flip, cat);\r\n        FlipLike(flip).rely(cat);\r\n    }\r\n\r\n    event Deny(address flip, address cat);\r\n    function deny(address flip) external auth {\r\n        emit Deny(flip, cat);\r\n        FlipLike(flip).deny(cat);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cat_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"flip\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"cat\",\"type\":\"address\"}],\"name\":\"Deny\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"flip\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Rely\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAuthority\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"SetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"SetOwner\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cat\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"flip\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"flip\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"FlipperMom","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000078f2c2af65126834c51822f56be0d7469d7a523e","Library":"","LicenseType":"None","SwarmSource":"bzzr://eafc661086a5866fd24efa2f11e5fced2d32dd478589a99eb7addfcc9b0685e7"}]}