{"status":"1","message":"OK","result":[{"SourceCode":"/// MkrAuthority -- custom authority for MKR token access control\r\n\r\n// Copyright (C) 2019 Maker Ecosystem Growth Holdings, INC.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published\r\n// by the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\npragma solidity ^0.5.12;\r\n\r\ncontract MkrAuthority {\r\n  address public root;\r\n  modifier sudo { require(msg.sender == root); _; }\r\n  event LogSetRoot(address indexed newRoot);\r\n  function setRoot(address usr) public sudo {\r\n    root = usr;\r\n    emit LogSetRoot(usr);\r\n  }\r\n\r\n  mapping (address => uint) public wards;\r\n  event LogRely(address indexed usr);\r\n  function rely(address usr) public sudo { wards[usr] = 1; emit LogRely(usr); }\r\n  event LogDeny(address indexed usr);\r\n  function deny(address usr) public sudo { wards[usr] = 0; emit LogDeny(usr); }\r\n\r\n  constructor() public {\r\n    root = msg.sender;\r\n  }\r\n\r\n  // bytes4(keccak256(abi.encodePacked('burn(uint256)')))\r\n  bytes4 constant burn = bytes4(0x42966c68);\r\n  // bytes4(keccak256(abi.encodePacked('burn(address,uint256)')))\r\n  bytes4 constant burnFrom = bytes4(0x9dc29fac);\r\n  // bytes4(keccak256(abi.encodePacked('mint(address,uint256)')))\r\n  bytes4 constant mint = bytes4(0x40c10f19);\r\n\r\n  function canCall(address src, address, bytes4 sig)\r\n      public view returns (bool)\r\n  {\r\n    if (sig == burn || sig == burnFrom || src == root) {\r\n      return true;\r\n    } else if (sig == mint) {\r\n      return (wards[src] == 1);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"LogDeny\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"LogRely\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoot\",\"type\":\"address\"}],\"name\":\"LogSetRoot\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"root\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"setRoot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"MkrAuthority","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU GPLv3","SwarmSource":"bzzr://61124948b0428630348ffa52dd3034f60a18071d8d0e96d44fbe674c8e8625a1"}]}