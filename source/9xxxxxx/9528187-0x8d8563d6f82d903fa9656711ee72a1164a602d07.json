{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * Copyright 2017-2020, bZeroX, LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0.\r\n */\r\n\r\npragma solidity 0.5.8;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\ncontract TokenLike {\r\n    string public name;\r\n    uint8 public decimals;\r\n    string public symbol;\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address _who) public view returns (uint256);\r\n    function allowance(address _owner, address _spender) public view returns (uint256);\r\n}\r\n\r\ncontract iTokenLike is TokenLike {\r\n    function loanTokenAddress() public view returns (address);\r\n    function tokenPrice() public view returns (uint256);\r\n    function totalAssetSupply() public view returns (uint256);\r\n    function totalAssetBorrow() public view returns (uint256);\r\n    function supplyInterestRate() public view returns (uint256);\r\n    function avgBorrowInterestRate() public view returns (uint256);\r\n    function nextBorrowInterestRateWithOption(\r\n        uint256 borrowAmount,\r\n        bool useFixedInterestModel)\r\n        public\r\n        view\r\n        returns (uint256);\r\n}\r\n\r\ncontract OracleLike {\r\n    function getTradeData(\r\n        address sourceTokenAddress,\r\n        address destTokenAddress,\r\n        uint256 sourceTokenAmount)\r\n        public\r\n        view\r\n        returns (\r\n            uint256 sourceToDestRate,\r\n            uint256 sourceToDestPrecision,\r\n            uint256 destTokenAmount\r\n        );\r\n}\r\n\r\ncontract DAppHelper {\r\n\r\n    address public constant vaultContract = 0x8B3d70d628Ebd30D4A2ea82DB95bA2e906c71633;\r\n\r\n    function assetRates(\r\n        address oracleAddress,\r\n        address usdTokenAddress,\r\n        address[] memory tokens,\r\n        uint256[] memory amounts)\r\n        public\r\n        view\r\n        returns (\r\n            uint256[] memory rates\r\n        )\r\n    {\r\n        OracleLike oracle = OracleLike(oracleAddress);\r\n        rates = new uint256[](tokens.length);\r\n\r\n        for (uint256 i=0; i < tokens.length; i++) {\r\n            (rates[i],,) = oracle.getTradeData(\r\n                tokens[i],\r\n                usdTokenAddress,\r\n                amounts[i]\r\n            );\r\n        }\r\n    }\r\n\r\n    function reserveDetails(\r\n        address[] memory tokenAddresses)\r\n        public\r\n        view\r\n        returns (\r\n            uint256[] memory totalAssetSupply,\r\n            uint256[] memory totalAssetBorrow,\r\n            uint256[] memory supplyInterestRate,\r\n            uint256[] memory borrowInterestRate,\r\n            uint256[] memory torqueBorrowInterestRate,\r\n            uint256[] memory vaultBalance\r\n        )\r\n    {\r\n        totalAssetSupply = new uint256[](tokenAddresses.length);\r\n        totalAssetBorrow = new uint256[](tokenAddresses.length);\r\n        supplyInterestRate = new uint256[](tokenAddresses.length);\r\n        borrowInterestRate = new uint256[](tokenAddresses.length);\r\n        torqueBorrowInterestRate = new uint256[](tokenAddresses.length);\r\n        vaultBalance = new uint256[](tokenAddresses.length);\r\n\r\n        for (uint256 i=0; i < tokenAddresses.length; i++) {\r\n            iTokenLike token = iTokenLike(tokenAddresses[i]);\r\n            totalAssetSupply[i] = token.totalAssetSupply();\r\n            totalAssetBorrow[i] = token.totalAssetBorrow();\r\n            supplyInterestRate[i] = token.supplyInterestRate();\r\n            borrowInterestRate[i] = token.avgBorrowInterestRate();\r\n            torqueBorrowInterestRate[i] = token.nextBorrowInterestRateWithOption(0,true);\r\n            vaultBalance[i] = TokenLike(token.loanTokenAddress()).balanceOf(vaultContract);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"vaultContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenAddresses\",\"type\":\"address[]\"}],\"name\":\"reserveDetails\",\"outputs\":[{\"name\":\"totalAssetSupply\",\"type\":\"uint256[]\"},{\"name\":\"totalAssetBorrow\",\"type\":\"uint256[]\"},{\"name\":\"supplyInterestRate\",\"type\":\"uint256[]\"},{\"name\":\"borrowInterestRate\",\"type\":\"uint256[]\"},{\"name\":\"torqueBorrowInterestRate\",\"type\":\"uint256[]\"},{\"name\":\"vaultBalance\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"oracleAddress\",\"type\":\"address\"},{\"name\":\"usdTokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"address[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"assetRates\",\"outputs\":[{\"name\":\"rates\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"DAppHelper","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://8c1695571858090ed6fd080fc4b9bea79106833d497764126df55a1bc957dd29"}]}