{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * Copyright 2017-2020, bZeroX, LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0.\r\n */\r\n\r\npragma solidity 0.5.16;\r\n\r\n\r\ncontract ArbitraryCaller {\r\n    function sendCall(\r\n        address msgSender,\r\n        address target,\r\n        bytes calldata callData)\r\n        external\r\n        payable\r\n    {\r\n        (bool success,) = target.call.value(msg.value)(callData);\r\n        uint256 size;\r\n        uint256 ptr;\r\n        assembly {\r\n            size := returndatasize()\r\n            ptr := mload(0x40)\r\n            returndatacopy(ptr, 0, size)\r\n            if eq(success, 0) { revert(ptr, size) }\r\n        }\r\n\r\n        uint256 ethBalance = address(this).balance;\r\n        if (ethBalance != 0) {\r\n            (success,) = msgSender.call.value(ethBalance)(\"\");\r\n        }\r\n        require(success, \"eth refund failed\");\r\n\r\n        assembly {\r\n            return(ptr, size)\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"sendCall\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"ArbitraryCaller","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://4eb61d22ecfcc572c7d75e90b0ee0842b0b338d792b87881a799051be554e275"}]}