{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n//-------------------------safe_math-----------------------------------\r\n\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n\r\ncontract DistributeTokens {\r\n    using SafeMath for uint;\r\n    \r\n    address public owner; \r\n    address[] investors; \r\n    uint[] public usage_count;\r\n    uint  interest;\r\n    uint public count;//目前人數\r\n    uint public total_count;//參與過的人數\r\n    uint public son = 2;\r\n    uint public mon = 3;\r\n    \r\n   \r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    mapping(address=>uint)my_interest;\r\n    mapping(address=>user_info) public userinfo; \r\n    mapping(address=>address)verification;\r\n    mapping(address=>uint) public Dividing_times;\r\n    mapping(uint=>address) number;\r\n    mapping(address=>uint)public Amount_invested;\r\n    mapping(address=>address)quite_user;\r\n    \r\n    event invest_act(address user, uint value, uint interest);\r\n    event end( address user);\r\n    \r\n    struct user_info{\r\n        uint amount;\r\n        uint user_profit; //投資者的利息\r\n        uint block_number;\r\n        uint timestamp;\r\n    }\r\n\r\n    //------------------投資------------------------------\r\n    function invest() public payable {\r\n        require(msg.sender != verification[msg.sender],\"這組帳號使用過\");\r\n        require(msg.value != 0 ,\"不能為零\");\r\n        verification[msg.sender]=msg.sender;\r\n        \r\n        Amount_invested[msg.sender]=msg.value;\r\n        my_interest[msg.sender]=interest;\r\n        \r\n        investors.push(msg.sender);  //push 就是把東西加進去陣列裡面\r\n        usage_count.push(1);\r\n        fee();//手續費\r\n        \r\n        userinfo[msg.sender]=user_info(msg.value,interest,block.number,block.timestamp);\r\n        count=count.add(1);\r\n        total_count=total_count.add(1);\r\n        \r\n        emit invest_act(msg.sender,msg.value,interest);\r\n        \r\n    }\r\n    \r\n    \r\n    function fee()private{\r\n        owner.transfer(msg.value.div(50));\r\n    }\r\n    \r\n    function querybalance()public view returns (uint){\r\n        return address(this).balance;\r\n    }\r\n    \r\n    //------------------分配獎金------------------------------\r\n    \r\n    function distribute(uint a, uint b) public {\r\n        require(msg.sender == owner); \r\n        owner.transfer(address(this).balance.div(200));\r\n        \r\n        for(uint i = a; i < b; i++) {\r\n            investors[i].transfer(Amount_invested[investors[i]].div(my_interest[investors[i]]));\r\n            number[i]=investors[i];\r\n            Dividing_times[number[i]] = usage_count[i]++;\r\n        } \r\n    }\r\n    \r\n    // my_interest[investors[i]]\r\n    //------------------封裝利息資訊------------------------------\r\n    \r\n    function getInterest() public view returns(uint){\r\n        if(interest <= 2190 && interest >= 0)\r\n         return interest;\r\n        else\r\n         return 0;\r\n    }    \r\n    \r\n    \r\n    function Set_Interest(uint key)public{\r\n        require(msg.sender==owner);\r\n        if(key<=2190){\r\n            interest = key;\r\n        }else{\r\n            interest = interest;\r\n        }\r\n    }\r\n    \r\n    //------------------移置安全區域------------------------------\r\n    \r\n    function Safe_trans() public {\r\n        require(owner==msg.sender);\r\n        owner.transfer(querybalance());\r\n    } \r\n    \r\n    //------------------退出並出金------------------------------\r\n    \r\n    function Set_quota(uint _son, uint _mon)public {\r\n        require(owner == msg.sender);\r\n        if(_son<_mon && _son<=100 && _mon<=100){\r\n            son=_son;\r\n            mon=_mon;\r\n        }else{\r\n            son=son;\r\n            mon=mon;\r\n        }\r\n    }\r\n    \r\n    \r\n    function quit()public {\r\n        \r\n        if(quite_user[msg.sender]==msg.sender){\r\n            revert(\"你已經退出了\");\r\n        }else{\r\n        msg.sender.transfer(Amount_invested[msg.sender].mul(son).div(mon));\r\n        quite_user[msg.sender]=msg.sender;\r\n        my_interest[msg.sender]=1000000;\r\n        Amount_invested[msg.sender]=1;\r\n        userinfo[msg.sender]=user_info(0,0,block.number,block.timestamp);\r\n        count=count.sub(1);\r\n        }\r\n        \r\n        emit end(msg.sender);\r\n    }\r\n    \r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"son\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Safe_trans\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_son\",\"type\":\"uint256\"},{\"name\":\"_mon\",\"type\":\"uint256\"}],\"name\":\"Set_quota\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"total_count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"distribute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usage_count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"userinfo\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"user_profit\",\"type\":\"uint256\"},{\"name\":\"block_number\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Dividing_times\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"querybalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"uint256\"}],\"name\":\"Set_Interest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInterest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mon\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"invest\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Amount_invested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"quit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"interest\",\"type\":\"uint256\"}],\"name\":\"invest_act\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"}],\"name\":\"end\",\"type\":\"event\"}]","ContractName":"DistributeTokens","CompilerVersion":"v0.4.24+commit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://c1f0ecc839d051603892d912487aeb88abf2e9ddb184eedf3c248f92bdd58095"}]}