{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.22 <0.7.0;\r\n\r\n/**\r\n * 带有安全检查的数学操作\r\n */\r\ncontract SafeMath {\r\n  function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n \r\n  function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b > 0);\r\n    uint256 c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n \r\n  function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n \r\n  function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n *  ERC20_LuxuriesCoin\r\n */\r\ncontract ERC20_LuxuriesCoin is SafeMath {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals = 6;  \r\n    uint256 public totalSupply;\r\n    address public owner;\r\n    \r\n    /* This creates an array with all balances */\r\n    mapping (address => uint256) public balanceOf;       \r\n    mapping (address => uint256) public freezeOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;    \r\n \r\n    /* This generates a public event on the blockchain that will notify clients */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n \r\n    /* This notifies clients about the amount burnt */\r\n    event Burn(address indexed from, uint256 value);\r\n \r\n    /* This notifies clients about the amount frozen */\r\n    event Freeze(address indexed from, uint256 value);\r\n \r\n    /* This notifies clients about the amount unfrozen */\r\n    event Unfreeze(address indexed from, uint256 value);\r\n    \r\n    /**\r\n     * 初始化构造\r\n     */\r\n    constructor(uint256 initialSupply,\r\n                string memory tokenName,\r\n                string memory tokenSymbol,\r\n                address holder) public {\r\n                            name = tokenName;                                            // 代币名称\r\n                            symbol = tokenSymbol;                                       // 代币符号\r\n                            owner = holder;                                            // 所有人地址\r\n                            totalSupply = initialSupply * 10 ** uint256(decimals);    // 供应的份额，份额跟最小的代币单位有关，份额 = 币数 * 10 ** decimals。\r\n                            balanceOf[holder] = totalSupply;                         // 创建者拥有所有的代币\r\n    }\r\n    \r\n    \r\n    /**\r\n     * 代币交易转移\r\n     * 从创建交易者账号发送`_value`个代币到 `_to`账号\r\n     *\r\n     * @param _to 接收者地址\r\n     * @param _value 转移数额\r\n     */\r\n    function transfer(address _to, uint256 _value) public{\r\n        require(_to != address(0x0));                                                              // Prevent transfer to 0x0 address. Use burn() instead\r\n        require(_value > 0); \r\n        require(balanceOf[msg.sender] >= _value);                                       // Check if the sender has enough\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);                            // Check for overflows\r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);      // Subtract from the sender\r\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);                   // Add the same to the recipient\r\n        emit Transfer(msg.sender, _to, _value);                                     // Notify anyone listening that this transfer took place\r\n    }\r\n \r\n    /**\r\n     * 账号之间代币交易转移\r\n     * \r\n     * @param _from 发送者地址\r\n     * @param _to 接收者地址\r\n     * @param _value 转移数额\r\n     */\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_to != address(0x0));                                                                            // Prevent transfer to 0x0 address. Use burn() instead\r\n        require(_value > 0); \r\n        require(balanceOf[_from] >= _value);                                                          // Check if the sender has enough\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);                                          // Check for overflows\r\n        require(_value <= allowance[_from][msg.sender]);     // Check allowance\r\n        balanceOf[_from] = SafeMath.safeSub(balanceOf[_from], _value);                             // Subtract from the sender\r\n        balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to], _value);                                // Add the same to the recipient\r\n        allowance[_from][msg.sender] = SafeMath.safeSub(allowance[_from][msg.sender], _value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n \r\n    /**\r\n     * 销毁账户中指定个代币\r\n     */\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);                                             // Check if the sender has enough\r\n        require(_value > 0); \r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);            // Subtract from the sender\r\n        totalSupply = SafeMath.safeSub(totalSupply,_value);                                // Updates totalSupply\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n \r\n    /** \r\n     * 设置某个地址（合约）可以交易者名义花费的代币数。\r\n     * 允许发送者`_spender` 花费不多于 `_value` 个代币\r\n     *\r\n     * @param _spender 授权使用的地址\r\n     * @param _value 最多能花多少钱\r\n     */\r\n    function approve(address _spender, uint256 _value) public\r\n        returns (bool success) {\r\n        require(_value > 0); \r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n \r\n     /** \r\n     * 冻结\r\n     */\r\n    function freeze(uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);                                          // Check if the sender has enough\r\n        require(_value > 0); \r\n        balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender], _value);         // Subtract from the sender\r\n        freezeOf[msg.sender] = SafeMath.safeAdd(freezeOf[msg.sender], _value);          // Updates totalSupply\r\n        emit Freeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n \r\n     /** \r\n     * 解除冻结 \r\n     */\r\n    function unfreeze(uint256 _value) public returns (bool success) {\r\n        require(freezeOf[msg.sender] >= _value);                                                     // Check if the sender has enough\r\n        require(_value > 0); \r\n        freezeOf[msg.sender] = SafeMath.safeSub(freezeOf[msg.sender], _value);                      // Subtract from the sender\r\n        balanceOf[msg.sender] = SafeMath.safeAdd(balanceOf[msg.sender], _value);\r\n        emit Unfreeze(msg.sender, _value);\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * 销毁合约\r\n     */\r\n    function kill() public {\r\n       if (owner == msg.sender) { // 检查是否为创建者\r\n          selfdestruct(address(uint160(owner))); // 销毁合约\r\n       }\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"unfreeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ERC20_LuxuriesCoin","CompilerVersion":"v0.6.1+commit.e6f7d5a4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000003e95ba800000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000ffc03b21d0517cf446805afb2d34d919e0170727000000000000000000000000000000000000000000000000000000000000000c4c75787572696573436f696e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034c43480000000000000000000000000000000000000000000000000000000000","Library":"","LicenseType":"None","SwarmSource":"ipfs://02ec727a12901575231a6ce5874d9cc74c6ee2b30399d62a994282b5bbecdca9"}]}