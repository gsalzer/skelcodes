{"status":"1","message":"OK","result":[{"SourceCode":"//orfeed oracle registry 0.1\r\n\r\ninterface PriceOracleInterface{\r\n      function getPriceFromOracle (string fromParam, string toParam, string  side, uint256 amount) returns (uint256);\r\n }\r\n  \r\n    // ERC20 Token Smart Contract\r\n    contract oracleRegistry {\r\n        \r\n      mapping (string=>address) oracleMapping;\r\n      mapping (string=>address) oracleOwners;\r\n      address owner; \r\n      modifier onlyOwner() {\r\n            if (msg.sender != owner) {\r\n                throw;\r\n            }\r\n             _;\r\n        }\r\n        \r\n      constructor() public payable {\r\n            owner = msg.sender; \r\n           \r\n        }\r\n        \r\n     \r\n         \r\n     function getPriceFromOracle(string selectedOracle, string fromParam, string toParam, string  side, uint256 amount) public constant returns (uint256){  \r\n          \r\n          address oracleAddress = getOracleAddress(selectedOracle);\r\n          require(oracleAddress > 0, \"The requested provider is not registered in this oracle registry\");\r\n          PriceOracleInterface p = PriceOracleInterface(oracleAddress);\r\n          return p.getPriceFromOracle(fromParam, toParam, side, amount);\r\n          \r\n      }\r\n      \r\n      function changeOwner(address newOwner) onlyOwner returns(bool){\r\n          owner = newOwner;\r\n          return true;\r\n      }\r\n      \r\n     function withdrawBalance() onlyOwner returns(bool) {\r\n        uint amount = this.balance;\r\n        msg.sender.transfer(amount);\r\n        return true;\r\n\r\n    }\r\n    \r\n    \r\n    function registerOracle(string name, address requestedAddress ) payable returns (bool){\r\n        require(msg.value >= 50000000000000000, \"Please send .05 ETH to register an oracle. This is to prevent registration spam\");\r\n        if(oracleMapping[name] != 0x0 && oracleOwners[name] != msg.sender){\r\n            //you cant update this because you did not register this name\r\n            throw;\r\n            \r\n        }\r\n        \r\n       oracleMapping[name] = requestedAddress;\r\n       oracleOwners[name] = msg.sender;\r\n       return true;\r\n        \r\n    }\r\n    \r\n    function getOracleAddress(string nameReference) constant returns (address){\r\n        \r\n        return oracleMapping[nameReference];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"selectedOracle\",\"type\":\"string\"},{\"name\":\"fromParam\",\"type\":\"string\"},{\"name\":\"toParam\",\"type\":\"string\"},{\"name\":\"side\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getPriceFromOracle\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"requestedAddress\",\"type\":\"address\"}],\"name\":\"registerOracle\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nameReference\",\"type\":\"string\"}],\"name\":\"getOracleAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}]","ContractName":"oracleRegistry","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://0160ea0f553c353ff1b2ee6ffb58ce9741226eb654874785264a3587927e367f"}]}