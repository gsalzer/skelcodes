{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.26;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface ERC20 {\r\n    function totalSupply() public view returns (uint supply);\r\n    function balanceOf(address _owner) public view returns (uint balance);\r\n    function transfer(address _to, uint _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success);\r\n    function approve(address _spender, uint _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public view returns (uint remaining);\r\n    function decimals() public view returns(uint digits);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\n\r\ncontract OffChainOrFeedPriceFeed{\r\n    \r\n    address owner; \r\n    mapping(string => uint256) quotes;\r\n    mapping(string => uint256) quoteTimes;\r\n    \r\n    constructor() public {\r\n         owner = msg.sender;\r\n     }\r\n     \r\n    modifier onlyOwner() {\r\n        if (msg.sender != owner) {\r\n            throw;\r\n        }\r\n        _;\r\n    }\r\n    \r\n    \r\n    function changeOwner(address newOwner) onlyOwner external returns(bool) {\r\n        owner = newOwner;\r\n        return true;\r\n    }\r\n    \r\n    \r\n    function getLastPrice (string symbol) constant returns (uint256){\r\n        return quotes[symbol];\r\n    }\r\n     function getTimeUpdated (string symbol) constant returns (uint256){\r\n        return quoteTimes[symbol];\r\n    }\r\n    function getOwner() constant returns(address){\r\n        return owner;\r\n    }\r\n    \r\n    function updatePrices(string[] symbols, uint256[] prices) public onlyOwner  returns (bool){\r\n        uint256 arrayLength = symbols.length;\r\n        \r\n        for (uint i=0; i<arrayLength; i++) {\r\n            string memory thisQuote = symbols[i];\r\n            quotes[thisQuote] = prices[i];\r\n            quoteTimes[thisQuote] = block.timestamp;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    \r\n    //if donations were sent to operator to keep feed going\r\n    function withdrawETHAndTokens(address tokenAddress) onlyOwner{\r\n\r\n        msg.sender.send(address(this).balance);\r\n        ERC20 daiToken = ERC20(tokenAddress);\r\n        uint256 currentTokenBalance = daiToken.balanceOf(this);\r\n        daiToken.transfer(msg.sender, currentTokenBalance);\r\n\r\n    }\r\n    \r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getLastPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"withdrawETHAndTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getTimeUpdated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"symbols\",\"type\":\"string[]\"},{\"name\":\"prices\",\"type\":\"uint256[]\"}],\"name\":\"updatePrices\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"OffChainOrFeedPriceFeed","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://e97ab82c7f44b2f9e123b0654bf60f20faa26f4c074eca62c5479e0f02a4d673"}]}