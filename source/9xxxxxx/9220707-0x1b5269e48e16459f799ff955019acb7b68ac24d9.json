{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.11;\r\n\r\ncontract GenesisInterface{\r\n    function insertCharacter(string memory _name, uint _hp, uint _mp, uint _str, uint _intelli, uint _san, uint _luck, uint _charm, uint _mt, string memory _optionalAttrs) public returns (uint);\r\n}\r\n\r\ncontract RevivalCoin {\r\n    mapping(address => uint) balances;\r\n    mapping(address => uint) coinBalances;\r\n    mapping(uint => address) genesisIndexToAddress;\r\n    uint[][9] levelAndIndexToGenesisIndex;\r\n    uint[9] levelAndIndexToGenesisIndexLength;\r\n    address payable public owner;\r\n    uint public price;\r\n    bool public isPriceAssigned;\r\n    bool public isGenesisSet;\r\n    GenesisInterface genesis;\r\n\r\n    //[owner] set the price for one coin to [newPrice].\r\n    event SetPrice(uint newPrice);\r\n\r\n    //[buyer] bought [amount] coin(s) at the price of [price].\r\n    event Buy(address buyer, uint price, uint amount);\r\n\r\n    //[user] had less than [amount] coin(s), and thus failed to pay for [aim],\r\n    //where [aim] is a number indicating revival, buying items, buying skins...\r\n    event CoinBalanceInsufficient(address user, uint amount, uint aim);\r\n\r\n    //[user] successfully paied [amount] coin(s) for [aim].\r\n    event SuccessfullyUse(address user, uint amount, uint aim);\r\n\r\n    //[receiver] got [amount] coin(s) for beating another player in the player's game.\r\n    event Reward(address receiver, uint amount);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        isPriceAssigned = false;\r\n        isGenesisSet = false;\r\n    }\r\n\r\n    function setPrice(uint newPrice) public {\r\n        require(msg.sender == owner, \"You are not the owner.\");\r\n        price = newPrice;\r\n        isPriceAssigned = true;\r\n        emit SetPrice(newPrice);\r\n    }\r\n\r\n    function setGenesis(address genesisAddress) public{\r\n        require(msg.sender == owner, \"You are not the owner.\");\r\n        genesis = GenesisInterface(genesisAddress);\r\n        isGenesisSet = true;\r\n    }\r\n\r\n    function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n        return balances[tokenOwner];\r\n    }\r\n\r\n    function coinBalanceOf(address tokenOwner) public view returns (uint balance) {\r\n        return coinBalances[tokenOwner];\r\n    }\r\n\r\n    function buy(uint amount) public payable {\r\n        require(isPriceAssigned == true, \"Price Not Set\");\r\n        uint cost = amount * price;\r\n        assert(cost/price == amount);\r\n        require(cost <= msg.value, \"ETH Not Sufficient\");\r\n        coinBalances[msg.sender] += amount;\r\n        balances[msg.sender] += msg.value - cost;\r\n        emit Buy(msg.sender, price, amount);\r\n    }\r\n\r\n    function withdraw() public {\r\n        uint amount = balances[msg.sender];\r\n        balances[msg.sender] = 0;\r\n        msg.sender.transfer(amount);\r\n    }\r\n\r\n    function useRevivalCoins(uint amount, uint aim) public {\r\n        require(amount <= coinBalances[msg.sender], \"Revivial Coin Not Sufficient\");\r\n        coinBalances[msg.sender] -= amount;\r\n        emit SuccessfullyUse(msg.sender, amount, aim);\r\n    }\r\n\r\n    function reward(uint index, uint amount) public {\r\n        require(msg.sender == owner, \"You are not the owner.\");\r\n        address receiver = genesisIndexToAddress[index];\r\n        require(receiver!=address(0), \"No Corresponding Adress\");\r\n        coinBalances[receiver] += amount;\r\n        emit Reward(receiver, amount);\r\n    }\r\n\r\n    function insertCharacter(\r\n        uint level,\r\n        string memory _name,\r\n        uint _hp,\r\n        uint _mp,\r\n        uint _str,\r\n        uint _intelli,\r\n        uint _san,\r\n        uint _luck,\r\n        uint _charm,\r\n        uint _mt,\r\n        string memory _optionalAttrs\r\n        ) public returns (uint){\r\n            require(isGenesisSet == true, \"Genesis Not Set\");\r\n            uint index = genesis.insertCharacter(_name,_hp,_mp,_str,_intelli,_san,_luck,_charm,_mt,_optionalAttrs);\r\n            index = index - 1;\r\n            genesisIndexToAddress[index] = msg.sender;\r\n            levelAndIndexToGenesisIndex[level].push(index);\r\n            levelAndIndexToGenesisIndexLength[level]++;\r\n            return index;\r\n    }\r\n    \r\n    function getLength(uint level) public view returns (uint _length) {\r\n        return levelAndIndexToGenesisIndexLength[level];\r\n    }\r\n\r\n    function getGenesisIndex(uint level, uint index) public view returns (uint _index) {\r\n        return levelAndIndexToGenesisIndex[level][index];\r\n    }\r\n\r\n    function ownerWithdraw() public {\r\n        require(msg.sender == owner, \"You are not the owner.\");\r\n        owner.transfer(address(this).balance);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"getLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getGenesisIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownerWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_hp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_str\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_intelli\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_san\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_luck\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_charm\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_optionalAttrs\",\"type\":\"string\"}],\"name\":\"insertCharacter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPriceAssigned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"reward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isGenesisSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aim\",\"type\":\"uint256\"}],\"name\":\"useRevivalCoins\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"coinBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"genesisAddress\",\"type\":\"address\"}],\"name\":\"setGenesis\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"SetPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"aim\",\"type\":\"uint256\"}],\"name\":\"CoinBalanceInsufficient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"aim\",\"type\":\"uint256\"}],\"name\":\"SuccessfullyUse\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Reward\",\"type\":\"event\"}]","ContractName":"RevivalCoin","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://0e03c47377271ef435b3931137586b8dbba7be1c8b1c666acd9b142440361292"}]}