{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.17;\r\n\r\ncontract MightyPepe2 {\r\n\r\n    address payable public owner;\r\n    uint256[6] public RankPrize;\r\n    \r\n    // Player struct\r\n    struct PlayerStruct {\r\n        address addr;\r\n        uint256 rank;  // 0: no rank, 1: Pepe, 2: Advanced Pepe, 3: Mighty Pepe, 4: PepeSmart, 5: PepeT3h1337\r\n    }\r\n    // Player mapping\r\n    mapping(address => PlayerStruct) public players;\r\n\r\n    // Modifiers\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call\");\r\n        _;\r\n    }\r\n\r\n    modifier isMember() {\r\n        require(players[msg.sender].addr != address(0), \"Only member can play\");\r\n        _;\r\n    }\r\n\r\n    // Constructor\r\n    constructor() public payable {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // Join game\r\n    function joinGame() external payable {\r\n        require(msg.sender == tx.origin, \"No contracts allowed\");\r\n        require(players[msg.sender].addr == address(0), \"Player already exists\");\r\n        players[msg.sender] = PlayerStruct(msg.sender, 0);\r\n    }\r\n\r\n    // Be special\r\n    function IamPepe(bytes memory _code) public payable isMember {\r\n        players[msg.sender].rank = 0;\r\n        uint256 leet_seed = 0x1337;\r\n        address payable deployAddress = DeployCreate2Contract(0, _code, leet_seed);  // Yes, the seed is fixed\r\n\r\n        // Are you special?\r\n        bool isSpecial = ((uint256(deployAddress) % leet_seed) == (uint256(msg.sender) % leet_seed));\r\n\r\n        if (isSpecial) {\r\n            players[msg.sender].rank = 1;  // You are Pepe\r\n            tinyPepe tpepe = tinyPepe(deployAddress);\r\n            uint256 question = uint256(blockhash(block.number - 1));\r\n            uint256 tpepeAnswer = tpepe.ask(question);\r\n            // Be more special\r\n            if (tpepeAnswer == (question % leet_seed)) {\r\n                players[msg.sender].rank = 2;  // You are Advanced Pepe\r\n                uint256 bytecodesize;\r\n                assembly {\r\n                  bytecodesize := extcodesize(deployAddress)\r\n                }\r\n                // Be the most special\r\n                if (bytecodesize < 15) {\r\n                    players[msg.sender].rank = 5;  // You are PepeT3h1337\r\n                } else if (bytecodesize < 25) {\r\n                    players[msg.sender].rank = 4;  // You are PepeSmart\r\n                } else if (bytecodesize < 75) {\r\n                    players[msg.sender].rank = 3;  // You are Mighty Pepe\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Withdraw\r\n    function withdraw() external payable isMember {\r\n        require(players[msg.sender].rank > 2, \"Pepe sad :'-(\");\r\n        uint256 winAmount;\r\n        for (uint256 r = 3; r <= players[msg.sender].rank; r++) {\r\n            winAmount += RankPrize[r];\r\n            RankPrize[r] = 0;\r\n        }\r\n        require(winAmount > 0, \"Prize(s) already claimed\");\r\n        msg.sender.transfer(winAmount);\r\n    }\r\n\r\n    // Internal functions\r\n    function DeployCreate2Contract(uint256 _value, bytes memory _bytecode, uint256 _seed) internal returns (address payable) {\r\n        address payable contractAddress;\r\n        assembly {\r\n            contractAddress := create2(_value, add(_bytecode, 0x20), mload(_bytecode), _seed)\r\n        }\r\n        return contractAddress;\r\n    }\r\n\r\n    // Other functions\r\n    function depositPrize(uint256 rank) external payable {\r\n        require((rank > 2) && (rank < RankPrize.length), \"Rank min/max: 3 / 5\");\r\n        RankPrize[rank] += msg.value;\r\n    }\r\n    \r\n    function kill() external payable onlyOwner {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    // Fallback\r\n    function() external payable { }\r\n}\r\n\r\ncontract tinyPepe {\r\n\r\n    function ask(uint256 question) public pure returns (uint256) {\r\n        uint256 answer = question % 0x1337;\r\n        return answer;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"IamPepe\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"RankPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"}],\"name\":\"depositPrize\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"joinGame\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"MightyPepe2","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://21b72ce74faa79bd3c723e5a5d155dc94781e4b3160a7e969af8ed5f7184e66c"}]}