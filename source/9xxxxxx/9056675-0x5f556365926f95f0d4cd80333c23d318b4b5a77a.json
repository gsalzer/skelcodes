{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n* d888888P                                           dP              a88888b.                   dP\r\n*    88                                              88             d8'   `88                   88\r\n*    88    .d8888b. 88d888b. 88d888b. .d8888b. .d888b88 .d8888b.    88        .d8888b. .d8888b. 88d888b.\r\n*    88    88'  `88 88'  `88 88'  `88 88'  `88 88'  `88 88'  `88    88        88'  `88 Y8ooooo. 88'  `88\r\n*    88    88.  .88 88       88    88 88.  .88 88.  .88 88.  .88 dP Y8.   .88 88.  .88       88 88    88\r\n*    dP    `88888P' dP       dP    dP `88888P8 `88888P8 `88888P' 88  Y88888P' `88888P8 `88888P' dP    dP\r\n* ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\r\n*/\r\n\r\n// Please check https://twitter.com/TornadoCash for instructions for the contest\r\n\r\npragma solidity 0.5.13;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract RelayersContest {\r\n    mapping(string => bool) public participants;\r\n    string[] public participantsArray;\r\n    uint256 endRegistration;\r\n    uint256 endContest;\r\n    address public owner;\r\n    string[] public winners;\r\n    bool isWinnersSet = false;\r\n    \r\n    event Register(string participant);\r\n    event Winners(string[] winners);\r\n    \r\n    constructor(uint256 _endRegistration, uint256 _endContest) public {\r\n        require(_endRegistration > now);\r\n        require(_endContest >= _endRegistration + 3 days);\r\n        endRegistration = _endRegistration;\r\n        owner = msg.sender;\r\n        endContest = _endContest;\r\n    }\r\n    \r\n    function register(string memory _ensDomain) public {\r\n        require(now <= endRegistration, 'registration is over');\r\n        require(!participants[_ensDomain], 'already registred');\r\n        participants[_ensDomain] = true;\r\n        participantsArray.push(_ensDomain);\r\n        emit Register(_ensDomain);\r\n    }\r\n    \r\n    function setWinners(string[] memory _winners) public {\r\n        require(msg.sender == owner);\r\n        require(now > endContest, 'too early');\r\n        require(!isWinnersSet);\r\n        for(uint i = 0; i < _winners.length; i++) {\r\n            require(participants[_winners[i]], 'not participant');\r\n            winners.push(_winners[i]);\r\n        }\r\n        isWinnersSet = true;\r\n        emit Winners(_winners);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endRegistration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endContest\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"participant\",\"type\":\"string\"}],\"name\":\"Register\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"winners\",\"type\":\"string[]\"}],\"name\":\"Winners\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"participants\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participantsArray\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ensDomain\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_winners\",\"type\":\"string[]\"}],\"name\":\"setWinners\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"RelayersContest","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000005def2650000000000000000000000000000000000000000000000000000000005df31ad0","Library":"","LicenseType":"None","SwarmSource":"bzzr://74a95dd354d899ab6b8dd19ea1b9ebfb757e2b624fd2acec3a6f1fbc3924eb77"}]}