{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5;\r\n\r\n/*\r\n    Bignumber quiz\r\n    Calculate the factorial of 16 and win all the balance\r\n    You have only one attempt to provide correct answer\r\n*/\r\n\r\ncontract FactorialQuiz {\r\n    mapping (address => bool) allowedToTry;\r\n    address payable owner = msg.sender;\r\n    \r\n    function guess(uint value) public payable {\r\n        uint fact = 1;\r\n        for (uint i = 1; i <= 16; i++) {\r\n            fact = fact * i;\r\n        }\r\n        \r\n        if ((msg.value == 0.1 ether) && (fact == value) && allowedToTry[msg.sender]) {\r\n            msg.sender.transfer(address(this).balance);\r\n        } else {\r\n            allowedToTry[msg.sender] = false;\r\n        }\r\n    }\r\n    \r\n    function kill() public {\r\n        require(msg.sender == owner);\r\n        selfdestruct(owner);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"guess\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"FactorialQuiz","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://d52ec67085d4c7dbd59babb5efa6c795cbebccfeba3f7e988cddb2319a4984a9"}]}