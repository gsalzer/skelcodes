{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.4;\r\n\r\n\r\ncontract Coronavirus {\r\n    string public symbol = \"COVID-19\";\r\n    string public name = \"Coronavirus\";\r\n    uint8 public decimals = 18;\r\n    uint public recovered;\r\n    uint public infected;\r\n    uint private pandemic;\r\n    uint private intervalOfRecovery = 1209600;\r\n    \r\n    mapping(address=>uint) infectedCells;\r\n    mapping(address=>uint) public dateOfInfection;\r\n    mapping(address=>bool) public hasImmunity;\r\n    \r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    \r\n    constructor() public {\r\n        uint infectiousAgents = 1000000000000000000;\r\n        \r\n        pandemic = infectiousAgents;\r\n        infectedCells[msg.sender] = infectiousAgents;\r\n        dateOfInfection[msg.sender] = block.timestamp;\r\n        infected++;\r\n        \r\n        emit Transfer(address(0x00), msg.sender, infectiousAgents);\r\n    }\r\n    \r\n    modifier isInfected(address account) {\r\n        require(infectedCells[account] > 0, \"You are not infected\");\r\n        _;\r\n    }\r\n    \r\n    function transfer(\r\n        address recipient,\r\n        uint infectiousAgents\r\n    )\r\n        external\r\n        isInfected(msg.sender)\r\n        returns (bool)\r\n    {\r\n        require(infectedCells[msg.sender] >= infectiousAgents, \"You are not enough infected\");\r\n        require(!hasImmunity[recipient], \"Recipient has immunity\");\r\n        \r\n        if (infectedCells[msg.sender] + infectiousAgents < infectiousAgents) {\r\n            infectedCells[msg.sender] = (2**256) - 1;\r\n        } else {\r\n            infectedCells[msg.sender] += infectiousAgents;\r\n        }\r\n        \r\n        if (infectedCells[recipient] == 0) {\r\n            if (infected + 1 > infected) {\r\n                infected++;\r\n            }\r\n        }\r\n        \r\n        if (infectedCells[recipient] + infectiousAgents < infectiousAgents) {\r\n            infectedCells[recipient] = (2**256) - 1;\r\n        } else {\r\n            infectedCells[recipient] += infectiousAgents;\r\n        }\r\n        \r\n        uint totalInfectedCells = infectiousAgents * 2;\r\n        if (pandemic + totalInfectedCells < totalInfectedCells) {\r\n            pandemic = (2**256) - 1;\r\n        } else {\r\n            pandemic += totalInfectedCells;\r\n        }\r\n        \r\n        dateOfInfection[recipient] = block.timestamp;\r\n        \r\n        emit Transfer(address(0x00), msg.sender, infectiousAgents);\r\n        emit Transfer(msg.sender, recipient, infectiousAgents);\r\n        \r\n        return true;\r\n    }\r\n    \r\n    function recover() external isInfected(msg.sender) {\r\n        require(\r\n            dateOfInfection[msg.sender] + intervalOfRecovery < block.timestamp,\r\n            \"You still cannot be cured, stay isolated!\"\r\n        );\r\n        \r\n        uint myInfectedCells = infectedCells[msg.sender];\r\n        infectedCells[msg.sender] = 0;\r\n        hasImmunity[msg.sender] = true;\r\n        \r\n        infected--;\r\n        \r\n        if (recovered + 1 > recovered) {\r\n            recovered++;\r\n        }\r\n        \r\n        emit Transfer(msg.sender, address(0x00), myInfectedCells);\r\n    }\r\n    \r\n    function totalSupply() external view returns (uint) {\r\n        return pandemic;\r\n    }\r\n    \r\n    function balanceOf(address account) external view returns (uint) {\r\n        return infectedCells[account];\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dateOfInfection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasImmunity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"infected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recovered\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"infectiousAgents\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Coronavirus","CompilerVersion":"v0.6.4+commit.1dca32f3","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"ipfs://3715d994127c175c01502df91c1ecedc6e202be4e8ed03bf9a6a324ffb612367"}]}