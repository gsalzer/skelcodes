{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * Copyright 2017-2020, bZeroX, LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0.\r\n */\r\n\r\npragma solidity 0.5.16;\r\n\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\ncontract ZeroXConnector is Ownable {\r\n\r\n    address internal target_;\r\n\r\n\r\n    constructor(\r\n        address _newTarget)\r\n        public\r\n    {\r\n        _setTarget(_newTarget);\r\n    }\r\n\r\n    function()\r\n        external\r\n        payable\r\n    {\r\n        if (gasleft() <= 2300) {\r\n            return;\r\n        }\r\n\r\n        address target = target_;\r\n        bytes memory data = msg.data;\r\n        assembly {\r\n            let result := delegatecall(gas, target, add(data, 0x20), mload(data), 0, 0)\r\n            let size := returndatasize\r\n            let ptr := mload(0x40)\r\n            returndatacopy(ptr, 0, size)\r\n            switch result\r\n            case 0 { revert(ptr, size) }\r\n            default { return(ptr, size) }\r\n        }\r\n    }\r\n\r\n    function setTarget(\r\n        address _newTarget)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _setTarget(_newTarget);\r\n    }\r\n\r\n    function _setTarget(\r\n        address _newTarget)\r\n        internal\r\n    {\r\n        require(_isContract(_newTarget), \"target not a contract\");\r\n        target_ = _newTarget;\r\n    }\r\n\r\n    function _isContract(\r\n        address addr)\r\n        internal\r\n        view\r\n        returns (bool)\r\n    {\r\n        uint256 size;\r\n        assembly { size := extcodesize(addr) }\r\n        return size > 0;\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTarget\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTarget\",\"type\":\"address\"}],\"name\":\"setTarget\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"ZeroXConnector","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"1000000","ConstructorArguments":"000000000000000000000000dfb5b2747c157fc1cc3263d44841d8ea976945f3","Library":"","LicenseType":"Apache-2.0","SwarmSource":"bzzr://3a077ff87c394eab4bc5d426f6079fb3ffca114b6920f8316a62a3eb02d6d192"}]}