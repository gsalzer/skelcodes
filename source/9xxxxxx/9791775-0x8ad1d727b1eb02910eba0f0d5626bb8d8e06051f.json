{"status":"1","message":"OK","result":[{"SourceCode":"// Copyright (C) 2020 Zerion Inc. <https://zerion.io>\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program. If not, see <https://www.gnu.org/licenses/>.\r\n\r\npragma solidity 0.6.4;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\n/**\r\n * @title Protocol adapter interface.\r\n * @dev adapterType(), tokenType(), and getBalance() functions MUST be implemented.\r\n * @author Igor Sobolev <sobolev@zerion.io>\r\n */\r\ninterface ProtocolAdapter {\r\n\r\n    /**\r\n     * @dev MUST return \"Asset\" or \"Debt\".\r\n     */\r\n    function adapterType() external pure returns (string memory);\r\n\r\n    /**\r\n     * @dev MUST return token type (default is \"ERC20\").\r\n     */\r\n    function tokenType() external pure returns (string memory);\r\n\r\n    /**\r\n     * @dev MUST return amount of the given token locked on the protocol by the given account.\r\n     */\r\n    function getBalance(address token, address account) external view returns (uint256);\r\n}\r\n\r\n\r\n/**\r\n * @dev BasePool contract interface.\r\n * Only the functions required for PoolTogetherAdapter contract are added.\r\n * The BasePool contract is available here\r\n * github.com/pooltogether/pooltogether-contracts/blob/master/contracts/BasePool.sol.\r\n */\r\ninterface BasePool {\r\n    function totalBalanceOf(address) external view returns (uint256);\r\n}\r\n\r\n\r\n/**\r\n * @title Adapter for PoolTogether protocol.\r\n * @dev Implementation of ProtocolAdapter interface.\r\n * @author Igor Sobolev <sobolev@zerion.io>\r\n */\r\ncontract PoolTogetherAdapter is ProtocolAdapter {\r\n\r\n    /**\r\n     * @return Type of the adapter.\r\n     * @dev Implementation of ProtocolAdapter interface function.\r\n     */\r\n    function adapterType() external pure override returns (string memory) {\r\n        return \"Asset\";\r\n    }\r\n\r\n    /**\r\n     * @return Type of the token used in adapter.\r\n     * @dev Implementation of ProtocolAdapter interface function.\r\n     */\r\n    function tokenType() external pure override returns (string memory) {\r\n        return \"PoolTogether pool\";\r\n    }\r\n\r\n    /**\r\n     * @return Amount of tokens locked in the pool by the given account.\r\n     * @param token Address of the pool!\r\n     * @dev Implementation of ProtocolAdapter interface function.\r\n     */\r\n    function getBalance(address token, address account) external view override returns (uint256) {\r\n        return BasePool(token).totalBalanceOf(account);\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"name\":\"adapterType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"PoolTogetherAdapter","CompilerVersion":"v0.6.4+commit.1dca32f3","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU LGPLv3","SwarmSource":"ipfs://35ed6ce7cd44bd3029aabf02cfb720045fca004783c81c5745965b7d96746edf"}]}