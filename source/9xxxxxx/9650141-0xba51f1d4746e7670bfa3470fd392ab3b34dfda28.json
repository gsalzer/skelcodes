{"status":"1","message":"OK","result":[{"SourceCode":"{\"Fabric.sol\":{\"content\":\"pragma solidity 0.5.11;\\n\\nimport \\\"./Withdrawer.sol\\\";\\n\\n\\ncontract Fabric {\\n    function createContract(uint256 salt) public {\\n        bytes memory code = type(Withdrawer).creationCode;\\n        assembly {\\n            let codeSize := mload(code)\\n            let newAddr := create2(0, add(code, 32), codeSize, salt)\\n        }\\n    }\\n}\\n\"},\"Withdrawer.sol\":{\"content\":\"pragma solidity 0.5.11;\\n\\ncontract Withdrawer {\\n\\n    address payable constant internal HOT_WALLET = 0xe3229A304165341EdFa7dd078030b13F87cA65E4; // for tests: 0xF33FEBF3069984bf26FfA9bf92097174DeD1DeeE\\n\\n    event ETHWithdrawal(uint256);\\n\\n    constructor() public {\\n        uint256 balanceETH = address(this).balance;\\n        emit ETHWithdrawal(balanceETH);\\n        selfdestruct(HOT_WALLET);\\n    }\\n}\\n\"}}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"createContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Fabric","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://df5e7a17f51ddb5a7764463e8f0c1865cb102b7495029643072199a355246118"}]}