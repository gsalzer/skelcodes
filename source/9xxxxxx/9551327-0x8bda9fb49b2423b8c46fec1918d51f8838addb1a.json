{"status":"1","message":"OK","result":[{"SourceCode":"{\"ROT.sol\":{\"content\":\"pragma solidity ^0.4.26;\\r\\n\\r\\nimport \\\"./Types.sol\\\";\\r\\n\\r\\ncontract RoT is Destructable\\r\\n{\\r\\n\\taddress public ESOPAddress;\\r\\n\\r\\n\\tevent LogESOPAndCompanySet(address ESOPAddress, address companyAddress);\\r\\n\\r\\n\\tfunction setESOP(address ESOP, address company) public onlyOwner\\r\\n\\t{\\r\\n\\t\\tESOPAddress = ESOP;\\r\\n\\t\\ttransferOwnership(company);\\r\\n\\t\\temit LogESOPAndCompanySet(ESOP, company);\\r\\n\\t}\\r\\n\\r\\n\\tfunction killOnUnsupportedFork() public onlyOwner\\r\\n\\t{\\r\\n\\t\\tdelete ESOPAddress;\\r\\n\\t\\tselfdestroy();\\r\\n\\t}\\r\\n}\\r\\n\\r\\n\"},\"Types.sol\":{\"content\":\"pragma solidity ^0.4.26;\\r\\n\\r\\nlibrary SafeMath\\r\\n{\\r\\n\\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256)\\r\\n\\t{\\r\\n\\t\\tuint256 c = a * b;\\r\\n\\t\\tassert(a == 0 || c / a == b);\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction div(uint256 a, uint256 b) internal pure returns (uint256)\\r\\n\\t{\\r\\n\\t\\tuint256 c = a / b;\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction divRound(uint256 a, uint256 b) internal pure returns (uint256)\\r\\n\\t{\\r\\n\\t\\tuint256 c = (a + (b/2)) / b;\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256)\\r\\n\\t{\\r\\n\\t\\tassert(b \\u003c= a);\\r\\n\\t\\treturn a - b;\\r\\n\\t}\\r\\n\\r\\n\\tfunction add(uint256 a, uint256 b) internal pure returns (uint256)\\r\\n\\t{\\r\\n\\t\\tuint256 c = a + b;\\r\\n\\t\\tassert(c \\u003e= a);\\r\\n\\t\\treturn c;\\r\\n\\t}\\r\\n\\r\\n\\tfunction absDiff(uint256 a, uint256 b) internal pure returns (uint256)\\r\\n\\t{\\r\\n\\t\\treturn a \\u003e b ? a - b : a - b;\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Ownable\\r\\n{\\r\\n\\taddress _owner;\\r\\n\\tevent LogOwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n\\tconstructor () internal\\r\\n\\t{\\r\\n\\t\\t_owner = msg.sender;\\r\\n\\t\\temit LogOwnershipTransferred(address(0), _owner);\\r\\n\\t}\\r\\n\\r\\n\\tfunction owner() public view returns (address)\\r\\n\\t{\\r\\n\\t\\treturn _owner;\\r\\n\\t}\\r\\n\\r\\n\\tmodifier onlyOwner() {\\r\\n\\t\\trequire(msg.sender == _owner);\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferOwnership(address newOwner) public onlyOwner\\r\\n\\t{\\r\\n\\t\\trequire(newOwner != address(0));\\r\\n\\t\\t_owner = newOwner;\\r\\n\\t\\temit LogOwnershipTransferred(_owner, newOwner);\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract Destructable is Ownable\\r\\n{\\r\\n\\tfunction selfdestroy() public onlyOwner\\r\\n\\t{\\r\\n\\t\\tselfdestruct(_owner);\\r\\n\\t}\\r\\n}\\r\\n\\r\\ncontract TimeSource\\r\\n{\\r\\n\\tuint32 private mockNow;\\r\\n\\r\\n\\tfunction currentTime() public constant returns (uint32)\\r\\n\\t{\\r\\n\\t\\trequire(block.timestamp \\u003c= 0xFFFFFFFF);\\r\\n\\t\\tif(mockNow \\u003e 0)\\r\\n\\t\\t\\treturn mockNow;\\r\\n\\t\\treturn uint32(block.timestamp);\\r\\n\\t}\\r\\n\\r\\n\\tfunction mockTime(uint32 t) public\\r\\n\\t{\\r\\n\\t\\trequire(block.number \\u003c= 3316029);\\r\\n\\t\\tmockNow = t;\\r\\n\\t}\\r\\n}\\r\\n\"}}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"ESOP\",\"type\":\"address\"},{\"name\":\"company\",\"type\":\"address\"}],\"name\":\"setESOP\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"selfdestroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ESOPAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"killOnUnsupportedFork\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ESOPAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"companyAddress\",\"type\":\"address\"}],\"name\":\"LogESOPAndCompanySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"LogOwnershipTransferred\",\"type\":\"event\"}]","ContractName":"RoT","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://c01a7a14e60785fc71b96fa152951acd3bf294172805792409404d4e8ebf4213"}]}