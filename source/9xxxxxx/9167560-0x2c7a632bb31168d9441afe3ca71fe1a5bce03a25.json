{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\nKDGToken: ERC223 compatible with ERC20\r\n@author: BLV\r\n */ \r\npragma solidity ^ 0.5.0;\r\n\r\n// ERC223 interface\r\ninterface ContractReceiver {\r\n\tfunction tokenFallback(address from, uint value, bytes calldata data)external;\r\n}\r\n\r\ninterface TokenRecipient {\r\n\tfunction receiveApproval(address from, uint256 value, bytes calldata data)external;\r\n}\r\n\r\ninterface ERC223TokenBasic {\r\n\tfunction transfer(address receiver, uint256 amount, bytes calldata data) external;\r\n\tfunction balanceOf(address owner) external view returns(uint);\r\n\tfunction transferFrom(address from, address to, uint256 value) external returns(bool success);\r\n}\r\n\r\ncontract KDGToken is ERC223TokenBasic{\r\n    address constant private ADDRESS_ZERO = 0x0000000000000000000000000000000000000000;\r\n\r\n\tstring public name;\r\n\tstring public symbol;\r\n\tuint8 public decimals;\r\n\tuint256 public totalSupply;\r\n\taddress public issuer;\r\n\r\n\tmapping(address => uint256)balances_;\r\n\tmapping(address => mapping(address => uint256))allowances_;\r\n\r\n\t// ERC20\r\n\tevent Approval(address indexed owner,\r\n\t\taddress indexed spender,\r\n\t\tuint value);\r\n\r\n\tevent Transfer(address indexed from,\r\n\t\taddress indexed to,\r\n\t\tuint256 value);\r\n\r\n\t// Ethereum Token\r\n\tevent Burn(address indexed from, uint256 value);\r\n\r\n\tconstructor(uint256 initialSupply,\r\n\t\tstring memory tokenName,\r\n\t\tuint8 decimalUnits,\r\n\t\tstring memory tokenSymbol)public{\r\n\t\ttotalSupply = initialSupply * 10 ** uint256(decimalUnits);\r\n\t\tbalances_[msg.sender] = totalSupply;\r\n\t\tname = tokenName;\r\n\t\tdecimals = decimalUnits;\r\n\t\tsymbol = tokenSymbol;\r\n\t\tissuer = msg.sender;\r\n\t\temit Transfer(address(0), msg.sender, totalSupply);\r\n\t}\r\n\r\n\tfunction () external payable {\r\n\t\trevert();\r\n\t} // does not accept ETH\r\n\r\n\t// ERC20\r\n\tfunction balanceOf(address owner)public view returns(uint) {\r\n\t\treturn balances_[owner];\r\n\t}\r\n\r\n\t// ERC20\r\n\t//\r\n\t// WARNING! When changing the approval amount, first set it back to zero\r\n\t// AND wait until the transaction is mined. Only afterwards set the new\r\n\t// amount. Otherwise you may be prone to a race condition attack.\r\n\t// See: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n\tfunction approve(address spender, uint256 value)public\r\n\treturns(bool success) {\r\n\t\tallowances_[msg.sender][spender] = value;\r\n\t\temit Approval(msg.sender, spender, value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// recommended fix for known attack on any ERC20\r\n\tfunction safeApprove(address _spender,\r\n\t\tuint256 _currentValue,\r\n\t\tuint256 _value)public\r\n\treturns(bool success) {\r\n\t\t// If current allowance for _spender is equal to _currentValue, then\r\n\t\t// overwrite it with _value and return true, otherwise return false.\r\n\t\tif (allowances_[msg.sender][_spender] == _currentValue)\r\n\t\t\treturn approve(_spender, _value);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// ERC20\r\n\tfunction allowance(address owner, address spender)public view\r\n\treturns(uint256 remaining) {\r\n\t\treturn allowances_[owner][spender];\r\n\t}\r\n\r\n\tfunction transfer(address to, uint256 value)public returns(bool success) {\r\n\t\tbytes memory empty; // null\r\n\t\t_transfer(msg.sender, to, value, empty);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// ERC20\r\n\tfunction transferFrom(address from, address to, uint256 value)public returns(bool success) {\r\n\t\trequire(value <= allowances_[from][msg.sender]);\r\n\r\n\t\tallowances_[from][msg.sender] -= value;\r\n\t\tbytes memory empty;\r\n\t\t_transfer(from, to, value, empty);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Ethereum Token\r\n\tfunction approveAndCall(address spender,\r\n\t\tuint256 value,\r\n\t\tbytes memory context)public\r\n\treturns(bool success) {\r\n\t\tif (approve(spender, value)) {\r\n\t\t\tTokenRecipient recip = TokenRecipient(spender);\r\n\t\t\trecip.receiveApproval(msg.sender, value, context);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Ethereum Token\r\n\tfunction burn(uint256 value)public\r\n\treturns(bool success) {\r\n\t\trequire(balances_[msg.sender] >= value);\r\n\t\tbalances_[msg.sender] -= value;\r\n\t\ttotalSupply -= value;\r\n\r\n\t\temit Burn(msg.sender, value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Ethereum Token\r\n\tfunction burnFrom(address from, uint256 value)public\r\n\treturns(bool success) {\r\n\t\trequire(balances_[from] >= value);\r\n\t\trequire(value <= allowances_[from][msg.sender]);\r\n\r\n\t\tbalances_[from] -= value;\r\n\t\tallowances_[from][msg.sender] -= value;\r\n\t\ttotalSupply -= value;\r\n\r\n\t\temit Burn(from, value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// ERC223 Transfer to a contract or externally-owned account\r\n\tfunction transfer(address to, uint value, bytes calldata data)external{\r\n\t\tif (isContract(to)) {\r\n\t\t\ttransferToContract(to, value, data);\r\n\t\t} else {\r\n\t\t\t_transfer(msg.sender, to, value, data);\r\n\t\t}\r\n\t}\r\n\r\n\t// ERC223 Transfer and invoke specified callback\r\n    // Truffle 5.0 doesn't compile\r\n\tfunction transfer(address to,\r\n                        uint value,\r\n                        bytes memory data,\r\n                        string memory custom_fallback)public returns(bool success) {\r\n        _transfer(msg.sender, to, value, data);\r\n\r\n\t\tif (isContract(to)) {\r\n\t\t\tContractReceiver rx = ContractReceiver(to);\r\n\t\t\t(bool ret, bytes memory dret) = address(rx).call(abi.encodeWithSignature(custom_fallback, msg.sender, value, data));\r\n\r\n            require(ret == true, \"Cant invoke callback\");\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// ERC223 Transfer to contract and invoke tokenFallback() method\r\n\tfunction transferToContract(address to, uint value, bytes memory data)private\r\n\treturns(bool success) {\r\n\t\t_transfer(msg.sender, to, value, data);\r\n\r\n\t\tContractReceiver cr = ContractReceiver(to);\r\n\t\tcr.tokenFallback(msg.sender, value, data);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// ERC223 fetch contract size (must be nonzero to be a contract)\r\n\tfunction isContract(address _addr)private view returns(bool) {\r\n\t\tuint length;\r\n\t\tassembly {\r\n\t\t\tlength := extcodesize(_addr)\r\n\t\t}\r\n\t\treturn (length > 0);\r\n\t}\r\n\r\n\tfunction _transfer(address from,\r\n\t\taddress to,\r\n\t\tuint value,\r\n\t\tbytes memory data)internal{\r\n\t\trequire(to != ADDRESS_ZERO);\r\n\t\trequire(balances_[from] >= value);\r\n\t\trequire(balances_[to] + value > balances_[to]); // catch overflow\r\n\r\n\t\tbalances_[from] -= value;\r\n\t\tbalances_[to] += value;\r\n\r\n\t\t//Transfer( from, to, value, data ); ERC223-compat version\r\n\t\tbytes memory empty;\r\n\t\tempty = data;\r\n\t\temit Transfer(from, to, value); // ERC20-compat version\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"issuer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"custom_fallback\",\"type\":\"string\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_currentValue\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"safeApprove\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"KDGToken","CompilerVersion":"v0.5.0+commit.1d4f565a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000005f5e1000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000094b444720546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034b44470000000000000000000000000000000000000000000000000000000000","Library":"","LicenseType":"None","SwarmSource":"bzzr://a57b983dd6716a97bd35728129bdea551479eed6d6968b993d0bc707a62a1bba"}]}