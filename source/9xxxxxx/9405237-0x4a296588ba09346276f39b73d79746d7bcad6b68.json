{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.4.25 <0.6.0;\n\n\ninterface BalanceRecordable {\n    \n    function balanceRecordsCount(address account)\n    external\n    view\n    returns (uint256);\n\n    \n    function recordBalance(address account, uint256 index)\n    external\n    view\n    returns (uint256);\n\n    \n    function recordBlockNumber(address account, uint256 index)\n    external\n    view\n    returns (uint256);\n\n    \n    function recordIndexByBlockNumber(address account, uint256 blockNumber)\n    external\n    view\n    returns (int256);\n}\n\nlibrary SafeMathUintLib {\n    function mul(uint256 a, uint256 b)\n    internal\n    pure\n    returns (uint256)\n    {\n        uint256 c = a * b;\n        assert(a == 0 || c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b)\n    internal\n    pure\n    returns (uint256)\n    {\n        \n        uint256 c = a / b;\n        \n        return c;\n    }\n\n    function sub(uint256 a, uint256 b)\n    internal\n    pure\n    returns (uint256)\n    {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b)\n    internal\n    pure\n    returns (uint256)\n    {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n\n    \n    \n    \n    function clamp(uint256 a, uint256 min, uint256 max)\n    public\n    pure\n    returns (uint256)\n    {\n        return (a > max) ? max : ((a < min) ? min : a);\n    }\n\n    function clampMin(uint256 a, uint256 min)\n    public\n    pure\n    returns (uint256)\n    {\n        return (a < min) ? min : a;\n    }\n\n    function clampMax(uint256 a, uint256 max)\n    public\n    pure\n    returns (uint256)\n    {\n        return (a > max) ? max : a;\n    }\n}\n\ncontract BalanceAucCalculator {\n    using SafeMathUintLib for uint256;\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    function calculate(BalanceRecordable balanceRecordable, address wallet, uint256 startBlock, uint256 endBlock)\n    public\n    view\n    returns (uint256)\n    {\n        \n        if (endBlock < startBlock)\n            return 0;\n\n        \n        uint256 recordsCount = balanceRecordable.balanceRecordsCount(wallet);\n\n        \n        if (0 == recordsCount)\n            return 0;\n\n        \n        int256 _endIndex = balanceRecordable.recordIndexByBlockNumber(wallet, endBlock);\n\n        \n        if (0 > _endIndex)\n            return 0;\n\n        \n        uint256 endIndex = uint256(_endIndex);\n\n        \n        \n        startBlock = startBlock.clampMin(balanceRecordable.recordBlockNumber(wallet, 0));\n\n        \n        uint256 startIndex = uint256(balanceRecordable.recordIndexByBlockNumber(wallet, startBlock));\n\n        \n        uint256 result = 0;\n\n        \n        if (startIndex < endIndex)\n            result = result.add(\n                balanceRecordable.recordBalance(wallet, startIndex).mul(\n                    balanceRecordable.recordBlockNumber(wallet, startIndex.add(1)).sub(startBlock)\n                )\n            );\n\n        \n        for (uint256 i = startIndex.add(1); i < endIndex; i = i.add(1))\n            result = result.add(\n                balanceRecordable.recordBalance(wallet, i).mul(\n                    balanceRecordable.recordBlockNumber(wallet, i.add(1)).sub(\n                        balanceRecordable.recordBlockNumber(wallet, i)\n                    )\n                )\n            );\n\n        \n        result = result.add(\n            balanceRecordable.recordBalance(wallet, endIndex).mul(\n                endBlock.sub(\n                    balanceRecordable.recordBlockNumber(wallet, endIndex).clampMin(startBlock)\n                ).add(1)\n            )\n        );\n\n        \n        return result;\n    }\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"internalType\":\"contract BalanceRecordable\",\"name\":\"balanceRecordable\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"}],\"name\":\"calculate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"BalanceAucCalculator","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"1","Runs":"0","ConstructorArguments":"","Library":"SafeMathUintLib:0ff948c236c8d4dfcd0168bf243314c8ff8ec967","LicenseType":"","SwarmSource":"bzzr://620e56dc1ade1e54c730187876c430e80ae0ad9b9ee0ae5dfb118f5655244cbd"}]}