{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n// Forward declarations for external dependencies\r\n\r\ninterface ENS {\r\n  function owner( bytes32 _node ) external view returns (address);\r\n  function setOwner( bytes32 _node, address _owner ) external;\r\n  function setSubnodeOwner( bytes32 _node, bytes32 _label, address _owner )\r\n    external;\r\n}\r\n\r\ninterface Resolver {\r\n  function setAddr( bytes32 _node, address _newAddr ) external;\r\n  function setPubkey( bytes32 _node, bytes32 _x, bytes32 _y ) external;\r\n}\r\n\r\ninterface ERC20 {\r\n  function balanceOf( address owner ) external view returns (uint);\r\n  function transfer( address _to, uint256 _value ) external returns (bool);\r\n}\r\n\r\n// A basic first-come-first-served (FCFS) registrar.\r\n\r\ncontract Registrar {\r\n\r\n  event LabelRegistered( string label, address indexed owner );\r\n  event TopicRegistered( string topic, address indexed owner );\r\n\r\n  ENS public theENS;\r\n  Resolver public defaultResolver;\r\n  bytes32 public myRootNode;\r\n  address payable public beneficiary;\r\n\r\n  uint public namefee = 500 szabo;\r\n  uint public namekeyfee = 1500 szabo;\r\n  uint public topicfee = 10 finney;\r\n\r\n  modifier isBeneficiary {\r\n    require( msg.sender == beneficiary );\r\n    _;\r\n  }\r\n\r\n  function toNode( string memory _label ) internal view returns (bytes32) {\r\n    bytes32 labelhash = keccak256( abi.encodePacked(_label) );\r\n    return keccak256( abi.encodePacked(myRootNode, labelhash) );\r\n  }\r\n\r\n  modifier canChange( string memory _label ) {\r\n    address currentOwner = theENS.owner( toNode(_label) );\r\n    require(    currentOwner == address(0x0)\r\n             || currentOwner == msg.sender );\r\n    _;\r\n  }\r\n\r\n  function baseReg( string memory _label, address _owner )\r\n  internal canChange(_label)\r\n  returns (bytes32) {\r\n    bytes32 labelhash = keccak256( abi.encodePacked(_label) );\r\n    theENS.setSubnodeOwner( myRootNode, labelhash, address(this) );\r\n    defaultResolver.setAddr( toNode(_label), _owner );\r\n    return labelhash;\r\n  }\r\n\r\n  function registerLabel( string calldata _label, address _owner ) payable\r\n  external {\r\n    require( msg.value >= namefee );\r\n\r\n    bytes32 labelhash = baseReg( _label, _owner );\r\n    theENS.setSubnodeOwner( myRootNode, labelhash, _owner );\r\n    emit LabelRegistered( _label, _owner );\r\n  }\r\n\r\n  function registerLabelAndKey( string calldata _label,\r\n                                bytes32 _x,\r\n                                bytes32 _y,\r\n                                address _owner ) payable external {\r\n    require( msg.value >= namekeyfee );\r\n\r\n    bytes32 labelhash = baseReg( _label, _owner );\r\n    defaultResolver.setPubkey( toNode(_label), _x, _y );\r\n    theENS.setSubnodeOwner( myRootNode, labelhash, _owner );\r\n    emit LabelRegistered( _label, _owner );\r\n  }\r\n\r\n  function registerTopic( string calldata _topic, address _owner )\r\n  payable external {\r\n    require( msg.value >= topicfee );\r\n\r\n    bytes32 labelhash = baseReg( _topic, _owner );\r\n    theENS.setSubnodeOwner( myRootNode, labelhash, _owner );\r\n    emit TopicRegistered( _topic, _owner );\r\n  }\r\n\r\n  constructor ( address _ens,\r\n                address _resolver,\r\n                bytes32 _node ) public {\r\n    theENS = ENS( _ens );\r\n    defaultResolver = Resolver( _resolver );\r\n    myRootNode = _node;\r\n    beneficiary = msg.sender;\r\n  }\r\n\r\n  function setNameFee( uint _newfee ) public isBeneficiary {\r\n    namefee = _newfee;\r\n  }\r\n\r\n  function setNameKeyFee( uint _newfee ) public isBeneficiary {\r\n    namekeyfee = _newfee;\r\n  }\r\n\r\n  function setTopicFee( uint _newfee ) public isBeneficiary {\r\n    topicfee = _newfee;\r\n  }\r\n\r\n  function changeBeneficiary( address payable _to ) external isBeneficiary {\r\n    beneficiary = _to;\r\n  }\r\n\r\n  function setResolver( address _newresolver ) external isBeneficiary {\r\n    defaultResolver = Resolver( _newresolver );\r\n  }\r\n\r\n  function changeDomainOwner( address payable _to ) external isBeneficiary {\r\n    theENS.setOwner( myRootNode, _to );\r\n  }\r\n\r\n  function () payable external {} // thanks!\r\n\r\n  function sweepEther() external {\r\n    beneficiary.transfer( address(this).balance );\r\n  }\r\n\r\n  function sweepToken( address _erc20 ) external {\r\n    ERC20 token = ERC20( _erc20 );\r\n    token.transfer( beneficiary, token.balanceOf(address(this)) );\r\n  }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newfee\",\"type\":\"uint256\"}],\"name\":\"setNameKeyFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"changeDomainOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_label\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_x\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_y\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"registerLabelAndKey\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"theENS\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_topic\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"registerTopic\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newresolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"namekeyfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"namefee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defaultResolver\",\"outputs\":[{\"internalType\":\"contract Resolver\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sweepEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newfee\",\"type\":\"uint256\"}],\"name\":\"setNameFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newfee\",\"type\":\"uint256\"}],\"name\":\"setTopicFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"topicfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_label\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"registerLabel\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"changeBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"myRootNode\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ens\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_node\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LabelRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"topic\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"TopicRegistered\",\"type\":\"event\"}]","ContractName":"Registrar","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000314159265dd8dbb310642f98f50c066173c1259b000000000000000000000000465021f80c7ce7560d14c5bb3f96946ec7d27870c40578c3ef0b4a0ecb769ccacb876251a3693cc47d8def2ea5e4cd3411795e77","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://413485e2ce7a732fe856704d8514264e4f8c16eb80a7b8d2e142900cec1ebb2c"}]}