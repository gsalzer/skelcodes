{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.0;\r\n\r\ninterface UniswapFactoryInterface {\r\n    function getExchange(address token) external view returns (address);\r\n}\r\n\r\ninterface UniswapExchangeInterface {\r\n    function ethToTokenTransferInput(\r\n        uint256 min_tokens, \r\n        uint256 deadline, \r\n        address recipient\r\n    ) external payable returns (uint256 amount) ;\r\n} \r\n\r\ncontract EthToDai {\r\n    \r\n    address owner;\r\n    address public recipient;\r\n    UniswapExchangeInterface exchange;\r\n\r\n    constructor(address _factory, address _outToken, address _recipient) public {\r\n        owner = msg.sender;\r\n        recipient = _recipient;\r\n        exchange = UniswapExchangeInterface(UniswapFactoryInterface(_factory).getExchange(_outToken));\r\n    }\r\n    \r\n    receive() external payable {\r\n        uint256 ethValue = msg.value;\r\n        require(ethValue > 0, \"insufficient eth value\");\r\n        exchange.ethToTokenTransferInput.value(ethValue)(1, block.timestamp, recipient);\r\n    }\r\n    \r\n    function withdraw() external {\r\n        require(msg.sender == owner, \"the sender is not the owner\");\r\n        msg.sender.transfer(address(this).balance);   \r\n    }\r\n    \r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_outToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"recipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"EthToDai","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000c0a47dfe034b400b47bdad5fecda2621de6c4d950000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000549b64bffc67d9334fd699889565102d624963a5","Library":"","LicenseType":"None","SwarmSource":"ipfs://c4773ad702e38e0498efacc035ebbbfb532ca8e2176db38e94ea2c4ba5b0fa37"}]}