{"status":"1","message":"OK","result":[{"SourceCode":"// File: contracts/Storage.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\ncontract Storage {\r\n    address owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    mapping(bytes32 => string) data;\r\n\r\n    function set(bytes32 key, string memory value) public {\r\n        require(\r\n            bytes(data[key]).length == 0,\r\n            \"username has already been taken\"\r\n        );\r\n        data[key] = value;\r\n    }\r\n\r\n    function get(bytes32 key) public view returns (string memory) {\r\n        return data[key];\r\n    }\r\n\r\n    function del(bytes32 key) public {\r\n        require(msg.sender == owner, \"only the owner can delete names\");\r\n        delete data[key];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"get\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"del\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes32\"},{\"name\":\"value\",\"type\":\"string\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Storage","CompilerVersion":"v0.5.8+commit.23d335f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"bzzr://cfbe4dd7ab03dd19c09bb13c993fb63044872a54884332c77a7ebc71a3e793d2"}]}