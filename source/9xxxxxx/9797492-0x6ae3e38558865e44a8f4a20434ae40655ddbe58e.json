{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity  ^0.4.19;\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\n\r\n\r\ncontract CREDITS is Ownable{\r\n    string public name = 'tomatolol';\r\n    string public symbol = 'lololol';\r\n    uint8 public constant decials = 8;//18\r\n    uint256 public totalSupply = (30 * (10**uint(decials))-1);\r\n\r\n    \r\n    address private _beneficiary;\r\n    uint256 private _lockTime;\r\n    uint256 private _lockDelay;\r\n    bool private _releaseRequested;\r\n    uint256 private _totalBurned;\r\n    \r\n    //ALL Lock -> true\r\n    //All UnLock -> false\r\n    bool public Lock = true;\r\n    bool public CanChange = true;\r\n    \r\n    address public Admin;\r\n    address public AddressForReturn;\r\n    address[] Accounts;\r\n    \r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    mapping(address => bool) public AccountIsLock;\r\n    mapping(address => bool) public AccountIsNotLock;\r\n    mapping(address => bool) public AccountIsNotLockForReturn;\r\n    mapping(address => uint) public AccountIsLockByDate;\r\n    \r\n    mapping (address => bool) public isHolder;\r\n    mapping (address => bool) public isArrAccountIsLock;\r\n    mapping (address => bool) public isArrAccountIsNotLock;\r\n    mapping (address => bool) public isArrAccountIsNotLockForReturn;\r\n    mapping (address => bool) public isArrAccountIsLockByDate;\r\n    mapping (address => uint) balances;\r\n    \r\n    address [] public Arrholders;\r\n    address [] public ArrAccountIsLock;\r\n    address [] public ArrAccountIsNotLock;\r\n    address [] public ArrAccountIsLockForReturn;\r\n    address [] public ArrAccountIsLockByDate;\r\n\r\n    event Transfer(address indexed from, address indexed to,uint256 value);\r\n    event Burn(address indexed from, uint256 value);\r\n    event Add(address indexed from, uint256 value);\r\n    event ReleaseRequested(address account);\r\n \r\n     /* Send coins */\r\n    function transfer(address _to, uint256 _value) public  {\r\n        require(((!Lock&&AccountIsLock[msg.sender]!=true)||((Lock)&&AccountIsNotLock[msg.sender]==true)||(AccountIsNotLockForReturn[msg.sender]==true\r\n        &&_to==AddressForReturn))&&now>AccountIsLockByDate[msg.sender]);\r\n        require(balanceOf[msg.sender] >= _value);                                   // Check if the sender has enough\r\n        require (balanceOf[_to] + _value >= balanceOf[_to]);                        // Check for overflows\r\n        balanceOf[msg.sender] -= _value;                                            // Subtract from the sender\r\n        balanceOf[_to] += _value;                                                   // Add the same to the recipient\r\n        Transfer(msg.sender, _to, _value);                                          // Notify anyone listening that this transfer took place\r\n        if (isHolder[_to] != true) \r\n        {\r\n        Arrholders[Arrholders.length++] = _to;\r\n        isHolder[_to] = true;\r\n        }\r\n        \r\n    }\r\n    \r\n  \r\n\r\n  modifier IsNotLock{\r\n      require(((!Lock&&AccountIsLock[msg.sender]!=true)||((Lock)&&AccountIsNotLock[msg.sender]==true))&&now>AccountIsLockByDate[msg.sender]);\r\n      _;\r\n     }\r\n    modifier isCanChange{\r\n        require((msg.sender==owner||msg.sender==Admin)&&CanChange==true);\r\n        _;\r\n    }\r\n    \r\n    function CREDITS() public {\r\n        balanceOf[msg.sender] = totalSupply;\r\n        Arrholders[Arrholders.length++]=msg.sender;\r\n        Admin=msg.sender;\r\n    }\r\n    \r\n     function setAdmin(address _address) public onlyOwner{\r\n        require(CanChange);\r\n        Admin=_address;\r\n    }\r\n    \r\n    function setLock(bool _Lock)public isCanChange{\r\n        require(CanChange);\r\n        Lock=_Lock;\r\n    }\r\n    \r\n    function setCanChange(bool _canChange) public onlyOwner{\r\n        require(CanChange);\r\n        CanChange = _canChange;\r\n    }\r\n    \r\n    function setAccountIsLock(address _address, bool _IsLock) public onlyOwner{\r\n        AccountIsLock[_address] = _IsLock;\r\n        if(isArrAccountIsLock[_address] != true){\r\n            ArrAccountIsLock[ArrAccountIsLock.length++] = _address;\r\n            isArrAccountIsLock[_address] = true;\r\n        }\r\n    }\r\n\r\n    function setAccountIsNotLock(address _address, bool _IsLock) public onlyOwner{\r\n        AccountIsNotLock[_address] = _IsLock;\r\n        if(isArrAccountIsNotLock[_address] != true){\r\n            ArrAccountIsNotLock[ArrAccountIsNotLock.length++] = _address;\r\n            isArrAccountIsNotLock[_address] = true;\r\n        }\r\n    }\r\n    \r\n    function burn(uint256 _value) public IsNotLock  returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);   \r\n        balanceOf[msg.sender] -= _value;            \r\n        totalSupply -= _value;                      \r\n        Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n    function add(uint256 _value) public IsNotLock  returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);   \r\n        balanceOf[msg.sender] += _value;            \r\n        totalSupply += _value;                      \r\n        Add(msg.sender, _value);\r\n        return true;\r\n    }\r\n    \r\n    function setSymbol(string _symbol) public onlyOwner{\r\n        require(CanChange);\r\n        symbol = _symbol;\r\n    }\r\n    function setName(string _name) public onlyOwner{\r\n        require(CanChange);\r\n        name = _name;\r\n    }\r\n\r\n    function () public payable{\r\n    revert();\r\n    }\r\n   \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_IsLock\",\"type\":\"bool\"}],\"name\":\"setAccountIsNotLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Arrholders\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"AccountIsNotLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Lock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"AccountIsNotLockForReturn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decials\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ArrAccountIsNotLock\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_Lock\",\"type\":\"bool\"}],\"name\":\"setLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isArrAccountIsNotLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isArrAccountIsLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CanChange\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isArrAccountIsLockByDate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isArrAccountIsNotLockForReturn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"AccountIsLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"AddressForReturn\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ArrAccountIsLockByDate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_IsLock\",\"type\":\"bool\"}],\"name\":\"setAccountIsLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isHolder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ArrAccountIsLockForReturn\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ArrAccountIsLock\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"AccountIsLockByDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_canChange\",\"type\":\"bool\"}],\"name\":\"setCanChange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Add\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ReleaseRequested\",\"type\":\"event\"}]","ContractName":"CREDITS","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://28602777748c41ea05c20b5d583f8e4713fabc2268814913568af64e8e35e618"}]}