{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\n\r\n/**\r\n * @title StaticConnectBasic.\r\n * @dev Static Connector to withdraw assets.\r\n */\r\n\r\ninterface TokenInterface {\r\n    function balanceOf(address) external view returns (uint);\r\n    function transfer(address, uint) external returns (bool);\r\n}\r\n\r\ninterface AccountInterface {\r\n    function isAuth(address) external view returns (bool);\r\n}\r\n\r\ninterface EventInterface {\r\n    function emitEvent(uint _connectorType, uint _connectorID, bytes32 _eventCode, bytes calldata _eventData) external;\r\n}\r\n\r\ncontract Memory {\r\n\r\n    /**\r\n     * @dev Return InstaEvent Address.\r\n     */\r\n    function getEventAddr() public pure returns (address) {\r\n        return 0x2af7ea6Cb911035f3eb1ED895Cb6692C39ecbA97;\r\n    }\r\n\r\n    function connectorID() public pure returns(uint _type, uint _id) {\r\n        (_type, _id) = (2, 1);\r\n    }\r\n\r\n}\r\n\r\ncontract BasicResolver is Memory {\r\n\r\n    event LogWithdraw(address erc20, uint tokenAmt, address to);\r\n\r\n    /**\r\n     * @dev ETH Address.\r\n     */\r\n    function getEthAddr() public pure returns (address) {\r\n        return 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n    }\r\n\r\n   /**\r\n     * @dev Withdraw Assets To Smart Account.\r\n     * @param erc20 Token Address.\r\n     * @param tokenAmt Token Amount.\r\n     */\r\n    function withdraw(\r\n        address erc20,\r\n        uint tokenAmt\r\n    ) public payable {\r\n        uint amt;\r\n        if (erc20 == getEthAddr()) {\r\n            amt = tokenAmt == uint(-1) ? address(this).balance : tokenAmt;\r\n            msg.sender.transfer(amt);\r\n        } else {\r\n            TokenInterface token = TokenInterface(erc20);\r\n            amt = tokenAmt == uint(-1) ? token.balanceOf(address(this)) : tokenAmt;\r\n            token.transfer(msg.sender, amt);\r\n        }\r\n\r\n        emit LogWithdraw(erc20, amt, msg.sender);\r\n\r\n        bytes32 _eventCode = keccak256(\"LogWithdraw(address,uint256,address)\");\r\n        bytes memory _eventParam = abi.encode(erc20, amt, msg.sender);\r\n        (uint _type, uint _id) = connectorID();\r\n        EventInterface(getEventAddr()).emitEvent(_type, _id, _eventCode, _eventParam);\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract StaticConnectBasic is BasicResolver {\r\n    string public constant name = \"Static-Basic-v1\";\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"connectorID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEventAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmt\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"StaticConnectBasic","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"ipfs://09800edd61a55e49ca9e4d43c518d70248ab17d9bfca4e0fa29bdce5e3b3567d"}]}