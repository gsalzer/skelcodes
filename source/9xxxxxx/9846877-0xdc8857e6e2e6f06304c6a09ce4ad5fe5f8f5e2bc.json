{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.17;\r\n\r\ncontract MightyPepe {\r\n\r\n    address payable public owner;\r\n\r\n    // Player struct\r\n    struct PlayerStruct {\r\n        address addr;\r\n        uint256 rank;   // 0 - no rank, 1 - Pepe, 2 - advanced Pepe, 3 - Mighty Pepe (withdrawable)\r\n    }\r\n    // Player mapping\r\n    mapping(address => PlayerStruct) public players;\r\n\r\n    // Modifiers\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call\");\r\n        _;\r\n    }\r\n\r\n    modifier isMember() {\r\n        require(players[msg.sender].addr != address(0), \"Only member can play\");\r\n        _;\r\n    }\r\n\r\n    modifier isMightyPepe() {\r\n        require(players[msg.sender].rank == 3, \"Pepe sad :'-(\");\r\n        _;\r\n    }\r\n\r\n    // Constructor\r\n    constructor() public payable {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // Join game\r\n    function joinGame() external payable {\r\n        require(players[msg.sender].addr == address(0), \"Player already exists\");\r\n        players[msg.sender] = PlayerStruct(msg.sender, 0);\r\n    }\r\n\r\n    // Be special\r\n    function IamPepe(bytes memory _code) public payable isMember {\r\n        players[msg.sender].rank = 0;\r\n        uint256 leet_seed = 0x1337;\r\n        address payable deployAddress = DeployCreate2Contract(_code, bytes32(leet_seed), 0);  // Yes, the seed is fixed\r\n\r\n        // Are you special?\r\n        bool isSpecial = ((uint256(deployAddress) % leet_seed) == (uint256(msg.sender) % leet_seed));\r\n\r\n        if (isSpecial) {\r\n            players[msg.sender].rank = 1;  // You are Pepe\r\n            uint256 bytecodesize;\r\n            assembly {\r\n              bytecodesize := extcodesize(deployAddress)\r\n            }\r\n            // Be more special\r\n            if (bytecodesize < 100) {\r\n                players[msg.sender].rank = 2;  // You are advanced Pepe\r\n                tinyPepe tpepe = tinyPepe(deployAddress);\r\n                uint256 tpepeAnswer;\r\n                uint256 question = uint256(blockhash(block.number - 1));\r\n                tpepeAnswer = tpepe.ask(question);\r\n                // Be the most special\r\n                if (tpepeAnswer == (question % leet_seed)) {\r\n                    players[msg.sender].rank = 3;  // You are Mighty Pepe\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Withdraw\r\n    function withdraw() external payable isMember isMightyPepe {\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n\r\n    // Internal functions\r\n    function DeployCreate2Contract(bytes memory bytecode, bytes32 seed, uint256 value) internal returns (address payable) {\r\n        address payable contractAddress;\r\n        assembly {\r\n            contractAddress := create2(value, add(bytecode, 0x20), mload(bytecode), seed)\r\n        }\r\n        return contractAddress;\r\n    }\r\n\r\n    // Standard functions\r\n    function withdrawOwner() external payable onlyOwner {\r\n        owner.transfer(address(this).balance);\r\n    }\r\n\r\n    function kill() external payable onlyOwner {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n    // Fallback\r\n    function() external payable { }\r\n}\r\n\r\ncontract tinyPepe {\r\n\r\n    function ask(uint256 question) public pure returns (uint256) {\r\n        uint256 answer = question % 0x1337;\r\n        return answer;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"IamPepe\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"joinGame\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rank\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawOwner\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"MightyPepe","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://e9f0deb73554141fbf7e9a32166fbc7d357cdf86d49cd5e0b7267927daa85d56"}]}