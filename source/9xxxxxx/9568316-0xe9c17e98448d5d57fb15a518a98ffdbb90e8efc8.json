{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.2; // optimization runs: 200\r\n\r\n\r\ncontract EthReturner {\r\n    constructor() public payable {\r\n        selfdestruct(tx.origin);\r\n    }\r\n}\r\n\r\n\r\n/// @author 0age\r\ncontract ExampleWildcardResolver {\r\n  bytes32 private constant _INIT_CODE_HASH = keccak256(\r\n    type(EthReturner).creationCode\r\n  );\r\n    \r\n  function supportsInterface(bytes4 interfaceID) external pure returns (bool) {\r\n    return interfaceID == 0x3b3b57de;\r\n  }\r\n\r\n  function addr(bytes32 nodeID) external view returns (address) {\r\n    return _getWildcardAddress(nodeID);\r\n  }\r\n    \r\n  function returnEthToTxOrigin(bytes32 nodeID) external {\r\n    new EthReturner{salt: nodeID}();\r\n  }\r\n    \r\n  function _getWildcardAddress(bytes32 salt) internal view returns (address) {\r\n    return address(              // derive the target deployment address.\r\n      uint160(                   // downcast to match the address type.\r\n        uint256(                 // cast to uint to truncate upper digits.\r\n          keccak256(             // compute CREATE2 hash using 4 inputs.\r\n            abi.encodePacked(    // pack all inputs to the hash together.\r\n              bytes1(0xff),      // pass in the control character.\r\n              address(this),     // pass in the address of this contract.\r\n              salt,              // pass in the salt argument.\r\n              _INIT_CODE_HASH    // pass in hash of contract creation code.\r\n            )\r\n          )\r\n        )\r\n      )\r\n    );\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nodeID\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nodeID\",\"type\":\"bytes32\"}],\"name\":\"returnEthToTxOrigin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]","ContractName":"ExampleWildcardResolver","CompilerVersion":"v0.6.2+commit.bacdbe57","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"ipfs://c8831320dd2d6748250177fe5b3d3b98273438b2fe9ccc01070730fc7df35c28"}]}