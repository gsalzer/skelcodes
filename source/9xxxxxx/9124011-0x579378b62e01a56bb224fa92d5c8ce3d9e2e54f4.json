{"status":"1","message":"OK","result":[{"SourceCode":"/* Orchid - WebRTC P2P VPN Market (on Ethereum)\r\n * Copyright (C) 2017-2019  The Orchid Authors\r\n*/\r\n\r\n/* GNU Affero General Public License, Version 3 {{{ */\r\n/*\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Affero General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Affero General Public License for more details.\r\n\r\n * You should have received a copy of the GNU Affero General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n**/\r\n/* }}} */\r\n\r\n\r\npragma solidity 0.5.13;\r\n\r\ncontract ReverseRegistrar {\r\n    function claim(address owner) public returns (bytes32 node);\r\n}\r\n\r\ncontract OrchidCurator {\r\n    function good(address, bytes calldata) external view returns (uint128);\r\n}\r\n\r\ncontract OrchidList is OrchidCurator {\r\n    ReverseRegistrar constant private ens_ = ReverseRegistrar(0x9062C0A6Dbd6108336BcBe4593a3D1cE05512069);\r\n\r\n    address private owner_;\r\n\r\n    constructor() public {\r\n        ens_.claim(msg.sender);\r\n        owner_ = msg.sender;\r\n    }\r\n\r\n    function hand(address owner) external {\r\n        require(msg.sender == owner_);\r\n        owner_ = owner;\r\n    }\r\n\r\n    struct Entry {\r\n        uint128 adjust_;\r\n        bool valid_;\r\n    }\r\n\r\n    mapping (address => Entry) private entries_;\r\n\r\n    function kill(address provider) external {\r\n        require(msg.sender == owner_);\r\n        delete entries_[provider];\r\n    }\r\n\r\n    function tend(address provider, uint128 adjust) public {\r\n        require(msg.sender == owner_);\r\n        Entry storage entry = entries_[provider];\r\n        entry.adjust_ = adjust;\r\n        entry.valid_ = true;\r\n    }\r\n\r\n    function list(address provider) external {\r\n        return tend(provider, uint128(-1));\r\n    }\r\n\r\n    function good(address provider, bytes calldata) external view returns (uint128) {\r\n        Entry storage entry = entries_[provider];\r\n        require(entry.valid_);\r\n        return entry.adjust_;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"good\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"hand\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"list\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"adjust\",\"type\":\"uint128\"}],\"name\":\"tend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"OrchidList","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU GPLv3","SwarmSource":"bzzr://5cd6bc2592aba5646b4ea23bcac57935f609745663c5d93884a4d76d0636997c"}]}