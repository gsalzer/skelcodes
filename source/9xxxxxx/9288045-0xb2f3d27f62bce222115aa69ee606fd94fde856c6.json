{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.16;\r\n\r\ninterface Contract{\r\n  function approve(address spender, uint256 value) external returns (bool);\r\n  function tokenToEthTransferInput(uint256 tokens_sold, uint256 min_eth, uint256 deadline, address recipient) external returns (uint256  eth_bought);\r\n  function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract Arb{\r\n  \r\n    address payable private OUSDcontractAddress = 0x7c0AFD49D40Ec308d49E2926E5c99B037d54EE7e;\r\n    address private UniswapExchangeAddress = 0xD9a1476a57DCF02B57eC87ac7b66568485B8B108;\r\n    \r\n    constructor () public {\r\n        \r\n        uint zero = 0;\r\n        uint one = 1;\r\n        \r\n        //Give Uniswap infinite approval to move contract's OUSD\r\n        Contract(OUSDcontractAddress).approve(UniswapExchangeAddress, zero - one);\r\n    }\r\n   \r\n    function () external payable {\r\n        \r\n        //Send received Eth to OUSD contract\r\n        OUSDcontractAddress.call.value(msg.value)(\"\");\r\n         \r\n        //Send received OUSD to Uniswap then transfer back the Eth\r\n        uint OUSDBalance = Contract(OUSDcontractAddress).balanceOf(address(this));\r\n        Contract(UniswapExchangeAddress).tokenToEthTransferInput(OUSDBalance, 1, 33136721784, msg.sender);\r\n                                                                                 \r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Arb","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://ef79b5014221d6523114427272f8c06ffd3723326fff28d0e3a62bd7192424c6"}]}