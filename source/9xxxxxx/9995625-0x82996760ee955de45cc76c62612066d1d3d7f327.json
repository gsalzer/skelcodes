{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract Proxy {\r\n    uint256[1000000] private _reserved;\r\n    address public owner = msg.sender;\r\n    address public impl;\r\n\r\n    function setImpl(address newImpl) external {\r\n        require(msg.sender == owner, \"Proxy: Access denied\");\r\n        impl = newImpl;\r\n    }\r\n\r\n    function () payable external {\r\n        _delegate(impl);\r\n    }\r\n    \r\n    function _delegate(address implementation)  internal {\r\n        assembly {\r\n            // Copy msg.data. We take full control of memory in this inline assembly\r\n            // block because it will not return to Solidity code. We overwrite the\r\n            // Solidity scratch pad at memory position 0.\r\n            calldatacopy(0, 0, calldatasize)\r\n            \r\n            // Call the implementation.\r\n            // out and outsize are 0 because we don't know the size yet.\r\n            let result := delegatecall(gas, implementation, 0, calldatasize, 0, 0)\r\n            \r\n            // Copy the returned data.\r\n            returndatacopy(0, 0, returndatasize)\r\n            \r\n            switch result\r\n                // delegatecall returns 0 on error.\r\n                case 0 { revert(0, returndatasize) }\r\n                default { return(0, returndatasize) }\r\n        }\r\n    }\r\n}","ABI":"[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"impl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImpl\",\"type\":\"address\"}],\"name\":\"setImpl\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Proxy","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://66b2b0fcfdf4597f3282b23b26325a8199699a33d0ca40620064a76aa3bcd814"}]}