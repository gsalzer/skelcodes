{"status":"1","message":"OK","result":[{"SourceCode":"{\"ceiling.sol\":{\"content\":\"// Copyright (C) 2019 lucasvo\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU Affero General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n//\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU Affero General Public License for more details.\\n//\\n// You should have received a copy of the GNU Affero General Public License\\n// along with this program.  If not, see \\u003chttps://www.gnu.org/licenses/\\u003e.\\n\\npragma solidity 0.5.12;\\n\\nimport \\\"./lib.sol\\\";\\n\\n// Ceiling\\n// Implements a ward that only allows minting of tokens if the `roof` has not\\n// been reached. The roof is set at deployment and can not be changed after.\\n// This is an effective way of implementing a fixed supply token without\\n// requiring to mint all tokens at once.\\n//\\ncontract Ceiling {\\n    // --- Auth ---\\n    mapping (address =\\u003e uint) public wards;\\n    function rely(address usr) public auth { wards[usr] = 1; }\\n    function deny(address usr) public auth { wards[usr] = 0; }\\n    modifier auth { require(wards[msg.sender] == 1); _; }\\n\\n    // --- Data ---\\n    MintLike public tkn;\\n    uint public     roof;\\n\\n    constructor(address tkn_, uint roof_) public {\\n        wards[msg.sender] = 1;\\n        tkn = MintLike(tkn_);\\n        roof = roof_;\\n    }\\n\\n    // --- Math ---\\n    function add(uint x, uint y) internal pure returns (uint z) {\\n        require((z = x + y) \\u003e= x);\\n    }\\n\\n    // --- Ceiling ---\\n    function mint(address usr, uint wad) public auth {\\n        require(add(tkn.totalSupply(), wad) \\u003c= roof, \\\"cent/reached-roof\\\");\\n        tkn.mint(usr, wad);\\n    }\\n}\\n\"},\"lib.sol\":{\"content\":\"// Copyright (C) 2019 lucasvo\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU Affero General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n//\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU Affero General Public License for more details.\\n//\\n// You should have received a copy of the GNU Affero General Public License\\n// along with this program.  If not, see \\u003chttps://www.gnu.org/licenses/\\u003e.\\n\\npragma solidity \\u003e=0.4.24;\\n\\ncontract MintLike {\\n    uint public totalSupply;\\n    function mint(address,uint) public;\\n}\\n\\n\\n\"}}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tkn_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"roof_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"roof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tkn\",\"outputs\":[{\"internalType\":\"contract MintLike\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Ceiling","CompilerVersion":"v0.5.12+commit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000006b1871328f3c80f6bd85f1b4b45b67319b2b4c8d0000000000000000000000000000000000000000014adf4b7320334b90000000","Library":"","LicenseType":"None","SwarmSource":"bzzr://6460e22d4eeb05a5cf48f7095f0011693f1e47065cac2cce2e053225e4fde846"}]}