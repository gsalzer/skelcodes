{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.13;\r\nlibrary SafeMath{\r\n    function add(uint256 a,uint256 b)internal pure returns(uint256){uint256 c=a+b;require(c>=a);return c;}\r\n\tfunction sub(uint256 a,uint256 b)internal pure returns(uint256){require(b<=a);uint256 c=a-b;return c;}\r\n\tfunction div(uint256 a,uint256 b)internal pure returns(uint256){require(b>0);uint256 c=a/b;return c;}\r\n\tfunction mul(uint256 a,uint256 b)internal pure returns(uint256){if(a==0){return 0;}uint256 c=a*b;require(c/a==b);return c;}}\r\ninterface Out{\r\n    function aad(uint256 n)external view returns(address);function bad(uint256 n)external view returns(address);\r\n\tfunction cad(uint256 n)external view returns(address);function dad(uint256 n)external view returns(address);\r\n\tfunction aam(uint256 n)external view returns(uint256);function srs(uint256 n)external view returns(uint256);\r\n\tfunction arw(uint256 n)external view returns(uint256);function brw(uint256 n)external view returns(uint256);\r\n\tfunction crw(uint256 n)external view returns(uint256);function drw(uint256 n)external view returns(uint256);\r\n    function afin(uint256 n)external returns(bool);function bfin(uint256 n)external returns(bool);\r\n\tfunction cfin(uint256 n)external returns(bool);function dfin(uint256 n)external returns(bool);\r\n\tfunction day()external view returns(uint256);\r\n\tfunction mint(address w,uint256 a)external returns(bool);\r\n    function swait(address w,uint256 n)external returns(bool);\r\n\tfunction mined(address w,uint256 n)external returns(bool);}\r\ncontract MINING{\t\r\n    using SafeMath for uint256; modifier onlyOwn{require(own==msg.sender);_;}\r\n    address private del; address private rot; address private own;\r\n    function mining(uint256 n)external returns(bool){\r\n\t\taddress dd = msg.sender;uint256 sr=Out(del).srs(n);uint256 aa=Out(del).aam(n);\r\n\t\tuint256 a; uint256 r=0; uint256 mt=0;\r\n\t\tif(sr==2){if(dd==Out(del).aad(n)){r=Out(del).arw(n);a=aa;}else\r\n\t\tif(dd==Out(del).bad(n)){r=Out(del).brw(n);a=aa.div(5).mul(4);}else\r\n\t\tif(dd==Out(del).cad(n)){r=Out(del).crw(n);a=a.add(aa.div(10));}else\r\n\t\tif(dd==Out(del).dad(n)){r=Out(del).drw(n);a=a.add(aa.div(10));}else{r=0;}}else\r\n\t\tif(sr==1){if(dd==Out(del).aad(n)){r=Out(del).arw(n);a=aa.div(100).mul(172);}else\r\n\t\tif(dd==Out(del).bad(n)){r=Out(del).brw(n);a=aa.div(5).mul(8);}else\r\n\t\tif(dd==Out(del).cad(n)){r=Out(del).crw(n);a=a.add(aa.div(100).mul(18));}else\r\n\t\tif(dd==Out(del).dad(n)){r=Out(del).drw(n);a=a.add(aa.div(10));}else{r=0;}}else\r\n\t\tif(sr==0){if(dd==Out(del).aad(n)){ r=Out(del).arw(n);a=aa.mul(9);}else\r\n\t\tif(dd==Out(del).cad(n)){ r=Out(del).crw(n);a=a.add(aa.div(2));}else\r\n\t\tif(dd==Out(del).dad(n)){ r=Out(del).drw(n);a=a.add(aa.div(2));}else{r=0;}}\r\n\t\trequire(r>0); uint256 t=Out(del).day().sub(r); if(t<73){mt=t;}else\r\n\t\tif(t<146){mt=73;mt=mt.add((t.sub(73)).mul(3));}else\r\n\t\tif(t<219){mt=292;mt=mt.add((t.sub(146)).mul(9));}else\r\n\t\tif(t<292){mt=949;mt=mt.add((t.sub(219)).mul(27));}else\r\n\t\tif(t<365){mt=2920;mt=mt.add((t.sub(292)).mul(81));}else{mt=8833;}\r\n\t\tif(mt==8833){mt=a;}else{ mt=(a.mul(mt)).div(8833);}\r\n\t\trequire(mt>0&&Out(rot).mint(dd,mt)&&Out(del).mined(dd,mt)&&Out(del).swait(dd,a));\r\n\t\tif(dd==Out(del).aad(n)){require(Out(del).afin(n));}\r\n\t\tif(dd==Out(del).bad(n)){require(Out(del).bfin(n));}\r\n\t\tif(dd==Out(del).cad(n)){require(Out(del).cfin(n));}\r\n\t\tif(dd==Out(del).dad(n)){require(Out(del).dfin(n));}return true;}\r\n\tfunction setrot(address a)external onlyOwn returns(bool){rot=a;return true;}\r\n    function setdel(address a)external onlyOwn returns(bool){del=a;return true;}\r\n    function()external{revert();}\r\n    constructor()public{own=msg.sender;}}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"mining\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"setdel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"setrot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"MINING","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU GPLv3","SwarmSource":"bzzr://dc817f86802a9921cf96c569099877b0f2380c5df78afd036b922c5de4332da5"}]}