{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.24;\r\npragma experimental ABIEncoderV2;\r\ncontract TradeProfile {\r\n    event LogTraderTradingTransaction(string tradingTx);\r\n    event LogAggregatedFollowersTradingTransaction(bytes32 aggregatedTxsHash);\r\n\r\n    mapping(address=>bool) public errand;\r\n    address public admin;\r\n    uint256 public strategyId;\r\n    constructor(uint256 _strategyId) public {\r\n        strategyId = _strategyId;\r\n        admin = msg.sender;\r\n    }\r\n\r\n    /**\r\n    * @dev Log the trader's trading transactions.\r\n    * @param _tradingTxs string Trading transactions in JSON format.\r\n    */\r\n    function logTraderTradingTx(string[] _tradingTxs) public {\r\n        require(errand[msg.sender]);\r\n        for(uint i=0; i<_tradingTxs.length; i++) {\r\n            emit LogTraderTradingTransaction(_tradingTxs[i]);\r\n        }\r\n    }\r\n\r\n    function newErrand(address _newErrand) public {\r\n      require(msg.sender == admin);\r\n      errand[_newErrand] = true;\r\n    }\r\n\r\n    function removeErrand(address _errand) public {\r\n      require(msg.sender == admin);\r\n      errand[_errand] = false;\r\n    }\r\n\r\n    /**\r\n    * @dev Log the followers' trading transactions.\r\n    * @param _aggregatedTxsHash bytes32 Hash of aggregation of followers' trading transactions.\r\n    */\r\n    function logFollowerTradingTx(bytes32 _aggregatedTxsHash) public {\r\n        require(errand[msg.sender]);\r\n        emit LogAggregatedFollowersTradingTransaction(_aggregatedTxsHash);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_errand\",\"type\":\"address\"}],\"name\":\"removeErrand\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"strategyId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newErrand\",\"type\":\"address\"}],\"name\":\"newErrand\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"errand\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tradingTxs\",\"type\":\"string[]\"}],\"name\":\"logTraderTradingTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_aggregatedTxsHash\",\"type\":\"bytes32\"}],\"name\":\"logFollowerTradingTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_strategyId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tradingTx\",\"type\":\"string\"}],\"name\":\"LogTraderTradingTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"aggregatedTxsHash\",\"type\":\"bytes32\"}],\"name\":\"LogAggregatedFollowersTradingTransaction\",\"type\":\"event\"}]","ContractName":"TradeProfile","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000400","Library":"","LicenseType":"None","SwarmSource":"bzzr://7f1a2ad8b404be87829cab5c98e0bf44dab4de05c0bc1c99aad040dab4925b9b"}]}