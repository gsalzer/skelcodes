{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.18;\r\n\r\n// https://github.com/ethereum/EIPs/issues/20\r\ninterface ERC20 {\r\n    function totalSupply() public view returns (uint supply);\r\n    function balanceOf(address _owner) public view returns (uint balance);\r\n    function transfer(address _to, uint _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success);\r\n    function approve(address _spender, uint _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public view returns (uint remaining);\r\n    function decimals() public view returns(uint digits);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\n\r\n/// @title Kyber Network interface\r\n\r\n\r\n/// @title Kyber Network interface\r\ninterface KyberNetworkProxyInterface {\r\n    function maxGasPrice() public view returns(uint);\r\n    function getUserCapInWei(address user) public view returns(uint);\r\n    function getUserCapInTokenWei(address user, ERC20 token) public view returns(uint);\r\n    function enabled() public view returns(bool);\r\n    function info(bytes32 id) public view returns(uint);\r\n\r\n    function getExpectedRate(ERC20 src, ERC20 dest, uint srcQty) public view\r\n        returns (uint expectedRate, uint slippageRate);\r\n\r\n    function tradeWithHint(ERC20 src, uint srcAmount, ERC20 dest, address destAddress, uint maxDestAmount,\r\n        uint minConversionRate, address walletId, bytes hint) public payable returns(uint);\r\n}\r\n\r\n\r\ncontract Trader {\r\n    KyberNetworkProxyInterface KyberInterface = KyberNetworkProxyInterface(0x818E6FECD516Ecc3849DAf6845e3EC868087B755);\r\n   \r\n    function getKyberRates(\r\n        ERC20 srcToken,\r\n        uint srcQty,\r\n        ERC20 destToken\r\n    ) public\r\n      view\r\n      returns (uint, uint)\r\n    {\r\n        return KyberInterface.getExpectedRate(srcToken, destToken, srcQty);\r\n\r\n    }\r\n    \r\n    function executeSwap(\r\n        ERC20 srcToken,\r\n        uint srcQty,\r\n        ERC20 destToken,\r\n        uint minConversionRate\r\n    ) public returns(uint) {\r\n        bytes memory hint;\r\n        \r\n        // Check that the token transferFrom has succeeded\r\n        require(srcToken.transferFrom(msg.sender, address(this), srcQty));\r\n    \r\n        // Mitigate ERC20 Approve front-running attack, by initially setting\r\n        // allowance to 0\r\n        require(srcToken.approve(address(KyberInterface), 0));\r\n    \r\n        // Set the spender's token allowance to tokenQty\r\n        require(srcToken.approve(address(KyberInterface), srcQty));\r\n\r\n        // Swap the ERC20 token and send to destAddress\r\n        uint res = KyberInterface.tradeWithHint(\r\n            srcToken,\r\n            srcQty,\r\n            destToken,\r\n            msg.sender,\r\n            (10**28),\r\n            minConversionRate,\r\n            0,\r\n            hint\r\n        );\r\n        return res;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"srcToken\",\"type\":\"address\"},{\"name\":\"srcQty\",\"type\":\"uint256\"},{\"name\":\"destToken\",\"type\":\"address\"}],\"name\":\"getKyberRates\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"srcToken\",\"type\":\"address\"},{\"name\":\"srcQty\",\"type\":\"uint256\"},{\"name\":\"destToken\",\"type\":\"address\"},{\"name\":\"minConversionRate\",\"type\":\"uint256\"}],\"name\":\"executeSwap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Trader","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"None","SwarmSource":"bzzr://ddfb06379aefdb9a5095f30d483d4671aee811109a4f8f5c24d22b61c8174ed7"}]}