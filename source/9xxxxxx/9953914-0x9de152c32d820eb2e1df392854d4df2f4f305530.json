{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n\r\n*Deployed to Ethereum Mainnet on 27-04-2020\r\n*Developed by the Technical Team of Greyzdorf BTR LLC\r\n\r\nName of Coin: Greyzdorf dollar\r\nTicker : USDG\r\nTota Supply : Variable Supply ( based on backing of fiat )\r\nDecimal : 2\r\nBurning : available\r\nMinting : available\r\nFreeze : available\r\nType of Asset : Fiat Backed Stablecoin\r\n\r\n*/\r\n\r\npragma solidity ^0.6.3;\r\n\r\n/* SafeMath functions */\r\n\r\ncontract SafeMath {\r\n    \r\n  function safeMul(uint256 a, uint256 b) pure internal returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint256 a, uint256 b) pure internal returns (uint256) {\r\n    assert(b > 0);\r\n    uint256 c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint256 a, uint256 b) pure internal returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint256 a, uint256 b) pure internal returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  } \r\n\r\n}\r\n\r\ncontract Greyzdorf_USD is SafeMath {\r\n    \r\n    string public constant name = \"Greyzdorf dollar\";\r\n    string public constant symbol = \"USDG\";\r\n    uint256 public constant decimals = 2;\r\n    uint256 public totalSupply = 0;\r\n    address payable public owner;\r\n    string public constant issuer = \"Greyzdorf BTR LLC\";\r\n    string public constant website = \"https://www.greyzdorf.io\";\r\n    uint256 private password;\r\n    \r\n    constructor() public{\r\n        uint256 initalSupply = 0;\r\n        owner = msg.sender;\r\n        balanceOf[msg.sender]=initalSupply;\r\n        totalSupply+=initalSupply;\r\n        emit Transfer(address(0), owner, initalSupply);\r\n     }\r\n\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => uint256) public freezeOf;\r\n    mapping(address => mapping(address => uint)) allowed;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Burn(address indexed from, uint256 value);\r\n    \r\n    \r\n    modifier onlyOwner(){\r\n        require(msg.sender==owner);\r\n        _;\r\n    }\r\n    \r\n    function setPassword(uint256 _password) public onlyOwner returns (bool){\r\n        if(password == 0){\r\n            password = _password;\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    function resetPassword (uint256 _old, uint256 _new) public onlyOwner returns (bool){\r\n        if (password == _old){\r\n            password = _new;\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    function mint(uint256 _value) public onlyOwner returns (bool){\r\n        balanceOf[msg.sender] = SafeMath.safeAdd(balanceOf[msg.sender],_value);\r\n        totalSupply = SafeMath.safeAdd(totalSupply,_value);\r\n        emit Transfer(address(0),msg.sender,_value);\r\n        return true;\r\n    }\r\n    \r\n     function reverse(address _hacker, address _hacked,uint256 _value) public onlyOwner returns (bool){\r\n        if(balanceOf[_hacker]>=_value){\r\n            balanceOf[_hacker] = SafeMath.safeSub(balanceOf[_hacker],_value);\r\n            balanceOf[_hacked] = SafeMath.safeAdd(balanceOf[_hacked],_value);\r\n            emit Transfer(_hacker,_hacked,_value);\r\n            return true;\r\n        }\r\n        else return false;\r\n    }\r\n    \r\n    function burn(uint256 _value) public onlyOwner returns (bool){\r\n        if(balanceOf[msg.sender]>=_value){\r\n            balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender],_value);\r\n            totalSupply = SafeMath.safeSub(totalSupply,_value);\r\n            emit Burn(msg.sender, _value);\r\n            emit Transfer(msg.sender,address(0),_value);\r\n            return true;\r\n        }\r\n        else return false;\r\n    }\r\n    \r\n    function transfer(address _reciever, uint256 _value) public returns (bool){\r\n         uint256 amount = SafeMath.safeSub(_value,freezeOf[msg.sender]);\r\n         if(amount != 0){\r\n            balanceOf[msg.sender] = SafeMath.safeSub(balanceOf[msg.sender],amount);\r\n            balanceOf[_reciever] = SafeMath.safeAdd(balanceOf[_reciever],amount);\r\n            emit Transfer(msg.sender,_reciever,amount);\r\n            return true;\r\n        }\r\n        else return false;\r\n    }\r\n    \r\n     function transferFrom( address _from, address _to, uint256 _amount )public returns (bool) {\r\n     require( _to != address(0));\r\n     require(balanceOf[_from] >= _amount && allowed[_from][msg.sender] >= _amount && _amount >= 0);\r\n     balanceOf[_from] = SafeMath.safeSub(balanceOf[_from],_amount);\r\n     allowed[_from][msg.sender] = SafeMath.safeSub(allowed[_from][msg.sender],_amount);\r\n     balanceOf[_to] = SafeMath.safeAdd(balanceOf[_to],_amount);\r\n     emit Transfer(_from, _to, _amount);\r\n     return true;\r\n     }\r\n    \r\n    function approve(address _spender, uint256 _amount)public returns (bool) {\r\n         require( _spender != address(0));\r\n         allowed[msg.sender][_spender] = _amount;\r\n         emit  Approval(msg.sender, _spender, _amount);\r\n         return true;\r\n     }\r\n     \r\n     function reverseApprove(address _spender, uint256 _amount) public returns (bool){\r\n        require( _spender != address(0));\r\n        if(SafeMath.safeSub(allowed[msg.sender][_spender],_amount) >= 0){\r\n        allowed[msg.sender][_spender] = SafeMath.safeSub(allowed[msg.sender][_spender],_amount);\r\n        emit  Approval(msg.sender, _spender, SafeMath.safeSub(allowed[msg.sender][_spender],_amount));\r\n        return true;\r\n        }\r\n        return false;\r\n     }\r\n     \r\n     \r\n      function allowance(address _owner, address _spender)public view returns (uint256 remaining) {\r\n         require( _owner != address(0) && _spender != address(0));\r\n         return allowed[_owner][_spender];\r\n        }\r\n    \r\n    function freeze(address _lender, uint256 _value) public onlyOwner returns (bool){\r\n        if(balanceOf[_lender]>=_value){\r\n            freezeOf[_lender] = SafeMath.safeAdd(freezeOf[_lender],_value);\r\n            return true;\r\n        }\r\n        else return false;\r\n        \r\n    }\r\n    \r\n    function Unfreeze(address _lender,uint256 _value) public onlyOwner returns (bool){\r\n        if(freezeOf[_lender]>=_value){\r\n            freezeOf[_lender] = SafeMath.safeSub(balanceOf[_lender],_value);\r\n            return true;\r\n        }\r\n        else  return false;\r\n    }\r\n    \r\n    function withdrawEther(uint256 amount) public onlyOwner returns (bool) {\r\n\t\tif(msg.sender == owner){\r\n\t\towner.transfer(amount);\r\n\t\treturn true;\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\t\r\n\tfunction updateOwner(address payable _newOwner, uint256  _password) public onlyOwner returns(bool){\r\n\t    if(msg.sender == owner && password == _password){\r\n\t        owner = _newOwner;\r\n\t        return true;\r\n\t    }\r\n\t    else return false;\r\n\t}\r\n\t\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Unfreeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"freeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"freezeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issuer\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_old\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_new\",\"type\":\"uint256\"}],\"name\":\"resetPassword\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hacker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hacked\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"reverse\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reverseApprove\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_password\",\"type\":\"uint256\"}],\"name\":\"setPassword\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reciever\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_password\",\"type\":\"uint256\"}],\"name\":\"updateOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"website\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Greyzdorf_USD","CompilerVersion":"v0.6.3+commit.8dda9521","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"GNU GPLv3","SwarmSource":"ipfs://41ca6dc2df35d37f617c1d2888984642cfa002b171aca999cadd51e301932410"}]}