{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity^0.6.2;\r\n\r\ninterface ERC20Interface {\r\n    function balanceOf(address whom) external view returns (uint256);\r\n}\r\n\r\ncontract GratitudeDispenser {\r\n    address private gratitudeTokenAddress;\r\n    \r\n    // sets up the gratitude token addressthat can be checked on later\r\n    constructor(address _gratitudeTokenAddress) public {\r\n        gratitudeTokenAddress = _gratitudeTokenAddress;\r\n    }\r\n\r\n    function claim() external {\r\n        uint256 callerGratitudeTokenBalance = ERC20Interface(gratitudeTokenAddress).balanceOf(msg.sender);\r\n        if (callerGratitudeTokenBalance >= 1e18) {\r\n            msg.sender.transfer(address(this).balance);\r\n        }\r\n    }\r\n    \r\n    fallback () external payable {\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gratitudeTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"GratitudeDispenser","CompilerVersion":"v0.6.2+commit.bacdbe57","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000043eac76ffb25c98bd49082c71fa1299de5c15fa9","Library":"","LicenseType":"MIT","SwarmSource":"ipfs://8db3d8ea1dd1798152ec3700039047193059de6f6136c75c95d949066c7f2b80"}]}