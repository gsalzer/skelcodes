{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\n\r\ninterface ENS\r\n{\r\n\tfunction owner(bytes32 node) external view returns (address);\r\n}\r\n\r\ninterface IReverseRegistrar\r\n{\r\n\tfunction setName(string calldata name) external returns (bytes32);\r\n}\r\n\r\ncontract ENSReverseRegistration\r\n{\r\n\tbytes32 internal constant ADDR_REVERSE_NODE = 0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\r\n\r\n\tfunction _setName(ENS ens, string memory name)\r\n\tinternal\r\n\t{\r\n\t\tIReverseRegistrar(ens.owner(ADDR_REVERSE_NODE)).setName(name);\r\n\t}\r\n}\r\n\r\ninterface IERC721\r\n{\r\n\tfunction ownerOf(uint256 tokenId) external view returns (address owner);\r\n}\r\n\r\ninterface IRegistry is IERC721\r\n{\r\n}\r\n\r\nabstract contract RegistryEntry is ENSReverseRegistration\r\n{\r\n\tIRegistry public registry;\r\n\r\n\tfunction _initialize(address _registry) internal\r\n\t{\r\n\t\trequire(address(registry) == address(0), 'already initialized');\r\n\t\tregistry = IRegistry(_registry);\r\n\t}\r\n\r\n\tfunction owner() public view returns (address)\r\n\t{\r\n\t\treturn registry.ownerOf(uint256(address(this)));\r\n\t}\r\n\r\n\tmodifier onlyOwner()\r\n\t{\r\n\t\trequire(owner() == msg.sender, 'caller is not the owner');\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction setName(address _ens, string calldata _name)\r\n\texternal onlyOwner()\r\n\t{\r\n\t\t_setName(ENS(_ens), _name);\r\n\t}\r\n}\r\n\r\ncontract Workerpool is RegistryEntry\r\n{\r\n\t/**\r\n\t * Parameters\r\n\t */\r\n\tstring  public m_workerpoolDescription;\r\n\tuint256 public m_workerStakeRatioPolicy;     // % of reward to stake\r\n\tuint256 public m_schedulerRewardRatioPolicy; // % of reward given to scheduler\r\n\r\n\t/**\r\n\t * Events\r\n\t */\r\n\tevent PolicyUpdate(\r\n\t\tuint256 oldWorkerStakeRatioPolicy,     uint256 newWorkerStakeRatioPolicy,\r\n\t\tuint256 oldSchedulerRewardRatioPolicy, uint256 newSchedulerRewardRatioPolicy);\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tfunction initialize(\r\n\t\tstring memory _workerpoolDescription)\r\n\tpublic\r\n\t{\r\n\t\t_initialize(msg.sender);\r\n\t\tm_workerpoolDescription      = _workerpoolDescription;\r\n\t\tm_workerStakeRatioPolicy     = 30; // mutable\r\n\t\tm_schedulerRewardRatioPolicy = 1;  // mutable\r\n\t}\r\n\r\n\tfunction changePolicy(\r\n\t\tuint256 _newWorkerStakeRatioPolicy,\r\n\t\tuint256 _newSchedulerRewardRatioPolicy)\r\n\texternal onlyOwner()\r\n\t{\r\n\t\trequire(_newSchedulerRewardRatioPolicy <= 100);\r\n\r\n\t\temit PolicyUpdate(\r\n\t\t\tm_workerStakeRatioPolicy,     _newWorkerStakeRatioPolicy,\r\n\t\t\tm_schedulerRewardRatioPolicy, _newSchedulerRewardRatioPolicy\r\n\t\t);\r\n\r\n\t\tm_workerStakeRatioPolicy     = _newWorkerStakeRatioPolicy;\r\n\t\tm_schedulerRewardRatioPolicy = _newSchedulerRewardRatioPolicy;\r\n\t}\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldWorkerStakeRatioPolicy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWorkerStakeRatioPolicy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldSchedulerRewardRatioPolicy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSchedulerRewardRatioPolicy\",\"type\":\"uint256\"}],\"name\":\"PolicyUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newWorkerStakeRatioPolicy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newSchedulerRewardRatioPolicy\",\"type\":\"uint256\"}],\"name\":\"changePolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_workerpoolDescription\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"m_schedulerRewardRatioPolicy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"m_workerStakeRatioPolicy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"m_workerpoolDescription\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ens\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Workerpool","CompilerVersion":"v0.6.6+commit.6c089d02","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","LicenseType":"MIT","SwarmSource":"ipfs://45e24a4d6dcd657935e03c7822ea7fa3d67f9aa7f6c1d512add165b5cbea5a20"}]}