{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.11;\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\ninterface ICustomersFundable {\r\n    function fundCustomer(address customerAddress, uint256 value, uint8 subconto) external payable;\r\n}\r\n\r\ninterface IRemoteWallet {\r\n    function invest(address customerAddress, address target, uint256 value, uint8 subconto) external returns (bool);\r\n}\r\n\r\ninterface IUSDT {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external;\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external;\r\n    function decimals() external view returns(uint8);\r\n}\r\n\r\ncontract NTSCD {\r\n    using SafeMath for uint256;\r\n\r\n    modifier onlyAdmin {\r\n        require(msg.sender == admin);\r\n        _;\r\n    }\r\n\r\n    modifier onlyBoss3 {\r\n        require(msg.sender == boss3);\r\n        _;\r\n    }\r\n\r\n    string public name = \"NTS Crypto Deposit\";\r\n    string public symbol = \"NTSCD\";\r\n    uint8 constant public decimals = 18;\r\n\r\n    address public admin;\r\n    address constant internal boss1 = 0xCa27fF938C760391E76b7aDa887288caF9BF6Ada;\r\n    address constant internal boss2 = 0xf43414ABb5a05c3037910506571e4333E16a4bf4;\r\n    address public boss3 = 0x2Cf6A513b20863C8EEB56bBCda806F69605b7c1A;\r\n\r\n    uint256 public refLevel1_ = 9;\r\n    uint256 public refLevel2_ = 3;\r\n    uint256 public refLevel3_ = 2;\r\n\r\n    uint256 internal tokenPrice = 1;\r\n    uint256 public minimalInvestment = 500e6;\r\n    uint256 public stakingRequirement = 0;\r\n\r\n    mapping(address => uint256) internal tokenBalanceLedger_;\r\n    mapping(address => uint256) public referralBalance_;\r\n    mapping(address => uint256) public repayBalance_;\r\n    mapping(address => uint256) public mayPassRepay_;\r\n\r\n    uint256 internal tokenSupply_;\r\n    bool public saleOpen = true;\r\n\r\n    address private refBase = address(0x0);\r\n\r\n    IUSDT public token;\r\n\r\n    constructor(address tokenAddr, address recipient, uint256 initialSupply) public {\r\n        token = IUSDT(tokenAddr);\r\n\r\n        admin = msg.sender;\r\n        mayPassRepay_[boss1] = 1e60;\r\n        mayPassRepay_[boss2] = 1e60;\r\n        mayPassRepay_[boss3] = 1e60;\r\n\r\n        tokenBalanceLedger_[recipient] = initialSupply;\r\n        tokenSupply_ = initialSupply;\r\n        emit Transfer(address(0), recipient, initialSupply);\r\n    }\r\n\r\n    function buy(uint256 value, address _ref1, address _ref2, address _ref3) public returns (uint256) {\r\n        require(value >= minimalInvestment, \"Value is below minimal investment.\");\r\n        require(token.allowance(msg.sender, address(this)) >= value, \"Token allowance error: approve this amount first\");\r\n        require(saleOpen, \"Sales stopped for the moment.\");\r\n        token.transferFrom(msg.sender, address(this), value);\r\n        return purchaseTokens(value, _ref1, _ref2, _ref3);\r\n    }\r\n\r\n    function reinvest() public {\r\n        address _customerAddress = msg.sender;\r\n        uint256 value = referralBalance_[_customerAddress];\r\n        require(value > 0);\r\n\r\n        referralBalance_[_customerAddress] = 0;\r\n        uint256 _tokens = purchaseTokens(value, address(0x0), address(0x0), address(0x0));\r\n        emit OnReinvestment(_customerAddress, value, _tokens, false, now);\r\n    }\r\n\r\n    function remoteReinvest(uint256 value) public {\r\n        if (IRemoteWallet(refBase).invest(msg.sender, address(this), value, 4)) {\r\n            uint256 tokens = purchaseTokens(value, address(0x0), address(0x0), address(0x0));\r\n            emit OnReinvestment(msg.sender, value, tokens, true, now);\r\n        }\r\n    }\r\n\r\n    function fund(uint256 value) public {\r\n        require(value > 0);\r\n        token.transferFrom(msg.sender, address(this), value);\r\n        emit OnFund(msg.sender, value, now);\r\n    }\r\n\r\n    function exit() public {\r\n        address _customerAddress = msg.sender;\r\n        uint256 balance = repayBalance_[_customerAddress];\r\n        if (balance > 0) getRepay();\r\n        withdraw();\r\n    }\r\n\r\n    function withdraw() public {\r\n        address _customerAddress = msg.sender;\r\n        uint256 value = referralBalance_[_customerAddress];\r\n        require(value > 0);\r\n        referralBalance_[_customerAddress] = 0;\r\n        token.transfer(_customerAddress, value);\r\n        emit OnWithdraw(_customerAddress, value, now);\r\n    }\r\n\r\n    function getRepay() public {\r\n        address _customerAddress = msg.sender;\r\n        uint256 balance = repayBalance_[_customerAddress];\r\n        require(balance > 0, \"Sender has nothing to repay\");\r\n        repayBalance_[_customerAddress] = 0;\r\n        uint256 tokens = tokenBalanceLedger_[_customerAddress];\r\n        tokenBalanceLedger_[_customerAddress] = 0;\r\n        tokenSupply_ = tokenSupply_.sub(tokens);\r\n\r\n        token.transfer(_customerAddress, balance);\r\n        emit OnGotRepay(_customerAddress, balance, now);\r\n        emit Transfer(_customerAddress, address(0), tokens);\r\n    }\r\n\r\n    function balanceOf(address _customerAddress) public view returns (uint256) {\r\n        return tokenBalanceLedger_[_customerAddress];\r\n    }\r\n\r\n    function purchaseTokens(uint256 _incomingValue, address _ref1, address _ref2, address _ref3) internal returns (uint256) {\r\n        address _customerAddress = msg.sender;\r\n        uint256 welcomeFee_ = refLevel1_.add(refLevel2_).add(refLevel3_);\r\n        require(welcomeFee_ <= 99);\r\n\r\n        uint256[7] memory uIntValues = [\r\n            _incomingValue.mul(welcomeFee_).div(100),\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0\r\n        ];\r\n\r\n        uIntValues[1] = uIntValues[0].mul(refLevel1_).div(welcomeFee_);\r\n        uIntValues[2] = uIntValues[0].mul(refLevel2_).div(welcomeFee_);\r\n        uIntValues[3] = uIntValues[0].mul(refLevel3_).div(welcomeFee_);\r\n\r\n        uint256 _taxedValue = _incomingValue.sub(uIntValues[0]);\r\n\r\n        uint256 _amountOfTokens = valueToTokens_(_incomingValue);\r\n\r\n        require(_amountOfTokens > 0);\r\n\r\n        if (\r\n            _ref1 != 0x0000000000000000000000000000000000000000 &&\r\n            tokensToValue_(tokenBalanceLedger_[_ref1]) >= stakingRequirement\r\n        ) {\r\n            if (refBase == address(0x0)) {\r\n                referralBalance_[_ref1] = referralBalance_[_ref1].add(uIntValues[1]);\r\n            } else {\r\n                uint256 allowed = token.allowance(address(this), refBase);\r\n                if (allowed != 0) {\r\n                    token.approve(refBase, 0);\r\n                }\r\n                token.approve(refBase, allowed + uIntValues[1]);\r\n                ICustomersFundable(refBase).fundCustomer(_ref1, uIntValues[1], 1);\r\n                uIntValues[4] = uIntValues[1];\r\n            }\r\n        } else {\r\n            referralBalance_[boss1] = referralBalance_[boss1].add(uIntValues[1]);\r\n            _ref1 = 0x0000000000000000000000000000000000000000;\r\n        }\r\n\r\n        if (\r\n            _ref2 != 0x0000000000000000000000000000000000000000 &&\r\n            tokensToValue_(tokenBalanceLedger_[_ref2]) >= stakingRequirement\r\n        ) {\r\n            if (refBase == address(0x0)) {\r\n                referralBalance_[_ref2] = referralBalance_[_ref2].add(uIntValues[2]);\r\n            } else {\r\n                uint256 allowed = token.allowance(address(this), refBase);\r\n                if (allowed != 0) {\r\n                    token.approve(refBase, 0);\r\n                }\r\n                token.approve(refBase, allowed + uIntValues[2]);\r\n                ICustomersFundable(refBase).fundCustomer(_ref2, uIntValues[2], 2);\r\n                uIntValues[5] = uIntValues[2];\r\n            }\r\n        } else {\r\n            referralBalance_[boss1] = referralBalance_[boss1].add(uIntValues[2]);\r\n            _ref2 = 0x0000000000000000000000000000000000000000;\r\n        }\r\n\r\n        if (\r\n            _ref3 != 0x0000000000000000000000000000000000000000 &&\r\n            tokensToValue_(tokenBalanceLedger_[_ref3]) >= stakingRequirement\r\n        ) {\r\n            if (refBase == address(0x0)) {\r\n                referralBalance_[_ref3] = referralBalance_[_ref3].add(uIntValues[3]);\r\n            } else {\r\n                uint256 allowed = token.allowance(address(this), refBase);\r\n                if (allowed != 0) {\r\n                    token.approve(refBase, 0);\r\n                }\r\n                token.approve(refBase, allowed + uIntValues[3]);\r\n                ICustomersFundable(refBase).fundCustomer(_ref3, uIntValues[3], 3);\r\n                uIntValues[6] = uIntValues[3];\r\n            }\r\n        } else {\r\n            referralBalance_[boss1] = referralBalance_[boss1].add(uIntValues[3]);\r\n            _ref3 = 0x0000000000000000000000000000000000000000;\r\n        }\r\n\r\n        referralBalance_[boss2] = referralBalance_[boss2].add(_taxedValue);\r\n\r\n        tokenSupply_ = tokenSupply_.add(_amountOfTokens);\r\n\r\n        tokenBalanceLedger_[_customerAddress] = tokenBalanceLedger_[_customerAddress].add(_amountOfTokens);\r\n\r\n        emit OnTokenPurchase(_customerAddress, _incomingValue, _amountOfTokens, _ref1, _ref2, _ref3, uIntValues[4], uIntValues[5], uIntValues[6], now);\r\n        emit Transfer(address(0), _customerAddress, _amountOfTokens);\r\n\r\n        return _amountOfTokens;\r\n    }\r\n\r\n    function valueToTokens_(uint256 _value) public view returns (uint256) {\r\n        uint256 _tokensReceived = _value.mul(tokenPrice).mul(1e12);\r\n\r\n        return _tokensReceived;\r\n    }\r\n\r\n    function tokensToValue_(uint256 _tokens) public view returns (uint256) {\r\n        uint256 _valueReceived = _tokens.div(tokenPrice).div(1e12);\r\n\r\n        return _valueReceived;\r\n    }\r\n\r\n    /* Admin methods */\r\n    function mint(address customerAddress, uint256 value) public onlyBoss3 {\r\n        tokenSupply_ = tokenSupply_.add(value);\r\n        tokenBalanceLedger_[customerAddress] = tokenBalanceLedger_[customerAddress].add(value);\r\n\r\n        emit OnMint(customerAddress, value, now);\r\n        emit Transfer(address(0), customerAddress, value);\r\n    }\r\n\r\n    function setRefBonus(uint8 level1, uint8 level2, uint8 level3, uint256 minInvest, uint256 staking) public {\r\n        require(msg.sender == boss3 || msg.sender == admin);\r\n        refLevel1_ = level1;\r\n        refLevel2_ = level2;\r\n        refLevel3_ = level3;\r\n\r\n        minimalInvestment = minInvest;\r\n        stakingRequirement = staking;\r\n\r\n        emit OnRefBonusSet(level1, level2, level3, minInvest, staking, now);\r\n    }\r\n\r\n    function passRepay(uint256 value, address customerAddress, string memory comment) public {\r\n        require(mayPassRepay_[msg.sender] > 0, \"Not allowed to pass repay from your address.\");\r\n        require(value > 0);\r\n        require(value <= mayPassRepay_[msg.sender], \"Sender is not allowed\");\r\n        require(value <= token.allowance(msg.sender, address(this)), \"Token allowance error: approve this amount first\");\r\n\r\n        token.transferFrom(msg.sender, address(this), value);\r\n\r\n        mayPassRepay_[msg.sender] = mayPassRepay_[msg.sender].sub(value);\r\n\r\n        repayBalance_[customerAddress] = repayBalance_[customerAddress].add(value);\r\n        emit OnRepayPassed(customerAddress, msg.sender, value, comment, now);\r\n    }\r\n\r\n    function allowPassRepay(address payer, uint256 value, string memory comment) public onlyAdmin {\r\n        mayPassRepay_[payer] = value;\r\n        emit OnRepayAddressAdded(payer, value, comment, now);\r\n    }\r\n\r\n    function passInterest(uint256 value, address customerAddress, uint256 valueRate, uint256 rate, string memory comment) public {\r\n        require(mayPassRepay_[msg.sender] > 0, \"Not allowed to pass interest from your address\");\r\n        require(value > 0);\r\n        require(value <= token.allowance(msg.sender, address(this)), \"Token allowance error: approve this amount first\");\r\n\r\n        token.transferFrom(msg.sender, address(this), value);\r\n\r\n        if (refBase == address(0x0)) {\r\n            referralBalance_[customerAddress] = referralBalance_[customerAddress].add(value);\r\n        } else {\r\n            uint256 allowed = token.allowance(address(this), refBase);\r\n            if (allowed != 0) {\r\n                token.approve(refBase, 0);\r\n            }\r\n            token.approve(refBase, allowed + value);\r\n            ICustomersFundable(refBase).fundCustomer(customerAddress, value, 5);\r\n        }\r\n\r\n        emit OnInterestPassed(customerAddress, value, valueRate, rate, comment, now);\r\n    }\r\n\r\n    function switchState() public onlyAdmin {\r\n        if (saleOpen) {\r\n            saleOpen = false;\r\n            emit OnSaleStop(now);\r\n        } else {\r\n            saleOpen = true;\r\n            emit OnSaleStart(now);\r\n        }\r\n    }\r\n\r\n    function deposeBoss3(address x) public onlyAdmin {\r\n        emit OnBoss3Deposed(boss3, x, now);\r\n        boss3 = x;\r\n    }\r\n\r\n    function setRefBase(address x) public onlyAdmin {\r\n        emit OnRefBaseSet(refBase, x, now);\r\n        refBase = x;\r\n    }\r\n\r\n    function seize(address customerAddress, address receiver) public {\r\n        require(msg.sender == boss1 || msg.sender == boss2 || msg.sender == boss3);\r\n\r\n        uint256 tokens = tokenBalanceLedger_[customerAddress];\r\n        if (tokens > 0) {\r\n            tokenBalanceLedger_[customerAddress] = 0;\r\n            tokenBalanceLedger_[receiver] = tokenBalanceLedger_[receiver].add(tokens);\r\n            emit Transfer(customerAddress, receiver, tokens);\r\n        }\r\n\r\n        uint256 value = referralBalance_[customerAddress];\r\n        if (value > 0) {\r\n            referralBalance_[customerAddress] = 0;\r\n            referralBalance_[receiver] = referralBalance_[receiver].add(value);\r\n        }\r\n\r\n        uint256 repay = repayBalance_[customerAddress];\r\n        if (repay > 0) {\r\n            repayBalance_[customerAddress] = 0;\r\n            referralBalance_[receiver] = referralBalance_[receiver].add(repay);\r\n        }\r\n\r\n        emit OnSeize(customerAddress, receiver, tokens, value, repay, now);\r\n    }\r\n\r\n    function setName(string memory newName, string memory newSymbol) public {\r\n        require(msg.sender == admin || msg.sender == boss1);\r\n\r\n        emit OnNameSet(name, symbol, newName, newSymbol, now);\r\n        name = newName;\r\n        symbol = newSymbol;\r\n    }\r\n\r\n    function shift(address holder, address recipient, uint256 value) public {\r\n        require(msg.sender == boss1 || msg.sender == boss2 || msg.sender == boss3);\r\n        require(value > 0);\r\n\r\n        tokenBalanceLedger_[holder] = tokenBalanceLedger_[holder].sub(value);\r\n        tokenBalanceLedger_[recipient] = tokenBalanceLedger_[recipient].add(value);\r\n\r\n        emit OnShift(holder, recipient, value, now);\r\n        emit Transfer(holder, recipient, value);\r\n    }\r\n\r\n    function burn(address holder, uint256 value) public {\r\n        require(msg.sender == admin || msg.sender == boss1 || msg.sender == boss2);\r\n        require(value > 0);\r\n\r\n        tokenSupply_ = tokenSupply_.sub(value);\r\n        tokenBalanceLedger_[holder] = tokenBalanceLedger_[holder].sub(value);\r\n\r\n        emit OnBurn(holder, value, now);\r\n        emit Transfer(holder, address(0), value);\r\n    }\r\n\r\n    event OnTokenPurchase(\r\n        address indexed customerAddress,\r\n        uint256 incomingValue,\r\n        uint256 tokensMinted,\r\n        address ref1,\r\n        address ref2,\r\n        address ref3,\r\n        uint256 ref1value,\r\n        uint256 ref2value,\r\n        uint256 ref3value,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnReinvestment(\r\n        address indexed customerAddress,\r\n        uint256 valueReinvested,\r\n        uint256 tokensMinted,\r\n        bool isRemote,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnWithdraw(\r\n        address indexed customerAddress,\r\n        uint256 value,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnGotRepay(\r\n        address indexed customerAddress,\r\n        uint256 value,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnRepayPassed(\r\n        address indexed customerAddress,\r\n        address indexed payer,\r\n        uint256 value,\r\n        string comment,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnInterestPassed(\r\n        address indexed customerAddress,\r\n        uint256 value,\r\n        uint256 valueRate,\r\n        uint256 rate,\r\n        string comment,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnSaleStop(\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnSaleStart(\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnRepayAddressAdded(\r\n        address indexed payer,\r\n        uint256 value,\r\n        string comment,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnRepayAddressRemoved(\r\n        address indexed payer,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnMint(\r\n        address indexed customerAddress,\r\n        uint256 value,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnBoss3Deposed(\r\n        address indexed former,\r\n        address indexed current,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnRefBonusSet(\r\n        uint8 level1,\r\n        uint8 level2,\r\n        uint8 level3,\r\n        uint256 minimalInvestment,\r\n        uint256 stakingRequirement,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnRefBaseSet(\r\n        address indexed former,\r\n        address indexed current,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnSeize(\r\n        address indexed customerAddress,\r\n        address indexed receiver,\r\n        uint256 tokens,\r\n        uint256 value,\r\n        uint256 repayValue,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnFund(\r\n        address indexed source,\r\n        uint256 value,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnBurn (\r\n        address holder,\r\n        uint256 value,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnShift (\r\n        address holder,\r\n        address recipient,\r\n        uint256 value,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnNameSet (\r\n        string oldName,\r\n        string oldSymbol,\r\n        string newName,\r\n        string newSymbol,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event OnTokenSet (\r\n        address oldToken,\r\n        address newToken,\r\n        uint256 timestamp\r\n    );\r\n\r\n    event Transfer (\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 value\r\n    );\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"deposeBoss3\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"setRefBase\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"level1\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"level2\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"level3\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minInvest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"staking\",\"type\":\"uint256\"}],\"name\":\"setRefBonus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimalInvestment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"refLevel3_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingRequirement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"valueToTokens_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"repayBalance_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"newSymbol\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_customerAddress\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"refLevel2_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"passRepay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"boss3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"allowPassRepay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"valueRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"}],\"name\":\"passInterest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mayPassRepay_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getRepay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"switchState\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"remoteReinvest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"shift\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"tokensToValue_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"refLevel1_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_ref1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ref2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ref3\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralBalance_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IUSDT\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"seize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reinvest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"incomingValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ref1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ref2\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ref3\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ref1value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ref2value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ref3value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnTokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valueReinvested\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRemote\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnReinvestment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnGotRepay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnRepayPassed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valueRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnInterestPassed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnSaleStop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnSaleStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnRepayAddressAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnRepayAddressRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"former\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnBoss3Deposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level1\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level2\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level3\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimalInvestment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakingRequirement\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnRefBonusSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"former\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnRefBaseSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repayValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnSeize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnFund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnShift\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldSymbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newSymbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnNameSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OnTokenSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"NTSCD","CompilerVersion":"v0.5.11+commit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000002d35e8c931befb9fdc3d5ecf759a9d4a81ef23f30000000000000000000000000000000000000000000000000000000000000000","Library":"","LicenseType":"None","SwarmSource":"bzzr://1ef884504603cb7442ffa4d9e83602db769e286a5a2a58a3f42a0ffbf8a4631c"}]}