{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.6;\r\n\r\ncontract DesafioStone {\r\n\r\n  function DesafioStone() {}\r\n\r\n  function o_aprendiz(uint a) constant returns (uint) {\r\n    return a == 42 ? 1 : 0;\r\n  }\r\n  \r\n  function o_algoritmo(uint a) constant returns (uint) {\r\n    uint s = 0;\r\n    for (uint i = 0; i < 21; ++i)\r\n      s += i;\r\n    return a == s / 5 ? 1 : 0;\r\n  }\r\n\r\n  function a_incognita(uint x) constant returns (uint) {\r\n    return x*x*x + 3*x*x + 3*x + 7 == 2395346478 ? 1 : 0;\r\n  }\r\n\r\n  function a_empresa(bytes5 nome) constant returns (uint) {\r\n    return sha3(nome) == 0x7cdf2c59fd49fab5ebabf1630c3a1f4d5c22c0aaa3651ca37dd688a69b33f3aa ? 1 : 0;\r\n  }\r\n\r\n  function o_desafiante(bytes14 nome) constant returns (uint) {\r\n    return sha3(nome) == 0x71c6223d42fee2811e6f2ccfbb7bc5d1c57d47a97f9cbb8b2aedd67c312dc367 ? 1 : 0;\r\n  }\r\n\r\n  function a_palavra(bytes5 palavra) constant returns (uint) {\r\n    return sha3(palavra) == 0x2e4588766bcfa3508dfb56a344fd7b1c3eca4954b2b8b795ab02209396528367 ? 2 : 0;\r\n  }\r\n\r\n  function o_velho_problema(uint a, uint b) constant returns (uint) {\r\n    return a * b == 239811736052687 ? 2 : 0;\r\n  }\r\n\r\n  function o_novo_problema(uint x) constant returns (uint) {\r\n    return 3 ** x == 0x5dd085b1f9816a47e96bf6f50b6717456ce772886c3e6686e020a456dc1a3623 ? 2 : 0;\r\n  }\r\n\r\n  function o_minerador(uint a) constant returns (uint) {\r\n    bytes32 hash = sha3(a);\r\n    for (uint i = 0; i < 32; ++i)\r\n      if (hash[i] != 0)\r\n        break;\r\n    return i;\r\n  }\r\n\r\n  function o_automata(uint inicio) constant returns (uint) {\r\n    uint[ 8] memory r = [uint(0),1,0,1,1,0,1,0];\r\n    uint[16] memory x = [uint(0),1,1,0,0,1,1,0,0,1,1,0,0,1,1,0];\r\n    uint[16] memory y = [uint(0),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\r\n\r\n    for (uint k = 0; k < 16; ++k)\r\n      x[k] = inicio / (2 ** k) % 2;\r\n\r\n    for (uint t = 0; t < 8; ++t) {\r\n      for (uint p = 0; p < 16; ++p)\r\n        y[p] = r[(p == 0 ? 0 : x[p-1]) + x[p] * 2 + (p == 15 ? 0 : x[p+1]) * 4];\r\n      for (uint q = 0; q < 16; ++q)\r\n        x[q] = y[q];\r\n    }\r\n\r\n    uint s = 0;\r\n    for (uint i = 0; i < 16; ++i)\r\n      s += x[i];\r\n\r\n    return s <= 9 ? 0 : s <= 13 ? 1 : s <= 15 ? 4 : 8;\r\n  }\r\n\r\n  function o_labirinto(uint acoes) constant returns (uint) {\r\n    uint map = 0xfff8800882288008c048fdf8e038e838e138fdf8f9f8fbf8fff8000000000000;\r\n    uint x = 6;\r\n    uint y = 11;\r\n\r\n    for (uint i = 0; i < 64; ++i) {\r\n      uint acao = acoes / (2 ** (256 - (i+1)*4)) % 0x10;\r\n\r\n      if (acao == 0) y -= 1;\r\n      if (acao == 1) x += 1;\r\n      if (acao == 2) y += 1;\r\n      if (acao == 3) x -= 1;\r\n\r\n      uint index = 2 ** (255 - (y * 16 + x));\r\n\r\n      if (map / index % 2 == 1)\r\n        break;\r\n\r\n      map = map + index;\r\n    }\r\n\r\n    return i / 8;\r\n  }\r\n\r\n  function o_deus(bytes32 a, bytes32 b) constant returns (uint) {\r\n    return a != b && sha3(a) == sha3(b) ? 999999999 : 0;\r\n  }\r\n\r\n  function responder\r\n    ( uint a\r\n    , uint b\r\n    , uint c\r\n    , bytes5 d\r\n    , bytes14 e\r\n    , bytes5 f\r\n    , uint g\r\n    , uint h\r\n    , uint i\r\n    , uint j\r\n    , uint k\r\n    , uint l\r\n    ) {\r\n    uint pontos = 0;\r\n    pontos += o_aprendiz(a);\r\n    pontos += o_algoritmo(b);\r\n    pontos += a_incognita(c);\r\n    pontos += a_empresa(d);\r\n    pontos += o_desafiante(e);\r\n    pontos += a_palavra(f);\r\n    pontos += o_velho_problema(g, h);\r\n    pontos += o_novo_problema(i);\r\n    pontos += o_minerador(j);\r\n    pontos += o_automata(k);\r\n    pontos += o_labirinto(l);\r\n    address desafiado = 0xD12A749b6585Cb7605Aeb89455CD33aAeda1EbDB;\r\n    if (pontos >= 20)\r\n      if (desafiado.send(this.balance))\r\n        return;\r\n  }\r\n\r\n  function() payable {}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"bytes32\"},{\"name\":\"b\",\"type\":\"bytes32\"}],\"name\":\"o_deus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"},{\"name\":\"c\",\"type\":\"uint256\"},{\"name\":\"d\",\"type\":\"bytes5\"},{\"name\":\"e\",\"type\":\"bytes14\"},{\"name\":\"f\",\"type\":\"bytes5\"},{\"name\":\"g\",\"type\":\"uint256\"},{\"name\":\"h\",\"type\":\"uint256\"},{\"name\":\"i\",\"type\":\"uint256\"},{\"name\":\"j\",\"type\":\"uint256\"},{\"name\":\"k\",\"type\":\"uint256\"},{\"name\":\"l\",\"type\":\"uint256\"}],\"name\":\"responder\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"o_novo_problema\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"o_aprendiz\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"o_velho_problema\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"inicio\",\"type\":\"uint256\"}],\"name\":\"o_automata\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"o_algoritmo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"palavra\",\"type\":\"bytes5\"}],\"name\":\"a_palavra\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nome\",\"type\":\"bytes14\"}],\"name\":\"o_desafiante\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nome\",\"type\":\"bytes5\"}],\"name\":\"a_empresa\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"o_minerador\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"acoes\",\"type\":\"uint256\"}],\"name\":\"o_labirinto\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"a_incognita\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"DesafioStone","CompilerVersion":"v0.4.10+commit.f0d539ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7e3cf2f72fa7efcd919013ee95c86dbfc74811a4f6146e3080dc14cc5c684c1c"}]}