{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.6;\r\n\r\ncontract FourWaySplit {\r\n\r\n  // balances and account list are publicly visible\r\n\r\n  mapping(address => uint) public beneficiaryBalance;\r\n  address[4] public beneficiaryList;\r\n\r\n  // emit events for real-time listeners and state history\r\n\r\n  event LogReceived(address sender, uint amount);\r\n  event LogWithdrawal(address beneficiary, uint amount);\r\n\r\n  // give the constructor four addresses for the split\r\n\r\n  function FourWaySplit(address addressA, address addressB, address addressC, address addressD) {\r\n    beneficiaryList[0]=addressA;\r\n    beneficiaryList[1]=addressB;\r\n    beneficiaryList[2]=addressC;\r\n    beneficiaryList[3]=addressD;\r\n  }\r\n\r\n  // send ETH\r\n\r\n  function pay() \r\n    public\r\n    payable\r\n    returns(bool success)\r\n  {\r\n    if(msg.value==0) throw;\r\n\r\n    // ignoring values not evenly divisible by 4. We round down and keep the change.\r\n    // (No way to remove the loose change, so it's effectively destroyed.)\r\n\r\n    uint forth = msg.value / 4;\r\n\r\n    beneficiaryBalance[beneficiaryList[0]] += forth;\r\n    beneficiaryBalance[beneficiaryList[1]] += forth;\r\n    beneficiaryBalance[beneficiaryList[2]] += forth;\r\n    beneficiaryBalance[beneficiaryList[3]] += forth;\r\n    LogReceived(msg.sender, msg.value);\r\n    return true;\r\n  }\r\n\r\n  function withdraw(uint amount)\r\n    public\r\n    returns(bool success)\r\n  {\r\n    if(beneficiaryBalance[msg.sender] < amount) throw; // insufficient funds\r\n    beneficiaryBalance[msg.sender] -= amount;          // Optimistic accounting.\r\n    if(!msg.sender.send(amount)) throw;                // failed to transfer funds\r\n    LogWithdrawal(msg.sender, amount);\r\n    return true;\r\n  }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"pay\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"beneficiaryBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"beneficiaryList\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"addressA\",\"type\":\"address\"},{\"name\":\"addressB\",\"type\":\"address\"},{\"name\":\"addressC\",\"type\":\"address\"},{\"name\":\"addressD\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogWithdrawal\",\"type\":\"event\"}]","ContractName":"FourWaySplit","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000178bc6a8fff5df6e8b1a358b0bc37647dc02e57d000000000000000000000000286404bff1d2bdbf6c50363667631284bb3d0205000000000000000000000000f12cbaa17d0623d6fc90c33902221834b148a7c800000000000000000000000000c016c2bde2f068142f0887889306fc2a447b39","Library":"","SwarmSource":"bzzr://b95042116d83e4d587bc24768d305dfc0f2a393641bf57d37c5a9c143c8e57da"}]}