{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.11;\r\n\r\n// Â© 2016 Ambisafe Inc. No reuse without written permission is allowed.\r\n\r\ncontract CrypviserICO {\r\n    struct PendingOperation {\r\n        mapping(address => bool) hasConfirmed;\r\n        uint yetNeeded;\r\n    }\r\n\r\n    mapping(bytes32 => PendingOperation) pending;\r\n    uint public required;\r\n    mapping(address => bool) public isOwner;\r\n    address[] public owners;\r\n\r\n    event Confirmation(address indexed owner, bytes32 indexed operation, bool completed);\r\n\r\n    function CrypviserICO(address[] _owners, uint _required) {\r\n        if (_owners.length == 0 || _required == 0 || _required > _owners.length) {\r\n            selfdestruct(msg.sender);\r\n        }\r\n        required = _required;\r\n        for (uint i = 0; i < _owners.length; i++) {\r\n            owners.push(_owners[i]);\r\n            isOwner[_owners[i]] = true;\r\n        }\r\n    }\r\n\r\n    function hasConfirmed(bytes32 _operation, address _owner) constant returns(bool) {\r\n        return pending[_operation].hasConfirmed[_owner];\r\n    }\r\n    \r\n    function n() constant returns(uint) {\r\n        return required;\r\n    }\r\n    \r\n    function m() constant returns(uint) {\r\n        return owners.length;\r\n    }\r\n\r\n    modifier onlyowner() {\r\n        if (!isOwner[msg.sender]) {\r\n            throw;\r\n        }\r\n        _;\r\n    }\r\n\r\n    modifier onlymanyowners(bytes32 _operation) {\r\n        if (_confirmAndCheck(_operation)) {\r\n            _;\r\n        }\r\n    }\r\n\r\n    function _confirmAndCheck(bytes32 _operation) onlyowner() internal returns(bool) {\r\n        if (hasConfirmed(_operation, msg.sender)) {\r\n            throw;\r\n        }\r\n\r\n        var pendingOperation = pending[_operation];\r\n        if (pendingOperation.yetNeeded == 0) {\r\n            pendingOperation.yetNeeded = required;\r\n        }\r\n\r\n        if (pendingOperation.yetNeeded <= 1) {\r\n            Confirmation(msg.sender, _operation, true);\r\n            _removeOperation(_operation);\r\n            return true;\r\n        } else {\r\n            Confirmation(msg.sender, _operation, false);\r\n            pendingOperation.yetNeeded--;\r\n            pendingOperation.hasConfirmed[msg.sender] = true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function _removeOperation(bytes32 _operation) internal {\r\n        var pendingOperation = pending[_operation];\r\n        for (uint i = 0; i < owners.length; i++) {\r\n            if (pendingOperation.hasConfirmed[owners[i]]) {\r\n                pendingOperation.hasConfirmed[owners[i]] = false;\r\n            }\r\n        }\r\n        delete pending[_operation];\r\n    }\r\n\r\n    function send(address _to, uint _value) onlymanyowners(sha3(msg.data)) returns(bool) {\r\n        return _to.send(_value);\r\n    }\r\n    \r\n    event Received(address indexed addr, uint value);\r\n    function () payable {\r\n        if (msg.value > 0) {\r\n            Received(msg.sender, msg.value);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"n\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"m\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_operation\",\"type\":\"bytes32\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"hasConfirmed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"required\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owners\",\"type\":\"address[]\"},{\"name\":\"_required\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operation\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"completed\",\"type\":\"bool\"}],\"name\":\"Confirmation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"}]","ContractName":"CrypviserICO","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000040000000000000000000000005d9b1263fba7ae4e9eca978e95c94361df3872f8000000000000000000000000874e6b766fae6d9a07a0aaa4db94613113646d14000000000000000000000000001355df41b0955d04123e37425256dbbacf013200000000000000000000000000155d5711fa4ffa6c2e7f1c6d46dc071981fa61","Library":"","SwarmSource":"bzzr://a7f1546be89a4dd69a378a45470027de0b964f9bd148954da126a663049cfc3e"}]}