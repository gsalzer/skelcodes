{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract RedEnvelope{\r\n    address owner;\r\n    uint remainSize = 0;\r\n    uint min = 1000000000000000; // 0.001 ETH\r\n    uint max;\r\n    uint256 money;\r\n    mapping (address => uint) earned;\r\n    \r\n    function RedEnvelope() {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function despoit(uint count) returns (uint){\r\n        if (msg.sender != owner) {\r\n            throw;\r\n        }\r\n        remainSize += count;\r\n        return remainSize;\r\n    }\r\n    \r\n    function randomGen(uint seed, uint max) constant returns (uint randomNumber) {\r\n        return(uint(sha3(block.blockhash(block.number - 1), seed)) % max);\r\n    }\r\n\r\n    function multiBlockRandomGen(uint seed, uint size) constant returns (uint randomNumber) {\r\n        uint n = 0;\r\n        for (uint i = 0; i < size; i++){\r\n            if (uint(sha3(block.blockhash(block.number - i - 1), seed )) % 2 == 0)\r\n                n += 2 ** i ;\r\n        }\r\n        return n;\r\n    }\r\n    \r\n    function goodluck(uint seed) payable {\r\n        if (earned[msg.sender] == 1) {\r\n            throw;\r\n        }\r\n        if (remainSize == 0) {\r\n            throw;\r\n        }\r\n        earned[msg.sender] = 1;\r\n        remainSize -= 1;\r\n        if (remainSize == 0) {\r\n            msg.sender.transfer(this.balance);\r\n            return;\r\n        }\r\n        max = this.balance / remainSize * 2;\r\n        money = randomGen(seed, max);\r\n        if (money < min) {\r\n            money = min;\r\n        }\r\n        msg.sender.transfer(money);\r\n    }\r\n    \r\n    function goodbye() {\r\n        if (msg.sender != owner) {\r\n            throw;\r\n        }\r\n        suicide(owner);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"despoit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"seed\",\"type\":\"uint256\"},{\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"multiBlockRandomGen\",\"outputs\":[{\"name\":\"randomNumber\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"goodluck\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"goodbye\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"seed\",\"type\":\"uint256\"},{\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomGen\",\"outputs\":[{\"name\":\"randomNumber\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"RedEnvelope","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6004d93bd99c852d31e9f84c06535635b8cbadb3eaaf21dfeb3834ea5e1c0b97"}]}