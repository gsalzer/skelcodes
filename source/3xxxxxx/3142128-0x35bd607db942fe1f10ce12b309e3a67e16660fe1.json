{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.9;\r\n\r\ncontract OrangeGov_Main {\r\n    address public currentContract;\r\n    \r\n\tmapping(address=>mapping(string=>bool)) permissions;\r\n\tmapping(address=>mapping(string=>bool)) userStatuses;\r\n\tmapping(string=>address) contractIDs;\r\n\tmapping(string=>bool) contractIDExists;\r\n\taddress[] contractArray; //the contracts in the above 2 tables\r\n\tfunction OrangeGov_Main () {\r\n\t    permissions[msg.sender][\"all\"]=true;\r\n\t}\r\n\tfunction getHasPermission(address user, string permissionName, string userStatusAllowed) returns (bool hasPermission){ //for use between contracts\r\n\t    return permissions[msg.sender][permissionName]||permissions[msg.sender][\"all\"]||userStatuses[msg.sender][userStatusAllowed];\r\n\t}\r\n\tfunction getContractByID(string ID) returns (address addr,bool exists){ //for use between contracts\r\n\t    return (contractIDs[ID],contractIDExists[ID]);\r\n\t}\r\n\t\r\n    modifier permissionRequired(string permissionName,string userStatusAllowed) {\r\n        _; //code will be run; code MUST have variable permissionName(name of permission) and userStatusAllowed(a certain user statu is the only thing necessary)\r\n        if (getHasPermission(msg.sender,permissionName,userStatusAllowed)){\r\n            throw;\r\n        }\r\n    }\r\n    \r\n    function removeFromContractIDArray(address contractToRemove) {\r\n        for (uint x=0;x<contractArray.length-1;x++) {\r\n            if (contractArray[x]==contractToRemove) {\r\n                contractArray[x]=contractArray[contractArray.length-1];\r\n\t            contractArray.length--;\r\n\t            return;\r\n            }\r\n        }\r\n    }\r\n    \r\n\tfunction addContract(string ID,bytes code) permissionRequired(\"addContract\",\"\"){\r\n\t    address addr;\r\n        assembly {\r\n            addr := create(0,add(code,0x20), mload(code))\r\n            jumpi(invalidJumpLabel,iszero(extcodesize(addr)))\r\n        }\r\n        address oldAddr = contractIDs[ID];\r\n\t    contractIDs[ID]=addr;\r\n\t    contractIDExists[ID]=true;\r\n\t    oldAddr.call.gas(msg.gas)(bytes4(sha3(\"changeCurrentContract(address)\")),addr); //if there was a previous contract, tell it the new one's address\r\n\t    addr.call.gas(msg.gas)(bytes4(sha3(\"tellPreviousContract(address)\")),oldAddr); //feed it the address of the previous contract\r\n\t    removeFromContractIDArray(addr);\r\n\t    contractArray.length++;\r\n\t    contractArray[contractArray.length-1]=addr;\r\n\t}\r\n\tfunction removeContract(string ID) permissionRequired(\"removeContract\",\"\"){\r\n\t    contractIDExists[ID]=false;\r\n\t    contractIDs[ID].call.gas(msg.gas)(bytes4(sha3(\"changeCurrentContract(address)\")),currentContract); //make sure people using know it's out of service\r\n\t    removeFromContractIDArray(contractIDs[ID]);\r\n\t}\r\n\tfunction update(bytes code) permissionRequired(\"update\",\"\"){\r\n\t    address addr;\r\n        assembly {\r\n            addr := create(0,add(code,0x20), mload(code))\r\n            jumpi(invalidJumpLabel,iszero(extcodesize(addr)))\r\n        }\r\n        addr.call.gas(msg.gas)(bytes4(sha3(\"tellPreviousContract(address)\")),currentContract);\r\n        currentContract = addr;\r\n        for (uint x=0;x<contractArray.length-1;x++) {\r\n            contractArray[x].call.gas(msg.gas)(bytes4(sha3(\"changeMain(address)\")),currentContract);\r\n        }\r\n\t}\r\n\tfunction tellPreviousContract(address prev) { //called in the update process\r\n\t    \r\n\t}\r\n\tfunction spendEther(address addr, uint256 weiAmt) permissionRequired(\"spendEther\",\"\"){\r\n\t    if (!addr.send(weiAmt)) throw;\r\n\t}\r\n\tfunction givePermission(address addr, string permission) permissionRequired(\"givePermission\",\"\"){\r\n\t    if (getHasPermission(msg.sender,permission,\"\")){\r\n\t        permissions[addr][permission]=true;\r\n\t    }\r\n\t}\r\n\tfunction removePermission(address addr, string permission) permissionRequired(\"removePermission\",\"\"){\r\n\t    permissions[addr][permission]=false;\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"ID\",\"type\":\"string\"}],\"name\":\"getContractByID\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"exists\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ID\",\"type\":\"string\"},{\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"addContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"permission\",\"type\":\"string\"}],\"name\":\"givePermission\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"permission\",\"type\":\"string\"}],\"name\":\"removePermission\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"weiAmt\",\"type\":\"uint256\"}],\"name\":\"spendEther\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ID\",\"type\":\"string\"}],\"name\":\"removeContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"contractToRemove\",\"type\":\"address\"}],\"name\":\"removeFromContractIDArray\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"permissionName\",\"type\":\"string\"},{\"name\":\"userStatusAllowed\",\"type\":\"string\"}],\"name\":\"getHasPermission\",\"outputs\":[{\"name\":\"hasPermission\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"prev\",\"type\":\"address\"}],\"name\":\"tellPreviousContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"OrangeGov_Main","CompilerVersion":"v0.4.9+commit.364da425","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://015b1651eb156b9b3582c8413e5edccc7c72cd7659401b74fb6e863f67f331eb"}]}