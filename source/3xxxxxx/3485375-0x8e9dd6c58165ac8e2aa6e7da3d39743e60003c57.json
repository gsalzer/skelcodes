{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.4;\r\n\r\n//copyright 2017 NewAlchemy\r\n//Written by Dennis Peterson\r\n\r\ncontract AbstractSweeper {\r\n    //abstract:\r\n    function sweep(address token, uint amount) returns (bool);\r\n\r\n    //concrete:\r\n    function () { throw; }\r\n\r\n    Controller controller;\r\n\r\n    function AbstractSweeper(address _controller) {\r\n        controller = Controller(_controller);\r\n    }\r\n\r\n    modifier canSweep() {\r\n        if (msg.sender != controller.authorizedCaller() && msg.sender != controller.owner()) throw;\r\n        if (controller.halted()) throw;\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Token {\r\n    function balanceOf(address a) returns (uint) {return 0;}\r\n    function transfer(address a, uint val) returns (bool) {return false;}\r\n}\r\n\r\ncontract DefaultSweeper is AbstractSweeper {\r\n    function DefaultSweeper(address controller) \r\n             AbstractSweeper(controller) {}\r\n\r\n    function sweep(address _token, uint _amount)  \r\n    canSweep\r\n    returns (bool) {\r\n        Token token = Token(_token);\r\n        uint amount = _amount;\r\n        if (amount > token.balanceOf(this)) amount = token.balanceOf(this);\r\n\r\n        address destination = controller.destination();\r\n\r\n\t// Because sweep is called with delegatecall, this typically\r\n\t// comes from the UserWallet.\r\n        bool success = token.transfer(destination, amount); \r\n        if (success) { \r\n            controller.logSweep(this, _token, _amount);\r\n        } else { \r\n\t    controller.logFailedSweep(msg.sender, _token, _amount);\r\n\t}\r\n        return success;\r\n    }\r\n}\r\n\r\ncontract UserWallet {\r\n    AbstractSweeperList c;\r\n    function UserWallet(address _sweeperlist) {\r\n        c = AbstractSweeperList(_sweeperlist);\r\n    }\r\n\r\n    function sweep(address _token, uint _amount) \r\n    returns (bool) {\r\n        return c.sweeperOf(_token).delegatecall(msg.data);\r\n    }\r\n}\r\n\r\ncontract AbstractSweeperList {\r\n    function sweeperOf(address _token) returns (address);\r\n}\r\n\r\ncontract Controller is AbstractSweeperList {\r\n    address public owner;\r\n    address public authorizedCaller;\r\n\r\n    //destination defaults to same as owner\r\n    //but is separate to allow never exposing cold storage\r\n    address public destination; \r\n\r\n    bool public halted;\r\n\r\n    event LogNewWallet(uint _customer, address receiver);\r\n    event LogSweep(address from, address token, uint amount);\r\n    event LogFailedSweep(address from, address token, uint amount);\r\n    \r\n    modifier onlyOwner() {\r\n        if (msg.sender != owner) throw; \r\n        _;\r\n    }\r\n\r\n    modifier onlyAuthorizedCaller() {\r\n        if (msg.sender != authorizedCaller) throw; \r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmins() {\r\n        if (msg.sender != authorizedCaller && msg.sender != owner) throw; \r\n        _;\r\n    }\r\n\r\n    function Controller() \r\n    {\r\n        owner = msg.sender;\r\n        destination = msg.sender;\r\n        authorizedCaller = msg.sender;\r\n    }\r\n\r\n    function changeAuthorizedCaller(address _newCaller) onlyOwner {\r\n        authorizedCaller = _newCaller;\r\n    }\r\n\r\n    function changeDestination(address _dest) onlyOwner {\r\n        destination = _dest;\r\n    }\r\n\r\n    function changeOwner(address _owner) onlyOwner {\r\n        owner = _owner;\r\n    }\r\n\r\n    function makeWallet(uint _customer) onlyAdmins returns (address wallet)  {\r\n        wallet = address(new UserWallet(this));\r\n        LogNewWallet(_customer, wallet);\r\n    }\r\n\r\n    //assuming halt because caller is compromised\r\n    //so let caller stop for speed, only owner can restart\r\n\r\n    function halt() onlyAdmins {\r\n        halted = true;\r\n    }\r\n\r\n    function start() onlyOwner {\r\n        halted = false;\r\n    }\r\n\r\n    //***********\r\n    //SweeperList\r\n    //***********\r\n    address public defaultSweeper = address(new DefaultSweeper(this));\r\n    mapping (address => address) sweepers;\r\n\r\n    function addSweeper(address _token, address _sweeper) onlyOwner {\r\n        sweepers[_token] = _sweeper;\r\n    }\r\n\r\n    function sweeperOf(address _token) returns (address) {\r\n        address sweeper = sweepers[_token];\r\n        if (sweeper == 0) sweeper = defaultSweeper;\r\n        return sweeper;\r\n    }\r\n\r\n    function logSweep(address from, address token, uint amount) {\r\n        LogSweep(from, token, amount);\r\n    }\r\n    function logFailedSweep(address from, address token, uint amount) {\r\n        LogFailedSweep(from, token, amount);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"logFailedSweep\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newCaller\",\"type\":\"address\"}],\"name\":\"changeAuthorizedCaller\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"sweeperOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dest\",\"type\":\"address\"}],\"name\":\"changeDestination\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"halt\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_customer\",\"type\":\"uint256\"}],\"name\":\"makeWallet\",\"outputs\":[{\"name\":\"wallet\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defaultSweeper\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"logSweep\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_sweeper\",\"type\":\"address\"}],\"name\":\"addSweeper\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authorizedCaller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"destination\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"halted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_customer\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"LogNewWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogSweep\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogFailedSweep\",\"type\":\"event\"}]","ContractName":"Controller","CompilerVersion":"v0.4.10+commit.f0d539ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://373c0869df8eb3f3e532c25e6b5535257462a9451f972ae423d97975e77fa032"}]}