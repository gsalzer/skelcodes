{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract EmailRegex {\r\n  struct State {\r\n    bool accepts;\r\n    function (byte) constant internal returns (State memory) func;\r\n  }\r\n\r\n  string public constant regex = \"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-_]+\\\\.[a-zA-Z]{2,}\";\r\n\r\n  function s0(byte c) constant internal returns (State memory) {\r\n    c = c;\r\n    return State(false, s0);\r\n  }\r\n\r\n  function s1(byte c) constant internal returns (State memory) {\r\n    if (c == 37 || c == 43 || c == 45 || c == 46 || c >= 48 && c <= 57 || c >= 65 && c <= 90 || c == 95 || c >= 97 && c <= 122) {\r\n      return State(false, s2);\r\n    }\r\n\r\n    return State(false, s0);\r\n  }\r\n\r\n  function s2(byte c) constant internal returns (State memory) {\r\n    if (c == 37 || c == 43 || c == 45 || c == 46 || c >= 48 && c <= 57 || c >= 65 && c <= 90 || c == 95 || c >= 97 && c <= 122) {\r\n      return State(false, s3);\r\n    }\r\n    if (c == 64) {\r\n      return State(false, s4);\r\n    }\r\n\r\n    return State(false, s0);\r\n  }\r\n\r\n  function s3(byte c) constant internal returns (State memory) {\r\n    if (c == 37 || c == 43 || c == 45 || c == 46 || c >= 48 && c <= 57 || c >= 65 && c <= 90 || c == 95 || c >= 97 && c <= 122) {\r\n      return State(false, s3);\r\n    }\r\n    if (c == 64) {\r\n      return State(false, s4);\r\n    }\r\n\r\n    return State(false, s0);\r\n  }\r\n\r\n  function s4(byte c) constant internal returns (State memory) {\r\n    if (c >= 46 && c <= 47 || c >= 48 && c <= 57 || c >= 58 && c <= 64 || c >= 65 && c <= 90 || c >= 91 && c <= 95 || c >= 97 && c <= 122) {\r\n      return State(false, s5);\r\n    }\r\n\r\n    return State(false, s0);\r\n  }\r\n\r\n  function s5(byte c) constant internal returns (State memory) {\r\n    if (c == 46) {\r\n      return State(false, s6);\r\n    }\r\n    if (c == 47 || c >= 48 && c <= 57 || c >= 58 && c <= 64 || c >= 65 && c <= 90 || c >= 91 && c <= 95 || c >= 97 && c <= 122) {\r\n      return State(false, s7);\r\n    }\r\n\r\n    return State(false, s0);\r\n  }\r\n\r\n  function s6(byte c) constant internal returns (State memory) {\r\n    if (c == 46) {\r\n      return State(false, s6);\r\n    }\r\n    if (c == 47 || c >= 48 && c <= 57 || c >= 58 && c <= 64 || c >= 91 && c <= 95) {\r\n      return State(false, s7);\r\n    }\r\n    if (c >= 65 && c <= 90 || c >= 97 && c <= 122) {\r\n      return State(false, s8);\r\n    }\r\n\r\n    return State(false, s0);\r\n  }\r\n\r\n  function s7(byte c) constant internal returns (State memory) {\r\n    if (c == 46) {\r\n      return State(false, s6);\r\n    }\r\n    if (c == 47 || c >= 48 && c <= 57 || c >= 58 && c <= 64 || c >= 65 && c <= 90 || c >= 91 && c <= 95 || c >= 97 && c <= 122) {\r\n      return State(false, s7);\r\n    }\r\n\r\n    return State(false, s0);\r\n  }\r\n\r\n  function s8(byte c) constant internal returns (State memory) {\r\n    if (c == 46) {\r\n      return State(false, s6);\r\n    }\r\n    if (c == 47 || c >= 48 && c <= 57 || c >= 58 && c <= 64 || c >= 91 && c <= 95) {\r\n      return State(false, s7);\r\n    }\r\n    if (c >= 65 && c <= 90 || c >= 97 && c <= 122) {\r\n      return State(true, s9);\r\n    }\r\n\r\n    return State(false, s0);\r\n  }\r\n\r\n  function s9(byte c) constant internal returns (State memory) {\r\n    if (c == 46) {\r\n      return State(false, s6);\r\n    }\r\n    if (c == 47 || c >= 48 && c <= 57 || c >= 58 && c <= 64 || c >= 91 && c <= 95) {\r\n      return State(false, s7);\r\n    }\r\n    if (c >= 65 && c <= 90 || c >= 97 && c <= 122) {\r\n      return State(true, s10);\r\n    }\r\n\r\n    return State(false, s0);\r\n  }\r\n\r\n  function s10(byte c) constant internal returns (State memory) {\r\n    if (c == 46) {\r\n      return State(false, s6);\r\n    }\r\n    if (c == 47 || c >= 48 && c <= 57 || c >= 58 && c <= 64 || c >= 91 && c <= 95) {\r\n      return State(false, s7);\r\n    }\r\n    if (c >= 65 && c <= 90 || c >= 97 && c <= 122) {\r\n      return State(true, s10);\r\n    }\r\n\r\n    return State(false, s0);\r\n  }\r\n\r\n  function matches(string input) constant returns (bool) {\r\n    var cur = State(false, s1);\r\n\r\n    for (uint i = 0; i < bytes(input).length; i++) {\r\n      var c = bytes(input)[i];\r\n\r\n      cur = cur.func(c);\r\n    }\r\n\r\n    return cur.accepts;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"input\",\"type\":\"string\"}],\"name\":\"matches\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"regex\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"}]","ContractName":"EmailRegex","CompilerVersion":"v0.4.12+commit.194ff033","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fef0829e0701fe76d5779f44c8b3a08a8a7f5f92296b71ee39bacd57106044cc"}]}