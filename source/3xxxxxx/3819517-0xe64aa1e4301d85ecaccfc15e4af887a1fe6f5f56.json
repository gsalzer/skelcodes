{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract MiningRig {\r\n    // 警告\r\n    string public warning = \"請各位要有耐心等候交易完成喔\";\r\n    \r\n    // 合約部署者\r\n    address public owner = 0x0;\r\n    \r\n    // 合約停止合資的區塊，初始 0 \r\n    uint public closeBlock = 0;\r\n    \r\n    // 大家一起合資的總新台幣\r\n    uint public totalNTD = 0;\r\n    \r\n    // 這個合約過去總共被提領過的 reward\r\n    uint public totalWithdrew = 0;\r\n    \r\n    // 使用者各自合資的新台幣\r\n    mapping(address => uint) public usersNTD;\r\n    \r\n    // 使用者提領過的 ether\r\n    mapping(address => uint) public usersWithdrew;\r\n    \r\n    // 只能 owner 才行 的修飾子\r\n    modifier onlyOwner () {\r\n        assert(owner == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    // 在關閉合資前才行 的修飾子\r\n    modifier beforeCloseBlock () {\r\n        assert(block.number <= closeBlock);\r\n        _;\r\n    }\r\n    \r\n    // 在關閉合資後才行 的修飾子\r\n    modifier afterCloseBlock () {\r\n        assert(block.number > closeBlock);\r\n        _;\r\n    }\r\n    \r\n    // 只有有合資過的人才行 的修飾子\r\n    modifier onlyMember () {\r\n        assert(usersNTD[msg.sender] != 0);\r\n        _;\r\n    }\r\n    \r\n    // 建構子\r\n    function MiningRig () {\r\n        owner = msg.sender;\r\n        closeBlock = block.number + 5760; // 一天的 block 數\r\n    }\r\n    \r\n    // 合資，由舉辦人註冊 (因為是合資新台幣，所以必須中心化)\r\n    function Register (address theUser, uint NTD) onlyOwner beforeCloseBlock {\r\n        usersNTD[theUser] += NTD;\r\n        totalNTD += NTD;\r\n    }\r\n    \r\n    // 反合資\r\n    function Unregister (address theUser, uint NTD) onlyOwner beforeCloseBlock {\r\n        assert(usersNTD[theUser] >= NTD);\r\n        \r\n        usersNTD[theUser] -= NTD;\r\n        totalNTD -= NTD;\r\n    }\r\n    \r\n    // 提領所分配之以太幣\r\n    function Withdraw () onlyMember afterCloseBlock {\r\n        // 這個合約曾經得到過的 ether 等於現有 balance + 曾經被提領過的\r\n        uint everMined = this.balance + totalWithdrew;\r\n        \r\n        // 這個 user 總共終究可以領的\r\n        uint totalUserCanWithdraw = everMined * usersNTD[msg.sender] / totalNTD;\r\n        \r\n        // 這個 user 現在還可以領的\r\n        uint userCanWithdrawNow = totalUserCanWithdraw - usersWithdrew[msg.sender];\r\n        \r\n        // 防止 reentrance 攻擊，先改狀態\r\n        totalWithdrew += userCanWithdrawNow;\r\n        usersWithdrew[msg.sender] += userCanWithdrawNow;\r\n\r\n        assert(userCanWithdrawNow > 0);\r\n        \r\n        msg.sender.transfer(userCanWithdrawNow);\r\n    }\r\n    \r\n    // 貼現轉讓\r\n    // 轉讓之前必須把能領的 ether 領完\r\n    function Cashing (address targetAddress, uint permilleToCashing) onlyMember afterCloseBlock {\r\n        //permilleToCashing 是千分比\r\n        assert(permilleToCashing <= 1000);\r\n        assert(permilleToCashing > 0);\r\n        \r\n        // 這個合約曾經得到過的 ether 等於現有 balance + 曾經被提領過的\r\n        uint everMined = this.balance + totalWithdrew;\r\n        \r\n        // 這個要發起轉讓的 user 總共終究可以領的\r\n        uint totalUserCanWithdraw = everMined * usersNTD[msg.sender] / totalNTD;\r\n        \r\n        // 這個要發起轉讓的 user 現在還可以領的\r\n        uint userCanWithdrawNow = totalUserCanWithdraw - usersWithdrew[msg.sender];\r\n        \r\n        // 要接收轉讓的 user 總共終究可以領的\r\n        uint totalTargetUserCanWithdraw = everMined * usersNTD[targetAddress] / totalNTD;\r\n        \r\n        // 要接收轉讓的 user 現在還可以領的\r\n        uint targetUserCanWithdrawNow = totalTargetUserCanWithdraw - usersWithdrew[targetAddress];\r\n        \r\n        // 發起轉讓及接收轉讓之前，雙方皆需要淨空可提領 ether\r\n        assert(userCanWithdrawNow == 0);\r\n        assert(targetUserCanWithdrawNow == 0);\r\n        \r\n        uint NTDToTransfer = usersNTD[msg.sender] * permilleToCashing / 1000;\r\n        uint WithdrewToTransfer = usersWithdrew[msg.sender] * permilleToCashing / 1000;\r\n        \r\n        usersNTD[msg.sender] -= NTDToTransfer;\r\n        usersWithdrew[msg.sender] -= WithdrewToTransfer;\r\n        \r\n        usersNTD[targetAddress] += NTDToTransfer;\r\n        usersWithdrew[targetAddress] += WithdrewToTransfer;\r\n    }\r\n    \r\n    function ContractBalance () constant returns (uint) {\r\n        return this.balance;\r\n    }\r\n    \r\n    function ContractTotalMined() constant returns (uint) {\r\n        return this.balance + totalWithdrew;\r\n    }\r\n    \r\n    function MyTotalNTD () constant returns (uint) {\r\n        return usersNTD[msg.sender];\r\n    }\r\n    \r\n    function MyTotalWithdrew () constant returns (uint) {\r\n        return usersWithdrew[msg.sender];\r\n    }\r\n \r\n    function () payable {}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"theUser\",\"type\":\"address\"},{\"name\":\"NTD\",\"type\":\"uint256\"}],\"name\":\"Register\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalNTD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ContractBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"theUser\",\"type\":\"address\"},{\"name\":\"NTD\",\"type\":\"uint256\"}],\"name\":\"Unregister\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"usersWithdrew\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MyTotalWithdrew\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"usersNTD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"targetAddress\",\"type\":\"address\"},{\"name\":\"permilleToCashing\",\"type\":\"uint256\"}],\"name\":\"Cashing\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closeBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWithdrew\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"warning\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MyTotalNTD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ContractTotalMined\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"MiningRig","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e0b7f173db5c8b094e6d20e117299f03839dd88e2f0b0390dfb8a7ca77fcfc22"}]}