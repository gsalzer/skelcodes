{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    if (msg.sender != owner) {\r\n      throw;\r\n    }\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n\r\n}\r\n\r\ncontract Killable is Ownable {\r\n  function kill() onlyOwner {\r\n    selfdestruct(owner);\r\n  }\r\n}\r\n\r\ncontract ERC20 {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function allowance(address owner, address spender) constant returns (uint);\r\n\r\n  function transfer(address to, uint value) returns (bool ok);\r\n  function transferFrom(address from, address to, uint value) returns (bool ok);\r\n  function approve(address spender, uint value) returns (bool ok);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n  event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\ncontract SafeMath {\r\n  function safeMul(uint a, uint b) internal returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint a, uint b) internal returns (uint) {\r\n    assert(b > 0);\r\n    uint c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint a, uint b) internal returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint a, uint b) internal returns (uint) {\r\n    uint c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function assert(bool assertion) internal {\r\n    if (!assertion) {\r\n      throw;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/// @title Veritaseum Purchase\r\n/// @author Riaan F Venter~ RFVenter~ <msg@rfv.io>\r\ncontract TokenPurchase is Ownable, Killable, SafeMath {\r\n\r\n    uint public constant startTime = 1493130600;            // 2017 April 25th 9:30 EST (14:30 UTC)\r\n    uint public constant closeTime = startTime + 31 days;   // ICO will run for 31 days\r\n    uint public constant price = 33333333333333333;         // Each token has 18 decimal places, just like ether.\r\n    uint private constant priceDayOne = price * 8 / 10;     // Day one price [20 % discount (x * 8 / 10)]\r\n    uint private constant priceDayTwo = price * 9 / 10;     // Day two price [10 % discount (x * 9 / 10)]\r\n\r\n    ERC20 public token;                         // the address of the token \r\n\r\n    // //// time test functionality /////\r\n    // uint public now;                //\r\n    //                                 //\r\n    // function setNow(uint _time) {   //\r\n    //     now = _time;                //\r\n    // }                               //\r\n    // //////////////////////////////////\r\n\r\n    /// @notice Used to buy tokens with Ether\r\n    /// @return The amount of actual tokens purchased\r\n    function purchaseTokens() payable returns (uint) {\r\n        // check if now is within ICO period, or if the amount sent is nothing\r\n        if ((now < startTime) || (now > closeTime) || (msg.value == 0)) throw;\r\n        \r\n        uint currentPrice;\r\n        // only using safeMath for calculations involving external incoming data (to safe gas)\r\n        if (now < (startTime + 1 days)) {       // day one discount\r\n            currentPrice = priceDayOne;\r\n        } \r\n        else if (now < (startTime + 2 days)) {  // day two discount\r\n            currentPrice = priceDayTwo;\r\n        }\r\n        else if (now < (startTime + 12 days)) {\r\n            // 1 % reduction in the discounted rate from day 2 until day 12 (sliding scale per second)\r\n            currentPrice = price - ((startTime + 12 days - now) * price / 100 days);\r\n        }\r\n        else {\r\n            currentPrice = price;\r\n        }\r\n        uint tokens = safeMul(msg.value, 1 ether) / currentPrice;       // only one safeMath check is required for the incoming ether value\r\n\r\n        if (!token.transferFrom(owner, msg.sender, tokens)) throw;      // if there is some error with the token transfer, throw and return the Ether\r\n\r\n        return tokens;                          // after successful purchase, return the amount of tokens purchased value\r\n    }\r\n\r\n    //////////////// owner only functions below\r\n\r\n    /// @notice Withdraw all Ether in this contract\r\n    /// @return True if successful\r\n    function withdrawEther() payable onlyOwner returns (bool) {\r\n        return owner.send(this.balance);\r\n    }\r\n\r\n    /// @notice sets the token that is to be used for this Lottery\r\n    /// @param _token The address of the ERC20 token\r\n    function setToken(address _token) external onlyOwner {     \r\n        token = ERC20(_token);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"purchaseTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closeTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"}]","ContractName":"TokenPurchase","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://321618aeb5746eab458d6d45c8fa4314b055bd6be48e4a677db8c8450c431539"}]}