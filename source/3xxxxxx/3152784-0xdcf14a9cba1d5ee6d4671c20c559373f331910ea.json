{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\n\r\ncontract Lotto {\r\n\r\n    //\tPlay lottery.\r\n    //\tRules:\r\n    //\t-Address plays between minPlay & mayPlay in order to increase stack amount.\r\n    //\t-Address can play many times.\r\n    //\t-A fee is directly withrawn from incoming amounts (see feesPerMillion).\r\n    //\t-As soon as the jackpot goes beyond the target, an address is chosen randomly proportionally to its stack amount.\r\n    //\t-The winner address get paid with the jackpot.\r\n    //\t-gameNumber is increased and minPlay,maxPlay,target get the values from nextMinPlay,nextMaxPlay,nextTarget.\r\n    //\t-nextMinPlay,nextMaxPlay,nextTarget can only be changed by the owner for the next game.\r\n\r\n\r\n    address public owner;\r\n    uint256 public gameNumber;\r\n    uint256 public feesPerMillion;\r\n    uint256 public nextFeesPerMillion;\r\n    uint256 public jackpot;\r\n    uint256 public target;\r\n    uint256 public nextTarget;\r\n    uint256 public minPlay;\r\n    uint256 public nextMinPlay;\r\n    uint256 public maxPlay;\r\n    uint256 public nextMaxPlay;\r\n    mapping(address => uint256) public playersAmounts;\r\n    address[] public playersList;\r\n    uint256 private vMillion;\r\n\r\n\r\n    event newGame(uint256 ts, uint256 game);\r\n    event newPlay(uint256 ts, uint256 game, address player, uint256 grossAmount, uint256 amount, uint256 stack, uint256 jackpot, uint256 target);\r\n    event newWinner(uint256 ts, uint256 game, address player, uint256 amount);\r\n    event forceGame(uint256 ts,  uint256 game);\r\n    event payment(uint256 ts, address addr, uint256 amount, bool status);\r\n\r\n\r\n\r\n    function Lotto(){\r\n        owner=msg.sender;\r\n        gameNumber=1;\r\n        vMillion=1000000;\r\n        feesPerMillion=5000;\r\n        nextFeesPerMillion=feesPerMillion;\r\n        minPlay=1 ether;\r\n        nextMinPlay=minPlay;\r\n        maxPlay=3 ether;\r\n        nextMaxPlay=maxPlay;\r\n        target=10 ether;\r\n        nextTarget=target;\r\n        jackpot=0;\r\n        newGame(block.timestamp, gameNumber);\r\n    }\r\n\r\n\r\n\r\n    function() payable public{}\r\n\r\n\r\n\r\n    function play() payable public {\r\n        if(msg.sender==owner) throw;\r\n        if(msg.value<minPlay || msg.value>maxPlay) throw;\r\n\r\n        if(playersAmounts[msg.sender]==0){\r\n            playersList.push(msg.sender);\r\n        }\r\n        uint256 amount;\r\n        amount=(vMillion-feesPerMillion)*msg.value/vMillion;\r\n        playersAmounts[msg.sender]=playersAmounts[msg.sender]+amount;\r\n        jackpot=jackpot+amount;\r\n        newPlay(block.timestamp, gameNumber, msg.sender, msg.value, amount, playersAmounts[msg.sender], jackpot, target);\r\n        if(jackpot>=target){\r\n            _pickWinner();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function _pickWinner() private{\r\n        uint256 random;\r\n        random=(uint256(sha256(block.blockhash(block.number-1), block.coinbase, block.difficulty, block.gaslimit, block.number, block.timestamp, msg.data, msg.gas, msg.sender, msg.sig, msg.value))%jackpot)+1;\r\n        uint256 playerNumber;\r\n        bool keepGoing;\r\n        playerNumber=0;\r\n        keepGoing=true;\r\n        while(keepGoing && playerNumber<playersList.length){\r\n            if(random<=playersAmounts[playersList[playerNumber]]){\r\n                keepGoing=false;\r\n            }else{\r\n                random=random-playersAmounts[playersList[playerNumber]];\r\n                playerNumber=playerNumber+1;\r\n            }\r\n        }\r\n        if(!keepGoing){\r\n            newWinner(block.timestamp, gameNumber, playersList[playerNumber], jackpot);\r\n            if(playersList[playerNumber].send(jackpot)){\r\n                payment(block.timestamp, playersList[playerNumber], jackpot, true);\r\n            }else{\r\n                payment(block.timestamp, playersList[playerNumber], jackpot, false);\r\n            }\r\n        }\r\n        target=nextTarget;\r\n        minPlay=nextMinPlay;\r\n        maxPlay=nextMaxPlay;\r\n        feesPerMillion=nextFeesPerMillion;\r\n        jackpot=0;\r\n        gameNumber=gameNumber+1;\r\n        for(uint256 i; i<playersList.length; i++){\r\n            playersAmounts[playersList[i]]=0;\r\n        }\r\n        delete playersList;\r\n    }\r\n\r\n\r\n\r\n    function _admin(uint256 cmd, uint256 value) public{\r\n       if(msg.sender!=owner) throw;\r\n       if(cmd==1){\r\n           nextTarget=value;\r\n       }else if(cmd==2){\r\n           nextMinPlay=value;\r\n       }else if(cmd==3){\r\n           nextMaxPlay=value;\r\n       }else if(cmd==4){\r\n           nextFeesPerMillion=value;\r\n       }else if(cmd==5){\r\n           forceGame(block.timestamp, gameNumber);\r\n           _pickWinner();\r\n       }\r\n    }\r\n\r\n\r\n\r\n    function _withdraw(address destination, uint256 value) public{\r\n       if(msg.sender!=owner) throw;\r\n       if(value>=(this.balance-jackpot)) throw;\r\n       if(destination.send(value)){\r\n           payment(block.timestamp, destination, value, true);\r\n       }else{\r\n           payment(block.timestamp, destination, value, false);\r\n       }\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"cmd\",\"type\":\"uint256\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"_admin\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextMinPlay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feesPerMillion\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextTarget\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"playersAmounts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"jackpot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playersList\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPlay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"play\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"destination\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"_withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gameNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextMaxPlay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minPlay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextFeesPerMillion\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ts\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"game\",\"type\":\"uint256\"}],\"name\":\"newGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ts\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"game\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"grossAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"stack\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"jackpot\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"target\",\"type\":\"uint256\"}],\"name\":\"newPlay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ts\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"game\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"newWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ts\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"game\",\"type\":\"uint256\"}],\"name\":\"forceGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"ts\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"payment\",\"type\":\"event\"}]","ContractName":"Lotto","CompilerVersion":"v0.4.10-nightly.2017.2.3+commit.5ce79609","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5520bbba2e22420b54550b6c545777e250e9aaacef1e578551bfac09515a2b42"}]}