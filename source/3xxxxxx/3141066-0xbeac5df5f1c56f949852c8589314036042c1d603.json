{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\nlibrary ArrayLib {\r\n  // Inserts to keep array sorted (assumes input array is sorted)\r\n\tfunction insertInPlace(uint8[] storage self, uint8 n) {\r\n\t\tuint8 insertingIndex = 0;\r\n\r\n\t\twhile (self.length > 0 && insertingIndex < self.length && self[insertingIndex] < n) {\r\n\t\t\tinsertingIndex += 1;\r\n\t\t}\r\n\r\n\t\tself.length += 1;\r\n\t\tfor (uint8 i = uint8(self.length) - 1; i > insertingIndex; i--) {\r\n\t\t\tself[i] = self[i - 1];\r\n\t\t}\r\n\r\n\t\tself[insertingIndex] = n;\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"uint8[] storage\"},{\"name\":\"n\",\"type\":\"uint8\"}],\"name\":\"insertInPlace\",\"outputs\":[],\"payable\":false,\"type\":\"function\"}]","ContractName":"ArrayLib","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://74ed5f75fb7129076c2a44177259c0707d3c7474351a4d15ea59dc93c1c45d1e"}]}