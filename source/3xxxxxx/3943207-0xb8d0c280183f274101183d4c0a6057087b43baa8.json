{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\n\r\n\r\ncontract Token \r\n{\r\n\r\n    \r\n    function totalSupply() constant returns (uint256 ) {\r\n      return;\r\n    }\r\n\r\n    \r\n    \r\n    function balanceOf(address ) constant returns (uint256 ) {\r\n      return;\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    \r\n    function transfer(address , uint256 ) returns (bool ) {\r\n      return;\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    function transferFrom(address , address , uint256 ) returns (bool ) {\r\n      return;\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    \r\n    function approve(address , uint256 ) returns (bool ) {\r\n      return;\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    function allowance(address , address ) constant returns (uint256 ) {\r\n      return;\r\n    }\r\n\r\n\r\n    event Transfer(address indexed , address indexed , uint256 );\r\n    event Approval(address indexed , address indexed , uint256 );\r\n}\r\n\r\ncontract StdToken is Token \r\n{\r\n\r\n     mapping(address => uint256) balances;\r\n     mapping (address => mapping (address => uint256)) allowed;\r\n\r\n     uint256 public allSupply = 0;\r\n\r\n\r\n     function transfer(address _to, uint256 _value) returns (bool success) \r\n     {\r\n          if((balances[msg.sender] >= _value) && (balances[_to] + _value > balances[_to])) \r\n          {\r\n               balances[msg.sender] -= _value;\r\n               balances[_to] += _value;\r\n\r\n               Transfer(msg.sender, _to, _value);\r\n               return true;\r\n          } \r\n          else \r\n          { \r\n               return false; \r\n          }\r\n     }\r\n\r\n     function transferFrom(address _from, address _to, uint256 _value) returns (bool success) \r\n     {\r\n          if((balances[_from] >= _value) && (allowed[_from][msg.sender] >= _value) && (balances[_to] + _value > balances[_to])) \r\n          {\r\n               balances[_to] += _value;\r\n               balances[_from] -= _value;\r\n               allowed[_from][msg.sender] -= _value;\r\n\r\n               Transfer(_from, _to, _value);\r\n               return true;\r\n          } \r\n          else \r\n          { \r\n               return false; \r\n          }\r\n     }\r\n\r\n     function balanceOf(address _owner) constant returns (uint256 balance) \r\n     {\r\n          return balances[_owner];\r\n     }\r\n\r\n     function approve(address _spender, uint256 _value) returns (bool success) \r\n     {\r\n          allowed[msg.sender][_spender] = _value;\r\n          Approval(msg.sender, _spender, _value);\r\n\r\n          return true;\r\n     }\r\n\r\n     function allowance(address _owner, address _spender) constant returns (uint256 remaining) \r\n     {\r\n          return allowed[_owner][_spender];\r\n     }\r\n\r\n     function totalSupply() constant returns (uint256 supplyOut) \r\n     {\r\n          supplyOut = allSupply;\r\n          return;\r\n     }\r\n}\r\n\r\ncontract ReputationToken is StdToken {\r\n     string public name = \"EthlendReputationToken\";\r\n     uint public decimals = 18;\r\n     string public symbol = \"CRE\";\r\n\r\n     address public creator = 0x0;\r\n\r\n     function ReputationToken(){\r\n          creator = msg.sender;\r\n     }\r\n\r\n     function changeCreator(address newCreator){\r\n          if(msg.sender!=creator)throw;\r\n\r\n          creator = newCreator;\r\n     }\r\n\r\n     function issueTokens(address forAddress, uint tokenCount) returns (bool success){\r\n          if(msg.sender!=creator)throw;\r\n          \r\n          if(tokenCount==0) {\r\n               success = false;\r\n               return ;\r\n          }\r\n\r\n          balances[forAddress]+=tokenCount;\r\n          allSupply+=tokenCount;\r\n\r\n          success = true;\r\n          return;\r\n     }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supplyOut\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"forAddress\",\"type\":\"address\"},{\"name\":\"tokenCount\",\"type\":\"uint256\"}],\"name\":\"issueTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"changeCreator\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"ReputationToken","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c835a65c6815286cddbcd6325b6791fcc53929252f2d64ebb113ea14181725e2"}]}