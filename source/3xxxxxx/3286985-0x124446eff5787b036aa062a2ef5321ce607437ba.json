{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\ncontract mortal {\r\n\taddress owner;\r\n\r\n\tfunction mortal() {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tfunction kill()  {\r\n\t    if(msg.sender==owner)\r\n\t\t    suicide(owner);\r\n\t}\r\n}\r\n\r\ncontract Aquarium{\r\n  function receive(address receiver, uint8 animalType, uint32[] ids) payable {}\r\n}\r\n\r\n\r\ncontract Intermediary is mortal{\r\n  Aquarium aquarium;\r\n  uint[] values;\r\n  \r\n  function Intermediary(){\r\n    \r\n    values =  [95000000000000000, 190000000000000000, 475000000000000000, 950000000000000000, 4750000000000000000];\r\n  }\r\n  function transfer(uint8[] animalTypes, uint8[] numsXType, uint32[] ids) payable{\r\n    uint needed;\r\n     for(uint8 i = 0; i < animalTypes.length; i++){\r\n      needed+=values[animalTypes[i]]*numsXType[i];\r\n    }\r\n    if (msg.value<needed) throw;\r\n    \r\n    uint8 from;\r\n    for(i = 0; i < animalTypes.length; i++){\r\n      aquarium.receive.value(values[animalTypes[i]]*numsXType[i])(msg.sender,animalTypes[i],slice(ids,from,numsXType[i]));\r\n      from+=numsXType[i];\r\n    }\r\n  }\r\n  \r\n  function setAquarium(address aqua){\r\n      if(msg.sender==owner)\r\n        aquarium = Aquarium(aqua);\r\n  }\r\n  \r\n  function slice(uint32[] array, uint8 from, uint8 number) returns (uint32[] sliced){\r\n    sliced = new uint32[](number);\r\n    for(uint8 i = from; i < from+number; i++){\r\n      sliced[i-from] = array[i];\r\n    }\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"animalTypes\",\"type\":\"uint8[]\"},{\"name\":\"numsXType\",\"type\":\"uint8[]\"},{\"name\":\"ids\",\"type\":\"uint32[]\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"aqua\",\"type\":\"address\"}],\"name\":\"setAquarium\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"array\",\"type\":\"uint32[]\"},{\"name\":\"from\",\"type\":\"uint8\"},{\"name\":\"number\",\"type\":\"uint8\"}],\"name\":\"slice\",\"outputs\":[{\"name\":\"sliced\",\"type\":\"uint32[]\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"Intermediary","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a46da0fd6199f9574ca5f8eb0585d2a5ab6c0013dfeca1b1c0b25e3bba20b7a2"}]}