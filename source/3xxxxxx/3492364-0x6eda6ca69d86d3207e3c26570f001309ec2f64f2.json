{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\n\r\ncontract PreICO {\r\n    bool public isPreIco;\r\n    address manager;\r\n\r\n    uint256 maxPreOrderAmount = 500000000000000000000; //in wei\r\n    uint256 maxAmountSupply = 1875000000000000000000;\r\n\r\n    struct dataHolder {\r\n        uint256 balance;\r\n        bool init;\r\n    }\r\n    mapping(address => dataHolder) holders;\r\n    address[] listHolders;\r\n\r\n    function PreICO(){\r\n        manager = msg.sender;\r\n        isPreIco = false;\r\n    }\r\n\r\n    modifier isManager(){\r\n        if (msg.sender!=manager) throw;\r\n        _;\r\n    }\r\n\r\n    function kill() isManager {\r\n        suicide(manager);\r\n    }\r\n\r\n    function getMoney() isManager {\r\n        if(manager.send(this.balance)==false) throw;\r\n    }\r\n\r\n    function startPreICO() isManager {\r\n        isPreIco = true;\r\n    }\r\n\r\n    function stopPreICO() isManager {\r\n        isPreIco = false;\r\n    }\r\n\r\n    function countHolders() constant returns(uint256){\r\n        return listHolders.length;\r\n    }\r\n\r\n    function getItemHolder(uint256 index) constant returns(address){\r\n        if(index >= listHolders.length || listHolders.length == 0) return address(0x0);\r\n        return listHolders[index];\r\n    }\r\n\r\n    function balancsHolder(address who) constant returns(uint256){\r\n        return holders[who].balance;\r\n    }\r\n\r\n    function() payable\r\n    {\r\n        if(isPreIco == false) throw;\r\n\r\n        uint256 amount = msg.value;\r\n\r\n        uint256 return_amount = 0;\r\n\r\n        if(this.balance + msg.value > maxAmountSupply){\r\n            amount = maxAmountSupply - this.balance ;\r\n            return_amount = msg.value - amount;\r\n        }\r\n\r\n        if(holders[msg.sender].init == false){\r\n            listHolders.push(msg.sender);\r\n            holders[msg.sender].init = true;\r\n        }\r\n\r\n        if((amount+holders[msg.sender].balance) > maxPreOrderAmount){\r\n            return_amount += ((amount+holders[msg.sender].balance) - maxPreOrderAmount);\r\n            holders[msg.sender].balance = maxPreOrderAmount;\r\n        }\r\n        else{\r\n            holders[msg.sender].balance += amount;\r\n        }\r\n\r\n        if(return_amount>0){\r\n            if(msg.sender.send(return_amount)==false) throw;\r\n        }\r\n\r\n        if(this.balance == maxAmountSupply){\r\n            isPreIco = false;\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"countHolders\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getItemHolder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopPreICO\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getMoney\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startPreICO\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPreIco\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balancsHolder\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"PreICO","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bc1da7aef0b154396999414f87a0bb7081bdc95abb2d77dba4077b766e007de4"}]}