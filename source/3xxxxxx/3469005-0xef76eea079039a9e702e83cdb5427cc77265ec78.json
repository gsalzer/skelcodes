{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.7;\r\n\r\ncontract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }\r\n\r\ncontract Token {\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n  event TotalSupplySet(uint256 _amount);\r\n  event BlockLockSet(uint256 _value);\r\n  event NewOwner(address _newOwner);\r\n  event NewSupplyAdjuster(address _newSupplyAdjuster);\r\n\r\n  modifier onlyOwner {\r\n    if (msg.sender == owner) {\r\n      _;\r\n    }\r\n  }\r\n\r\n  modifier canAdjustSupply {\r\n    if (msg.sender == supplyAdjuster || msg.sender == owner) {\r\n      _;\r\n    }\r\n  }\r\n\r\n  modifier blockLock(address _sender) {\r\n    if (!isLocked() || _sender == owner) {\r\n      _;\r\n    }\r\n  }\r\n\r\n  modifier validTransfer(address _from, address _to, uint256 _amount) {\r\n    if (isTransferValid(_from, _to, _amount)) {\r\n      _;\r\n    }\r\n  }\r\n\r\n  uint256 public totalSupply;\r\n  string public name;\r\n  uint8 public decimals;\r\n  string public symbol;\r\n  string public version = '0.0.1';\r\n  address public owner;\r\n  address public supplyAdjuster;\r\n  uint256 public lockedUntilBlock;\r\n\r\n  function Token(\r\n    string _tokenName,\r\n    uint8 _decimalUnits,\r\n    string _tokenSymbol,\r\n    uint256 _lockedUntilBlock\r\n    ) {\r\n\r\n    name = _tokenName;\r\n    decimals = _decimalUnits;\r\n    symbol = _tokenSymbol;\r\n    lockedUntilBlock = _lockedUntilBlock;\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {\r\n    tokenRecipient spender = tokenRecipient(_spender);\r\n    if (approve(_spender, _value)) {\r\n      spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function transfer(address _to, uint256 _value)\r\n      blockLock(msg.sender)\r\n      validTransfer(msg.sender, _to, _value)\r\n      returns (bool success) {\r\n\r\n    // transfer tokens\r\n    balances[msg.sender] -= _value;\r\n    balances[_to] += _value;\r\n\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value)\r\n      blockLock(_from)\r\n      validTransfer(_from, _to, _value)\r\n      returns (bool success) {\r\n\r\n    // check sufficient allowance\r\n    if (_value > allowed[_from][msg.sender]) {\r\n      return false;\r\n    }\r\n\r\n    // transfer tokens\r\n    balances[_from] -= _value;\r\n    balances[_to] += _value;\r\n    allowed[_from][msg.sender] -= _value;\r\n\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function balanceOf(address _owner) constant returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value) returns (bool success) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n  function isTransferValid(address _from, address _to, uint256 _amount) internal constant returns (bool isValid) {\r\n    return  balances[_from] >= _amount &&                   // sufficient balance\r\n            isOverflow(balances[_to], _amount) == false &&  // does not overflow recipient balance\r\n            _amount > 0 &&                                  // amount is positive\r\n            _to != address(this)                            // prevent sending tokens to contract\r\n    ;\r\n  }\r\n\r\n  function isOverflow(uint256 _value, uint256 _increase) internal constant returns (bool isOverflow) {\r\n    return _value + _increase < _value;\r\n  }\r\n\r\n  function setBlockLock(uint256 _lockedUntilBlock) onlyOwner returns (bool success) {\r\n    lockedUntilBlock = _lockedUntilBlock;\r\n    BlockLockSet(_lockedUntilBlock);\r\n    return true;\r\n  }\r\n\r\n  function isLocked() constant returns (bool success) {\r\n    return lockedUntilBlock > block.number;\r\n  }\r\n\r\n  function replaceOwner(address _newOwner) onlyOwner returns (bool success) {\r\n    owner = _newOwner;\r\n    NewOwner(_newOwner);\r\n    return true;\r\n  }\r\n\r\n  function setSupplyAdjuster(address _newSupplyAdjuster) onlyOwner returns (bool success) {\r\n    supplyAdjuster = _newSupplyAdjuster;\r\n    NewSupplyAdjuster(_newSupplyAdjuster);\r\n    return true;\r\n  }\r\n\r\n  function setTotalSupply(uint256 _amount) canAdjustSupply returns (bool success) {\r\n    totalSupply = _amount;\r\n    TotalSupplySet(totalSupply);\r\n    return true;\r\n  }\r\n\r\n  function setBalance(address _addr, uint256 _newBalance) canAdjustSupply returns (bool success) {\r\n    uint256 oldBalance = balances[_addr];\r\n\r\n    balances[_addr] = _newBalance;\r\n\r\n    if (oldBalance > _newBalance) {\r\n      Transfer(_addr, this, oldBalance - _newBalance);\r\n    } else if (_newBalance > oldBalance) {\r\n      Transfer(this, _addr, _newBalance - oldBalance);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  mapping (address => uint256) balances;\r\n  mapping (address => mapping (address => uint256)) allowed;\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_newSupplyAdjuster\",\"type\":\"address\"}],\"name\":\"setSupplyAdjuster\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"supplyAdjuster\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lockedUntilBlock\",\"type\":\"uint256\"}],\"name\":\"setBlockLock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"replaceOwner\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockedUntilBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_newBalance\",\"type\":\"uint256\"}],\"name\":\"setBalance\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setTotalSupply\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_lockedUntilBlock\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TotalSupplySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"BlockLockSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newSupplyAdjuster\",\"type\":\"address\"}],\"name\":\"NewSupplyAdjuster\",\"type\":\"event\"}]","ContractName":"Token","CompilerVersion":"v0.4.10+commit.f0d539ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003544b4e0000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://e818528311d6203cfeccca93203a5ea7287daef9b0c59121ee1a5261a0fd7a82"}]}