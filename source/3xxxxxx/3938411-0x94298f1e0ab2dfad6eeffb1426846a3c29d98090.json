{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.2;\r\ncontract owned {\r\n\taddress public owner;\r\n\tfunction owned() {\r\n\t\towner = msg.sender;\r\n\t}\r\n\tfunction changeOwner(address newOwner) onlyowner {\r\n\t\towner = newOwner;\r\n\t}\r\n\tmodifier onlyowner() {\r\n\t\tif (msg.sender==owner) _;\r\n\t}\r\n}\r\ncontract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }\r\ncontract CSToken is owned {\r\n\t/* Public variables of the token */\r\n\tstring public standard = 'Token 0.1';\r\n\tstring public name;\r\n\tstring public symbol;\r\n\tuint8 public decimals;\r\n\tuint256 public totalSupply;\r\n\t/* This creates an array with all balances */\r\n\tmapping (address => uint256) public balanceOf;\r\n\tmapping (address => mapping (address => uint256)) public allowance;\r\n\t/* This generates a public event on the blockchain that will notify clients */\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\t/* Initializes contract with initial supply tokens to the creator of the contract */\r\n\tfunction CSToken(\r\n\tuint256 initialSupply,\r\n\tstring tokenName,\r\n\tuint8 decimalUnits,\r\n\tstring tokenSymbol\r\n\t) {\r\n\t\towner = msg.sender;\r\n\t\tbalanceOf[msg.sender] = initialSupply;              // Give the creator all initial tokens\r\n\t\ttotalSupply = initialSupply;                        // Update total supply\r\n\t\tname = tokenName;                                   // Set the name for display purposes\r\n\t\tsymbol = tokenSymbol;                               // Set the symbol for display purposes\r\n\t\tdecimals = decimalUnits;                            // Amount of decimals for display purposes\r\n\t}\r\n\t/* Send coins */\r\n\tfunction transfer(address _to, uint256 _value) {\r\n\t\tif (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough\r\n\t\tif (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows\r\n\t\tbalanceOf[msg.sender] -= _value;                     // Subtract from the sender\r\n\t\tbalanceOf[_to] += _value;                            // Add the same to the recipient\r\n\t\tTransfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place\r\n\t}\r\n\tfunction mintToken(address target, uint256 mintedAmount) onlyowner {\r\n\t\tbalanceOf[target] += mintedAmount;\r\n\t\ttotalSupply += mintedAmount;\r\n\t\tTransfer(0, owner, mintedAmount);\r\n\t\tTransfer(owner, target, mintedAmount);\r\n\t}\r\n\t/* Allow another contract to spend some tokens in your behalf */\r\n\tfunction approve(address _spender, uint256 _value)\r\n\treturns (bool success) {\r\n\t\tallowance[msg.sender][_spender] = _value;\r\n\t\treturn true;\r\n\t}\r\n\t/* Approve and then comunicate the approved contract in a single tx */\r\n\tfunction approveAndCall(address _spender, uint256 _value, bytes _extraData)\r\n\treturns (bool success) {\r\n\t\ttokenRecipient spender = tokenRecipient(_spender);\r\n\t\tif (approve(_spender, _value)) {\r\n\t\t\tspender.receiveApproval(msg.sender, _value, this, _extraData);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t/* A contract attempts to get the coins */\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n\t\tif (balanceOf[_from] < _value) throw;                 // Check if the sender has enough\r\n\t\tif (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows\r\n\t\tif (_value > allowance[_from][msg.sender]) throw;   // Check allowance\r\n\t\tbalanceOf[_from] -= _value;                          // Subtract from the sender\r\n\t\tbalanceOf[_to] += _value;                            // Add the same to the recipient\r\n\t\tallowance[_from][msg.sender] -= _value;\r\n\t\tTransfer(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\t/* This unnamed function is called whenever someone tries to send ether to it */\r\n\tfunction () {\r\n\t\tthrow;     // Prevents accidental sending of ether\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":false,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"CSToken","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000b4d7942697420546f6b656e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034d79420000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://0b305bb0bb60fc3dce81e632292aee4aadbd450e152a4690711439c590b7f7c1"}]}