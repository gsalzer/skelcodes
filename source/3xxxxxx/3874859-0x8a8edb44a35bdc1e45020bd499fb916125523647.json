{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.10;\r\n\r\ncontract Token {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n\r\n/*  ERC 20 token */\r\ncontract StandardToken is Token {\r\n\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n      if (balances[msg.sender] >= _value && _value > 0) {\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        allowed[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n}\r\n\r\ncontract SMEToken is StandardToken {\r\n\r\n    struct Funder{\r\n        address addr;\r\n        uint amount;\r\n    }\r\n\t\r\n    Funder[] funder_list;\r\n\t\r\n    // metadata\r\n\tuint256 public constant DURATION = 30 days; \r\n    string public constant name = \"SMET\";\r\n    string public constant symbol = \"SMET\";\r\n    uint256 public constant decimals = 0;\r\n    string public version = \"1.0\";\r\n\t\r\n\taddress account1 = '0xcD4fC8e4DA5B25885c7d80b6C846afb6b170B49b';  //50%   Use Cases and Business Applications\r\n\taddress account2 = '0x005CD1194C1F088d9bd8BF9e70e5e44D2194C029';  //24%   Blockchain Technology\r\n    address account3 = '0x00d0ACA6D3D07B3546Fc76E60a90ccdccC7c0e0C';  //6%    Mobile APP,SDK Technology\r\n\taddress account4 = '0x5CA7F20427e4D202777Ea8006dc8f614a289Be2F';  //10%   Mobile Internet Technology\r\n\taddress account5 = '0x7d49c6a86FDE3dE9c47544c58b7b0F035197415b';  //10%   Marketing\r\n\r\n\r\n    uint256 val1 = 1 wei;    // 1\r\n    uint256 val2 = 1 szabo;  // 1 * 10 ** 12\r\n    uint256 val3 = 1 finney; // 1 * 10 ** 15\r\n    uint256 val4 = 1 ether;  // 1 * 10 ** 18\r\n\t\r\n\taddress public creator;\r\n\tuint256 public sellPrice;\r\n\tuint256 public totalSupply;\r\n\tuint256 public startTime = 0;   // unix timestamp seconds\r\n\tuint256 public endTime = 0;     // unix timestamp seconds\r\n\t\r\n    uint256 public constant tokenExchangeRate = 1000; // 1000 SME tokens per 1 ETH\r\n\r\n    function setPrices(uint256 newSellPrice) {\r\n        if (msg.sender != creator) throw;\r\n        sellPrice = newSellPrice;\r\n    }\r\n\t\r\n\tfunction issue(uint256 amount) {\r\n\t    if (msg.sender != creator) throw;\r\n\t\ttotalSupply += amount;\r\n\t}\r\n\t\r\n\tfunction burn(uint256 amount) {\r\n\t    if (msg.sender != creator) throw;\r\n\t\ttotalSupply -= amount;\r\n\t}\r\n\t\r\n\tfunction getBalance() returns (uint) {\r\n        return this.balance;\r\n    } \r\n\t\r\n\tfunction getFunder(uint index) public constant returns(address, uint) {\r\n        Funder f = funder_list[index];\r\n        \r\n        return (\r\n            f.addr,\r\n            f.amount\r\n        ); \r\n    }\r\n\r\n    // constructor\r\n    function SMEToken(\r\n\t    uint256 initialSupply,\r\n        uint256 initialPrice,\r\n\t\tuint256 initialStartTime\r\n\t\t) {\r\n\t    creator = msg.sender;\r\n\t\ttotalSupply = initialSupply;\r\n\t\tbalances[msg.sender] = initialSupply;\r\n\t\tsellPrice = initialPrice;\r\n\t\tstartTime = initialStartTime;\r\n\t\tendTime = initialStartTime + DURATION;\r\n    }\r\n\r\n    /// @dev Accepts ether and creates new SME tokens.\r\n    function createTokens() payable {\r\n\t    if (now < startTime) throw;\r\n\t\tif (now > endTime) throw;\r\n\t    if (msg.value < val4) throw;\r\n\t\tif (msg.value % val4 != 0) throw;\r\n\t\tvar new_funder = Funder({addr: msg.sender, amount: msg.value / val4});\r\n\t\tfunder_list.push(new_funder);\r\n\t\t\r\n\t    uint256 smecAmount = msg.value / sellPrice;\r\n        if (totalSupply < smecAmount) throw;\r\n        if (balances[msg.sender] + smecAmount < balances[msg.sender]) throw; \r\n        totalSupply -= smecAmount;                     \r\n        balances[msg.sender] += smecAmount;\r\n\t\t\r\n        if(!account1.send(msg.value*50/100)) throw;\r\n\t\tif(!account2.send(msg.value*24/100)) throw;\r\n\t\tif(!account3.send(msg.value*6/100)) throw;\r\n\t\tif(!account4.send(msg.value*10/100)) throw;\r\n\t\tif(!account5.send(msg.value*10/100)) throw;\r\n    }\r\n\t\r\n\t// fallback\r\n    function() payable {\r\n        createTokens();\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DURATION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newSellPrice\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createTokens\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"name\":\"initialStartTime\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"SMEToken","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000001312d0000000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000000000000000000000000000000000005944fda0","Library":"","SwarmSource":"bzzr://9baf25c1c769c14204c6ab6314cf71352b6e3449b9c64fbb864f69b813636ea7"}]}