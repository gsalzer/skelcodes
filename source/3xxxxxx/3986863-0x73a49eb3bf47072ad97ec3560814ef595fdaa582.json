{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20Basic {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function transfer(address to, uint value);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\n/**\r\n * @title TokenTimelock\r\n * @dev TokenTimelock is a token holder contract that will allow a\r\n * beneficiary to extract the tokens after a time has passed\r\n */\r\ncontract TokenTimelock {\r\n\r\n  // ERC20 basic token contract being held\r\n  ERC20Basic token;\r\n\r\n  // beneficiary of tokens after they are released\r\n  address beneficiary;\r\n\r\n  // timestamp where token release is enabled\r\n  uint releaseTime;\r\n\r\n  function TokenTimelock(ERC20Basic _token, address _beneficiary, uint _releaseTime) {\r\n    require(_releaseTime > now);\r\n    token = _token;\r\n    beneficiary = _beneficiary;\r\n    releaseTime = _releaseTime;\r\n  }\r\n\r\n  /**\r\n   * @dev beneficiary claims tokens held by time lock\r\n   */\r\n  function claim() {\r\n    require(msg.sender == beneficiary);\r\n    require(now >= releaseTime);\r\n\r\n    uint amount = token.balanceOf(this);\r\n    require(amount > 0);\r\n\r\n    token.transfer(beneficiary, amount);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_releaseTime\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"TokenTimelock","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000d26114cd6EE289AccF82350c8d8487fedB8A0C070000000000000000000000002551d2357c8da54b7d330917e0e769d33f1f5b93000000000000000000000000000000000000000000000000000000005b381980","Library":"","SwarmSource":"bzzr://4c37435b790331d68c36965a2a6a779ee7dfa9e5ef15513f34e6101f902c2946"}]}