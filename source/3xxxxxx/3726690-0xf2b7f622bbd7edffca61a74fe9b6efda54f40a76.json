{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.4;\r\n\r\n/**\r\n * @title Contract for object that have an owner\r\n */\r\ncontract Owned {\r\n    /**\r\n     * Contract owner address\r\n     */\r\n    address public owner;\r\n\r\n    /**\r\n     * @dev Delegate contract to another person\r\n     * @param _owner New owner address \r\n     */\r\n    function setOwner(address _owner) onlyOwner\r\n    { owner = _owner; }\r\n\r\n    /**\r\n     * @dev Owner check modifier\r\n     */\r\n    modifier onlyOwner { if (msg.sender != owner) throw; _; }\r\n}\r\n\r\n/**\r\n * @title Common pattern for destroyable contracts \r\n */\r\ncontract Destroyable {\r\n    address public hammer;\r\n\r\n    /**\r\n     * @dev Hammer setter\r\n     * @param _hammer New hammer address\r\n     */\r\n    function setHammer(address _hammer) onlyHammer\r\n    { hammer = _hammer; }\r\n\r\n    /**\r\n     * @dev Destroy contract and scrub a data\r\n     * @notice Only hammer can call it \r\n     */\r\n    function destroy() onlyHammer\r\n    { suicide(msg.sender); }\r\n\r\n    /**\r\n     * @dev Hammer check modifier\r\n     */\r\n    modifier onlyHammer { if (msg.sender != hammer) throw; _; }\r\n}\r\n\r\n/**\r\n * @title Generic owned destroyable contract\r\n */\r\ncontract Object is Owned, Destroyable {\r\n    function Object() {\r\n        owner  = msg.sender;\r\n        hammer = msg.sender;\r\n    }\r\n}\r\n\r\n// Standard token interface (ERC 20)\r\n// https://github.com/ethereum/EIPs/issues/20\r\ncontract ERC20 \r\n{\r\n// Functions:\r\n    /// @return total amount of tokens\r\n    uint256 public totalSupply;\r\n\r\n    /// @param _owner The address from which the balance will be retrieved\r\n    /// @return The balance\r\n    function balanceOf(address _owner) constant returns (uint256);\r\n\r\n    /// @notice send `_value` token to `_to` from `msg.sender`\r\n    /// @param _to The address of the recipient\r\n    /// @param _value The amount of token to be transferred\r\n    /// @return Whether the transfer was successful or not\r\n    function transfer(address _to, uint256 _value) returns (bool);\r\n\r\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\r\n    /// @param _from The address of the sender\r\n    /// @param _to The address of the recipient\r\n    /// @param _value The amount of token to be transferred\r\n    /// @return Whether the transfer was successful or not\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool);\r\n\r\n    /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @param _value The amount of wei to be approved for transfer\r\n    /// @return Whether the approval was successful or not\r\n    function approve(address _spender, uint256 _value) returns (bool);\r\n\r\n    /// @param _owner The address of the account owning tokens\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @return Amount of remaining tokens allowed to spent\r\n    function allowance(address _owner, address _spender) constant returns (uint256);\r\n\r\n// Events:\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract Presale is Object {\r\n    ERC20   public token;\r\n    uint256 public bounty;\r\n    uint256 public donation;\r\n\r\n    /**\r\n     * @dev Presale contract constructor\r\n     * @param _token Bounty token address\r\n     * @param _bounty Bount value by donation\r\n     * @param _donation Donation value\r\n     */\r\n    function Presale(address _token, uint256 _bounty, uint256 _donation) {\r\n        token    = ERC20(_token);\r\n        bounty   = _bounty;\r\n        donation = _donation;\r\n    }\r\n\r\n    /**\r\n     * @dev Cancel presale contract by owner, bounty refunded to owner\r\n     */\r\n    function cancel() onlyOwner {\r\n        if (!token.transfer(owner, bounty)) throw;\r\n    }\r\n\r\n    /**\r\n    * @dev Accept presale contract,\r\n    *      bounty transfered to sender - donation to owner\r\n    */\r\n    function () payable {\r\n        if (msg.value != donation) throw;\r\n        if (!token.transfer(msg.sender, bounty)) throw;\r\n        if (!owner.send(msg.value)) throw;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hammer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"donation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bounty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hammer\",\"type\":\"address\"}],\"name\":\"setHammer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_bounty\",\"type\":\"uint256\"},{\"name\":\"_donation\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"Presale","CompilerVersion":"v0.4.9+commit.364da425","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000051631ca4de390fa01818aaa331fc5b55e82fd59400000000000000000000000000000000000000000000000000000000000284880000000000000000000000000000000000000000000000001e87f85809dc0000","Library":"","SwarmSource":"bzzr://8b27b7aad427e1124da1641e0197ddc2036d61c7c8356b2f6a9c8c0d35fdaed4"}]}