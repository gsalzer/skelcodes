{"status":"1","message":"OK","result":[{"SourceCode":"contract ProofOfExistence {\r\n\r\n  mapping (string => uint) private proofs;\r\n\r\n  function notarize(string sha256) {\r\n\r\n    bytes memory b_hash = bytes(sha256);\r\n    \r\n    if ( b_hash.length == 64 ){\r\n      if ( proofs[sha256] != 0 ){\r\n        proofs[sha256] = block.timestamp;\r\n      }\r\n    }\r\n  }\r\n  \r\n  function verify(string sha256) constant returns (uint) {\r\n    return proofs[sha256];\r\n  }\r\n  \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"sha256\",\"type\":\"string\"}],\"name\":\"notarize\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"sha256\",\"type\":\"string\"}],\"name\":\"verify\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"}]","ContractName":"ProofOfExistence","CompilerVersion":"v0.4.2+commit.af6afb04","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":""}]}