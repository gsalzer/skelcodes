{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\n\r\n/**\r\n * @title ERC20\r\n */\r\ncontract ERC20 {\r\n    function totalSupply() constant returns (uint256 totalSupply);\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n    \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n\r\n/**\r\n * @title MainstreetToken\r\n */\r\ncontract MainstreetToken is ERC20 {\r\n    \r\n    mapping (address => uint) ownerMIT;\r\n    mapping (address => mapping (address => uint)) allowed;\r\n    uint public totalMIT;\r\n    uint public start;\r\n    \r\n    address public mainstreetCrowdfund;\r\n\r\n    address public intellisys;\r\n    \r\n    bool public testing;\r\n\r\n    modifier fromCrowdfund() {\r\n        if (msg.sender != mainstreetCrowdfund) {\r\n            throw;\r\n        }\r\n        _;\r\n    }\r\n    \r\n    modifier isActive() {\r\n        if (block.timestamp < start) {\r\n            throw;\r\n        }\r\n        _;\r\n    }\r\n\r\n    modifier isNotActive() {\r\n        if (!testing && block.timestamp >= start) {\r\n            throw;\r\n        }\r\n        _;\r\n    }\r\n\r\n    modifier recipientIsValid(address recipient) {\r\n        if (recipient == 0 || recipient == address(this)) {\r\n            throw;\r\n        }\r\n        _;\r\n    }\r\n\r\n    modifier senderHasSufficient(uint MIT) {\r\n        if (ownerMIT[msg.sender] < MIT) {\r\n            throw;\r\n        }\r\n        _;\r\n    }\r\n\r\n    modifier transferApproved(address from, uint MIT) {\r\n        if (allowed[from][msg.sender] < MIT || ownerMIT[from] < MIT) {\r\n            throw;\r\n        }\r\n        _;\r\n    }\r\n\r\n    modifier allowanceIsZero(address spender, uint value) {\r\n        // To change the approve amount you first have to reduce the addressesÂ´\r\n        // allowance to zero by calling `approve(_spender,0)` if it is not\r\n        // already 0 to mitigate the race condition described here:\r\n        // https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n        if ((value != 0) && (allowed[msg.sender][spender] != 0)) {\r\n            throw;\r\n        }\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Tokens have been added to an address by the crowdfunding contract.\r\n     * @param recipient Address receiving the MIT.\r\n     * @param MIT Amount of MIT added.\r\n     */\r\n    event TokensAdded(address indexed recipient, uint MIT);\r\n\r\n    /**\r\n     * @dev Constructor.\r\n     * @param _mainstreetCrowdfund Address of crowdfund contract.\r\n     * @param _intellisys Address to receive intellisys' tokens.\r\n     * @param _start Timestamp when the token becomes active.\r\n     */\r\n    function MainstreetToken(address _mainstreetCrowdfund, address _intellisys, uint _start, bool _testing) {\r\n        mainstreetCrowdfund = _mainstreetCrowdfund;\r\n        intellisys = _intellisys;\r\n        start = _start;\r\n        testing = _testing;\r\n    }\r\n    \r\n    /**\r\n     * @dev Add to token balance on address. Must be from crowdfund.\r\n     * @param recipient Address to add tokens to.\r\n     * @return MIT Amount of MIT to add.\r\n     */\r\n    function addTokens(address recipient, uint MIT) external isNotActive fromCrowdfund {\r\n        ownerMIT[recipient] += MIT;\r\n        uint intellisysMIT = MIT / 10;\r\n        ownerMIT[intellisys] += intellisysMIT;\r\n        totalMIT += MIT + intellisysMIT;\r\n        TokensAdded(recipient, MIT);\r\n        TokensAdded(intellisys, intellisysMIT);\r\n    }\r\n\r\n    /**\r\n     * @dev Implements ERC20 totalSupply()\r\n     */\r\n    function totalSupply() constant returns (uint256 totalSupply) {\r\n        totalSupply = totalMIT;\r\n    }\r\n\r\n    /**\r\n     * @dev Implements ERC20 balanceOf()\r\n     */\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        balance = ownerMIT[_owner];\r\n    }\r\n\r\n    /**\r\n     * @dev Implements ERC20 transfer()\r\n     */\r\n    function transfer(address _to, uint256 _value) isActive recipientIsValid(_to) senderHasSufficient(_value) returns (bool success) {\r\n        ownerMIT[msg.sender] -= _value;\r\n        ownerMIT[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Implements ERC20 transferFrom()\r\n     */\r\n    function transferFrom(address _from, address _to, uint256 _value) isActive recipientIsValid(_to) transferApproved(_from, _value) returns (bool success) {\r\n        ownerMIT[_to] += _value;\r\n        ownerMIT[_from] -= _value;\r\n        allowed[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Implements ERC20 approve()\r\n     */\r\n    function approve(address _spender, uint256 _value) isActive allowanceIsZero(_spender, _value) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Implements ERC20 allowance()\r\n     */\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        remaining = allowed[_owner][_spender];\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"intellisys\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"MIT\",\"type\":\"uint256\"}],\"name\":\"addTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"testing\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainstreetCrowdfund\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_mainstreetCrowdfund\",\"type\":\"address\"},{\"name\":\"_intellisys\",\"type\":\"address\"},{\"name\":\"_start\",\"type\":\"uint256\"},{\"name\":\"_testing\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"MIT\",\"type\":\"uint256\"}],\"name\":\"TokensAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"MainstreetToken","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000081f074bb3b158bf81799dcff159521a089e59a37000000000000000000000000d6b781b7d90164cbcbda85b9aa255359749973f7000000000000000000000000000000000000000000000000000000005900c4e30000000000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://c08165bfb0198a063bd43ec8dd723ab04b6f5005a1b0fe9586100a76a6d82071"}]}