{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.6;\r\n\r\n/// @dev `Owned` is a base level contract that assigns an `owner` that can be\r\n///  later changed\r\ncontract Owned {\r\n    /// @dev `owner` is the only address that can call a function with this\r\n    /// modifier\r\n    modifier onlyOwner { if (msg.sender != owner) throw; _; }\r\n\r\n    address public owner;\r\n\r\n    /// @notice The Constructor assigns the message sender to be `owner`\r\n    function Owned() { owner = msg.sender;}\r\n\r\n    /// @notice `owner` can step down and assign some other address to this role\r\n    /// @param _newOwner The address of the new owner. 0x0 can be used to create\r\n    ///  an unowned neutral vault, however that cannot be undone\r\n    function changeOwner(address _newOwner) onlyOwner {\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\n\r\ncontract GivethDirectory is Owned {\r\n\r\n    enum CampaignStatus {Preparing, Active, Obsoleted, Deleted}\r\n\r\n    struct Campaign {\r\n        string name;\r\n        string description;\r\n        string url;\r\n        address token;\r\n        address vault;\r\n        address milestoneTracker;\r\n        string extra;\r\n        CampaignStatus status;\r\n    }\r\n\r\n    Campaign[] campaigns;\r\n\r\n    function addCampaign(\r\n        string name,\r\n        string description,\r\n        string url,\r\n        address token,\r\n        address vault,\r\n        address milestoneTracker,\r\n        string extra\r\n    ) onlyOwner returns(uint idCampaign) {\r\n\r\n        idCampaign = campaigns.length++;\r\n        Campaign c = campaigns[idCampaign];\r\n        c.name = name;\r\n        c.description = description;\r\n        c.url = url;\r\n        c.token = token;\r\n        c.vault = vault;\r\n        c.milestoneTracker = milestoneTracker;\r\n        c.extra = extra;\r\n    }\r\n\r\n    function updateCampaign(\r\n        uint idCampaign,\r\n        string name,\r\n        string description,\r\n        string url,\r\n        address token,\r\n        address vault,\r\n        address milestoneTracker,\r\n        string extra\r\n    ) onlyOwner {\r\n        if (idCampaign >= campaigns.length) throw;\r\n        Campaign c = campaigns[idCampaign];\r\n        c.name = name;\r\n        c.description = description;\r\n        c.url = url;\r\n        c.token = token;\r\n        c.vault = vault;\r\n        c.milestoneTracker = milestoneTracker;\r\n        c.extra = extra;\r\n    }\r\n\r\n    function changeStatus(uint idCampaign, CampaignStatus newStatus) onlyOwner {\r\n        if (idCampaign >= campaigns.length) throw;\r\n        Campaign c = campaigns[idCampaign];\r\n        c.status = newStatus;\r\n    }\r\n\r\n    function getCampaign(uint idCampaign) constant returns (\r\n        string name,\r\n        string description,\r\n        string url,\r\n        address token,\r\n        address vault,\r\n        address milestoneTracker,\r\n        string extra,\r\n        CampaignStatus status\r\n    ) {\r\n        if (idCampaign >= campaigns.length) throw;\r\n        Campaign c = campaigns[idCampaign];\r\n        name = c.name;\r\n        description = c.description;\r\n        url = c.url;\r\n        token = c.token;\r\n        vault = c.vault;\r\n        milestoneTracker = c.milestoneTracker;\r\n        extra = c.extra;\r\n        status = c.status;\r\n    }\r\n\r\n    function numberOfCampaigns() constant returns (uint) {\r\n        return campaigns.length;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"numberOfCampaigns\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"vault\",\"type\":\"address\"},{\"name\":\"milestoneTracker\",\"type\":\"address\"},{\"name\":\"extra\",\"type\":\"string\"}],\"name\":\"addCampaign\",\"outputs\":[{\"name\":\"idCampaign\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"idCampaign\",\"type\":\"uint256\"}],\"name\":\"getCampaign\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"vault\",\"type\":\"address\"},{\"name\":\"milestoneTracker\",\"type\":\"address\"},{\"name\":\"extra\",\"type\":\"string\"},{\"name\":\"status\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"idCampaign\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"vault\",\"type\":\"address\"},{\"name\":\"milestoneTracker\",\"type\":\"address\"},{\"name\":\"extra\",\"type\":\"string\"}],\"name\":\"updateCampaign\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"idCampaign\",\"type\":\"uint256\"},{\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"changeStatus\",\"outputs\":[],\"payable\":false,\"type\":\"function\"}]","ContractName":"GivethDirectory","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://404d048ded938707940ca26fdf2d3102e1a7ecf4bd1fa7a1b7f2920d64a937a6"}]}