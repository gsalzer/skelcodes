{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.6;\r\n\r\ncontract Presale {\r\n    mapping (address => uint) public balances;\r\n    uint public transfered_total = 0;\r\n    \r\n    uint public constant min_goal_amount = 5 ether;\r\n    uint public constant max_goal_amount = 10 ether;\r\n    \r\n    // Vega Fund Round A Address\r\n    address public project_wallet;\r\n\r\n    uint public presale_start_block;\r\n    uint public presale_end_block;\r\n    \r\n    // est. of blocks count in 1 month\r\n    // Based on 1 block every 17 seconds, 30 days would produce ~152,471\r\n    // Just for allowing for some additional time round to 153,000\r\n    uint constant blocks_in_one_months = 100;\r\n    \r\n    // block number of the end of refund window, \r\n    // which will occur in the end of 1 month after presale\r\n    uint public refund_window_end_block;\r\n    \r\n    function Presale(uint _start_block, uint _end_block, address _project_wallet) {\r\n        if (_start_block <= block.number) throw;\r\n        if (_end_block <= _start_block) throw;\r\n        if (_project_wallet == 0) throw;\r\n        \r\n        presale_start_block = _start_block;\r\n        presale_end_block = _end_block;\r\n        project_wallet = _project_wallet;\r\n\trefund_window_end_block = presale_end_block + blocks_in_one_months;\r\n    }\r\n\t\r\n    function has_presale_started() private constant returns (bool) {\r\n\treturn block.number >= presale_start_block;\r\n    }\r\n    \r\n    function has_presale_time_ended() private constant returns (bool) {\r\n        return block.number > presale_end_block;\r\n    }\r\n    \r\n    function is_min_goal_reached() private constant returns (bool) {\r\n        return transfered_total >= min_goal_amount;\r\n    }\r\n    \r\n    function is_max_goal_reached() private constant returns (bool) {\r\n        return transfered_total >= max_goal_amount;\r\n    }\r\n    \r\n    // Accept ETH while presale is active or until maximum goal is reached.\r\n    function () payable {\r\n\t// check if presale has started\r\n        if (!has_presale_started()) throw;\r\n\t    \r\n\t// check if presale date is not over\r\n\tif (has_presale_time_ended()) throw;\r\n\t    \r\n\t// don`t accept transactions with zero value\r\n\tif (msg.value == 0) throw;\r\n\r\n        // check if max goal is not reached\r\n\tif (is_max_goal_reached()) throw;\r\n        \r\n        if (transfered_total + msg.value > max_goal_amount) {\r\n            // return change\r\n\t    var change_to_return = transfered_total + msg.value - max_goal_amount;\r\n\t    if (!msg.sender.send(change_to_return)) throw;\r\n            \r\n            var to_add = max_goal_amount - transfered_total;\r\n            balances[msg.sender] += to_add;\r\n\t    transfered_total += to_add;\r\n        } else {\r\n            // set data\r\n\t    balances[msg.sender] += msg.value;\r\n\t    transfered_total += msg.value;\r\n        }\r\n    }\r\n    \r\n    // Transfer ETH to Vega Round A address, as soon as minimum goal is reached.\r\n    function transfer_funds_to_project() {\r\n        if (!is_min_goal_reached()) throw;\r\n        if (this.balance == 0) throw;\r\n        \r\n        // transfer ethers to Vega Round A address\r\n        if (!project_wallet.send(this.balance)) throw;\r\n    }\r\n    \r\n    // Refund ETH in case minimum goal was not reached during presale.\r\n    // Refund will be available for one month window after presale.\r\n    function refund() {\r\n        if (!has_presale_time_ended()) throw;\r\n        if (is_min_goal_reached()) throw;\r\n        if (block.number > refund_window_end_block) throw;\r\n        \r\n        var amount = balances[msg.sender];\r\n        // check if sender has balance\r\n        if (amount == 0) throw;\r\n        \r\n        // reset balance\r\n        balances[msg.sender] = 0;\r\n        \r\n        // actual refund\r\n        if (!msg.sender.send(amount)) throw;\r\n    }\r\n    \r\n    // In case any ETH has left unclaimed after one month window, send them to Vega Round A address.\r\n    function transfer_left_funds_to_project() {\r\n        if (!has_presale_time_ended()) throw;\r\n        if (is_min_goal_reached()) throw;\r\n        if (block.number <= refund_window_end_block) throw;\r\n        \r\n        if (this.balance == 0) throw;\r\n        // transfer left ETH to Vega Round A address\r\n        if (!project_wallet.send(this.balance)) throw;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"refund_window_end_block\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"min_goal_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfered_total\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"project_wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transfer_left_funds_to_project\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transfer_funds_to_project\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presale_start_block\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presale_end_block\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"max_goal_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_start_block\",\"type\":\"uint256\"},{\"name\":\"_end_block\",\"type\":\"uint256\"},{\"name\":\"_project_wallet\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"Presale","CompilerVersion":"v0.4.6+commit.2dabbdf0","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000303f2b0000000000000000000000000000000000000000000000000000000000303f5e00000000000000000000000043f996926fbb1f4622c67259939462fac7735ee5","Library":"","SwarmSource":""}]}