{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\n\r\ncontract SpaCoin {\r\n    int64 constant TOTAL_UNITS = 100000 ;\r\n    int64 outstanding_coins ;\r\n    address owner ;\r\n    mapping (address => int64) holdings ;\r\n    \r\n    function SpaCoin() payable {\r\n        outstanding_coins = TOTAL_UNITS ;\r\n        owner = msg.sender ;\r\n    }\r\n    \r\n    event CoinAllocation(address holder, int64 number, int64 remaining) ;\r\n    event CoinMovement(address from, address to, int64 v) ;\r\n    event InvalidCoinUsage(string reason) ;\r\n\r\n    function getOwner()  constant returns(address) {\r\n        return owner ;\r\n    }\r\n\r\n    function allocate(address newHolder, int64 value)  payable {\r\n        if (msg.sender != owner) {\r\n            InvalidCoinUsage('Only owner can allocate coins') ;\r\n            return ;\r\n        }\r\n        if (value < 0) {\r\n            InvalidCoinUsage('Cannot allocate negative value') ;\r\n            return ;\r\n        }\r\n\r\n        if (value <= outstanding_coins) {\r\n            holdings[newHolder] += value ;\r\n            outstanding_coins -= value ;\r\n            CoinAllocation(newHolder, value, outstanding_coins) ;\r\n        } else {\r\n            InvalidCoinUsage('value to allocate larger than outstanding coins') ;\r\n        }\r\n    }\r\n    \r\n    function move(address destination, int64 value)  {\r\n        address source = msg.sender ;\r\n        if (value <= 0) {\r\n            InvalidCoinUsage('Must move value greater than zero') ;\r\n            return ;\r\n        }\r\n        if (holdings[source] >= value) {\r\n            holdings[destination] += value ;\r\n            holdings[source] -= value ;\r\n            CoinMovement(source, destination, value) ;\r\n        } else {\r\n            InvalidCoinUsage('value to move larger than holdings') ;\r\n        }\r\n    }\r\n    \r\n    function myBalance() constant returns(int64) {\r\n        return holdings[msg.sender] ;\r\n    }\r\n    \r\n    function holderBalance(address holder) constant returns(int64) {\r\n        if (msg.sender != owner) return ;\r\n        return holdings[holder] ;\r\n    }\r\n\r\n    function outstandingValue() constant returns(int64) {\r\n        if (msg.sender != owner) return ;\r\n        return outstanding_coins ;\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"destination\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"int64\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outstandingValue\",\"outputs\":[{\"name\":\"\",\"type\":\"int64\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newHolder\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"int64\"}],\"name\":\"allocate\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"holderBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"int64\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"myBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"int64\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"number\",\"type\":\"int64\"},{\"indexed\":false,\"name\":\"remaining\",\"type\":\"int64\"}],\"name\":\"CoinAllocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"v\",\"type\":\"int64\"}],\"name\":\"CoinMovement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"InvalidCoinUsage\",\"type\":\"event\"}]","ContractName":"SpaCoin","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://403c284b0d35e69bc350942293bd9c036582d146201c45335de52ebbb9cb321a"}]}