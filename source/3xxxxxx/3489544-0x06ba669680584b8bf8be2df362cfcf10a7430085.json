{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.10;\r\n/**\r\n * Smart Meter Gatway Aministration for StromDAO Stromkonto\r\n * ====================================================================\r\n * Slot-Link f체r intelligente Messsysteme zur Freigabe einer Orakel-gesteuerten\r\n * Z채hlrestandsgang-Messung. Wird verwendet zur Emulierung eines autarken \r\n * Lieferanten/Abnehmer Managements in einem HSM oder P2P Markt ohne zentrale\r\n * Kontrollstelle.\r\n * \r\n * Kontakt V0.1.1: \r\n * Thorsten Zoerner <thorsten.zoerner(at)stromdao.de)\r\n * https://stromdao.de/\r\n */\r\n\r\n\r\ncontract owned {\r\n     address public owner;\r\n\r\n    function owned() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        if (msg.sender != owner) throw;\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract GWALink is owned {\r\n    uint80 constant None = uint80(0); \r\n    \r\n    // Freigaben f체r einzelne Nodes\r\n    struct ClearanceLimits {\r\n        uint256 min_time;\r\n        uint256 min_power;\r\n        uint256 max_time;\r\n        uint256 max_power;\r\n        address definedBy;\r\n        bool valid;\r\n    }\r\n    \r\n    // Representation eines Z채hlerstandes\r\n    struct ZS {\r\n        uint256 time;\r\n        uint256 power_in;\r\n        uint256 power_out;\r\n        address oracle;\r\n    }\r\n    \r\n    event recleared(address link);\r\n    event pinged(address link,uint256 time,uint256 power_in,uint256 power_out);\r\n    \r\n    ClearanceLimits public defaultLimits = ClearanceLimits(1,1,86400,1000,owner,true);\r\n  \r\n    mapping(address=>ZS) public zss;\r\n    \r\n    function changeClearance(uint256 _min_time,uint256 _min_power,uint256 _max_time, uint256 _max_power,bool _clearance) onlyOwner {\r\n        defaultLimits = ClearanceLimits(_min_time,_min_power,_max_time,_max_power,msg.sender,_clearance);\r\n    }\r\n    \r\n\r\n    \r\n    function changeZS(address link,address oracle,uint256 _power_in,uint256 _power_out) onlyOwner {\r\n         ZS zs = zss[link];\r\n         zs.oracle=oracle;\r\n         zs.time=now;\r\n         zs.power_in=_power_in;\r\n         zs.power_out=_power_out;\r\n         zss[link]=zs;\r\n        \r\n    }\r\n\r\n    \r\n    function ping(address link,uint256 delta_time,uint256 delta_power_in,uint256 delta_power_out) {\r\n        ClearanceLimits  limits = defaultLimits;\r\n        if(!limits.valid) {  throw; }\r\n        if((limits.min_power>delta_power_in)&&(limits.min_power>delta_power_out) ) throw;\r\n        if((limits.max_power<delta_power_in)&&(limits.max_power<delta_power_out)) throw;\r\n        if(limits.min_time>delta_time) throw;\r\n        if(limits.max_time<delta_time) throw;\r\n        \r\n        ZS zs = zss[link];\r\n        \r\n        if(zs.time==0) {\r\n            zs.oracle=msg.sender;\r\n            zs.time=now;\r\n        } else {\r\n            if((zs.oracle!=msg.sender) &&(zs.oracle!=owner)) throw;\r\n        }\r\n        \r\n        zs.time+=delta_time;\r\n        zs.power_in+=delta_power_in;\r\n        zs.power_out+=delta_power_out;\r\n        zss[link]=zs;\r\n        pinged(link,zs.time,zs.power_in,zs.power_out);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"link\",\"type\":\"address\"},{\"name\":\"delta_time\",\"type\":\"uint256\"},{\"name\":\"delta_power_in\",\"type\":\"uint256\"},{\"name\":\"delta_power_out\",\"type\":\"uint256\"}],\"name\":\"ping\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_min_time\",\"type\":\"uint256\"},{\"name\":\"_min_power\",\"type\":\"uint256\"},{\"name\":\"_max_time\",\"type\":\"uint256\"},{\"name\":\"_max_power\",\"type\":\"uint256\"},{\"name\":\"_clearance\",\"type\":\"bool\"}],\"name\":\"changeClearance\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defaultLimits\",\"outputs\":[{\"name\":\"min_time\",\"type\":\"uint256\"},{\"name\":\"min_power\",\"type\":\"uint256\"},{\"name\":\"max_time\",\"type\":\"uint256\"},{\"name\":\"max_power\",\"type\":\"uint256\"},{\"name\":\"definedBy\",\"type\":\"address\"},{\"name\":\"valid\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"zss\",\"outputs\":[{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"power_in\",\"type\":\"uint256\"},{\"name\":\"power_out\",\"type\":\"uint256\"},{\"name\":\"oracle\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"link\",\"type\":\"address\"},{\"name\":\"oracle\",\"type\":\"address\"},{\"name\":\"_power_in\",\"type\":\"uint256\"},{\"name\":\"_power_out\",\"type\":\"uint256\"}],\"name\":\"changeZS\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"link\",\"type\":\"address\"}],\"name\":\"recleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"link\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"power_in\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"power_out\",\"type\":\"uint256\"}],\"name\":\"pinged\",\"type\":\"event\"}]","ContractName":"GWALink","CompilerVersion":"v0.4.11-nightly.2017.3.29+commit.fefb3fad","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://24e4924444d473a76f90362dd91c908e159fca99eef562ef89ba5377c61f894f"}]}