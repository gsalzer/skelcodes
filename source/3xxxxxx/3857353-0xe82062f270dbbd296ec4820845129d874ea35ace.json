{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.10;\r\n\r\ncontract ERC20 {\r\n  function balanceOf(address owner) constant returns (uint balance);\r\n  function transfer(address to, uint value) returns (bool success);\r\n}\r\n\r\ncontract TokenPool {\r\n  string public name;\r\n  uint public fundingLimit;\r\n  uint public rewardPercentage;\r\n  uint public amountRaised;\r\n  uint public tokensCreated;\r\n  ERC20 public tokenContract;\r\n  address public tokenCreateContract;\r\n  string public tokenCreateFunction;\r\n  mapping (address => uint) funders;\r\n  address public tokenCreator;\r\n  bytes4 tokenCreateFunctionHash;\r\n\r\n  function TokenPool(\r\n    TokenPoolList list,\r\n    string _name,\r\n    uint _fundingLimit,\r\n    uint _rewardPercentage,\r\n    ERC20 _tokenContract,\r\n    address _tokenCreateContract,\r\n    string _tokenCreateFunction)\r\n  {\r\n    list.add(this);\r\n    name = _name;\r\n    fundingLimit = _fundingLimit;\r\n    rewardPercentage = _rewardPercentage;\r\n    tokenContract = _tokenContract;\r\n    tokenCreateContract = _tokenCreateContract;\r\n    tokenCreateFunction = _tokenCreateFunction;\r\n    tokenCreateFunctionHash = bytes4(sha3(tokenCreateFunction));\r\n  }\r\n\r\n  function Fund() payable {\r\n    if (tokensCreated > 0) throw;\r\n    uint amount = msg.value;\r\n    amountRaised += amount;\r\n    if (amountRaised > fundingLimit) throw;\r\n    funders[msg.sender] += amount;\r\n  }\r\n\r\n  function() payable {\r\n    Fund();\r\n  }\r\n\r\n  function Withdraw() {\r\n    if (tokensCreated > 0) return;\r\n    uint amount = funders[msg.sender];\r\n    if (amount == 0) return;\r\n    funders[msg.sender] -= amount;\r\n    amountRaised -= amount;\r\n    if (!msg.sender.send(amount)) {\r\n      funders[msg.sender] += amount;\r\n      amountRaised += amount;\r\n    }\r\n  }\r\n\r\n  function CreateTokens() {\r\n    if (tokensCreated > 0) return;\r\n    uint amount = amountRaised * (100 - rewardPercentage) / 100;\r\n    if (!tokenCreateContract.call.value(amount)(tokenCreateFunctionHash)) throw;\r\n    tokensCreated = tokenContract.balanceOf(this);\r\n    tokenCreator = msg.sender;\r\n  }\r\n\r\n  function ClaimTokens() {\r\n    if (tokensCreated == 0) return;\r\n    uint amount = funders[msg.sender];\r\n    if (amount == 0) return;\r\n    uint tokens = tokensCreated * amount / amountRaised;\r\n    funders[msg.sender] = 0;\r\n    if (!tokenContract.transfer(msg.sender, tokens)) {\r\n      funders[msg.sender] = amount;\r\n    }\r\n  }\r\n\r\n  function ClaimReward() {\r\n    if (msg.sender != tokenCreator) return;\r\n    uint amount = amountRaised * (100 - rewardPercentage) / 100;\r\n    uint reward = amountRaised - amount;\r\n    if (msg.sender.send(reward)) {\r\n      tokenCreator = 0;\r\n    }\r\n  }\r\n\r\n}\r\npragma solidity ^0.4.10;\r\n\r\ncontract TokenPoolList {\r\n  address[] public list;\r\n\r\n  event Added(address x);\r\n\r\n  function add(address x) {\r\n    list.push(x);\r\n    Added(x);\r\n  }\r\n\r\n  function getCount() public constant returns(uint) {\r\n    return list.length;\r\n  }\r\n\r\n  function getAddress(uint index) public constant returns(address) {\r\n    return list[index];\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCreateFunction\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensCreated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPercentage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Fund\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ClaimReward\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"CreateTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ClaimTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCreateContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCreator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"list\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_fundingLimit\",\"type\":\"uint256\"},{\"name\":\"_rewardPercentage\",\"type\":\"uint256\"},{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_tokenCreateContract\",\"type\":\"address\"},{\"name\":\"_tokenCreateFunction\",\"type\":\"string\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"TokenPool","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000d6e8b5746f543712514d56d1ea9e2a8ba5b5e8d300000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000010f0cf064dd5920000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000001f573d6fb3f13d689ff844b4ce37794d79a7ff1c000000000000000000000000bbc79794599b19274850492394004087cbf897100000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000642616e636f720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f636f6e7472696275746545544828290000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://d6beb37a507459404517e1d9056fc87b133b11a229b0359ecc5472fbadfdb5d7"}]}