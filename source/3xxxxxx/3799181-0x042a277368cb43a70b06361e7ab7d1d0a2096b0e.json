{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\ncontract FundariaBonusFund {\r\n    \r\n    mapping(address=>uint) public ownedBonus; // storing bonus wei\r\n    mapping(address=>int) public investorsAccounts; // Fundaria investors accounts\r\n    uint public finalTimestampOfBonusPeriod; // when the bonus period ends\r\n    address registeringContractAddress; // contract which can register investors accounts\r\n    address public fundariaTokenBuyAddress; // address of FundariaTokenBuy contract\r\n    address creator; // creator address of this contract\r\n    \r\n    event BonusWithdrawn(address indexed bonusOwner, uint bonusValue);\r\n    event AccountFilledWithBonus(address indexed accountAddress, uint bonusValue, int totalValue);\r\n    \r\n    function FundariaBonusFund() {\r\n        creator = msg.sender;\r\n    }\r\n    \r\n    // condition to be creator address to run some functions\r\n    modifier onlyCreator { \r\n        if(msg.sender == creator) _; \r\n    }\r\n    \r\n    // condition for method to be executed only by bonus owner\r\n    modifier onlyBonusOwner { \r\n        if(ownedBonus[msg.sender]>0) _; \r\n    }\r\n    \r\n    function setFundariaTokenBuyAddress(address _fundariaTokenBuyAddress) onlyCreator {\r\n        fundariaTokenBuyAddress = _fundariaTokenBuyAddress;    \r\n    }\r\n    \r\n    function setRegisteringContractAddress(address _registeringContractAddress) onlyCreator {\r\n        registeringContractAddress = _registeringContractAddress;    \r\n    }\r\n    \r\n    // availability for creator address to set when bonus period ends, but not later then current end moment\r\n    function setFinalTimestampOfBonusPeriod(uint _finalTimestampOfBonusPeriod) onlyCreator {\r\n        if(finalTimestampOfBonusPeriod==0 || _finalTimestampOfBonusPeriod<finalTimestampOfBonusPeriod)\r\n            finalTimestampOfBonusPeriod = _finalTimestampOfBonusPeriod;    \r\n    }\r\n    \r\n    \r\n    // bonus creator can withdraw their wei after bonus period ended\r\n    function withdrawBonus() onlyBonusOwner {\r\n        if(now>finalTimestampOfBonusPeriod) {\r\n            var bonusValue = ownedBonus[msg.sender];\r\n            ownedBonus[msg.sender] = 0;\r\n            BonusWithdrawn(msg.sender, bonusValue);\r\n            msg.sender.transfer(bonusValue);\r\n        }\r\n    }\r\n    \r\n    // registering investor account\r\n    function registerInvestorAccount(address accountAddress) {\r\n        if(creator==msg.sender || registeringContractAddress==msg.sender) {\r\n            investorsAccounts[accountAddress] = -1;    \r\n        }\r\n    }\r\n\r\n    // bonus owner can transfer their bonus wei to any investor account before bonus period ended\r\n    function fillInvestorAccountWithBonus(address accountAddress) onlyBonusOwner {\r\n        if(investorsAccounts[accountAddress]==-1 || investorsAccounts[accountAddress]>0) {\r\n            var bonusValue = ownedBonus[msg.sender];\r\n            ownedBonus[msg.sender] = 0;\r\n            if(investorsAccounts[accountAddress]==-1) investorsAccounts[accountAddress]==0; \r\n            investorsAccounts[accountAddress] += int(bonusValue);\r\n            AccountFilledWithBonus(accountAddress, bonusValue, investorsAccounts[accountAddress]);\r\n            accountAddress.transfer(bonusValue);\r\n        }\r\n    }\r\n    \r\n    // add information about bonus wei ownership\r\n    function setOwnedBonus() payable {\r\n        if(msg.sender == fundariaTokenBuyAddress)\r\n            ownedBonus[tx.origin] += msg.value;         \r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"accountAddress\",\"type\":\"address\"}],\"name\":\"registerInvestorAccount\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fundariaTokenBuyAddress\",\"type\":\"address\"}],\"name\":\"setFundariaTokenBuyAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundariaTokenBuyAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownedBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_finalTimestampOfBonusPeriod\",\"type\":\"uint256\"}],\"name\":\"setFinalTimestampOfBonusPeriod\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accountAddress\",\"type\":\"address\"}],\"name\":\"fillInvestorAccountWithBonus\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investorsAccounts\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalTimestampOfBonusPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBonus\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_registeringContractAddress\",\"type\":\"address\"}],\"name\":\"setRegisteringContractAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setOwnedBonus\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"bonusOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"bonusValue\",\"type\":\"uint256\"}],\"name\":\"BonusWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"accountAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"bonusValue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"totalValue\",\"type\":\"int256\"}],\"name\":\"AccountFilledWithBonus\",\"type\":\"event\"}]","ContractName":"FundariaBonusFund","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://30b520ff84dce926a0c005efba6df8c8798cd5a8d1893fd2c9737266d5f8c1c7"}]}