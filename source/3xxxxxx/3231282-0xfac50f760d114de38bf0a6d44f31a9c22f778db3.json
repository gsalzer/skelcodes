{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n*\tThis investment contract accepts investments, which will be sent to the Edgeless ICO contract as soon as it starts buy calling buyTokens().\r\n*   This way investors do not have to buy tokens in time theirselves and still do profit from the power hour offer.\r\n*\tInvestors may withdraw their funds anytime if they change their mind as long as the tokens have not yet been purchased.\r\n*\tAuthor: Julia Altenried\r\n**/\r\n\r\npragma solidity ^0.4.8;\r\n\r\ncontract Crowdsale {\r\n\tfunction invest(address receiver) payable{}\r\n}\r\n\r\ncontract SafeMath {\r\n  //internals\r\n  function safeAdd(uint a, uint b) internal returns (uint) {\r\n    uint c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n  function assert(bool assertion) internal {\r\n    if (!assertion) throw;\r\n  }\r\n}\r\n\r\ncontract Investment is SafeMath{\r\n\tCrowdsale public ico;\r\n\taddress[] public investors;\r\n\tmapping(address => uint) public balanceOf;\r\n\r\n\r\n\t/** constructs an investment contract for an ICO contract **/\r\n\tfunction Investment(){\r\n\t\tico = Crowdsale(0xf66ca56fc0cf7b5d9918349150026be80b327892);\r\n\t}\r\n\r\n\t/** make an investment **/\r\n\tfunction() payable{\r\n\t\tif(!isInvestor(msg.sender)){\r\n\t\t\tinvestors.push(msg.sender);\r\n\t\t}\r\n\t\tbalanceOf[msg.sender] = safeAdd(balanceOf[msg.sender], msg.value);\r\n\t}\r\n\r\n\t/** checks if the address already invested **/\r\n\tfunction isInvestor(address who) returns (bool){\r\n\t\tfor(uint i = 0; i< investors.length; i++)\r\n\t\t\tif(investors[i] == who)\r\n\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/** buys tokens in behalf of the investors by calling the ico contract\r\n\t*   starting with the investor at index from and ending with investor at index to.\r\n\t*   This function will be called as soon as the ICO starts and as often as necessary, until all investments were made. **/\r\n\tfunction buyTokens(uint from, uint to){\r\n\t\tuint amount;\r\n\t\tif(to>investors.length)\r\n\t\t\tto = investors.length;\r\n\t\tfor(uint i = from; i < to; i++){\r\n\t\t\tif(balanceOf[investors[i]]>0){\r\n\t\t\t\tamount = balanceOf[investors[i]];\r\n\t\t\t\tdelete balanceOf[investors[i]];\r\n\t\t\t\tico.invest.value(amount)(investors[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/** In case an investor wants to retrieve his or her funds he or she can call this function.\r\n\t*   (only possible before tokens are bought) **/\r\n\tfunction withdraw(){\r\n\t\tuint amount = balanceOf[msg.sender];\r\n\t\tbalanceOf[msg.sender] = 0;\r\n\t\tif(!msg.sender.send(amount))\r\n\t\t\tbalanceOf[msg.sender] = amount;\r\n\t}\r\n\r\n\t/** returns the number of investors **/\r\n\tfunction getNumInvestors() constant returns(uint){\r\n\t\treturn investors.length;\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investors\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ico\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumInvestors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isInvestor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"Investment","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f8967e1963b2ab6206766bceff96c02f42a491362f1838eba01616fe3a96397d"}]}