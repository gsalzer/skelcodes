{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.7;\r\ncontract DXContracts {\r\n\r\n  struct Contract {\r\n    string contractName;\r\n    string contractDescription;\r\n    uint index;\r\n    bytes32 sha256sum;\r\n    address[] signers;\r\n    uint timeStamp;\r\n    mapping (address=>bool) hasSigned;\r\n    mapping (address=>string) signerName;\r\n    bool sealed;\r\n    uint numberAlreadySigned;\r\n  }\r\n  Contract[] public contracts;\r\n    \r\n    \r\n  function getContractSigners(bytes32 _shasum) constant returns(address[], string, string, uint)\r\n    {\r\n        return (contracts[contractIndex[_shasum]].signers, contracts[contractIndex[_shasum]].contractName, contracts[contractIndex[_shasum]].contractDescription, contracts[contractIndex[_shasum]].numberAlreadySigned);\r\n    }\r\n    \r\n  function checkIfSignedBy(bytes32 _shasum, address _signer) constant returns(bool)\r\n    {\r\n        uint index=contractIndex[_shasum];\r\n        return (contracts[index].hasSigned[_signer]);\r\n    }\r\n    \r\n  mapping (bytes32=>uint) public contractIndex;\r\n \r\n  mapping (address=>bool) isAdmin;\r\n     \r\n  function DXContracts()\r\n  {\r\n    isAdmin[msg.sender]=true;\r\n    contracts.length++;\r\n  }\r\n     \r\n  function addAdmin(address _new_admin) onlyAdmin\r\n  {\r\n    isAdmin[_new_admin]=true;\r\n  }\r\n     \r\n  function removeAdmin(address _old_admin) onlyAdmin\r\n  {\r\n    isAdmin[_old_admin]=false;\r\n  }\r\n \r\n  modifier onlyAdmin\r\n  {\r\n    if (!isAdmin[msg.sender]) throw;\r\n    _;\r\n  }\r\n \r\n    event newContract(string name, address[] signers, string description, bytes32 sha256sum, uint index);\r\n  function submitNewContract(string _name, address[] _signers, string _description, bytes32 _sha256sum) onlyAdmin\r\n  {\r\n    \r\n    if (contractIndex[_sha256sum]!=0) throw;\r\n    if (_signers.length==0) throw;\r\n    contractIndex[_sha256sum]=contracts.length;\r\n    contracts.push(Contract(_name, _description, contractIndex[_sha256sum], _sha256sum, _signers, now, false, 0));\r\n    newContract(_name, _signers, _description, _sha256sum, contractIndex[_sha256sum]);\r\n  }\r\n    \r\n    \r\n    event signature(string name, address signer, bytes32 sha256sum);\r\n    event sealed(uint index, bytes32 sha256sum);\r\n\r\n  function signContract(bytes32 _sha256sum, string _my_name, bool _I_accept) returns (bool)\r\n  {\r\n    uint index=contractIndex[_sha256sum];\r\n    if (contracts[index].sealed) throw;\r\n    bool isSigner;\r\n    for (uint k=0; k<contracts[index].signers.length; k++)\r\n    {\r\n        if (contracts[index].signers[k]==msg.sender) isSigner=true;\r\n    }\r\n    if (isSigner==false) throw;\r\n    if (!_I_accept) throw;\r\n    if (index==0) throw;\r\n    else\r\n      {\r\n\tif (!contracts[index].hasSigned[msg.sender])\r\n\t  {\r\n\t    contracts[index].numberAlreadySigned++;\r\n\t  }\r\n\tcontracts[index].hasSigned[msg.sender]=true;\r\n\tcontracts[index].signerName[msg.sender]=_my_name;\r\n\tsignature(_my_name, msg.sender, _sha256sum);\r\n\tif (contracts[index].numberAlreadySigned==contracts[index].signers.length)\r\n\t  {\r\n\t    contracts[index].sealed=true;\r\n\t    sealed(index, _sha256sum);\r\n\t  }\r\n\treturn true;\r\n      }\r\n\r\n  }\r\n \r\n \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_sha256sum\",\"type\":\"bytes32\"},{\"name\":\"_my_name\",\"type\":\"string\"},{\"name\":\"_I_accept\",\"type\":\"bool\"}],\"name\":\"signContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_old_admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contracts\",\"outputs\":[{\"name\":\"contractName\",\"type\":\"string\"},{\"name\":\"contractDescription\",\"type\":\"string\"},{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"sha256sum\",\"type\":\"bytes32\"},{\"name\":\"timeStamp\",\"type\":\"uint256\"},{\"name\":\"sealed\",\"type\":\"bool\"},{\"name\":\"numberAlreadySigned\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_shasum\",\"type\":\"bytes32\"}],\"name\":\"getContractSigners\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_signers\",\"type\":\"address[]\"},{\"name\":\"_description\",\"type\":\"string\"},{\"name\":\"_sha256sum\",\"type\":\"bytes32\"}],\"name\":\"submitNewContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_shasum\",\"type\":\"bytes32\"},{\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"checkIfSignedBy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"contractIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"signers\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"sha256sum\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"newContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"sha256sum\",\"type\":\"bytes32\"}],\"name\":\"signature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sha256sum\",\"type\":\"bytes32\"}],\"name\":\"sealed\",\"type\":\"event\"}]","ContractName":"DXContracts","CompilerVersion":"v0.4.7+commit.822622cf","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b51416605c3e22ebd2afd5ac589599daa159636552d7b43e6847ae01534b194c"}]}