{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.8;\r\n\r\ncontract tokenSpender { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }\r\n\r\ncontract XDRAC { \r\n\t\r\n\t\r\n\t/* Public variables of the token */\r\n\tstring public name;\r\n\tstring public symbol;\r\n\tuint8 public decimals;\r\n\tuint256 public initialSupply;\r\n\t\r\n\r\n\t/* This creates an array with all balances */\r\n\tmapping (address => uint) public balanceOf;\r\n\tmapping (address => mapping (address => uint)) public allowance;\r\n\r\n\t/* This generates a public event on the blockchain that will notify clients */\r\n\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\tevent Approval(address indexed from, address indexed spender, uint value);\r\n\r\n\t\r\n\t\r\n\t/* Initializes contract with initial supply tokens to the creator of the contract */\r\n\tfunction XDRAC() {\r\n\t\tinitialSupply = 10000000000000;\r\n\t\tbalanceOf[msg.sender] = initialSupply;             // Give the creator all initial tokens                    \r\n\t\tname = 'DracShares';                                 // Set the name for display purposes     \r\n\t\tsymbol = 'XDRAC';                               \t // Set the symbol for display purposes    \r\n\t\tdecimals = 6;                           \t\t // Amount of decimals for display purposes\r\n\t\t\r\n\t}\r\n\t\r\n\tfunction totalSupply() returns(uint){\r\n\t\treturn initialSupply ;\r\n\t}\r\n\r\n\t/* Send coins */\r\n\tfunction transfer(address _to, uint256 _value) \r\n\treturns (bool success) {\r\n\t\tif (balanceOf[msg.sender] >= _value && _value > 0) {\r\n\t\t\tbalanceOf[msg.sender] -= _value;\r\n\t\t\tbalanceOf[_to] += _value;\r\n\t\t\tTransfer(msg.sender, _to, _value);\r\n\t\t\treturn true;\r\n\t\t} else return false; \r\n\t}\r\n\r\n\t/* Allow another contract to spend some tokens in your behalf */\r\n\r\n\t\r\n\t\r\n\tfunction approveAndCall(address _spender,\r\n\t\t\t\t\t\t\tuint256 _value,\r\n\t\t\t\t\t\t\tbytes _extraData)\r\n\treturns (bool success) {\r\n\t\tallowance[msg.sender][_spender] = _value;     \r\n\t\ttokenSpender spender = tokenSpender(_spender);\r\n\t\tspender.receiveApproval(msg.sender, _value, this, _extraData);\r\n\t\tApproval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t\r\n\t/*Allow another adress to use your money but doesn't notify it*/\r\n\tfunction approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n}\r\n\r\n\t\r\n\t\r\n\t/* A contract attempts to get the coins */\r\n\tfunction transferFrom(address _from,\r\n\t\t\t\t\t\t  address _to,\r\n\t\t\t\t\t\t  uint256 _value)\r\n\treturns (bool success) {\r\n\t\tif (balanceOf[_from] >= _value && allowance[_from][msg.sender] >= _value && _value > 0) {\r\n\t\t\tbalanceOf[_to] += _value;\r\n\t\t\tTransfer(_from, _to, _value);\r\n\t\t\tbalanceOf[_from] -= _value;\r\n\t\t\tallowance[_from][msg.sender] -= _value;\r\n\t\t\treturn true;\r\n\t\t} else return false; \r\n\t}\r\n\r\n\t\r\n\t\r\n\t/* This unnamed function is called whenever someone tries to send ether to it */\r\n\tfunction () {\r\n\t\tthrow;     // Prevents accidental sending of ether\r\n\t}        \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":false,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"XDRAC","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://18caa334ca9184f3b4c73cd76a679de870b22cef2039dae898114ac9bc9258c6"}]}