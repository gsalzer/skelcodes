{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\n//\r\n// ==== DISCLAIMER ====\r\n//\r\n// ETHEREUM IS STILL AN EXPEREMENTAL TECHNOLOGY.\r\n// ALTHOUGH THIS SMART CONTRACT WAS CREATED WITH GREAT CARE AND IN THE HOPE OF BEING USEFUL, NO GUARANTEES OF FLAWLESS OPERATION CAN BE GIVEN.\r\n// IN PARTICULAR - SUBTILE BUGS, HACKER ATTACKS OR MALFUNCTION OF UNDERLYING TECHNOLOGY CAN CAUSE UNINTENTIONAL BEHAVIOUR.\r\n// YOU ARE STRONGLY ENCOURAGED TO STUDY THIS SMART CONTRACT CAREFULLY IN ORDER TO UNDERSTAND POSSIBLE EDGE CASES AND RISKS.\r\n// DON'T USE THIS SMART CONTRACT IF YOU HAVE SUBSTANTIAL DOUBTS OR IF YOU DON'T KNOW WHAT YOU ARE DOING.\r\n//\r\n// THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\r\n// AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\r\n// OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n// ====\r\n//\r\n//\r\n// ==== PARANOIA NOTICE ====\r\n// A careful reader will find some additional checks and excessive code, consuming some extra gas. This is intentional.\r\n// Even though the contract should work without these parts, they make the code more secure in production and for future refactoring.\r\n// Also, they show more clearly what we have considered and addressed during development.\r\n// Discussion is welcome!\r\n// ====\r\n//\r\n\r\n/// @author written by ethernian for Santiment Sagl\r\n/// @notice report bugs to: bugs@ethernian.com\r\n/// @title Santiment WhiteList contract\r\ncontract SantimentWhiteList {\r\n\r\n    string constant public VERSION = \"0.3.0\";\r\n\r\n    function () { throw; }   //explicitly unpayable\r\n\r\n    struct Limit {\r\n        uint24 min;  //finney\r\n        uint24 max;  //finney\r\n    }\r\n\r\n    struct LimitWithAddr {\r\n        address addr;\r\n        uint24 min; //finney\r\n        uint24 max; //finney\r\n    }\r\n\r\n    mapping(address=>Limit) public allowed;\r\n    uint16  public chunkNr = 0;\r\n    uint    public recordNum = 0;\r\n    uint256 public controlSum = 0;\r\n    bool public isSetupMode = true;\r\n    address public admin;\r\n\r\n    function SantimentWhiteList() { admin = msg.sender; }\r\n\r\n    ///@dev add next address package to the internal white list.\r\n    ///@dev call is allowed in setup mode only.\r\n    function addPack(address[] addrs, uint24[] mins, uint24[] maxs, uint16 _chunkNr)\r\n    setupOnly\r\n    adminOnly\r\n    external {\r\n        var len = addrs.length;\r\n        require ( chunkNr++ == _chunkNr);\r\n        require ( mins.length == len &&  mins.length == len );\r\n        for(uint16 i=0; i<len; ++i) {\r\n            var addr = addrs[i];\r\n            var max  = maxs[i];\r\n            var min  = mins[i];\r\n            Limit lim = allowed[addr];\r\n            //remove old record if exists\r\n            if (lim.max > 0) {\r\n                controlSum -= uint160(addr) + lim.min + lim.max;\r\n                delete allowed[addr];\r\n            }\r\n            //insert record if max > 0\r\n            if (max > 0) {\r\n                // max > 0 means add a new record into the list.\r\n                allowed[addr] = Limit({min:min, max:max});\r\n                controlSum += uint160(addr) + min + max;\r\n            }\r\n        }//for\r\n        recordNum+=len;\r\n    }\r\n\r\n    ///@dev disable setup mode\r\n    function start()\r\n    adminOnly\r\n    public {\r\n        isSetupMode = false;\r\n    }\r\n\r\n    modifier setupOnly {\r\n        if ( !isSetupMode ) throw;\r\n        _;\r\n    }\r\n\r\n    modifier adminOnly {\r\n        if (msg.sender != admin) throw;\r\n        _;\r\n    }\r\n\r\n    //=== for better debug ====\r\n    function ping()\r\n    adminOnly\r\n    public {\r\n        log(\"pong\");\r\n    }\r\n    event log(string);\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"recordNum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrs\",\"type\":\"address[]\"},{\"name\":\"mins\",\"type\":\"uint24[]\"},{\"name\":\"maxs\",\"type\":\"uint24[]\"},{\"name\":\"_chunkNr\",\"type\":\"uint16\"}],\"name\":\"addPack\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ping\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"min\",\"type\":\"uint24\"},{\"name\":\"max\",\"type\":\"uint24\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"chunkNr\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controlSum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isSetupMode\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":false,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"}]","ContractName":"SantimentWhiteList","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5d58c82798635f211b6d7dcaf575bf5acae080495978fc34be3570d592d67cae"}]}