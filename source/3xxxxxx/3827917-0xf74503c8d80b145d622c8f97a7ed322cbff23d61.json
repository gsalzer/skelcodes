{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\ncontract Pot {\r\n\r\n\taddress public owner;\r\n    address[] public potMembers;\r\n    \r\n\tuint public potSize = 0;\r\n\tuint public winnerIndex;\r\n\taddress public winnerAddress;\r\n\tuint public minBetSize = .1 ether;\r\n\tuint public potTime = 1800;\r\n\tuint public endTime = now + potTime;\r\n\tuint public totalBet = 0;\r\n\r\n\tbool public locked = false;\r\n\t\r\n\tevent potSizeChanged(\r\n        uint _potSize\r\n    );\r\n\t\r\n\tevent winnerAnnounced(\r\n\t    address winner,\r\n\t    uint amount\r\n\t);\r\n\t\r\n\tevent timeLeft(uint left);\r\n\t\r\n\tevent debug(string msg);\r\n\t\r\n\tfunction Pot() {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\t// function Kill() public {\r\n\t// \tif(msg.sender == owner) {\r\n\t// \t    selfdestruct(owner);\r\n\t// \t}\r\n\t// }\r\n\t\r\n\t\r\n\tfunction bytesToString (bytes32 data) returns (string) {\r\n        bytes memory bytesString = new bytes(32);\r\n        for (uint j=0; j<32; j++) {\r\n            byte char = byte(bytes32(uint(data) * 2 ** (8 * j)));\r\n            if (char != 0) {\r\n                bytesString[j] = char;\r\n            }\r\n        }\r\n        return string(bytesString);\r\n    }\r\n\t\r\n\t//1 ether = 1 spot\r\n\tfunction joinPot() public payable {\r\n\t    \r\n\t    assert(now < endTime);\r\n        //for each ether sent, reserve a spot\r\n\t    for(uint i = msg.value; i >= minBetSize; i-= minBetSize) {\r\n\t        potMembers.push(msg.sender);\r\n\t        totalBet+= minBetSize;\r\n\t        potSize += 1;\r\n\t    }\r\n\t    \r\n\t    potSizeChanged(potSize);\r\n\t    timeLeft(endTime - now);\r\n\t    \r\n\t}\r\n\r\n\tfunction getPlayers() constant public returns(address[]) {\r\n\t\treturn potMembers;\r\n\t}\r\n\t\r\n\tfunction getEndTime() constant public returns (uint) {\r\n\t    return endTime;\r\n\t}\r\n\t\r\n    function rewardWinner() public payable {\r\n        \r\n        //assert time\r\n        debug(\"assert now > end time\");\r\n        assert(now > endTime);\r\n        if(!locked) {\r\n            locked = true;\r\n            debug(\"locked\");\r\n            if(potSize > 0) {\r\n            \t//if only one member entered the pot, then they automatically win\r\n            \tif(potMembers.length == 1) \r\n            \t\trandom_number = 0;\r\n            \telse\r\n                \tuint random_number = uint(block.blockhash(block.number-1))%potMembers.length - 1;\r\n                debug(bytesToString(bytes32(random_number)));\r\n                winnerIndex = random_number;\r\n                winnerAddress = potMembers[random_number];\r\n                uint amountWon = potSize * minBetSize * 98 / 100;\r\n                \r\n                \r\n                winnerAnnounced(winnerAddress, amountWon);\r\n                potMembers[random_number].transfer(amountWon); //2% fee\r\n                owner.transfer(potSize * minBetSize * 2 / 100);\r\n            }\r\n            else {\r\n                winnerAnnounced(0x0000000000000000000000000000000000000000, 0);\r\n            }\r\n            \r\n            potSize = 0;\r\n            endTime = now + potTime;\r\n            timeLeft(endTime - now);\r\n            delete potMembers;\r\n            locked = false;\r\n        }\r\n        \r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"potMembers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"joinPot\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minBetSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"potSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"bytesToString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"locked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winnerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"potTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"rewardWinner\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_potSize\",\"type\":\"uint256\"}],\"name\":\"potSizeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"winnerAnnounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"left\",\"type\":\"uint256\"}],\"name\":\"timeLeft\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"debug\",\"type\":\"event\"}]","ContractName":"Pot","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6a3adfdbdfe081b76550a9ca4418d0f84f5e66b81d363a7ae3df72f4ec6fb118"}]}