{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.2;\r\ncontract Token{\r\n\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n  event Approval(address indexed _onwer,address indexed _spender, uint256 _value);\r\n\r\n  function totalSupply() constant returns(uint256 totalSupply){}\r\n\r\n  function balanceOf(address _owner) constant returns (uint256 balance){}\r\n\r\n  function transfer(address _to, uint256 _value) constant returns(bool success){}\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) constant returns (bool success){}\r\n\r\n  function approve(address _spender, uint256 _value) constant returns(bool success){}\r\n\r\n  function allowance(address _owner, uint _spender) constant returns(uint256 remaining){}\r\n\r\n}\r\n\r\ncontract StandardToken is Token{\r\n  uint256 public totalSupply;\r\n  mapping(address => uint256)balances;\r\n  mapping(address =>mapping(address=>uint256))allowed;\r\n\r\n\r\n  function transfer(address _to, uint256 _value)constant returns(bool success){\r\n    if(balances[msg.sender]>_value && balances[_to]+_value>balances[_to]) {\r\n      balances[msg.sender] -= _value;\r\n      balances[_to] +=_value;\r\n      Transfer(msg.sender,_to,_value);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value)constant returns(bool success){\r\n    if(balances[_from]>_value && allowed[_from][msg.sender]>_value && balances[_to]+_value>balances[_to]){\r\n      balances[_from]-=_value;\r\n      allowed[_from][msg.sender]-=_value;\r\n      balances[_to]-=_value;\r\n      Transfer(_from,_to,_value);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function approve(address _spender, uint256 _value)constant returns (bool success){\r\n    allowed[msg.sender][_spender]=_value;\r\n    Approval(msg.sender,_spender,_value);\r\n    return true;\r\n  }\r\n\r\n  function balanceOf(address _owner) constant returns (uint256 balance){\r\n    return balances[_owner];\r\n  }\r\n\r\n  function allowance(address _onwer,address _spender) constant returns(uint256 allowance){\r\n    return allowed[_onwer][_spender];\r\n  }\r\n}\r\n\r\ncontract NinjaToken is StandardToken{\r\n    string public name =\"NinjaToken\";\r\n    string public version=\"0.0.1\";\r\n    uint public decimals = 18;\r\n    mapping(address=>string) public commit;\r\n    \r\n    address public founder;\r\n    address public admin; \r\n    bool public fundingLock=true;  // indicate funding status activate or inactivate\r\n    address public fundingAccount;\r\n    uint public startBlock;        //Crowdsale startBlock\r\n    uint public blockDuration;     // Crowdsale blocks duration\r\n    uint public fundingExchangeRate;\r\n    uint public price=10;\r\n    bool public transferLock=false;  // indicate transfer status activate or inactivate\r\n\r\n    event Funding(address sender, uint256 eth);\r\n    event Buy(address buyer, uint256 eth);\r\n    \r\n    function NinjaToken(address _founder,address _admin){\r\n        founder=_founder;\r\n        admin=_admin;\r\n    }\r\n    \r\n    function changeFunder(address _founder,address _admin){\r\n        if(msg.sender!=admin) throw;\r\n        founder=_founder;\r\n        admin=_admin;        \r\n    }\r\n    \r\n    function setFundingLock(bool _fundinglock,address _fundingAccount){\r\n        if(msg.sender!=founder) throw;\r\n        fundingLock=_fundinglock;\r\n        fundingAccount=_fundingAccount;\r\n    }\r\n    \r\n    function setFundingEnv(uint _startBlock, uint _blockDuration,uint _fundingExchangeRate){\r\n        if(msg.sender!=founder) throw;\r\n        startBlock=_startBlock;\r\n        blockDuration=_blockDuration;\r\n        fundingExchangeRate=_fundingExchangeRate;\r\n    }\r\n    \r\n    function funding() payable {\r\n        if(fundingLock||block.number<startBlock||block.number>startBlock+blockDuration) throw;\r\n        if(balances[msg.sender]>balances[msg.sender]+msg.value*fundingExchangeRate || msg.value>msg.value*fundingExchangeRate) throw;\r\n        if(!fundingAccount.call.value(msg.value)()) throw;\r\n        balances[msg.sender]+=msg.value*fundingExchangeRate;\r\n        Funding(msg.sender,msg.value);\r\n    }\r\n    \r\n    function setPrice(uint _price,bool _transferLock){\r\n        if(msg.sender!=founder) throw;\r\n        price=_price;\r\n        transferLock=_transferLock;\r\n    }\r\n    \r\n    function buy(string _commit) payable{\r\n        if(balances[msg.sender]>balances[msg.sender]+msg.value*price || msg.value>msg.value*price) throw;\r\n        if(!fundingAccount.call.value(msg.value)()) throw;\r\n        balances[msg.sender]+=msg.value*price;\r\n        commit[msg.sender]=_commit;\r\n        Buy(msg.sender,msg.value);\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value)constant returns(bool success){\r\n        if(transferLock) throw;\r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value)constant returns(bool success){\r\n        if(transferLock) throw;\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_founder\",\"type\":\"address\"},{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"changeFunder\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockDuration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"commit\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_commit\",\"type\":\"string\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_transferLock\",\"type\":\"bool\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fundinglock\",\"type\":\"bool\"},{\"name\":\"_fundingAccount\",\"type\":\"address\"}],\"name\":\"setFundingLock\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"name\":\"_blockDuration\",\"type\":\"uint256\"},{\"name\":\"_fundingExchangeRate\",\"type\":\"uint256\"}],\"name\":\"setFundingEnv\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"funding\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_onwer\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"allowance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"uint256\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingLock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_founder\",\"type\":\"address\"},{\"name\":\"_admin\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"Funding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_onwer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"NinjaToken","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000b18626e852ab67e854fd6cc6f4d782a2f893a4c0000000000000000000000000f82a5e7563e5c76363fff2bf83d2ee472ee38380","Library":"","SwarmSource":"bzzr://f783741d31f9be1ad6cf44ba801fa557a2b6ea9e7d6ad1bde1087fa5f6b61127"}]}