{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\n\r\n/*\r\n * ERC20Basic\r\n * Simpler version of ERC20 interface\r\n * see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20Basic {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function transfer(address to, uint value);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n  function transferFrom(address from, address to, uint value);\r\n  function allowance(address owner, address spender) constant returns (uint);  \r\n}\r\n\r\n\r\n\r\ncontract DistributeTokens {\r\n    ERC20Basic public token;\r\n    address owner;\r\n    function DistributeTokens( ERC20Basic _token ) {\r\n        owner = msg.sender;\r\n        token = _token;\r\n    }\r\n    \r\n    function checkExpectedTokens( address[] holdersList, uint[] expectedBalance, uint expectedTotalSupply ) constant returns(uint) {\r\n        uint totalHoldersTokens = 0;\r\n        uint i;\r\n        \r\n        if( token.totalSupply() != expectedTotalSupply ) return 0;\r\n     \r\n        for( i = 0 ; i < holdersList.length ; i++ ) {\r\n            uint holderBalance = token.balanceOf(holdersList[i]);\r\n            if( holderBalance != expectedBalance[i] ) return 0;\r\n            \r\n            totalHoldersTokens += holderBalance;\r\n        }\r\n        \r\n        return totalHoldersTokens;\r\n    }\r\n    \r\n    function distribute( address mainHolder, uint amountToDistribute, address[] holdersList, uint[] expectedBalance, uint expectedTotalSupply ) {\r\n        if( msg.sender != owner ) throw;\r\n        if( token.allowance(mainHolder,this) < amountToDistribute ) throw;\r\n        \r\n     \r\n        uint totalHoldersTokens = checkExpectedTokens(holdersList, expectedBalance, expectedTotalSupply);\r\n        if( totalHoldersTokens == 0 ) throw;\r\n     \r\n\r\n        for( uint i = 0 ; i < holdersList.length ; i++ ) {\r\n            uint extraTokens = (amountToDistribute * expectedBalance[i]) / totalHoldersTokens;\r\n            token.transferFrom(mainHolder, holdersList[i], extraTokens);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"mainHolder\",\"type\":\"address\"},{\"name\":\"amountToDistribute\",\"type\":\"uint256\"},{\"name\":\"holdersList\",\"type\":\"address[]\"},{\"name\":\"expectedBalance\",\"type\":\"uint256[]\"},{\"name\":\"expectedTotalSupply\",\"type\":\"uint256\"}],\"name\":\"distribute\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"holdersList\",\"type\":\"address[]\"},{\"name\":\"expectedBalance\",\"type\":\"uint256[]\"},{\"name\":\"expectedTotalSupply\",\"type\":\"uint256\"}],\"name\":\"checkExpectedTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"DistributeTokens","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000098f62d8ad5a884c8bbcf262591dff55dab263b80","Library":"","SwarmSource":"bzzr://66fe82a6a9a0dc189e1ce109b53633bac1d07599951985ba5e9efe6adf88575c"}]}