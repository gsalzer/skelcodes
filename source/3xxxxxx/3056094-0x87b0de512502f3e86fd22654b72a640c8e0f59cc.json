{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.7;\r\n\r\ncontract Investment{\r\n    uint public investorIndex;\r\n    address[] public investors;\r\n    function returnInvestment() payable{}\r\n    function getNumInvestors() constant returns(uint){}\r\n}\r\n\r\ncontract Intermediary{\r\n    /** the investment contract */\r\n    Investment investmentContract;\r\n    /** the owner */\r\n    address public owner;\r\n   \r\n    /**\r\n     * creates a new intermediary to a given investment contract\r\n     * */\r\n    function Intermediary(){\r\n        investmentContract = Investment(0xabcdd0dbc5ba15804f5de963bd60491e48c3ef0b);\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    /**\r\n     * Accet payments\r\n     * */\r\n    function() payable{\r\n    }\r\n    \r\n    /**\r\n     * sends the specified value to the investor contract, if there are still investors waiting to be paid out.\r\n     * Else, the value is sent to the owner\r\n     * */\r\n    function returnValue(uint value){\r\n        if(this.balance>=value){\r\n          if(investmentContract.investorIndex()<investmentContract.getNumInvestors())\r\n            investmentContract.returnInvestment.value(value)();\r\n          else \r\n            owner.send(msg.value);\r\n        }\r\n    }\r\n  \r\n    /**\r\n     * sends the whole balance to the investor contract, if there are still investors waiting to be paid out.\r\n     * Else, the value is sent to the owner\r\n     * */\r\n    function returnEverything(){\r\n        if(investmentContract.investorIndex()<investmentContract.getNumInvestors())\r\n          investmentContract.returnInvestment.value(this.balance)();\r\n        else \r\n          owner.send(this.balance);\r\n    }\r\n    \r\n    /**\r\n     * change the owner wallet\r\n     * */\r\n    function changeOwner(address newOwner){\r\n        if(msg.sender==owner) \r\n            owner=newOwner;\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"returnValue\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"returnEverything\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"Intermediary","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a6509d0c4a33cded02004475f869809a2e9ff9a2dd9a1cc83ddd9fad82ee8ebe"}]}