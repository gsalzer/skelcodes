{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.8;\r\ncontract mortal {\r\n    /* Define variable owner of the type address*/\r\n    address owner;\r\n\r\n    /* this function is executed at initialization and sets the owner of the contract */\r\n    function mortal() { owner = msg.sender; }\r\n\r\n    /* Function to recover the funds on the contract */\r\n    function kill() { if (msg.sender == owner) selfdestruct(owner); }\r\n}\r\n\r\ncontract greeter is mortal {\r\n    /* define variable greeting of the type string */\r\n    string greeting;\r\n\r\n    /* this runs when the contract is executed */\r\n    function greeter(string _greeting) public {\r\n        greeting = _greeting;\r\n    }\r\n\r\n    /* main function */\r\n    function greet() constant returns (string) {\r\n        return greeting;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"mortal","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a53039e2b3345bf6a03d7849ae4b80ae7937aee2dd9d17ff3ec2973d11caa81c"}]}