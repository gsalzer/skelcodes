{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.2;\r\n\r\ncontract Owner {\r\n    //For storing the owner address\r\n    address public owner;\r\n    //Constructor for assign a address for owner property(It will be address who deploy the contract) \r\n    function Owner() {\r\n        owner = msg.sender;\r\n    }\r\n    //This is modifier (a special function) which will execute before the function execution on which it applied \r\n    modifier onlyOwner() {\r\n        if(msg.sender != owner) throw;\r\n        //This statement replace with the code of fucntion on which modifier is applied\r\n        _;\r\n    }\r\n    //Here is the example of modifier this function code replace _; statement of modifier \r\n    function transferOwnership(address new_owner) onlyOwner {\r\n        owner = new_owner;\r\n    }\r\n}\r\n\r\ncontract MyToken is Owner {\r\n    //Common information about coin\r\n    string public name;\r\n    string public symbol;\r\n    uint8  public decimal;\r\n    uint256 public totalSupply;\r\n    \r\n    //Balance property which should be always associate with an address\r\n    mapping (address => uint256) public balanceOf;\r\n    //frozenAccount property which should be associate with an address\r\n    mapping (address => bool) public frozenAccount;\r\n    \r\n    //These generates a public event on the blockchain that will notify clients\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event FrozenFunds(address target, bool frozen);\r\n    \r\n    //Construtor for initial supply (The address who deployed the contract will get it) and important information\r\n    function MyToken(uint256 initial_supply, string _name, string _symbol, uint8 _decimal) {\r\n        balanceOf[msg.sender] = initial_supply;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimal = _decimal;\r\n        totalSupply = initial_supply;\r\n    }\r\n    \r\n    //Function for transer the coin from one address to another\r\n    function transfer(address to, uint value) {\r\n        //checking account is freeze or not\r\n        if (frozenAccount[msg.sender]) throw;\r\n        //checking the sender should have enough coins\r\n        if(balanceOf[msg.sender] < value) throw;\r\n        //checking for overflows\r\n        if(balanceOf[to] + value < balanceOf[to]) throw;\r\n        \r\n        //substracting the sender balance\r\n        balanceOf[msg.sender] -= value;\r\n        //adding the reciever balance\r\n        balanceOf[to] += value;\r\n        \r\n        // Notify anyone listening that this transfer took place\r\n        Transfer(msg.sender, to, value);\r\n    }\r\n    \r\n    function mintToken(address target, uint256 mintedAmount) onlyOwner{\r\n        balanceOf[target] += mintedAmount;\r\n        totalSupply += mintedAmount;\r\n        \r\n        Transfer(0,owner,mintedAmount);\r\n        Transfer(owner,target,mintedAmount);\r\n    }\r\n\r\n    function freezeAccount(address target, bool freeze) onlyOwner {\r\n        frozenAccount[target] = freeze;\r\n        FrozenFunds(target, freeze);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"initial_supply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimal\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"}]","ContractName":"MyToken","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000016e3600000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000064d79436f696e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034d434e0000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://55fa8eb97f454fd765a894a0ebced2e2792150c35ac9f8f38652289d6dbad8ba"}]}