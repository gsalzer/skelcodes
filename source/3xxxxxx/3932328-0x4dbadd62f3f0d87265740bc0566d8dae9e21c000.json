{"status":"1","message":"OK","result":[{"SourceCode":"contract IProxyManagement { \r\n    function isProxyLegit(address _address) returns (bool){}\r\n    function raiseTransferEvent(address _from, address _to, uint _ammount){}\r\n    function raiseApprovalEvent(address _sender,address _spender,uint _value){}\r\n    function dedicatedProxyAddress() constant returns (address contractAddress){}\r\n}\r\n\r\ncontract ITokenRecipient { \r\n\tfunction receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); \r\n}\r\n\r\ncontract IFundManagement {\r\n\tfunction fundsCombinedValue() constant returns (uint value){}\r\n    function getFundAlterations() returns (uint alterations){}\r\n}\r\n\r\ncontract IERC20Token {\r\n\r\n    function totalSupply() constant returns (uint256 supply);\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract MacroTokenContract{\r\n    \r\n    address public dev;\r\n    address public curator;\r\n    address public mintingContractAddress;\r\n    address public destructionContractAddress;\r\n    uint256 public totalSupply = 0;\r\n    bool public lockdown = false;\r\n\r\n    string public standard = 'Macro token';\r\n    string public name = 'Macro';\r\n    string public symbol = 'MCR';\r\n    uint8 public decimals = 8;\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n    IProxyManagement proxyManagementContract;\r\n    IFundManagement fundManagementContract;\r\n\r\n    uint public weiForMcr;\r\n    uint public mcrAmmountForGas;\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    event Mint(address _destination, uint _amount);\r\n    event Destroy(address _destination, uint _amount);\r\n    event McrForGasFailed(address _failedAddress, uint _ammount);\r\n\r\n    function MacroTokenContract() { \r\n        dev = msg.sender;\r\n    }\r\n    \r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) returns (bool success){\r\n        if(balances[msg.sender] < _value) throw;\r\n        if(balances[_to] + _value <= balances[_to]) throw;\r\n        if(lockdown) throw;\r\n\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        createTransferEvent(true, msg.sender, _to, _value);              \r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        if(balances[_from] < _value) throw;\r\n        if(balances[_to] + _value <= balances[_to]) throw;\r\n        if(_value > allowed[_from][msg.sender]) throw;\r\n        if(lockdown) throw;\r\n\r\n        balances[_from] -= _value;\r\n        balances[_to] += _value;\r\n        createTransferEvent(true, _from, _to, _value);\r\n        allowed[_from][msg.sender] -= _value;\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        if(lockdown) throw;\r\n        \r\n        allowed[msg.sender][_spender] = _value;\r\n        createApprovalEvent(true, msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    function transferViaProxy(address _source, address _to, uint256 _amount) returns (bool success){\r\n        if (!proxyManagementContract.isProxyLegit(msg.sender)) throw;\r\n        if (balances[_source] < _amount) throw;\r\n        if (balances[_to] + _amount <= balances[_to]) throw;\r\n        if (lockdown) throw;\r\n\r\n        balances[_source] -= _amount;\r\n        balances[_to] += _amount;\r\n\r\n        if (msg.sender == proxyManagementContract.dedicatedProxyAddress()){\r\n            createTransferEvent(false, _source, _to, _amount); \r\n        }else{\r\n            createTransferEvent(true, _source, _to, _amount); \r\n        }\r\n        return true;\r\n    }\r\n    \r\n    function transferFromViaProxy(address _source, address _from, address _to, uint256 _amount) returns (bool success) {\r\n        if (!proxyManagementContract.isProxyLegit(msg.sender)) throw;\r\n        if (balances[_from] < _amount) throw;\r\n        if (balances[_to] + _amount <= balances[_to]) throw;\r\n        if (lockdown) throw;\r\n        if (_amount > allowed[_from][_source]) throw;\r\n\r\n        balances[_from] -= _amount;\r\n        balances[_to] += _amount;\r\n        allowed[_from][_source] -= _amount;\r\n\r\n        if (msg.sender == proxyManagementContract.dedicatedProxyAddress()){\r\n            createTransferEvent(false, _source, _to, _amount); \r\n        }else{\r\n            createTransferEvent(true, _source, _to, _amount); \r\n        }\r\n        return true;\r\n    }\r\n    \r\n    function approveViaProxy(address _source, address _spender, uint256 _value) returns (bool success) {\r\n        if (!proxyManagementContract.isProxyLegit(msg.sender)) throw;\r\n        if(lockdown) throw;\r\n        \r\n        allowed[_source][_spender] = _value;\r\n        if (msg.sender == proxyManagementContract.dedicatedProxyAddress()){\r\n            createApprovalEvent(false, _source, _spender, _value);\r\n        }else{\r\n            createApprovalEvent(true, _source, _spender, _value);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function mint(address _destination, uint _amount) returns (bool success){\r\n        if (msg.sender != mintingContractAddress) throw;\r\n        if(balances[_destination] + _amount < balances[_destination]) throw;\r\n        if(totalSupply + _amount < totalSupply) throw;\r\n\r\n        totalSupply += _amount;\r\n        balances[_destination] += _amount;\r\n        Mint(_destination, _amount);\r\n        createTransferEvent(true, 0x0, _destination, _amount);\r\n        return true;\r\n    }\r\n\r\n    function destroy(address _destination, uint _amount) returns (bool success) {\r\n        if (msg.sender != destructionContractAddress) throw;\r\n        if (balances[_destination] < _amount) throw;\r\n\r\n        totalSupply -= _amount;\r\n        balances[_destination] -= _amount;\r\n        Destroy(_destination, _amount);\r\n        createTransferEvent(true, _destination, 0x0, _amount);\r\n        return true;\r\n    }\r\n\r\n    function setTokenCurator(address _curatorAddress){\r\n        if( msg.sender != dev) throw;\r\n        curator = _curatorAddress;\r\n    }\r\n    \r\n    function setMintingContractAddress(address _contractAddress){ \r\n        if (msg.sender != curator) throw;\r\n        mintingContractAddress = _contractAddress;\r\n    }\r\n\r\n    function setDescrutionContractAddress(address _contractAddress){ \r\n        if (msg.sender != curator) throw;\r\n        destructionContractAddress = _contractAddress;\r\n    }\r\n\r\n    function setProxyManagementContract(address _contractAddress){\r\n        if (msg.sender != curator) throw;\r\n        proxyManagementContract = IProxyManagement(_contractAddress);\r\n    }\r\n\r\n    function setFundManagementContract(address _contractAddress){\r\n        if (msg.sender != curator) throw;\r\n        fundManagementContract = IFundManagement(_contractAddress);\r\n    }\r\n\r\n    function emergencyLock() {\r\n        if (msg.sender != curator && msg.sender != dev) throw;\r\n        \r\n        lockdown = !lockdown;\r\n    }\r\n\r\n    function killContract(){\r\n        if (msg.sender != dev) throw;\r\n        selfdestruct(dev);\r\n    }\r\n\r\n    function setWeiForMcr(uint _value){\r\n        if (msg.sender != curator) throw;\r\n        weiForMcr = _value;\r\n    }\r\n    \r\n    function setMcrAmountForGas(uint _value){\r\n        if (msg.sender != curator) throw;\r\n        mcrAmmountForGas = _value;\r\n    }\r\n\r\n    function getGasForMcr(){\r\n        if (balances[msg.sender] < mcrAmmountForGas) throw;\r\n        if (balances[curator] > balances[curator] + mcrAmmountForGas) throw;\r\n        if (this.balance < weiForMcr * mcrAmmountForGas) throw;\r\n\r\n        balances[msg.sender] -= mcrAmmountForGas;\r\n        balances[curator] += mcrAmmountForGas;\r\n        createTransferEvent(true, msg.sender, curator, weiForMcr * mcrAmmountForGas);\r\n        if (!msg.sender.send(weiForMcr * mcrAmmountForGas)) {\r\n            McrForGasFailed(msg.sender, weiForMcr * mcrAmmountForGas);\r\n        }\r\n    }\r\n\r\n    function fundManagementAddress() constant returns (address fundManagementAddress){\r\n        return address(fundManagementContract);\r\n    }\r\n\r\n    function proxyManagementAddress() constant returns (address proxyManagementAddress){\r\n        return address(proxyManagementContract);\r\n    }\r\n\r\n    function fundsCombinedValue() constant returns (uint value){\r\n        return fundManagementContract.fundsCombinedValue();\r\n    }\r\n\r\n    function getGasForMcrData() constant returns (uint, uint){\r\n        return (weiForMcr, mcrAmmountForGas);\r\n    }\r\n\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        ITokenRecipient spender = ITokenRecipient(_spender);\r\n        spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n        return true;\r\n    }\r\n\r\n    function createTransferEvent(bool _relayEvent, address _from, address _to, uint256 _value) internal {\r\n        if (_relayEvent){\r\n            proxyManagementContract.raiseTransferEvent(_from, _to, _value);\r\n        }\r\n        Transfer(_from, _to, _value);\r\n    }\r\n\r\n    function createApprovalEvent(bool _relayEvent, address _sender, address _spender, uint _value) internal {\r\n        if (_relayEvent){\r\n            proxyManagementContract.raiseApprovalEvent(_sender, _spender, _value);\r\n        }\r\n        Approval(_sender, _spender, _value);\r\n    }\r\n    \r\n    function fillContract() payable{\r\n        if (msg.sender != curator) throw;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"fundsCombinedValue\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"setFundManagementContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proxyManagementAddress\",\"outputs\":[{\"name\":\"proxyManagementAddress\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"killContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"fillContract\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_source\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferViaProxy\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"setDescrutionContractAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiForMcr\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockdown\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_destination\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setWeiForMcr\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mcrAmmountForGas\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundManagementAddress\",\"outputs\":[{\"name\":\"fundManagementAddress\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"destructionContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"setMintingContractAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_source\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approveViaProxy\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintingContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_curatorAddress\",\"type\":\"address\"}],\"name\":\"setTokenCurator\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getGasForMcrData\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_destination\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroy\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getGasForMcr\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"setProxyManagementContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_source\",\"type\":\"address\"},{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFromViaProxy\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"emergencyLock\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMcrAmountForGas\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_destination\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_destination\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Destroy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_failedAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_ammount\",\"type\":\"uint256\"}],\"name\":\"McrForGasFailed\",\"type\":\"event\"}]","ContractName":"MacroTokenContract","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f8957d9990eb121c65c7d8291d58cffb6c6d57263899ab57c26565cdf95417be"}]}