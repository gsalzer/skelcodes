{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\ncontract FundariaToken {\r\n    string public constant name = \"Fundaria Token\";\r\n    string public constant symbol = \"RI\";\r\n    \r\n    uint public totalSupply; // how many tokens supplied at the moment\r\n    uint public supplyLimit; // how many tokens can be supplied    \r\n    uint public course; // course wei for token\r\n \r\n    mapping(address=>uint256) public balanceOf; // owned tokens\r\n    mapping(address=>mapping(address=>uint256)) public allowance; // allowing third parties to transfer tokens \r\n    mapping(address=>bool) public allowedAddresses; // allowed addresses to manage some functions    \r\n\r\n    address public fundariaPoolAddress; // ether source for Fundaria development\r\n    address creator; // creator address of this contract\r\n    \r\n    event SuppliedTo(address indexed _to, uint _value);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    event SupplyLimitChanged(uint newLimit, uint oldLimit);\r\n    event AllowedAddressAdded(address _address);\r\n    event CourseChanged(uint newCourse, uint oldCourse);\r\n    \r\n    function FundariaToken() {\r\n        allowedAddresses[msg.sender] = true; // add creator address to allowed addresses\r\n        creator = msg.sender;\r\n    }\r\n    \r\n    // condition to be creator address to run some functions\r\n    modifier onlyCreator { \r\n        if(msg.sender == creator) _; \r\n    }\r\n    \r\n    // condition to be allowed address to run some functions\r\n    modifier isAllowed {\r\n        if(allowedAddresses[msg.sender]) _; \r\n    }\r\n    \r\n    // set address for Fundaria source of ether\r\n    function setFundariaPoolAddress(address _fundariaPoolAddress) onlyCreator {\r\n        fundariaPoolAddress = _fundariaPoolAddress;\r\n    }     \r\n    \r\n    // expand allowed addresses with new one    \r\n    function addAllowedAddress(address _address) onlyCreator {\r\n        allowedAddresses[_address] = true;\r\n        AllowedAddressAdded(_address);\r\n    }\r\n    \r\n    // remove allowed address\r\n    function removeAllowedAddress(address _address) onlyCreator {\r\n        delete allowedAddresses[_address];    \r\n    }\r\n\r\n    // increase token balance of some address\r\n    function supplyTo(address _to, uint _value) isAllowed {\r\n        totalSupply += _value;\r\n        balanceOf[_to] += _value;\r\n        SuppliedTo(_to, _value);\r\n    }\r\n    \r\n    // limit total tokens can be supplied\r\n    function setSupplyLimit(uint newLimit) isAllowed {\r\n        SupplyLimitChanged(newLimit, supplyLimit);\r\n        supplyLimit = newLimit;\r\n    }                \r\n    \r\n    // set course\r\n    function setCourse(uint newCourse) isAllowed {\r\n        CourseChanged(newCourse, course);\r\n        course = newCourse;\r\n    } \r\n    \r\n    // token for wei according to course\r\n    function tokenForWei(uint _wei) constant returns(uint) {\r\n        return _wei/course;    \r\n    }\r\n    \r\n    // wei for token according to course\r\n    function weiForToken(uint _token) constant returns(uint) {\r\n        return _token*course;\r\n    } \r\n    \r\n    // transfer tokens to another address (owner)    \r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        if (_to == 0x0 || balanceOf[msg.sender] < _value || balanceOf[_to] + _value < balanceOf[_to]) \r\n            return false; \r\n        balanceOf[msg.sender] -= _value;                     \r\n        balanceOf[_to] += _value;                            \r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    // setting of availability of tokens transference for third party\r\n    function transferFrom(address _from, address _to, uint256 _value) \r\n        returns (bool success) {\r\n        if(_to == 0x0 || balanceOf[_from] < _value || _value > allowance[_from][msg.sender]) \r\n            return false;                                \r\n        balanceOf[_from] -= _value;                           \r\n        balanceOf[_to] += _value;                             \r\n        allowance[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    // approving transference of tokens for third party\r\n    function approve(address _spender, uint256 _value) \r\n        returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    \r\n    // Prevents accidental sending of ether\r\n    function () {\r\n\t    throw; \r\n    }     \r\n         \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCourse\",\"type\":\"uint256\"}],\"name\":\"setCourse\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fundariaPoolAddress\",\"type\":\"address\"}],\"name\":\"setFundariaPoolAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"supplyLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"setSupplyLimit\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_wei\",\"type\":\"uint256\"}],\"name\":\"tokenForWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeAllowedAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"uint256\"}],\"name\":\"weiForToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundariaPoolAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addAllowedAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"supplyTo\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"course\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":false,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"SuppliedTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"oldLimit\",\"type\":\"uint256\"}],\"name\":\"SupplyLimitChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"AllowedAddressAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newCourse\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"oldCourse\",\"type\":\"uint256\"}],\"name\":\"CourseChanged\",\"type\":\"event\"}]","ContractName":"FundariaToken","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://554dfda49a5529351435b2666f56e12c15a5f5075ca6f797b4c4d61005f4a993"}]}