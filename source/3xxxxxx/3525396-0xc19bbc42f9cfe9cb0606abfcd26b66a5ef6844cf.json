{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * Interface for defining crowdsale pricing.\r\n */\r\ncontract PricingStrategy {\r\n\r\n  /**\r\n   * When somebody tries to buy tokens for X eth, calculate how many tokens they get.\r\n   */\r\n  function calculatePrice(uint value, uint tokensSold, uint weiRaised, address msgSender) public constant returns (uint tokenAmount);\r\n}\r\n\r\n\r\n\r\n/**\r\n * Time milestone based pricing with special support for pre-ico deals.\r\n */\r\ncontract MilestonePricing is PricingStrategy {\r\n\r\n  uint public constant MAX_MILESTONE = 10;\r\n\r\n  // This is our PresaleFundCollector contract\r\n  address public preicoContractAddress;\r\n\r\n  // Price for presale investors weis per toke\r\n  uint public preicoPrice;\r\n\r\n  /**\r\n  * Define pricing schedule using milestones.\r\n  */\r\n  struct Milestone {\r\n\r\n      // UNIX timestamp when this milestone kicks in\r\n      uint time;\r\n\r\n      // How many tokens per satoshi you will get after this milestone has been passed\r\n      uint price;\r\n  }\r\n\r\n  // Store milestones in a fixed array, so that it can be seen in a blockchain explorer\r\n  // Milestone 0 is always (0, 0)\r\n  // (TODO: change this when we confirm dynamic arrays are explorable)\r\n  Milestone[10] public milestones;\r\n\r\n  // How many active milestones we have\r\n  uint public milestoneCount;\r\n\r\n  /**\r\n   * @param _preicoContractAddress PresaleFundCollector address\r\n   * @param _preicoPrice How many weis one token cost for pre-ico investors\r\n   * @param _milestones uint[] miletones Pairs of (time, price)\r\n   */\r\n  function MilestonePricing(address _preicoContractAddress, uint _preicoPrice, uint[] _milestones) {\r\n\r\n    preicoContractAddress = _preicoContractAddress;\r\n    preicoPrice = _preicoPrice;\r\n\r\n    // Need to have tuples, length check\r\n    if(_milestones.length % 2 == 1 || _milestones.length >= MAX_MILESTONE) {\r\n      throw;\r\n    }\r\n\r\n    milestoneCount = _milestones.length / 2;\r\n\r\n    for(uint i=0; i<_milestones.length/2; i++) {\r\n      milestones[i].time = _milestones[i*2];\r\n      milestones[i].price = _milestones[i*2+1];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Iterate through milestones.\r\n   *\r\n   * You reach end of milestones when price = 0\r\n   *\r\n   * @return tuple (time, price)\r\n   */\r\n  function getMilestone(uint n) public constant returns (uint, uint) {\r\n     return (milestones[n].time, milestones[n].price);\r\n  }\r\n\r\n  /**\r\n   * Get the current milestone or bail out if we are not in the milestone periods.\r\n   *\r\n   * @return {[type]} [description]\r\n   */\r\n  function getCurrentMilestone() private constant returns (Milestone) {\r\n    uint i;\r\n    uint price;\r\n\r\n    for(i=0; i<milestones.length; i++) {\r\n      if(now < milestones[i].time) {\r\n        return milestones[i-1];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the current price.\r\n   *\r\n   * @return The current price or 0 if we are outside milestone period\r\n   */\r\n  function getCurrentPrice() public constant returns (uint result) {\r\n    return getCurrentMilestone().price;\r\n  }\r\n\r\n  /**\r\n   * Calculate the current price for buy in amount.\r\n   */\r\n  function calculatePrice(uint value, uint tokensSold, uint weiRaised, address msgSender) public constant returns (uint) {\r\n\r\n    // This investor is coming through pre-ico\r\n    if(msgSender == preicoContractAddress) {\r\n      return value / preicoPrice;\r\n    }\r\n\r\n    uint price = getCurrentPrice();\r\n    return value / price;\r\n  }\r\n\r\n  function() payable {\r\n    throw; // No money on this contract\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"milestoneCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"getMilestone\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_MILESTONE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preicoContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"tokensSold\",\"type\":\"uint256\"},{\"name\":\"weiRaised\",\"type\":\"uint256\"},{\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"calculatePrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preicoPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"milestones\",\"outputs\":[{\"name\":\"time\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_preicoContractAddress\",\"type\":\"address\"},{\"name\":\"_preicoPrice\",\"type\":\"uint256\"},{\"name\":\"_milestones\",\"type\":\"uint256[]\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"MilestonePricing","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000858759541633d5142855b27f16f5f67ea78654bf0000000000000000000000000000000000000000000000000002d79883d20000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000058efa0800000000000000000000000000000000000000000000000000003328b944c40000000000000000000000000000000000000000000000000000000000058f0f20000000000000000000000000000000000000000000000000000038d7ea4c68000","Library":"","SwarmSource":"bzzr://a6299ebbbdcfad532613fa9ec89d372a511be5ad81ffd72bf29d157a4075d6e1"}]}