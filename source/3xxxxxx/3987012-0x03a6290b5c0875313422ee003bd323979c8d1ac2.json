{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\ncontract Token {\r\n    function transferFrom(address, address, uint256) returns (bool);\r\n}\r\ncontract EscrowExchange {\r\n    struct courseAndAddress {\r\n        uint course;\r\n        address tokenContractAddress;\r\n    }\r\n    mapping(address=>courseAndAddress) public tokenSellData;\r\n    function setTokenForSale(uint course, address tokenContractAddress) {\r\n        tokenSellData[msg.sender].course = course;        \r\n        tokenSellData[msg.sender].tokenContractAddress = tokenContractAddress;\r\n    }\r\n    function buyToken(address sellerAddress) payable returns(bool) {\r\n        require(msg.value>0);\r\n        Token token = Token(tokenSellData[sellerAddress].tokenContractAddress);\r\n        var tokens = msg.value/tokenSellData[sellerAddress].course;\r\n        require(tokens>0);\r\n        bool success = false;\r\n        if(token.transferFrom(sellerAddress, msg.sender, tokens)) {\r\n            sellerAddress.transfer(msg.value);\r\n            success = true;\r\n        }\r\n        return success;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"course\",\"type\":\"uint256\"},{\"name\":\"tokenContractAddress\",\"type\":\"address\"}],\"name\":\"setTokenForSale\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sellerAddress\",\"type\":\"address\"}],\"name\":\"buyToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenSellData\",\"outputs\":[{\"name\":\"course\",\"type\":\"uint256\"},{\"name\":\"tokenContractAddress\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"}]","ContractName":"EscrowExchange","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://97cd42c86a30a43af0761a12047c3200c1d9280b59ec4c99a1f8ee0c041f5243"}]}