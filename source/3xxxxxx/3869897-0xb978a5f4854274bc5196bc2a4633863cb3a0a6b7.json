{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\n\r\ncontract Pyramid {\r\n    address master;\r\n\r\n    address[] memberQueue;\r\n    uint queueFront;\r\n\r\n    event Joined(address indexed _member, uint _entries, uint _paybackStartNum);\r\n\r\n    modifier onlymaster { if (msg.sender == master) _; }\r\n\r\n    function Pyramid() {\r\n        master = msg.sender;\r\n        memberQueue.push(master);\r\n        queueFront = 0;\r\n    }\r\n\r\n    // fallback function, wont work to call join here bc we will run out of gas (2300 gas for send())\r\n    function(){}\r\n\r\n    // users are allowed to join with .1 - 5 ethereum\r\n    function join() payable {\r\n        require(msg.value >= 100 finney);\r\n\r\n        uint entries = msg.value / 100 finney;\r\n        entries = entries > 50 ? 50 : entries; // cap at 5 ethereum\r\n\r\n        for (uint i = 0; i < entries; i++) {\r\n            memberQueue.push(msg.sender);\r\n\r\n            if (memberQueue.length % 2 == 1) {\r\n                queueFront += 1;\r\n                memberQueue[queueFront-1].transfer(194 finney);\r\n            }\r\n        }\r\n\r\n        Joined(msg.sender, entries, memberQueue.length * 2);\r\n\r\n        // send back any unused ethereum\r\n        uint remainder = msg.value - (entries * 100 finney);\r\n        if (remainder > 1 finney) {\r\n            msg.sender.transfer(remainder);\r\n        }\r\n        //msg.sender.send(msg.value - entries * 100 finney);\r\n    }\r\n\r\n    function collectFee() onlymaster {\r\n        master.transfer(this.balance - 200 finney);\r\n    }\r\n\r\n    function setMaster(address _master) onlymaster {\r\n        master = _master;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_master\",\"type\":\"address\"}],\"name\":\"setMaster\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"join\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectFee\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":false,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_member\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_entries\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_paybackStartNum\",\"type\":\"uint256\"}],\"name\":\"Joined\",\"type\":\"event\"}]","ContractName":"Pyramid","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://440d24df292a21a0cde0ba75b1c128b8e5751ae7347fa5d3376db34a9f75b6af"}]}