{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\n\r\n// 'interface':\r\n//  this is expected from another contract,\r\n//  where tokens (ERC20) are managed\r\ncontract Erc20TokensContract {\r\n    function transfer(address _to, uint256 _value);\r\n    // returns (bool success); // not in CoinOffering Corporation.sol\r\n    function balanceOf(address acc) returns (uint);\r\n}\r\n\r\n\r\ncontract ICO {\r\n\r\n    Erc20TokensContract erc20TokensContract;\r\n\r\n    address public erc20TokensContractAddress;\r\n\r\n    bool erc20TokensContractSet = false;\r\n\r\n    // address public erc20TokensContractAddress;\r\n    // bool erc20TokensContractAddressSet = false;\r\n\r\n    uint public priceToBuyInFinney; // price in finney (0.001 ETH)\r\n    uint priceToBuyInWei; // --> to reduce gas in buyTokens\r\n\r\n    address public owner;\r\n\r\n    mapping (address => bool) public isManager; // holds managers\r\n\r\n    // for price chart:\r\n    mapping (uint => uint[3]) public priceChange;\r\n    // number of change => [priceToBuyInFinney, block.number, block.timestamp]\r\n    uint public currentPriceChangeNumber = 0;\r\n\r\n    // for deals chart:\r\n    mapping (uint => uint[4]) public deals;\r\n    // number of change => [priceInFinney, quantity, block.number, block.timestamp]\r\n    uint public dealsNumber = 0;\r\n\r\n    /* ---- Creates contract */\r\n    function ICO() {// - truffle compiles only no args Constructor\r\n        owner = msg.sender;\r\n        isManager[msg.sender] = true;\r\n        priceToBuyInFinney = 0;\r\n        // with price 0 tokens sale stopped\r\n        priceToBuyInWei = finneyToWei(priceToBuyInFinney);\r\n        priceChange[0] = [priceToBuyInFinney, block.number, block.timestamp];\r\n    }\r\n\r\n    function setErc20TokensContract(address _erc20TokensContractAddress) returns (bool){\r\n        if (msg.sender != owner) {throw;}\r\n        if (erc20TokensContractSet) {throw;}\r\n        erc20TokensContract = Erc20TokensContract(_erc20TokensContractAddress);\r\n        erc20TokensContractAddress = _erc20TokensContractAddress;\r\n        erc20TokensContractSet = true;\r\n        TokensContractAddressSet(_erc20TokensContractAddress, msg.sender);\r\n        return true;\r\n    }\r\n\r\n    event TokensContractAddressSet(address tokensContractAddress, address setBy);\r\n\r\n    /* ------- Utilities:  */\r\n    //    function weiToEther(uint _wei) internal returns (uint){\r\n    //        return _wei / 1000000000000000000;\r\n    //    }\r\n    //\r\n    //    function etherToWei(uint _ether) internal returns (uint){\r\n    //        return _ether * 1000000000000000000;\r\n    //    }\r\n\r\n    function weiToFinney(uint _wei) internal returns (uint){\r\n        return _wei / (1000000000000000000 * 1000);\r\n    }\r\n\r\n    function finneyToWei(uint _finney) internal returns (uint){\r\n        return _finney * (1000000000000000000 / 1000);\r\n    }\r\n\r\n    /* --- universal Event */\r\n    event Result(address transactionInitiatedBy, string message);\r\n\r\n    /* administrative functions */\r\n    // change owner:\r\n    function changeOwner(address _newOwner) returns (bool){\r\n        if (msg.sender != owner) {throw;}\r\n        owner = _newOwner;\r\n        isManager[_newOwner] = true;\r\n        OwnerChanged(msg.sender, owner);\r\n        return true;\r\n    }\r\n\r\n    event OwnerChanged(address oldOwner, address newOwner);\r\n\r\n    // --- set managers\r\n    function setManager(address _newManager) returns (bool){\r\n        if (msg.sender == owner) {\r\n            isManager[_newManager] = true;\r\n            ManagersChanged(\"manager added\", _newManager);\r\n            return true;\r\n        }\r\n        else throw;\r\n    }\r\n\r\n    // remove managers\r\n    function removeManager(address _manager) returns (bool){\r\n        if (msg.sender == owner) {\r\n            isManager[_manager] = false;\r\n            ManagersChanged(\"manager removed\", _manager);\r\n            return true;\r\n        }\r\n        else throw;\r\n    }\r\n\r\n    event ManagersChanged(string change, address manager);\r\n\r\n    // set new price for tokens:\r\n    function setNewPriceInFinney(uint _priceToBuyInFinney) returns (bool){\r\n\r\n        if (msg.sender != owner || !isManager[msg.sender]) {throw;}\r\n\r\n        priceToBuyInFinney = _priceToBuyInFinney;\r\n        priceToBuyInWei = finneyToWei(priceToBuyInFinney);\r\n        currentPriceChangeNumber++;\r\n        priceChange[currentPriceChangeNumber] = [priceToBuyInFinney, block.number, block.timestamp];\r\n        PriceChanged(priceToBuyInFinney, msg.sender);\r\n        return true;\r\n    }\r\n\r\n    event PriceChanged(uint newPriceToBuyInFinney, address changedBy);\r\n\r\n    function getPriceChange(uint _index) constant returns (uint[3]){\r\n        return priceChange[_index];\r\n        // array\r\n    }\r\n\r\n    // ---- buy tokens:\r\n    // if you get message:\r\n    // \"It seems this transaction will fail. If you submit it, it may consume\r\n    // all the gas you send\",\r\n    // or\r\n    // \"The contract won't allow this transaction to be executed\"\r\n    // that may be means that price has changed, just wait a few minutes\r\n    // and repeat transaction\r\n    function buyTokens(uint _quantity, uint _priceToBuyInFinney) payable returns (bool){\r\n\r\n        if (priceToBuyInFinney <= 0) {throw;}\r\n        // if priceToBuy == 0 selling stops;\r\n\r\n        // if (_priceToBuyInFinney <= 0) {throw;}\r\n        // if (_quantity <= 0) {throw;}\r\n\r\n        if (priceToBuyInFinney != _priceToBuyInFinney) {\r\n            //    Result(msg.sender, \"transaction failed: price already changed\");\r\n            throw;\r\n        }\r\n\r\n        if (\r\n        (msg.value / priceToBuyInWei) != _quantity\r\n        ) {\r\n            // Result(msg.sender, \"provided sum is not correct for this amount of tokens\");\r\n            throw;\r\n        }\r\n        // if everything is O.K. make transfer (~ 37046 gas):\r\n        // check balance in token contract:\r\n        uint currentBalance = erc20TokensContract.balanceOf(this);\r\n        if (erc20TokensContract.balanceOf(this) < _quantity) {throw;}\r\n        else {\r\n            // make transfer\r\n            erc20TokensContract.transfer(msg.sender, _quantity);\r\n            // check if tx changed erc20TokensContract:\r\n            if (currentBalance == erc20TokensContract.balanceOf(this)) {\r\n                throw;\r\n            }\r\n            // record this :\r\n            dealsNumber = dealsNumber + 1;\r\n            deals[dealsNumber] = [_priceToBuyInFinney, _quantity, block.number, block.timestamp];\r\n            // event\r\n            Deal(msg.sender, _priceToBuyInFinney, _quantity);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // event BuyTokensError(address transactionFrom, string error); // if throw - no events\r\n\r\n    event Deal(address to, uint priceInFinney, uint quantity);\r\n\r\n    function transferTokensTo(address _to, uint _quantity) returns (bool) {\r\n\r\n        if (msg.sender != owner) {throw;}\r\n        if (_quantity <= 0) {throw;}\r\n\r\n        // check balance in token contract:\r\n        if (erc20TokensContract.balanceOf(this) < _quantity) {\r\n            throw;\r\n\r\n        }\r\n        else {\r\n            // make transfer\r\n            erc20TokensContract.transfer(_to, _quantity);\r\n            // event:\r\n            TokensTransfer(msg.sender, _to, _quantity);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function transferAllTokensToOwner() returns (bool) {\r\n        return transferTokensTo(owner, erc20TokensContract.balanceOf(this));\r\n    }\r\n\r\n    event TokensTransfer (address from, address to, uint quantity);\r\n\r\n    function transferTokensToContractOwner(uint _quantity) returns (bool) {\r\n        return transferTokensTo(msg.sender, _quantity);\r\n    }\r\n\r\n    /* --- functions for ETH */\r\n    function withdraw(uint _sumToWithdrawInFinney) returns (bool) {\r\n        if (msg.sender != owner) {throw;}\r\n        if (_sumToWithdrawInFinney <= 0) {throw;}\r\n        if (this.balance < finneyToWei(_sumToWithdrawInFinney)) {\r\n            throw;\r\n        }\r\n\r\n        if (msg.sender == owner) {// double check\r\n\r\n            if (!msg.sender.send(finneyToWei(_sumToWithdrawInFinney))) {// makes withdrawal and returns true or false\r\n                //  Withdrawal(msg.sender, _sumToWithdrawInFinney, \"withdrawal: failed\");\r\n                return false;\r\n            }\r\n            else {\r\n                Withdrawal(msg.sender, _sumToWithdrawInFinney, \"withdrawal: success\");\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    function withdrawAllToOwner() returns (bool) {\r\n        return withdraw(this.balance);\r\n    }\r\n\r\n    event Withdrawal(address to, uint sumToWithdrawInFinney, string message);\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceChange\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erc20TokensContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dealsNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_erc20TokensContractAddress\",\"type\":\"address\"}],\"name\":\"setErc20TokensContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"transferTokensTo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sumToWithdrawInFinney\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getPriceChange\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[3]\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_priceToBuyInFinney\",\"type\":\"uint256\"}],\"name\":\"setNewPriceInFinney\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_quantity\",\"type\":\"uint256\"},{\"name\":\"_priceToBuyInFinney\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"transferTokensToContractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAllToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceToBuyInFinney\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transferAllTokensToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"removeManager\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentPriceChangeNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isManager\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokensContractAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"setBy\",\"type\":\"address\"}],\"name\":\"TokensContractAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"transactionInitiatedBy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Result\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"change\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ManagersChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newPriceToBuyInFinney\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"PriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"priceInFinney\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"Deal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"TokensTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"sumToWithdrawInFinney\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Withdrawal\",\"type\":\"event\"}]","ContractName":"ICO","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7a7045c874fa1a7afd011ade340afbd08686fb5b1fa88c4fbd0f98639f4e0bb8"}]}