{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n   function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n      uint256 c = a * b;\r\n      assert(a == 0 || c / a == b);\r\n      return c;\r\n   }\r\n\r\n   function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n      // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n      uint256 c = a / b;\r\n      // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n      return c;\r\n   }\r\n\r\n   function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n      assert(b <= a);\r\n      return a - b;\r\n   }\r\n\r\n   function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n      uint256 c = a + b;\r\n      assert(c >= a);\r\n      return c;\r\n   }\r\n\r\n   function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n      return a < b ? a : b;\r\n   }\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n *\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\r\n */\r\ncontract ERC20Token {\r\n\r\n   uint256 public totalSupply;\r\n   function balanceOf(address _owner) constant returns (uint256 balance);\r\n   function transfer(address _to, uint256 _value) returns (bool success);\r\n   function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n   function approve(address _spender, uint256 _value) returns (bool success);\r\n   function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n   event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n   event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20 implementation\r\n *\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\r\n * @dev Based on code by OpenZeppelin: https://github.com/OpenZeppelin/zeppelin-solidity\r\n */\r\ncontract StandardToken is ERC20Token {\r\n   using SafeMath for uint256;\r\n\r\n   mapping (address => uint256) balances;\r\n   mapping (address => mapping (address => uint256)) allowed;\r\n\r\n   /**\r\n    * @dev gets the balance of the specified address\r\n    * @param _owner The address to query the balance of\r\n    * @return uint256 The balance of the passed address\r\n    */\r\n   function balanceOf(address _owner) constant returns (uint256 balance) {\r\n      return balances[_owner];\r\n   }\r\n\r\n   /**\r\n    * @dev transfer tokens to the specified address\r\n    * @param _to The address to transfer to\r\n    * @param _value The amount to be transferred\r\n    * @return bool A successful transfer returns true\r\n    */\r\n   function transfer(address _to, uint256 _value) returns (bool success) {\r\n      require(_to != address(0));\r\n\r\n      // SafeMath.sub will throw if there is not enough balance.\r\n      balances[msg.sender] = balances[msg.sender].sub(_value);\r\n      balances[_to] = balances[_to].add(_value);\r\n      Transfer(msg.sender, _to, _value);\r\n      return true;\r\n   }\r\n\r\n   /**\r\n    * @dev transfer tokens from one address to another\r\n    * @param _from address The address that you want to send tokens from\r\n    * @param _to address The address that you want to transfer to\r\n    * @param _value uint256 The amount to be transferred\r\n    * @return bool A successful transfer returns true\r\n    */\r\n   function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n      require(_to != address(0));\r\n\r\n      uint256 _allowance = allowed[_from][msg.sender];\r\n      balances[_from] = balances[_from].sub(_value);\r\n      balances[_to] = balances[_to].add(_value);\r\n      allowed[_from][msg.sender] = _allowance.sub(_value);\r\n      Transfer(_from, _to, _value);\r\n      return true;\r\n   }\r\n\r\n   /**\r\n    * @dev approve the passed address to spend the specified amount of tokens\r\n    * @dev Note that the approved value must first be set to zero in order for it to be changed\r\n    * @dev https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    * @param _spender The address that will spend the funds\r\n    * @param _value The amount of tokens to be spent\r\n    * @return bool A successful approval returns true\r\n    */\r\n   function approve(address _spender, uint256 _value) returns (bool success) {\r\n\r\n     //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n\r\n     allowed[msg.sender][_spender] = _value;\r\n     Approval(msg.sender, _spender, _value);\r\n     return true;\r\n   }\r\n\r\n   /**\r\n    * @dev gets the amount of tokens that an owner has allowed an address to spend\r\n    * @param _owner The address that owns the funds\r\n    * @param _spender The address that will spend the funds\r\n    * @return uint256 The amount that is available to spend\r\n    */\r\n   function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n     return allowed[_owner][_spender];\r\n   }\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n   address public owner;\r\n\r\n   event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n   /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender account.\r\n   */\r\n   function Ownable() {\r\n      owner = msg.sender;\r\n   }\r\n\r\n   /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n   modifier onlyOwner() {\r\n      require(msg.sender == owner);\r\n      _;\r\n   }\r\n\r\n   /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n   function transferOwnership(address newOwner) onlyOwner {\r\n      require(newOwner != address(0));\r\n      OwnershipTransferred(owner, newOwner);\r\n      owner = newOwner;\r\n   }\r\n}\r\n\r\n\r\n/**\r\n * @title Token holder contract\r\n *\r\n * @dev Allow the owner to transfer any ERC20 tokens accidentally sent to the contract address\r\n */\r\ncontract TokenHolder is Ownable {\r\n\r\n    /**\r\n     * @dev transfer tokens to the specified address\r\n     * @param _tokenAddress The address to transfer to\r\n     * @param _amount The amount to be transferred\r\n     * @return bool A successful transfer returns true\r\n     */\r\n    function transferAnyERC20Token(address _tokenAddress, uint256 _amount) onlyOwner returns (bool success) {\r\n        return ERC20Token(_tokenAddress).transfer(owner, _amount);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title Kudos Token\r\n * @author Ben Johnson\r\n *\r\n * @dev ERC20 Kudos Token (KUDOS)\r\n *\r\n * Kudos tokens are displayed using 18 decimal places of precision.\r\n *\r\n * The base units of Kudos tokens are referred to as \"kutoas\".\r\n *\r\n * In Swahili, kutoa means \"to give\".\r\n * In Finnish, kutoa means \"to weave\" or \"to knit\".\r\n *\r\n * 1 KUDOS is equivalent to:\r\n *\r\n *    1,000,000,000,000,000,000 == 1 * 10**18 == 1e18 == One Quintillion kutoas\r\n *\r\n *\r\n * All initial KUDOS kutoas are assigned to the creator of this contract.\r\n *\r\n */\r\ncontract KudosToken is StandardToken, Ownable, TokenHolder {\r\n\r\n   string public constant name = \"Kudos\";\r\n   string public constant symbol = \"KUDOS\";\r\n   uint8 public constant decimals = 18;\r\n   string public constant version = \"1.0\";\r\n\r\n   uint256 public constant tokenUnit = 10 ** 18;\r\n   uint256 public constant oneBillion = 10 ** 9;\r\n   uint256 public constant maxTokens = 10 * oneBillion * tokenUnit;\r\n\r\n   function KudosToken() {\r\n      totalSupply = maxTokens;\r\n      balances[msg.sender] = maxTokens;\r\n   }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oneBillion\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenUnit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"KudosToken","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2268365be78005376f5a8399e81e3e0994ff7ec5ee04bdb9707a132ce14f22f4"}]}