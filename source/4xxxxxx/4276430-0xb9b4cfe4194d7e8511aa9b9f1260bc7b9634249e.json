{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.10;\r\n\r\ncontract IERC20Token {\r\n    function totalSupply() public constant returns ( uint256 supply ) { supply; }\r\n    function balanceOf( address _owner ) public constant returns ( uint256 balance ) { _owner; balance; }\r\n    function allowance( address _owner, address _spender ) public constant returns ( uint256 remaining ) { _owner; _spender; remaining; }\r\n\r\n  function transfer( address _to, uint256 _value ) public returns ( bool success );\r\n  function transferFrom( address _from, address _to, uint256 _value ) public returns ( bool success );\r\n  function approve( address _spender, uint256 _value ) public returns ( bool success );\r\n}\r\n\r\ncontract RegaUtils {\r\n  modifier validAddress( address _address ) {\r\n    require( _address != 0x0 );\r\n    _;\r\n  }\r\n\r\n  // Overflow checked math\r\n  function safeAdd( uint256 x, uint256 y ) internal returns( uint256 ) {\r\n    uint256 z = x + y;\r\n    assert( z >= x );\r\n    return z;\r\n  }\r\n\r\n  function safeSub( uint256 x, uint256 y ) internal returns( uint256 ) {\r\n    assert( x >= y);\r\n    return x - y;\r\n  }\r\n}\r\n\r\ncontract ERC20Token is IERC20Token, RegaUtils {\r\n  uint256 public totalSupply = 0;\r\n  mapping( address => uint256 ) public balanceOf;\r\n  mapping( address => mapping( address => uint256 ) ) public allowance;\r\n\r\n  event Transfer( address indexed _from, address indexed _to, uint256 _value );\r\n  event Approval( address indexed _owner, address indexed _spender, uint256 _value );\r\n\r\n  function transfer( address _to, uint256 _value ) validAddress( _to )\r\n    returns( bool success )\r\n  {\r\n    balanceOf[ msg.sender ] = safeSub( balanceOf[ msg.sender ], _value );\r\n    balanceOf[ _to ] = safeAdd( balanceOf[ _to ], _value );\r\n    Transfer( msg.sender, _to, _value );\r\n    return true;\r\n  }\r\n\r\n  function transferFrom( address _from, address _to, uint256 _value ) validAddress( _from ) validAddress( _to )\r\n    returns( bool success )\r\n  {\r\n    allowance[ _from ][ msg.sender ] = safeSub( allowance[ _from ][ msg.sender ], _value );\r\n    balanceOf[ _from] = safeSub( balanceOf[_from], _value );\r\n    balanceOf[ _to] = safeAdd( balanceOf[_to], _value );\r\n    Transfer( _from, _to, _value );\r\n    return true;\r\n  }\r\n\r\n  function approve( address _spender, uint256 _value ) validAddress( _spender )\r\n    returns( bool success)\r\n  {\r\n    require( _value == 0 || allowance[ msg.sender ][ _spender ] == 0 );\r\n\r\n    allowance[ msg.sender ][ _spender ] = _value;\r\n    Approval( msg.sender, _spender, _value );\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\ncontract IApplyPreICO {\r\n  function applyTokens( address owner, uint tokens );\r\n}\r\n\r\ncontract PreICOToken is ERC20Token {\r\n\r\n  string public constant name = \"REGA Risk Sharing preICO Token\";\r\n  string public constant symbol = \"RST-P\";\r\n  uint8 public constant decimals = 10;\r\n\r\n  address public board;\r\n  address public owner;\r\n  uint public weiForToken;\r\n  uint public notMoreThan;\r\n  uint public notLessThan;\r\n  uint public tokensLimit;\r\n  uint public totalEther = 0;\r\n  address[] public holders;\r\n  bool public closed;\r\n  IApplyPreICO public rst;\r\n\r\n  event Issuance( address _to, uint _tokens, uint _amount, uint _sentBack );\r\n\r\n  modifier ownerOnly() {\r\n    require( msg.sender == owner );\r\n    _;\r\n  }\r\n\r\n  modifier boardOnly() {\r\n    require( msg.sender == board );\r\n    _;\r\n  }\r\n\r\n  modifier opened() {\r\n    require(!closed && weiForToken > 0 && totalSupply < tokensLimit);\r\n    _;\r\n  }\r\n\r\n  function PreICOToken( address _board ) {\r\n    board = _board;\r\n    owner = msg.sender;\r\n    weiForToken = 5 * uint(10)**(18-2-decimals); // 0.05 Ether\r\n    notMoreThan = 700 * uint(10)**decimals;\r\n    notLessThan = 100 * uint(10)**decimals;\r\n    tokensLimit = 30000 * uint(10)**decimals;\r\n    closed = true;\r\n  }\r\n\r\n  function() payable opened {\r\n      issueInternal( msg.sender, msg.value, true );\r\n  }\r\n\r\n  function setNotMoreThan( uint _notMoreThan ) public boardOnly {\r\n    notMoreThan = _notMoreThan * uint(10)**decimals;\r\n  }\r\n\r\n  function setNotLessThan( uint _notLessThan ) public boardOnly {\r\n    notLessThan = _notLessThan * uint(10)**decimals;\r\n  }\r\n\r\n  function setTokensLimit( uint _limit ) public boardOnly {\r\n    tokensLimit = _limit * uint(10)**decimals;\r\n  }\r\n\r\n  function setOpen( bool _open ) public boardOnly {\r\n    closed = !_open;\r\n  }\r\n\r\n  function setRST( IApplyPreICO _rst ) public boardOnly {\r\n    closed = true;\r\n    rst = _rst;\r\n  }\r\n\r\n  function getHoldersCount() public constant returns (uint count) {\r\n    count = holders.length;\r\n  }\r\n\r\n  function issue(address to, uint256 amount) public boardOnly validAddress(to) {\r\n    issueInternal( to, amount, false );\r\n  }\r\n\r\n  function buy() public payable opened {\r\n    issueInternal( msg.sender, msg.value, true );\r\n  }\r\n\r\n  function withdraw( uint amount ) public boardOnly {\r\n    board.transfer( amount );\r\n  }\r\n\r\n  function issueInternal(address to, uint256 amount, bool returnExcess) internal {\r\n    uint tokens = amount / weiForToken;\r\n    require( weiForToken > 0 && safeAdd(totalSupply, tokens) < tokensLimit && (balanceOf[to] < notMoreThan || notMoreThan == 0) && safeAdd(balanceOf[to], tokens) >= notLessThan );\r\n    uint sendBack = 0;\r\n    if( notMoreThan > 0 && safeAdd(balanceOf[to], tokens) > notMoreThan ) {\r\n      tokens = notMoreThan - balanceOf[to];\r\n      sendBack = amount - tokens * weiForToken;\r\n    }\r\n\r\n    totalEther = safeAdd(totalEther, amount - sendBack);\r\n    balanceOf[to] = safeAdd(balanceOf[to], tokens);\r\n    totalSupply = safeAdd(totalSupply, tokens);\r\n    holders.push(to);\r\n    if( returnExcess && sendBack > 0 && sendBack < amount )\r\n      to.transfer( sendBack );\r\n    Issuance(to, tokens, amount, returnExcess ? sendBack : 0);\r\n    Transfer( this, to, tokens );\r\n  }\r\n\r\n  function moveToRST() validAddress(rst) {\r\n    sendToRstForAddress( msg.sender );\r\n  }\r\n\r\n  function sendToRST( address from ) validAddress(rst) {\r\n    sendToRstForAddress( from );\r\n  }\r\n\r\n  function sendToRstForAddress( address from ) internal {\r\n    require( closed );\r\n    uint amount = balanceOf[from];\r\n    if( amount > 0 ) {\r\n      balanceOf[from] = 0;\r\n      rst.applyTokens( from, amount );\r\n      Transfer( from, rst, amount );\r\n    }\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_notMoreThan\",\"type\":\"uint256\"}],\"name\":\"setNotMoreThan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"}],\"name\":\"sendToRST\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"holders\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"notLessThan\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiForToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rst\",\"type\":\"address\"}],\"name\":\"setRST\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"notMoreThan\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rst\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_notLessThan\",\"type\":\"uint256\"}],\"name\":\"setNotLessThan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_open\",\"type\":\"bool\"}],\"name\":\"setOpen\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getHoldersCount\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"board\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"moveToRST\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"setTokensLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_board\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_sentBack\",\"type\":\"uint256\"}],\"name\":\"Issuance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"PreICOToken","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000035752fddd201a191751623cea3e7065155fd741b","Library":"","SwarmSource":"bzzr://434b420f9e514e50b4f5e5e235dfb0910f72e7bc1d980be24439ff42518545fc"}]}