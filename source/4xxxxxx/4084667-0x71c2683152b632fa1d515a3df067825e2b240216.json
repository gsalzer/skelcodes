{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.2;\r\n\r\ncontract owned {\r\n\taddress public owner;\r\n\r\n\tfunction owned() {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tfunction changeOwner(address newOwner) onlyOwner {\r\n\t\towner = newOwner;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n}\r\n\r\ncontract tokenRecipient {function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);}\r\ncontract CSToken is owned {uint8 public decimals;function mintToken(address target, uint256 mintedAmount, uint agingTime);function addAgingTimesForPool(address poolAddress, uint agingTime);}\r\n\r\ncontract KICKICOCrowdsale is owned {\r\n\tuint[] public preIcoStagePeriod;\r\n\r\n\tuint[] public IcoStagePeriod;\r\n\r\n\tbool public PreIcoClosedManually = false;\r\n\r\n\tbool public IcoClosedManually = false;\r\n\r\n\tuint[] public thresholdsByState;\r\n\r\n\tuint public totalCollected = 0;\r\n\r\n\tuint public allowedForWithdrawn = 0;\r\n\r\n\tuint[] public prices;\r\n\r\n\tuint[] public bonuses;\r\n\r\n\taddress public prPool;\r\n\r\n\taddress public founders;\r\n\r\n\taddress public advisory;\r\n\r\n\taddress public bounties;\r\n\r\n\taddress public lottery;\r\n\r\n\taddress public seedInvestors;\r\n\r\n\tuint public tokensRaised;\r\n\r\n\tuint[] public etherRaisedByState;\r\n\r\n\tuint tokenMultiplier = 10;\r\n\r\n\tCSToken public tokenReward;\r\n\r\n\tmapping (address => uint256) public balanceOf;\r\n\r\n\tevent FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n\tuint[] public agingTimeByStage;\r\n\r\n\tbool parametersHaveBeenSet = false;\r\n\r\n\tfunction KICKICOCrowdsale(address _tokenAddress, address _prPool, address _founders, address _advisory, address _bounties, address _lottery, address _seedInvestors) {\r\n\t\ttokenReward = CSToken(_tokenAddress);\r\n\r\n\t\ttokenMultiplier = tokenMultiplier ** tokenReward.decimals();\r\n\r\n\t\t// bind pools\r\n\t\tprPool = _prPool;\r\n\t\tfounders = _founders;\r\n\t\tadvisory = _advisory;\r\n\t\tbounties = _bounties;\r\n\t\tlottery = _lottery;\r\n\t\tseedInvestors = _seedInvestors;\r\n\t}\r\n\r\n\tfunction setParams() onlyOwner {\r\n\t\trequire(!parametersHaveBeenSet);\r\n\r\n\t\tparametersHaveBeenSet = true;\r\n\r\n\t\ttokenReward.addAgingTimesForPool(prPool, 1513242000);\r\n\t\ttokenReward.addAgingTimesForPool(advisory, 1507366800);\r\n\t\ttokenReward.addAgingTimesForPool(bounties, 1509526800);\r\n\t\ttokenReward.addAgingTimesForPool(lottery, 1512118800);\r\n\t\ttokenReward.addAgingTimesForPool(seedInvestors, 1506762000);\r\n\r\n\t\t// mint to pools\r\n\t\ttokenReward.mintToken(founders, 100000000 * tokenMultiplier, 1514797200);\r\n\t\ttokenReward.mintToken(advisory, 10000000 * tokenMultiplier, 0);\r\n\t\ttokenReward.mintToken(bounties, 25000000 * tokenMultiplier, 0);\r\n\t\ttokenReward.mintToken(lottery, 2000000 * tokenMultiplier, 0);\r\n\t\ttokenReward.mintToken(seedInvestors, 20000000 * tokenMultiplier, 0);\r\n\t\ttokenReward.mintToken(prPool, 23000000 * tokenMultiplier, 0);\r\n\r\n\t\tpreIcoStagePeriod.push(1501246800);\r\n\t\tpreIcoStagePeriod.push(1502744400);\r\n\r\n\t\tIcoStagePeriod.push(1504011600);\r\n\t\tIcoStagePeriod.push(1506718800);\r\n\r\n\t\t// bind maxs thresholds\r\n\t\tthresholdsByState.push(5000 ether);\r\n\t\tthresholdsByState.push(200000 ether);\r\n\r\n\t\tetherRaisedByState.push(0);\r\n\t\tetherRaisedByState.push(0);\r\n\r\n\t\t// bind aging time for each stages\r\n\t\tagingTimeByStage.push(1507366800);\r\n\t\tagingTimeByStage.push(1508058000);\r\n\r\n\t\t// bind prices\r\n\t\tprices.push(1666666);\r\n\t\tprices.push(3333333);\r\n\r\n\t\tbonuses.push(1990 finney);\r\n\t\tbonuses.push(2990 finney);\r\n\t\tbonuses.push(4990 finney);\r\n\t\tbonuses.push(6990 finney);\r\n\t\tbonuses.push(9500 finney);\r\n\t\tbonuses.push(14500 finney);\r\n\t\tbonuses.push(19500 finney);\r\n\t\tbonuses.push(29500 finney);\r\n\t\tbonuses.push(49500 finney);\r\n\t\tbonuses.push(74500 finney);\r\n\t\tbonuses.push(99 ether);\r\n\t\tbonuses.push(149 ether);\r\n\t\tbonuses.push(199 ether);\r\n\t\tbonuses.push(299 ether);\r\n\t\tbonuses.push(499 ether);\r\n\t\tbonuses.push(749 ether);\r\n\t\tbonuses.push(999 ether);\r\n\t\tbonuses.push(1499 ether);\r\n\t\tbonuses.push(1999 ether);\r\n\t\tbonuses.push(2999 ether);\r\n\t\tbonuses.push(4999 ether);\r\n\t\tbonuses.push(7499 ether);\r\n\t\tbonuses.push(9999 ether);\r\n\t\tbonuses.push(14999 ether);\r\n\t\tbonuses.push(19999 ether);\r\n\t\tbonuses.push(49999 ether);\r\n\t\tbonuses.push(99999 ether);\r\n\t}\r\n\r\n\tfunction mint(uint amount, uint tokens, address sender, uint currentStage) internal {\r\n\t\tbalanceOf[sender] += amount;\r\n\t\ttokensRaised += tokens;\r\n\t\tetherRaisedByState[currentStage] += amount;\r\n\t\ttotalCollected += amount;\r\n\t\tallowedForWithdrawn += amount;\r\n\t\ttokenReward.mintToken(sender, tokens, agingTimeByStage[currentStage]);\r\n\t\ttokenReward.mintToken(prPool, tokens * 10 / 100, 0);\r\n\t}\r\n\r\n\tfunction processPayment(address from, uint amount) internal {\r\n\t\tuint originalAmount = amount;\r\n\t\tFundTransfer(from, amount, true);\r\n\t\tuint currentStage = 0;\r\n\t\tif (now >= preIcoStagePeriod[0] && now < preIcoStagePeriod[1]) {\r\n\t\t\tcurrentStage = 0;\r\n\t\t}\r\n\t\tif (now >= IcoStagePeriod[0] && now < IcoStagePeriod[1]) {\r\n\t\t\tcurrentStage = 1;\r\n\t\t}\r\n\r\n\t\tuint price = prices[currentStage];\r\n\t\tuint coefficient = 1000;\r\n\r\n\t\tfor (uint i = 0; i < 15; i++) {\r\n\t\t\tif (amount >= bonuses[i])\r\n\t\t\t\tcoefficient = 1000 + ((i + 1 + (i > 11 ? 1 : 0)) * 5);\r\n\t\t\tif (amount < bonuses[i]) break;\r\n\t\t}\r\n\t\tif (coefficient == 1000) {\r\n\t\t\tfor (uint z = 0; z < 12; z++) {\r\n\t\t\t\tif (amount >= bonuses[z + 15])\r\n\t\t\t\t\tcoefficient = 1000 + ((8 + z) * 10);\r\n\t\t\t\tif (amount < bonuses[z]) break;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprice = price * 1000 / coefficient;\r\n\r\n\t\tuint remain = thresholdsByState[currentStage] - etherRaisedByState[currentStage];\r\n\r\n\t\tif (remain <= amount) {\r\n\t\t\tamount = remain;\r\n\t\t}\r\n\r\n\t\tuint tokenAmount = amount / price;\r\n\r\n\t\tuint currentAmount = tokenAmount * price;\r\n\t\tmint(currentAmount, tokenAmount, from, currentStage);\r\n\t\tuint change = originalAmount - currentAmount;\r\n\t\tif (change > 0) {\r\n\t\t\tif (from.send(change)) {\r\n\t\t\t\tFundTransfer(from, change, false);\r\n\t\t\t}\r\n\t\t\telse revert();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction() payable {\r\n\t\trequire(parametersHaveBeenSet);\r\n\t\trequire(msg.value >= 50 finney);\r\n\r\n\t\t// validate by stage periods\r\n\t\trequire((now >= preIcoStagePeriod[0] && now < preIcoStagePeriod[1]) || (now >= IcoStagePeriod[0] && now < IcoStagePeriod[1]));\r\n\t\t// validate if closed manually or reached the threshold\r\n\t\tif(now >= preIcoStagePeriod[0] && now < preIcoStagePeriod[1]) {\r\n\t\t\trequire(!PreIcoClosedManually && etherRaisedByState[0] < thresholdsByState[0]);\r\n\t\t} else {\r\n\t\t\trequire(!IcoClosedManually && etherRaisedByState[1] < thresholdsByState[1]);\r\n\t\t}\r\n\t\tprocessPayment(msg.sender, msg.value);\r\n\t}\r\n\r\n\tfunction closeCurrentStage() onlyOwner {\r\n\t\tif (now >= preIcoStagePeriod[0] && now < preIcoStagePeriod[1] && !PreIcoClosedManually) {\r\n\t\t\tPreIcoClosedManually = true;\r\n\t\t} else {\r\n\t\t\tif (now >= IcoStagePeriod[0] && now < IcoStagePeriod[1] && !IcoClosedManually) {\r\n\t\t\t\tIcoClosedManually = true;\r\n\t\t\t} else {\r\n\t\t\t\trevert();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction safeWithdrawal(uint amount) onlyOwner {\r\n\t\trequire(allowedForWithdrawn >= amount);\r\n\r\n\t\t// lock withdraw if stage not closed\r\n//\t\trequire((now >= preIcoStagePeriod[1] && now < IcoStagePeriod[0]) || (now >= IcoStagePeriod[1]));\r\n\t\tif(now >= preIcoStagePeriod[0] && now < preIcoStagePeriod[1])\r\n\t\t\trequire(PreIcoClosedManually || etherRaisedByState[0] >= thresholdsByState[0]);\r\n\t\tif(now >= IcoStagePeriod[0] && now < IcoStagePeriod[1])\r\n\t\t\trequire(IcoClosedManually || etherRaisedByState[1] >= thresholdsByState[1]);\r\n\r\n\t\tallowedForWithdrawn -= amount;\r\n\t\tif(owner.send(amount)) {\r\n\t\t\tFundTransfer(msg.sender, amount, false);\r\n\t\t} else {\r\n\t\t\tallowedForWithdrawn += amount;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction kill() onlyOwner {\r\n\t\trequire(now > IcoStagePeriod[1]);\r\n\r\n\t\ttokenReward.changeOwner(owner);\r\n\t\tselfdestruct(owner);\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agingTimeByStage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowedForWithdrawn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founders\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"IcoStagePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seedInvestors\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PreIcoClosedManually\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"etherRaisedByState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"thresholdsByState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IcoClosedManually\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bonuses\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lottery\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeCurrentStage\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prices\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"preIcoStagePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bounties\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCollected\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_prPool\",\"type\":\"address\"},{\"name\":\"_founders\",\"type\":\"address\"},{\"name\":\"_advisory\",\"type\":\"address\"},{\"name\":\"_bounties\",\"type\":\"address\"},{\"name\":\"_lottery\",\"type\":\"address\"},{\"name\":\"_seedInvestors\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"KICKICOCrowdsale","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000e9c4d8610aa2cf0dabdabb19920a1c810b6572000000000000000000000000028d198d27ccfcc3f784022fd82a3da9fed72e3250000000000000000000000000927ff2eabf4667fdca3dc3a84fd30c13b7a50040000000000000000000000006cfe9e3b517fe8fa1d3f8666f323120794e5fbb3000000000000000000000000cfb44c01d517c92a297a25505f6cd988ca99b646000000000000000000000000b086907b4e6532a14af3e72875211cf1151c801000000000000000000000000024beafbbaf290d2638737c662aa199ea25cc509a","Library":"","SwarmSource":"bzzr://1393dc371ab395d29d603f0277027b70069e4e974bbbb9f4f6bd54422e465e09"}]}