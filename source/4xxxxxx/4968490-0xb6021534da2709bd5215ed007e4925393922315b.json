{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.15;\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal returns (uint256) {\r\n        if (a == 0) {\r\n          return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\ncontract Owned {\r\n    address public contractOwner;\r\n    address public pendingContractOwner;\r\n\r\n    function Owned() {\r\n        contractOwner = msg.sender;\r\n    }\r\n\r\n    modifier onlyContractOwner() {\r\n        if (contractOwner == msg.sender) {\r\n            _;\r\n        }\r\n    }\r\n\r\n    function changeContractOwnership(address _to) onlyContractOwner() returns(bool) {\r\n        pendingContractOwner = _to;\r\n        return true;\r\n    }\r\n\r\n    function claimContractOwnership() returns(bool) {\r\n        if (pendingContractOwner != msg.sender) {\r\n            return false;\r\n        }\r\n        contractOwner = pendingContractOwner;\r\n        delete pendingContractOwner;\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract ERC20Interface {\r\n    function balanceOf(address _address) returns(uint);\r\n    function transfer(address _receiver, uint _amount) returns(bool);\r\n    function transferFrom(address _from, address _to, uint _amount) returns(bool);\r\n}\r\n\r\ncontract Vesting is Owned {\r\n    struct Vestings {\r\n        address receiver;\r\n        ERC20Interface ERC20;\r\n        uint amount;\r\n        uint parts;\r\n        uint paymentInterval;\r\n        uint schedule;\r\n        uint sendings;\r\n    }\r\n\r\n    mapping (address => uint) public vestingBalance;\r\n    mapping (address => mapping (address => uint)) public receiverVestings;\r\n\r\n    Vestings[] public vestings;\r\n\r\n    event VestingCreated(address sender, address receiver, address ERC20, uint amount, uint id, uint parts, uint paymentInterval, uint schedule);\r\n    event VestingSent(address receiver, address ERC20, uint amount, uint id, uint sendings);\r\n    event ReceiverChanged(uint id, address from, address to);\r\n\r\n    function createVesting(address _receiver, ERC20Interface _ERC20, uint _amount, uint _parts, uint _paymentInterval, uint _schedule) returns(bool) {\r\n        require(_receiver != 0x0);\r\n        require(_parts > 0 && _amount > 0 && _parts <= 10000);\r\n        require(SafeMath.add(_schedule, SafeMath.mul(_paymentInterval, _parts)) <= ((365 * 5 days) + now));\r\n\r\n        vestings.push(Vestings(_receiver, _ERC20, _amount, _parts, _paymentInterval, _schedule, 0));\r\n        require(_ERC20.transferFrom(msg.sender, address(this), SafeMath.mul(_amount, _parts)));\r\n        vestingBalance[_ERC20] = SafeMath.add(vestingBalance[_ERC20], (_amount * _parts));\r\n        receiverVestings[_receiver][_ERC20] = SafeMath.add(receiverVestings[_receiver][_ERC20], (_amount * _parts));\r\n        VestingCreated(msg.sender, _receiver, _ERC20, _amount, (vestings.length - 1), _parts, _paymentInterval, _schedule);\r\n        return true;\r\n    }\r\n\r\n    function sendVesting(uint _id) returns(bool) {\r\n        require(now >= (vestings[_id].schedule + vestings[_id].paymentInterval * (vestings[_id].sendings + 1)));\r\n\r\n        require(vestings[_id].ERC20.transfer(vestings[_id].receiver, vestings[_id].amount));\r\n        VestingSent(vestings[_id].receiver, vestings[_id].ERC20, vestings[_id].amount, _id, vestings[_id].sendings);\r\n        vestings[_id].sendings++;\r\n        vestingBalance[vestings[_id].ERC20] -= vestings[_id].amount;\r\n        receiverVestings[vestings[_id].receiver][vestings[_id].ERC20] -= vestings[_id].amount;\r\n        if (vestings[_id].sendings == vestings[_id].parts) {\r\n            delete vestings[_id];\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function changeReceiver(uint _id, address _newReceiver) returns(bool) {\r\n        require(_newReceiver != 0x0);\r\n        require(msg.sender == vestings[_id].receiver);\r\n\r\n        vestings[_id].receiver = _newReceiver;\r\n        ReceiverChanged(_id, msg.sender, _newReceiver);\r\n        return true;\r\n    }\r\n\r\n    function withdrawExtraTokens(ERC20Interface _ERC20) onlyContractOwner() returns(bool) {\r\n        require(_ERC20.transfer(contractOwner, getExtraTokens(_ERC20)));\r\n        return true;\r\n    }\r\n\r\n    function getVesting(uint _id) constant returns(address, address, uint, uint, uint, uint, uint) {\r\n        return (vestings[_id].receiver, vestings[_id].ERC20, vestings[_id].amount, vestings[_id].parts, vestings[_id].paymentInterval, vestings[_id].schedule, vestings[_id].sendings);\r\n    }\r\n\r\n    function getExtraTokens(ERC20Interface _ERC20) constant returns(uint) {\r\n        return (_ERC20.balanceOf(this) - vestingBalance[_ERC20]);\r\n    }\r\n\r\n    function getReceiverVesting(address _receiver, address _ERC20) constant returns(uint) {\r\n        return receiverVestings[_receiver][_ERC20];\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"sendVesting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_ERC20\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_parts\",\"type\":\"uint256\"},{\"name\":\"_paymentInterval\",\"type\":\"uint256\"},{\"name\":\"_schedule\",\"type\":\"uint256\"}],\"name\":\"createVesting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"receiverVestings\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimContractOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"changeContractOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingContractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getVesting\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_ERC20\",\"type\":\"address\"}],\"name\":\"getReceiverVesting\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vestings\",\"outputs\":[{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"ERC20\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"parts\",\"type\":\"uint256\"},{\"name\":\"paymentInterval\",\"type\":\"uint256\"},{\"name\":\"schedule\",\"type\":\"uint256\"},{\"name\":\"sendings\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ERC20\",\"type\":\"address\"}],\"name\":\"withdrawExtraTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ERC20\",\"type\":\"address\"}],\"name\":\"getExtraTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_newReceiver\",\"type\":\"address\"}],\"name\":\"changeReceiver\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ERC20\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"parts\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"paymentInterval\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"schedule\",\"type\":\"uint256\"}],\"name\":\"VestingCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ERC20\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sendings\",\"type\":\"uint256\"}],\"name\":\"VestingSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ReceiverChanged\",\"type\":\"event\"}]","ContractName":"Vesting","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"10000","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4df77240a5167ee19474ef84b8a79ca5f2f84032a4a8434d34b84c8ebe6359e1"}]}