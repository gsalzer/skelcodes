{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n// **-----------------------------------------------\r\n// POWToken Storage.\r\n// Contract in address PowerLineUpStorage.eth\r\n// Storage for 30,000,000 in-platform MOYTokens. \r\n// Tokens only available through mining, stacking and tournaments in-platform through smart contracts.\r\n// Proyect must have enough funds provided by PowerLineUp and partners to realease tokens. \r\n// This Contract stores the token and keeps record of own funding by PowerLineUp and partners. \r\n// For Open Distribution refer to contract at powcrowdsale.eth (will be launched after private funding is closed).\r\n// All operations can be monitored at etherscan.io\r\n\r\n// **-----------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/issues/20\r\n// -------------------------------------------------\r\ninterface ERC20I {\r\n    function transfer(address _recipient, uint256 _amount) public returns (bool);\r\n    function balanceOf(address _holder) public view returns (uint256);\r\n}\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() public {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract safeMath {\r\n  function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    safeAssert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    safeAssert(b > 0);\r\n    uint256 c = a / b;\r\n    safeAssert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    safeAssert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    safeAssert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n  function safeAssert(bool assertion) internal pure {\r\n    if (!assertion) revert();\r\n  }\r\n}\r\n\r\ncontract StandardToken is owned, safeMath {\r\n  function balanceOf(address who) public constant returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract MoyTokenStorage is owned, safeMath {\r\n  // owner/admin & token reward\r\n  address        public admin = owner;                        //admin address\r\n  StandardToken  public tokenContract;                        // address of MoibeTV MOY ERC20 Standard Token.\r\n\r\n  // loop control and limiters for funding proyect and mineable tokens through own and private partners funding.\r\n\r\n  string  public CurrentStatus = \"\";                          // Current Funding status\r\n  uint256 public fundingStartBlock;                           // Funding start block#\r\n  uint256 public fundingEndBlock;                             // Funding end block#\r\n  uint256 public successAtBlock;                              // Private funding succeed at this block. All in-platform tokens backed.\r\n  uint256 public amountRaisedInUsd;                           // Amount raised in USD for tokens backing. \r\n  uint256 public tokensPerEthAtRegularPrice;                  // Regular Price of POW Tokens for Funding calculations.\r\n  bool public successfulFunding;                              // True if amount neccesary for Funding Stored Tokens is achieved.\r\n         \r\n  \r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value); \r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n  event Buy(address indexed _sender, uint256 _eth, uint256 _MOY);\r\n  mapping(address => uint256) balancesArray;\r\n  mapping(address => uint256) fundValue;\r\n\r\n  // default function, map admin\r\n  function MoyTokenStorage() public onlyOwner {\r\n    admin = msg.sender;\r\n    CurrentStatus = \"In-Platform POW Tokens Storage Released\";\r\n  }\r\n\r\n  \r\n  // setup the Fundung parameters\r\n  function setupFunding(uint256 _fundingStartBlock, uint256 _fundingEndBlock, address _tokenContract) public onlyOwner returns (bytes32 response) {\r\n      \r\n      if (msg.sender == admin)\r\n      {\r\n          tokenContract = StandardToken(_tokenContract);                              //MOYtoken Smart Contract.\r\n          tokensPerEthAtRegularPrice = 1000;                                         //Regular Price 1 ETH = 1000 MOY in-platform.Value to calculate proyect funding.\r\n          amountRaisedInUsd = 0;\r\n\r\n          fundingStartBlock = _fundingStartBlock;\r\n          fundingEndBlock = _fundingEndBlock;\r\n                \r\n          CurrentStatus = \"Fundind of Proyect in Process\";\r\n          //PowerLineUp is funding the proyect to be able to launch the tokens. \r\n          \r\n          return \"PreSale is setup.\";\r\n\r\n      } else if (msg.sender != admin) {\r\n          return \"Not Authorized\";\r\n      } else  {\r\n          return \"Setup cannot be changed.\";\r\n      }\r\n    }\r\n\r\n  // setup success parameters if proyect funding succeed. \r\n  function FundingCompleted(uint256 _amountRaisedInUsd, uint256 _successAtBlock) public onlyOwner returns (bytes32 response) {\r\n      if (msg.sender == admin)\r\n      {\r\n          // Funding is the capital invested by PowerLineUp and partners to back the whole proyect and the tokens released.\r\n          amountRaisedInUsd = _amountRaisedInUsd; //amount raised includes development, human resources, infraestructure, design and marketing achieved by the proyect founders and partners.\r\n          successAtBlock = _successAtBlock;       //Block when goal reached.\r\n          successfulFunding = true;       \r\n          CurrentStatus = \"Funding Successful, in-platform tokens ready to use.\";\r\n\r\n          \r\n          return \"All in-platform tokens backed.\";\r\n      } else if (msg.sender != admin) {\r\n          return \"Not Authorized\";\r\n      } else {\r\n          return \"Setup cannot be changed.\";\r\n      }\r\n    }\r\n\r\n    function transferTokens(address _tokenAddress, address _recipient) public onlyOwner returns (bool) { \r\n       ERC20I e = ERC20I(_tokenAddress);\r\n       require(e.transfer(_recipient, e.balanceOf(this)));\r\n       return true;\r\n   }\r\n\r\n    // default payable function when sending ether to this contract\r\n    // only owner (PowerLineUp) can send ether to this address.\r\n    function () public payable {\r\n      require(msg.sender == admin);\r\n      Transfer(this, msg.sender, msg.value); \r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_fundingStartBlock\",\"type\":\"uint256\"},{\"name\":\"_fundingEndBlock\",\"type\":\"uint256\"},{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"setupFunding\",\"outputs\":[{\"name\":\"response\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"transferTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"successfulFunding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingEndBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaisedInUsd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amountRaisedInUsd\",\"type\":\"uint256\"},{\"name\":\"_successAtBlock\",\"type\":\"uint256\"}],\"name\":\"FundingCompleted\",\"outputs\":[{\"name\":\"response\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingStartBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"successAtBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CurrentStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerEthAtRegularPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_MOY\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"}]","ContractName":"MoyTokenStorage","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0b56826a0a6f4a8c39eacf0ab67e61df383236e6ab0608347138c5852a5f1b4a"}]}