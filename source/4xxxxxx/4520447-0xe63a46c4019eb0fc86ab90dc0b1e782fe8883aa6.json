{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract NashvilleBeerToken {\r\n  uint256 public maxSupply;\r\n  uint256 public totalSupply;\r\n  address public owner;\r\n  bytes32[] public redeemedList;\r\n  address constant public RECIPIENT = 0xB1384DfE8ac77a700F460C94352bdD47Dc0327eF; // Ethereum Meetup Donation Address\r\n  mapping (address => uint256) balances;\r\n\r\n  event LogBeerClaimed(address indexed owner, uint256 date);\r\n  event LogBeerRedeemed(address indexed owner, bytes32 name, uint256 date);\r\n  event LogTransfer(address from, address indexed to, uint256 date);\r\n\r\n  modifier onlyOwner {\r\n    require(owner == msg.sender);\r\n    _;\r\n  }\r\n\r\n  function NashvilleBeerToken(uint256 _maxSupply) {\r\n    maxSupply = _maxSupply;\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function transfer(address _to, uint256 _amount) public returns(bool) {\r\n    require(balances[msg.sender] - _amount <= balances[msg.sender]);\r\n    balances[msg.sender] -= _amount;\r\n    balances[_to] += _amount;\r\n    LogTransfer(msg.sender, _to, now);\r\n  }\r\n\r\n  function balanceOf(address _owner) public constant returns(uint) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  function redeemBeer(bytes32 _name) public returns(bool) {\r\n    require(balances[msg.sender] > 0);\r\n    balances[msg.sender]--;\r\n    redeemedList.push(_name);\r\n    LogBeerRedeemed(msg.sender, _name, now);\r\n  }\r\n\r\n  function claimToken() public payable returns(bool) {\r\n    require(msg.value == 1 ether * 0.015);\r\n    require(totalSupply < maxSupply);\r\n    RECIPIENT.transfer(msg.value);\r\n    balances[msg.sender]++;\r\n    totalSupply++;\r\n    LogBeerClaimed(msg.sender, now);\r\n  }\r\n\r\n  function assignToken(address _owner) public onlyOwner returns(bool) {\r\n    require(balances[_owner] == 0);\r\n    require(totalSupply < maxSupply);\r\n    balances[_owner]++;\r\n    totalSupply++;\r\n    LogBeerClaimed(_owner, now);\r\n  }\r\n\r\n  function getRedeemedList() constant public returns (bytes32[]) {\r\n    bytes32[] memory list = new bytes32[](redeemedList.length);\r\n    for (uint256 i = 0; i < redeemedList.length; i++) {\r\n      list[i] = redeemedList[i];\r\n    }\r\n    return list;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getRedeemedList\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RECIPIENT\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"redeemedList\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"assignToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"redeemBeer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_maxSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"LogBeerClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"LogBeerRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"LogTransfer\",\"type\":\"event\"}]","ContractName":"NashvilleBeerToken","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000014","Library":"","SwarmSource":"bzzr://420a8197c0196d69b2a7c0f8cdf978916853e692fe55fba5402b7658d9fa4915"}]}