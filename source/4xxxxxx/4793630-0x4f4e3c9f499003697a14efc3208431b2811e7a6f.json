{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Owned {\r\n  address owner;\r\n\r\n  function Owned() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwner(address newOwner) public onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n\r\n  function getOwner() public view returns (address) {\r\n    return owner;\r\n  }\r\n}\r\n\r\ncontract HolyPiggyStorage {\r\n  struct Wish {\r\n    bytes name;\r\n    bytes content;\r\n    uint256 time;\r\n    uint256 tribute;\r\n  }\r\n  Wish[] wishes;\r\n  mapping(address => uint256[]) wishesIdx;\r\n\r\n  address godAddress;\r\n  address serviceProvider;\r\n  uint256 serviceFeeNumerator;\r\n  uint256 serviceFeeDenominator;\r\n  uint256 minimumWishTribute;\r\n  uint256 accumulatedServiceFee;\r\n}\r\n\r\ncontract HolyPiggy is HolyPiggyStorage, Owned {\r\n  function() public payable {}\r\n\r\n  function HolyPiggy(address god) public {\r\n    godAddress = god;\r\n    serviceFeeNumerator = 1;\r\n    serviceFeeDenominator = 50;\r\n    minimumWishTribute = 0;\r\n  }\r\n\r\n  function getGodAddress() external view returns (address) {\r\n    return godAddress;\r\n  }\r\n\r\n  event PostWish(address addr, uint256 id, bytes name, bytes content, uint256 time, uint256 tribute);\r\n\r\n  function setServiceProvider(address addr) public onlyOwner {\r\n    serviceProvider = addr;\r\n  }\r\n\r\n  function getServiceProvider() external view returns (address) {\r\n    return serviceProvider;\r\n  }\r\n\r\n  function setServiceFee(uint256 n, uint256 d) public onlyServiceProvider {\r\n    serviceFeeNumerator = n;\r\n    serviceFeeDenominator = d;\r\n  }\r\n\r\n  function getAccumulatedServiceFee() external view returns (uint256) {\r\n    return accumulatedServiceFee;\r\n  }\r\n\r\n  function getServiceFeeNumerator() external view returns (uint256) {\r\n    return serviceFeeNumerator;\r\n  }\r\n\r\n  function getServiceFeeDenominator() external view returns (uint256) {\r\n    return serviceFeeDenominator;\r\n  }\r\n\r\n  function getMinimumWishTribute() external view returns (uint256) {\r\n    return minimumWishTribute;\r\n  }\r\n\r\n  function setMinimumWishTribute(uint256 tribute) public onlyOwner {\r\n    minimumWishTribute = tribute;\r\n  }\r\n\r\n  modifier onlyServiceProvider() {\r\n    require(msg.sender == serviceProvider);\r\n    _;\r\n  }\r\n\r\n  function withdrawServiceFee() public onlyServiceProvider {\r\n    uint256 fee = accumulatedServiceFee;\r\n    accumulatedServiceFee = 0;\r\n    serviceProvider.transfer(fee);\r\n  }\r\n\r\n  function postWish(bytes name, bytes content) public payable {\r\n    require(msg.value > 0);\r\n    require(serviceProvider != address(0));\r\n    // (1+n/d)t = v  solve for n/d*t, which is the fee\r\n    // t = d/(n+d)*v\r\n    // fee = n/(n+d)*v\r\n    uint256 serviceFee = msg.value * serviceFeeNumerator / (serviceFeeDenominator + serviceFeeNumerator);\r\n    uint256 tribute = msg.value - serviceFee;\r\n    require(tribute > minimumWishTribute);\r\n    assert(accumulatedServiceFee + serviceFee > accumulatedServiceFee);\r\n    \r\n    uint256 id = wishes.length;\r\n    var wish = Wish(name, content, now, tribute);\r\n    wishes.push(wish);\r\n    wishesIdx[msg.sender].push(id);\r\n    accumulatedServiceFee = accumulatedServiceFee + serviceFee;\r\n    godAddress.transfer(tribute);\r\n\r\n    PostWish(msg.sender, id, name, content, now, tribute);\r\n  }\r\n\r\n  function countWishes() external view returns (uint256) {\r\n    return wishes.length;\r\n  }\r\n\r\n  function getWishName(uint256 idx) external view returns (bytes) {\r\n    return wishes[idx].name;\r\n  }\r\n\r\n  function getWishContent(uint256 idx) external view returns (bytes) {\r\n    return wishes[idx].content;\r\n  }\r\n  \r\n  function getWishTime(uint256 idx) external view returns (uint256) {\r\n    return wishes[idx].time;\r\n  }\r\n\r\n  function getWishTribute(uint256 idx) external view returns (uint256) {\r\n    return wishes[idx].tribute;\r\n  }\r\n\r\n  function getWishIdxesAt(address addr) external view returns (uint256[]) {\r\n    return wishesIdx[addr];\r\n  }\r\n\r\n  function getWishIdxAt(address addr, uint256 pos) external view returns (uint256) {\r\n    return wishesIdx[addr][pos];\r\n  }\r\n\r\n  function countWishesAt(address addr) external view returns (uint256) {\r\n    return wishesIdx[addr].length;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getMinimumWishTribute\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"bytes\"},{\"name\":\"content\",\"type\":\"bytes\"}],\"name\":\"postWish\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getServiceFeeNumerator\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getServiceFeeDenominator\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getWishIdxesAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getWishName\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getWishTribute\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countWishes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getServiceProvider\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"pos\",\"type\":\"uint256\"}],\"name\":\"getWishIdxAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"countWishesAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getWishContent\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getGodAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawServiceFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tribute\",\"type\":\"uint256\"}],\"name\":\"setMinimumWishTribute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getWishTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setServiceProvider\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"n\",\"type\":\"uint256\"},{\"name\":\"d\",\"type\":\"uint256\"}],\"name\":\"setServiceFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAccumulatedServiceFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"god\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"content\",\"type\":\"bytes\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tribute\",\"type\":\"uint256\"}],\"name\":\"PostWish\",\"type\":\"event\"}]","ContractName":"HolyPiggy","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000034358135c419995980fa43A3f929dBAA5dB50AFC","Library":"","SwarmSource":"bzzr://47661391ee39c89c1ebfc7d8795cf8d62b8ce6039df14e224ae9c7324cfb239a"}]}