{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract StandardToken {\r\n    function balanceOf(address _owner) constant public returns (uint256);\r\n    function transfer(address _to, uint256 _value) public returns (bool);\r\n}\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ninterface Token { \r\n    function transfer(address _to, uint256 _value) public returns (bool);\r\n    function totalSupply() constant public returns (uint256 supply);\r\n    function balanceOf(address _owner) constant public returns (uint256 balance);\r\n}\r\n\r\ncontract CslTokenDistribution {\r\n    \r\n    using SafeMath for uint256;\r\n    mapping (address => uint256) balances;\r\n    Token public cslToken;\r\n    address public owner;\r\n    uint256 public decimals = 10e17;      //token decimals\r\n    uint256 public value = 50000;         //50000 tokens for 1 ETH\r\n    uint256 public bonus = 5000;          //5000 tokens for 1 ETH\r\n    uint256 public drop;                  //tokens for airdrop\r\n    bool public contractLocked = true;    //crowdsale locked\r\n    bool public bonusTime = true;         //bonus true for early investors\r\n    \r\n    event sendTokens(address indexed to, uint256 value);\r\n    event Locked();\r\n    event Unlocked();\r\n    event Bonustimer();\r\n    event NoBonustimer();\r\n\r\n    function CslTokenDistribution(address _tokenAddress, address _owner) public {\r\n        cslToken = Token(_tokenAddress);\r\n        owner = _owner;\r\n    }\r\n    \r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        if (newOwner != address(0)) {\r\n        owner = newOwner;\r\n        }\r\n    }\r\n    \r\n    function setAirdrop(uint256 _Drop) onlyOwner public {\r\n        drop = _Drop;\r\n    }\r\n    \r\n    function setCrowdsale(uint256 _value, uint256 _bonus) onlyOwner public {\r\n        value = _value;\r\n        bonus = _bonus;\r\n    }\r\n    \r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    modifier isUnlocked() {\r\n        require(!contractLocked);\r\n        _;\r\n    }\r\n    \r\n    function lockContract() onlyOwner public returns (bool) {\r\n        contractLocked = true;\r\n        Locked();\r\n        return true;\r\n    }\r\n    \r\n    function unlockContract() onlyOwner public returns (bool) {\r\n        contractLocked = false;\r\n        Unlocked();\r\n        return false;\r\n    }\r\n    \r\n    function bonusOn() onlyOwner public returns (bool) {\r\n        bonusTime = true;\r\n        Bonustimer();\r\n        return true;\r\n    }\r\n    \r\n    function bonusOff() onlyOwner public returns (bool) {\r\n        bonusTime = false;\r\n        NoBonustimer();\r\n        return false;\r\n    }\r\n\r\n    function balanceOf(address _holder) constant public returns (uint256 balance) {\r\n        return balances[_holder];\r\n    }\r\n    \r\n    function getTokenBalance(address who) constant public returns (uint){\r\n        uint bal = cslToken.balanceOf(who);\r\n        return bal;\r\n    }\r\n    \r\n    function getEthBalance(address _addr) constant public returns(uint) {\r\n        return _addr.balance;\r\n    }\r\n    \r\n    function airdrop(address[] addresses) onlyOwner public {\r\n        \r\n        require(addresses.length <= 255);\r\n        \r\n        for (uint i = 0; i < addresses.length; i++) {\r\n            sendTokens(addresses[i], drop);\r\n            cslToken.transfer(addresses[i], drop);\r\n        }\r\n\t\r\n    }\r\n    \r\n    function distribution(address[] addresses, uint256 amount) onlyOwner public {\r\n        \r\n        require(addresses.length <= 255);\r\n\r\n        for (uint i = 0; i < addresses.length; i++) {\r\n            sendTokens(addresses[i], amount);\r\n            cslToken.transfer(addresses[i], amount);\r\n        }\r\n\r\n    }\r\n    \r\n    function distributeAmounts(address[] addresses, uint256[] amounts) onlyOwner public {\r\n\r\n        require(addresses.length <= 255);\r\n        require(addresses.length == amounts.length);\r\n        \r\n        for (uint8 i = 0; i < addresses.length; i++) {\r\n            sendTokens(addresses[i], amounts[i]);\r\n            cslToken.transfer(addresses[i], amounts[i]);\r\n        }\r\n        \r\n    }\r\n    \r\n    function () external payable {\r\n            getTokens();\r\n    }\r\n    \r\n    function getTokens() payable isUnlocked public {\r\n        address investor = msg.sender;\r\n        uint256 weiAmount = msg.value;\r\n        uint256 tokens = weiAmount.mul(value);\r\n        \r\n        if (msg.value == 0) { return; }\r\n        if (bonusTime == true) {\r\n            uint256 bonusTokens = weiAmount.mul(bonus);\r\n            tokens = tokens.add(bonusTokens);\r\n        }\r\n        \r\n        sendTokens(investor, tokens);\r\n        cslToken.transfer(investor, tokens);\r\n    \r\n    }\r\n    \r\n    function tokensAvailable() constant public returns (uint256) {\r\n        return cslToken.balanceOf(this);\r\n    }\r\n    \r\n    function withdraw() onlyOwner public {\r\n        uint256 etherBalance = this.balance;\r\n        owner.transfer(etherBalance);\r\n    }\r\n    \r\n    function withdrawStandardTokens(address _tokenContract) onlyOwner public returns (bool) {\r\n        StandardToken token = StandardToken(_tokenContract);\r\n        uint256 amount = token.balanceOf(address(this));\r\n        return token.transfer(owner, amount);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"unlockContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cslToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensAvailable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawStandardTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"airdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lockContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_Drop\",\"type\":\"uint256\"}],\"name\":\"setAirdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"bonusOff\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"distributeAmounts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"bonusOn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_bonus\",\"type\":\"uint256\"}],\"name\":\"setCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusTime\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"drop\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"sendTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Bonustimer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"NoBonustimer\",\"type\":\"event\"}]","ContractName":"CslTokenDistribution","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000275fd328c3986be83f8b60f79c73cf63fde98ca500000000000000000000000049e81aa0cfe7eea9738430212dc6677acf2f01a1","Library":"","SwarmSource":"bzzr://e520510dca403857d2d8c0f5bdeaa5ea51ebe4b8b90138f28b659ee533cf2c6e"}]}