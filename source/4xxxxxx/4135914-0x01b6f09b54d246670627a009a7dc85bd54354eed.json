{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n    function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n    function Ownable() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);  \r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Ethereum Request for comments #20\r\n * Интерфейс стандарта токенов\r\n * https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 {\r\n    uint256 public totalSupply;\r\n\r\n    // Возвращает баланс адреса\r\n    function balanceOf(address _owner) constant returns (uint balance);\r\n    \r\n    // Отправляет токены _value на адрес _to\r\n    function transfer(address _to, uint _value) returns (bool success);\r\n    \r\n    // Отправляет токены _value с адреса _from на адрес _to\r\n    function transferFrom(address _from, address _to, uint _value) returns (bool success);\r\n    \r\n    // Позволяет адресу _spender снимать <= _value с вашего аккаунта\r\n    function approve(address _spender, uint _value) returns (bool success);\r\n    \r\n    // Возвращает сколько _spender может снимать с вашего аккаунта\r\n    function allowance(address _owner, address _spender) constant returns (uint remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\ncontract RelestToken is ERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    string public name = \"Relest\";\r\n    string public symbol = \"REST\";\r\n    uint256 public decimals = 8;\r\n    uint public ethRaised = 0;\r\n    address wallet = 0xC487f60b6fA6d7CC1e51908b383385CbfC6c30B5;\r\n\r\n    uint256 public minEth = 1 ether / 10;\r\n    uint256 public priceRate = 1000; // 1 ETH = 1000 RST\r\n    uint256 step1Price = 1500;\r\n    uint256 step2Price = 1300;\r\n    uint256 step3Price = 1150;\r\n    \r\n    uint256 minPriceRate = 1000;\r\n    uint256 public ethGoal = 1000 ether;\r\n\r\n    uint256 public startPreICOTimestamp = 1502287200; // 09.08.2017 14:00 (GMT)\r\n    uint256 public endPreICOTimestamp = 1502632800; // 13.08.2017 14:00 (GMT)\r\n\r\n    uint256 public startICOTimestamp = 1505743200; // 18.09.2017 14:00 (GMT)\r\n    uint256 step1End = 1505750400; // 18.09.2017 16:00 (GMT)\r\n    uint256 step2End = 1505829600; // 19.09.2017 14:00 (GMT)\r\n    uint256 step3End = 1506348000; // 25.09.2017 14:00 (GMT)\r\n    uint256 public endICOTimestamp = 1506952800; // 02.10.2017 14:00 (GMT)\r\n\r\n    bool public preSaleGoalReached = false; // true if ethGoal is reached\r\n    bool public preSaleStarted = false;\r\n    bool public preSaleEnded = false;\r\n    bool public SaleStarted = false;\r\n    bool public SaleEnded = false;\r\n    bool public isFinalized = false;\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    event TokenPurchase(address indexed sender, address indexed beneficiary, uint ethAmount, uint tokenAmount);\r\n    event Mint(address indexed to, uint256 amount);\r\n    event Bounty(address indexed to, uint256 amount);\r\n\r\n    // MODIFIERS\r\n    \r\n    modifier validPurchase() {\r\n        assert(msg.value >= minEth && msg.sender != 0x0);\r\n        _;\r\n    }\r\n    modifier onlyPayloadSize(uint size) {\r\n        require(msg.data.length >= size + 4);\r\n        _;\r\n    }\r\n\r\n    function RelestToken() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns (uint balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) returns (bool success) {\r\n        require(preSaleEnded && SaleEnded);\r\n        require(_to != 0x0 && _value > 0 && balances[msg.sender] >= _value && \r\n            balances[_to] + _value > balances[_to]);\r\n        balances[_to] += _value;\r\n        balances[msg.sender] -= _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(2 * 32) returns (bool success) {\r\n        require(preSaleEnded && SaleEnded);\r\n        require(_to != 0x0 && _value > 0 && balances[msg.sender] >= _value && \r\n            balances[_to] + _value > balances[_to] && allowed[_from][msg.sender] >= _value);\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        allowed[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    function approve(address _spender, uint _value) returns (bool success) {\r\n        require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    function () payable {\r\n        buyTokens(msg.sender);\r\n    }\r\n    function checkPeriod() returns (bool) {\r\n    \tbool within = false;\r\n        if(now > startPreICOTimestamp && now < endPreICOTimestamp && !preSaleGoalReached) { // pre-ICO\r\n            preSaleStarted = true;\r\n            preSaleEnded = false;\r\n            SaleStarted = false;\r\n            SaleEnded = false;\r\n            within = true;\r\n        } else if(now > startICOTimestamp && now < endICOTimestamp) { // ICO\r\n            SaleStarted = true;\r\n            SaleEnded = false;\r\n            preSaleEnded = true;\r\n            within = true;\r\n        } else if(now > endICOTimestamp) { // after ICO\r\n            preSaleEnded = true;\r\n            SaleEnded = true;\r\n        } else if(now < startPreICOTimestamp) { // before pre-ICO\r\n            preSaleStarted = false;\r\n            preSaleEnded = false;\r\n            SaleStarted = false;\r\n            SaleEnded = false;\r\n        }else { // between pre-ICO and ICO\r\n        \tpreSaleStarted = true;\r\n        \tpreSaleEnded = true;\r\n        \tSaleStarted = false;\r\n        \tSaleEnded = false;\r\n        }\r\n        return within;\r\n    }\r\n    function buyTokens(address beneficiary) payable validPurchase {\r\n    \tassert(checkPeriod());\r\n        uint256 ethAmount = msg.value;\r\n        if(preSaleStarted && !preSaleEnded) {\r\n            priceRate = 2000;\r\n        }\r\n        if(SaleStarted && !SaleEnded) {\r\n            if(now >= startICOTimestamp && now <= step1End) {\r\n                priceRate = step1Price;\r\n            }\r\n            else if(now > step1End && now <= step2End) {\r\n                priceRate = step2Price;\r\n            }\r\n            else if(now > step2End && now <= step3End) {\r\n                priceRate = step3Price;\r\n            }\r\n            else {\r\n                priceRate = minPriceRate;\r\n            }\r\n        }\r\n        uint256 tokenAmount = ethAmount.mul(priceRate);\r\n        tokenAmount = tokenAmount.div(1e10);\r\n        ethRaised = ethRaised.add(ethAmount);\r\n        mint(beneficiary, tokenAmount);\r\n        TokenPurchase(msg.sender, beneficiary, ethAmount, tokenAmount);\r\n        wallet.transfer(msg.value);\r\n        if(preSaleStarted && !preSaleEnded && ethRaised >= ethGoal) {\r\n            preSaleEnded = true;\r\n            preSaleGoalReached = true;\r\n        }\r\n    }\r\n\r\n    function finalize() onlyOwner {\r\n        require(now > endICOTimestamp && SaleEnded && !isFinalized);\r\n        uint256 tokensLeft = (totalSupply * 30) / 70; // rest 30% of tokens\r\n        Bounty(wallet, tokensLeft);\r\n        mint(wallet, tokensLeft);\r\n        isFinalized = true;\r\n    }\r\n\r\n    function mint(address receiver, uint256 _amount) returns (bool success){\r\n        totalSupply = totalSupply.add(_amount);\r\n        balances[receiver] = balances[receiver].add(_amount);\r\n        Mint(receiver, _amount);\r\n        return true;\r\n    }\r\n}\r\n// ¯\\_(ツ)_/¯","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"ethGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startPreICOTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SaleEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleGoalReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleStarted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFinalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startICOTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SaleStarted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endICOTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endPreICOTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bounty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"RelestToken","CompilerVersion":"v0.4.12+commit.194ff033","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://008e22b976c4e9786f2358d7efab39c360d9cc62506e646e9f242a9403bbc59b"}]}