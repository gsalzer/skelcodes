{"status":"1","message":"OK","result":[{"SourceCode":"contract tablet_factory {\r\n    \r\n    address private tablet_factory_owner;\r\n    \r\n    address[] public creators;\r\n    \r\n    struct tablet_struct {\r\n        bytes32 tablet_name;\r\n        address tablet_address;\r\n    }\r\n    \r\n    mapping(address => tablet_struct[]) public tablets;\r\n    \r\n    \r\n    function tablet_factory() public {\r\n        tablet_factory_owner = msg.sender;\r\n    }\r\n\r\n    function create_tablet(bytes32 new_tablet_name) public payable returns (address) {\r\n        if (!is_creator(msg.sender)) {creators.push(msg.sender);}\r\n        address new_tablet_address = new tablet(new_tablet_name, msg.sender);\r\n        tablets[msg.sender].push(tablet_struct(new_tablet_name, new_tablet_address));\r\n        return new_tablet_address;\r\n    }\r\n    \r\n    function withdraw(uint amount) external {\r\n        require(msg.sender == tablet_factory_owner);\r\n        msg.sender.transfer(amount);\r\n    }\r\n    \r\n    \r\n    function is_creator(address creator_address) public constant returns(bool) {\r\n        return tablets[creator_address].length > 0;\r\n    }\r\n    \r\n    function creator_tablets_count(address creator_address) public constant returns(uint) {\r\n        return tablets[creator_address].length;\r\n    }\r\n    \r\n    function creators_count() public constant returns(uint) {\r\n        return creators.length;\r\n    }\r\n    \r\n}\r\n\r\ncontract tablet {\r\n    \r\n    bytes32 public this_tablet_name;\r\n    address public tablet_owner;\r\n    \r\n    string[] public records;\r\n    \r\n    mapping(address => bool) public scribes;\r\n    address[] public scribes_hisory;\r\n    \r\n    event new_tablet_created(address indexed tablet_creator, bytes32 tablet_name, address tablet_address);\r\n    event new_record(address indexed tablet_address, address indexed scribe, uint record_nubmer);\r\n    \r\n    function tablet(bytes32 tablet_name, address tablet_creator) public {\r\n        if (tablet_creator == 0) {tablet_creator = msg.sender;}\r\n        tablet_owner = tablet_creator;\r\n        this_tablet_name = tablet_name;\r\n        scribes[tablet_owner] = true;\r\n        scribes_hisory.push(tablet_owner);\r\n        new_tablet_created(tablet_creator, tablet_name, this);\r\n    }\r\n\r\n    function add_scribe(address scribe) public {\r\n        require(tablet_owner == msg.sender);\r\n        require(scribes[scribe] = false);\r\n        scribes[scribe] = true;\r\n        scribes_hisory.push(scribe);\r\n    }\r\n    \r\n    function remove_scribe(address scribe) public {\r\n        require(tablet_owner == msg.sender);\r\n        scribes[scribe] = false;\r\n    }\r\n    \r\n    function change_owner(address new_owner) public {\r\n        require(tablet_owner == msg.sender);\r\n        tablet_owner = new_owner;\r\n    }\r\n        \r\n    function add_record(string record) public {\r\n        require(scribes[msg.sender]);\r\n        // require(bytes(record).length <= 2048); Lets decide this on the client side, limit could be higher later\r\n        new_record(this, msg.sender, records.push(record));\r\n    }\r\n    \r\n    function tablet_length() public constant returns (uint256) {\r\n        return records.length;\r\n    }\r\n    \r\n    function scribes_hisory_length() public constant returns (uint256) {\r\n        return scribes_hisory.length;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creators_count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_tablet_name\",\"type\":\"bytes32\"}],\"name\":\"create_tablet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tablets\",\"outputs\":[{\"name\":\"tablet_name\",\"type\":\"bytes32\"},{\"name\":\"tablet_address\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"creator_address\",\"type\":\"address\"}],\"name\":\"is_creator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"creators\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"creator_address\",\"type\":\"address\"}],\"name\":\"creator_tablets_count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"tablet_factory","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c4df6119b58e1d75cb260f73234899d721759c58305d487db46292a46cd861e3"}]}