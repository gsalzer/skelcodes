{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\n//ERC20 Compliant\r\ncontract SPARCPresale {    \r\n    uint256 public maxEther     = 1000 ether;\r\n    uint256 public etherRaised  = 0;\r\n    \r\n    address public SPARCAddress;\r\n    address public beneficiary;\r\n    \r\n    bool    public funding      = false;\r\n    \r\n    address public owner;\r\n    modifier onlyOwner() {\r\n        if (msg.sender != owner) {\r\n            throw;\r\n        }\r\n        _;\r\n    }\r\n \r\n    function SPARCPresale() {\r\n        owner           = msg.sender;\r\n        beneficiary     = msg.sender;\r\n    }\r\n    \r\n    function withdrawEther(uint256 amount) onlyOwner {\r\n        require(amount <= this.balance);\r\n        \r\n        if(!beneficiary.send(this.balance)){\r\n            throw;\r\n        }\r\n    }\r\n    \r\n    function setSPARCAddress(address _SPARCAddress) onlyOwner {\r\n        SPARCAddress    = _SPARCAddress;\r\n    }\r\n    \r\n    function startSale() onlyOwner {\r\n        funding = true;\r\n    }\r\n    \r\n    // Ether transfer to this contact is only available untill the presale limit is reached.\r\n    \r\n    // By transfering ether to this contract you are agreeing to these terms of the contract:\r\n    // - You are not in anyway forbidden from doing business with Canadian businesses or citizens.\r\n    // - Your funds are not proceeeds of illegal activity.\r\n    // - Howey Disclaimer:\r\n    //   - SPARCs do not represent equity or share in the foundation.\r\n    //   - SPARCs are products of the foundation.\r\n    //   - There is no expectation of profit from your purchase of SPARCs.\r\n    //   - SPARCs are for the purpose of reserving future network power.\r\n    function () payable {\r\n        assert(funding);\r\n        assert(etherRaised < maxEther);\r\n        require(msg.value != 0);\r\n        require(etherRaised + msg.value <= maxEther);\r\n        \r\n        etherRaised  += msg.value;\r\n        \r\n        if(!SPARCToken(SPARCAddress).create(msg.sender, msg.value * 20000)){\r\n            throw;\r\n        }\r\n    }\r\n}\r\n\r\n/// SPARCToken interface\r\ncontract SPARCToken {\r\n    function create(address to, uint256 amount) returns (bool);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"maxEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_SPARCAddress\",\"type\":\"address\"}],\"name\":\"setSPARCAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SPARCAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startSale\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"funding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etherRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"SPARCPresale","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://269b5211d6e0392a1442cb011e33395a790e5499ae8aa546e97d7b87dbfa7161"}]}