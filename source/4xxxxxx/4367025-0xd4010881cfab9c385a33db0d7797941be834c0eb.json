{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4 .2;\r\ncontract Token {\r\n    string public standard = 'Token 0.1';\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n    address public owner;\r\n    address[] public users;\r\n    bytes32 public filehash;\r\n    \r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    modifier onlyOwner() {\r\n        if (owner != msg.sender) {\r\n            throw;\r\n        } else {\r\n            _;\r\n        }\r\n    }\r\n\r\n    function Token() {\r\n        owner = 0x7F325a2d8365385e4B189b708274526899c17453;\r\n       // filehash = 0x26be3f796356cf26183f91fea302911533808f5ee8f58cad05c03249a1b96997;\r\n        address firstOwner = owner;\r\n        balanceOf[firstOwner] = 100000000;\r\n        totalSupply = 100000000;\r\n        name = 'Cryptonian';\r\n        symbol = 'crypt';\r\n        decimals = 8;\r\n        msg.sender.send(msg.value);\r\n        users.push(0x7F325a2d8365385e4B189b708274526899c17453);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) {\r\n        if (balanceOf[msg.sender] < _value) throw;\r\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw;\r\n        balanceOf[msg.sender] -= _value;\r\n        balanceOf[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        bool userExists = false;\r\n        uint memberCount = users.length;\r\n        for (uint i = 0; i < memberCount; i++) {\r\n            if (users[i] == _to) {\r\n                userExists = true;\r\n            }\r\n        }\r\n        if (userExists == false) {\r\n            users.push(_to);\r\n        }\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns(bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n\r\n    function collectExcess() onlyOwner {\r\n        owner.send(this.balance - 2100000);\r\n    }\r\n\r\n    function liquidate(address newOwner) onlyOwner {\r\n        uint sellAmount = msg.value;\r\n        uint memberCount = users.length;\r\n        owner = newOwner;\r\n        for (uint i = 0; i < memberCount; i++) {\r\n            liquidateUser(users[i], sellAmount);\r\n        }\r\n    }\r\n\r\n    function liquidateUser(address user, uint sentValue) onlyOwner {\r\n        uint userBalance = balanceOf[user] * 10000000;\r\n        uint userPercentage = userBalance / totalSupply;\r\n        uint etherAmount = (sentValue * userPercentage) / 10000000;\r\n        if (user.send(etherAmount)) {\r\n            balanceOf[user] = 0;\r\n        }\r\n    }\r\n\r\n    function issueDividend() onlyOwner {\r\n        uint sellAmount = msg.value;\r\n        uint memberCount = users.length;\r\n        for (uint i = 0; i < memberCount; i++) {\r\n            sendDividend(users[i], sellAmount);\r\n        }\r\n    }\r\n\r\n    function sendDividend(address user, uint sentValue) onlyOwner {\r\n        uint userBalance = balanceOf[user] * 10000000;\r\n        uint userPercentage = userBalance / totalSupply;\r\n        uint etherAmount = (sentValue * userPercentage) / 10000000;\r\n        if (user.send(etherAmount)) {}\r\n    }\r\n\r\n    function() {}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"sentValue\",\"type\":\"uint256\"}],\"name\":\"liquidateUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"issueDividend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"sentValue\",\"type\":\"uint256\"}],\"name\":\"sendDividend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"filehash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectExcess\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Token","CompilerVersion":"v0.4.17+commit.bdeb9e52","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://82273aad2b8419564b941b25fece8ff56116bd8b5f8f34ffe5f9e5db4492f4ac"}]}