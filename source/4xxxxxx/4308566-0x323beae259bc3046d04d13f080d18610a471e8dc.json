{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n\r\n}\r\n\r\ncontract BlockvPublicLedger is Ownable {\r\n\r\n  struct logEntry{\r\n        string txType;\r\n        string txId;\r\n        address to;\r\n        uint256 amountContributed;\r\n        uint8 discount;\r\n        uint256 blockTimestamp;\r\n  }\r\n  struct distributionEntry{\r\n        string txId;\r\n        address to;\r\n        uint256 amountContributed;    \r\n        uint8 discount;\r\n        uint256 tokenAmount;\r\n  }\r\n  struct index {\r\n    uint256 index;\r\n    bool set;\r\n  }\r\n  uint256 public txCount = 0;\r\n  uint256 public distributionEntryCount = 0;\r\n  mapping (string => index) distributionIndex;\r\n  logEntry[] public transactionLog;\r\n  distributionEntry[] public distributionList;\r\n  bool public distributionFixed = false;\r\n\r\n\r\n  /**\r\n   * @dev BlockvPublicLedger Constructor\r\n   * Runs only on initial contract creation.\r\n   */\r\n  function BlockvPublicLedger() {\r\n  }\r\n\r\n  /**\r\n   * @dev update/create a record in the Distribution List\r\n   * @param _tx_id A unique id for the transaction, could be the BTC or ETH tx_id\r\n   * @param _to The address to transfer to.\r\n   * @param _amount The amount contributed in ETH grains.\r\n   * @param _discount The discount value in percent; 100 meaning no discount, 80 meaning 20% discount.\r\n   */\r\n  function appendToDistributionList(string _tx_id, address _to, uint256 _amount, uint8 _discount)  onlyOwner returns (bool) {\r\n        index memory idx = distributionIndex[_tx_id];\r\n        bool ret;\r\n        logEntry memory le;\r\n        distributionEntry memory de;\r\n\r\n        if(distributionFixed) {  \r\n          revert();\r\n        }\r\n\r\n        if ( _discount > 100 ) {\r\n          revert();\r\n        }\r\n        /* build the log record and add it to the transaction log first */\r\n        if ( !idx.set ) {\r\n            ret = false;\r\n            le.txType = \"INSERT\";\r\n        } else {\r\n            ret = true;\r\n            le.txType = \"UPDATE\";          \r\n        }\r\n        le.to = _to;\r\n        le.amountContributed = _amount;\r\n        le.blockTimestamp = block.timestamp;\r\n        le.txId = _tx_id;\r\n        le.discount = _discount;\r\n        transactionLog.push(le);\r\n        txCount++;\r\n\r\n        /* now append or update the distributionList */\r\n        de.txId = _tx_id;\r\n        de.to = _to;\r\n        de.amountContributed = _amount;\r\n        de.discount = _discount;\r\n        de.tokenAmount = 0;\r\n        if (!idx.set) {\r\n          idx.index = distributionEntryCount;\r\n          idx.set = true;\r\n          distributionIndex[_tx_id] = idx;\r\n          distributionList.push(de);\r\n          distributionEntryCount++;\r\n        } else {\r\n          distributionList[idx.index] = de;\r\n        }\r\n        return ret;\r\n  }\r\n\r\n\r\n  /**\r\n  * @dev finalize the distributionList after token price is set and ETH conversion is known\r\n  * @param _tokenPrice the price of a VEE in USD-cents\r\n  * @param _usdToEthConversionRate in grains\r\n  */\r\n  function fixDistribution(uint8 _tokenPrice, uint256 _usdToEthConversionRate) onlyOwner {\r\n\r\n    distributionEntry memory de;\r\n    logEntry memory le;\r\n    uint256 i = 0;\r\n\r\n    if(distributionFixed) {  \r\n      revert();\r\n    }\r\n\r\n    for(i = 0; i < distributionEntryCount; i++) {\r\n      de = distributionList[i];\r\n      de.tokenAmount = (de.amountContributed * _usdToEthConversionRate * 100) / (_tokenPrice  * de.discount / 100);\r\n      distributionList[i] = de;\r\n    }\r\n    distributionFixed = true;\r\n  \r\n    le.txType = \"FIXED\";\r\n    le.blockTimestamp = block.timestamp;\r\n    le.txId = \"__FIXED__DISTRIBUTION__\";\r\n    transactionLog.push(le);\r\n    txCount++;\r\n\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"distributionFixed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"txCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactionLog\",\"outputs\":[{\"name\":\"txType\",\"type\":\"string\"},{\"name\":\"txId\",\"type\":\"string\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amountContributed\",\"type\":\"uint256\"},{\"name\":\"discount\",\"type\":\"uint8\"},{\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tx_id\",\"type\":\"string\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_discount\",\"type\":\"uint8\"}],\"name\":\"appendToDistributionList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"distributionList\",\"outputs\":[{\"name\":\"txId\",\"type\":\"string\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amountContributed\",\"type\":\"uint256\"},{\"name\":\"discount\",\"type\":\"uint8\"},{\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"distributionEntryCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenPrice\",\"type\":\"uint8\"},{\"name\":\"_usdToEthConversionRate\",\"type\":\"uint256\"}],\"name\":\"fixDistribution\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"BlockvPublicLedger","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a7ef199d4b6674fe979f8f16cc57e9537846c195d8c0c1c0ca785819f7f9232d"}]}