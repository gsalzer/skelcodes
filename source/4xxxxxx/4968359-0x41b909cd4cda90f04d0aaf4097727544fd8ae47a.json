{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n/* taking ideas from OpenZeppelin, thanks */\r\ncontract SafeMath {\r\n    function safeAdd(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        uint256 z = x + y;\r\n        assert((z >= x) && (z >= y));\r\n        return z;\r\n    }\r\n\r\n    function safeSub(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        assert(x >= y);\r\n        return x - y;\r\n    }\r\n\r\n    function safeMin256(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        return x < y ? x : y;\r\n    }\r\n}\r\n\r\ncontract XCTCrowdSale is SafeMath {\r\n    //crowdsale parameters\r\n    address public beneficiary;\r\n    uint256 public startBlock = 4969760;\r\n    uint256 public constant hardCap = 4000 ether; \r\n    uint256 public amountRaised;\r\n\r\n    function XCTCrowdSale(address _beneficiary) public {\r\n        beneficiary = _beneficiary;\r\n        amountRaised = 0;\r\n    }\r\n\r\n    modifier inProgress() {\r\n      require(block.number >= startBlock);\r\n      require(amountRaised < hardCap);\r\n      _;\r\n    }\r\n\r\n    //fund raising\r\n    function() public payable {\r\n        fundRaising();\r\n    }\r\n\r\n    function fundRaising() public payable inProgress {\r\n        require(msg.value >= 15 ether && msg.value <= 50 ether);\r\n        uint256 contribution = safeMin256(msg.value, safeSub(hardCap, amountRaised));\r\n        amountRaised = safeAdd(amountRaised, contribution);\r\n\r\n        //send to XChain Team\r\n        beneficiary.transfer(contribution);\r\n\r\n        // Refund the msg.sender, in the case that not all of its ETH was used.\r\n        if (contribution != msg.value) {\r\n            uint256 overpay = safeSub(msg.value, contribution);\r\n            msg.sender.transfer(overpay);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"fundRaising\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"XCTCrowdSale","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000f20ad28e8f14339c8d58f8f3b66e0296f8dd07c9","Library":"","SwarmSource":"bzzr://87f3de7e6c3c0feb71ae7bb34b3f444ae7605b7f56f58ab627bce11e4cd6ae7a"}]}