{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\nAn ERC20 compliant token that is linked to an external identifier. For exmaple, Meetup.com\r\n\r\nThis software is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \r\nSee MIT Licence for further details.\r\n<https://opensource.org/licenses/MIT>.\r\n*/\r\n\r\npragma solidity ^0.4.15;\r\n\r\ncontract ERC20Token\r\n{\r\n/* State */\r\n    // The Total supply of tokens\r\n    uint totSupply;\r\n    \r\n    /// @return Token symbol\r\n    string sym;\r\n    string nam;\r\n\r\n    uint8 public decimals = 0;\r\n    \r\n    // Token ownership mapping\r\n    mapping (address => uint) balance;\r\n    \r\n    // Allowances mapping\r\n    mapping (address => mapping (address => uint)) allowed;\r\n\r\n/* Events */\r\n    // Triggered when tokens are transferred.\r\n    event Transfer(\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 value);\r\n\r\n    // Triggered whenever approve(address _spender, uint256 _value) is called.\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value);\r\n\r\n/* Funtions Public */\r\n\r\n    function symbol() public constant returns (string)\r\n    {\r\n        return sym;\r\n    }\r\n\r\n    function name() public constant returns (string)\r\n    {\r\n        return nam;\r\n    }\r\n    \r\n    // Using an explicit getter allows for function overloading    \r\n    function totalSupply() public constant returns (uint)\r\n    {\r\n        return totSupply;\r\n    }\r\n    \r\n    // Using an explicit getter allows for function overloading    \r\n    function balanceOf(address holderAddress) public constant returns (uint)\r\n    {\r\n        return balance[holderAddress];\r\n    }\r\n    \r\n    // Using an explicit getter allows for function overloading    \r\n    function allowance(address ownerAddress, address spenderAddress) public constant returns (uint remaining)\r\n    {\r\n        return allowed[ownerAddress][spenderAddress];\r\n    }\r\n        \r\n\r\n    // Send amount amount of tokens to address _to\r\n    // Reentry protection prevents attacks upon the state\r\n    function transfer(address toAddress, uint256 amount) public\r\n    {\r\n        xfer(msg.sender, toAddress, amount);\r\n    }\r\n\r\n    // Send amount amount of tokens from address _from to address _to\r\n    // Reentry protection prevents attacks upon the state\r\n    function transferFrom(address fromAddress, address toAddress, uint256 amount) public\r\n    {\r\n        require(amount <= allowed[fromAddress][msg.sender]);\r\n        allowed[fromAddress][msg.sender] -= amount;\r\n        xfer(fromAddress, toAddress, amount);\r\n    }\r\n\r\n    // Process a transfer internally.\r\n    function xfer(address fromAddress, address toAddress, uint amount) internal\r\n    {\r\n        require(amount <= balance[fromAddress]);\r\n        balance[fromAddress] -= amount;\r\n        balance[toAddress] += amount;\r\n        Transfer(fromAddress, toAddress, amount);\r\n    }\r\n\r\n    // Approves a third-party spender\r\n    // Reentry protection prevents attacks upon the state\r\n    function approve(address spender, uint256 amount) public\r\n    {\r\n        allowed[msg.sender][spender] = amount;\r\n        Approval(msg.sender, spender, amount);\r\n    }\r\n}\r\n\r\ncontract TransferableMeetupToken is ERC20Token\r\n{\r\n    address owner = msg.sender;\r\n    \r\n    function TransferableMeetupToken(string tokenSymbol, string toeknName)\r\n    {\r\n        sym = tokenSymbol;\r\n        nam = toeknName;\r\n    }\r\n    \r\n    event Issue(\r\n        address indexed toAddress,\r\n        uint256 amount,\r\n        string externalId,\r\n        string reason);\r\n\r\n    event Redeem(\r\n        address indexed fromAddress,\r\n        uint256 amount);\r\n\r\n    function issue(address toAddress, uint amount, string externalId, string reason) public\r\n    {\r\n        require(owner == msg.sender);\r\n        totSupply += amount;\r\n        balance[toAddress] += amount;\r\n        Issue(toAddress, amount, externalId, reason);\r\n        Transfer(0x0, toAddress, amount);\r\n    }\r\n    \r\n    function redeem(uint amount) public\r\n    {\r\n        require(balance[msg.sender] >= amount);\r\n        totSupply -= amount;\r\n        balance[msg.sender] -= amount;\r\n        Redeem(msg.sender, amount);\r\n        Transfer(msg.sender, 0x0, amount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"fromAddress\",\"type\":\"address\"},{\"name\":\"toAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"externalId\",\"type\":\"string\"},{\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"holderAddress\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ownerAddress\",\"type\":\"address\"},{\"name\":\"spenderAddress\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"toeknName\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"toAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"externalId\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"TransferableMeetupToken","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003534554000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000225472616e7366657261626c65205379646e657920457468657265756d20546f6b656e000000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://93fb9b0b386ac7c1a86afc71387842cc487c274af21cd559730fea90a372db9c"}]}