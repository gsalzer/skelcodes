{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract BachelorBucks {\r\n    string public standard = 'BBUCK 1.0';\r\n    string public name = 'BachelorBucks';\r\n    string public symbol = 'BBUCK';\r\n    uint8 public decimals = 0;\r\n    uint256 public totalSupply = 1000000000;\r\n    uint256 public initialPrice = 1 ether / 1000;\r\n    uint256 public priceIncreasePerPurchase = 1 ether / 100000;\r\n    uint256 public currentPrice = initialPrice;\r\n    \r\n    address public owner = msg.sender;\r\n    uint256 public creationTime = now;\r\n    \r\n    struct Component {\r\n        string name;\r\n        uint16 index;\r\n        int256 currentSupport;\r\n        uint256 supported;\r\n        uint256 undermined;\r\n    }\r\n    \r\n    struct AddOn {\r\n        string name;\r\n        uint16 index;\r\n        uint256 support;\r\n        uint256 threshold;\r\n        bool completed;\r\n        address winner;\r\n    }\r\n    \r\n    struct Wildcard {\r\n        string name;\r\n        uint16 index;\r\n        uint256 cost;\r\n        uint16 available;\r\n    }\r\n    \r\n    /* Creates an array with all balances */\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    \r\n    uint16 public componentCount = 0;\r\n    mapping (uint16 => Component) public components;\r\n    \r\n    uint16 public addOnCount = 0;\r\n    mapping (uint16 => AddOn) public addOns;\r\n    \r\n    uint16 public wildcardCount = 0;\r\n    mapping (uint16 => Wildcard) public wildcards;\r\n    mapping (address => mapping (uint16 => uint16)) public wildcardsHeld;\r\n\r\n    /* Generates a public event on the blockchain that will notify clients of transfers */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    \r\n    /* Generates a public event on the blockchain that will notify clients of purchases */\r\n    event Purchase(address indexed from, uint256 value);\r\n\r\n    /* Notifies clients about support for a component */\r\n    event SupportComponent(uint256 componentIdx, address indexed from, uint256 value);\r\n    \r\n    /* Notifies clients about undermine for a component */\r\n    event UndermineComponent(uint256 componentIdx, address indexed from, uint256 value);\r\n    \r\n    /* Notifies clients about support for an addOn */\r\n    event SupportAddOn(uint256 addOnIdx, address indexed from, uint256 value);\r\n    \r\n    /* Notifies clients about completion for an addOn */\r\n    event CompleteAddOn(uint256 addOnIdx, address indexed winner);\r\n\r\n    /* Notifies clients about wildcard completion */\r\n    event CompleteWildcard(uint256 wildcardIdx, address indexed caller);\r\n\r\n    modifier onlyByOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    modifier neverByOwner() {\r\n        require(msg.sender != owner);\r\n        _;\r\n    }\r\n    \r\n    /* Initializes contract with initial supply tokens to me */\r\n    function BachelorBucks() public {\r\n        balanceOf[msg.sender] = totalSupply;                    // Give the creator all initial tokens\r\n    }\r\n    \r\n    function createComponent(string componentName) public onlyByOwner() returns (bool success) {\r\n        if (componentCount > 65534) revert();\r\n        var component = components[componentCount];\r\n        component.name = componentName;\r\n        component.index = componentCount;\r\n        component.currentSupport = 0;\r\n        component.supported = 0;\r\n        component.undermined = 0;\r\n        componentCount += 1;\r\n        return true;\r\n    }\r\n    \r\n    function createAddOn(string addOnName, uint256 threshold) public onlyByOwner() returns (bool success) {\r\n        if (addOnCount > 65534) revert();\r\n        if (threshold == 0) revert();\r\n        var addOn = addOns[addOnCount];\r\n        addOn.name = addOnName;\r\n        addOn.index = addOnCount;\r\n        addOn.support = 0;\r\n        addOn.threshold = threshold;\r\n        addOn.completed = false;\r\n        addOn.winner = address(0x0);\r\n        addOnCount += 1;\r\n        return true;\r\n    }\r\n    \r\n    function createWildcard(string wildcardName, uint256 cost, uint16 number) public onlyByOwner() returns (bool success) {\r\n        if (wildcardCount > 65534) revert();\r\n        if (number == 0) revert();\r\n        if (cost == 0) revert();\r\n        var wildcard = wildcards[wildcardCount];\r\n        wildcard.name = wildcardName;\r\n        wildcard.index = wildcardCount;\r\n        wildcard.available = number;\r\n        wildcard.cost = cost;\r\n        wildcardCount += 1;\r\n        return true;\r\n    }\r\n    \r\n    function giveMeSomeBBUCKs() public payable returns (bool success) {\r\n        if (msg.value < currentPrice) revert();\r\n        uint256 amount = (msg.value / currentPrice);\r\n        if (balanceOf[owner] < amount) revert();\r\n        balanceOf[owner] -= amount;\r\n        balanceOf[msg.sender] += amount;\r\n        if ((currentPrice + priceIncreasePerPurchase) < currentPrice) return true; // Maximum price reached\r\n        currentPrice += priceIncreasePerPurchase;\r\n        return true;\r\n    }\r\n    \r\n    function() public payable { }                               // Thanks for the donation!\r\n    \r\n    function getBalance() view public returns (uint256) {\r\n        return balanceOf[msg.sender];\r\n    }\r\n    \r\n    function sweepToOwner() public onlyByOwner() returns (bool success) {\r\n        owner.transfer(this.balance);\r\n        return true;\r\n    }\r\n    \r\n    /* Send coins */\r\n    function transfer(address _to, uint256 _value) public {\r\n        if (_to == 0x0) revert();                               // Prevent transfer to 0x0 address\r\n        if (balanceOf[msg.sender] < _value) revert();           // Check if the sender has enough\r\n        if (balanceOf[_to] + _value < balanceOf[_to]) revert(); // Check for overflows\r\n        balanceOf[msg.sender] -= _value;                        // Subtract from the sender\r\n        balanceOf[_to] += _value;                               // Add the same to the recipient\r\n        Transfer(msg.sender, _to, _value);                      // Notify anyone listening that this transfer took place\r\n    }\r\n\r\n    /* Allow another contract to spend some tokens on my behalf */\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        if ((_value != 0) && (allowance[msg.sender][_spender] != 0)) revert();\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n\r\n    /* A contract attempts to get the coins */\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        if (_to == 0x0) revert();                                // Prevent transfer to 0x0 address\r\n        if (balanceOf[_from] < _value) revert();                 // Check if the sender has enough\r\n        if (balanceOf[_to] + _value < balanceOf[_to]) revert();  // Check for overflows\r\n        if (_value > allowance[_from][msg.sender]) revert();     // Check allowance\r\n        balanceOf[_from] -= _value;                              // Subtract from the sender\r\n        balanceOf[_to] += _value;                                // Add the same to the recipient\r\n        allowance[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n\t/* Add support a component */\r\n    function supportComponent(uint16 component_idx, uint256 value) public neverByOwner() returns (bool success) {\r\n        if (value == 0) revert();                                       // Can't add 0 support\r\n        if (balanceOf[msg.sender] < value) revert();                    // Check if the sender has enough\r\n        if (component_idx >= componentCount) revert();                  // Check if the component index is valid\r\n        var component = components[component_idx];\r\n        if ((component.supported + value) < component.supported) revert();                    // Will adding support wrap the supported counter\r\n        if ((component.currentSupport + int256(value)) < component.currentSupport) revert();  // Will adding this much support wrap the component support\r\n        balanceOf[msg.sender] -= value;                                 // Subtract from the sender\r\n        component.currentSupport += int256(value);                      // Add support to the component\r\n        component.supported += value;\r\n        totalSupply -= value;                                           // Remove value from the totalSupply\r\n        SupportComponent(component_idx, msg.sender, value);\r\n        return true;\r\n    }\r\n    \r\n  /* Undermine support for a component */\r\n    function undermineComponent(uint16 component_idx, uint256 value) public neverByOwner() returns (bool success) {\r\n        if (value == 0) revert();                                       // Can't subtract 0 support\r\n        if (balanceOf[msg.sender] < value) revert();                    // Check if the sender has enough\r\n        if (component_idx >= componentCount) revert();                  // Check if the component index is valid\r\n        var component = components[component_idx];\r\n        if ((component.currentSupport - int256(value)) > component.currentSupport) revert();  // Will subtracting this much support wrap the component support\r\n        balanceOf[msg.sender] -= value;                                 // Subtract from the sender\r\n        component.currentSupport -= int256(value);                      // Subtract support from the component\r\n        component.undermined += value;\r\n        totalSupply -= value;                                           // Remove value from the totalSupply\r\n        UndermineComponent(component_idx, msg.sender, value);\r\n        return true;\r\n    }\r\n\r\n\t/* Get current component support */\r\n    function getComponentSupport(uint16 component_idx) view public returns (int256) {\r\n        if (component_idx >= componentCount) return 0;\r\n        return components[component_idx].currentSupport;\r\n    }\r\n    \r\n    /* Add support an addOn */\r\n    function supportAddOn(uint16 addOn_idx, uint256 value) public neverByOwner() returns (bool success) {\r\n        if (value == 0) revert();                                       // Can't add 0 support\r\n        if (balanceOf[msg.sender] < value) revert();                    // Check if the sender has enough\r\n        if (addOn_idx >= addOnCount) revert();                          // Check if the addon index is valid\r\n        var addOn = addOns[addOn_idx];\r\n        if (addOn.completed) revert();\r\n        if ((addOn.support + value) < addOn.support) revert();          // Will adding support wrap the support counter\r\n        balanceOf[msg.sender] -= value;                                 // Subtract from the sender\r\n        addOn.support += value;                                         // Add support to the component\r\n        totalSupply -= value;                                           // Remove value from the totalSupply\r\n        SupportAddOn(addOn_idx, msg.sender, value);\r\n        if (addOn.support < addOn.threshold) return true;              // Threshold is not yet met\r\n        addOn.completed = true;\r\n        addOn.winner = msg.sender;\r\n        CompleteAddOn(addOn_idx, addOn.winner);\r\n        return true;\r\n    }\r\n    \r\n    /* Get current addOn support */\r\n    function getAddOnSupport(uint16 addOn_idx) view public returns (uint256) {\r\n        if (addOn_idx >= addOnCount) return 0;\r\n        return addOns[addOn_idx].support;\r\n    }\r\n    \r\n    /* Get current addOn support */\r\n    function getAddOnNeeded(uint16 addOn_idx) view public returns (uint256) {\r\n        if (addOn_idx >= addOnCount) return 0;\r\n        var addOn = addOns[addOn_idx];\r\n        if (addOn.completed) return 0;\r\n        return addOn.threshold - addOn.support;\r\n    }\r\n    \r\n    /* Get current addOn support */\r\n    function getAddOnComplete(uint16 addOn_idx) view public returns (bool) {\r\n        if (addOn_idx >= addOnCount) return false;\r\n        return addOns[addOn_idx].completed;\r\n    }\r\n    \r\n    /* acquire a wildcard */\r\n    function acquireWildcard(uint16 wildcard_idx) public neverByOwner() returns (bool success) {\r\n        if (wildcard_idx >= wildcardCount) revert();                    // Check if the wildcard index is valid\r\n        var wildcard = wildcards[wildcard_idx];\r\n        if (balanceOf[msg.sender] < wildcard.cost) revert();            // Check if the sender has enough\r\n        if (wildcard.available < 1) revert();                           // Are there wildcards still available\r\n        balanceOf[msg.sender] -= wildcard.cost;                         // Subtract from the sender\r\n        wildcard.available -= 1;                                        // Subtract 1 wildcard from the deck\r\n        totalSupply -= wildcard.cost;                                   // Remove value from the totalSupply\r\n        wildcardsHeld[msg.sender][wildcard_idx] += 1;\r\n        CompleteWildcard(wildcard_idx, msg.sender);\r\n        return true;\r\n    }\r\n    \r\n    /* Get remaining wildcards */\r\n    function getWildcardsRemaining(uint16 wildcard_idx) view public returns (uint16) {\r\n        if (wildcard_idx >= wildcardCount) return 0;\r\n        return wildcards[wildcard_idx].available;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"addOnCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"addOns\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"index\",\"type\":\"uint16\"},{\"name\":\"support\",\"type\":\"uint256\"},{\"name\":\"threshold\",\"type\":\"uint256\"},{\"name\":\"completed\",\"type\":\"bool\"},{\"name\":\"winner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"componentName\",\"type\":\"string\"}],\"name\":\"createComponent\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addOn_idx\",\"type\":\"uint16\"}],\"name\":\"getAddOnSupport\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"componentCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"component_idx\",\"type\":\"uint16\"}],\"name\":\"getComponentSupport\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addOnName\",\"type\":\"string\"},{\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"createAddOn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addOn_idx\",\"type\":\"uint16\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"supportAddOn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceIncreasePerPurchase\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wildcard_idx\",\"type\":\"uint16\"}],\"name\":\"acquireWildcard\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addOn_idx\",\"type\":\"uint16\"}],\"name\":\"getAddOnNeeded\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wildcardCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"components\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"index\",\"type\":\"uint16\"},{\"name\":\"currentSupport\",\"type\":\"int256\"},{\"name\":\"supported\",\"type\":\"uint256\"},{\"name\":\"undermined\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"wildcardsHeld\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"component_idx\",\"type\":\"uint16\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"undermineComponent\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"wildcards\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"index\",\"type\":\"uint16\"},{\"name\":\"cost\",\"type\":\"uint256\"},{\"name\":\"available\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wildcardName\",\"type\":\"string\"},{\"name\":\"cost\",\"type\":\"uint256\"},{\"name\":\"number\",\"type\":\"uint16\"}],\"name\":\"createWildcard\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"wildcard_idx\",\"type\":\"uint16\"}],\"name\":\"getWildcardsRemaining\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addOn_idx\",\"type\":\"uint16\"}],\"name\":\"getAddOnComplete\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sweepToOwner\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"giveMeSomeBBUCKs\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"component_idx\",\"type\":\"uint16\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"supportComponent\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"componentIdx\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SupportComponent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"componentIdx\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"UndermineComponent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addOnIdx\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SupportAddOn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addOnIdx\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"CompleteAddOn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"wildcardIdx\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CompleteWildcard\",\"type\":\"event\"}]","ContractName":"BachelorBucks","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4a442d0678f608445039856447882e4e3e95a83ad152799fb0cbb06ec0202b05"}]}