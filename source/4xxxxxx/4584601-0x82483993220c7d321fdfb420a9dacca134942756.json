{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract PChannel {\r\n    \r\n    string public name = 'Payment channel';\r\n\r\n    string public symbol = 'ETH';\r\n    \r\n    /**\r\n     * Contract owner\r\n     */\r\n    address public owner = msg.sender;\r\n\r\n    /**\r\n     * Fee for refund, send and forward\r\n     */\r\n    uint256 public fee = 1 szabo;\r\n\r\n    /**\r\n     */\r\n    uint256 public trFee = 0;\r\n\r\n    /**\r\n     * User balances\r\n     */\r\n    mapping(address => uint256) private balances;\r\n\r\n    /**\r\n     * Decimals for balances\r\n     */\r\n    uint8 public constant decimals = 18;\r\n    \r\n    uint256 public totalSupply = 0;\r\n    \r\n    /**\r\n     * event for token purchase logging\r\n     * @param purchaser who paid for the weis\r\n     * @param beneficiary who got the weis\r\n     * @param value weis paid for purchase\r\n     * @param amount amount of wei purchased\r\n     */\r\n    event TokenPurchase (\r\n        address indexed purchaser,\r\n        address indexed beneficiary,\r\n        uint256 value,\r\n        uint256 amount\r\n    );\r\n    \r\n    function balanceOf(address addr) public constant returns (uint256) {\r\n        return balances[addr];\r\n    }\r\n    \r\n    /**\r\n     * Store wei in contract\r\n     */\r\n    function () public payable {\r\n        require(msg.value > 0);\r\n\r\n        totalSupply += msg.value;\r\n        balances[msg.sender] += msg.value;\r\n        \r\n        TokenPurchase(msg.sender, msg.sender, msg.value, msg.value);\r\n    }\r\n    \r\n    /**\r\n     * Send wei for user allocated in contract\r\n     * @param to who got weis\r\n     */\r\n    function send(address to) public payable {\r\n        require(to!=address(0));\r\n        require(msg.value > fee);\r\n\r\n        uint256 amount = msg.value - fee;\r\n        totalSupply += msg.value;\r\n        balances[to] += amount;\r\n        balances[owner] += fee;\r\n\r\n        TokenPurchase(msg.sender, to, msg.value, amount);\r\n    }\r\n    \r\n    /**\r\n     * Forward payment to 'to' from sender\r\n     */\r\n    function forward(address to) public payable {\r\n        require(to!=address(0));\r\n        require(msg.value > fee);\r\n        \r\n        uint256 amount = msg.value - fee;\r\n        totalSupply += fee;\r\n        balances[owner] += fee;\r\n        \r\n        TokenPurchase(address(this), to, msg.value, amount);\r\n\r\n        to.transfer(amount);\r\n    }\r\n\r\n    /**\r\n     * Transfer wei from sender to 'to'\r\n     */\r\n    function transfer(address to, uint256 value) public {\r\n        require(to!=address(0));\r\n        require(balances[msg.sender]>=value+trFee);\r\n        \r\n        uint256 amount = value - trFee;\r\n        balances[msg.sender] -= amount;\r\n        balances[to] += amount;\r\n        balances[owner] += trFee;\r\n\r\n        TokenPurchase(msg.sender, to, value, value);\r\n    }\r\n    \r\n    /**\r\n     * Refund 'value' wei to sender\r\n     */\r\n    function refund(uint256 value) public {\r\n        require(balances[msg.sender]>value+fee);\r\n\r\n        uint256 amount = value - fee;\r\n        balances[msg.sender] -= value;\r\n        balances[owner] += fee;\r\n        totalSupply -= amount;\r\n\r\n        TokenPurchase(address(this), msg.sender, value, amount);\r\n        \r\n        msg.sender.transfer(amount);\r\n    }\r\n\r\n    /**\r\n     * Allocate fee for transfer\r\n     */\r\n    function setTrFee(uint256 _fee) public {\r\n        require(msg.sender == owner);\r\n        trFee = _fee;\r\n    }\r\n\r\n    /**\r\n     * Allocate new fee\r\n     */\r\n    function setFee(uint256 _fee) public {\r\n        require(msg.sender == owner);\r\n        fee = _fee;\r\n    }\r\n\r\n    /**\r\n     * Allocate new owner\r\n     */\r\n    function transferOwnership(address newOwner) public {\r\n        require(msg.sender==owner && newOwner != address(0));      \r\n        \r\n        balances[newOwner] = balances[owner];\r\n        balances[owner] = 0;\r\n        \r\n        owner = newOwner;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"forward\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"send\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"trFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setTrFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"}]","ContractName":"PChannel","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://65fee1cdb688ded3ca4201e6ad8a517997163b370b7a26a01571e78141006da5"}]}