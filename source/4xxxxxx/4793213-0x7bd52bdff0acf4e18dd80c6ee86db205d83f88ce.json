{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n/**\r\n * Holds funds for a year.  Send to or deposit directly to this contract.\r\n * Each new acccount is initialized with a 1 year hold period, and is only \r\n * retrievable from the designated address after the set hold time.\r\n*/\r\ncontract HodlerInvestmentClub {\r\n    uint public hodl_interval= 1 years;\r\n    uint public m_hodlers = 1;\r\n    \r\n    struct Hodler {\r\n        uint value;\r\n        uint time;\r\n    }\r\n    \r\n    mapping(address => Hodler) public hodlers;\r\n    \r\n    modifier onlyHodler {\r\n        require(hodlers[msg.sender].value > 0);\r\n        _;\r\n    }\r\n    \r\n    /* Constructor */\r\n    function HodlerInvestmentClub() payable public {\r\n        if (msg.value > 0)  {\r\n            hodlers[msg.sender].value = msg.value;\r\n            hodlers[msg.sender].time = now + hodl_interval;\r\n        }\r\n    }\r\n    \r\n    // join the club!\r\n    // make a deposit to another account if it exists \r\n    // or initialize a deposit for a new account\r\n    function deposit(address _to) payable public {\r\n        require(msg.value > 0);\r\n        if (_to == 0) _to = msg.sender;\r\n        // if a new member, init a hodl time\r\n        if (hodlers[_to].time == 0) {\r\n            hodlers[_to].time = now + hodl_interval;\r\n            m_hodlers++;\r\n        } \r\n        hodlers[_to].value += msg.value;\r\n    }\r\n    \r\n    // withdrawal can only occur after deposit time is exceeded\r\n    function withdraw() public onlyHodler {\r\n        require(hodlers[msg.sender].time <= now);\r\n        uint256 value = hodlers[msg.sender].value;\r\n        delete hodlers[msg.sender];\r\n        m_hodlers--;\r\n        require(msg.sender.send(value));\r\n    }\r\n    \r\n    // join the club!\r\n    // simple deposit and hold time set for msg.sender\r\n    function() payable public {\r\n        require(msg.value > 0);\r\n        hodlers[msg.sender].value += msg.value;\r\n        // init for first deposit\r\n        if (hodlers[msg.sender].time == 0) {\r\n            hodlers[msg.sender].time = now + hodl_interval;\r\n            m_hodlers++;\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"m_hodlers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"hodlers\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hodl_interval\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"HodlerInvestmentClub","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7e489af849d6d3d4ecd951f2f8e1f92869823252817154df6b1a81d51039b1cb"}]}