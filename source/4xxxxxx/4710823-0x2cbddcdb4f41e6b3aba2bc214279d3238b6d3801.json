{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n  \r\n  contract Pixereum {\r\n      \r\n      struct Pixel {\r\n          address owner;\r\n          string message;\r\n          uint256 price;\r\n          bool isSale;\r\n      }\r\n      mapping (uint16 => Pixel) private pixels;\r\n      uint24[10000] public colors;\r\n      address private constant fundWallet = 0xBBf545beE1E4C8A51875a6c92610cc5b898d2107;\r\n      uint public constant numberOfPixels = 10000;\r\n      uint256 public constant feeRate = 100;                          // 1%\r\n      uint256 private constant defaultWeiPrice = 10000000000000000;   // 0.01 eth\r\n      \r\n      // constructor\r\n      function Pixereum() public {\r\n      }\r\n      \r\n      // get a pixel number from (x,y)\r\n      function getPixelNumber(byte _x, byte _y) internal pure returns(uint16) {\r\n          return uint16(_x) + uint16(_y)*100;\r\n      }\r\n      \r\n      // get a color from bytes\r\n      function getColor(byte _red, byte _green, byte _blue) internal pure returns(uint24) {\r\n          return uint24(_red)*65536 + uint24(_green)*256 + uint24(_blue);\r\n      }\r\n      \r\n      // set a new price\r\n      function setPrice(byte _x, byte _y, uint256 _weiAmount) public {\r\n          uint16 pixelNumber = getPixelNumber(_x, _y);\r\n          if (pixels[pixelNumber].owner == msg.sender) {\r\n              pixels[pixelNumber].price = _weiAmount;\r\n          }\r\n      }\r\n      \r\n      // set a new sale state\r\n      function setSaleState(byte _x, byte _y, bool _isSale) public {\r\n          uint16 pixelNumber = getPixelNumber(_x, _y);\r\n          if (pixels[pixelNumber].owner == msg.sender) {\r\n              pixels[pixelNumber].isSale = _isSale;\r\n          }\r\n      }\r\n      \r\n      // set new color\r\n      function setColor(byte _x, byte _y, byte _red, byte _green, byte _blue) public {\r\n          uint16 pixelNumber = getPixelNumber(_x, _y);\r\n          if (pixels[pixelNumber].owner == msg.sender) {\r\n              colors[pixelNumber] = getColor(_red, _green, _blue);\r\n          }\r\n      }\r\n      \r\n      function setMessage(byte _x, byte _y, string _message) public {\r\n          uint16 pixelNumber = getPixelNumber(_x, _y);\r\n          if (pixels[pixelNumber].owner == msg.sender) {\r\n              pixels[pixelNumber].message = _message;\r\n          }\r\n      }\r\n      \r\n      // used by web interface\r\n      function getColors() constant public returns(uint24[10000])  {\r\n          return colors;\r\n      }\r\n      \r\n      function getPixel(uint16 _at) constant public returns(address, string, uint256, bool) {\r\n          Pixel memory pixel;\r\n           if (pixels[_at].owner == 0) {\r\n               pixel = Pixel(fundWallet, \"\", defaultWeiPrice, true); \r\n           } else {\r\n               pixel = pixels[_at];\r\n           }\r\n           return (pixel.owner, pixel.message, pixel.price, pixel.isSale);\r\n       }\r\n      \r\n      // called when ether is sent to this contract\r\n      function () payable public {\r\n          \r\n          // check if data format is valid\r\n          // byte0=x, byte1=y, byte2-4=color\r\n          if (msg.data.length != 5) revert();\r\n  \r\n          // get a pixel number from received data\r\n          uint16 pixelNumber = getPixelNumber(msg.data[0], msg.data[1]);\r\n          \r\n          // check if number of pixels is valid\r\n          if(pixelNumber >= numberOfPixels) revert();\r\n          \r\n          // get current pixel info\r\n          address currentOwner;\r\n          uint256 currentPrice;\r\n          bool currentSaleState;\r\n          (currentOwner, , currentPrice, currentSaleState) = getPixel(pixelNumber);\r\n          \r\n          // check if the pixel is for sale\r\n          if(currentSaleState == false) revert();\r\n          \r\n          // check if a received amount is higher than price\r\n          if(currentPrice > msg.value) revert();\r\n          \r\n          // calculate fee\r\n          uint fee = msg.value / 100;\r\n          \r\n          // update pixel\r\n          pixels[pixelNumber] = Pixel(msg.sender, \"\", currentPrice, false);\r\n          \r\n          // calculate pixel color from received data\r\n          uint24 color = getColor(msg.data[2], msg.data[3], msg.data[4]);\r\n          colors[pixelNumber] = color;\r\n          \r\n          // transfer received amount to oldOwner\r\n          currentOwner.transfer(msg.value - fee);\r\n          \r\n          // transfer fee to fundWallet\r\n          fundWallet.transfer(fee);\r\n      }\r\n      \r\n  }","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_x\",\"type\":\"bytes1\"},{\"name\":\"_y\",\"type\":\"bytes1\"},{\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"setMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfPixels\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_x\",\"type\":\"bytes1\"},{\"name\":\"_y\",\"type\":\"bytes1\"},{\"name\":\"_weiAmount\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getColors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint24[10000]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_x\",\"type\":\"bytes1\"},{\"name\":\"_y\",\"type\":\"bytes1\"},{\"name\":\"_red\",\"type\":\"bytes1\"},{\"name\":\"_green\",\"type\":\"bytes1\"},{\"name\":\"_blue\",\"type\":\"bytes1\"}],\"name\":\"setColor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"colors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint24\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_x\",\"type\":\"bytes1\"},{\"name\":\"_y\",\"type\":\"bytes1\"},{\"name\":\"_isSale\",\"type\":\"bool\"}],\"name\":\"setSaleState\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_at\",\"type\":\"uint16\"}],\"name\":\"getPixel\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Pixereum","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://ef0f09d2a84ed41410623e4d2db88bade3d3348d22f24e2d4d46607bd6bcb098"}]}