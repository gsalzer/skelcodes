{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n    function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract ExtFueldToken {\r\n    using SafeMath for uint256;\r\n// ownable\r\n    address public owner;\r\n    address public mainContract;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        require(newOwner != address(0));\r\n        OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n// self transfer\r\n    mapping(address => uint256) balances;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n// allowed transfer\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n    event Approval(address indexed owner_, address indexed spender, uint256 value);\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        uint256 _allowance = allowed[_from][msg.sender];\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        allowed[_from][msg.sender] = _allowance.sub(_value);\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    function increaseApproval (address _spender, uint _addedValue) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n    function decreaseApproval (address _spender, uint _subtractedValue) public returns (bool success) {\r\n        uint oldValue = allowed[msg.sender][_spender];\r\n        if (_subtractedValue > oldValue) { allowed[msg.sender][_spender] = 0; } \r\n        else {allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue); }\r\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n// mintable\r\n    uint256 public totalSupply = 13500000; // minting in constructor\r\n// sale\r\n    mapping (address => uint256) public privatePreICOdepositors;\r\n    mapping (address => uint256) public preICOdepositors;\r\n    mapping (address => uint256) public ICOdepositors;\r\n    mapping (address => uint256) public ICObalances;\r\n    mapping (address => uint256) public depositorCurrency;\r\n    \r\n    uint256 constant public maxPreICOSupply = 13500000; // including free bonus tokens\r\n    uint256 constant public maxPreICOandICOSupply = 13500000;\r\n    uint256 public startTimePrivatePreICO = 0;\r\n    uint256 public startTimePreICO = 0;\r\n    uint256 public startTimeICO = 0;\r\n    uint256 public soldTokenCount = 0;\r\n    uint256 public cap = 0;\r\n    uint256 public capPreICO = 0;\r\n    uint256 public capPreICOTrasferred = 0;\r\n    uint256 public capETH = 0;\r\n\r\n    // sale\r\n    event SaleStatus(string indexed status, uint256 indexed _date);\r\n\r\n    function startPrivatePreICO() onlyOwner public {\r\n        require(startTimeICO == 0 && startTimePreICO == 0);\r\n        startTimePreICO = now;\r\n        startTimePrivatePreICO = startTimePreICO;\r\n        SaleStatus('Private Pre ICO started', startTimePreICO);\r\n    }\r\n    \r\n    function startPreICO() onlyOwner public {\r\n        require(startTimeICO == 0 && startTimePreICO == 0);\r\n        startTimePreICO = now;\r\n        SaleStatus('Public Pre ICO started', startTimePreICO);\r\n    }\r\n\r\n    function startICO() onlyOwner public {\r\n        require(startTimeICO == 0 && startTimePreICO == 0);\r\n        startTimeICO = now;\r\n        SaleStatus('start ICO', startTimePreICO);\r\n    }\r\n\r\n    function stopSale() onlyOwner public {\r\n        require(startTimeICO > 0 || startTimePreICO > 0);\r\n        if (startTimeICO > 0){\r\n            SaleStatus('ICO stopped', now);\r\n        }\r\n        else{\r\n            capPreICO = 0;\r\n            SaleStatus('Pre ICO stopped', now);\r\n        }\r\n        startTimeICO = 0;\r\n        startTimePreICO = 0;\r\n        startTimePrivatePreICO = 0;\r\n    }\r\n\r\n    event ExtTokenPurchase(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 currencyCode, uint256 amount);\r\n    function buyTokens(address beneficiary_, uint256 fiatAmount_, uint256 currencyCode_, uint256 amountETH_, uint256 tokensAmount_) onlyOwner public { \r\n        require(startTimeICO > 0 || startTimePreICO > 0);\r\n        require(msg.sender != address(0));\r\n        \r\n        address depositor = beneficiary_;\r\n        uint256 deposit = fiatAmount_;\r\n        uint256 currencyCode = currencyCode_;\r\n        uint256 amountETH = amountETH_;\r\n        uint256 tokens = tokensAmount_;\r\n\r\n        balances[owner] = balances[owner].sub(tokens);\r\n        balances[depositor] = balances[depositor].add(tokens);\r\n        depositorCurrency[depositor] = currencyCode;\r\n        soldTokenCount = soldTokenCount.add(tokens);\r\n        capETH = capETH.add(amountETH);\r\n        if (startTimeICO > 0){\r\n            ICObalances[depositor] = ICObalances[depositor].add(tokens);\r\n        }\r\n\r\n        if (startTimeICO > 0){\r\n            ICOdepositors[depositor] = ICOdepositors[depositor].add(deposit);\r\n        }\r\n        else{\r\n            if(startTimePrivatePreICO > 0) {\r\n                privatePreICOdepositors[depositor] = privatePreICOdepositors[depositor].add(deposit);\r\n            }\r\n            else {\r\n                preICOdepositors[depositor] = preICOdepositors[depositor].add(deposit);\r\n            }\r\n        }\r\n        cap = cap.add(deposit);\r\n        if(startTimePreICO > 0) {\r\n            capPreICO = capPreICO.add(deposit);\r\n        }\r\n\r\n        FueldToken FueldTokenExt = FueldToken(mainContract);\r\n        FueldTokenExt.extBuyTokens(depositor, tokens, amountETH); \r\n        ExtTokenPurchase(owner, depositor, deposit, currencyCode, tokens);\r\n    }\r\n\r\n    event FixSale(uint256 fixTime);\r\n    bool public fixSaleCompleted = false;\r\n    function fixSale() onlyOwner public {\r\n        require(startTimeICO == 0 && startTimePreICO == 0);\r\n        uint256 currentTime = now;\r\n        soldTokenCount = 0;\r\n        fixSaleCompleted = true;\r\n        FixSale(currentTime);\r\n    }\r\n\r\n// burnable\r\n    event Burn(address indexed burner, uint indexed value);\r\n    function burn(uint _value) onlyOwner public {\r\n        require(fixSaleCompleted == true);\r\n        require(_value > 0);\r\n        address burner = msg.sender;\r\n        balances[burner] = balances[burner].sub(_value);\r\n        totalSupply = totalSupply.sub(_value);\r\n        fixSaleCompleted = false;\r\n        Burn(burner, _value);\r\n    }\r\n\r\n// constructor\r\n    string constant public name = \"EXTFUELD\";\r\n    string constant public symbol = \"EFL\";\r\n    uint32 constant public decimals = 18;\r\n\r\n    function setMainContractAddress(address mainContract_) onlyOwner public {\r\n        mainContract = mainContract_;\r\n    }\r\n\r\n    function ExtFueldToken() public {\r\n        owner = msg.sender;\r\n        balances[owner] = totalSupply;\r\n    }\r\n}\r\n\r\ncontract FueldToken{\r\n    function extBuyTokens(address beneficiary_, uint256 tokensAmount_, uint256 amountETH_) public { \r\n        require(beneficiary_ != address(0));\r\n        require(tokensAmount_ != 0);\r\n        require(amountETH_ != 0);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"fixSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPreICOandICOSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary_\",\"type\":\"address\"},{\"name\":\"fiatAmount_\",\"type\":\"uint256\"},{\"name\":\"currencyCode_\",\"type\":\"uint256\"},{\"name\":\"amountETH_\",\"type\":\"uint256\"},{\"name\":\"tokensAmount_\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startPrivatePreICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"privatePreICOdepositors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTimePrivatePreICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"soldTokenCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ICObalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositorCurrency\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPreICOSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTimePreICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ICOdepositors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"capETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startPreICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"capPreICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"capPreICOTrasferred\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mainContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTimeICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"mainContract_\",\"type\":\"address\"}],\"name\":\"setMainContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fixSaleCompleted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"preICOdepositors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner_\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"status\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"SaleStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"currencyCode\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExtTokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"fixTime\",\"type\":\"uint256\"}],\"name\":\"FixSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"ExtFueldToken","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0f445ba4fc3d8901b9bc24f1774a124c3b9211d870cf6f721741a83550a54b00"}]}