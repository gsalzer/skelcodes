{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\n\r\nlibrary SafeMath {\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract ERC20 {\r\n\r\n\tfunction totalSupply() public view returns (uint256);\r\n\tfunction balanceOf(address who) public view returns (uint256);\r\n\tfunction transfer(address to, uint256 value) public returns (bool);\r\n\tfunction allowance(address owner, address spender) public view returns (uint256);\r\n\tfunction transferFrom(address from, address to, uint256 value) public returns (bool);\r\n\tfunction approve(address spender, uint256 value) public returns (bool);\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n\r\ncontract TipestryToken is ERC20 {\r\n\t\r\n\tusing SafeMath for uint256;\r\n\t\r\n\taddress public owner;\t\r\n\r\n\tstring public constant name = \"tipestry\"; \r\n  \tstring public constant symbol = \"TIP\"; \r\n  \tuint8 public constant decimals = 18; \r\n\r\n  \tuint256 public constant INITIAL_SUPPLY = 1000000000 * (10 ** uint256(decimals));\r\n\r\n\tuint256 totalSupply_;\r\n\r\n\tmapping(address => uint256) balances;\r\n\tmapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n\tevent Burn(address indexed burner, uint256 value);\r\n\tevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\tmodifier onlyOwner() {\r\n    \trequire(msg.sender == owner);\r\n    \t_;\r\n  \t}\r\n\r\n\tfunction TipestryToken() public {\r\n        owner = msg.sender;\t\t\r\n\t\ttotalSupply_ = INITIAL_SUPPLY;\r\n    \tbalances[owner] = INITIAL_SUPPLY;\r\n    \tTransfer(0x0, owner, INITIAL_SUPPLY);\r\n\t}\r\n\r\n\r\n\tfunction totalSupply() public view returns (uint256) {\r\n    \treturn totalSupply_;\r\n  \t}\r\n\r\n  \tfunction transfer(address _to, uint256 _value) public returns (bool) {\r\n\t    require(_to != address(0));\r\n\t    require(_value <= balances[msg.sender]);\r\n\r\n\t    // SafeMath.sub will throw if there is not enough balance.\r\n\t    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t    balances[_to] = balances[_to].add(_value);\r\n\t    Transfer(msg.sender, _to, _value);\r\n\t    return true;\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) public view returns (uint256 balance) {\r\n\t    return balances[_owner];\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n\t    require(_to != address(0));\r\n\t    require(_value <= balances[_from]);\r\n\t    require(_value <= allowed[_from][msg.sender]);\r\n\r\n\t    balances[_from] = balances[_from].sub(_value);\r\n\t    balances[_to] = balances[_to].add(_value);\r\n\t    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n\t    Transfer(_from, _to, _value);\r\n\t    return true;\r\n\t }\r\n\r\n\t function approve(address _spender, uint256 _value) public returns (bool) {\r\n\t    allowed[msg.sender][_spender] = _value;\r\n\t    Approval(msg.sender, _spender, _value);\r\n\t    return true;\r\n\t }\r\n\r\n\tfunction allowance(address _owner, address _spender) public view returns (uint256) {\r\n    \treturn allowed[_owner][_spender];\r\n  \t}\r\n\r\n  \tfunction increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n\t    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n\t    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t    return true;\r\n\t}\r\n\r\n\tfunction decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n\t    uint oldValue = allowed[msg.sender][_spender];\r\n\t    if (_subtractedValue > oldValue) {\r\n\t      allowed[msg.sender][_spender] = 0;\r\n\t    } else {\r\n\t      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n\t    }\r\n\t    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t    return true;\r\n\t}\r\n\r\n\tfunction burn(uint256 _value) public {\r\n\t    require(_value <= balances[msg.sender]);\r\n\t    // no need to require value <= totalSupply, since that would imply the\r\n\t    // sender's balance is greater than the totalSupply, which *should* be an assertion failure\r\n\r\n\t    address burner = msg.sender;\r\n\t    balances[burner] = balances[burner].sub(_value);\r\n\t    totalSupply_ = totalSupply_.sub(_value);\r\n\t    Burn(burner, _value);\r\n\t}\r\n\r\n\r\n\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n\t\trequire(newOwner != address(0));\r\n\t\tOwnershipTransferred(owner, newOwner);\r\n\t\towner = newOwner;\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"TipestryToken","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://101f9823b51dd561d9082f3a1a4853baa45e69e8e840627e3c23d71e36c78511"}]}