{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n    xgr_fork.sol\r\n    2.0.0\r\n    \r\n    Rajci 'iFA' Andor @ ifa@fusionwallet.io\r\n*/\r\npragma solidity 0.4.18;\r\n\r\ncontract Owned {\r\n    /* Variables */\r\n    address public owner = msg.sender;\r\n    /* Externals */\r\n    function replaceOwner(address newOwner) external returns(bool success) {\r\n        require( isOwner() );\r\n        owner = newOwner;\r\n        return true;\r\n    }\r\n    /* Internals */\r\n    function isOwner() internal view returns(bool) {\r\n        return owner == msg.sender;\r\n    }\r\n    /* Modifiers */\r\n    modifier onlyForOwner {\r\n        require( isOwner() );\r\n        _;\r\n    }\r\n}\r\n\r\ncontract Token {\r\n    /*\r\n        This is just an abstract contract with the necessary functions\r\n    */\r\n    function mint(address owner, uint256 value) external returns (bool success) {}\r\n}\r\n\r\ncontract Fork is Owned {\r\n    /* Variables */\r\n    address public uploader;\r\n    address public tokenAddress;\r\n    /* Constructor */\r\n    function Fork(address _uploader) public {\r\n        uploader = _uploader;\r\n    }\r\n    /* Externals */\r\n    function changeTokenAddress(address newTokenAddress) external onlyForOwner {\r\n        tokenAddress = newTokenAddress;\r\n    }\r\n    function upload(address[] addr, uint256[] amount) external onlyForUploader {\r\n        require( addr.length == amount.length );\r\n        for ( uint256 a=0 ; a<addr.length ; a++ ) {\r\n            require( Token(tokenAddress).mint(addr[a], amount[a]) );\r\n        }\r\n    }\r\n    /* Modifiers */\r\n    modifier onlyForUploader {\r\n        require( msg.sender == uploader );\r\n        _;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"uploader\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address[]\"},{\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"upload\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"replaceOwner\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTokenAddress\",\"type\":\"address\"}],\"name\":\"changeTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_uploader\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Fork","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000040c5d322a028706195336999efd8feeed5a476d","Library":"","SwarmSource":"bzzr://76c0bdc32109784b2c7e8a69ed6ea3a95af7a1ac5bb7170109cdafa18f75edc7"}]}