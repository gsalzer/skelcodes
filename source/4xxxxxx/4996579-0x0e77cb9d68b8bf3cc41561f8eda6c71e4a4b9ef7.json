{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract GuessTheNumber {\r\n    address public owner = msg.sender;\r\n    bytes32 secretNumberHash = 0x04994f67dc55b09e814ab7ffc8df3686b4afb2bb53e60eae97ef043fe03fb829;\r\n\r\n    function withdraw() public {\r\n        require(msg.sender == owner);\r\n        owner.transfer(this.balance);\r\n    }\r\n\r\n    function guess(uint8 number) public payable {\r\n        // guessed number is correct, cost of attempt is paid and\r\n        // each next attempt should be more expensive than previous\r\n        if (keccak256(number) == secretNumberHash && msg.value >= 1 ether && msg.value >= this.balance) {\r\n            // send the jack pot\r\n            msg.sender.transfer(this.balance + msg.value);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"number\",\"type\":\"uint8\"}],\"name\":\"guess\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"GuessTheNumber","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bb0822542b0ad1a474d7ef95cecf52d7335c3cab97b54324bebb9afaed29cf7a"}]}