{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\n/* Functions from Kitten Coin main contract to be used by sale contract */\r\ncontract KittenCoin {\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {}\r\n    function allowance(address owner, address spender) public constant returns (uint256) {}\r\n}\r\n\r\ncontract KittenSale {\r\n    KittenCoin public _kittenContract;\r\n    address public _kittenOwner;\r\n    uint256 public totalContributions;\r\n    uint256 public kittensSold;\r\n    uint256 public kittensRemainingForSale;\r\n    \r\n    function KittenSale () {\r\n        address c = 0xac2BD14654BBf22F9d8f20c7b3a70e376d3436B4; // set Kitten Coin contract address\r\n        _kittenContract = KittenCoin(c); \r\n        _kittenOwner = msg.sender;\r\n        totalContributions = 0;\r\n        kittensSold = 0;\r\n        kittensRemainingForSale = 0; // set to 0 first as allowance to contract can't be set yet\r\n    }\r\n    \r\n    /* Every time ether is sent to the contract, Kitten Coin will be issued with following rules\r\n    ** Amount sent < 0.1 ETH - 1 KITTEN for 0.000001 ETH (for example, 0.05 ETH = 50 000 KITTEN)\r\n    ** 0.1 ETH <= amount sent < 1 ETH - +20% bonus 1.2 KITTEN for 0.000001 ETH (for example, 0.5 ETH = 600 000 KITTEN)\r\n    ** Amount sent >= 1 ETH - +50% bonus 1.5 KITTEN for 0.000001 ETH (for example, 1.5 ETH = 1 800 000 KITTEN)\r\n    **\r\n    ** If not enough KITTEN remaining to sale, transaction will be cancelled.\r\n    */ \r\n    function () payable {\r\n        require(msg.value > 0);\r\n        uint256 contribution = msg.value;\r\n        if (msg.value >= 100 finney) {\r\n            if (msg.value >= 1 ether) {\r\n                contribution /= 6666;\r\n            } else {\r\n                contribution /= 8333;\r\n            }\r\n        } else {\r\n            contribution /= 10000;\r\n        }\r\n        require(kittensRemainingForSale >= contribution);\r\n        totalContributions += msg.value;\r\n        kittensSold += contribution;\r\n        _kittenContract.transferFrom(_kittenOwner, msg.sender, contribution);\r\n        _kittenOwner.transfer(msg.value);\r\n        updateKittensRemainingForSale();\r\n    }\r\n    \r\n    function updateKittensRemainingForSale () {\r\n        kittensRemainingForSale = _kittenContract.allowance(_kittenOwner, this);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"kittensRemainingForSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalContributions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_kittenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_kittenOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateKittensRemainingForSale\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kittensSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"KittenSale","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b6b310ecca9fd33b339c2d2c8d101a9014b1a31653af197d0ba231e31b690f25"}]}