{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\ncontract ERC20 {\r\n  function balanceOf(address who) constant returns (uint);\r\n  function allowance(address owner, address spender) constant returns (uint);\r\n\r\n  function transfer(address to, uint value) returns (bool ok);\r\n  function transferFrom(address from, address to, uint value) returns (bool ok);\r\n  function approve(address spender, uint value) returns (bool ok);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n  event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n//Безопасные математические вычисления\r\ncontract SafeMath {\r\n  function safeMul(uint a, uint b) internal returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint a, uint b) internal returns (uint) {\r\n    assert(b > 0);\r\n    uint c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint a, uint b) internal returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint a, uint b) internal returns (uint) {\r\n    uint c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n}\r\n\r\ncontract StandardToken is ERC20, SafeMath {\r\n\r\n  /* Token supply got increased and a new owner received these tokens */\r\n  event Minted(address receiver, uint amount);\r\n\r\n  /* Actual balances of token holders */\r\n  mapping(address => uint) balances;\r\n\r\n  /* approve() allowances */\r\n  mapping (address => mapping (address => uint)) allowed;\r\n\r\n  /* Interface declaration */\r\n  function isToken() public constant returns (bool Yes) {\r\n    return true;\r\n  }\r\n\r\n  function transfer(address _to, uint _value) returns (bool success) {\r\n    balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n    balances[_to] = safeAdd(balances[_to], _value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint _value) returns (bool success) {\r\n    uint _allowance = allowed[_from][msg.sender];\r\n\r\n    balances[_to] = safeAdd(balances[_to], _value);\r\n    balances[_from] = safeSub(balances[_from], _value);\r\n    allowed[_from][msg.sender] = safeSub(_allowance, _value);\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function balanceOf(address _address) constant returns (uint balance) {\r\n    return balances[_address];\r\n  }\r\n\r\n  function approve(address _spender, uint _value) returns (bool success) {\r\n\r\n    // To change the approve amount you first have to reduce the addresses`\r\n    //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n    //  already 0 to mitigate the race condition described here:\r\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) constant returns (uint remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n}\r\n\r\ncontract DESToken is StandardToken {\r\n\r\n    string public name = \"Decentralized Escrow Service\";\r\n    string public symbol = \"DES\";\r\n    uint public decimals = 18;//Разрядность токена\r\n\tuint public HardCapEthereum = 66666000000000000000000 wei;//Максимальное количество собранного Ethereum - 66 666 ETH (задано в wei)\r\n    \r\n    //Массив с замороженными адресами, которым запрещено осуществять переводы токенов\r\n    mapping (address => bool) public noTransfer;\r\n\t\r\n\t// Время начала ICO и время окончания ICO\r\n\tuint constant public TimeStart = 1511956800;//Константа - время начала ICO - 29.11.2017 в 15:00 по Мск\r\n\tuint public TimeEnd = 1514375999;//Время окончания ICO - 27.12.2017 в 14:59:59 по мск\r\n\t\r\n\t// Время окончания бонусных этапов (недель)\r\n\tuint public TimeWeekOne = 1512561600;//1000 DES – начальная цена – 1-ая неделя\r\n\tuint public TimeWeekTwo = 1513166400;//800 DES – 2-ая неделя\r\n\tuint public TimeWeekThree = 1513771200;//666,666 DES – 3-ая неделя\r\n    \r\n\tuint public TimeTransferAllowed = 1516967999;//Переводы токенов разрешены через месяц (30 суток = 2592000 секунд) после ICO\r\n\t\r\n\t//Пулы ICO (различное время выхода на биржу: запрет некоторым пулам перечисления токенов до определенного времени)\r\n\tuint public PoolPreICO = 0;//Человек в ЛК указывает свой адрес эфириума, на котором хранятся DEST или DESP и ему на этот адрес приходят токены DES в таком же количестве + ещё 50%\r\n\tuint public PoolICO = 0;//Пул ICO - выход на биржу через 1 месяц\r\n\tuint public PoolTeam = 0;//Пул команды - выход на биржу через 1 месяц. 15%\r\n\tuint public PoolAdvisors = 0;//Пул эдвайзеров - выход на биржу через 1 месяц. 7%\r\n\tuint public PoolBounty = 0;//Пул баунти кампании - выход на биржу через 1 месяц. 3%\r\n\t    \r\n\t//Стоимость токенов на различных этапах\r\n\tuint public PriceWeekOne = 1000000000000000 wei;//Стоимость токена во время недели 1\r\n\tuint public PriceWeekTwo = 1250000000000000 wei;//Стоимость токена во время недели 2\r\n\tuint public PriceWeekThree = 1500000000000000 wei;//Стоимость токена во время недели 3\r\n\tuint public PriceWeekFour = 1750000000000000 wei;//Стоимость токена во время недели 4\r\n\tuint public PriceManual = 0 wei;//Стоимость токена, установленная вручную\r\n\t\r\n\t//Технические переменные состояния ICO\r\n    bool public ICOPaused = false; //Основатель может активировать данный параметр (true), чтобы приостановить ICO на неопределенный срок\r\n    bool public ICOFinished = false; //ICO было завершено\r\n\t\r\n    //Технические переменные для хранения данных статистики\r\n\tuint public StatsEthereumRaised = 0 wei;//Переменная сохранит в себе количество собранного Ethereum\r\n\tuint public StatsTotalSupply = 0;//Общее количество выпущенных токенов\r\n\r\n    //События\r\n    event Buy(address indexed sender, uint eth, uint fbt);//Покупка токенов\r\n    event TokensSent(address indexed to, uint value);//Токены отправлены на адрес\r\n    event ContributionReceived(address indexed to, uint value);//Вложение получено\r\n    event PriceChanged(string _text, uint _tokenPrice);//Стоимость токена установлена вручную\r\n    event TimeEndChanged(string _text, uint _timeEnd);//Время окончания ICO изменено вручную\r\n    event TimeTransferAllowanceChanged(string _text, uint _timeAllowance);//Время, до которого запрещены переводы токенов, изменено вручную\r\n//    event HardCapChanged(string _text, uint _HardCapEthereum);//Установка максимальной капитализации, после которой ICO считается завершенным\r\n    \r\n    address public owner = 0x0;//Административные действия 0xE7F7d6cBCdC1fE78F938Bfaca6eA49604cB58D33\r\n    address public wallet = 0x0;//Кошелек сбора средств 0x51559efc1acc15bcafc7e0c2fb440848c136a46b\r\n \r\nfunction DESToken(address _owner, address _wallet) payable {\r\n        \r\n      owner = _owner;\r\n      wallet = _wallet;\r\n    \r\n      balances[owner] = 0;\r\n      balances[wallet] = 0;\r\n    }\r\n    \r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n\t//Приостановлено ли ICO или запущено\r\n    modifier isActive() {\r\n        require(!ICOPaused);\r\n        _;\r\n    }\r\n\r\n    //Транзакция получена - запустить функцию покупки\r\n    function() payable {\r\n        buy();\r\n    }\r\n    \r\n    //Установка стоимости токена вручную. Если значение больше 0, токены продаются по установленной вручную цене\r\n    function setTokenPrice(uint _tokenPrice) external onlyOwner {\r\n        PriceManual = _tokenPrice;\r\n        PriceChanged(\"New price is \", _tokenPrice);\r\n    }\r\n    \r\n    //Установка времени окончания ICO\r\n    function setTimeEnd(uint _timeEnd) external onlyOwner {\r\n        TimeEnd = _timeEnd;\r\n        TimeEndChanged(\"New ICO End Time is \", _timeEnd);\r\n    }\r\n    \r\n    //Установка максимальной капитализации, после которой ICO считается завершенным\r\n//    function setHardCap(uint _HardCapEthereum) external onlyOwner {\r\n//        HardCapEthereum = _HardCapEthereum;\r\n//        HardCapChanged(\"New ICO Hard Cap is \", _HardCapEthereum);\r\n//    }\r\n     \r\n    //Установка времени, до которого запрещены переводы токенов\r\n    function setTimeTransferAllowance(uint _timeAllowance) external onlyOwner {\r\n        TimeTransferAllowed = _timeAllowance;\r\n        TimeTransferAllowanceChanged(\"Token transfers will be allowed at \", _timeAllowance);\r\n    }\r\n    \r\n    // Запретить определенному покупателю осуществлять переводы его токенов\r\n    // @параметр target Адрес покупателя, на который установить запрет\r\n    // @параметр allow Установить запрет (true) или запрет снят (false)\r\n    function disallowTransfer(address target, bool disallow) external onlyOwner {\r\n        noTransfer[target] = disallow;\r\n    }\r\n    \r\n    //Завершить ICO и создать пулы токенов (команда, баунти, эдвайзеры)\r\n    function finishCrowdsale() external onlyOwner returns (bool) {\r\n        if (ICOFinished == false) {\r\n            \r\n            PoolTeam = StatsTotalSupply*15/100;//Пул команды - выход на биржу через 1 месяц. 15%\r\n            PoolAdvisors = StatsTotalSupply*7/100;//Пул эдвайзеров - выход на биржу через 1 месяц. 7%\r\n            PoolBounty = StatsTotalSupply*3/100;//Пул баунти кампании - выход на биржу через 1 месяц. 3%\r\n            \r\n            uint poolTokens = 0;\r\n            poolTokens = safeAdd(poolTokens,PoolTeam);\r\n            poolTokens = safeAdd(poolTokens,PoolAdvisors);\r\n            poolTokens = safeAdd(poolTokens,PoolBounty);\r\n            \r\n            //Зачислить на счет основателя токены пула команды, эдвайзеров и баунти\r\n            require(poolTokens>0);//Количество токенов должно быть больше 0\r\n            balances[owner] = safeAdd(balances[owner], poolTokens);\r\n            StatsTotalSupply = safeAdd(StatsTotalSupply, poolTokens);//Обновляем общее количество выпущенных токенов\r\n            Transfer(0, this, poolTokens);\r\n            Transfer(this, owner, poolTokens);\r\n                        \r\n            ICOFinished = true;//ICO завершено\r\n            \r\n            }\r\n        }\r\n\r\n    //Функция возвращает текущую стоимость в wei 1 токена\r\n    function price() constant returns (uint) {\r\n        if(PriceManual > 0){return PriceManual;}\r\n        if(now >= TimeStart && now < TimeWeekOne){return PriceWeekOne;}\r\n        if(now >= TimeWeekOne && now < TimeWeekTwo){return PriceWeekTwo;}\r\n        if(now >= TimeWeekTwo && now < TimeWeekThree){return PriceWeekThree;}\r\n        if(now >= TimeWeekThree){return PriceWeekFour;}\r\n    }\r\n    \r\n    // Создать `amount` токенов и отправить их `target`\r\n    // @параметр target Адрес получателя токенов\r\n    // @параметр amount Количество создаваемых токенов\r\n    function sendPreICOTokens(address target, uint amount) onlyOwner external {\r\n        \r\n        require(amount>0);//Количество токенов должно быть больше 0\r\n        balances[target] = safeAdd(balances[target], amount);\r\n        StatsTotalSupply = safeAdd(StatsTotalSupply, amount);//Обновляем общее количество выпущенных токенов\r\n        Transfer(0, this, amount);\r\n        Transfer(this, target, amount);\r\n        \r\n        PoolPreICO = safeAdd(PoolPreICO,amount);//Обновляем общее количество токенов в пуле Pre-ICO\r\n    }\r\n    \r\n    // Создать `amount` токенов и отправить их `target`\r\n    // @параметр target Адрес получателя токенов\r\n    // @параметр amount Количество создаваемых токенов\r\n    function sendICOTokens(address target, uint amount) onlyOwner external {\r\n        \r\n        require(amount>0);//Количество токенов должно быть больше 0\r\n        balances[target] = safeAdd(balances[target], amount);\r\n        StatsTotalSupply = safeAdd(StatsTotalSupply, amount);//Обновляем общее количество выпущенных токенов\r\n        Transfer(0, this, amount);\r\n        Transfer(this, target, amount);\r\n        \r\n        PoolICO = safeAdd(PoolICO,amount);//Обновляем общее количество токенов в пуле Pre-ICO\r\n    }\r\n    \r\n    // Перечислить `amount` командных токенов на адрес `target` со счета основателя (администратора) после завершения ICO\r\n    // @параметр target Адрес получателя токенов\r\n    // @параметр amount Количество перечисляемых токенов\r\n    function sendTeamTokens(address target, uint amount) onlyOwner external {\r\n        \r\n        require(ICOFinished);//Возможно только после завершения ICO\r\n        require(amount>0);//Количество токенов должно быть больше 0\r\n        require(amount>=PoolTeam);//Количество токенов должно быть больше или равно размеру пула команды\r\n        require(balances[owner]>=PoolTeam);//Количество токенов должно быть больше или равно балансу основателя\r\n        \r\n        balances[owner] = safeSub(balances[owner], amount);//Вычитаем токены у администратора (основателя)\r\n        balances[target] = safeAdd(balances[target], amount);//Добавляем токены на счет получателя\r\n        PoolTeam = safeSub(PoolTeam, amount);//Обновляем общее количество токенов пула команды\r\n        TokensSent(target, amount);//Публикуем событие в блокчейн\r\n        Transfer(owner, target, amount);//Осуществляем перевод\r\n        \r\n        noTransfer[target] = true;//Вносим получателя в базу аккаунтов, которым 1 месяц после ICO запрещено осуществлять переводы токенов\r\n    }\r\n    \r\n    // Перечислить `amount` токенов эдвайзеров на адрес `target` со счета основателя (администратора) после завершения ICO\r\n    // @параметр target Адрес получателя токенов\r\n    // @параметр amount Количество перечисляемых токенов\r\n    function sendAdvisorsTokens(address target, uint amount) onlyOwner external {\r\n        \r\n        require(ICOFinished);//Возможно только после завершения ICO\r\n        require(amount>0);//Количество токенов должно быть больше 0\r\n        require(amount>=PoolAdvisors);//Количество токенов должно быть больше или равно размеру пула эдвайзеров\r\n        require(balances[owner]>=PoolAdvisors);//Количество токенов должно быть больше или равно балансу основателя\r\n        \r\n        balances[owner] = safeSub(balances[owner], amount);//Вычитаем токены у администратора (основателя)\r\n        balances[target] = safeAdd(balances[target], amount);//Добавляем токены на счет получателя\r\n        PoolAdvisors = safeSub(PoolAdvisors, amount);//Обновляем общее количество токенов пула эдвайзеров\r\n        TokensSent(target, amount);//Публикуем событие в блокчейн\r\n        Transfer(owner, target, amount);//Осуществляем перевод\r\n        \r\n        noTransfer[target] = true;//Вносим получателя в базу аккаунтов, которым 1 месяц после ICO запрещено осуществлять переводы токенов\r\n    }\r\n    \r\n    // Перечислить `amount` баунти токенов на адрес `target` со счета основателя (администратора) после завершения ICO\r\n    // @параметр target Адрес получателя токенов\r\n    // @параметр amount Количество перечисляемых токенов\r\n    function sendBountyTokens(address target, uint amount) onlyOwner external {\r\n        \r\n        require(ICOFinished);//Возможно только после завершения ICO\r\n        require(amount>0);//Количество токенов должно быть больше 0\r\n        require(amount>=PoolBounty);//Количество токенов должно быть больше или равно размеру пула баунти\r\n        require(balances[owner]>=PoolBounty);//Количество токенов должно быть больше или равно балансу основателя\r\n        \r\n        balances[owner] = safeSub(balances[owner], amount);//Вычитаем токены у администратора (основателя)\r\n        balances[target] = safeAdd(balances[target], amount);//Добавляем токены на счет получателя\r\n        PoolBounty = safeSub(PoolBounty, amount);//Обновляем общее количество токенов пула баунти\r\n        TokensSent(target, amount);//Публикуем событие в блокчейн\r\n        Transfer(owner, target, amount);//Осуществляем перевод\r\n        \r\n        noTransfer[target] = true;//Вносим получателя в базу аккаунтов, которым 1 месяц после ICO запрещено осуществлять переводы токенов\r\n    }\r\n\r\n    //Функция покупки токенов на ICO\r\n    function buy() public payable returns(bool) {\r\n\r\n        require(msg.sender != owner);//Основатели не могут покупать токены\r\n        require(msg.sender != wallet);//Основатели не могут покупать токены\r\n        require(!ICOPaused);//Покупка разрешена, если ICO не приостановлено\r\n        require(!ICOFinished);//Покупка разрешена, если ICO не завершено\r\n        require(msg.value >= price());//Полученная сумма в wei должна быть больше стоимости 1 токена\r\n        require(now >= TimeStart);//Условие продажи - ICO началось\r\n        require(now <= TimeEnd);//Условие продажи - ICO не завершено\r\n        uint tokens = msg.value/price();//Количество токенов, которое должен получить покупатель\r\n        require(safeAdd(StatsEthereumRaised, msg.value) <= HardCapEthereum);//Собранный эфир не больше hard cap\r\n        \r\n        require(tokens>0);//Количество токенов должно быть больше 0\r\n        \r\n        wallet.transfer(msg.value);//Отправить полученные ETH на кошелек сбора средств\r\n        \r\n        //Зачисление токенов на счет покупателя\r\n        balances[msg.sender] = safeAdd(balances[msg.sender], tokens);\r\n        StatsTotalSupply = safeAdd(StatsTotalSupply, tokens);//Обновляем общее количество выпущенных токенов\r\n        Transfer(0, this, tokens);\r\n        Transfer(this, msg.sender, tokens);\r\n        \r\n        StatsEthereumRaised = safeAdd(StatsEthereumRaised, msg.value);//Обновляем цифру собранных ETH\r\n        PoolICO = safeAdd(PoolICO, tokens);//Обновляем размер пула ICO\r\n        \r\n        //Записываем события в блокчейн\r\n        Buy(msg.sender, msg.value, tokens);\r\n        TokensSent(msg.sender, tokens);\r\n        ContributionReceived(msg.sender, msg.value);\r\n\r\n        return true;\r\n    }\r\n    \r\n    function EventEmergencyStop() onlyOwner() {ICOPaused = true;}//Остановить ICO (в случае непредвиденных обстоятельств)\r\n    function EventEmergencyContinue() onlyOwner() {ICOPaused = false;}//Продолжить ICO\r\n\r\n    //Если переводы токенов для всех участников еще не разрешены (1 месяц после ICO), проверяем, участник ли это Pre-ICO. Если нет, запрещаем перевод\r\n    function transfer(address _to, uint _value) isActive() returns (bool success) {\r\n        \r\n    if(now >= TimeTransferAllowed){\r\n        if(noTransfer[msg.sender]){noTransfer[msg.sender] = false;}//Если переводы разрешены по времени, разрешаем их отправителю\r\n    }\r\n        \r\n    if(now < TimeTransferAllowed){require(!noTransfer[msg.sender]);}//Если переводы еще не разрешены по времени, переводить могут только участники Pre-ICO\r\n        \r\n    return super.transfer(_to, _value);\r\n    }\r\n    /**\r\n     * ERC 20 Standard Token interface transfer function\r\n     *\r\n     * Prevent transfers until halt period is over.\r\n     */\r\n    function transferFrom(address _from, address _to, uint _value) isActive() returns (bool success) {\r\n        \r\n    if(now >= TimeTransferAllowed){\r\n        if(noTransfer[msg.sender]){noTransfer[msg.sender] = false;}//Если переводы разрешены по времени, разрешаем их отправителю\r\n    }\r\n        \r\n    if(now < TimeTransferAllowed){require(!noTransfer[msg.sender]);}//Если переводы еще не разрешены по времени, переводить могут только участники Pre-ICO\r\n        \r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n    //Сменить владельца\r\n    function changeOwner(address _to) onlyOwner() {\r\n        balances[_to] = balances[owner];\r\n        balances[owner] = 0;\r\n        owner = _to;\r\n    }\r\n\r\n    //Сменить адрес кошелька для сбора средств\r\n    function changeWallet(address _to) onlyOwner() {\r\n        balances[_to] = balances[wallet];\r\n        balances[wallet] = 0;\r\n        wallet = _to;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendTeamTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PoolICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TimeWeekTwo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_timeEnd\",\"type\":\"uint256\"}],\"name\":\"setTimeEnd\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TimeStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PriceWeekOne\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendICOTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"StatsEthereumRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PoolAdvisors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"EventEmergencyStop\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PriceManual\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TimeEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"disallow\",\"type\":\"bool\"}],\"name\":\"disallowTransfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"noTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_timeAllowance\",\"type\":\"uint256\"}],\"name\":\"setTimeTransferAllowance\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"name\":\"setTokenPrice\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PriceWeekThree\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HardCapEthereum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TimeTransferAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PriceWeekTwo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"StatsTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"changeWallet\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendAdvisorsTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TimeWeekThree\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendPreICOTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishCrowdsale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PoolTeam\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"EventEmergencyContinue\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PoolPreICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PoolBounty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TimeWeekOne\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PriceWeekFour\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isToken\",\"outputs\":[{\"name\":\"Yes\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendBountyTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_wallet\",\"type\":\"address\"}],\"payable\":true,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fbt\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokensSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ContributionReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_text\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"name\":\"PriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_text\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_timeEnd\",\"type\":\"uint256\"}],\"name\":\"TimeEndChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_text\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_timeAllowance\",\"type\":\"uint256\"}],\"name\":\"TimeTransferAllowanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"DESToken","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000e7f7d6cbcdc1fe78f938bfaca6ea49604cb58d3300000000000000000000000051559efc1acc15bcafc7e0c2fb440848c136a46b","Library":"","SwarmSource":"bzzr://71725de7300a3b7a06909530ea33221cda741dc36431926dfc4a0720d6a49229"}]}