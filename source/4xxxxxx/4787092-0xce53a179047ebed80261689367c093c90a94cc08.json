{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract SafeMath {\r\n    function safeMul(uint a, uint b) pure internal returns (uint) {\r\n        uint c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function safeSub(uint a, uint b) pure internal returns (uint) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function safeAdd(uint a, uint b) pure internal returns (uint) {\r\n        uint c = a + b;\r\n        assert(c >= a && c >= b);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract EDT is SafeMath {\r\n\r\n    string public name = \"EDT\";        //  token name\r\n    string public symbol = \"EDT\";      //  token symbol\r\n    uint public decimals = 8;           //  token digit\r\n\r\n    mapping (address => uint) public balanceOf;\r\n    mapping (address => mapping (address => uint)) public allowance;\r\n\r\n    uint public totalSupply = 0;\r\n\r\n    // 管理账号地址\r\n    address public owner = 0x0;\r\n\r\n    // 团队地址\r\n    address private addressTeam = 0xE5fB6dce07BCa4ffc4B79A529a8Ce43A31383BA9;\r\n\r\n    // 锁定信息\r\n    mapping (address => uint) public lockInfo;\r\n\r\n    // 是否停止销售\r\n    bool public saleStopped = false;\r\n\r\n    uint constant valueTotal = 15 * 10000 * 10000 * 10 ** 8;  //总量 15亿\r\n    uint constant valueSale = valueTotal / 100 * 50;  // ICO 50%\r\n    uint constant valueVip = valueTotal / 100 * 40;   // 私募 40%\r\n    uint constant valueTeam = valueTotal / 100 * 10;   // 团队 10%\r\n\r\n    uint private totalVip = 0;\r\n\r\n    // 阶段\r\n    uint private constant BEFORE_SALE = 0;\r\n    uint private constant IN_SALE = 1;\r\n    uint private constant FINISHED = 2;\r\n\r\n    // ICO最小以太值\r\n    uint public minEth = 0.1 ether;\r\n\r\n    // ICO最大以太值\r\n    uint public maxEth = 1000 ether;\r\n\r\n    // 开始时间 2018-01-01 00:00:00\r\n    uint public openTime = 1514736000;\r\n    // 结束时间 2018-01-15 00:00:00\r\n    uint public closeTime = 1515945600;\r\n    // 价格\r\n    uint public price = 8500;\r\n\r\n    // 私募和ICO解锁时间 2018-01-15 00:00:00\r\n    uint public unlockTime = 1515945600;\r\n\r\n    // 团队解锁时间 2019-01-10 00:00:00\r\n    uint public unlockTeamTime = 1547049600;\r\n\r\n    // 已卖出代币数量\r\n    uint public saleQuantity = 0;\r\n\r\n    // 收入的ETH数量\r\n    uint public ethQuantity = 0;\r\n\r\n    // 提现的代币数量\r\n    uint public withdrawQuantity = 0;\r\n\r\n\r\n    modifier isOwner {\r\n        assert(owner == msg.sender);\r\n        _;\r\n    }\r\n\r\n    modifier validAddress(address _address) {\r\n        assert(0x0 != _address);\r\n        _;\r\n    }\r\n\r\n    modifier validEth {\r\n        assert(msg.value >= minEth && msg.value <= maxEth);\r\n        _;\r\n    }\r\n\r\n    modifier validPeriod {\r\n        assert(now >= openTime && now < closeTime);\r\n        _;\r\n    }\r\n\r\n    modifier validQuantity {\r\n        assert(valueSale >= saleQuantity);\r\n        _;\r\n    }\r\n\r\n\r\n    function EDT()\r\n        public\r\n    {\r\n        owner = msg.sender;\r\n        totalSupply = valueTotal;\r\n\r\n        // ICO\r\n        balanceOf[this] = valueSale;\r\n        Transfer(0x0, this, valueSale);\r\n\r\n        // 团队\r\n        balanceOf[addressTeam] = valueTeam;\r\n        Transfer(0x0, addressTeam, valueTeam);\r\n    }\r\n\r\n    function transfer(address _to, uint _value)\r\n        public\r\n        validAddress(_to)\r\n        returns (bool success)\r\n    {\r\n        require(balanceOf[msg.sender] >= _value);\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        require(validTransfer(msg.sender, _value));\r\n        balanceOf[msg.sender] -= _value;\r\n        balanceOf[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferInner(address _to, uint _value)\r\n        private\r\n        returns (bool success)\r\n    {\r\n        balanceOf[this] -= _value;\r\n        balanceOf[_to] += _value;\r\n        Transfer(this, _to, _value);\r\n        return true;\r\n    }\r\n\r\n\r\n    function transferFrom(address _from, address _to, uint _value)\r\n        public\r\n        validAddress(_from)\r\n        validAddress(_to)\r\n        returns (bool success)\r\n    {\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        require(allowance[_from][msg.sender] >= _value);\r\n        require(validTransfer(_from, _value));\r\n        balanceOf[_to] += _value;\r\n        balanceOf[_from] -= _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint _value)\r\n        public\r\n        validAddress(_spender)\r\n        returns (bool success)\r\n    {\r\n        require(_value == 0 || allowance[msg.sender][_spender] == 0);\r\n        allowance[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function lock(address _to, uint _value)\r\n        private\r\n        validAddress(_to)\r\n    {\r\n        require(_value > 0);\r\n        require(lockInfo[_to] + _value <= balanceOf[_to]);\r\n        lockInfo[_to] += _value;\r\n    }\r\n\r\n    function validTransfer(address _from, uint _value)\r\n        private\r\n        constant\r\n        returns (bool)\r\n    {\r\n        if (_value == 0)\r\n            return false;\r\n\r\n        if (_from == addressTeam) {\r\n            return now >= unlockTeamTime;\r\n        }\r\n\r\n        if (now >= unlockTime)\r\n            return true;\r\n\r\n        return lockInfo[_from] + _value <= balanceOf[_from];\r\n    }\r\n\r\n\r\n    function ()\r\n        public\r\n        payable\r\n    {\r\n        buy();\r\n    }\r\n\r\n    function buy()\r\n        public\r\n        payable\r\n        validEth        // 以太是否在允许范围\r\n        validPeriod     // 是否在ICO期间\r\n        validQuantity   // 代币是否已卖完\r\n    {\r\n        uint eth = msg.value;\r\n\r\n        // 计算代币数量\r\n        uint quantity = eth * price / 10 ** 10;\r\n\r\n        // 是否超出剩余代币\r\n        uint leftQuantity = safeSub(valueSale, saleQuantity);\r\n        if (quantity > leftQuantity) {\r\n            quantity = leftQuantity;\r\n        }\r\n\r\n        saleQuantity = safeAdd(saleQuantity, quantity);\r\n        ethQuantity = safeAdd(ethQuantity, eth);\r\n\r\n        // 发送代币\r\n        require(transferInner(msg.sender, quantity));\r\n\r\n        // 锁定\r\n        lock(msg.sender, quantity);\r\n\r\n        // 生成日志\r\n        Buy(msg.sender, eth, quantity);\r\n\r\n    }\r\n\r\n    function stopSale()\r\n        public\r\n        isOwner\r\n        returns (bool)\r\n    {\r\n        assert(!saleStopped);\r\n        saleStopped = true;\r\n        StopSale();\r\n        return true;\r\n    }\r\n\r\n    function getPeriod()\r\n        public\r\n        constant\r\n        returns (uint)\r\n    {\r\n        if (saleStopped) {\r\n            return FINISHED;\r\n        }\r\n\r\n        if (now < openTime) {\r\n            return BEFORE_SALE;\r\n        }\r\n\r\n        if (valueSale == saleQuantity) {\r\n            return FINISHED;\r\n        }\r\n\r\n        if (now >= openTime && now < closeTime) {\r\n            return IN_SALE;\r\n        }\r\n\r\n        return FINISHED;\r\n    }\r\n\r\n\r\n    function withdraw(uint amount)\r\n        public\r\n        isOwner\r\n    {\r\n        uint period = getPeriod();\r\n        require(period == FINISHED);\r\n\r\n        require(this.balance >= amount);\r\n        msg.sender.transfer(amount);\r\n    }\r\n\r\n    function withdrawToken(uint amount)\r\n        public\r\n        isOwner\r\n    {\r\n        uint period = getPeriod();\r\n        require(period == FINISHED);\r\n\r\n        withdrawQuantity += safeAdd(withdrawQuantity, amount);\r\n        require(transferInner(msg.sender, amount));\r\n    }\r\n\r\n    function setVipInfo(address _vip, uint _value)\r\n        public\r\n        isOwner\r\n        validAddress(_vip)\r\n    {\r\n        require(_value > 0);\r\n        require(_value + totalVip <= valueVip);\r\n\r\n        balanceOf[_vip] += _value;\r\n        Transfer(0x0, _vip, _value);\r\n        lock(_vip, _value);\r\n    }\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n\r\n    event Buy(address indexed sender, uint eth, uint token);\r\n    event StopSale();\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleStopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closeTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethQuantity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockTeamTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_vip\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setVipInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawQuantity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleQuantity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopSale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"StopSale\",\"type\":\"event\"}]","ContractName":"EDT","CompilerVersion":"v0.4.20-nightly.2017.12.20+commit.efc198d5","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e0d9cce172ba3ad8e449737ae852042d09f4e62f7f480d5f0b36d9cbc7263c78"}]}