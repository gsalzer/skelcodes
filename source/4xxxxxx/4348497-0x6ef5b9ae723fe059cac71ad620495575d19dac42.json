{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.7;\r\n\r\n\r\n/**\r\n * Math operations with safety checks\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal returns (uint256) {\r\n    uint256 c = a * b;\r\n    //assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal returns (uint256) {\r\n    //assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal returns (uint256) {\r\n    uint256 c = a + b;\r\n    //assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n}\r\n\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply=100000000; \r\n  function balanceOf(address who) constant returns (uint256);\r\n  function transfer(address to, uint256 value);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) constant returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value);\r\n  function approve(address spender, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint256;\r\n\r\n  mapping(address => uint256) balances;\r\n\r\n  /**\r\n  * @dev transfer token for a specified address\r\n  * @param _to The address to transfer to.\r\n  * @param _value The amount to be transferred.\r\n  */\r\n  function transfer(address _to, uint256 _value) {\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    Transfer(msg.sender, _to, _value);\r\n  }\r\n\r\n  /**\r\n  * @dev Gets the balance of the specified address.\r\n  * @param _owner The address to query the the balance of. \r\n  * @return An uint256 representing the amount owned by the passed address.\r\n  */\r\n  function balanceOf(address _owner) constant returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n}\r\n\r\ncontract StandardToken is ERC20, BasicToken {\r\n\r\n  mapping (address => mapping (address => uint256)) allowed;\r\n\r\n\r\n  /**\r\n   * @dev Transfer tokens from one address to another\r\n   * @param _from address The address which you want to send tokens from\r\n   * @param _to address The address which you want to transfer to\r\n   * @param _value uint256 the amout of tokens to be transfered\r\n   */\r\n  function transferFrom(address _from, address _to, uint256 _value) {\r\n    var _allowance = allowed[_from][msg.sender];\r\n\r\n    // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\r\n    // if (_value > _allowance) throw;\r\n\r\n    balances[_to] = balances[_to].add(_value);\r\n    balances[_from] = balances[_from].sub(_value);\r\n    allowed[_from][msg.sender] = _allowance.sub(_value);\r\n    Transfer(_from, _to, _value);\r\n  }\r\n\r\n  /**\r\n   * @dev Aprove the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n   * @param _spender The address which will spend the funds.\r\n   * @param _value The amount of tokens to be spent.\r\n   */\r\n  function approve(address _spender, uint256 _value) {\r\n\r\n    // To change the approve amount you first have to reduce the addresses`\r\n    //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n    //  already 0 to mitigate the race condition described here:\r\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;\r\n\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n  }\r\n\r\n  /**\r\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\r\n   * @param _owner address The address which owns the funds.\r\n   * @param _spender address The address which will spend the funds.\r\n   * @return A uint256 specifing the amount of tokens still avaible for the spender.\r\n   */\r\n  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n}\r\n\r\ncontract owned {\r\n     function owned() { owner = msg.sender; }\r\n     address owner;\r\n\r\n     // This contract only defines a modifier but does not use\r\n     // it - it will be used in derived contracts.\r\n     // The function body is inserted where the special symbol\r\n     // \"_;\" in the definition of a modifier appears.\r\n     // This means that if the owner calls this function, the\r\n     // function is executed and otherwise, an exception is\r\n     // thrown.\r\n     modifier onlyOwner {\r\n         if(msg.sender != owner)\r\n         {\r\n         throw;\r\n         }\r\n         _;\r\n     }\r\n }\r\n\r\n\r\ncontract UniContract is StandardToken, owned {\r\n\r\n\r\n   string public constant name = \"SaveUNICOINs\";\r\n   string public constant symbol = \"UCN\";\r\n   uint256 public constant decimals = 0;\r\n   \r\n   //founder & fund collector\r\n   address public multisig;\r\n   address public founder; \r\n   \r\n   \r\n   //Timings\r\n   uint public start;  \r\n   uint public end;\r\n   uint public launch;\r\n   \r\n   //Dynamic Pricing PRICE IN UCN\r\n   uint256 public PRICE = 300000;  \r\n   \r\n   //Dynamic Status of sold UCN Tokens\r\n   uint256 public OVERALLSOLD = 0;  \r\n   \r\n   //Maximum of Tokens to be sold 85.000.000\r\n   uint256 public MAXTOKENSOLD = 85000000;  \r\n   \r\n   \r\n   \r\n   \r\n  \r\n   function UniContract() onlyOwner { \r\n       founder = 0x204244062B04089b6Ef55981Ad82119cEBf54F88; \r\n       multisig= 0x9FA2d2231FE8ac207831B376aa4aE35671619960; \r\n       start = 1507543200;\r\n       end = 1509098400; \r\n \t   launch = 1509534000;\r\n       balances[founder] = balances[founder].add(15000000); // Founder (15% = 15.000.000 UCN)\r\n   }\r\n   \r\n   \r\n   \r\n   //Stage Pre-Sale Variables\r\n   \r\n   uint256 public constant PRICE_PRESALE = 300000;  \r\n   uint256 public constant FACTOR_PRESALE = 38;\r\n   uint256 public constant RANGESTART_PRESALE = 0; \r\n   uint256 public constant RANGEEND_PRESALE = 10000000; \r\n   \r\n   \r\n   //Stage 1\r\n   uint256 public constant PRICE_1 = 30000;  \r\n   uint256 public constant FACTOR_1 = 460;\r\n   uint256 public constant RANGESTART_1 = 10000001; \r\n   uint256 public constant RANGEEND_1 = 10100000;\r\n   \r\n   //Stage 2\r\n   uint256 public constant PRICE_2 = 29783;  \r\n   uint256 public constant FACTOR_2 = 495;\r\n   uint256 public constant RANGESTART_2 = 10100001; \r\n   uint256 public constant RANGEEND_2 = 11000000;\r\n   \r\n   //Stage 3\r\n   uint256 public constant PRICE_3 = 27964;  \r\n   uint256 public constant FACTOR_3 = 580;\r\n   uint256 public constant RANGESTART_3 = 11000001; \r\n   uint256 public constant RANGEEND_3 = 15000000;\r\n   \r\n   //Stage 4\r\n   uint256 public constant PRICE_4 = 21068;  \r\n   uint256 public constant FACTOR_4 = 800;\r\n   uint256 public constant RANGESTART_4 = 15000001; \r\n   uint256 public constant RANGEEND_4 = 20000000;\r\n   \r\n   //Stage 5\r\n   uint256 public constant PRICE_5 = 14818;  \r\n   uint256 public constant FACTOR_5 = 1332;\r\n   uint256 public constant RANGESTART_5 = 20000001; \r\n   uint256 public constant RANGEEND_5 = 30000000;\r\n   \r\n   //Stage 6\r\n   uint256 public constant PRICE_6 = 7310;  \r\n   uint256 public constant FACTOR_6 = 2700;\r\n   uint256 public constant RANGESTART_6 = 30000001; \r\n   uint256 public constant RANGEEND_6 = 40000000;\r\n   \r\n   //Stage 7\r\n   uint256 public constant PRICE_7 = 3607;  \r\n   uint256 public constant FACTOR_7 = 5450;\r\n   uint256 public constant RANGESTART_7 = 40000001; \r\n   uint256 public constant RANGEEND_7 = 50000000;\r\n   \r\n   //Stage 8\r\n   uint256 public constant PRICE_8 = 1772;  \r\n   uint256 public constant FACTOR_8 = 11000;\r\n   uint256 public constant RANGESTART_8 = 50000001; \r\n   uint256 public constant RANGEEND_8 = 60000000;\r\n   \r\n   //Stage 9\r\n   uint256 public constant PRICE_9 = 863;  \r\n   uint256 public constant FACTOR_9 = 23200;\r\n   uint256 public constant RANGESTART_9 = 60000001; \r\n   uint256 public constant RANGEEND_9 = 70000000;\r\n   \r\n   //Stage 10\r\n   uint256 public constant PRICE_10 = 432;  \r\n   uint256 public constant FACTOR_10 = 46000;\r\n   uint256 public constant RANGESTART_10 = 70000001; \r\n   uint256 public constant RANGEEND_10 = 80000000;\r\n   \r\n   //Stage 11\r\n   uint256 public constant PRICE_11 = 214;  \r\n   uint256 public constant FACTOR_11 = 78000;\r\n   uint256 public constant RANGESTART_11 = 80000001; \r\n   uint256 public constant RANGEEND_11 = 85000000;\r\n   \r\n\r\n   uint256 public UniCoinSize=0;\r\n\r\n \r\n   function () payable {\r\n     submitTokens(msg.sender);\r\n   }\r\n\r\n   /**\r\n    * @dev Creates tokens and send to the specified address.\r\n    * @param recipient The address which will recieve the new tokens.\r\n    */\r\n   function submitTokens(address recipient) payable {\r\n     \tif (msg.value == 0) {\r\n       \t\tthrow;\r\n     \t}\r\n\t\t\r\n   \t \t//Permit buying only between 10/09/17 - 10/27/2017 and after 11/01/2017\r\n   \t \tif((now > start && now < end) || now > launch)\r\n   \t \t\t{\t\t\t\t\r\n        \t\tuint256 tokens = msg.value.mul(PRICE).div( 1 ether);\r\n        \t\tif(tokens.add(OVERALLSOLD) > MAXTOKENSOLD)\r\n   \t \t\t\t\t{\r\n   \t\t\t\t\tthrow;\r\n   \t\t\t\t\t}\r\n\t\t\r\n   \t\t\t\t//Pre-Sale CAP 10,000,000 check\r\n   \t\t\t\tif(((tokens.add(OVERALLSOLD)) > RANGEEND_PRESALE) && (now > start && now < end))\r\n   \t\t\t\t\t{\r\n   \t\t\t\t\tthrow;\r\n   \t\t\t\t\t}\r\n\t\t\r\n \t\t\t\t   \r\n        \t\tOVERALLSOLD = OVERALLSOLD.add(tokens);\t\r\n\t\r\n   \t\t \t    // Send UCN to Recipient\t\r\n        \t\tbalances[recipient] = balances[recipient].add(tokens);\r\n\t \r\n   \t \t\t\t// Send Funds to MultiSig\r\n        \t\tif (!multisig.send(msg.value)) {\r\n          \t\t\tthrow;\r\n        \t\t\t}\r\n       \t\t}\r\n   \t  \t  else\r\n   \t  \t\t\t{\r\n   \t  \t  \t\tthrow;\r\n   \t \t\t   \t}\r\n\t\t\r\n\t\t\r\n\t\t//TIMING 10/09/17 - 10/27/17 OR CAP 10,000,000 reached\r\n\t\t\r\n\t\tif(now>start && now <end)\r\n\t\t{\r\n\t\t\t//Stage Pre-Sale Range 0 - 10,000,000 \r\n\t\t\tif(OVERALLSOLD >= RANGESTART_PRESALE && OVERALLSOLD <= RANGEEND_PRESALE) \r\n\t\t\t\t{\r\n\t\t\t\tPRICE = PRICE_PRESALE - (1 + OVERALLSOLD - RANGESTART_PRESALE).div(FACTOR_PRESALE);\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//TIMING 11/01/17 Start Token Sale\r\n\t\tif(now>launch)\r\n\t\t{\r\n\t\t//Stage Post-Pre-Sale Range 0 - 10,000,000 \r\n\t\tif(OVERALLSOLD >= RANGESTART_PRESALE && OVERALLSOLD <= RANGEEND_PRESALE) \r\n\t\t\t{\r\n\t\t\tPRICE = PRICE_PRESALE - (1 + OVERALLSOLD - RANGESTART_PRESALE).div(FACTOR_PRESALE);\r\n\t\t\t}\r\n\t\t\r\n\t\t//Stage One 10,000,001 - 10,100,000 \r\n\t\tif(OVERALLSOLD >= RANGESTART_1 && OVERALLSOLD <= RANGEEND_1)\r\n\t\t\t{\r\n\t\t\tPRICE = PRICE_1 - (1 + OVERALLSOLD - RANGESTART_1).div(FACTOR_1);\r\n\t\t\t}\r\n\r\n\t\t//Stage Two 10,100,001 - 11,000,000\r\n\t\tif(OVERALLSOLD >= RANGESTART_2 && OVERALLSOLD <= RANGEEND_2)\r\n\t\t\t{\r\n\t\t\tPRICE = PRICE_2 - (1 + OVERALLSOLD - RANGESTART_2).div(FACTOR_2);\r\n\t\t\t}\r\n\r\n\t\t//Stage Three 11,000,001 - 15,000,000\r\n\t\tif(OVERALLSOLD >= RANGESTART_3 && OVERALLSOLD <= RANGEEND_3)\r\n\t\t\t{\r\n\t\t\tPRICE = PRICE_3 - (1 + OVERALLSOLD - RANGESTART_3).div(FACTOR_3);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t//Stage Four 15,000,001 - 20,000,000\r\n\t\tif(OVERALLSOLD >= RANGESTART_4 && OVERALLSOLD <= RANGEEND_4)\r\n\t\t\t{\r\n\t\t\tPRICE = PRICE_4 - (1 + OVERALLSOLD - RANGESTART_4).div(FACTOR_4);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t//Stage Five 20,000,001 - 30,000,000\r\n\t\tif(OVERALLSOLD >= RANGESTART_5 && OVERALLSOLD <= RANGEEND_5)\r\n\t\t\t{\r\n\t\t\tPRICE = PRICE_5 - (1 + OVERALLSOLD - RANGESTART_5).div(FACTOR_5);\r\n\t\t\t}\r\n\t\t\r\n\t\t//Stage Six 30,000,001 - 40,000,000\r\n\t\tif(OVERALLSOLD >= RANGESTART_6 && OVERALLSOLD <= RANGEEND_6)\r\n\t\t\t{\r\n\t\t\tPRICE = PRICE_6 - (1 + OVERALLSOLD - RANGESTART_6).div(FACTOR_6);\r\n\t\t\t}\t\r\n\t\t\r\n\t\t//Stage Seven 40,000,001 - 50,000,000\r\n\t\tif(OVERALLSOLD >= RANGESTART_7 && OVERALLSOLD <= RANGEEND_7)\r\n\t\t\t{\r\n\t\t\tPRICE = PRICE_7 - (1 + OVERALLSOLD - RANGESTART_7).div(FACTOR_7);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t//Stage Eight 50,000,001 - 60,000,000\r\n\t\tif(OVERALLSOLD >= RANGESTART_8 && OVERALLSOLD <= RANGEEND_8)\r\n\t\t\t{\r\n\t\t\tPRICE = PRICE_8 - (1 + OVERALLSOLD - RANGESTART_8).div(FACTOR_8);\r\n\t\t\t}\r\n\t\t\r\n\t\t//Stage Nine 60,000,001 - 70,000,000\r\n\t\tif(OVERALLSOLD >= RANGESTART_9 && OVERALLSOLD <= RANGEEND_9)\r\n\t\t\t{\r\n\t\t\tPRICE = PRICE_9 - (1 + OVERALLSOLD - RANGESTART_9).div(FACTOR_9);\r\n\t\t\t}\r\n\t\t\r\n\t\t//Stage Ten 70,000,001 - 80,000,000\r\n\t\tif(OVERALLSOLD >= RANGESTART_10 && OVERALLSOLD <= RANGEEND_10)\r\n\t\t\t{\r\n\t\t\tPRICE = PRICE_10 - (1 + OVERALLSOLD - RANGESTART_10).div(FACTOR_10);\r\n\t\t\t}\t\r\n\t\t\r\n\t\t//Stage Eleven 80,000,001 - 85,000,000\r\n\t\tif(OVERALLSOLD >= RANGESTART_11 && OVERALLSOLD <= RANGEEND_11)\r\n\t\t\t{\r\n\t\t\tPRICE = PRICE_11 - (1 + OVERALLSOLD - RANGESTART_11).div(FACTOR_11);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\r\n   }\r\n\r\n\t \r\n   function submitEther(address recipient) payable {\r\n     if (msg.value == 0) {\r\n       throw;\r\n     }\r\n\r\n     if (!recipient.send(msg.value)) {\r\n       throw;\r\n     }\r\n    \r\n   }\r\n\r\n\r\n  //Unicorn Shoutbox\r\n\r\n  struct MessageQueue {\r\n           string message; \r\n  \t\t   string from;\r\n           uint expireTimestamp;  \r\n           uint startTimestamp;\r\n           address sender; \r\n       }\r\n\r\n\t \r\n     uint256 public constant maxSpendToken = 3600; //Message should last approx. 1 hour max\r\n\r\n     MessageQueue[] public mQueue;\r\n \r\n\t\r\n \r\n      function addMessageToQueue(string msg_from, string name_from, uint spendToken) {\r\n        if(balances[msg.sender]>spendToken && spendToken>=10)\r\n        {\r\n           if(spendToken>maxSpendToken) \r\n               {\r\n                   spendToken=maxSpendToken;\r\n               }\r\n           \r\n\t\t   UniCoinSize=UniCoinSize+spendToken;\r\n           \r\n           balances[msg.sender] = balances[msg.sender].sub(spendToken);\r\n          \r\n\t\t  //If first message or last message already expired set newest timestamp\r\n  \t\t  uint expireTimestamp=now;\r\n\t\t  if(mQueue.length>0)\r\n\t\t\t{\r\n\t\t\t if(mQueue[mQueue.length-1].expireTimestamp>now)\r\n\t\t\t \t{\r\n\t\t\t \texpireTimestamp = mQueue[mQueue.length-1].expireTimestamp;\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t\r\n\t\t \r\n\t\t \r\n           mQueue.push(MessageQueue({\r\n                   message: msg_from, \r\n  \t\t\t\t   from: name_from,\r\n                   expireTimestamp: expireTimestamp.add(spendToken)+60,  //give at least approx 60 seconds per msg\r\n                   startTimestamp: expireTimestamp,\r\n                   sender: msg.sender\r\n               }));\r\n    \r\n        \r\n\t\t \r\n        }\r\n\t\telse {\r\n\t\t      throw;\r\n\t\t      }\r\n      }\r\n\t  \r\n\t\r\n    function feedUnicorn(uint spendToken) {\r\n\t\r\n   \t \tif(balances[msg.sender]>spendToken)\r\n        \t{\r\n       \t \tUniCoinSize=UniCoinSize.add(spendToken);\r\n        \tbalances[msg.sender] = balances[msg.sender].sub(spendToken);\r\n\t\t\t}\r\n\t\t\r\n\t } \r\n\t\r\n\t\r\n   function getQueueLength() public constant returns (uint256 result) {\r\n\t return mQueue.length;\r\n   }\r\n   function getMessage(uint256 i) public constant returns (string, string, uint, uint, address){\r\n     return (mQueue[i].message,mQueue[i].from,mQueue[i].expireTimestamp,mQueue[i].startTimestamp,mQueue[i].sender );\r\n   }\r\n   function getPrice() constant returns (uint256 result) {\r\n     return PRICE;\r\n   }\r\n   function getSupply() constant returns (uint256 result) {\r\n     return totalSupply;\r\n   }\r\n   function getSold() constant returns (uint256 result) {\r\n     return OVERALLSOLD;\r\n   }\r\n   function getUniCoinSize() constant returns (uint256 result) {    \r\n     return UniCoinSize; \r\n   } \r\n    function getAddress() constant returns (address) {\r\n     return this;\r\n   }\r\n    \r\n\r\n\r\n  \r\n   // ADMIN Functions\r\n\r\n   \r\n   //In emergency cases to stop or change timings \r\n   function aSetStart(uint256 nstart) onlyOwner {\r\n     start=nstart;\r\n   }\r\n   function aSetEnd(uint256 nend) onlyOwner {\r\n     end=nend;\r\n   }\r\n   function aSetLaunch(uint256 nlaunch) onlyOwner {\r\n     launch=nlaunch;\r\n   }\r\n    \r\n\r\n   //We don't want the Unicorn to spread hateful messages \r\n   function aDeleteMessage(uint256 i,string f,string m) onlyOwner{\r\n     mQueue[i].message=m;\r\n\t mQueue[i].from=f; \r\n\t\t }\r\n   \r\n   //Clean house from time to time\r\n   function aPurgeMessages() onlyOwner{\r\n   delete mQueue; \r\n   }\r\n\r\n }","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"launch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FACTOR_11\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"submitEther\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FACTOR_9\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_6\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_8\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGESTART_PRESALE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGESTART_7\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGEEND_2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGEEND_1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FACTOR_7\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UniCoinSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"i\",\"type\":\"uint256\"},{\"name\":\"f\",\"type\":\"string\"},{\"name\":\"m\",\"type\":\"string\"}],\"name\":\"aDeleteMessage\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_7\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGEEND_3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGEEND_5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FACTOR_2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGEEND_4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OVERALLSOLD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"msg_from\",\"type\":\"string\"},{\"name\":\"name_from\",\"type\":\"string\"},{\"name\":\"spendToken\",\"type\":\"uint256\"}],\"name\":\"addMessageToQueue\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUniCoinSize\",\"outputs\":[{\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGESTART_6\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multisig\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGEEND_9\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGEEND_6\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nlaunch\",\"type\":\"uint256\"}],\"name\":\"aSetLaunch\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FACTOR_PRESALE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGESTART_4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGESTART_9\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGEEND_8\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGEEND_11\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSupply\",\"outputs\":[{\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGEEND_7\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGEEND_PRESALE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGESTART_2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getMessage\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nend\",\"type\":\"uint256\"}],\"name\":\"aSetEnd\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FACTOR_4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSold\",\"outputs\":[{\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"aPurgeMessages\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGESTART_3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGESTART_10\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FACTOR_10\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSpendToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGEEND_10\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_9\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FACTOR_5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_PRESALE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_11\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_10\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getQueueLength\",\"outputs\":[{\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGESTART_11\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FACTOR_3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nstart\",\"type\":\"uint256\"}],\"name\":\"aSetStart\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mQueue\",\"outputs\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"from\",\"type\":\"string\"},{\"name\":\"expireTimestamp\",\"type\":\"uint256\"},{\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"name\":\"sender\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FACTOR_6\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"submitTokens\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGESTART_8\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGESTART_1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAXTOKENSOLD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spendToken\",\"type\":\"uint256\"}],\"name\":\"feedUnicorn\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RANGESTART_5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FACTOR_8\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FACTOR_1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"UniContract","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c94bbce399a067cc15af5ae8567efe9e15f843420032d21ac779a8f16cf49a7b"}]}