{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n *  Crowdsale for Lympo Tokens.\r\n *  Raised Ether will be stored safely at the wallet and returned to the ICO in case the funding\r\n *  goal is not reached, allowing the token holders to withdraw their funds.\r\n *  Author: Justas Kregždė\r\n */\r\n \r\npragma solidity ^0.4.19;\r\n\r\ncontract token {\r\n    function transferFrom(address sender, address receiver, uint amount) returns(bool success) {}\r\n    function burn() {}\r\n}\r\n\r\nlibrary SafeMath {\r\n    function mul(uint a, uint b) internal returns (uint) {\r\n        uint c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function sub(uint a, uint b) internal returns (uint) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint a, uint b) internal returns (uint) {\r\n        uint c = a + b;\r\n        assert(c >= a && c >= b);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract LympoICO {\r\n    using SafeMath for uint;\r\n\r\n    // pre-ICO\r\n    // The maximum amount of tokens to be sold during pre-ICO\r\n    uint constant public pre_maxGoal = 265000000e18; // 265 Million LYM Tokens\r\n    // There are different prices and amount available in each period\r\n    uint[2] public pre_prices = [60000, 50000];\r\n    uint[1] public pre_amount_stages = [90000000e18]; // the amount available in each stage\r\n    // The start date of the pre-ICO crowdsale\r\n    uint constant public pre_start = 1516618800; // Monday, 22 January 2018 11:00:00 GMT\r\n    // The end date of the pre-ICO crowdsale\r\n    uint constant public pre_end = 1517655600; // Saturday, 3 February 2018 11:00:00 GMT\r\n    // The number of tokens already sold during pre-ICO\r\n    uint public pre_tokensSold = 0;\r\n\r\n    // ICO\r\n    // The maximum amount of tokens to be sold\r\n    uint constant public maxGoal = 385000000e18; // 385 Million LYM Tokens\r\n    // There are different prices and amount available in each period\r\n    uint[1] public prices = [40000];\r\n    // The start date of the crowdsale\r\n    uint constant public start = 1518865200; // Saturday, 17 February 2018 11:00:00 GMT\r\n    // The end date of the crowdsale\r\n    uint constant public end = 1519815600; // Wednesday, 28 February 2018 11:00:00 GMT\r\n    // The number of tokens already sold during ICO\r\n    uint public tokensSold = 0;\r\n\r\n    // If the funding goal is not reached, token holders may withdraw their funds\r\n    uint constant public fundingGoal = 150000000e18; // 15%\r\n    // How much has been raised by crowdale (in ETH)\r\n    uint public amountRaised;\r\n    // The balances (in ETH) of all token holders\r\n    mapping(address => uint) public balances;\r\n    // Indicates if the crowdsale has been ended already\r\n    bool public crowdsaleEnded = false;\r\n    // Tokens will be transfered from this address\r\n    address public tokenOwner;\r\n    // The address of the token contract\r\n    token public tokenReward;\r\n    // The wallet on which the funds will be stored\r\n    address wallet;\r\n    // Notifying transfers and the success of the crowdsale\r\n    event GoalReached(address _tokenOwner, uint _amountRaised);\r\n    event FundTransfer(address backer, uint amount, bool isContribution, uint _amountRaised);\r\n\r\n    // Constructor/initialization\r\n    function LympoICO(address tokenAddr, address walletAddr, address tokenOwnerAddr) {\r\n        tokenReward = token(tokenAddr);\r\n        wallet = walletAddr;\r\n        tokenOwner = tokenOwnerAddr;\r\n    }\r\n    \r\n    // Exchange by sending ether to the contract.\r\n    function() payable {\r\n        if (msg.sender != wallet) // Do not trigger exchange if the wallet is returning the funds\r\n            exchange(msg.sender);\r\n    }\r\n    \r\n    // Make an exchanegment. Only callable if the crowdsale started and hasn't been ended, also the maxGoal wasn't reached yet.\r\n    // The current token price is looked up by available amount. Bought tokens is transfered to the receiver.\r\n    // The sent value is directly forwarded to a safe wallet.\r\n    function exchange(address receiver) payable {\r\n        uint amount = msg.value;\r\n        uint price = getPrice();\r\n        uint numTokens = amount.mul(price);\r\n\r\n        bool isPreICO = (now >= pre_start && now <= pre_end);\r\n        bool isICO = (now >= start && now <= end);\r\n\r\n        require(isPreICO || isICO);\r\n        require(numTokens > 0);\r\n        if (isPreICO)\r\n        {\r\n            require(!crowdsaleEnded && pre_tokensSold.add(numTokens) <= pre_maxGoal);\r\n            if (pre_tokensSold < pre_amount_stages[0])\r\n                require(numTokens <= 6000000e18); // max threshold for pre-ICO: 6mil LYM tokens for stage-I\r\n            else\r\n                require(numTokens <= 12500000e18); // max threshold for pre-ICO: 12.5mil LYM tokens for stage-II\r\n        }\r\n        if (isICO)\r\n        {\r\n            require(!crowdsaleEnded && tokensSold.add(numTokens) <= maxGoal);\r\n        }\r\n\r\n        wallet.transfer(amount);\r\n        balances[receiver] = balances[receiver].add(amount);\r\n        \r\n        // Calculate how much raised and tokens sold\r\n        amountRaised = amountRaised.add(amount);\r\n\r\n        if (isPreICO)\r\n            pre_tokensSold = pre_tokensSold.add(numTokens);\r\n        if (isICO)\r\n            tokensSold = tokensSold.add(numTokens);\r\n\r\n        assert(tokenReward.transferFrom(tokenOwner, receiver, numTokens));\r\n        FundTransfer(receiver, amount, true, amountRaised);\r\n    }\r\n\r\n    // Looks up the current token price\r\n    function getPrice() constant returns (uint price) {\r\n        // pre-ICO prices\r\n        if (now >= pre_start && now <= pre_end)\r\n        {\r\n            for(uint i = 0; i < pre_amount_stages.length; i++) {\r\n                if(pre_tokensSold < pre_amount_stages[i])\r\n                    return pre_prices[i];\r\n            }\r\n            return pre_prices[pre_prices.length-1];\r\n        }\r\n        // ICO prices\r\n        return prices[prices.length-1];\r\n    }\r\n\r\n    modifier afterDeadline() { if (now >= end) _; }\r\n\r\n    // Checks if the goal or time limit has been reached and ends the campaign\r\n    function checkGoalReached() afterDeadline {\r\n        if (pre_tokensSold.add(tokensSold) >= fundingGoal){\r\n            tokenReward.burn(); // Burn remaining tokens but the reserved ones\r\n            GoalReached(tokenOwner, amountRaised);\r\n        }\r\n        crowdsaleEnded = true;\r\n    }\r\n\r\n    // Allows the funders to withdraw their funds if the goal has not been reached.\r\n    // Only works after funds have been returned from the wallet.\r\n    function safeWithdrawal() afterDeadline {\r\n        uint amount = balances[msg.sender];\r\n        if (address(this).balance >= amount) {\r\n            balances[msg.sender] = 0;\r\n            if (amount > 0) {\r\n                msg.sender.transfer(amount);\r\n                FundTransfer(msg.sender, amount, false, amountRaised);\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"checkGoalReached\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"exchange\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pre_amount_stages\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pre_maxGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pre_tokensSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pre_start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pre_end\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"prices\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pre_prices\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenAddr\",\"type\":\"address\"},{\"name\":\"walletAddr\",\"type\":\"address\"},{\"name\":\"tokenOwnerAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amountRaised\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_amountRaised\",\"type\":\"uint256\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"LympoICO","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000057ad67acf9bf015e4820fbd66ea1a21bed8852ec000000000000000000000000bada5628f4d1ef5d8c7ce3cb959133ebe3243e8b000000000000000000000000c1c04f74a97a1e7eedb23d181023d48933399929","Library":"","SwarmSource":"bzzr://bc630a4b720fccd5925b75c13c21a4ff560f0d325f6fec40e6da5bdb58a9a691"}]}