{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\n\tcontract SafeMath {\r\n\r\n\t  function safeMul(uint a, uint b) returns (uint) {\r\n\t\tif (a == 0) {\r\n\t\t  return 0;\r\n\t\t} else {\r\n\t\t  uint c = a * b;\r\n\t\t  require(c / a == b);\r\n\t\t  return c;\r\n\t\t}\r\n\t  }\r\n\r\n\t  function safeDiv(uint a, uint b) returns (uint) {\r\n\t\trequire(b > 0);\r\n\t\tuint c = a / b;\r\n\t\trequire(a == b * c + a % b);\r\n\t\treturn c;\r\n\t  }\r\n\r\n\t}\r\n\r\n\tcontract token {\r\n\t\tfunction transferFrom(address _from, address _receiver, uint _amount);\r\n\t}\r\n\r\n\tcontract CrowdSale is SafeMath {\r\n\t\taddress public beneficiary;\r\n\t\tuint public fundingMinimumTargetInUsd;\r\n\t\tuint public fundingMaximumTargetInUsd;\r\n\t\tuint public amountRaised;\r\n\t\tuint public priceInUsd;\r\n\t\ttoken public tokenReward;\r\n\t\tmapping(address => uint256) public balanceOf;\r\n\t\tbool public fundingGoalReached = false;\r\n\t\taddress tokenHolder;\r\n\t\taddress public creator;\r\n\t\tuint public tokenAllocation;\r\n\t\tuint public tokenRaised;\r\n\t\tuint public etherPriceInUsd;\r\n\t\tuint public totalUsdRaised;\r\n\t\tbool public icoState = false;\r\n\t\tbool public userRefund = false;\r\n\t\tmapping(address => bool) public syncList;\r\n\r\n\t\tevent GoalMinimumReached(address _beneficiary, uint _amountRaised, uint _totalUsdRaised);\r\n\t\tevent GoalMaximumReached(address _beneficiary, uint _amountRaised, uint _totalUsdRaised);\r\n\t\tevent FundTransfer(address _backer, uint _amount, bool _isContribution);\r\n\r\n\t\t/**\r\n\t\t * Constrctor function\r\n\t\t *\r\n\t\t * Setup the owner\r\n\t\t */\r\n\t\tfunction CrowdSale(\r\n\t\t\taddress ifSuccessfulSendTo,\r\n\t\t\tuint _fundingMinimumTargetInUsd,\r\n\t\t\tuint _fundingMaximumTargetInUsd,\r\n\t\t\tuint tokenPriceInUSD,\r\n\t\t\taddress addressOfTokenUsedAsReward,\r\n\t\t\taddress _tokenHolder,\r\n\t\t\tuint _tokenAllocation,\r\n\t\t\tuint _etherPriceInUsd\r\n\t\t) {\r\n\t\t\tcreator = msg.sender;\r\n\t\t\tsyncList[creator] = true;\r\n\t\t\tbeneficiary = ifSuccessfulSendTo;\r\n\t\t\tfundingMinimumTargetInUsd = _fundingMinimumTargetInUsd;\r\n\t\t\tfundingMaximumTargetInUsd = _fundingMaximumTargetInUsd;\r\n\t\t\tpriceInUsd = tokenPriceInUSD;\r\n\t\t\ttokenReward = token(addressOfTokenUsedAsReward);\r\n\t\t\ttokenHolder = _tokenHolder;\r\n\t\t\ttokenAllocation = _tokenAllocation;\r\n\t\t\tetherPriceInUsd = _etherPriceInUsd;\r\n\t\t}\r\n\r\n\t\tmodifier isMaximum() {\r\n\t\t  require(safeMul(msg.value, etherPriceInUsd) <= 100000000000000000000000000);\r\n\t\t   _;\r\n\t\t}\r\n\r\n\t\tmodifier isCreator() {\r\n\t\t\trequire(msg.sender == creator);\r\n\t\t\t_;\r\n\t\t}\r\n\r\n\t\tmodifier isSyncList(address _source){\r\n\t\t  require(syncList[_source]);\r\n\t\t  _;\r\n\t\t}\r\n\r\n\t\tfunction addToSyncList(address _source) isCreator() returns (bool) {\r\n\t\t  syncList[_source] = true;\r\n\t\t}\r\n\r\n\t\tfunction setEtherPrice(uint _price) isSyncList(msg.sender) returns (bool result){\r\n\t\t  etherPriceInUsd = _price;\r\n\t\t  return true;\r\n\t\t}\r\n\r\n\t\tfunction stopIco() isCreator() returns (bool result){\r\n\t\t  icoState = false;\r\n\t\t  return true;\r\n\t\t}\r\n\r\n\t\tfunction startIco() isCreator() returns (bool result){\r\n\t\t  icoState = true;\r\n\t\t  return true;\r\n\t\t}\r\n\r\n\t\tfunction settingsIco(uint _priceInUsd, address _tokenHolder, uint _tokenAllocation, uint _fundingMinimumTargetInUsd, uint _fundingMaximumTargetInUsd) isCreator() returns (bool result){\r\n\t\t  require(!icoState);\r\n\t\t  priceInUsd = _priceInUsd;\r\n\t\t  tokenHolder = _tokenHolder;\r\n\t\t  tokenAllocation = _tokenAllocation;\r\n\t\t  fundingMinimumTargetInUsd = _fundingMinimumTargetInUsd;\r\n\t\t  fundingMaximumTargetInUsd = _fundingMaximumTargetInUsd;\r\n\t\t  return true;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Fallback function\r\n\t\t *\r\n\t\t * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n\t\t */\r\n\t\tfunction () isMaximum() payable {\r\n\t\t\trequire(icoState);\r\n\r\n\t\t\tuint etherAmountInWei = msg.value;\r\n\t\t\tuint amount = safeMul(msg.value, etherPriceInUsd);\r\n\t\t\tuint256 tokenAmount = safeDiv(safeDiv(amount, priceInUsd), 10000000000);\r\n\t\t\trequire(tokenRaised + tokenAmount <= tokenAllocation);\r\n\t\t\ttokenRaised += tokenAmount;\r\n\r\n\r\n\t\t\tuint amountInUsd = safeDiv(amount, 1000000000000000000);\r\n\t\t\trequire(totalUsdRaised + amountInUsd <= fundingMaximumTargetInUsd);\r\n\t\t\ttotalUsdRaised += amountInUsd;\r\n\r\n\t\t\tbalanceOf[msg.sender] += etherAmountInWei;\r\n\t\t\tamountRaised += etherAmountInWei;\r\n\t\t\ttokenReward.transferFrom(tokenHolder, msg.sender, tokenAmount);\r\n\t\t\tFundTransfer(msg.sender, etherAmountInWei, true);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Check if goal was reached\r\n\t\t *\r\n\t\t * Checks if the goal or time limit has been reached and ends the campaign\r\n\t\t */\r\n\t\tfunction checkGoalReached() isCreator() {\r\n\t\t\tif (totalUsdRaised >= fundingMaximumTargetInUsd){\r\n\t\t\t\tfundingGoalReached = true;\r\n\t\t\t\tGoalMaximumReached(beneficiary, amountRaised, totalUsdRaised);\r\n\t\t\t} else if (totalUsdRaised >= fundingMinimumTargetInUsd) {\r\n\t\t\t\tfundingGoalReached = true;\r\n\t\t\t\tGoalMinimumReached(beneficiary, amountRaised, totalUsdRaised);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Withdraw the funds\r\n\t\t *\r\n\t\t */\r\n\t\tfunction safeWithdrawal() {\r\n\t\t\tif (userRefund) {\r\n\t\t\t\tuint amount = balanceOf[msg.sender];\r\n\t\t\t\tbalanceOf[msg.sender] = 0;\r\n\t\t\t\tif (amount > 0) {\r\n\t\t\t\t\tif (msg.sender.send(amount)) {\r\n\t\t\t\t\t\tFundTransfer(msg.sender, amount, false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbalanceOf[msg.sender] = amount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Transfer Funds\r\n\t\tfunction drain() {\r\n\t\t\trequire(beneficiary == msg.sender);\r\n\t\t\tif (beneficiary.send(amountRaised)) {\r\n\t\t\t\tFundTransfer(beneficiary, amountRaised, false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Autorize users refunds\r\n\t\tfunction AutorizeRefund() isCreator() returns (bool success){\r\n\t\t\trequire(!icoState);\r\n\t\t\tuserRefund = true;\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Remove contract\r\n\t\tfunction removeContract() public isCreator() {\r\n\t\t\trequire(!icoState);\r\n\t\t\tselfdestruct(msg.sender);\r\n\t\t}\r\n\r\n\t}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"checkGoalReached\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingMinimumTargetInUsd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_source\",\"type\":\"address\"}],\"name\":\"addToSyncList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setEtherPrice\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalUsdRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoState\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceInUsd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"userRefund\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopIco\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startIco\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingMaximumTargetInUsd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drain\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"syncList\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeDiv\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"AutorizeRefund\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etherPriceInUsd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeMul\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingGoalReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_priceInUsd\",\"type\":\"uint256\"},{\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"name\":\"_tokenAllocation\",\"type\":\"uint256\"},{\"name\":\"_fundingMinimumTargetInUsd\",\"type\":\"uint256\"},{\"name\":\"_fundingMaximumTargetInUsd\",\"type\":\"uint256\"}],\"name\":\"settingsIco\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"removeContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"ifSuccessfulSendTo\",\"type\":\"address\"},{\"name\":\"_fundingMinimumTargetInUsd\",\"type\":\"uint256\"},{\"name\":\"_fundingMaximumTargetInUsd\",\"type\":\"uint256\"},{\"name\":\"tokenPriceInUSD\",\"type\":\"uint256\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"},{\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"name\":\"_tokenAllocation\",\"type\":\"uint256\"},{\"name\":\"_etherPriceInUsd\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amountRaised\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_totalUsdRaised\",\"type\":\"uint256\"}],\"name\":\"GoalMinimumReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amountRaised\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_totalUsdRaised\",\"type\":\"uint256\"}],\"name\":\"GoalMaximumReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"CrowdSale","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000005494482969cfbbb04affbf204ca8678e7fc8257900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ba43b740000000000000000000000000000000000000000000000000000000000000003e8000000000000000000000000ba138976d8e7644ba8fe74409286a85dba85ba2a0000000000000000000000000080fa0c6343b0641c67bf7e63f66b9d3b1f0d290000000000000000000000000000000000000000000000000001c6bf526340000000000000000000000000000000000000000000000000000000000000319750","Library":"","SwarmSource":"bzzr://dd4cfcce6276263dbd0637d3d20807c750be0f369bb0d664b63ac8170c5d2045"}]}