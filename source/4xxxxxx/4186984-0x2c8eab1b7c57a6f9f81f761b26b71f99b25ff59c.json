{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\n\r\ncontract BMICOAffiliateProgramm {\r\n    mapping (string => address) partnersPromo;\r\n    mapping (address => uint256) referrals;\r\n\r\n    struct itemPartners {\r\n        uint256 balance;\r\n        string promo;\r\n        bool create;\r\n    }\r\n    mapping (address => itemPartners) partnersInfo;\r\n\r\n    uint256 public ref_percent = 100; //1 = 0.01%, 10000 = 100%\r\n\r\n\r\n    struct itemHistory {\r\n        uint256 datetime;\r\n        address referral;\r\n        uint256 amount_invest;\r\n    }\r\n    mapping(address => itemHistory[]) history;\r\n\r\n    uint256 public amount_referral_invest;\r\n\r\n    address public owner;\r\n    address public contractPreICO;\r\n    address public contractICO;\r\n\r\n    function BMICOAffiliateProgramm(){\r\n        owner = msg.sender;\r\n        contractPreICO = address(0x0);\r\n        contractICO = address(0x0);\r\n    }\r\n\r\n    modifier isOwner()\r\n    {\r\n        assert(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function str_length(string x) constant internal returns (uint256) {\r\n        bytes32 str;\r\n        assembly {\r\n        str := mload(add(x, 32))\r\n        }\r\n        bytes memory bytesString = new bytes(32);\r\n        uint256 charCount = 0;\r\n        for (uint j = 0; j < 32; j++) {\r\n            byte char = byte(bytes32(uint(str) * 2 ** (8 * j)));\r\n            if (char != 0) {\r\n                bytesString[charCount] = char;\r\n                charCount++;\r\n            }\r\n        }\r\n        return charCount;\r\n    }\r\n\r\n    function changeOwner(address new_owner) isOwner {\r\n        assert(new_owner!=address(0x0));\r\n        assert(new_owner!=address(this));\r\n\r\n        owner = new_owner;\r\n    }\r\n\r\n    function setReferralPercent(uint256 new_percent) isOwner {\r\n        ref_percent = new_percent;\r\n    }\r\n\r\n    function setContractPreICO(address new_address) isOwner {\r\n        assert(contractPreICO==address(0x0));\r\n        assert(new_address!=address(0x0));\r\n        assert(new_address!=address(this));\r\n\r\n        contractPreICO = new_address;\r\n    }\r\n\r\n    function setContractICO(address new_address) isOwner {\r\n        assert(contractICO==address(0x0));\r\n        assert(new_address!=address(0x0));\r\n        assert(new_address!=address(this));\r\n\r\n        contractICO = new_address;\r\n    }\r\n\r\n    function setPromoToPartner(string promo) {\r\n        assert(partnersPromo[promo]==address(0x0));\r\n        assert(partnersInfo[msg.sender].create==false);\r\n        assert(str_length(promo)>0 && str_length(promo)<=6);\r\n\r\n        partnersPromo[promo] = msg.sender;\r\n        partnersInfo[msg.sender].balance = 0;\r\n        partnersInfo[msg.sender].promo = promo;\r\n        partnersInfo[msg.sender].create = true;\r\n    }\r\n\r\n    function checkPromo(string promo) constant returns(bool){\r\n        return partnersPromo[promo]!=address(0x0);\r\n    }\r\n\r\n    function checkPartner(address partner_address) constant returns(bool isPartner, string promo){\r\n        isPartner = partnersInfo[partner_address].create;\r\n        promo = '-1';\r\n        if(isPartner){\r\n            promo = partnersInfo[partner_address].promo;\r\n        }\r\n    }\r\n\r\n    function calc_partnerPercent(uint256 ref_amount_invest) constant internal returns(uint16 percent){\r\n        percent = 0;\r\n        if(ref_amount_invest > 0){\r\n            if(ref_amount_invest < 2 ether){\r\n                percent = 100; //1 = 0.01%, 10000 = 100%\r\n            }\r\n            else if(ref_amount_invest >= 2 ether && ref_amount_invest < 3 ether){\r\n                percent = 200;\r\n            }\r\n            else if(ref_amount_invest >= 3 ether && ref_amount_invest < 4 ether){\r\n                percent = 300;\r\n            }\r\n            else if(ref_amount_invest >= 4 ether && ref_amount_invest < 5 ether){\r\n                percent = 400;\r\n            }\r\n            else if(ref_amount_invest >= 5 ether){\r\n                percent = 500;\r\n            }\r\n        }\r\n    }\r\n\r\n    function partnerInfo(address partner_address) constant internal returns(string promo, uint256 balance, uint256[] h_datetime, uint256[] h_invest, address[] h_referrals){\r\n        if(partner_address != address(0x0) && partnersInfo[partner_address].create){\r\n            promo = partnersInfo[partner_address].promo;\r\n            balance = partnersInfo[partner_address].balance;\r\n\r\n            h_datetime = new uint256[](history[partner_address].length);\r\n            h_invest = new uint256[](history[partner_address].length);\r\n            h_referrals = new address[](history[partner_address].length);\r\n\r\n            for(uint256 i=0; i<history[partner_address].length; i++){\r\n                h_datetime[i] = history[partner_address][i].datetime;\r\n                h_invest[i] = history[partner_address][i].amount_invest;\r\n                h_referrals[i] = history[partner_address][i].referral;\r\n            }\r\n        }\r\n        else{\r\n            promo = '-1';\r\n            balance = 0;\r\n            h_datetime = new uint256[](0);\r\n            h_invest = new uint256[](0);\r\n            h_referrals = new address[](0);\r\n        }\r\n    }\r\n\r\n    function partnerInfo_for_Partner(bytes32 hash, uint8 v, bytes32 r, bytes32 s) constant returns(string, uint256, uint256[], uint256[], address[]){\r\n        address partner_address = ecrecover(hash, v, r, s);\r\n        return partnerInfo(partner_address);\r\n    }\r\n\r\n    function partnerInfo_for_Owner (address partner, bytes32 hash, uint8 v, bytes32 r, bytes32 s) constant returns(string, uint256, uint256[], uint256[], address[]){\r\n        if(owner == ecrecover(hash, v, r, s)){\r\n            return partnerInfo(partner);\r\n        }\r\n        else {\r\n            return ('-1', 0, new uint256[](0), new uint256[](0), new address[](0));\r\n        }\r\n    }\r\n\r\n    function add_referral(address referral, string promo, uint256 amount) external returns(address partner, uint256 p_partner, uint256 p_referral){\r\n        p_partner = 0;\r\n        p_referral = 0;\r\n        partner = address(0x0);\r\n        if (msg.sender == contractPreICO || msg.sender == contractICO){\r\n            if(partnersPromo[promo] != address(0x0) && partnersPromo[promo] != referral){\r\n                partner = partnersPromo[promo];\r\n                referrals[referral] += amount;\r\n                amount_referral_invest += amount;\r\n                partnersInfo[partner].balance += amount;\r\n                history[partner].push(itemHistory(now, referral, amount));\r\n                p_partner = (amount*uint256(calc_partnerPercent(amount)))/10000;\r\n                p_referral = (amount*ref_percent)/10000;\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"referral\",\"type\":\"address\"},{\"name\":\"promo\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"add_referral\",\"outputs\":[{\"name\":\"partner\",\"type\":\"address\"},{\"name\":\"p_partner\",\"type\":\"uint256\"},{\"name\":\"p_referral\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"promo\",\"type\":\"string\"}],\"name\":\"setPromoToPartner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"promo\",\"type\":\"string\"}],\"name\":\"checkPromo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"partner_address\",\"type\":\"address\"}],\"name\":\"checkPartner\",\"outputs\":[{\"name\":\"isPartner\",\"type\":\"bool\"},{\"name\":\"promo\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractPreICO\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_address\",\"type\":\"address\"}],\"name\":\"setContractICO\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amount_referral_invest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_percent\",\"type\":\"uint256\"}],\"name\":\"setReferralPercent\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"partner\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"partnerInfo_for_Owner\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractICO\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_address\",\"type\":\"address\"}],\"name\":\"setContractPreICO\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"partnerInfo_for_Partner\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ref_percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"BMICOAffiliateProgramm","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4c43efcbcb1994601dabad90fe987390f096a69b3330303428b354dc43f78a02"}]}