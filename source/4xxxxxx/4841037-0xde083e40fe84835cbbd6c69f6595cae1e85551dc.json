{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract LedgerLegendsToken {\r\n  address public owner;\r\n  mapping(address => bool) public minters;\r\n\r\n  event Approval(address indexed owner, address indexed approved, uint256 tokenId);\r\n  event Transfer(address indexed from, address indexed to, uint256 tokenId);\r\n  event Mint(address indexed owner, uint256 tokenId);\r\n\r\n  uint256 public tokenIdCounter = 1;\r\n  mapping (uint256 => address) public tokenIdToOwner;\r\n  mapping (uint256 => bytes32) public tokenIdToData;\r\n  mapping (uint256 => address) public tokenIdToApproved;\r\n  mapping (address => uint256[]) public ownerToTokenIds;\r\n  mapping (uint256 => uint256) public tokenIdToOwnerArrayIndex;\r\n\r\n  function LedgerLegendsToken() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /* Admin */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  modifier onlyMinters() {\r\n    require(minters[msg.sender]);\r\n    _;\r\n  }\r\n  \r\n  function setOwner(address _owner) onlyOwner() public {\r\n    owner = _owner;\r\n  }\r\n\r\n  function addMinter(address _minter) onlyOwner() public {\r\n    minters[_minter] = true;\r\n  }\r\n\r\n  function removeMinter(address _minter) onlyOwner() public {\r\n    delete minters[_minter];\r\n  }\r\n\r\n  /* Internal */\r\n  function _addTokenToOwnersList(address _owner, uint256 _tokenId) internal {\r\n    ownerToTokenIds[_owner].push(_tokenId);\r\n    tokenIdToOwnerArrayIndex[_tokenId] = ownerToTokenIds[_owner].length - 1;\r\n  }\r\n\r\n  function _removeTokenFromOwnersList(address _owner, uint256 _tokenId) internal {\r\n    uint256 length = ownerToTokenIds[_owner].length;\r\n    uint256 index = tokenIdToOwnerArrayIndex[_tokenId];\r\n    uint256 swapToken = ownerToTokenIds[_owner][length - 1];\r\n\r\n    ownerToTokenIds[_owner][index] = swapToken;\r\n    tokenIdToOwnerArrayIndex[swapToken] = index;\r\n\r\n    delete ownerToTokenIds[_owner][length - 1];\r\n    ownerToTokenIds[_owner].length--;\r\n  }\r\n\r\n  function _transfer(address _from, address _to, uint256 _tokenId) internal {\r\n    require(tokenExists(_tokenId));\r\n    require(ownerOf(_tokenId) == _from);\r\n    require(_to != address(0));\r\n    require(_to != address(this));\r\n\r\n    tokenIdToOwner[_tokenId] = _to;\r\n    delete tokenIdToApproved[_tokenId];\r\n\r\n    _removeTokenFromOwnersList(_from, _tokenId);\r\n    _addTokenToOwnersList(_to, _tokenId);\r\n\r\n    Transfer(msg.sender, _to, _tokenId);\r\n  }\r\n\r\n  /* Minting */\r\n  function mint(address _owner, bytes32 _data) onlyMinters() public returns (uint256 tokenId) {\r\n    tokenId = tokenIdCounter;\r\n    tokenIdCounter += 1;\r\n    tokenIdToOwner[tokenId] = _owner;\r\n    tokenIdToData[tokenId] = _data;\r\n    _addTokenToOwnersList(_owner, tokenId);\r\n    Mint(_owner, tokenId);\r\n  }\r\n\r\n  /* ERC721 */\r\n  function name() public pure returns (string) {\r\n    return \"Ledger Legends Cards\";\r\n  }\r\n\r\n  function symbol() public pure returns (string) {\r\n    return \"LLC\";\r\n  }\r\n\r\n  function totalSupply() public view returns (uint256) {\r\n    return tokenIdCounter - 1;\r\n  }\r\n\r\n  function balanceOf(address _owner) public view returns (uint256) {\r\n    return ownerToTokenIds[_owner].length;\r\n  }\r\n\r\n  function ownerOf(uint256 _tokenId) public view returns (address) {\r\n    return tokenIdToOwner[_tokenId];\r\n  }\r\n\r\n  function approvedFor(uint256 _tokenId) public view returns (address) {\r\n    return tokenIdToApproved[_tokenId];\r\n  }\r\n\r\n  function tokenExists(uint256 _tokenId) public view returns (bool) {\r\n    return _tokenId < tokenIdCounter;\r\n  }\r\n\r\n  function tokenData(uint256 _tokenId) public view returns (bytes32) {\r\n    return tokenIdToData[_tokenId];\r\n  }\r\n\r\n  function tokensOfOwner(address _owner) public view returns (uint256[]) {\r\n    return ownerToTokenIds[_owner];\r\n  }\r\n\r\n  function tokenOfOwnerByIndex(address _owner, uint256 _index) public view returns (uint256) {\r\n    return ownerToTokenIds[_owner][_index];\r\n  }\r\n\r\n  function approve(address _to, uint256 _tokenId) public {\r\n    require(msg.sender != _to);\r\n    require(tokenExists(_tokenId));\r\n    require(ownerOf(_tokenId) == msg.sender);\r\n\r\n    if (_to == 0) {\r\n      if (tokenIdToApproved[_tokenId] != 0) {\r\n        delete tokenIdToApproved[_tokenId];\r\n        Approval(msg.sender, 0, _tokenId);\r\n      }\r\n    } else {\r\n      tokenIdToApproved[_tokenId] = _to;\r\n      Approval(msg.sender, _to, _tokenId);\r\n    }\r\n  }\r\n\r\n  function transfer(address _to, uint256 _tokenId) public {\r\n    _transfer(msg.sender, _to, _tokenId);\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _tokenId) public {\r\n    require(tokenIdToApproved[_tokenId] == msg.sender);\r\n    _transfer(_from, _to, _tokenId);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenExists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIdToData\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approvedFor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIdToOwnerArrayIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerToTokenIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIdToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenIdCounter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenData\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIdToApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"}]","ContractName":"LedgerLegendsToken","CompilerVersion":"v0.4.20-nightly.2017.12.20+commit.efc198d5","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cbfcd7d0a4dea8d51724fc958bdbbbd34e4875aa7a791e2fde4834e3f5d06312"}]}