{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract EndpointRegistryContract {\r\n    event AddressRegistered(address indexed eth_address, string socket);\r\n\r\n    // Mapping of Ethereum Addresses => SocketEndpoints\r\n    mapping (address => string) address_to_socket;\r\n\r\n    modifier noEmptyString(string str)\r\n    {\r\n        require(equals(str, \"\") != true);\r\n        _;\r\n    }\r\n\r\n    /*\r\n     * @notice Registers the Ethereum Address to the Endpoint socket.\r\n     * @dev Registers the Ethereum Address to the Endpoint socket.\r\n     * @param string of socket in this format \"127.0.0.1:40001\"\r\n     */\r\n    function registerEndpoint(string socket) noEmptyString(socket)\r\n    {\r\n        string storage old_socket = address_to_socket[msg.sender];\r\n\r\n        // Compare if the new socket matches the old one, if it does just return\r\n        if (equals(old_socket, socket)) {\r\n            return;\r\n        }\r\n\r\n        // Put the ethereum address 0 in front of the old_socket,old_socket:0x0\r\n        address_to_socket[msg.sender] = socket;\r\n        AddressRegistered(msg.sender, socket);\r\n    }\r\n\r\n    /*\r\n     * @notice Finds the socket if given an Ethereum Address\r\n     * @dev Finds the socket if given an Ethereum Address\r\n     * @param An eth_address which is a 20 byte Ethereum Address\r\n     * @return A socket which the current Ethereum Address is using.\r\n     */\r\n    function findEndpointByAddress(address eth_address) constant returns (string socket)\r\n    {\r\n        return address_to_socket[eth_address];\r\n    }\r\n\r\n    function equals(string a, string b) internal constant returns (bool result)\r\n    {\r\n        if (sha3(a) == sha3(b)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"eth_address\",\"type\":\"address\"}],\"name\":\"findEndpointByAddress\",\"outputs\":[{\"name\":\"socket\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"socket\",\"type\":\"string\"}],\"name\":\"registerEndpoint\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"eth_address\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"socket\",\"type\":\"string\"}],\"name\":\"AddressRegistered\",\"type\":\"event\"}]","ContractName":"EndpointRegistryContract","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9eebfe141d53564450e94ba7f37b653b2f25217c80dc4372998534b3e97585ba"}]}