{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract Token { // ERC20 standard\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract RecoverC20 {\r\n\r\n  address public owner;\r\n  Token public C20Token;\r\n\r\n  address[] public addressList;\r\n  mapping (address => bool) public added;\r\n  mapping (address => uint256) public allowances;\r\n\r\n  address public receivingAddress = 0x9bb3fdb9CD7B6D63Abfb493a362845EBAc5f94c7; // TODO: change\r\n\r\n  uint public index = 0;\r\n\r\n  modifier onlyOwner { // exempt vestingContract and fundWallet to allow dev allocations\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function RecoverC20(address tokenAddress) public { // constructor\r\n    owner = msg.sender;\r\n    C20Token = Token(tokenAddress);\r\n  }\r\n\r\n  function resetIndex() public onlyOwner {\r\n    index = 0;\r\n  }\r\n\r\n  function addAddresses(address[] tokenHolders) public onlyOwner {\r\n    for(uint i = 0; i < tokenHolders.length; i++) {\r\n      address tokenHolder = tokenHolders[i];\r\n      require(!added[tokenHolder]);\r\n      added[tokenHolder] = true;\r\n      addressList.push(tokenHolder);\r\n    }\r\n  }\r\n\r\n  function recoverTokens(uint count) public onlyOwner {\r\n    for(uint i = 0; index < addressList.length && i < count; i++) {\r\n      address tokenHolder = addressList[index];\r\n      uint value = C20Token.allowance(tokenHolder, this); // check allowance of this contract address\r\n      if(value!=0) {\r\n        C20Token.transferFrom(tokenHolder, receivingAddress, value);\r\n      }\r\n      index++;\r\n    }\r\n  }\r\n\r\n  function returnAddressList() public constant returns (address[]) {\r\n   return addressList;\r\n }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"receivingAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resetIndex\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenHolders\",\"type\":\"address[]\"}],\"name\":\"addAddresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"C20Token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"added\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"returnAddressList\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressList\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"RecoverC20","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000026e75307fc0c021472feb8f727839531f112f317","Library":"","SwarmSource":"bzzr://56e1665b6ca5a541d234f726d60e4e3a544103415bcc676d4d27d97eeee48172"}]}