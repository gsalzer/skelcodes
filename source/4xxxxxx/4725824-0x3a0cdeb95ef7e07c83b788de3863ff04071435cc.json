{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\ncontract SafeMath {\r\n    /**\r\n    * @dev constructor\r\n    */\r\n    function SafeMath() public {\r\n    }\r\n\r\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(a >= b);\r\n        return a - b;\r\n    }\r\n\r\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n    * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n    * account.\r\n    */\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n    * @dev Throws if called by any account other than the owner.\r\n    */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param _newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(_newOwner != owner);\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    /**\r\n    * @dev confirm ownership by a new owner\r\n    */\r\n    function confirmOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = 0x0;\r\n    }\r\n}\r\n\r\ncontract TheAbyssCrowdsale is Ownable, SafeMath {\r\n    mapping (address => uint256) public balances;\r\n\r\n    uint256 public constant TOKEN_PRICE_NUM = 2500;\r\n    uint256 public constant TOKEN_PRICE_DENOM = 1;\r\n\r\n    uint256 public constant PRESALE_ETHER_MIN_CONTRIB = 5 ether;\r\n    uint256 public constant SALE_ETHER_MIN_CONTRIB = 0.1 ether;\r\n\r\n    uint256 public totalEtherContributed = 0;\r\n    uint256 public totalTokensToSupply = 0;\r\n    address public wallet = 0x0;\r\n\r\n    uint256 public preSaleStartTime = 0;\r\n    uint256 public preSaleEndTime = 0;\r\n\r\n    uint256 public saleStartTime = 0;\r\n    uint256 public saleEndTime = 0;\r\n\r\n    uint256 public bonusWindow1EndTime = 0;\r\n    uint256 public bonusWindow2EndTime = 0;\r\n    uint256 public bonusWindow3EndTime = 0;  \r\n\r\n    event LogContribution(address indexed contributor, uint256 amountWei, uint256 tokenAmount, uint256 tokenBonus, uint256 timestamp);\r\n\r\n    modifier checkContribution() {\r\n        require((now >= preSaleStartTime && now < preSaleEndTime && msg.value >= PRESALE_ETHER_MIN_CONTRIB) || (now >= saleStartTime && now < saleEndTime && msg.value >= SALE_ETHER_MIN_CONTRIB));\r\n        _;\r\n    }\r\n\r\n    function TheAbyssCrowdsale(address _wallet, uint256 _preSaleStartTime, uint256 _preSaleEndTime, uint256 _saleStartTime, uint256 _saleEndTime) public {\r\n        require(_preSaleStartTime >= now);\r\n        require(_preSaleEndTime > _preSaleStartTime);\r\n        require(_saleStartTime > _preSaleEndTime);\r\n        require(_saleEndTime > _saleStartTime);\r\n        require(_wallet != address(0));\r\n\r\n        wallet = _wallet;\r\n\r\n        preSaleStartTime = _preSaleStartTime;\r\n        preSaleEndTime = _preSaleEndTime;\r\n\r\n        saleStartTime = _saleStartTime;\r\n        saleEndTime = _saleEndTime;\r\n\r\n        bonusWindow1EndTime = saleStartTime + 1 days;\r\n        bonusWindow2EndTime = saleStartTime + 4 days;\r\n        bonusWindow3EndTime = saleStartTime + 20 days;\r\n    }\r\n\r\n    function getBonus() internal constant returns (uint256, uint256) {\r\n        uint256 numerator = 0;\r\n        uint256 denominator = 100;\r\n\r\n        if(now >= preSaleStartTime && now < preSaleEndTime) {\r\n            numerator = 25;\r\n        } else if(now >= saleStartTime && now < saleEndTime) {\r\n            if(now < bonusWindow1EndTime) {\r\n                numerator = 15;\r\n            } else if(now < bonusWindow2EndTime) {\r\n                numerator = 10;\r\n            } else if(now < bonusWindow3EndTime) {\r\n                numerator = 5;\r\n            } else {\r\n                numerator = 0;\r\n            }\r\n        }\r\n        return (numerator, denominator);\r\n    }\r\n\r\n    function () payable public {\r\n        processContribution();\r\n    }\r\n\r\n    function processContribution() private checkContribution {\r\n        uint256 bonusNum = 0;\r\n        uint256 bonusDenom = 100;\r\n        (bonusNum, bonusDenom) = getBonus();\r\n        uint256 tokenBonusAmount = 0;\r\n        uint256 tokenAmount = safeDiv(safeMul(msg.value, TOKEN_PRICE_NUM), TOKEN_PRICE_DENOM);\r\n\r\n        if(bonusNum > 0) {\r\n            tokenBonusAmount = safeDiv(safeMul(tokenAmount, bonusNum), bonusDenom);\r\n        }\r\n\r\n        uint256 tokenTotalAmount = safeAdd(tokenAmount, tokenBonusAmount);\r\n        balances[msg.sender] = safeAdd(balances[msg.sender], tokenTotalAmount);\r\n\r\n        totalEtherContributed = safeAdd(totalEtherContributed, msg.value);\r\n        totalTokensToSupply = safeAdd(totalTokensToSupply, tokenTotalAmount);\r\n        LogContribution(msg.sender, msg.value, tokenAmount, tokenBonusAmount, now);\r\n    }\r\n\r\n    function transferFunds() public onlyOwner {\r\n        wallet.transfer(this.balance);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"preSaleStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusWindow2EndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusWindow1EndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transferFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRESALE_ETHER_MIN_CONTRIB\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SALE_ETHER_MIN_CONTRIB\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_PRICE_DENOM\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalEtherContributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalTokensToSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_PRICE_NUM\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusWindow3EndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_preSaleStartTime\",\"type\":\"uint256\"},{\"name\":\"_preSaleEndTime\",\"type\":\"uint256\"},{\"name\":\"_saleStartTime\",\"type\":\"uint256\"},{\"name\":\"_saleEndTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountWei\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokenBonus\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LogContribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"TheAbyssCrowdsale","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000f9b21bc8fd2b978b8f6253058223f891267610000000000000000000000000000000000000000000000000000000005a326246000000000000000000000000000000000000000000000000000000005a3291ef000000000000000000000000000000000000000000000000000000005a3291f0000000000000000000000000000000000000000000000000000000005a6b426f","Library":"","SwarmSource":"bzzr://b98cfabde68c8fc09e030c8eee4737575c2b2ec929ed6859354ff1fab162533a"}]}