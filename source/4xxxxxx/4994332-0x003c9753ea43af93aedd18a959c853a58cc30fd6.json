{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n  \r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n  \r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n  \r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) public;\r\n    function burn(uint256 _value) public returns (bool success);\r\n}\r\n\r\ncontract Ownable {\r\n\r\n    address public owner;\r\n\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n}\r\n\r\ncontract IQNICO is Ownable {\r\n    \r\n    using SafeMath for uint256;\r\n    \r\n    uint256 public constant EXCHANGE_RATE = 350;\r\n    uint256 public constant START = 1517313600; // Tuesday, 30-Jan-18 12:00:00 UTC in RFC 2822\r\n\r\n\r\n\r\n    uint256 availableTokens;\r\n    address addressToSendEthereum;\r\n    \r\n    uint public amountRaised;\r\n    uint public deadline;\r\n    uint public price;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    /**\r\n     * Constrctor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    function IQNICO (\r\n        address addressOfTokenUsedAsReward,\r\n        address _addressToSendEthereum\r\n    ) public {\r\n        availableTokens = 700 * 10 ** 18;\r\n        addressToSendEthereum = _addressToSendEthereum;\r\n        deadline = START + 42 days;\r\n        tokenReward = token(addressOfTokenUsedAsReward);\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function () public payable {\r\n        require(now < deadline && now >= START);\r\n        uint256 amount = msg.value;\r\n        uint256 tokens = amount * EXCHANGE_RATE;\r\n        uint256 bonus = getBonus(tokens);\r\n        tokens = tokens.add(bonus);\r\n        balanceOf[msg.sender] += tokens;\r\n        amountRaised += tokens;\r\n        availableTokens -= tokens;\r\n        tokenReward.transfer(msg.sender, tokens);\r\n        addressToSendEthereum.transfer(amount);\r\n    }\r\n    \r\n    \r\n    function getBonus(uint256 _tokens) public constant returns (uint256) {\r\n\r\n        require(_tokens > 0);\r\n        \r\n        if (START <= now && now < START + 1 days) {\r\n\r\n            return _tokens.mul(30).div(100); // 30% first day\r\n\r\n        } else if (START <= now && now < START + 1 weeks) {\r\n\r\n            return _tokens.div(4); // 25% first week\r\n\r\n        } else if (START + 1 weeks <= now && now < START + 2 weeks) {\r\n\r\n            return _tokens.div(5); // 20% second week\r\n\r\n        } else if (START + 2 weeks <= now && now < START + 3 weeks) {\r\n\r\n            return _tokens.mul(15).div(100); // 15% third week\r\n\r\n        } else if (START + 3 weeks <= now && now < START + 4 weeks) {\r\n\r\n            return _tokens.div(10); // 10% fourth week\r\n\r\n        } else if (START + 4 weeks <= now && now < START + 5 weeks) {\r\n\r\n            return _tokens.div(20); // 5% fifth week\r\n\r\n        } else {\r\n\r\n            return 0;\r\n\r\n        }\r\n    }\r\n\r\n    modifier afterDeadline() { \r\n        require(now >= deadline);\r\n        _; \r\n    }\r\n    \r\n    function sellForOtherCoins(address _address,uint amount)  public payable onlyOwner\r\n    {\r\n        uint256 tokens = amount;\r\n        uint256 bonus = getBonus(tokens);\r\n        tokens = tokens.add(bonus);\r\n        availableTokens -= tokens;\r\n        tokenReward.transfer(_address, tokens);\r\n    }\r\n    \r\n    function burnAfterIco() public onlyOwner returns (bool success){\r\n        uint256 balance = availableTokens;\r\n        tokenReward.burn(balance);\r\n        availableTokens = 0;\r\n        return true;\r\n    }\r\n\r\n    function tokensAvailable() public constant returns (uint256) {\r\n        return availableTokens;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"burnAfterIco\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EXCHANGE_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"getBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensAvailable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellForOtherCoins\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"START\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"},{\"name\":\"_addressToSendEthereum\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"IQNICO","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000db8d8b76bc361bacbb72e2c491e06085a97ab310000000000000000000000004dbc779998a53e29a5b2746f58e07a61d0fd418e","Library":"","SwarmSource":"bzzr://07ff9e1f03b5a841d312dddf90ca1602a92dc64d8f799a2940f62df761a3937a"}]}