{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n// Each deployed Splitter contract has a constant array of recipients.\r\n// When the Splitter receives Ether, it will immediately divide this Ether up\r\n// and send it to the recipients.\r\ncontract Splitter\r\n{\r\n\taddress[] public recipients;\r\n\t\r\n\tfunction Splitter(address[] _recipients) public\r\n\t{\r\n\t    require(_recipients.length >= 1);\r\n\t\trecipients = _recipients;\r\n\t}\r\n\t\r\n\tfunction() payable public\r\n\t{\r\n\t\tuint256 amountOfRecipients = recipients.length;\r\n\t\tuint256 etherPerRecipient = msg.value / amountOfRecipients;\r\n\t\t\r\n\t\tif (etherPerRecipient == 0) return;\r\n\t\t\r\n\t\tfor (uint256 i=0; i<amountOfRecipients; i++)\r\n\t\t{\r\n\t\t\trecipients[i].transfer(etherPerRecipient);\r\n\t\t}\r\n\t}\r\n}\r\n\r\ncontract SplitterService\r\n{\r\n    address private owner;\r\n    uint256 public feeForSplitterCreation;\r\n    \r\n    mapping(address => address[]) public addressToSplittersCreated;\r\n    mapping(address => bool) public addressIsSplitter;\r\n    mapping(address => string) public splitterNames;\r\n    \r\n    function SplitterService() public\r\n    {\r\n        owner = msg.sender;\r\n        feeForSplitterCreation = 0.001 ether;\r\n    }\r\n    \r\n    function createSplitter(address[] recipients, string name) external payable\r\n    {\r\n        require(msg.value >= feeForSplitterCreation);\r\n        address newSplitterAddress = new Splitter(recipients);\r\n        addressToSplittersCreated[msg.sender].push(newSplitterAddress);\r\n        addressIsSplitter[newSplitterAddress] = true;\r\n        splitterNames[newSplitterAddress] = name;\r\n    }\r\n    \r\n    ////////////////////////////////////////\r\n    // Owner functions\r\n    \r\n    function setFee(uint256 newFee) external\r\n    {\r\n        require(msg.sender == owner);\r\n        require(newFee <= 0.01 ether);\r\n        feeForSplitterCreation = newFee;\r\n    }\r\n    \r\n    function ownerWithdrawFees() external\r\n    {\r\n        owner.transfer(this.balance);\r\n    }\r\n    \r\n    function transferOwnership(address newOwner) external\r\n    {\r\n        require(msg.sender == owner);\r\n        owner = newOwner;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"splitterNames\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"},{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"createSplitter\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressToSplittersCreated\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeForSplitterCreation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownerWithdrawFees\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressIsSplitter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"SplitterService","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5d8ef4826550793f6f8b629f95c470f222ab3f6d43ebf1a7dfa7160bdaa1e728"}]}