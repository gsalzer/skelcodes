{"status":"1","message":"OK","result":[{"SourceCode":"//\r\n// compiler: solcjs -o ./build/contracts --optimize --abi --bin <this file>\r\n//  version: 0.4.18+commit.9cf6e910.Emscripten.clang\r\n//\r\npragma solidity ^0.4.18;\r\n\r\ncontract owned {\r\n  address public owner;\r\n  function owned() public { owner = msg.sender; }\r\n\r\n  modifier onlyOwner {\r\n    if (msg.sender != owner) { revert(); }\r\n    _;\r\n  }\r\n\r\n  function changeOwner( address newown ) public onlyOwner { owner = newown; }\r\n  function closedown() public onlyOwner { selfdestruct( owner ); }\r\n}\r\n\r\n// token sold by this contract must be ERC20-compliant\r\ninterface ERC20 {\r\n  function transfer(address to, uint256 value) public;\r\n  function balanceOf( address owner ) public constant returns (uint);\r\n}\r\n\r\ncontract ICO is owned {\r\n\r\n  ERC20 public tokenSC;\r\n  address      treasury;\r\n  uint public  start;     // seconds since Jan 1 1970 GMT\r\n  uint public  duration;  // seconds\r\n  uint public  tokpereth; // rate, price\r\n\r\n  function ICO( address _erc20,\r\n                address _treasury,\r\n                uint _startSec,\r\n                uint _durationSec,\r\n                uint _tokpereth ) public\r\n  {\r\n    require( isContract(_erc20) );\r\n    require( _tokpereth > 0 );\r\n\r\n    if (_treasury != address(0)) require( isContract(_treasury) );\r\n\r\n    tokenSC = ERC20( _erc20 );\r\n    treasury = _treasury;\r\n    start = _startSec;\r\n    duration = _durationSec;\r\n    tokpereth = _tokpereth;\r\n  }\r\n\r\n  function setTreasury( address treas ) public onlyOwner { treasury = treas; }\r\n  function setStart( uint newstart ) public onlyOwner { start = newstart; }\r\n  function setRate( uint rate ) public onlyOwner { tokpereth = rate; }\r\n  function setDuration( uint dur ) public onlyOwner { duration = dur; }\r\n\r\n  function() public payable {\r\n    require( msg.value >= 500 finney );\r\n    if (now < start || now > (start + duration)) revert();\r\n\r\n    // quantity =\r\n    //   amountinwei * tokpereth/weipereth * (bonus+100)/100\r\n    // = amountinwei * tokpereth/1e18 * (bonus+100)/100\r\n    // = msg.value * tokpereth/1e20 * (bonus+100)\r\n    uint qty =\r\n      multiply( divide( multiply( msg.value, tokpereth ),\r\n                        100000000000000000000),\r\n                (bonus() + 100) );\r\n\r\n    if (qty > tokenSC.balanceOf(address(this)) || qty < 1)\r\n      revert();\r\n\r\n    tokenSC.transfer( msg.sender, qty );\r\n\r\n    if (treasury != address(0)) treasury.transfer( msg.value );\r\n  }\r\n\r\n  // unsold tokens can be claimed by owner after sale ends\r\n  function claimUnsold() public onlyOwner {\r\n    if ( now < (start + duration) ) revert();\r\n\r\n    tokenSC.transfer( owner, tokenSC.balanceOf(address(this)) );\r\n  }\r\n\r\n  function withdraw( uint amount ) public onlyOwner returns (bool) {\r\n    require ( treasury == address(0) && amount <= this.balance );\r\n    return owner.send( amount );\r\n  }\r\n\r\n  // edited : no bonus scheme this ICO\r\n  function bonus() pure private returns(uint) { return 0; }\r\n\r\n  function isContract( address _a ) constant private returns (bool) {\r\n    uint ecs;\r\n    assembly { ecs := extcodesize(_a) }\r\n    return ecs > 0;\r\n  }\r\n\r\n  // ref: github.com/OpenZeppelin/zeppelin-solidity/\r\n  //      blob/master/contracts/math/SafeMath.sol\r\n  function multiply(uint256 a, uint256 b) pure private returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function divide(uint256 a, uint256 b) pure private returns (uint256) {\r\n    return a / b;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokpereth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closedown\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newown\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSC\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimUnsold\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"treas\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newstart\",\"type\":\"uint256\"}],\"name\":\"setStart\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dur\",\"type\":\"uint256\"}],\"name\":\"setDuration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_erc20\",\"type\":\"address\"},{\"name\":\"_treasury\",\"type\":\"address\"},{\"name\":\"_startSec\",\"type\":\"uint256\"},{\"name\":\"_durationSec\",\"type\":\"uint256\"},{\"name\":\"_tokpereth\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"ICO","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000005fc8cc015187aec8b8883136c03ec8ea4975fa8d000000000000000000000000a1021e9952031f3342b9b737d9bb1840e3a47568000000000000000000000000000000000000000000000000000000005a5bef00000000000000000000000000000000000000000000000000000000000076a7000000000000000000000000000000000000000000000000000000000000029bf8","Library":"","SwarmSource":"bzzr://38db5fd45e708a134a864a06ff7d57812e811e466663ab90b5fead57e4e2690f"}]}