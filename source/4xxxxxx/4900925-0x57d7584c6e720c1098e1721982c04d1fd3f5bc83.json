{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ninterface ERC20 {\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n  function balanceOf(address owner) external view returns (uint256);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n  function approve(address spender, uint256 value) external returns (bool);\r\n}\r\n\r\nlibrary Math {\r\n  struct Fraction {\r\n    uint256 numerator;\r\n    uint256 denominator;\r\n  }\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256 r) {\r\n    r = a * b;\r\n    require((a == 0) || (r / a == b));\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256 r) {\r\n    r = a / b;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256 r) {\r\n    require((r = a - b) <= a);\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256 r) {\r\n    require((r = a + b) >= a);\r\n  }\r\n\r\n  function min(uint256 x, uint256 y) internal pure returns (uint256 r) {\r\n    return x <= y ? x : y;\r\n  }\r\n\r\n  function max(uint256 x, uint256 y) internal pure returns (uint256 r) {\r\n    return x >= y ? x : y;\r\n  }\r\n\r\n  function mulDiv(uint256 value, uint256 m, uint256 d) internal pure returns (uint256 r) {\r\n    // fast path\r\n    if (value == 0 || m == 0) {\r\n      return 0;\r\n    }\r\n\r\n    // try mul\r\n    r = value * m;\r\n    // if mul not overflow\r\n    if (r / value == m) {\r\n      r /= d;\r\n    } else {\r\n      // else / first\r\n      r = mul(value / d, m);\r\n    }\r\n  }\r\n\r\n  function mul(uint256 x, Fraction memory f) internal pure returns (uint256) {\r\n    return mulDiv(x, f.numerator, f.denominator);\r\n  }\r\n\r\n  function div(uint256 x, Fraction memory f) internal pure returns (uint256) {\r\n    return mulDiv(x, f.denominator, f.numerator);\r\n  }\r\n}\r\n\r\ncontract PrivateSaleMacau {\r\n\r\n  using Math for uint256;\r\n\r\n  struct Info {\r\n    uint256 weiPaid;\r\n    uint256 fstVested;\r\n  }\r\n\r\n  event BuyFST(address indexed user, uint256 fstValue, uint256 weiValue, uint256 timestamp);\r\n  event Release(address indexed user, uint256 value);\r\n  event Refund(address indexed user, uint256 value);\r\n  event Collect(uint256 weiAmount, uint256 fstAmount);\r\n\r\n  // 330M FST\r\n  uint256 public constant fstTotalSupply = 330000000 * (10 ** 18);\r\n\r\n  // 5%\r\n  uint256 public constant fstPrivateSalePortionNumerator   = 5;\r\n  uint256 public constant fstPrivateSalePortionDenominator = 100;\r\n\r\n  // 1 ETH = 3600 FST in private sale\r\n  uint256 public constant fstUnitPriceNumerator   = 1;\r\n  uint256 public constant fstUnitPriceDenominator = 3600;\r\n\r\n  // 5% of 330M FST\r\n  uint256 public constant saleCap =\r\n    fstTotalSupply * fstPrivateSalePortionNumerator / fstPrivateSalePortionDenominator;\r\n\r\n  // minimum wei value = 10 ether\r\n  uint256 public constant minWeiValue = 10 ether;\r\n\r\n  // start time, end time\r\n  uint256 public constant startTime = 1515837600; // Saturday, January 13, 2018 6:00:00 PM GMT+08:00\r\n  uint256 public constant endTime   = 1516269600; // Thursday, January 18, 2018 6:00:00 PM GMT+08:00\r\n\r\n  // private sale progress\r\n  uint256 public fstSold     = 0;\r\n  uint256 public weiReceived = 0;\r\n  uint256 public weiLiquid   = 0;\r\n  uint256 public weiRefund   = 0;\r\n\r\n  mapping (address => Info) public users;\r\n\r\n  // Funder Smart Token\r\n  ERC20 public token;\r\n\r\n  // manager\r\n  address public manager;\r\n\r\n  function PrivateSaleMacau (ERC20 _token) public {\r\n    token   = _token;\r\n    manager = msg.sender;\r\n  }\r\n\r\n  function buy () payable public returns (bool) {\r\n    require(\r\n      minWeiValue     <= msg.value &&\r\n      fstSold         <  saleCap   &&\r\n      block.timestamp >= startTime &&\r\n      block.timestamp <  endTime\r\n    );\r\n\r\n    uint256 eth = msg.value;\r\n    uint256 fst = eth.mul(fstUnitPriceDenominator).div(fstUnitPriceNumerator);\r\n\r\n    uint256 fstAvailable = saleCap - fstSold;\r\n    if (fst > fstAvailable) {\r\n      uint256 refund = (fst - fstAvailable).mul(fstUnitPriceNumerator).div(fstUnitPriceDenominator);\r\n      msg.sender.transfer(refund); // 2300 gas only\r\n      eth -= refund;\r\n      fst = fstAvailable;\r\n    }\r\n\r\n    Info storage user = users[msg.sender];\r\n    user.weiPaid += eth;\r\n    user.fstVested += fst;\r\n    weiReceived += eth;\r\n    fstSold += fst;\r\n\r\n    BuyFST(msg.sender, fst, eth, block.timestamp);\r\n    return true;\r\n  }\r\n\r\n  function () payable public {\r\n    require(buy());\r\n  }\r\n\r\n  function transferOwnership (address _to) public returns (bool) {\r\n    require(msg.sender == manager);\r\n    manager = _to;\r\n    return true;\r\n  }\r\n\r\n  // on kyc result\r\n  function processPurchase(uint256[] results) public {\r\n    require(msg.sender == manager);\r\n\r\n    for (uint256 i = 0; i < results.length; i++) {\r\n      address userAddress = address(results[i] >> 96);\r\n      Info storage user = users[userAddress];\r\n      require(user.weiPaid > 0);\r\n\r\n      // kyc success\r\n      if ((results[i] & 0x1) == 1) {\r\n        weiLiquid += user.weiPaid;\r\n        token.transfer(userAddress, user.fstVested);\r\n        Release(msg.sender, user.fstVested);\r\n      } else {\r\n        fstSold -= user.fstVested;\r\n        weiRefund += user.weiPaid;\r\n        userAddress.transfer(user.weiPaid);\r\n        Refund(msg.sender, user.weiPaid);\r\n      }\r\n\r\n      delete users[userAddress];\r\n    }\r\n  }\r\n\r\n  function finalize() public {\r\n    require(msg.sender == manager && block.timestamp >= endTime);\r\n\r\n    uint256 weiVested = weiReceived - weiLiquid - weiRefund;\r\n    uint256 weiAvailable = this.balance - weiVested;\r\n    if (weiAvailable > 0) {\r\n      msg.sender.transfer(weiAvailable);\r\n    }\r\n\r\n    uint256 tokenAvailable = token.balanceOf(this);\r\n    if (tokenAvailable > 0) {\r\n      token.transfer(msg.sender, tokenAvailable);      \r\n    }\r\n    \r\n    Collect(weiAvailable, tokenAvailable);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"minWeiValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRefund\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fstUnitPriceNumerator\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fstUnitPriceDenominator\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fstSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fstPrivateSalePortionDenominator\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"results\",\"type\":\"uint256[]\"}],\"name\":\"processPurchase\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fstTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"weiPaid\",\"type\":\"uint256\"},{\"name\":\"fstVested\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiLiquid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fstPrivateSalePortionNumerator\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"fstValue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"weiValue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BuyFST\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Release\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"weiAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fstAmount\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"}]","ContractName":"PrivateSaleMacau","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"330000000","ConstructorArguments":"000000000000000000000000da2b561915b8100ae341898a38f010491b61af34","Library":"","SwarmSource":"bzzr://89fbc91fd12b9813b63536e33ad4e630102cf1774ef67d71f0d25f5e65f8e9d3"}]}