{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract MyOwned {\r\n\r\n    address public owner;\r\n\r\n    function MyOwned () \r\n\r\n        public { \r\n            owner = msg.sender; \r\n    }\r\n\r\n    modifier onlyOwner { \r\n\r\n        require (msg.sender == owner); \r\n        _; \r\n    }\r\n\r\n    function transferOwnership ( \r\n\r\n        address newOwner) \r\n\r\n        public onlyOwner { \r\n            owner = newOwner; \r\n        }\r\n}\r\n\r\ninterface tokenRecipient { \r\n\r\n    function receiveApproval (\r\n\r\n        address _from, \r\n        uint256 _value, \r\n        address _token, \r\n        bytes _extraData) \r\n        public; \r\n}\r\n\r\ncontract MyToken is MyOwned {   \r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n    \r\n    uint256 public sellPrice;\r\n    uint256 public buyPrice;    \r\n    \r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => bool) public frozenAccount;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n    event Burn (address indexed from, uint256 value);\r\n    event FrozenFunds (address target,bool frozen);\r\n    event Transfer (address indexed from,address indexed to,uint256 value);\r\n    \r\n    function MyToken (\r\n\r\n        string tokenName,\r\n        string tokenSymbol,\r\n        uint8 decimalUnits,\r\n        uint256 initialSupply) \r\n\r\n        public {        \r\n\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n        decimals = decimalUnits;\r\n        totalSupply = initialSupply;\r\n        balanceOf[msg.sender] = initialSupply;\r\n    }\r\n    \r\n    function freezeAccount (\r\n\r\n        address target,\r\n        bool freeze) \r\n\r\n        public onlyOwner {\r\n\r\n        frozenAccount[target] = freeze;\r\n        FrozenFunds(target, freeze);\r\n    }\r\n\r\n    function _transfer (\r\n\r\n        address _from, \r\n        address _to, \r\n        uint _value) \r\n\r\n        internal {\r\n\r\n        require (_to != 0x0); \r\n        require (balanceOf[_from] >= _value); \r\n        require (balanceOf[_to] + _value >= balanceOf[_to]); \r\n\r\n        require(!frozenAccount[_from]); \r\n        require(!frozenAccount[_to]); \r\n\r\n        balanceOf[_from] -= _value;  \r\n        balanceOf[_to] += _value; \r\n        Transfer(_from, _to, _value);\r\n\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n\r\n    function transfer (\r\n\r\n        address _to, \r\n        uint256 _value) \r\n\r\n        public {\r\n\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    function transferFrom (\r\n\r\n        address _from, \r\n        address _to, \r\n        uint256 _value) \r\n\r\n        public returns (bool success) {\r\n\r\n        require(_value <= allowance[_from][msg.sender]); \r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve (\r\n\r\n        address _spender, \r\n        uint256 _value) \r\n\r\n        public returns (bool success) {\r\n\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n\r\n    function approveAndCall (\r\n\r\n        address _spender, \r\n        uint256 _value, \r\n        bytes _extraData)\r\n\r\n        public returns (bool success) {\r\n\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n\r\n        if (approve(_spender, _value)) {\r\n\r\n            spender.receiveApproval(\r\n                msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function burnSupply (\r\n\r\n        uint256 _value) \r\n\r\n        public onlyOwner returns (bool success) {\r\n\r\n        totalSupply -= _value;  \r\n\r\n        return true;\r\n    }\r\n\r\n    function burnFrom (\r\n\r\n        address _from, \r\n        uint256 _value) \r\n\r\n        public onlyOwner returns (bool success) {\r\n\r\n        require(balanceOf[_from] >= _value); \r\n\r\n        balanceOf[_from] -= _value; \r\n\r\n        Burn(_from, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function mintToken (\r\n\r\n        address target, \r\n        uint256 mintedAmount) \r\n\r\n        public onlyOwner {\r\n\r\n        balanceOf[target] += mintedAmount;\r\n        totalSupply += mintedAmount;\r\n        Transfer(0, this, mintedAmount);\r\n        Transfer(this, target, mintedAmount);\r\n    }\r\n\r\n    function mintTo (\r\n\r\n        address target, \r\n        uint256 mintedTo) \r\n\r\n        public onlyOwner {\r\n\r\n        balanceOf[target] += mintedTo;\r\n\r\n        Transfer(0, this, mintedTo);\r\n        Transfer(this, target, mintedTo);\r\n    }\r\n\r\n    function setPrices (\r\n\r\n        uint256 newSellPrice, \r\n        uint256 newBuyPrice) \r\n\r\n        public onlyOwner {\r\n\r\n        sellPrice = newSellPrice;\r\n        buyPrice = newBuyPrice;\r\n    }\r\n\r\n    function buy () \r\n\r\n        public payable {\r\n\r\n        uint amount = msg.value / buyPrice; \r\n        _transfer(this, msg.sender, amount);\r\n    }\r\n\r\n    function sell (\r\n\r\n        uint256 amount) \r\n\r\n        public {\r\n\r\n        require(this.balance >= amount * sellPrice); \r\n        _transfer(msg.sender, this, amount); \r\n        msg.sender.transfer(amount * sellPrice);  \r\n    }    \r\n    \r\n    function setName (\r\n\r\n        string newName) \r\n\r\n        public onlyOwner {\r\n\r\n        name = newName;\r\n    }\r\n    \r\n    function setSymbol (\r\n\r\n        string newSymbol) \r\n\r\n        public onlyOwner {\r\n\r\n        symbol = newSymbol;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedTo\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newSymbol\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnSupply\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"MyToken","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000002c68af0bb140000000000000000000000000000000000000000000000000000000000000000000b4d6564696120436861696e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034d44430000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://019db1b75fedf0548eb7e719483876bf498b0b5da57ef66a7673354b2cc00f07"}]}