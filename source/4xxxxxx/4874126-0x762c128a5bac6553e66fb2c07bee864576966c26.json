{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\ncontract BlockFoodPreSale {\r\n\r\n    enum ApplicationState {Unset, Pending, Rejected, Accepted, Refunded}\r\n\r\n    struct Application {\r\n        uint contribution;\r\n        string id;\r\n        ApplicationState state;\r\n    }\r\n\r\n    struct Applicant {\r\n        address applicant;\r\n        string id;\r\n    }\r\n\r\n    /*\r\n        Set by constructor\r\n    */\r\n    address public owner;\r\n    address public target;\r\n    uint public endDate;\r\n    uint public minContribution;\r\n    uint public minCap;\r\n    uint public maxCap;\r\n\r\n    /*\r\n        Set by functions\r\n    */\r\n    mapping(address => Application) public applications;\r\n    Applicant[] public applicants;\r\n    uint public contributionPending;\r\n    uint public contributionRejected;\r\n    uint public contributionAccepted;\r\n    uint public withdrawn;\r\n\r\n    /*\r\n        Events\r\n    */\r\n    event PendingApplication(address applicant, uint contribution, string id);\r\n    event RejectedApplication(address applicant, uint contribution, string id);\r\n    event AcceptedApplication(address applicant, uint contribution, string id);\r\n    event Withdrawn(address target, uint amount);\r\n    event Refund(address target, uint amount);\r\n    event ContractUpdate(address owner, address target, uint minContribution, uint minCap, uint maxCap);\r\n\r\n    /*\r\n        Modifiers\r\n    */\r\n    modifier onlyBeforeEnd() {\r\n        require(now <= endDate);\r\n        _;\r\n    }\r\n\r\n    modifier onlyMoreThanMinContribution() {\r\n        require(msg.value >= minContribution);\r\n        _;\r\n    }\r\n\r\n    modifier onlyMaxCapNotReached() {\r\n        require((contributionAccepted + msg.value) <= maxCap);\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwner () {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyNewApplicant () {\r\n        require(applications[msg.sender].state == ApplicationState.Unset);\r\n        _;\r\n    }\r\n\r\n    modifier onlyPendingApplication(address applicant) {\r\n        require(applications[applicant].contribution > 0);\r\n        require(applications[applicant].state == ApplicationState.Pending);\r\n        _;\r\n    }\r\n\r\n    modifier onlyMinCapReached() {\r\n        require(contributionAccepted >= minCap);\r\n        _;\r\n    }\r\n\r\n    modifier onlyNotWithdrawn(uint amount) {\r\n        require(withdrawn + amount <= contributionAccepted);\r\n        _;\r\n    }\r\n\r\n    modifier onlyFailedPreSale() {\r\n        require(now >= endDate);\r\n        require(contributionAccepted + contributionPending < minCap);\r\n        _;\r\n    }\r\n\r\n    modifier onlyAcceptedApplication(address applicant) {\r\n        require(applications[applicant].state == ApplicationState.Accepted);\r\n        _;\r\n    }\r\n\r\n    modifier onlyAfterTwoMonthsAfterTheEnd() {\r\n        require(now > (endDate + 60 days));\r\n        _;\r\n    }\r\n\r\n    modifier sendContractUpdateEvent() {\r\n        _;\r\n        ContractUpdate(owner, target, minContribution, minCap, maxCap);\r\n    }\r\n\r\n    /*\r\n        Constructor\r\n    */\r\n    function BlockFoodPreSale(\r\n        address target_,\r\n        uint endDate_,\r\n        uint minContribution_,\r\n        uint minCap_,\r\n        uint maxCap_\r\n    )\r\n    public\r\n    {\r\n        owner = msg.sender;\r\n\r\n        target = target_;\r\n        endDate = endDate_;\r\n        minContribution = minContribution_;\r\n        minCap = minCap_;\r\n        maxCap = maxCap_;\r\n    }\r\n\r\n    /*\r\n       Public functions\r\n    */\r\n\r\n    function apply(string id)\r\n    payable\r\n    public\r\n    onlyBeforeEnd\r\n    onlyMoreThanMinContribution\r\n    onlyMaxCapNotReached\r\n    onlyNewApplicant\r\n    {\r\n        applications[msg.sender] = Application(msg.value, id, ApplicationState.Pending);\r\n        applicants.push(Applicant(msg.sender, id));\r\n        contributionPending += msg.value;\r\n        PendingApplication(msg.sender, msg.value, id);\r\n    }\r\n\r\n    function refund()\r\n    public\r\n    onlyFailedPreSale\r\n    onlyAcceptedApplication(msg.sender)\r\n    {\r\n        applications[msg.sender].state = ApplicationState.Refunded;\r\n        msg.sender.transfer(applications[msg.sender].contribution);\r\n        Refund(msg.sender, applications[msg.sender].contribution);\r\n    }\r\n\r\n    /*\r\n        Restricted functions (owner only)\r\n    */\r\n\r\n    function reject(address applicant)\r\n    public\r\n    onlyOwner\r\n    onlyPendingApplication(applicant)\r\n    {\r\n        applications[applicant].state = ApplicationState.Rejected;\r\n\r\n        // protection against function reentry on an overriden transfer() function\r\n        uint contribution = applications[applicant].contribution;\r\n        applications[applicant].contribution = 0;\r\n        applicant.transfer(contribution);\r\n\r\n        contributionPending -= contribution;\r\n        contributionRejected += contribution;\r\n\r\n        RejectedApplication(applicant, contribution, applications[applicant].id);\r\n    }\r\n\r\n    function accept(address applicant)\r\n    public\r\n    onlyOwner\r\n    onlyPendingApplication(applicant)\r\n    {\r\n        applications[applicant].state = ApplicationState.Accepted;\r\n\r\n        contributionPending -= applications[applicant].contribution;\r\n        contributionAccepted += applications[applicant].contribution;\r\n\r\n        AcceptedApplication(applicant, applications[applicant].contribution, applications[applicant].id);\r\n    }\r\n\r\n    function withdraw(uint amount)\r\n    public\r\n    onlyOwner\r\n    onlyMinCapReached\r\n    onlyNotWithdrawn(amount)\r\n    {\r\n        withdrawn += amount;\r\n        target.transfer(amount);\r\n        Withdrawn(target, amount);\r\n    }\r\n\r\n    /*\r\n        Views\r\n    */\r\n\r\n    function getApplicantsLength()\r\n    view\r\n    public\r\n    returns (uint)\r\n    {\r\n        return applicants.length;\r\n    }\r\n\r\n    function getMaximumContributionPossible()\r\n    view\r\n    public\r\n    returns (uint)\r\n    {\r\n        return maxCap - contributionAccepted;\r\n    }\r\n\r\n    /*\r\n        Maintenance functions\r\n    */\r\n\r\n    function failsafe()\r\n    public\r\n    onlyOwner\r\n    onlyAfterTwoMonthsAfterTheEnd\r\n    {\r\n        target.transfer(this.balance);\r\n    }\r\n\r\n    function changeOwner(address owner_)\r\n    public\r\n    onlyOwner\r\n    sendContractUpdateEvent\r\n    {\r\n        owner = owner_;\r\n    }\r\n\r\n    function changeTarget(address target_)\r\n    public\r\n    onlyOwner\r\n    sendContractUpdateEvent\r\n    {\r\n        target = target_;\r\n    }\r\n\r\n    function changeMinCap(uint minCap_)\r\n    public\r\n    onlyOwner\r\n    sendContractUpdateEvent\r\n    {\r\n        minCap = minCap_;\r\n    }\r\n\r\n    function changeMaxCap(uint maxCap_)\r\n    public\r\n    onlyOwner\r\n    sendContractUpdateEvent\r\n    {\r\n        maxCap = maxCap_;\r\n    }\r\n\r\n    function changeMinContribution(uint minContribution_)\r\n    public\r\n    onlyOwner\r\n    sendContractUpdateEvent\r\n    {\r\n        minContribution = minContribution_;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"minCap_\",\"type\":\"uint256\"}],\"name\":\"changeMinCap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"failsafe\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contributionRejected\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"apply\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"applicants\",\"outputs\":[{\"name\":\"applicant\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contributionPending\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"maxCap_\",\"type\":\"uint256\"}],\"name\":\"changeMaxCap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"applications\",\"outputs\":[{\"name\":\"contribution\",\"type\":\"uint256\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"applicant\",\"type\":\"address\"}],\"name\":\"accept\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMaximumContributionPossible\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"applicant\",\"type\":\"address\"}],\"name\":\"reject\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getApplicantsLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"minContribution_\",\"type\":\"uint256\"}],\"name\":\"changeMinContribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contributionAccepted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target_\",\"type\":\"address\"}],\"name\":\"changeTarget\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"target_\",\"type\":\"address\"},{\"name\":\"endDate_\",\"type\":\"uint256\"},{\"name\":\"minContribution_\",\"type\":\"uint256\"},{\"name\":\"minCap_\",\"type\":\"uint256\"},{\"name\":\"maxCap_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"applicant\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"contribution\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"string\"}],\"name\":\"PendingApplication\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"applicant\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"contribution\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"string\"}],\"name\":\"RejectedApplication\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"applicant\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"contribution\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"string\"}],\"name\":\"AcceptedApplication\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"minContribution\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"minCap\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxCap\",\"type\":\"uint256\"}],\"name\":\"ContractUpdate\",\"type\":\"event\"}]","ContractName":"BlockFoodPreSale","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000ce138e494adaaa89e989d52ac565abcfbf22755e000000000000000000000000000000000000000000000000000000005a7c7400000000000000000000000000000000000000000000000000016345785d8a00000000000000000000000000000000000000000000000000056bc75e2d6310000000000000000000000000000000000000000000000000000ad78ebc5ac6200000","Library":"","SwarmSource":"bzzr://b726b7baf2cb24e7936dabf25a52dde4bf2928ba20cbd6fe7f83d4b47bfe587d"}]}