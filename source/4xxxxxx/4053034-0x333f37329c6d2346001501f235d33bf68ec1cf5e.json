{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract Ambi2 {\r\n    function hasRole(address, bytes32, address) constant returns(bool);\r\n    function claimFor(address, address) returns(bool);\r\n    function isOwner(address, address) constant returns(bool);\r\n}\r\n\r\ncontract Ambi2Enabled {\r\n    Ambi2 ambi2;\r\n\r\n    modifier onlyRole(bytes32 _role) {\r\n        if (address(ambi2) != 0x0 && ambi2.hasRole(this, _role, msg.sender)) {\r\n            _;\r\n        }\r\n    }\r\n\r\n    // Perform only after claiming the node, or claim in the same tx.\r\n    function setupAmbi2(Ambi2 _ambi2) returns(bool) {\r\n        if (address(ambi2) != 0x0) {\r\n            return false;\r\n        }\r\n\r\n        ambi2 = _ambi2;\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract Ambi2EnabledFull is Ambi2Enabled {\r\n    // Setup and claim atomically.\r\n    function setupAmbi2(Ambi2 _ambi2) returns(bool) {\r\n        if (address(ambi2) != 0x0) {\r\n            return false;\r\n        }\r\n        if (!_ambi2.claimFor(this, msg.sender) && !_ambi2.isOwner(this, msg.sender)) {\r\n            return false;\r\n        }\r\n\r\n        ambi2 = _ambi2;\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract EToken2Interface {\r\n    function reissueAsset(bytes32 _symbol, uint _value) returns(bool);\r\n    function changeOwnership(bytes32 _symbol, address _newOwner) returns(bool);\r\n}\r\n\r\ncontract AssetProxy {\r\n    EToken2Interface public etoken2;\r\n    bytes32 public etoken2Symbol;\r\n    function transferWithReference(address _to, uint _value, string _reference) returns (bool);\r\n}\r\n\r\ncontract BloquidIssuer is Ambi2EnabledFull {\r\n\r\n    AssetProxy public assetProxy;\r\n\r\n    function setupAssetProxy(AssetProxy _assetProxy) onlyRole(\"__root__\") returns(bool) {\r\n        if ((address(assetProxy) != 0x0) || (address(_assetProxy) == 0x0)) {\r\n            return false;\r\n        }\r\n        assetProxy = _assetProxy;\r\n        return true;\r\n    }\r\n\r\n    function issueTokens(uint _value, string _regNumber) onlyRole(\"issuer\") returns(bool) {\r\n        bytes32 symbol = assetProxy.etoken2Symbol();\r\n        EToken2Interface etoken2 = assetProxy.etoken2();\r\n        if (!etoken2.reissueAsset(symbol, _value)) {\r\n            return false;\r\n        }\r\n        if (!assetProxy.transferWithReference(msg.sender, _value, _regNumber)) {\r\n            throw;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function changeAssetOwner(address _newOwner) onlyRole(\"__root__\") returns(bool) {\r\n        if (_newOwner == 0x0) {\r\n            return false;\r\n        }\r\n        bytes32 symbol = assetProxy.etoken2Symbol();\r\n        EToken2Interface etoken2 = assetProxy.etoken2();\r\n        if (!etoken2.changeOwnership(symbol, _newOwner)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"assetProxy\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ambi2\",\"type\":\"address\"}],\"name\":\"setupAmbi2\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeAssetOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_assetProxy\",\"type\":\"address\"}],\"name\":\"setupAssetProxy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_regNumber\",\"type\":\"string\"}],\"name\":\"issueTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"}]","ContractName":"BloquidIssuer","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"0","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://dd1f801f91b17d33d7e0a5a8b642814a3fbaa4818caf5e862cd128ef52b6db8b"}]}