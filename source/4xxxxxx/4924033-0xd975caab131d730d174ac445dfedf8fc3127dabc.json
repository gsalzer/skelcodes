{"status":"1","message":"OK","result":[{"SourceCode":"// Timelock\r\n// lock withdrawal for a set time period\r\n// @authors:\r\n// Cody Burns <dontpanic@codywburns.com>\r\n// license: Apache 2.0\r\n// version:\r\n\r\npragma solidity ^0.4.19;\r\n\r\n// Intended use: lock withdrawal for a set time period\r\n//\r\n// Status: functional\r\n// still needs:\r\n// submit pr and issues to https://github.com/realcodywburns/\r\n//version 0.2.0\r\n\r\n\r\ncontract timelock {\r\n\r\n////////////////\r\n//Global VARS//////////////////////////////////////////////////////////////////////////\r\n//////////////\r\n\r\n    uint public freezeBlocks = 5;       //number of blocks to keep a lockers (5)\r\n\r\n///////////\r\n//MAPPING/////////////////////////////////////////////////////////////////////////////\r\n///////////\r\n\r\n    struct locker{\r\n      uint freedom;\r\n      uint bal;\r\n    }\r\n    mapping (address => locker) public lockers;\r\n\r\n///////////\r\n//EVENTS////////////////////////////////////////////////////////////////////////////\r\n//////////\r\n\r\n    event Locked(address indexed locker, uint indexed amount);\r\n    event Released(address indexed locker, uint indexed amount);\r\n\r\n/////////////\r\n//MODIFIERS////////////////////////////////////////////////////////////////////\r\n////////////\r\n\r\n//////////////\r\n//Operations////////////////////////////////////////////////////////////////////////\r\n//////////////\r\n\r\n/* public functions */\r\n    function() payable public {\r\n        locker storage l = lockers[msg.sender];\r\n        l.freedom =  block.number + freezeBlocks; //this will reset the freedom clock\r\n        l.bal = l.bal + msg.value;\r\n\r\n        Locked(msg.sender, msg.value);\r\n    }\r\n\r\n    function withdraw() public {\r\n        locker storage l = lockers[msg.sender];\r\n        require (block.number > l.freedom && l.bal > 0);\r\n\r\n        // avoid recursive call\r\n\r\n        uint value = l.bal;\r\n        l.bal = 0;\r\n        msg.sender.transfer(value);\r\n        Released(msg.sender, value);\r\n    }\r\n\r\n////////////\r\n//OUTPUTS///////////////////////////////////////////////////////////////////////\r\n//////////\r\n\r\n////////////\r\n//SAFETY ////////////////////////////////////////////////////////////////////\r\n//////////\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockers\",\"outputs\":[{\"name\":\"freedom\",\"type\":\"uint256\"},{\"name\":\"bal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"freezeBlocks\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"locker\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"locker\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"}]","ContractName":"timelock","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://44bdc2a16ce451fa6bb744502c1d6325b0d6c77c7cfa3a55eedc22c96376afd8"}]}