{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n\r\ncontract FarmCoin {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function allowance(address owner, address spender) constant returns (uint);\r\n  function transfer(address to, uint value) returns (bool ok);\r\n  function transferFrom(address from, address to, uint value) returns (bool ok);\r\n  function approve(address spender, uint value) returns (bool ok);\r\n  function mintToken(address to, uint256 value) returns (uint256);\r\n  function changeTransfer(bool allowed);\r\n}\r\n\r\n \r\ncontract FarmCoinSale {\r\n\r\n    uint256 public maxMintable;\r\n    uint256 public totalMinted;\r\n    uint256 public decimals = 18;\r\n    uint256 rate;\r\n    uint public endBlock;\r\n    uint public startBlock;\r\n    uint public exchangeRate= rate;\r\n    uint public startTime;\r\n    bool public isFunding;\r\n    FarmCoin public Token;\r\n    address public ETHWallet;\r\n    uint256 public heldTotal;\r\n\r\n    bool private configSet;\r\n    address public creator;\r\n\r\n    mapping (address => uint256) public heldTokens;\r\n    mapping (address => uint) public heldTimeline;\r\n\r\n    event Contribution(address from, uint256 amount);\r\n    event ReleaseTokens(address from, uint256 amount);\r\n\r\n\r\n    function FarmCoinSale() {\r\n        startBlock = block.number;\r\n        maxMintable = 4000000000000000000000000; // 3 million max sellable (18 decimals)\r\n        ETHWallet = 0x3b444fC8c2C45DCa5e6610E49dC54423c5Dcd86E;\r\n        isFunding = true;\r\n        creator = msg.sender;\r\n        createHeldCoins();\r\n        startTime = 1517461200000;\r\n        exchangeRate= rate;\r\n        }\r\n\r\n // start and end dates where crowdsale is allowed (both inclusive)\r\n  uint256 constant public START = 1517461200000; // +new Date(2018, 2, 1) / 1000\r\n  uint256 constant public END = 1522555200000; // +new Date(2018, 4, 1) / 1000\r\n\r\n// @return the rate in FARM per 1 ETH according to the time of the tx and the FARM pricing program.\r\n    // @Override\r\n  function getRate() constant returns (uint256 rate) {\r\n    if      (now < START)            return rate = 840; // presale, 40% bonus\r\n    else if (now <= START +  6 days) return rate = 810; // day 1 to 6, 35% bonus\r\n    else if (now <= START + 13 days) return rate = 780; // day 7 to 13, 30% bonus\r\n    else if (now <= START + 20 days) return rate = 750; // day 14 to 20, 25% bonus\r\n    else if (now <= START + 28 days) return rate = 720; // day 21 to 28, 20% bonus\r\n    return rate = 600; // no bonus\r\n  }\r\n\r\n    // setup function to be ran only 1 time\r\n    // setup token address\r\n    // setup end Block number\r\n    function setup(address TOKEN, uint endBlockTime) {\r\n        require(!configSet);\r\n        Token = FarmCoin(TOKEN);\r\n        endBlock = endBlockTime;\r\n        configSet = true;\r\n    }\r\n\r\n    function closeSale() external {\r\n      require(msg.sender==creator);\r\n      isFunding = false;\r\n    }\r\n\r\n    // CONTRIBUTE FUNCTION\r\n    // converts ETH to TOKEN and sends new TOKEN to the sender\r\n    function contribute() external payable {\r\n        require(msg.value>0);\r\n        require(isFunding);\r\n        require(block.number <= endBlock);\r\n        uint256 amount = msg.value * exchangeRate;\r\n        uint256 total = totalMinted + amount;\r\n        require(total<=maxMintable);\r\n        totalMinted += total;\r\n        ETHWallet.transfer(msg.value);\r\n        Token.mintToken(msg.sender, amount);\r\n        Contribution(msg.sender, amount);\r\n    }\r\n\r\n    // update the ETH/COIN rate\r\n    function updateRate(uint256 rate) external {\r\n        require(msg.sender==creator);\r\n        require(isFunding);\r\n        exchangeRate = rate;\r\n    }\r\n\r\n    // change creator address\r\n    function changeCreator(address _creator) external {\r\n        require(msg.sender==creator);\r\n        creator = _creator;\r\n    }\r\n\r\n    // change transfer status for FarmCoin token\r\n    function changeTransferStats(bool _allowed) external {\r\n        require(msg.sender==creator);\r\n        Token.changeTransfer(_allowed);\r\n    }\r\n\r\n    // internal function that allocates a specific amount of ATYX at a specific block number.\r\n    // only ran 1 time on initialization\r\n    function createHeldCoins() internal {\r\n        // TOTAL SUPPLY = 5,000,000\r\n        createHoldToken(msg.sender, 1000);\r\n        createHoldToken(0xd9710D829fa7c36E025011b801664009E4e7c69D, 100000000000000000000000);\r\n        createHoldToken(0xd9710D829fa7c36E025011b801664009E4e7c69D, 100000000000000000000000);\r\n    }\r\n\r\n    // function to create held tokens for developer\r\n    function createHoldToken(address _to, uint256 amount) internal {\r\n        heldTokens[_to] = amount;\r\n        heldTimeline[_to] = block.number + 0;\r\n        heldTotal += amount;\r\n        totalMinted += heldTotal;\r\n    }\r\n\r\n    // function to release held tokens for developers\r\n    function releaseHeldCoins() external {\r\n        uint256 held = heldTokens[msg.sender];\r\n        uint heldBlock = heldTimeline[msg.sender];\r\n        require(!isFunding);\r\n        require(held >= 0);\r\n        require(block.number >= heldBlock);\r\n        heldTokens[msg.sender] = 0;\r\n        heldTimeline[msg.sender] = 0;\r\n        Token.mintToken(msg.sender, held);\r\n        ReleaseTokens(msg.sender, held);\r\n    }\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"heldTimeline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFunding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETHWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxMintable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"name\":\"rate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"updateRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseHeldCoins\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"changeCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"heldTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allowed\",\"type\":\"bool\"}],\"name\":\"changeTransferStats\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"START\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"heldTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"END\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"TOKEN\",\"type\":\"address\"},{\"name\":\"endBlockTime\",\"type\":\"uint256\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReleaseTokens\",\"type\":\"event\"}]","ContractName":"FarmCoinSale","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0d331a875619c2086689f58b43d3b6db9c4414ab0d462916711ae27647bd7b49"}]}