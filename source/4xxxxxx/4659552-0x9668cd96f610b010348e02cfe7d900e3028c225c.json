{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\ncontract ERC721 {\r\n    function totalSupply() public view returns (uint256 total);\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function ownerOf(uint256 _tokenId) external view returns (address owner);\r\n    function approve(address _to, uint256 _tokenId) external;\r\n    function transfer(address _to, uint256 _tokenId) external;\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) external;\r\n    event Transfer(address from, address to, uint256 tokenId);\r\n    event Approval(address owner, address approved, uint256 tokenId);\r\n    function supportsInterface(bytes4 _interfaceID) external view returns (bool);\r\n}\r\ncontract Owned {\r\n    address public owner;\r\n\r\n    function Owned () public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        if (msg.sender != owner) {\r\n            revert();\r\n        }\r\n        _;\r\n    }\r\n    function changeOwner (address newOwner) public onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n}\r\ncontract Targeted is Owned {\r\n    ERC721 public target;\r\n    function changeTarget (address newTarget) public onlyOwner {\r\n        target = ERC721(newTarget);\r\n    }\r\n}\r\ncontract CatHODL is Targeted {\r\n    uint public releaseDate;\r\n    mapping (uint => address) public catOwners;\r\n    function CatHODL () public {\r\n        releaseDate = now + 1 years;\r\n    }\r\n    function bringCat (uint catId) public {\r\n        require(now < releaseDate ); // If you can get it anytime, its not forced HODL!\r\n        catOwners[catId] = msg.sender; // Set the user as owner.\r\n        target.transferFrom(msg.sender, this, catId); // Get the cat, throws if fails\r\n    }\r\n    function getCat (uint catId) public {\r\n        require(catOwners[catId] == msg.sender);\r\n        require(now >= releaseDate);\r\n        catOwners[catId] = 0x0;\r\n        target.transfer(msg.sender, catId);\r\n    }\r\n    function doSuicide () public onlyOwner {\r\n        selfdestruct(owner);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"doSuicide\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"catId\",\"type\":\"uint256\"}],\"name\":\"getCat\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"catOwners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"changeTarget\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"catId\",\"type\":\"uint256\"}],\"name\":\"bringCat\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"CatHODL","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://44ade72396376952ec98d612036d1a50d89970ae3b60f0ad88184cde19e7aef8"}]}