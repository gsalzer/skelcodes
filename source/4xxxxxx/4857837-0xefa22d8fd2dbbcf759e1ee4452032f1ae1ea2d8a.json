{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n/* This is a simple contract\r\n   to let people write a phrase\r\n   or SHA256 hash to the blockchain.\r\n   Optional signatures can be purchased by 0.001 ETH,\r\n   if someone finds it useful for an application.\r\n*/\r\ncontract logPhrase {\r\n\r\n    address owner = msg.sender;\r\n\r\n   //unique 16 bytes signatures and corresponding addresses\r\n    mapping (bytes16 => address) signatures;\r\n\r\n   //cost to by a signature (and get your address into the mapping)\r\n    uint128 constant minimumPayment = 0.001 ether;\r\n\r\n    function logPhrase() payable public {\r\n        \r\n    }\r\n\r\n    function () payable public {\r\n        //Donations are welcome. They go to the owner.\r\n        address contractAddr = this;\r\n        owner.transfer(contractAddr.balance);\r\n    }\r\n\r\n   //The signed logs are indexed\r\n    event Spoke(bytes16 indexed signature, string phrase);\r\n\r\n   //unsigned log\r\n    function logUnsigned(bytes32 phrase) public\r\n    {\r\n        log0(phrase);\r\n    }\r\n\r\n   //signed log\r\n    function logSigned(string phrase, bytes16 sign) public\r\n    {\r\n        //can only be called by the owner of the signature\r\n        require (signatures[sign]==msg.sender); //check valid address\r\n        Spoke(sign, phrase);\r\n    }\r\n\r\n   //buy a 16 bytes signature for 0.001 ETH\r\n    function buySignature(bytes16 sign) payable public\r\n    {\r\n        //signatures are unique\r\n        require(msg.value > minimumPayment && signatures[sign]==0);\r\n        signatures[sign]=msg.sender; //we got a new signer\r\n        address contractAddr = this;\r\n        owner.transfer(contractAddr.balance); //thanks\r\n    }\r\n\r\n   //query whois the owner address of the signature    \r\n    function getAddress(bytes16 sign) public returns (address) {\r\n        return signatures[sign];\r\n    }\r\n    \r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"phrase\",\"type\":\"bytes32\"}],\"name\":\"logUnsigned\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sign\",\"type\":\"bytes16\"}],\"name\":\"buySignature\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sign\",\"type\":\"bytes16\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"phrase\",\"type\":\"string\"},{\"name\":\"sign\",\"type\":\"bytes16\"}],\"name\":\"logSigned\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"signature\",\"type\":\"bytes16\"},{\"indexed\":false,\"name\":\"phrase\",\"type\":\"string\"}],\"name\":\"Spoke\",\"type\":\"event\"}]","ContractName":"logPhrase","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e42bff121963e98ed778ab51392a97f8d2c4a90f70ce7d6200c8cc0d09e34c56"}]}