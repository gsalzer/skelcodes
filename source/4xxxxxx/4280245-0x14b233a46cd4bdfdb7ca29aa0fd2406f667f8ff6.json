{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.16;\r\n\r\n\r\ncontract ControllerInterface {\r\n\r\n\r\n  // State Variables\r\n  bool public paused;\r\n  address public nutzAddr;\r\n\r\n  // Nutz functions\r\n  function babzBalanceOf(address _owner) constant returns (uint256);\r\n  function activeSupply() constant returns (uint256);\r\n  function burnPool() constant returns (uint256);\r\n  function powerPool() constant returns (uint256);\r\n  function totalSupply() constant returns (uint256);\r\n  function allowance(address _owner, address _spender) constant returns (uint256);\r\n\r\n  function approve(address _owner, address _spender, uint256 _amountBabz) public;\r\n  function transfer(address _from, address _to, uint256 _amountBabz, bytes _data) public;\r\n  function transferFrom(address _sender, address _from, address _to, uint256 _amountBabz, bytes _data) public;\r\n\r\n  // Market functions\r\n  function floor() constant returns (uint256);\r\n  function ceiling() constant returns (uint256);\r\n\r\n  function purchase(address _sender, uint256 _value, uint256 _price) public returns (uint256);\r\n  function sell(address _from, uint256 _price, uint256 _amountBabz);\r\n\r\n  // Power functions\r\n  function powerBalanceOf(address _owner) constant returns (uint256);\r\n  function outstandingPower() constant returns (uint256);\r\n  function authorizedPower() constant returns (uint256);\r\n  function powerTotalSupply() constant returns (uint256);\r\n\r\n  function powerUp(address _sender, address _from, uint256 _amountBabz) public;\r\n  function downTick(address _owner, uint256 _now) public;\r\n  function createDownRequest(address _owner, uint256 _amountPower) public;\r\n  function downs(address _owner) constant public returns(uint256, uint256, uint256);\r\n  function downtime() constant returns (uint256);\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\n \r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    require(newOwner != address(0));      \r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n/*\r\n * ERC20Basic\r\n * Simpler version of ERC20 interface\r\n * see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20Basic {\r\n  function totalSupply() constant returns (uint256);\r\n  function balanceOf(address _owner) constant returns (uint256);\r\n  function transfer(address _to, uint256 _value) returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\n\r\ncontract Power is Ownable, ERC20Basic {\r\n\r\n  event Slashing(address indexed holder, uint value, bytes32 data);\r\n\r\n  string public name = \"Acebusters Power\";\r\n  string public symbol = \"ABP\";\r\n  uint256 public decimals = 12;\r\n\r\n\r\n  function balanceOf(address _holder) constant returns (uint256) {\r\n    return ControllerInterface(owner).powerBalanceOf(_holder);\r\n  }\r\n\r\n  function totalSupply() constant returns (uint256) {\r\n    return ControllerInterface(owner).powerTotalSupply();\r\n  }\r\n\r\n  function activeSupply() constant returns (uint256) {\r\n    return ControllerInterface(owner).outstandingPower();\r\n  }\r\n\r\n\r\n  // ############################################\r\n  // ########### ADMIN FUNCTIONS ################\r\n  // ############################################\r\n\r\n  function slashPower(address _holder, uint256 _value, bytes32 _data) public onlyOwner {\r\n    Slashing(_holder, _value, _data);\r\n  }\r\n\r\n  function powerUp(address _holder, uint256 _value) public onlyOwner {\r\n    // NTZ transfered from user's balance to power pool\r\n    Transfer(address(0), _holder, _value);\r\n  }\r\n\r\n  // ############################################\r\n  // ########### PUBLIC FUNCTIONS ###############\r\n  // ############################################\r\n\r\n  // registers a powerdown request\r\n  function transfer(address _to, uint256 _amountPower) public returns (bool success) {\r\n    // make Power not transferable\r\n    require(_to == address(0));\r\n    ControllerInterface(owner).createDownRequest(msg.sender, _amountPower);\r\n    Transfer(msg.sender, address(0), _amountPower);\r\n    return true;\r\n  }\r\n\r\n  function downtime() public returns (uint256) {\r\n    ControllerInterface(owner).downtime;\r\n  }\r\n\r\n  function downTick(address _owner) public {\r\n    ControllerInterface(owner).downTick(_owner, now);\r\n  }\r\n\r\n  function downs(address _owner) constant public returns (uint256, uint256, uint256) {\r\n    return ControllerInterface(owner).downs(_owner);\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes32\"}],\"name\":\"slashPower\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"downs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"powerUp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amountPower\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"downTick\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"activeSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"downtime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"Slashing\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Power","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a5e5e1f420e1bda35494fbf04f316462f7e4dfba1eec9a94071e08af20f091ca"}]}