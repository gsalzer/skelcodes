{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4;\r\n\r\n\r\ncontract ERC20 {\r\n   uint public totalSupply;\r\n   function balanceOf(address _account) public constant returns (uint balance);\r\n   function transfer(address _to, uint _value) public returns (bool success);\r\n   function transferFrom(address _from, address _to, uint _value) public returns (bool success);\r\n   function approve(address _spender, uint _value) public returns (bool success);\r\n   function allowance(address _owner, address _spender) public constant returns (uint remaining);\r\n   event Transfer(address indexed _from, address indexed _to, uint _value);\r\n   event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n}\r\n\r\n\r\ncontract Token is ERC20 {\r\n    // Balances for trading\r\n    mapping(address => uint256) public balances;\r\n\r\n\r\n    mapping(address => uint256) public investBalances;\r\n\r\n    mapping(address => mapping (address => uint)) allowed;\r\n\r\n    // Total amount of supplied tokens\r\n    uint256 public totalSupply;\r\n\r\n    // Information about token\r\n    string public constant name = \"3D METAMORPHOSIS\";\r\n    string public constant symbol = \"MMS\";\r\n    address public owner;\r\n    address public owner2;\r\n    uint8 public decimals = 6;\r\n\r\n    // If function has this modifier, only owner can execute this function\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner || msg.sender == owner2);\r\n        _;\r\n    }\r\n\r\n\r\n\r\n\r\n    function Token() public {\r\n        owner = msg.sender;\r\n        totalSupply = 1000000000000;\r\n        balances[owner] = totalSupply;\r\n    }\r\n\r\n    // Change main owner address and transer tokens to new owner\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != owner);\r\n        balances[newOwner] = balances[owner];\r\n        balances[owner] = 0;\r\n        owner = newOwner;\r\n    }\r\n\r\n    // Chech trade balance of account\r\n    function balanceOf(address _account) public constant returns (uint256 balance) {\r\n    return balances[_account];\r\n    }\r\n\r\n // Transfer tokens from your account to other account\r\n    function transfer(address _to, uint _value) public  returns (bool success) {\r\n        require(_to != 0x0);                               // Prevent transfer to 0x0 address.\r\n        require(balances[msg.sender] >= _value);           // Check if the sender has enough\r\n        balances[msg.sender] -= _value;                    // Subtract from the sender\r\n        balances[_to] += _value;                           // Add the same to the recipient\r\n        Transfer(msg.sender, _to, _value);\r\n    return true;\r\n    }\r\n\r\n   // Transfer tokens from account (_from) to another account (_to)\r\n    function transferFrom(address _from, address _to, uint256 _amount) public  returns(bool) {\r\n        require(_amount <= allowed[_from][msg.sender]);\r\n        if (balances[_from] >= _amount && _amount > 0) {\r\n            balances[_from] -= _amount;\r\n            balances[_to] += _amount;\r\n            allowed[_from][msg.sender] -= _amount;\r\n            Transfer(_from, _to, _amount);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n            }\r\n    }\r\n\r\n    function approve(address _spender, uint _value) public  returns (bool success){\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n    return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n    return allowed[_owner][_spender];\r\n    }\r\n\r\n    function add_tokens(address _to, uint256 _amount) public onlyOwner {\r\n        balances[owner] -= _amount;\r\n        investBalances[_to] += _amount;\r\n    }\r\n\r\n    // Transfer tokens from investBalance to Balncec for trading\r\n    function transferToken_toBalance(address _user, uint256 _amount) public onlyOwner {\r\n        investBalances[_user] -= _amount;\r\n        balances[_user] += _amount;\r\n    } \r\n\r\n    // Transfer toknes from Balncec to investBalance\r\n    function transferToken_toInvestBalance(address _user, uint256 _amount) public onlyOwner {\r\n        balances[_user] -= _amount;\r\n        investBalances[_user] += _amount;\r\n    }  \r\n\r\n\r\n    function addOwner2(address _owner2) public onlyOwner {\r\n        owner2 = _owner2;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner2\",\"type\":\"address\"}],\"name\":\"addOwner2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferToken_toBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferToken_toInvestBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"add_tokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Token","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bfcbf596d25de4a6cfe00759a521db3e1abf9ccb1a3a5522ecd2a9dbda6340f8"}]}