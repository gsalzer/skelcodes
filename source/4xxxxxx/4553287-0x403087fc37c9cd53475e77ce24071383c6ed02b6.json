{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\ncontract token {\r\n    function transfer(address _to, uint256 _value);\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\t\r\n}\r\n\r\ncontract TEST_Crowdsale {\r\n    \r\n    token public sharesTokenAddress; \r\n    address public owner;\r\n    address public safeContract;\r\n\r\n\tuint public TIMEstartICO = 1513728000; \r\n\tuint public stopICO = 1521504000;\r\n\tuint febr20 = 1519084800;\r\n\tuint jan20 = 1516406400;\r\n\tuint public price = 0.0035 * 1 ether; \r\n\tuint coeff = 100000; \r\n\t\r\n\tuint256 public tokenSold = 0;\r\n\tuint256 public tokenFree = 0; \r\n\tbool public crowdsaleClosed = false;\r\n    bool public tokenWithdraw = false;\r\n\t\r\n\tevent TokenFree(uint256 value);\r\n\tevent CrowdsaleClosed(bool value);\r\n    \r\n\tfunction TEST_Crowdsale(address _tokenAddress, address _owner, address _stopScamHolder) {\r\n\t\towner = _owner;\r\n\t\tsharesTokenAddress = token(_tokenAddress);\r\n\t\tsafeContract = _stopScamHolder;\r\n\t}\r\n\r\n\tfunction() payable {\r\n\t    \r\n\t    if(now > febr20) price = 0.0105 * 1 ether; \r\n\t    else if(now > jan20) price = 0.0070 * 1 ether; \r\n\t    \r\n\t\ttokenFree = sharesTokenAddress.balanceOf(this);\r\n\t\t\r\n\t\tif (now < TIMEstartICO) {\r\n\t\t    msg.sender.transfer(msg.value);\r\n\t\t}\r\n\t\telse if (now > stopICO) {\r\n\t\t\tmsg.sender.transfer(msg.value);\r\n\t\t\tif(!tokenWithdraw){ \r\n\t\t\t    sharesTokenAddress.transfer(safeContract, sharesTokenAddress.balanceOf(this));\r\n\t\t\t    tokenFree = sharesTokenAddress.balanceOf(this);\r\n\t\t\t    tokenWithdraw = true;\r\n\t\t\t    crowdsaleClosed = true;\r\n\t\t\t}\r\n\t\t} \r\n\t\telse if (crowdsaleClosed) {\r\n\t\t\tmsg.sender.transfer(msg.value); \r\n\t\t} \r\n\t\telse {\r\n\t\t\tuint256 tokenToBuy = msg.value / price * coeff; \r\n\t\t\tif(tokenToBuy <= 0) msg.sender.transfer(msg.value); \r\n\t\t\trequire(tokenToBuy > 0);\r\n\t\t\tuint256 actualETHTransfer = tokenToBuy * price / coeff;\r\n\t\t\tif (tokenFree >= tokenToBuy) { \r\n\t\t\t\towner.transfer(actualETHTransfer);\r\n\t\t\t\tif (msg.value > actualETHTransfer){ \r\n\t\t\t\t\tmsg.sender.transfer(msg.value - actualETHTransfer);\r\n\t\t\t\t}\r\n\t\t\t\tsharesTokenAddress.transfer(msg.sender, tokenToBuy);\r\n\t\t\t\ttokenSold += tokenToBuy;\r\n\t\t\t\ttokenFree -= tokenToBuy;\r\n\t\t\t\tif(tokenFree==0) crowdsaleClosed = true;\r\n\t\t\t} else { \r\n\t\t\t\tuint256 sendETH = tokenFree * price / coeff;\r\n\t\t\t\towner.transfer(sendETH); \r\n\t\t\t\tsharesTokenAddress.transfer(msg.sender, tokenFree); \r\n\t\t\t\tmsg.sender.transfer(msg.value - sendETH); \r\n\t\t\t\ttokenSold += tokenFree;\r\n\t\t\t\ttokenFree = sharesTokenAddress.balanceOf(this);\r\n\t\t\t\tcrowdsaleClosed = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tTokenFree(tokenFree);\r\n\t\tCrowdsaleClosed(crowdsaleClosed);\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"sharesTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenWithdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TIMEstartICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFree\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"safeContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_stopScamHolder\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokenFree\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"CrowdsaleClosed\",\"type\":\"event\"}]","ContractName":"TEST_Crowdsale","CompilerVersion":"v0.4.14+commit.c2215d46","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000acb65cc264aecb5aeb872763dcf46d34d172da3d000000000000000000000000bf783daf2c629669ab20ecb9f8f21f8e580ef118000000000000000000000000e010d0a52791340db3323b77700817546a062109","Library":"","SwarmSource":"bzzr://f74fa4e39cec2c2af9ae7cfb6bc40ffd13624616847ec42bc7e29bb7ce932a66"}]}