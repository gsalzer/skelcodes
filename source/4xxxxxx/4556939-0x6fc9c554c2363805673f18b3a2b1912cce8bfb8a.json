{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\ncontract Token {\r\n    function balanceOf(address _account) public constant returns (uint256 balance);\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n}\r\n\r\n\r\ncontract RocketCoin {\r\n    string public constant symbol = \"XRC\";\r\n\r\n    string public constant name = \"Rocket Coin\";\r\n\r\n    uint public constant decimals = 18;\r\n\r\n    uint public constant totalSupply = 10000000 * 10 ** decimals;\r\n\r\n    address owner;\r\n\r\n    bool airDropStatus = true;\r\n\r\n    uint airDropAmount = 300 * 10 ** decimals;\r\n\r\n    uint airDropGasPrice = 20 * 10 ** 9;\r\n\r\n    mapping (address => bool) participants;\r\n\r\n    mapping (address => uint256) balances;\r\n\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    function RocketCoin() public {\r\n        owner = msg.sender;\r\n        balances[owner] = totalSupply;\r\n        Transfer(address(0), owner, totalSupply);\r\n    }\r\n\r\n    function() public payable {\r\n        require(airDropStatus && balances[owner] >= airDropAmount && !participants[msg.sender] && tx.gasprice >= airDropGasPrice);\r\n        balances[owner] -= airDropAmount;\r\n        balances[msg.sender] += airDropAmount;\r\n        Transfer(owner, msg.sender, airDropAmount);\r\n        participants[msg.sender] = true;\r\n    }\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\r\n        require(balances[msg.sender] >= _amount && _amount > 0);\r\n        balances[msg.sender] -= _amount;\r\n        balances[_to] += _amount;\r\n        Transfer(msg.sender, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    function multiTransfer(address[] _addresses, uint[] _amounts) public returns (bool success) {\r\n        require(_addresses.length <= 100 && _addresses.length == _amounts.length);\r\n        uint totalAmount;\r\n        for (uint a = 0; a < _amounts.length; a++) {\r\n            totalAmount += _amounts[a];\r\n        }\r\n        require(totalAmount > 0 && balances[msg.sender] >= totalAmount);\r\n        balances[msg.sender] -= totalAmount;\r\n        for (uint b = 0; b < _addresses.length; b++) {\r\n            if (_amounts[b] > 0) {\r\n                balances[_addresses[b]] += _amounts[b];\r\n                Transfer(msg.sender, _addresses[b], _amounts[b]);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\r\n        require(balances[_from] >= _amount && allowed[_from][msg.sender] >= _amount && _amount > 0);\r\n        balances[_from] -= _amount;\r\n        allowed[_from][msg.sender] -= _amount;\r\n        balances[_to] += _amount;\r\n        Transfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    function setupAirDrop(bool _status, uint _amount, uint _Gwei) public returns (bool success) {\r\n        require(msg.sender == owner);\r\n        airDropStatus = _status;\r\n        airDropAmount = _amount * 10 ** decimals;\r\n        airDropGasPrice = _Gwei * 10 ** 9;\r\n        return true;\r\n    }\r\n\r\n    function withdrawFunds(address _token) public returns (bool success) {\r\n        require(msg.sender == owner);\r\n        if (_token == address(0)) {\r\n            owner.transfer(this.balance);\r\n        }\r\n        else {\r\n            Token ERC20 = Token(_token);\r\n            ERC20.transfer(owner, ERC20.balanceOf(this));\r\n        }\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdrawFunds\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_status\",\"type\":\"bool\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_Gwei\",\"type\":\"uint256\"}],\"name\":\"setupAirDrop\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"RocketCoin","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://49409ba0127973ef7cce5429148aa422ae70cf82dc1fdac14ca2507799080cec"}]}