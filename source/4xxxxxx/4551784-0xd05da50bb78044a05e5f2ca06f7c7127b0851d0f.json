{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.9;\r\n\r\ncontract ERC20 {\r\n\tstring public name;\r\n\tstring public symbol;\r\n\tuint8 public decimals = 8;\r\n\r\n\tuint public totalSupply;\r\n\tfunction balanceOf(address _owner) public constant returns (uint balance);\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool success);\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool success);\r\n\tfunction allowance(address _owner, address _spender) public constant returns (uint256 remaining);\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\tfunction mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\t/* function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\t// assert(b > 0); // Solidity automatically throws when dividing by 0\r\n\t\tuint256 c = a / b;\r\n\t\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\t\treturn c;\r\n\t} */\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\ncontract owned {\r\n\taddress public owner;\r\n\r\n\tfunction owned() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) public onlyOwner {\r\n\t\towner = newOwner;\r\n\t}\r\n}\r\n\r\ncontract BazistaToken is ERC20, owned {\r\n\tusing SafeMath for uint256;\r\n\r\n\tstring public name = 'Bazista Token';\r\n\tstring public symbol = 'BZS';\r\n\r\n\tuint256 public totalSupply = 44000000000000000;\r\n\r\n\taddress public icoWallet;\r\n\tuint256 public icoSupply = 33440000000000000;\r\n\r\n\taddress public advisorsWallet;\r\n\tuint256 public advisorsSupply = 1320000000000000;\r\n\r\n\taddress public teamWallet;\r\n\tuint256 public teamSupply = 6600000000000000;\r\n\r\n\taddress public marketingWallet;\r\n\tuint256 public marketingSupply = 1760000000000000;\r\n\r\n\taddress public bountyWallet;\r\n\tuint256 public bountySupply = 880000000000000;\r\n\r\n\tmapping(address => uint) balances;\r\n\tmapping (address => mapping (address => uint256)) allowed;\r\n\r\n\tmodifier onlyPayloadSize(uint size) {\r\n\t\trequire(msg.data.length >= (size + 4));\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction BazistaToken () public {\r\n\t\tbalances[this] = totalSupply;\r\n\t}\r\n\r\n\r\n\tfunction setWallets(address _advisorsWallet, address _teamWallet, address _marketingWallet, address _bountyWallet) public onlyOwner {\r\n\t\tadvisorsWallet = _advisorsWallet;\r\n\t\t_transferFrom(this, advisorsWallet, advisorsSupply);\r\n\r\n\t\tteamWallet = _teamWallet;\r\n\t\t_transferFrom(this, teamWallet, teamSupply);\r\n\r\n\t\tmarketingWallet = _marketingWallet;\r\n\t\t_transferFrom(this, marketingWallet, marketingSupply);\r\n\r\n\t\tbountyWallet = _bountyWallet;\r\n\t\t_transferFrom(this, bountyWallet, bountySupply);\r\n\t}\r\n\r\n\r\n\tfunction setICO(address _icoWallet) public onlyOwner {\r\n\t\ticoWallet = _icoWallet;\r\n\t\t_transferFrom(this, icoWallet, icoSupply);\r\n\t}\r\n\r\n\tfunction () public{\r\n\t\trevert();\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) public constant returns (uint balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\tfunction allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) returns (bool success) {\r\n\t\t_transferFrom(msg.sender, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public onlyPayloadSize(3 * 32) returns (bool) {\r\n\t\tallowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n\t\t_transferFrom(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\tfunction _transferFrom(address _from, address _to, uint256 _value) internal {\r\n\t\trequire(_value > 0);\r\n\t\tbalances[_from] = balances[_from].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tTransfer(_from, _to, _value);\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool) {\r\n\t\trequire((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\tApproval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\ncontract BazistaICO is owned {\r\n\tenum Status {WAIT_PRESALE, PRESALE, WAIT_SALE, SALE, STOP, FINISH, REFUND}\r\n\tusing SafeMath for uint256;\r\n\r\n\tBazistaToken public token;\r\n\r\n\tStatus public status = Status.WAIT_PRESALE;\r\n\r\n\tuint256 public crowdsaleTokens = 32120000000000000;\r\n\tuint256 public presaleTokens = 1320000000000000;\r\n\r\n\tuint256 public wireLimit = 6688000000000000;\r\n\tuint256 public soldTokens = 0;\r\n\r\n\tuint256 public presaleStart = 1510822800;\t//2017-11-16 12:00:00\r\n\tuint256 public presaleEnd = 1511254800;\t\t//2017-11-21 12:00:00\r\n\tuint256 public saleStart = 1512378000;\t\t//2017-12-04 12:00:00\r\n\tuint256 public saleEnd = 1514970000;\t\t//2018-01-03 12:00:00\r\n\r\n\tuint256 public salePrice = 1100000000000;\r\n\tuint256 public minTokens = 4180000000000000; //3800*salePrice\r\n\tuint256 public maxWeis = 30300000000000000000000; //30300 eth\r\n\r\n\tmapping(address => uint) deposits;\r\n\r\n\tfunction BazistaICO (\r\n\t\taddress tokenAddress,\r\n\t\taddress _owner\r\n\t) public {\r\n\t\towner = _owner;\r\n\t\ttoken = BazistaToken(tokenAddress);\r\n\t}\r\n\r\n\tfunction () public payable {\r\n\t\tbuy();\r\n\t}\r\n\r\n\tfunction getDeposits(address _owner) public constant returns (uint256 weis) {\r\n\t\treturn deposits[_owner];\r\n\t}\r\n\tfunction getBonus(uint256 amount) public constant returns (uint256 bonus) {\r\n\t\tStatus _status = getStatus();\r\n\t\tif(_status == Status.PRESALE) {\r\n\t\t\treturn percentFrom(amount, 45);\r\n\t\t}\r\n\r\n\t\trequire(_status == Status.SALE);\r\n\r\n\t\tif(now < (saleStart + 3 days)) {\r\n\t\t\treturn percentFrom(amount, 30);\r\n\t\t}\r\n\t\tif(now < (saleStart + 11 days)) {\r\n\t\t\treturn (amount / 5); //20%\r\n\t\t}\r\n\t\tif(now < (saleStart + 17 days)) {\r\n\t\t\treturn percentFrom(amount, 15);\r\n\t\t}\r\n\t\tif(now < (saleStart + 23 days)) {\r\n\t\t\treturn (amount / 10); //10%\r\n\t\t}\r\n\t\tif(now < (saleStart + 28 days)) {\r\n\t\t\treturn (amount / 20); //5%\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tfunction icoFinished() public constant returns (bool yes) {\r\n\t\treturn (status == Status.FINISH || ((status == Status.REFUND) && (now > (saleEnd + 14 days))));\r\n\t}\r\n\r\n\tfunction status() public constant returns (Status _status){\r\n\t\treturn getStatus();\r\n\t}\r\n\tfunction getStatus() internal constant returns (Status _status){\r\n\t\tif((status == Status.STOP) || (status == Status.FINISH) || (status == Status.REFUND)){\r\n\t\t\treturn status;\r\n\t\t}\r\n\r\n\t\tif(now < presaleStart) {\r\n\t\t\treturn Status.WAIT_PRESALE;\r\n\t\t}\r\n\t\telse if((now > presaleStart) && (now < presaleEnd)){\r\n\t\t\treturn Status.PRESALE;\r\n\t\t}\r\n\t\telse if((now > presaleEnd) && ((now < saleStart))){\r\n\t\t\treturn Status.WAIT_SALE;\r\n\t\t}\r\n\t\telse if((now > saleStart) && (now < saleEnd) && (this.balance < maxWeis)){\r\n\t\t\treturn Status.SALE;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn Status.STOP;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction percentFrom(uint256 from, uint8 percent) internal constant returns (uint256 val){\r\n\t\tval = from.mul(percent) / 100;\r\n\t}\r\n\tfunction calcTokens(uint256 _wei) internal constant returns (uint256 val){\r\n\t\tval = _wei.mul(salePrice) / (1 ether);\r\n\t}\r\n\r\n\tfunction canBuy() internal returns (bool apply){\r\n\t\tstatus = getStatus();\r\n\r\n\t\tif((status == Status.PRESALE)){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if((status == Status.SALE)) {\r\n\t\t\tif(presaleTokens>0){\r\n\t\t\t\tcrowdsaleTokens = crowdsaleTokens.add(presaleTokens);\r\n\t\t\t\tpresaleTokens = 0;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction stopForce() public onlyOwner {\r\n\t\trequire(getStatus() != Status.STOP);\r\n\t\tstatus = Status.STOP;\r\n\t\tsaleEnd = now;\r\n\t}\r\n\r\n\tfunction saleStopped() public onlyOwner {\r\n\t\trequire(getStatus() == Status.STOP);\r\n\t\tif(soldTokens < minTokens){\r\n\t\t\tstatus = Status.REFUND;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tstatus = Status.FINISH;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _refund(address _to) internal {\r\n\t\trequire(status == Status.REFUND);\r\n\t\trequire(deposits[_to]>0);\r\n\t\tuint256 val = deposits[_to];\r\n\t\tdeposits[_to] = 0;\r\n\t\trequire(_to.send(val));\r\n\t}\r\n\tfunction refund() public {\r\n\t\t_refund(msg.sender);\r\n\t}\r\n\tfunction refund(address _to) public onlyOwner {\r\n\t\t_refund(_to);\r\n\t}\r\n\r\n\tfunction buy() public payable returns (uint256 tokens) {\r\n\t\trequire((msg.value > 0) && canBuy());\r\n\r\n\t\ttokens = calcTokens(msg.value);\r\n\t\tsoldTokens = soldTokens.add(tokens);\r\n\t\ttokens = tokens.add(getBonus(tokens));\r\n\r\n\t\trequire(token.transfer(msg.sender, tokens));\r\n\r\n\t\tif(status == Status.PRESALE) {\r\n\t\t\tpresaleTokens = presaleTokens.sub(tokens);\r\n\t\t}\r\n\t\tif(status == Status.SALE){\r\n\t\t\tcrowdsaleTokens = crowdsaleTokens.sub(tokens);\r\n\t\t}\r\n\r\n\t\tdeposits[msg.sender]=deposits[msg.sender].add(msg.value);\r\n\t}\r\n\tfunction addWire(address _to, uint tokens, uint bonus) public onlyOwner {\r\n\t\trequire((tokens > 0) && (bonus >= 0) && canBuy());\r\n\r\n\t\tsoldTokens = soldTokens.add(tokens);\r\n\r\n\t\ttokens = tokens.add(bonus);\r\n\t\twireLimit = wireLimit.sub(tokens);\r\n\r\n\t\trequire(wireLimit>=0);\r\n\t\trequire(token.transfer(_to, tokens));\r\n\r\n\t\tif(status == Status.PRESALE) {\r\n\t\t\tpresaleTokens = presaleTokens.sub(tokens);\r\n\t\t}\r\n\t\tif(status == Status.SALE){\r\n\t\t\tcrowdsaleTokens = crowdsaleTokens.sub(tokens);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addUnsoldTokens() public onlyOwner {\r\n\t\trequire((now > (saleEnd + 60 days)) && (token.balanceOf(this) > 0));\r\n\r\n\t\trequire(token.transfer(token.marketingWallet(), token.balanceOf(this)));\r\n\t}\r\n\r\n\tfunction sendAllFunds(address receiver) public onlyOwner {\r\n\t\tsendFunds(this.balance, receiver);\r\n\t}\r\n\r\n\tfunction sendFunds(uint amount, address receiver) public onlyOwner {\r\n\t\trequire(icoFinished());\r\n\t\tif(status == Status.REFUND){\r\n\t\t\tstatus == Status.FINISH;\r\n\t\t}\r\n\t\trequire((this.balance >= amount) && receiver.send(amount));\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"presaleTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"name\":\"_status\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"sendAllFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wireLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoFinished\",\"outputs\":[{\"name\":\"yes\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxWeis\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"saleStopped\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBonus\",\"outputs\":[{\"name\":\"bonus\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"soldTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"bonus\",\"type\":\"uint256\"}],\"name\":\"addWire\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getDeposits\",\"outputs\":[{\"name\":\"weis\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"addUnsoldTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"tokens\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"sendFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopForce\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"salePrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"BazistaICO","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000037bda986671aa761dc4a1c532b18117ebf8879ee00000000000000000000000016cf045e2f0a2a3486ac8723bb3cf513b2f72810","Library":"","SwarmSource":"bzzr://c83570e5cec520c1f8097153f2532d35d989d0f2eeaacbfda01f172cbb51168d"}]}