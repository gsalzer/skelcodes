{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n/**\r\n* @title UNR ICO CONTRACT\r\n* @dev ERC-20 Token Standard Compliant\r\n* @author Fares A. Akel C. f.antonio.akel@gmail.com\r\n*/\r\n\r\n/**\r\n * @title SafeMath by OpenZeppelin\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n    }\r\n\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract token {\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n\r\n    }\r\n\r\n/**\r\n * @title admined\r\n * @notice This contract is administered\r\n */\r\ncontract admined {\r\n    address public admin; //Admin address is public\r\n    \r\n    /**\r\n    * @dev This contructor takes the msg.sender as the first administer\r\n    */\r\n    function admined() internal {\r\n        admin = msg.sender; //Set initial admin to contract creator\r\n        Admined(admin);\r\n    }\r\n\r\n    /**\r\n    * @dev This modifier limits function execution to the admin\r\n    */\r\n    modifier onlyAdmin() { //A modifier to define admin-only functions\r\n        require(msg.sender == admin);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @notice This function transfer the adminship of the contract to _newAdmin\r\n    * @param _newAdmin The new admin of the contract\r\n    */\r\n    function transferAdminship(address _newAdmin) onlyAdmin public { //Admin can be transfered\r\n        admin = _newAdmin;\r\n        TransferAdminship(admin);\r\n    }\r\n\r\n    /**\r\n    * @dev Log Events\r\n    */\r\n    event TransferAdminship(address newAdminister);\r\n    event Admined(address administer);\r\n\r\n}\r\n\r\n\r\ncontract UNRICO is admined {\r\n    using SafeMath for uint256;\r\n    //This ico have 3 stages\r\n    enum State {\r\n        Ongoin,\r\n        Successful\r\n    }\r\n    //public variables\r\n    uint256 public priceOfEthOnUSD;\r\n    State public state = State.Ongoin; //Set initial stage\r\n    uint256 public startTime = now; //block-time when it was deployed\r\n    uint256[5] public price;\r\n    uint256 public HardCap;\r\n    uint256 public totalRaised; //eth in wei\r\n    uint256 public totalDistributed; //tokens\r\n    uint256 public ICOdeadline = startTime.add(27 days);//27 days deadline\r\n    uint256 public completedAt;\r\n    token public tokenReward;\r\n    address public creator;\r\n    address public beneficiary;\r\n    string public campaignUrl;\r\n    uint8 constant version = 1;\r\n\r\n    //events for log\r\n    event LogFundingReceived(address _addr, uint _amount, uint _currentTotal);\r\n    event LogBeneficiaryPaid(address _beneficiaryAddress);\r\n    event LogFundingSuccessful(uint _totalRaised);\r\n    event LogFunderInitialized(\r\n        address _creator,\r\n        address _beneficiary,\r\n        string _url,\r\n        uint256 _ICOdeadline);\r\n    event LogContributorsPayout(address _addr, uint _amount);\r\n    event PriceUpdate(uint256 _newPrice);\r\n\r\n    modifier notFinished() {\r\n        require(state != State.Successful);\r\n        _;\r\n    }\r\n    /**\r\n    * @notice ICO constructor\r\n    * @param _campaignUrl is the ICO _url\r\n    * @param _addressOfTokenUsedAsReward is the token totalDistributed\r\n    * @param _initialUsdPriceOfEth is the current price in USD for a single ether\r\n    */\r\n    function UNRICO (string _campaignUrl, token _addressOfTokenUsedAsReward, uint256 _initialUsdPriceOfEth) public {\r\n        creator = msg.sender;\r\n        beneficiary = msg.sender;\r\n        campaignUrl = _campaignUrl;\r\n        tokenReward = token(_addressOfTokenUsedAsReward);\r\n        priceOfEthOnUSD = _initialUsdPriceOfEth;\r\n        HardCap = SafeMath.div(7260000*10**18,priceOfEthOnUSD); //7,260,000$\r\n        price[0] = SafeMath.div(1 * 10 ** 15, priceOfEthOnUSD.mul(1666666));\r\n        price[1] = SafeMath.div(1 * 10 ** 11, priceOfEthOnUSD.mul(125));\r\n        price[2] = SafeMath.div(1 * 10 ** 15, priceOfEthOnUSD.mul(1111111));\r\n        price[3] = SafeMath.div(1 * 10 ** 15, priceOfEthOnUSD.mul(1052631));\r\n        price[4] = SafeMath.div(1 * 10 ** 10, priceOfEthOnUSD.mul(10));\r\n\r\n        LogFunderInitialized(\r\n            creator,\r\n            beneficiary,\r\n            campaignUrl,\r\n            ICOdeadline);\r\n        PriceUpdate(priceOfEthOnUSD);\r\n    }\r\n\r\n    function updatePriceOfEth(uint256 _newPrice) onlyAdmin public {\r\n        priceOfEthOnUSD = _newPrice;\r\n        price[0] = SafeMath.div(1 * 10 ** 15, priceOfEthOnUSD.mul(1666666));\r\n        price[1] = SafeMath.div(1 * 10 ** 11, priceOfEthOnUSD.mul(125));\r\n        price[2] = SafeMath.div(1 * 10 ** 15, priceOfEthOnUSD.mul(1111111));\r\n        price[3] = SafeMath.div(1 * 10 ** 15, priceOfEthOnUSD.mul(1052631));\r\n        price[4] = SafeMath.div(1 * 10 ** 10, priceOfEthOnUSD.mul(10));\r\n        HardCap = SafeMath.div(7260000*10**18,priceOfEthOnUSD); //7,260,000$\r\n        PriceUpdate(_newPrice);\r\n    }\r\n\r\n    /**\r\n    * @notice contribution handler\r\n    */\r\n    function contribute() public notFinished payable {\r\n\r\n        uint256 tokenBought;\r\n        uint256 required;\r\n        totalRaised = totalRaised.add(msg.value);\r\n\r\n        if(totalDistributed < 2000000 * (10 ** 8)){\r\n            tokenBought = msg.value.div(price[0]);\r\n            required = SafeMath.div(10000,6);\r\n            require(tokenBought >= required);\r\n        }\r\n        else if (totalDistributed < 20000000 * (10 ** 8)){\r\n            tokenBought = msg.value.div(price[1]);\r\n            required = SafeMath.div(10000,8);\r\n            require(tokenBought >= required);\r\n        }\r\n        else if (totalDistributed < 40000000 * (10 ** 8)){\r\n            tokenBought = msg.value.div(price[2]);\r\n            required = SafeMath.div(10000,9);\r\n            require(tokenBought >= required);\r\n        }\r\n        else if (totalDistributed < 60000000 * (10 ** 8)){\r\n            tokenBought = msg.value.div(price[3]);\r\n            required = SafeMath.div(100000,95);\r\n            require(tokenBought >= required);\r\n        }\r\n        else if (totalDistributed < 80000000 * (10 ** 8)){\r\n            tokenBought = msg.value.div(price[4]);\r\n            required = 1000;\r\n            require(tokenBought >= required);\r\n\r\n        }\r\n\r\n\r\n        totalDistributed = totalDistributed.add(tokenBought);\r\n        tokenReward.transfer(msg.sender, tokenBought);\r\n        \r\n        LogFundingReceived(msg.sender, msg.value, totalRaised);\r\n        LogContributorsPayout(msg.sender, tokenBought);\r\n        \r\n        checkIfFundingCompleteOrExpired();\r\n    }\r\n\r\n    /**\r\n    * @notice check status\r\n    */\r\n    function checkIfFundingCompleteOrExpired() public {\r\n        \r\n        if(now < ICOdeadline && state!=State.Successful){ //if we are on ICO period and its not Successful\r\n            if(state == State.Ongoin && totalRaised >= HardCap){ //if we are Ongoin and we pass the HardCap\r\n                state = State.Successful; //We are on Successful state\r\n                completedAt = now; //ICO is complete\r\n            }\r\n        }\r\n        else if(now > ICOdeadline && state!=State.Successful ) { //if we reach ico deadline and its not Successful yet\r\n            state = State.Successful; //ico becomes Successful\r\n            completedAt = now; //ICO is complete\r\n            LogFundingSuccessful(totalRaised); //we log the finish\r\n            finished(); //and execute closure\r\n        }\r\n    }\r\n\r\n    function payOut() public {\r\n        require(msg.sender == beneficiary);\r\n        require(beneficiary.send(this.balance));\r\n        LogBeneficiaryPaid(beneficiary);\r\n    }\r\n\r\n   /**\r\n    * @notice closure handler\r\n    */\r\n    function finished() public { //When finished eth are transfered to beneficiary\r\n        require(state == State.Successful);\r\n        uint256 remanent = tokenReward.balanceOf(this);\r\n\r\n        require(beneficiary.send(this.balance));\r\n        tokenReward.transfer(beneficiary,remanent);\r\n\r\n        LogBeneficiaryPaid(beneficiary);\r\n        LogContributorsPayout(beneficiary, remanent);\r\n    }\r\n\r\n    function () public payable {\r\n        contribute();\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"updatePriceOfEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"completedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HardCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkIfFundingCompleteOrExpired\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOdeadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceOfEthOnUSD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finished\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payOut\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"campaignUrl\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_campaignUrl\",\"type\":\"string\"},{\"name\":\"_addressOfTokenUsedAsReward\",\"type\":\"address\"},{\"name\":\"_initialUsdPriceOfEth\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_currentTotal\",\"type\":\"uint256\"}],\"name\":\"LogFundingReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_beneficiaryAddress\",\"type\":\"address\"}],\"name\":\"LogBeneficiaryPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_totalRaised\",\"type\":\"uint256\"}],\"name\":\"LogFundingSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_url\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_ICOdeadline\",\"type\":\"uint256\"}],\"name\":\"LogFunderInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"LogContributorsPayout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"PriceUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAdminister\",\"type\":\"address\"}],\"name\":\"TransferAdminship\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"administer\",\"type\":\"address\"}],\"name\":\"Admined\",\"type\":\"event\"}]","ContractName":"UNRICO","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000b705ac4a38d3e6bb427e1b652e0ab8db38c1afd100000000000000000000000000000000000000000000000000000000000002d40000000000000000000000000000000000000000000000000000000000000018687474703a2f2f756e697465647265616c6974792e61692f0000000000000000","Library":"","SwarmSource":"bzzr://5699e9c2ac75967ec02f3b105d0626d0ed981ddda509a099ad9482f0877affe0"}]}