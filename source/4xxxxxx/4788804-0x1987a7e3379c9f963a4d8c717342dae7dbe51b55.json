{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Distributor {\r\n\r\n  address public owner;\r\n\r\n  mapping (address => uint) public received;\r\n    \r\n  mapping (address => uint) public balances;\r\n\r\n  address[] public receivers;\r\n  \r\n  uint public index;\r\n  \r\n  uint public total;\r\n\r\n  modifier onlyOwner() {\r\n    require(owner == msg.sender);\r\n    _;\r\n  }\r\n  \r\n  function Distributor() public {\r\n      owner = msg.sender;\r\n  }\r\n  \r\n  function addReceivers(address[] _receivers, uint[] _balances) public onlyOwner {\r\n    for(uint i = 0; i < _receivers.length; i++) {\r\n      address receiver = _receivers[i];\r\n      require(balances[receiver] == 0);\r\n      balances[receiver] = _balances[i];\r\n      total += _balances[i];\r\n      receivers.push(receiver);\r\n    }\r\n  }\r\n\r\n  function process(uint count) public onlyOwner {\r\n    for(uint i = 0; index < receivers.length && i < count; i++) {\r\n      address receiver = receivers[index];\r\n      require(received[receiver] == 0);\r\n      uint value = balances[receiver];\r\n      received[receiver] = balances[receiver];\r\n      receiver.transfer(value);\r\n      index++;\r\n    }\r\n  }\r\n\r\n  function () public payable {\r\n  }\r\n  \r\n  function retreive() public onlyOwner {\r\n    owner.transfer(this.balance);\r\n  }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"total\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receivers\",\"type\":\"address[]\"},{\"name\":\"_balances\",\"type\":\"uint256[]\"}],\"name\":\"addReceivers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"retreive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"receivers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"received\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"process\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Distributor","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cdb8ea57cb933f149c1429104415f18b9ebe7727f3803641f2209f4d139fe997"}]}