{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.19;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract ERC223ReceivingContract {\r\n    function tokenFallback(address _from, uint _value, bytes _data);\r\n}\r\n\r\n\r\n/*\r\n * ERC20Basic\r\n * Simpler version of ERC20 interface\r\n * see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20Basic {\r\n  function totalSupply() constant returns (uint256);\r\n  function balanceOf(address _owner) constant returns (uint256);\r\n  function transfer(address _to, uint256 _value) returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\ncontract ERC223Basic is ERC20Basic {\r\n    function transfer(address to, uint value, bytes data) returns (bool);\r\n}\r\n\r\n/*\r\n * ERC20 interface\r\n * see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC223Basic {\r\n  // active supply of tokens\r\n  function allowance(address _owner, address _spender) constant returns (uint256);\r\n  function transferFrom(address _from, address _to, uint _value) returns (bool);\r\n  function approve(address _spender, uint256 _value) returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract ControllerInterface {\r\n\r\n  function totalSupply() constant returns (uint256);\r\n  function balanceOf(address _owner) constant returns (uint256);\r\n  function allowance(address _owner, address _spender) constant returns (uint256);\r\n\r\n  function approve(address owner, address spender, uint256 value) public returns (bool);\r\n  function transfer(address owner, address to, uint value, bytes data) public returns (bool);\r\n  function transferFrom(address owner, address from, address to, uint256 amount, bytes data) public returns (bool);\r\n  function mint(address _to, uint256 _amount)  public returns (bool);\r\n}\r\n\r\ncontract Token is Ownable, ERC20 {\r\n\r\n  event Mint(address indexed to, uint256 amount);\r\n  event MintToggle(bool status);\r\n\r\n  // Constant Functions\r\n  function balanceOf(address _owner) constant returns (uint256) {\r\n    return ControllerInterface(owner).balanceOf(_owner);\r\n  }\r\n\r\n  function totalSupply() constant returns (uint256) {\r\n    return ControllerInterface(owner).totalSupply();\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) constant returns (uint256) {\r\n    return ControllerInterface(owner).allowance(_owner, _spender);\r\n  }\r\n\r\n  function mint(address _to, uint256 _amount) onlyOwner public returns (bool) {\r\n    Mint(_to, _amount);\r\n    Transfer(address(0), _to, _amount);\r\n    return true;\r\n  }\r\n\r\n  function mintToggle(bool status) onlyOwner public returns (bool) {\r\n    MintToggle(status);\r\n    return true;\r\n  }\r\n\r\n  // public functions\r\n  function approve(address _spender, uint256 _value) public returns (bool) {\r\n    ControllerInterface(owner).approve(msg.sender, _spender, _value);\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n    bytes memory empty;\r\n    return transfer(_to, _value, empty);\r\n  }\r\n\r\n  function transfer(address to, uint value, bytes data) public returns (bool) {\r\n    ControllerInterface(owner).transfer(msg.sender, to, value, data);\r\n    Transfer(msg.sender, to, value);\r\n    _checkDestination(msg.sender, to, value, data);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint _value) public returns (bool) {\r\n    bytes memory empty;\r\n    return transferFrom(_from, _to, _value, empty);\r\n  }\r\n\r\n\r\n  function transferFrom(address _from, address _to, uint256 _amount, bytes _data) public returns (bool) {\r\n    ControllerInterface(owner).transferFrom(msg.sender, _from, _to, _amount, _data);\r\n    Transfer(_from, _to, _amount);\r\n    _checkDestination(_from, _to, _amount, _data);\r\n    return true;\r\n  }\r\n\r\n  // Internal Functions\r\n  function _checkDestination(address _from, address _to, uint256 _value, bytes _data) internal {\r\n\r\n    uint256 codeLength;\r\n    assembly {\r\n      codeLength := extcodesize(_to)\r\n    }\r\n    if(codeLength>0) {\r\n      ERC223ReceivingContract untrustedReceiver = ERC223ReceivingContract(_to);\r\n      // untrusted contract call\r\n      untrustedReceiver.tokenFallback(_from, _value, _data);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n Simple Token based on OpenZeppelin token contract\r\n */\r\ncontract SGPay is Token {\r\n\r\n  string public constant name = \"SGPay Token\";\r\n  string public constant symbol = \"SGP\";\r\n  uint8 public constant decimals = 18;\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"mintToggle\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"MintToggle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"SGPay","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f61641af8a5855977dba18f1ed1b5ad273b8ec2700b1f7d7e7d1882bbb00703c"}]}