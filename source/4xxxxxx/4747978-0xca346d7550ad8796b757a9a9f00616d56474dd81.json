{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract owned {\r\n\taddress public owner;\r\n\taddress public server;\r\n\r\n\tfunction owned() {\r\n\t\towner = msg.sender;\r\n\t\tserver = msg.sender;\r\n\t}\r\n\r\n\tfunction changeOwner(address newOwner) onlyOwner {\r\n\t\towner = newOwner;\r\n\t}\r\n\r\n\tfunction changeServer(address newServer) onlyOwner {\r\n\t\tserver = newServer;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyServer {\r\n\t\trequire(msg.sender == server);\r\n\t\t_;\r\n\t}\r\n}\r\n\r\n\r\ncontract Utils {\r\n\r\n\tfunction Utils() {\r\n\t}\r\n\r\n\t// Validates an address - currently only checks that it isn't null\r\n\tmodifier validAddress(address _address) {\r\n\t\trequire(_address != 0x0);\r\n\t\t_;\r\n\t}\r\n}\r\n\r\ncontract Crowdsale is owned,Utils {\r\n    \r\n    //*** Pre-sale ***//\r\n    uint preSaleStart=1513771200;\r\n    uint preSaleEnd=1515585600;\r\n    uint256 preSaleTotalTokens=30000000;\r\n    uint256 preSaleTokenCost=6000;\r\n    address preSaleAddress;\r\n    \r\n     //*** ICO ***//\r\n    uint icoStart;\r\n    uint256 icoSaleTotalTokens=400000000;\r\n    address icoAddress;\r\n    \r\n    //*** Advisers,Consultants ***//\r\n    uint256 advisersConsultantTokens=15000000;\r\n    address advisersConsultantsAddress;\r\n    \r\n    //*** Bounty ***//\r\n    uint256 bountyTokens=15000000;\r\n    address bountyAddress=0xD53E82Aea770feED8e57433D3D61674caEC1D1Be;\r\n    \r\n    //*** Founders ***//\r\n    uint256 founderTokens=40000000;\r\n    address founderAddress;\r\n    \r\n    //***Balance***//\r\n    mapping (address => uint256) public balanceOf;\r\n    \r\n    //*** Tranfer ***//\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    \r\n    //*** GraphenePowerCrowdsale ***//\r\n    function GraphenePowerCrowdsale(){\r\n        balanceOf[this]=500000000;\r\n        preSaleAddress=0xC07850969A0EC345A84289f9C5bb5F979f27110f;\r\n        icoAddress=0x1C21Cf57BF4e2dd28883eE68C03a9725056D29F1;\r\n        advisersConsultantsAddress=0xe8B6dA1B801b7F57e3061C1c53a011b31C9315C7;\r\n        bountyAddress=0xD53E82Aea770feED8e57433D3D61674caEC1D1Be;\r\n        founderAddress=0xDA0D3Dad39165EA2d7386f18F96664Ee2e9FD8db;\r\n    }\r\n    \r\n    //*** Start ico ***//\r\n    function startIco() onlyOwner internal{\r\n        icoStart=now;\r\n    }\r\n    \r\n    //*** Is ico closed ***//\r\n    function isIcoClosed() constant returns (bool closed) {\r\n\t\treturn ((icoStart+(35*24*60*60)) >= now);\r\n\t}\r\n    \r\n    //*** Is preSale closed ***//\r\n    function isPreSaleClosed() constant returns (bool closed) {\r\n\t\treturn (preSaleEnd >= now);\r\n\t}\r\n\t\r\n\t//*** Get Bounty Tokens ***//\r\n\tfunction getBountyTokens() onlyOwner{\r\n\t    require(bountyTokens>0);\r\n\t    payment(bountyAddress,bountyTokens);\r\n\t    bountyTokens=0;\r\n\t}\r\n\t\r\n\t//*** Get Founders Tokens ***//\r\n\tfunction getFoundersTokens() onlyOwner{\r\n\t    require(founderTokens>0);\r\n\t    payment(founderAddress,founderTokens);\r\n\t    founderTokens=0;\r\n\t}\r\n\t\r\n\t//*** Get Advisers,Consultants Tokens ***//\r\n\tfunction getAdvisersConsultantsTokens() onlyOwner{\r\n\t    require(advisersConsultantTokens>0);\r\n\t    payment(advisersConsultantsAddress,advisersConsultantTokens);\r\n\t    advisersConsultantTokens=0;\r\n\t}\r\n\t\r\n\t//*** Payment ***//\r\n    function payment(address _from,uint256 _tokens) internal{\r\n        if(balanceOf[this] > _tokens){\r\n            balanceOf[msg.sender] += _tokens;\r\n            balanceOf[this] -= _tokens;\r\n            Transfer(this, _from, _tokens);\r\n        }\r\n    }\r\n    \r\n    //*** Payable ***//\r\n    function() payable {\r\n        require(msg.value>0);\r\n        \r\n        if(!isPreSaleClosed()){\r\n            uint256 tokensPreSale = preSaleTotalTokens * msg.value / 1000000000000000000;\r\n            require(preSaleTotalTokens >= tokensPreSale);\r\n            payment(msg.sender,tokensPreSale);\r\n        }\r\n        else if(!isIcoClosed()){\r\n             if((icoStart+(7*24*60*60)) >= now){\r\n                 uint256 tokensWeek1 = 4000 * msg.value / 1000000000000000000;\r\n                 require(icoSaleTotalTokens >= tokensWeek1);\r\n                 payment(msg.sender,tokensWeek1);\r\n                 icoSaleTotalTokens-=tokensWeek1;\r\n            }\r\n            else if((icoStart+(14*24*60*60)) >= now){\r\n                 uint256 tokensWeek2 = 3750 * msg.value / 1000000000000000000;\r\n                 require(icoSaleTotalTokens >= tokensWeek2);\r\n                 payment(msg.sender,tokensWeek2);\r\n                 icoSaleTotalTokens-=tokensWeek2;\r\n            }\r\n            else if((icoStart+(21*24*60*60)) >= now){\r\n                 uint256 tokensWeek3 = 3500 * msg.value / 1000000000000000000;\r\n                 require(icoSaleTotalTokens >= tokensWeek3);\r\n                 payment(msg.sender,tokensWeek3);\r\n                 icoSaleTotalTokens-=tokensWeek3;\r\n            }\r\n            else if((icoStart+(28*24*60*60)) >= now){\r\n                 uint256 tokensWeek4 = 3250 * msg.value / 1000000000000000000;\r\n                 require(icoSaleTotalTokens >= tokensWeek4);\r\n                 payment(msg.sender,tokensWeek4);\r\n                 icoSaleTotalTokens-=tokensWeek4;\r\n            }\r\n            else if((icoStart+(35*24*60*60)) >= now){\r\n                 uint256 tokensWeek5 = 3000 * msg.value / 1000000000000000000;\r\n                 require(icoSaleTotalTokens >= tokensWeek5);\r\n                 payment(msg.sender, tokensWeek5);\r\n                 icoSaleTotalTokens-=tokensWeek5;\r\n            }\r\n        }\r\n\t}\r\n}\r\n\r\ncontract GraphenePowerToken is Crowdsale {\r\n    \r\n    /* Public variables of the token */\r\n\tstring public standard = 'Token 0.1';\r\n\r\n\tstring public name = 'Graphene Power';\r\n\r\n\tstring public symbol = 'GRP';\r\n\r\n\tuint8 public decimals = 18;\r\n\r\n\tuint256 _totalSupply =500000000;\r\n\r\n\t/* This creates an array with all balances */\r\n\tmapping (address => uint256) balances;\r\n\r\n\t/* This generates a public event on the blockchain that will notify clients */\r\n\tevent Transfer(address from, address to, uint256 value);\r\n\r\n    bool transfersEnable=false;\r\n    \r\n\t//*** Total Supply ***//\r\n\tfunction totalSupply() constant returns (uint256 totalSupply) {\r\n\t\ttotalSupply = _totalSupply;\r\n\t}\r\n\t\r\n\t/*** Send coins ***/\r\n\tfunction transfer(address _to, uint256 _value) returns (bool success) {\r\n\t\tif (transfersEnable) {\r\n\t       require(balanceOf[msg.sender] >= _value);\r\n           balanceOf[msg.sender] -= _value;\r\n           balanceOf[_to] += _value;\r\n           Transfer(msg.sender, _to, _value);\r\n\t\t   return true;\r\n\t\t}\r\n      \telse{\r\n\t           return false;\r\n\t        }\r\n\t}\r\n\t\r\n\t//*** Transfer Enabled ***//\r\n\tfunction transfersEnabled() onlyOwner{\r\n\t    require(!transfersEnable);\r\n\t    transfersEnable=true;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newServer\",\"type\":\"address\"}],\"name\":\"changeServer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"GraphenePowerCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getFoundersTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getAdvisersConsultantsTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isIcoClosed\",\"outputs\":[{\"name\":\"closed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPreSaleClosed\",\"outputs\":[{\"name\":\"closed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getBountyTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transfersEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"server\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"GraphenePowerToken","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0ef9b4bdf723dafd171f144a31057edf6f24d099096a49637a7a84196c8f7208"}]}