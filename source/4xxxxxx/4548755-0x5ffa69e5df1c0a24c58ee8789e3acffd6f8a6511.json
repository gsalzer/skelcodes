{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        if (msg.sender != owner) revert();\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\ncontract Registration { \r\n     mapping (address => bool) public isRegistered;  \r\n}\r\n\r\ncontract LibrariumSubmission is owned { \r\n    struct Title { \r\n      \r\n        address owner; \r\n        uint256 price; \r\n    }\r\n    \r\n    Registration registryInterface;\r\n    event CategoryAdded(uint256 id, string name); \r\n    event CategoryDeleted(uint256 id);\r\n     \r\n    event TitleAdded(uint256 id,address owner,uint256 category, string name,string media_hash,string desc,uint256 price );\r\n    event TitleDelisted(uint256 id);\r\n    event TitleApproved(uint256 id); \r\n    event TitleUpdated(uint256 id,uint256 category, string name, string media_hash, string desc, uint256 price);\r\n    event TitlePurchased(address buyer, uint256 title);\r\n    \r\n    uint256 public categoriesCount; \r\n    uint256 public titleCount; \r\n    \r\n    mapping (uint256 => Title) public titles;\r\n    mapping (address => uint256) public balances; //Ether on account for sellers \r\n    mapping (address => uint256) public salesEth; //Total eth earned by seller\r\n    mapping (address => uint256) public titlesSold; //Total copies of books sold by seller\r\n    mapping (uint256 => uint256) public copiesSold;  //Copies sold of each title\r\n    mapping (address => string) public usernames; // Names of buyers and sellers registered \r\n    \r\n    function AddCategory(string categoryName) public onlyOwner { \r\n        CategoryAdded(categoriesCount,categoryName);\r\n        categoriesCount++;\r\n    }\r\n    \r\n    function RemoveCategory(uint256 id) public onlyOwner { \r\n        CategoryDeleted(id);\r\n    }\r\n    \r\n    function SetRegistrationContract(address registryAddress) public onlyOwner { \r\n        registryInterface = Registration(registryAddress);\r\n        \r\n    }\r\n    \r\n    function AddTitle(uint256 category,string name,string media_hash,string desc,uint256 price) public { \r\n        require(registryInterface.isRegistered(msg.sender) == true); \r\n        \r\n        Title memory t = Title(msg.sender,price); \r\n        titles[titleCount] = t; \r\n        \r\n        TitleAdded(titleCount,msg.sender,category,name,media_hash,desc,price);\r\n        \r\n        titleCount++;\r\n    }\r\n    \r\n    function RegisterUsername(string name) public {\r\n        require(registryInterface.isRegistered(msg.sender) == true); \r\n        usernames[msg.sender] = name;\r\n    }\r\n    \r\n    function DelistTitle(uint256 titleId) public  { \r\n        require (titleId < titleCount); \r\n        require (msg.sender == owner || msg.sender == titles[titleId].owner);\r\n        \r\n        TitleDelisted(titleId);\r\n        \r\n    }\r\n    \r\n    function ApproveTitle(uint256 titleId) public onlyOwner { \r\n        require (titleId < titleCount); \r\n        \r\n        TitleApproved(titleId);\r\n    }\r\n    \r\n    function EditTile(uint256 id,uint256 category,string name,string media_hash,string desc,uint256 price) public { \r\n        require (id < titleCount);\r\n        require(titles[id].owner == msg.sender);\r\n        \r\n        titles[id].price = price;\r\n        \r\n        TitleUpdated(id,category, name, media_hash, desc, price);\r\n\r\n    }\r\n    \r\n    function VendTitle(uint256 titleId) public payable {\r\n        require (titleId < titleCount); \r\n        Title storage t = titles[titleId]; \r\n        require(msg.value == t.price); \r\n        \r\n        uint256 temp = balances[t.owner];\r\n        balances[t.owner] += msg.value; \r\n        require(balances[t.owner] > temp);\r\n        \r\n        copiesSold[titleId]++;\r\n        titlesSold[t.owner]++;\r\n        salesEth[t.owner] += msg.value;\r\n        \r\n        TitlePurchased(msg.sender, titleId);\r\n    }\r\n    \r\n    function WidthdrawEarnings(uint256 amount) public { \r\n        require(balances[msg.sender] >= amount); \r\n         balances[msg.sender] -= amount; \r\n         msg.sender.transfer(amount);\r\n    }\r\n    \r\n    function () public payable {\r\n        revert();     // Prevents accidental sending of ether\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"titles\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"categoryName\",\"type\":\"string\"}],\"name\":\"AddCategory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"category\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"media_hash\",\"type\":\"string\"},{\"name\":\"desc\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"EditTile\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"titleId\",\"type\":\"uint256\"}],\"name\":\"ApproveTitle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"titleId\",\"type\":\"uint256\"}],\"name\":\"DelistTitle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"titlesSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"RegisterUsername\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WidthdrawEarnings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"SetRegistrationContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"categoriesCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"category\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"media_hash\",\"type\":\"string\"},{\"name\":\"desc\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"AddTitle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"titleCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"salesEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"copiesSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"usernames\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"titleId\",\"type\":\"uint256\"}],\"name\":\"VendTitle\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"RemoveCategory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"}],\"name\":\"CategoryAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"CategoryDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"category\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"media_hash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"desc\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TitleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"TitleDelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"TitleApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"category\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"media_hash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"desc\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TitleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"title\",\"type\":\"uint256\"}],\"name\":\"TitlePurchased\",\"type\":\"event\"}]","ContractName":"LibrariumSubmission","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://60a5d763a7d23f3453c872cc4ce7c9593d1bede4d270c3971deaf891edfb0732"}]}