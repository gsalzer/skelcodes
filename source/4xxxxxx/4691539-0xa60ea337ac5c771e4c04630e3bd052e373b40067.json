{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n//! Fundraiser contract. Just records who sent what.\r\n//! By Parity Technologies, 2017.\r\n//! Released under the Apache Licence 2.\r\n//! Modified by the Musereum.\r\n\r\n\r\n\r\n\r\n\r\n/// Will accept Ether \"contributions\" and records each both as a log and in a\r\n/// queryable records.\r\ncontract Fundraiser {\r\n    using SafeMath for uint;\r\n\r\n    // How much is enough?\r\n    uint public constant dust = 100 finney;\r\n\r\n    // Special addresses:\r\n    //  administrator can halt/unhalt/kill/adjustRate;\r\n    //  treasury receives all the funds\r\n    address public admin;\r\n    address public treasury;\r\n\r\n    // Begin and end block for the fundraising period\r\n    //uint public beginBlock;\r\n    //uint public endBlock;\r\n\r\n    // Number of wei per btc\r\n    uint public weiPerBtc;\r\n\r\n    // Default number of etm per btc\r\n    uint public EtmPerBtc;\r\n\r\n    // Are contributions abnormally halted?\r\n    bool public isHalted = false;\r\n\r\n    // The `records` mapping maps musereum addresses to the amount of ETM.\r\n    mapping (address => uint) public records;\r\n\r\n    // The total amount of ether raised\r\n    uint public totalWei = 0;\r\n    // The total amount of ETM suggested for allocation\r\n    uint public totalETM = 0;\r\n    // The number of donation\r\n    uint public numDonations = 0;\r\n\r\n    /// Constructor. `_admin` has the ability to pause the\r\n    /// contribution period and, eventually, kill this contract. `_treasury`\r\n    /// receives all funds. `_beginBlock` and `_endBlock` define the begin and\r\n    /// end of the period. `_weiPerBtc` is the ratio of ETM to ether.\r\n    function Fundraiser(\r\n        address _admin,\r\n        address _treasury,\r\n        //uint _beginBlock,\r\n        //uint _endBlock,\r\n        uint _weiPerBtc,\r\n        uint _EtmPerBtc\r\n    ) {\r\n        require(_weiPerBtc > 0);\r\n        require(_EtmPerBtc > 0);\r\n\r\n        admin = _admin;\r\n        treasury = _treasury;\r\n        //beginBlock = _beginBlock;\r\n        //endBlock = _endBlock;\r\n\r\n        weiPerBtc = _weiPerBtc;\r\n        EtmPerBtc = _EtmPerBtc;\r\n    }\r\n\r\n    // Can only be called by admin.\r\n    modifier only_admin { require(msg.sender == admin); _; }\r\n    // Can only be called by prior to the period.\r\n    //modifier only_before_period { require(block.number < beginBlock); _; }\r\n    // Can only be called during the period when not halted.\r\n    modifier only_during_period { require(/*block.number >= beginBlock || block.number < endBlock && */!isHalted); _; }\r\n    // Can only be called during the period when halted.\r\n    modifier only_during_halted_period { require(/*block.number >= beginBlock || block.number < endBlock && */isHalted); _; }\r\n    // Can only be called after the period.\r\n    //modifier only_after_period { require(block.number >= endBlock); _; }\r\n    // The value of the message must be sufficiently large to not be considered dust.\r\n    modifier is_not_dust { require(msg.value >= dust); _; }\r\n\r\n    /// Some contribution `amount` received from `recipient` at rate of `currentRate` with emergency return of `returnAddr`.\r\n    event Received(address indexed recipient, address returnAddr, uint weiAmount, uint currentRate);\r\n    /// Period halted abnormally.\r\n    event Halted();\r\n    /// Period restarted after abnormal halt.\r\n    event Unhalted();\r\n    event RateChanged(uint newRate);\r\n\r\n    // Is the fundraiser active?\r\n    function isActive() public constant returns (bool active) {\r\n        return (/*block.number >= beginBlock && block.number < endBlock && */ !isHalted);\r\n    }\r\n\r\n    /// Receive a contribution for a donor musereum address.\r\n    function donate(address _donor, address _returnAddress, bytes4 checksum) public payable only_during_period is_not_dust {\r\n        // checksum is the first 4 bytes of the sha3 of the xor of the bytes32 versions of the musereum address and the return address\r\n        require( bytes4(sha3( bytes32(_donor)^bytes32(_returnAddress) )) == checksum );\r\n\r\n        // forward the funds to the treasure\r\n        require( treasury.send(msg.value) );\r\n\r\n        // calculate the number of ETM at the current rate\r\n        uint weiPerETM = weiPerBtc.div(EtmPerBtc);\r\n        uint ETM = msg.value.div(weiPerETM);\r\n\r\n        // update the donor details\r\n        records[_donor] = records[_donor].add(ETM);\r\n\r\n        // update the totals\r\n        totalWei = totalWei.add(msg.value);\r\n        totalETM = totalETM.add(ETM);\r\n        numDonations = numDonations.add(1);\r\n\r\n        Received(_donor, _returnAddress, msg.value, weiPerETM);\r\n    }\r\n\r\n    /// Adjust the weiPerBtc rate\r\n    function adjustRate(uint newRate) public only_admin {\r\n        weiPerBtc = newRate;\r\n        RateChanged(newRate);\r\n    }\r\n\r\n    /// Halt the contribution period. Any attempt at contributing will fail.\r\n    function halt() public only_admin only_during_period {\r\n        isHalted = true;\r\n        Halted();\r\n    }\r\n\r\n    /// Unhalt the contribution period.\r\n    function unhalt() public only_admin only_during_halted_period {\r\n        isHalted = false;\r\n        Unhalted();\r\n    }\r\n\r\n    /// Kill this contract.\r\n    function kill() public only_admin /*only_after_period*/ {\r\n        suicide(treasury);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"weiPerBtc\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_donor\",\"type\":\"address\"},{\"name\":\"_returnAddress\",\"type\":\"address\"},{\"name\":\"checksum\",\"type\":\"bytes4\"}],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"name\":\"active\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalETM\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"records\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"adjustRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numDonations\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"halt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isHalted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unhalt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EtmPerBtc\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dust\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"},{\"name\":\"_treasury\",\"type\":\"address\"},{\"name\":\"_weiPerBtc\",\"type\":\"uint256\"},{\"name\":\"_EtmPerBtc\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"returnAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"weiAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"currentRate\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Halted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unhalted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RateChanged\",\"type\":\"event\"}]","ContractName":"Fundraiser","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000003c878283da027e7bc8e9c04c23faa4f02cafdcd90000000000000000000000003c20415875661dbe7669c46e89c13eeb2359e9f90000000000000000000000000000000000000000000000013c2deddfe8258fe8000000000000000000000000000000000000000000000000000000000000c350","Library":"","SwarmSource":"bzzr://3d186efe154f14297fb7656938866f49d7573a659cd0b4ba0d4cafb9b8a09a43"}]}