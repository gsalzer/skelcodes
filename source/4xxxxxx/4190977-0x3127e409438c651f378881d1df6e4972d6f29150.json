{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\n\r\ncontract raffle {\r\n    // Constants\r\n    address rakeAddress = 0x15887100f3b3cA0b645F007c6AA11348665c69e5;\r\n    uint prize = 0.1 ether;\r\n    uint rake = 0.02 ether;\r\n    uint totalTickets = 6;\r\n\r\n    // Variables\r\n    address creatorAddress;\r\n    uint pricePerTicket;\r\n    uint nextTicket;\r\n    mapping(uint => address) purchasers;\r\n\r\n    function raffle() {\r\n        creatorAddress = msg.sender;\r\n        pricePerTicket = (prize + rake) / totalTickets;\r\n        resetRaffle();\r\n    }\r\n\r\n    function resetRaffle() private {\r\n        nextTicket = 1;\r\n    }\r\n\r\n    function chooseWinner() private {\r\n        uint winningTicket = 1; // TODO: Randomize\r\n        address winningAddress = purchasers[winningTicket];\r\n        winningAddress.transfer(prize);\r\n        rakeAddress.transfer(rake);\r\n        resetRaffle();\r\n    }\r\n\r\n    function buyTickets() payable public {\r\n        uint moneySent = msg.value;\r\n\r\n        while (moneySent >= pricePerTicket && nextTicket <= totalTickets) {\r\n            purchasers[nextTicket] = msg.sender;\r\n            moneySent -= pricePerTicket;\r\n            nextTicket++;\r\n        }\r\n\r\n        // Send back leftover money\r\n        if (moneySent > 0) {\r\n            msg.sender.transfer(moneySent);\r\n        }\r\n\r\n        // Choose winner if we sold all the tickets\r\n        if (nextTicket > totalTickets) {\r\n            chooseWinner();\r\n        }\r\n    }\r\n\r\n    // TODO\r\n    function getRefund() public {\r\n        return;\r\n    }\r\n\r\n    function kill() public {\r\n        if (msg.sender == creatorAddress) {\r\n            selfdestruct(creatorAddress);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getRefund\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTickets\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"raffle","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://51981fe16174b873fa50937f7ad055ca99002efce5aaae82f04a133dc956f66a"}]}