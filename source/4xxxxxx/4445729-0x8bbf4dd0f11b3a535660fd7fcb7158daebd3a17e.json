{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * @First Smart Airdrop eGAS\r\n * @http://ethgas.stream\r\n * @egas@ethgas.stream\r\n */\r\n\r\npragma solidity ^0.4.16;\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\n library SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Owned {\r\n    // The address of the account of the current owner\r\n    address public owner;\r\n\r\n    // The publiser is the inital owner\r\n    function Owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * Access is restricted to the current owner\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * Transfer ownership to `_newOwner`\r\n     *\r\n     * @param _newOwner The address of the account that will become the new owner\r\n     */\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\ncontract EGAS is Owned {\r\n    using SafeMath for uint256;\r\n    string public symbol = \"EGAS\";\r\n    string public name = \"ETHGAS\";\r\n    uint8 public constant decimals = 8;\r\n    uint256 _initialSupply = 100000000000000;\r\n    uint256 _totalSupply = 0;\r\n\tuint256 _maxTotalSupply = 1279200000000000;\r\n\tuint256 _dropReward = 26000000000; //260 eGAS - per entry with 30% bonus to start\r\n\tuint256 _maxDropReward = 1300000000000; //13000 eGAS - per block 10min with 30% bonus to start - 50 entry max\r\n\tuint256 _rewardBonusTimePeriod = 86400; //1 day each bonus stage\r\n\tuint256 _nextRewardBonus = now + _rewardBonusTimePeriod;\r\n\tuint256 _rewardTimePeriod = 600; //10 minutes\r\n\tuint256 _rewardStart = now;\r\n\tuint256 _rewardEnd = now + _rewardTimePeriod;\r\n\tuint256 _currentAirdropped = 0;\r\n    \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n \r\n    mapping(address => uint256) balances;\r\n \r\n    mapping(address => mapping (address => uint256)) allowed;\r\n    \r\n    function OwnerReward() public {\r\n    balances[owner] = _initialSupply;\r\n    transfer(owner, balances[owner]);\r\n    }\r\n \r\n    function withdraw() public onlyOwner {\r\n        owner.transfer(this.balance);\r\n    }\r\n \r\n    function totalSupply() constant returns (uint256) {        \r\n\t\treturn _totalSupply + _initialSupply;\r\n    }\r\n    \r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n \r\n    function transfer(address _to, uint256 _amount) returns (bool success) {\r\n        if (balances[msg.sender] >= _amount \r\n            && _amount > 0\r\n            && balances[_to] + _amount > balances[_to]) {\r\n            balances[msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(msg.sender, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) returns (bool success) {\r\n        if (balances[_from] >= _amount\r\n            && allowed[_from][msg.sender] >= _amount\r\n            && _amount > 0\r\n            && balances[_to] + _amount > balances[_to]) {\r\n            balances[_from] -= _amount;\r\n            allowed[_from][msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(_from, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    function approve(address _spender, uint256 _amount) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n \r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\t\r\n\tfunction SmartAirdrop() payable returns (bool success)\r\n\t{\r\n\t\tif (now < _rewardEnd && _currentAirdropped >= _maxDropReward)\r\n\t\t\trevert();\r\n\t\telse if (now >= _rewardEnd)\r\n\t\t{\r\n\t\t\t_rewardStart = now;\r\n\t\t\t_rewardEnd = now + _rewardTimePeriod;\r\n\t\t\t_currentAirdropped = 0;\r\n\t\t}\r\n\t\r\n\t\tif (now >= _nextRewardBonus)\r\n\t\t{\r\n\t\t\t_nextRewardBonus = now + _rewardBonusTimePeriod;\r\n\t\t\t_dropReward = _dropReward - 1000000000;\r\n\t\t\t_maxDropReward = _maxDropReward - 50000000000;\r\n\t\t\t_currentAirdropped = 0;\r\n\t\t\t_rewardStart = now;\r\n\t\t\t_rewardEnd = now + _rewardTimePeriod;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ((_currentAirdropped < _maxDropReward) && (_totalSupply < _maxTotalSupply))\r\n\t\t{\r\n\t\t\tbalances[msg.sender] += _dropReward;\r\n\t\t\t_currentAirdropped += _dropReward;\r\n\t\t\t_totalSupply += _dropReward;\r\n\t\t\tTransfer(this, msg.sender, _dropReward);\r\n\t\t\treturn true;\r\n\t\t}\t\t\t\t\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tfunction MaxTotalSupply() constant returns(uint256)\r\n\t{\r\n\t\treturn _maxTotalSupply;\r\n\t}\r\n\t\r\n\tfunction DropReward() constant returns(uint256)\r\n\t{\r\n\t\treturn _dropReward;\r\n\t}\r\n\t\r\n\tfunction MaxDropReward() constant returns(uint256)\r\n\t{\r\n\t\treturn _maxDropReward;\r\n\t}\r\n\t\r\n\tfunction RewardBonusTimePeriod() constant returns(uint256)\r\n\t{\r\n\t\treturn _rewardBonusTimePeriod;\r\n\t}\r\n\t\r\n\tfunction NextRewardBonus() constant returns(uint256)\r\n\t{\r\n\t\treturn _nextRewardBonus;\r\n\t}\r\n\t\r\n\tfunction RewardTimePeriod() constant returns(uint256)\r\n\t{\r\n\t\treturn _rewardTimePeriod;\r\n\t}\r\n\t\r\n\tfunction RewardStart() constant returns(uint256)\r\n\t{\r\n\t\treturn _rewardStart;\r\n\t}\r\n\t\r\n\tfunction RewardEnd() constant returns(uint256)\r\n\t{\r\n\t\treturn _rewardEnd;\r\n\t}\r\n\t\r\n\tfunction CurrentAirdropped() constant returns(uint256)\r\n\t{\r\n\t\treturn _currentAirdropped;\r\n\t}\r\n\t\r\n\tfunction TimeNow() constant returns(uint256)\r\n\t{\r\n\t\treturn now;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MaxDropReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NextRewardBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DropReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RewardStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RewardTimePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"SmartAirdrop\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CurrentAirdropped\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RewardEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TimeNow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"OwnerReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RewardBonusTimePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MaxTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"EGAS","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6f36466ab8fc9f5102f5917740a580ad353889a8b6d69e0270f9c34023a27f2c"}]}