{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n \r\ncontract NRMc {\r\n    string public symbol = \"NRMc\";\r\n    string public name = \"NRMc Closed ICO\";\r\n    uint8 public constant decimals = 18;\r\n    uint256 _totalSupply = 20000000000000000000000000;\r\n    uint256 perReserve   =  2000000000000000000000000;\r\n    bool startDone = false;\r\n    bool finishDone = false;\r\n    bool onefiveDone = false;\r\n    address owner = 0;\r\n    address reserve1 = 0x0d4dAA952a8840715d901f97EDb98973Ce8010F7;\r\n    address reserve2 = 0xCd4846fF42C1DCe3E421cb4fE8d01523B962D641;\r\n    address reserve3 = 0x2241C99B6f44Cc630a073703EdFDf3c9964CbE22;\r\n    address reserve4 = 0x5c5bfC25A0B99ac5F974927F1f6D39f19Af9D14C;\r\n    address reserve5 = 0xa8356f49640093cec3dCd6dcE1ff4Dfe3785c17c;\r\n    bool prereserved1Done = false;\r\n    bool prereserved2Done = false;\r\n    bool prereserved3Done = false;\r\n    bool prereserved4Done = false;\r\n    bool prereserved5Done = false;\r\n    address out1 = 0xF9D23f5d833dB355bfc870c8aCD9f4fc7EF05883;\r\n    address out2 = 0x5c07f5DD4d3eE06A977Dee53072e10de9414E3f0;\r\n    address out3 = 0xF425821a2545cF1414B6E342ff5D95f3c572a7CD;\r\n    address out4 = 0xa873134afa83410787Ae29dBfB39e5C38ca05fF2;\r\n    address out5 = 0x5E663D73de8205b3f339fAA5a4218AcA95963260;\r\n    bool public out1Done = false;\r\n    bool public out2Done = false;\r\n    bool public out3Done = false;\r\n    bool public out4Done = false;\r\n    bool public out5Done = false;\r\n    uint public amountRaised;\r\n    uint public deadline;\r\n    uint public overRaisedUnsend = 0;\r\n    uint public backers = 0;\r\n    uint public rate = 45000;\r\n    uint public onefive = 0;\r\n    uint _durationInMinutes = 0;\r\n    mapping(address => uint256) public balanceOf;\r\n    \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    mapping(address => uint256) balances;\r\n \r\n    mapping(address => mapping (address => uint256)) allowed;\r\n \r\n    function NRMc(address adr) {\r\n        if (startDone == false) {\r\n        owner = adr;        \r\n        }\r\n    }\r\n    \r\n    function StartICO(uint256 durationInMinutes) {\r\n        if (msg.sender == owner \r\n        && startDone == false)\r\n        {\r\n            balances[owner] = _totalSupply;\r\n            _durationInMinutes = durationInMinutes;\r\n            deadline = now + durationInMinutes * 1 minutes;\r\n            startDone = true;\r\n        }\r\n    }\r\n    \r\n    function SendPreReserved1() {\r\n            if (msg.sender == owner \r\n            && prereserved1Done == false\r\n            && balances[owner] >= perReserve\r\n            && balances[reserve1] + perReserve > balances[reserve1]\r\n            && now <= deadline\r\n            && !finishDone \r\n            && startDone) \r\n            {\r\n                balances[owner] -= perReserve;\r\n                balances[reserve1] += perReserve;\r\n                Transfer(owner, reserve1, perReserve);\r\n                prereserved1Done = true;\r\n                backers += 1; \r\n            }\r\n    }       \r\n    \r\n    function SendPreReserved2() {\r\n            if (msg.sender == owner \r\n            && prereserved2Done == false\r\n            && balances[owner] >= perReserve\r\n            && balances[reserve2] + perReserve > balances[reserve2]\r\n            && now <= deadline\r\n            && !finishDone \r\n            && startDone) \r\n            {\r\n                balances[owner] -= perReserve;\r\n                balances[reserve2] += perReserve;\r\n                Transfer(owner, reserve2, perReserve);\r\n                prereserved2Done = true;\r\n                backers += 1; \r\n            }\r\n    }       \r\n\r\n    function SendPreReserved3() {\r\n            if (msg.sender == owner \r\n            && prereserved3Done == false\r\n            && balances[owner] >= perReserve\r\n            && balances[reserve3] + perReserve > balances[reserve3]\r\n            && now <= deadline\r\n            && !finishDone \r\n            && startDone) \r\n            {\r\n                balances[owner] -= perReserve;\r\n                balances[reserve3] += perReserve;\r\n                Transfer(owner, reserve3, perReserve);\r\n                prereserved3Done = true;\r\n                backers += 1; \r\n            }\r\n    }       \r\n    \r\n    function SendPreReserved4() {\r\n            if (msg.sender == owner \r\n            && prereserved4Done == false\r\n            && balances[owner] >= perReserve\r\n            && balances[reserve4] + perReserve > balances[reserve4]\r\n            && now <= deadline\r\n            && !finishDone \r\n            && startDone) \r\n            {\r\n                balances[owner] -= perReserve;\r\n                balances[reserve4] += perReserve;\r\n                Transfer(owner, reserve4, perReserve);\r\n                prereserved4Done = true;\r\n                backers += 1; \r\n            }\r\n    }       \r\n    \r\n    function SendPreReserved5() {\r\n            if (msg.sender == owner \r\n            && prereserved5Done == false\r\n            && balances[owner] >= perReserve\r\n            && balances[reserve5] + perReserve > balances[reserve5]\r\n            && now <= deadline\r\n            && !finishDone \r\n            && startDone) \r\n            {\r\n                balances[owner] -= perReserve;\r\n                balances[reserve5] += perReserve;\r\n                Transfer(owner, reserve5, perReserve);\r\n                prereserved5Done = true;\r\n                backers += 1; \r\n            }\r\n    }       \r\n \r\n    function totalSupply() constant returns (uint256 totalSupply) {        \r\n        return _totalSupply;\r\n    }\r\n \r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n \r\n    function transfer(address _to, uint256 _amount) returns (bool success) {\r\n        if (balances[msg.sender] >= _amount \r\n            && _amount > 0\r\n            && balances[_to] + _amount > balances[_to]) {\r\n            balances[msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(msg.sender, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) returns (bool success) {\r\n        if (balances[_from] >= _amount\r\n            && allowed[_from][msg.sender] >= _amount\r\n            && _amount > 0\r\n            && balances[_to] + _amount > balances[_to]) {\r\n            balances[_from] -= _amount;\r\n            allowed[_from][msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(_from, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    function () payable {\r\n        uint _amount = msg.value * rate;\r\n        uint amount = msg.value;\r\n        if (balances[owner] >= _amount\r\n            && _amount > 0\r\n            && balances[msg.sender] + _amount > balances[msg.sender]\r\n            && now <= deadline\r\n            && !finishDone \r\n            && startDone) {\r\n        backers += 1;\r\n        balances[msg.sender] += _amount;\r\n        balances[owner] -= _amount;\r\n        amountRaised += amount;\r\n        Transfer(owner, msg.sender, _amount);\r\n        } else {\r\n            if (!msg.sender.send(amount)) {\r\n                overRaisedUnsend += amount; \r\n            }\r\n        }\r\n    }\r\n \r\n    function approve(address _spender, uint256 _amount) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n \r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    \r\n    modifier afterDeadline() { if (now > deadline || balances[owner] == 0) _; }\r\n\r\n    function safeWithdrawal() afterDeadline {\r\n        \r\n    if (onefiveDone == false) {\r\n        onefive = this.balance / 5;\r\n        onefiveDone = true;\r\n    }\r\n\r\n    if (out1 == msg.sender && !out1Done) {\r\n        if (out1.send(onefive)) {\r\n           out1Done = true;\r\n        } \r\n    }\r\n        \r\n    if (out2 == msg.sender && !out2Done) {\r\n        if (out2.send(onefive)) {\r\n           out2Done = true;\r\n        } \r\n    }  \r\n        \r\n    if (out3 == msg.sender && !out3Done) {\r\n        if (out3.send(onefive)) {\r\n           out3Done = true;\r\n        } \r\n    }\r\n    \r\n    if (out4 == msg.sender && !out4Done) {\r\n        if (out4.send(onefive)) {\r\n           out4Done = true;\r\n        } \r\n    }\r\n    \r\n    if (out5 == msg.sender && !out5Done) {\r\n        if (out5.send(onefive)) {\r\n           out5Done = true;\r\n        } \r\n    }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"SendPreReserved5\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"SendPreReserved1\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"SendPreReserved4\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onefive\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"out5Done\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"out3Done\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"out2Done\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"durationInMinutes\",\"type\":\"uint256\"}],\"name\":\"StartICO\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"out1Done\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"backers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"overRaisedUnsend\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"SendPreReserved3\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"SendPreReserved2\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"out4Done\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"adr\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"NRMc","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000028c4d59ddd07b12bead2b287db308e19abfc5891","Library":"","SwarmSource":"bzzr://bb15fb73b5746d382c2858481e63278a2458ae111902c8c9e870ba066a1a8f89"}]}