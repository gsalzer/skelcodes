{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n/*\r\ncreated by Igor Stulenkov \r\n*/\r\n\r\ncontract OBS_V1{\r\n \r\n\taddress public owner; //Fabric owner\r\n    mapping(address => address)    public tokens2owners;        // tokens to owners    \r\n    mapping(address => address []) public owners2tokens;        // owners to tokens\r\n    mapping(address => address)    public tmpAddr2contractAddr; // tmp addr contract to contract\r\n    \r\n    //Event\r\n    event evntCreateContract(address _addrTmp,\r\n                             address _addrToken,\r\n                             address _owner,\r\n                             address _addrBroker,\r\n                             uint256 _supply,\r\n                             string   _name\r\n                            ); \r\n    //Constructor\r\n\tfunction OBS_V1() public{\r\n\t\towner = msg.sender;\r\n\t}\r\n    \r\n    //Create contract\r\n    function createContract (address _owner,\r\n                            address _addrTmp, \r\n                            uint256 _supply,\r\n                            string   _name) public{\r\n        //Only fabric owner may create Token\r\n        if (owner != msg.sender) revert();\r\n\r\n        //Create contract\r\n        address addrToken = new MyObs( _owner, _supply, _name, \"\", 0, msg.sender);\r\n\r\n        //Save info for public\r\n        tokens2owners[addrToken]       = _owner;\t\r\n\t\towners2tokens[_owner].push(addrToken);\r\n        tmpAddr2contractAddr[_addrTmp] = addrToken;\r\n        \r\n        //Send event\r\n        evntCreateContract(_addrTmp, addrToken, _owner, msg.sender, _supply, _name); \r\n    }    \r\n}\r\n\r\ncontract MyObs{ \r\n\r\n    //Addresses\r\n    address public addrOwner;           //addr official owner\r\n    address public addrFabricContract;  //addr fabric contract, that create this token\r\n    address public addrBroker;          //addr broker account, that may call transferFrom\r\n\r\n    //Define token\r\n    string public  name;                //token name    ='T_N', example T_1,T_12,...etc\r\n    string public  symbol;              //token symbol  =''\r\n    uint8  public  decimals;            //token decimal = 0\r\n    uint256 public supply;              //token count\r\n\r\n    //Balance of accounts\r\n    mapping (address => uint256) public balances; \r\n\r\n    //Events \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n    \r\n    //Initializes contract \r\n    function MyObs( address _owner, uint256 _supply, string _name, string _symbol, uint8 _decimals, address _addrBroker) public{\r\n        if (_supply == 0) revert();\r\n        \r\n        //Set addresses\r\n        addrOwner          = _owner;      //addr official owner\r\n        addrFabricContract = msg.sender;  //addr fabric contract\r\n        addrBroker         = _addrBroker; //addr broker account, that may call transferFrom\r\n\r\n        //Owner get all tokens\r\n        balances[_owner]   = _supply;\r\n\r\n        //Define token\r\n        name     = _name;     \r\n        symbol   = _symbol;\r\n        decimals = _decimals;\r\n        supply   = _supply;\r\n    }\r\n\r\n    function totalSupply() public constant returns (uint256) {\r\n        return supply;\r\n    }\r\n\r\n    function balanceOf(address _owner)public constant returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    /* Send coins */\r\n    function transfer(address _to, uint256 _value)public returns (bool) {\r\n        /* if the sender doenst have enough balance then stop */\r\n        if (balances[msg.sender] < _value) return false;\r\n        if (balances[_to] + _value < balances[_to]) return false;\r\n        \r\n        /* Add and subtract new balances */\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        \r\n        /* Notifiy anyone listening that this transfer took place */\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom( address _from, address _to, uint256 _value )public returns (bool) {\r\n        //Only broker can call this\r\n        if (addrBroker != msg.sender) return false;\r\n        \r\n        /* if the sender doenst have enough balance then stop */\r\n        if (balances[_from] < _value) return false;\r\n        if (balances[_to] + _value < balances[_to]) return false;\r\n        \r\n        /* Add and subtract new balances */\r\n        balances[_from] -= _value;\r\n        balances[_to] += _value;\r\n        \r\n        /* Notifiy anyone listening that this transfer took place */\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tmpAddr2contractAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_addrTmp\",\"type\":\"address\"},{\"name\":\"_supply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners2tokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokens2owners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addrTmp\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_addrToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_addrBroker\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_supply\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"evntCreateContract\",\"type\":\"event\"}]","ContractName":"OBS_V1","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://768184ac7a9cf33b15527e858b43f9e31c32f5a4b3f787901b2fb6718f96371f"}]}