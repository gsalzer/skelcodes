{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract Ownable {\r\n    \r\n    address public owner;\r\n\r\n    event OwnershipTransferred(address from, address to);\r\n\r\n    /**\r\n     * The address whcih deploys this contrcat is automatically assgined ownership.\r\n     * */\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * Functions with this modifier can only be executed by the owner of the contract. \r\n     * */\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * Transfers ownership provided that a valid address is given. This function can \r\n     * only be called by the owner of the contract. \r\n     */\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(_newOwner != 0x0);\r\n        OwnershipTransferred(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    \r\n    function mul(uint256 a, uint256 b) internal  returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract ShizzleNizzle {\r\n    function transfer(address _to, uint256 _amount) public returns(bool);\r\n}\r\n\r\ncontract AirDropSHNZ is Ownable {\r\n\r\n    using SafeMath for uint256;\r\n    \r\n    ShizzleNizzle public constant SHNZ = ShizzleNizzle(0x8b0C9f462C239c963d8760105CBC935C63D85680);\r\n\r\n    uint256 public rate;\r\n\r\n    function AirDropSHNZ() public {\r\n        rate = 50000e8;\r\n    }\r\n\r\n    function() payable {\r\n        buyTokens(msg.sender);\r\n    }\r\n\r\n    function buyTokens(address _addr) public payable returns(bool) {\r\n        require(_addr != 0x0);\r\n        SHNZ.transfer(msg.sender, msg.value.mul(rate).div(1e18));\r\n        forwardFunds();\r\n        return true;\r\n    }\r\n\r\n    function forwardFunds() internal {\r\n        owner.transfer(this.balance);\r\n    }\r\n\r\n    function airDrop(address[] _addrs, uint256 _amount) public onlyOwner {\r\n        require(_addrs.length > 0);\r\n        for (uint i = 0; i < _addrs.length; i++) {\r\n            if (_addrs[i] != 0x0) {\r\n                SHNZ.transfer(_addrs[i], _amount.mul(100000000));\r\n            }\r\n        }\r\n    }\r\n\r\n    function issueTokens(address _beneficiary, uint256 _amount) public onlyOwner {\r\n        require(_beneficiary != 0x0 && _amount > 0);\r\n        SHNZ.transfer(_beneficiary, _amount.mul(100000000));\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"issueTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SHNZ\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrs\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"airDrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"AirDropSHNZ","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fb3da6e50df19da7c8e1c8f50e8c345e905685eb6ead46b8559e62f59c3a719a"}]}