{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract FrikandelToken {\r\n    address public contractOwner = msg.sender; //King Frikandel\r\n\r\n    bool public ICOEnabled = true; //Enable selling new Frikandellen\r\n    bool public Killable = true; //Enabled when the contract can commit suicide (In case of a problem with the contract in its early development, we will set this to false later on)\r\n\r\n    mapping (address => uint256) balances;\r\n\r\n    uint256 public totalSupply = 500000; //500k Frikandellen (y'all ready for some airdrop??)\r\n    uint256 internal hardLimitICO = 750000; //Do not allow more then 750k frikandellen to exist, ever. (The ICO will not sell past this)\r\n\r\n    function name() public pure returns (string) { return \"Frikandel\"; } //Frikandellen zijn lekker\r\n    function symbol() public pure returns (string) { return \"FRKNDL\"; }\r\n    function decimals() public pure returns (uint8) { return 0; } //Imagine getting half of a frikandel, that must be pretty shitty... Lets not do that\r\n\r\n    function balanceOf(address _owner) public view returns (uint256) { return balances[_owner]; }\r\n\r\n\tfunction FrikandelToken() public {\r\n\t    balances[contractOwner] = totalSupply; //Lets get this started :)\r\n\t}\r\n\t\r\n\tfunction transferOwnership(address newOwner) public {\r\n\t    if (msg.sender != contractOwner) { revert(); } //:crying_tears_of_joy:\r\n\r\n        contractOwner = newOwner; //Nieuwe eigennaar van de frikandellentent\r\n\t}\r\n\t\r\n\tfunction Destroy() public {\r\n\t    if (msg.sender != contractOwner) { revert(); } //yo what why\r\n\t    \r\n\t    if (Killable == true){ //Only if the contract is killable.. Go ahead\r\n\t        selfdestruct(contractOwner);\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction DisableSuicide() public returns (bool success){\r\n\t    if (msg.sender != contractOwner) { revert(); } //u dont control me\r\n\t    \r\n\t    Killable = false;\r\n\t    return true;\r\n\t}\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        if(msg.data.length < (2 * 32) + 4) { revert(); } //Something wrong yo\r\n\r\n        if (_value == 0) { return false; } //y try to transfer without specifying any???\r\n\r\n        uint256 fromBalance = balances[msg.sender];\r\n\r\n        bool sufficientFunds = fromBalance >= _value;\r\n        bool overflowed = balances[_to] + _value < balances[_to];\r\n\r\n        if (sufficientFunds && !overflowed) {\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            \r\n            Transfer(msg.sender, _to, _value);\r\n            return true; //Smakelijk!\r\n        } else { return false; } //Sorry man je hebt niet genoeg F R I K A N D E L L E N\r\n    }\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n    function enableICO() public {\r\n        if (msg.sender != contractOwner) { revert(); } //Bro stay of my contract\r\n        ICOEnabled = true;\r\n    }\r\n\r\n    function disableICO() public {\r\n        if (msg.sender != contractOwner) { revert(); } //BRO what did I tell you\r\n        ICOEnabled = false;\r\n    }\r\n\r\n    function() payable public {\r\n        if (!ICOEnabled) { revert(); }\r\n        if(balances[msg.sender]+(msg.value / 1e14) > 30000) { revert(); } //This would give you more then 30000 frikandellen, you can't buy from this account anymore through the ICO\r\n        if(totalSupply+(msg.value / 1e14) > hardLimitICO) { revert(); } //Hard limit on Frikandellen\r\n        if (msg.value == 0) { return; }\r\n\r\n        contractOwner.transfer(msg.value);\r\n\r\n        uint256 tokensIssued = (msg.value / 1e14); //Since 1 token can be bought for 0.0001 ETH split the value (in Wei) through 1e14 to get the amount of tokens\r\n\r\n        totalSupply += tokensIssued;\r\n        balances[msg.sender] += tokensIssued;\r\n\r\n        Transfer(address(this), msg.sender, tokensIssued);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"DisableSuicide\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Killable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICOEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enableICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"FrikandelToken","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c230a36de7f6b0b724c8dc7c91bd61cecee44be6032a5affea403e45ed04d09c"}]}