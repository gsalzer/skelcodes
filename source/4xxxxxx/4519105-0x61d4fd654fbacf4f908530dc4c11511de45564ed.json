{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    if (msg.sender != owner) {\r\n      revert();\r\n    }\r\n    _;\r\n  }\r\n}\r\n\r\ncontract RBInformationStore is Ownable {\r\n    address public profitContainerAddress;\r\n    address public companyWalletAddress;\r\n    uint public etherRatioForOwner;\r\n    address public multisig;\r\n\r\n    function RBInformationStore(address _profitContainerAddress, address _companyWalletAddress, uint _etherRatioForOwner, address _multisig) {\r\n        profitContainerAddress = _profitContainerAddress;\r\n        companyWalletAddress = _companyWalletAddress;\r\n        etherRatioForOwner = _etherRatioForOwner;\r\n        multisig = _multisig;\r\n    }\r\n\r\n    function setProfitContainerAddress(address _address)  {\r\n        require(multisig == msg.sender);\r\n        if(_address != 0x0) {\r\n            profitContainerAddress = _address;\r\n        }\r\n    }\r\n\r\n    function setCompanyWalletAddress(address _address)  {\r\n        require(multisig == msg.sender);\r\n        if(_address != 0x0) {\r\n            companyWalletAddress = _address;\r\n        }\r\n    }\r\n\r\n    function setEtherRatioForOwner(uint _value)  {\r\n        require(multisig == msg.sender);\r\n        if(_value != 0) {\r\n            etherRatioForOwner = _value;\r\n        }\r\n    }\r\n\r\n    function changeMultiSig(address newAddress){\r\n        require(multisig == msg.sender);\r\n        multisig = newAddress;\r\n    }\r\n\r\n    function changeOwner(address newOwner){\r\n        require(multisig == msg.sender);\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract Rate {\r\n    uint public ETH_USD_rate;\r\n    RBInformationStore public rbInformationStore;\r\n\r\n    modifier onlyOwner() {\r\n        if (msg.sender != rbInformationStore.owner()) {\r\n            revert();\r\n        }\r\n        _;\r\n    }\r\n\r\n    function Rate(uint _rate, address _address) {\r\n        ETH_USD_rate = _rate;\r\n        rbInformationStore = RBInformationStore(_address);\r\n    }\r\n\r\n    function setRate(uint _rate) onlyOwner {\r\n        ETH_USD_rate = _rate;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ETH_USD_rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rbInformationStore\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"},{\"name\":\"_address\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"Rate","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000007a9c000000000000000000000000958f81dF7c7D4832058Bf4A520f000f05F4601D1","Library":"","SwarmSource":"bzzr://2fa9dfd447f9a315b23ce1688f10e3f7b447a02344f06a9b8a3043ab7a24374f"}]}