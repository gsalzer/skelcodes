{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\nfile:   Hut34ENTRP.sol\r\nver:    0.1.0\r\nauthor: Darryl Morris\r\ndate:   19-12-2017\r\nemail:  o0ragman0o AT gmail.com\r\n(c) Darryl Morris 2017\r\n\r\nA collated contract set for the receipt of funds and production and transfer\r\nof ERC20 tokens as specified by Hut34.\r\n\r\nLicense\r\n-------\r\nThis software is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \r\nSee MIT Licence for further details.\r\n<https://opensource.org/licenses/MIT>.\r\n\r\n-------------\r\nRelease Notes\r\n-------------\r\n* Reissuence of Hut34 ENT tokens as ENTRP tokens due to post sale offchain\r\nbulk transfer tool bug, and desire to update ticker / symbol.\r\n\r\nDedications\r\n-------------\r\n* With love to Isabella and Molly from your dad\r\n* xx to Edie, Robin, William and Charlotte x\r\n*/\r\n\r\npragma solidity ^0.4.17;\r\n\r\ncontract Hut34Config\r\n{\r\n    // ERC20 token name\r\n    string  public constant name            = \"Hut34 Entropy Token\";\r\n    \r\n    // ERC20 trading symbol\r\n    string  public constant symbol          = \"ENTRP\";\r\n\r\n    // ERC20 decimal places\r\n    uint8   public constant decimals        = 18;\r\n\r\n    // Total supply (* in unit ENT *)\r\n    uint    public constant TOTAL_TOKENS    = 100000000;\r\n\r\n    // Contract owner at time of deployment.\r\n    address public constant OWNER           = 0xdA3780Cff2aE3a59ae16eC1734DEec77a7fd8db2;\r\n\r\n    // A Hut34 address to own tokens\r\n    address public constant HUT34_RETAIN    = 0x3135F4acA3C1Ad4758981500f8dB20EbDc5A1caB;\r\n    \r\n    // A Hut34 address to accept raised funds\r\n    address public constant HUT34_WALLET    = 0xA70d04dC4a64960c40CD2ED2CDE36D76CA4EDFaB;\r\n    \r\n    // Percentage of tokens to be vested over 2 years. 20%\r\n    uint    public constant VESTED_PERCENT  = 20;\r\n\r\n    // Vesting period\r\n    uint    public constant VESTING_PERIOD  = 26 weeks;\r\n\r\n    // Origional Token sale contract with misallocated post token sale whitelist, see https://medium.com/@hut34project/entropy-token-reissuance-f37a8574c05c\r\n    address public constant REPLACES        = 0x9901ed1e649C4a77C7Fff3dFd446ffE3464da747;\r\n}\r\n\r\n\r\nlibrary SafeMath\r\n{\r\n    // a add to b\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        assert(c >= a);\r\n    }\r\n    \r\n    // a subtract b\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        c = a - b;\r\n        assert(c <= a);\r\n    }\r\n    \r\n    // a multiplied by b\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n    }\r\n    \r\n    // a divided by b\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        assert(b != 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n\r\ncontract ERC20Token\r\n{\r\n    using SafeMath for uint;\r\n\r\n/* Constants */\r\n\r\n    // none\r\n    \r\n/* State variable */\r\n\r\n    /// @return The Total supply of tokens\r\n    uint public totalSupply;\r\n    \r\n    /// @return Tokens owned by an address\r\n    mapping (address => uint) balances;\r\n    \r\n    /// @return Tokens spendable by a thridparty\r\n    mapping (address => mapping (address => uint)) allowed;\r\n\r\n/* Events */\r\n\r\n    // Triggered when tokens are transferred.\r\n    event Transfer(\r\n        address indexed _from,\r\n        address indexed _to,\r\n        uint256 _amount);\r\n\r\n    // Triggered whenever approve(address _spender, uint256 _amount) is called.\r\n    event Approval(\r\n        address indexed _owner,\r\n        address indexed _spender,\r\n        uint256 _amount);\r\n\r\n/* Modifiers */\r\n\r\n    // none\r\n    \r\n/* Functions */\r\n\r\n    // Using an explicit getter allows for function overloading    \r\n    function balanceOf(address _addr)\r\n        public\r\n        view\r\n        returns (uint)\r\n    {\r\n        return balances[_addr];\r\n    }\r\n    \r\n    // Using an explicit getter allows for function overloading    \r\n    function allowance(address _owner, address _spender)\r\n        public\r\n        constant\r\n        returns (uint)\r\n    {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    // Send _value amount of tokens to address _to\r\n    function transfer(address _to, uint256 _amount)\r\n        public\r\n        returns (bool)\r\n    {\r\n        return xfer(msg.sender, _to, _amount);\r\n    }\r\n\r\n    // Send _value amount of tokens from address _from to address _to\r\n    function transferFrom(address _from, address _to, uint256 _amount)\r\n        public\r\n        returns (bool)\r\n    {\r\n        require(_amount <= allowed[_from][msg.sender]);\r\n        \r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n        return xfer(_from, _to, _amount);\r\n    }\r\n\r\n    // Process a transfer internally.\r\n    function xfer(address _from, address _to, uint _amount)\r\n        internal\r\n        returns (bool)\r\n    {\r\n        require(_amount <= balances[_from]);\r\n\r\n        Transfer(_from, _to, _amount);\r\n        \r\n        // avoid wasting gas on 0 token transfers\r\n        if(_amount == 0) return true;\r\n        \r\n        balances[_from] = balances[_from].sub(_amount);\r\n        balances[_to]   = balances[_to].add(_amount);\r\n        \r\n        return true;\r\n    }\r\n\r\n    // Approves a third-party spender\r\n    function approve(address _spender, uint256 _amount)\r\n        public\r\n        returns (bool)\r\n    {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\ncontract Hut34ENTRPAbstract\r\n{\r\n    /// @dev Logged when new owner accepts ownership\r\n    /// @param _from the old owner address\r\n    /// @param _to the new owner address\r\n    event ChangedOwner(address indexed _from, address indexed _to);\r\n    \r\n    /// @dev Logged when owner initiates a change of ownership\r\n    /// @param _to the new owner address\r\n    event ChangeOwnerTo(address indexed _to);\r\n    \r\n    /// @dev Logged when vested tokens are released back to HUT32_WALLET\r\n    /// @param _releaseDate The official release date (even if released at\r\n    /// later date)\r\n    event VestingReleased(uint _releaseDate);\r\n\r\n//\r\n// Constants\r\n//\r\n\r\n    // The Hut34 vesting 'psudo-address' for transferring and releasing vested\r\n    // tokens to the Hut34 Wallet. The address is UTF8 encoding of the\r\n    // string and can only be accessed by the 'releaseVested()' function.\r\n    // `0x48757433342056657374696e6700000000000000`\r\n    address public constant HUT34_VEST_ADDR = address(bytes20(\"Hut34 Vesting\"));\r\n\r\n//\r\n// State Variables\r\n//\r\n\r\n    /// @dev An address permissioned to enact owner restricted functions\r\n    /// @return owner\r\n    address public owner;\r\n    \r\n    /// @dev An address permissioned to take ownership of the contract\r\n    /// @return new owner address\r\n    address public newOwner;\r\n\r\n    /// @returns Date of next vesting release\r\n    uint public nextReleaseDate;\r\n\r\n//\r\n// Modifiers\r\n//\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n//\r\n// Function Abstracts\r\n//\r\n\r\n\r\n    /// @notice Make bulk transfer of tokens to many addresses\r\n    /// @param _addrs An array of recipient addresses\r\n    /// @param _amounts An array of amounts to transfer to respective addresses\r\n    /// @return Boolean success value\r\n    function transferToMany(address[] _addrs, uint[] _amounts)\r\n        public returns (bool);\r\n\r\n    /// @notice Release vested tokens after a maturity date\r\n    /// @return Boolean success value\r\n    function releaseVested() public returns (bool);\r\n\r\n    /// @notice Salvage `_amount` tokens at `_kaddr` and send them to `_to`\r\n    /// @param _kAddr An ERC20 contract address\r\n    /// @param _to and address to send tokens\r\n    /// @param _amount The number of tokens to transfer\r\n    /// @return Boolean success value\r\n    function transferExternalToken(address _kAddr, address _to, uint _amount)\r\n        public returns (bool);\r\n}\r\n\r\n\r\n/*-----------------------------------------------------------------------------\\\r\n\r\n Hut34ENTRP implimentation\r\n\r\n\\*----------------------------------------------------------------------------*/\r\n\r\ncontract Hut34ENTRP is \r\n    ERC20Token,\r\n    Hut34ENTRPAbstract,\r\n    Hut34Config\r\n{\r\n    using SafeMath for uint;\r\n\r\n//\r\n// Constants\r\n//\r\n\r\n    // Token fixed point for decimal places\r\n    uint constant TOKEN = uint(10)**decimals; \r\n\r\n    // Calculate vested tokens\r\n    uint public constant VESTED_TOKENS =\r\n            TOTAL_TOKENS * TOKEN * VESTED_PERCENT / 100;\r\n            \r\n//\r\n// Functions\r\n//\r\n\r\n    function Hut34ENTRP()\r\n        public\r\n    {\r\n        // Run sanity checks\r\n        require(TOTAL_TOKENS != 0);\r\n        require(OWNER != 0x0);\r\n        require(HUT34_RETAIN != 0x0);\r\n        require(HUT34_WALLET != 0x0);\r\n        require(bytes(name).length != 0);\r\n        require(bytes(symbol).length != 0);\r\n\r\n        owner = OWNER;\r\n        totalSupply = TOTAL_TOKENS.mul(TOKEN);\r\n\r\n        // Mint the total supply into Hut34 token holding address\r\n        balances[HUT34_RETAIN] = totalSupply;\r\n        Transfer(0x0, HUT34_RETAIN, totalSupply);\r\n\r\n        // Transfer vested tokens to vesting account\r\n        xfer(HUT34_RETAIN, HUT34_VEST_ADDR, VESTED_TOKENS);\r\n\r\n        // Set first vesting release date\r\n        nextReleaseDate = now.add(VESTING_PERIOD);\r\n    }\r\n\r\n    // Releases vested tokens back to Hut34 wallet\r\n    function releaseVested()\r\n        public\r\n        returns (bool)\r\n    {\r\n        require(now > nextReleaseDate);\r\n        VestingReleased(nextReleaseDate);\r\n        nextReleaseDate = nextReleaseDate.add(VESTING_PERIOD);\r\n        return xfer(HUT34_VEST_ADDR, HUT34_RETAIN, VESTED_TOKENS / 4);\r\n    }\r\n\r\n//\r\n// ERC20 additional and overloaded functions\r\n//\r\n\r\n    // Allows a sender to transfer tokens to an array of recipients\r\n    function transferToMany(address[] _addrs, uint[] _amounts)\r\n        public\r\n        returns (bool)\r\n    {\r\n        require(_addrs.length == _amounts.length);\r\n        uint len = _addrs.length;\r\n        for(uint i = 0; i < len; i++) {\r\n            xfer(msg.sender, _addrs[i], _amounts[i]);\r\n        }\r\n        return true;\r\n    }\r\n    \r\n//\r\n// Contract management functions\r\n//\r\n\r\n    // Initiate a change of owner to `_owner`\r\n    function changeOwner(address _owner)\r\n        public\r\n        onlyOwner\r\n        returns (bool)\r\n    {\r\n        ChangeOwnerTo(_owner);\r\n        newOwner = _owner;\r\n        return true;\r\n    }\r\n    \r\n    // Finalise change of ownership to newOwner\r\n    function acceptOwnership()\r\n        public\r\n        returns (bool)\r\n    {\r\n        require(msg.sender == newOwner);\r\n        ChangedOwner(owner, msg.sender);\r\n        owner = newOwner;\r\n        delete newOwner;\r\n        return true;\r\n    }\r\n\r\n    // Owner can salvage ERC20 tokens that may have been sent to the account\r\n    function transferExternalToken(address _kAddr, address _to, uint _amount)\r\n        public\r\n        onlyOwner\r\n        returns (bool) \r\n    {\r\n        require(ERC20Token(_kAddr).transfer(_to, _amount));\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"VESTING_PERIOD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextReleaseDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOTAL_TOKENS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HUT34_VEST_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseVested\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_kAddr\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferExternalToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addrs\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferToMany\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HUT34_WALLET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REPLACES\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VESTED_PERCENT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VESTED_TOKENS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"HUT34_RETAIN\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangedOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"ChangeOwnerTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_releaseDate\",\"type\":\"uint256\"}],\"name\":\"VestingReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Hut34ENTRP","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://216f0ed6de613e98bb8186818c7d26bf6030633a4c73a701d92071b91e67557e"}]}