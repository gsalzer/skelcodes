{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.19;\r\n\r\n\r\ncontract InterfaceDeusETH {\r\n    bool public gameOver;\r\n    bool public gameOverByUser;\r\n    function getHolder(uint256 _id) public returns (address);\r\n    function changeHolder(uint256 _id, address _newholder) public returns (bool);\r\n}\r\n\r\n\r\ncontract StockExchange {\r\n    bool public started = false;\r\n\r\n    //7200 - 120 minutes\r\n    uint256 public stopTimeLength = 7200;\r\n    uint256 public stopTime = 0;\r\n\r\n    //max token supply\r\n    uint256 public cap = 50;\r\n\r\n    address public owner;\r\n\r\n    // address of tokens\r\n    address public deusETH;\r\n\r\n    mapping(uint256 => uint256) public priceList;\r\n    mapping(uint256 => address) public holderList;\r\n\r\n    InterfaceDeusETH private lottery = InterfaceDeusETH(0x0);\r\n\r\n    event TokenSale(uint256 indexed id, uint256 price);\r\n    event TokenBack(uint256 indexed id);\r\n    event TokenSold(uint256 indexed id, uint256 price);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function StockExchange() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function setLottery(address _lottery) public onlyOwner {\r\n        require(!started);\r\n        lottery = InterfaceDeusETH(_lottery);\r\n        deusETH = _lottery;\r\n        started = true;\r\n    }\r\n\r\n    function sale(uint256 _id, uint256 _price) public returns (bool) {\r\n        require(started);\r\n        require(_id > 0 && _id <= cap);\r\n        require(!lottery.gameOver());\r\n        require(!lottery.gameOverByUser());\r\n        require(now > stopTime);\r\n        require(lottery.getHolder(_id) == msg.sender);\r\n\r\n        priceList[_id] = _price;\r\n        holderList[_id] = msg.sender;\r\n\r\n        assert(lottery.changeHolder(_id, this));\r\n        TokenSale(_id, _price);\r\n        return true;\r\n    }\r\n\r\n    function getBackToken(uint256 _id) public returns (bool) {\r\n        require(started);\r\n        require(_id > 0 && _id <= cap);\r\n        require(!lottery.gameOver());\r\n        require(!lottery.gameOverByUser());\r\n        require(now > stopTime);\r\n        require(holderList[_id] == msg.sender);\r\n\r\n        holderList[_id] = 0x0;\r\n        priceList[_id] = 0;\r\n        assert(lottery.changeHolder(_id, msg.sender));\r\n        TokenBack(_id);\r\n        return true;\r\n    }\r\n\r\n    function buy(uint256 _id) public payable returns (bool) {\r\n        require(started);\r\n        require(_id > 0 && _id <= cap);\r\n        require(!lottery.gameOver());\r\n        require(!lottery.gameOverByUser());\r\n        require(now > stopTime);\r\n\r\n        require(priceList[_id] == msg.value);\r\n        address oldHolder = holderList[_id];\r\n        holderList[_id] = 0x0;\r\n        priceList[_id] = 0;\r\n\r\n        assert(lottery.changeHolder(_id, msg.sender));\r\n\r\n        oldHolder.transfer(msg.value);\r\n        TokenSold(_id, msg.value);\r\n        return true;\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        stopTime = now + stopTimeLength;\r\n    }\r\n\r\n    function getTokenPrice(uint _id) public view returns(uint256) {\r\n        return priceList[_id];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"stopTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"holderList\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"sale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"started\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getBackToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deusETH\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopTimeLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lottery\",\"type\":\"address\"}],\"name\":\"setLottery\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokenSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"TokenBack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokenSold\",\"type\":\"event\"}]","ContractName":"StockExchange","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://67939e235b98be67ee0b3deb3eef32858b1adab92db27d1d0fd3c6963da73274"}]}