{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    /**\r\n     * Events\r\n     */\r\n    event ChangedOwner(address indexed new_owner);\r\n\r\n    /**\r\n     * Functionality\r\n     */\r\n\r\n    function Owned() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function changeOwner(address _newOwner) onlyOwner external {\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() external {\r\n        if (msg.sender == newOwner) {\r\n            owner = newOwner;\r\n            newOwner = 0x0;\r\n            ChangedOwner(owner);\r\n        }\r\n    }\r\n}\r\n\r\ncontract IOwned {\r\n    function owner() returns (address);\r\n    function changeOwner(address);\r\n    function acceptOwnership();\r\n}\r\n\r\n// interface with what we need to withdraw\r\ncontract Withdrawable {\r\n\tfunction withdrawTo(address) returns (bool);\r\n}\r\n\r\n// responsible for \r\ncontract Distributor is Owned {\r\n\r\n\tuint256 public nonce;\r\n\tWithdrawable public w;\r\n\r\n\tevent BatchComplete(uint256 nonce);\r\n\r\n\tevent Complete();\r\n\r\n\tfunction setWithdrawable(address w_addr) onlyOwner {\r\n\t\tw = Withdrawable(w_addr);\r\n\t}\r\n\t\r\n\tfunction distribute(address[] addrs) {\r\n\t\tfor (uint256 i = 0; i <  addrs.length; i++) {\r\n\t\t\tw.withdrawTo(addrs[i]);\r\n\t\t}\r\n\t\tBatchComplete(nonce);\r\n\t\tnonce = nonce + 1;\r\n\t}\r\n\r\n\tfunction complete() {\r\n\t\tnonce = 0;\r\n\t\tComplete();\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"w\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"complete\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"distribute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"w_addr\",\"type\":\"address\"}],\"name\":\"setWithdrawable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"BatchComplete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Complete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"new_owner\",\"type\":\"address\"}],\"name\":\"ChangedOwner\",\"type\":\"event\"}]","ContractName":"Distributor","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://768efc0868d33fe3a1dd56fa91101f649f0cb9ce455847a1cb24dece3ec8f87c"}]}