{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Token {\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n}\r\n\r\ncontract Crowdsale {\r\n\r\n    address public crowdsaleOwner;\r\n    address public crowdsaleBeneficiary;\r\n    address public crowdsaleWallet;\r\n\r\n    uint public amountRaised;\r\n    uint public deadline;\r\n    uint public period;\r\n    uint public etherCost = 470;\r\n    uint public started;\r\n\r\n    Token public rewardToken;\r\n\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    bool public fundingGoalReached = false;\r\n    bool public crowdsaleClosed = false;\r\n\r\n    event GoalReached(address recipient, uint totalAmountRaised);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    function Crowdsale(\r\n        address _beneficiaryThatOwnsTokens,\r\n        uint _durationInDays,\r\n        address _addressOfTokenUsedAsReward,\r\n        address _crowdsaleWallet\r\n    ) public {\r\n        crowdsaleOwner = msg.sender;\r\n        crowdsaleBeneficiary = _beneficiaryThatOwnsTokens;\r\n        deadline = now + _durationInDays * 1 days;\r\n        period = _durationInDays * 1 days / 3;\r\n        rewardToken = Token(_addressOfTokenUsedAsReward);\r\n        crowdsaleWallet = _crowdsaleWallet;\r\n        started = now;\r\n    }\r\n\r\n    function stageNumber() public constant returns (uint stage) {\r\n        require(now >= started);\r\n        uint result = 1  + (now - started) / period;\r\n        if (result > 3) {\r\n            result = 3;\r\n        }\r\n        stage = result;\r\n    }\r\n\r\n    function calcTokenCost() public constant returns (uint tokenCost) {\r\n        /* How many WEIs in half dollar */\r\n        uint halfDollar = 1 ether / etherCost / 2;\r\n        /* Get current stage for discount calculation */\r\n        uint stage = stageNumber();\r\n        /* For first stage price is 2 dollars, for second stage is 2.5 dollars & 3 dollars for others */\r\n        if (stage == 1) {\r\n            tokenCost = halfDollar * 4;\r\n        } else if (stage == 2) {\r\n            tokenCost = halfDollar * 5;\r\n        } else {\r\n            tokenCost = halfDollar * 6;\r\n        }\r\n    }\r\n\r\n    function () public payable {\r\n        /* Crowdsale shouldn't be closed */\r\n        require(!crowdsaleClosed);\r\n        /* Calculate & check number of tokens for that amount */\r\n        uint amount = msg.value;\r\n        uint tokens = amount / calcTokenCost();\r\n        require(tokens > 0);\r\n        /* Increase user's amount of WEI in crowdsale */\r\n        balanceOf[msg.sender] += amount;\r\n        amountRaised += amount;\r\n        /* Transfer allowed tokens from crowdsale owner to sender */\r\n        rewardToken.transferFrom(crowdsaleWallet, msg.sender, tokens);\r\n        FundTransfer(msg.sender, amount, true);\r\n        /* Check has goal been reached */\r\n        checkGoalReached();\r\n    }\r\n\r\n    function checkGoalReached() public {\r\n        uint256 tokensLeft = rewardToken.balanceOf(crowdsaleWallet);\r\n        if (tokensLeft == 0) {\r\n            fundingGoalReached = true;\r\n            crowdsaleClosed = true;\r\n            GoalReached(crowdsaleBeneficiary, amountRaised);\r\n        } else if (now >= deadline) {\r\n            crowdsaleClosed = true;\r\n            GoalReached(crowdsaleBeneficiary, amountRaised);\r\n        }\r\n    }\r\n\r\n    function withdraw() public {\r\n        require(crowdsaleBeneficiary == msg.sender);\r\n        if (crowdsaleBeneficiary.send(amountRaised)) {\r\n            FundTransfer(crowdsaleBeneficiary, amountRaised, false);\r\n        }\r\n    }\r\n\r\n    function updateEtherCost(uint _etherCost) public {\r\n        require(msg.sender == crowdsaleOwner);\r\n        etherCost = _etherCost;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"checkGoalReached\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"started\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etherCost\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"calcTokenCost\",\"outputs\":[{\"name\":\"tokenCost\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stageNumber\",\"outputs\":[{\"name\":\"stage\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleBeneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingGoalReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_etherCost\",\"type\":\"uint256\"}],\"name\":\"updateEtherCost\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_beneficiaryThatOwnsTokens\",\"type\":\"address\"},{\"name\":\"_durationInDays\",\"type\":\"uint256\"},{\"name\":\"_addressOfTokenUsedAsReward\",\"type\":\"address\"},{\"name\":\"_crowdsaleWallet\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalAmountRaised\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000de6fc92acca99fc414f1c6508e04e369185b789000000000000000000000000000000000000000000000000000000000000005b0000000000000000000000000de1fcfe2aeb72636458944fbedef9cf0c7d45c00000000000000000000000009dafa0dc324f25de967815540652098dee09163c","Library":"","SwarmSource":"bzzr://ed5f69aaf681f4d748737e8825f549b9478bc190acb5b8f755237b1c6e2ee0e7"}]}