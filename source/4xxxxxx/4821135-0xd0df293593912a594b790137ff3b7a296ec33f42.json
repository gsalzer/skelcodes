{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n// **-----------------------------------------------\r\n// MoyToken Open Distribution Smart Contract.\r\n// 30,000,000 tokens available via unique Open Distribution. \r\n// POWTokens Contract @ POWToken.eth\r\n// Open Dsitribution Opens at the 1st Block of 2018.\r\n// All operations can be monitored at etherscan.io\r\n\r\n// -----------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/issues/20\r\n// -------------------------------------------------\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() public {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract safeMath {\r\n  function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    safeAssert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    safeAssert(b > 0);\r\n    uint256 c = a / b;\r\n    safeAssert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    safeAssert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    safeAssert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n  function safeAssert(bool assertion) internal pure {\r\n    if (!assertion) revert();\r\n  }\r\n}\r\n\r\ncontract StandardToken is owned, safeMath {\r\n  function balanceOf(address who) public constant returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract MoyTokenOpenDistribution is owned, safeMath {\r\n  // owner/admin & token reward\r\n  address        public admin = owner;      //admin address\r\n  StandardToken  public tokenContract;     // address of MoibeTV MOY ERC20 Standard Token.\r\n\r\n  // deployment variables for static supply sale\r\n  uint256 public initialSupply;\r\n  uint256 public tokensRemaining;\r\n\r\n  // multi-sig addresses and price variable\r\n  address public budgetWallet;      // budgetMultiSig for PowerLineUp.\r\n  uint256 public tokensPerEthPrice;      // set initial value floating priceVar.\r\n    \r\n  // uint256 values for min,max,caps,tracking\r\n  uint256 public amountRaised;                           \r\n  uint256 public fundingCap;                          \r\n\r\n  // loop control, startup and limiters\r\n  string  public CurrentStatus = \"\";                          // current OpenDistribution status\r\n  uint256 public fundingStartBlock;                           // OpenDistribution start block#\r\n  uint256 public fundingEndBlock;                             // OpenDistribution end block#\r\n  bool    public isOpenDistributionClosed = false;            // OpenDistribution completion boolean\r\n  bool    public areFundsReleasedToBudget= false;             // boolean for MoibeTV to receive Eth or not, this allows MoibeTV to use Ether only if goal reached.\r\n  bool    public isOpenDistributionSetup = false;             // boolean for OpenDistribution setup\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value); \r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n  event Buy(address indexed _sender, uint256 _eth, uint256 _MOY);\r\n  mapping(address => uint256) balancesArray;\r\n  mapping(address => uint256) fundValue;\r\n\r\n  // default function, map admin\r\n  function MoyOpenDistribution() public onlyOwner {\r\n    admin = msg.sender;\r\n    CurrentStatus = \"Tokens Released, Open Distribution deployed to chain\";\r\n  }\r\n\r\n  // total number of tokens initially\r\n  function initialMoySupply() public constant returns (uint256 tokenTotalSupply) {\r\n      tokenTotalSupply = safeDiv(initialSupply,100);\r\n  }\r\n\r\n  // remaining number of tokens\r\n  function remainingSupply() public constant returns (uint256 tokensLeft) {\r\n      tokensLeft = tokensRemaining;\r\n  }\r\n\r\n  // setup the OpenDistribution parameters\r\n  function setupOpenDistribution(uint256 _fundingStartBlock, uint256 _fundingEndBlock, address _tokenContract, address _budgetWallet) public onlyOwner returns (bytes32 response) {\r\n      if ((msg.sender == admin)\r\n      && (!(isOpenDistributionSetup))\r\n      && (!(budgetWallet > 0))){\r\n          // init addresses\r\n          tokenContract = StandardToken(_tokenContract);                             //MoibeTV MOY tokens Smart Contract.\r\n          budgetWallet = _budgetWallet;                 //Budget multisig.\r\n          tokensPerEthPrice = 1000;                                                  //Regular Price 1 ETH = 1000 MOY.\r\n          \r\n          fundingCap = 3;                                        \r\n\r\n          // update values\r\n          amountRaised = 0;\r\n          initialSupply = 30000000;                                      \r\n          tokensRemaining = safeDiv(initialSupply,1);\r\n\r\n          fundingStartBlock = _fundingStartBlock;\r\n          fundingEndBlock = _fundingEndBlock;\r\n\r\n          // configure OpenDistribution\r\n          isOpenDistributionSetup = true;\r\n          isOpenDistributionClosed = false;\r\n          CurrentStatus = \"OpenDistribution is setup\";\r\n\r\n          //gas reduction experiment\r\n          setPrice();\r\n          return \"OpenDistribution is setup\";\r\n      } else if (msg.sender != admin) {\r\n          return \"Not Authorized\";\r\n      } else  {\r\n          return \"Campaign cannot be changed.\";\r\n      }\r\n    }\r\n\r\n    function setPrice() public {  //Verificar si es necesario que sea pÃºblica. \r\n\r\n      //Funding Starts at the 1st Block of the Year. The very 1st block of the year is 4830771 UTC+14(Christmas Islands).      \r\n      //After that, all the CrowdSale is measured in UTC-11(Fiji), to give chance until the very last block of each day.    \r\n        if (block.number >= fundingStartBlock && block.number <= fundingStartBlock+11520) { // First Day 300% Bonus, 1 ETH = 3000 MOY.\r\n        tokensPerEthPrice = 3000; \r\n      } else if (block.number >= fundingStartBlock+11521 && block.number <= fundingStartBlock+46080) { // First Week 200% Bonus, 1 ETH = 2000 MOY.\r\n        tokensPerEthPrice = 2000; //Regular Price for All Stages.\r\n      } else if (block.number >= fundingStartBlock+46081 && block.number <= fundingStartBlock+86400) { // Second Week 150% Bonus, 1 ETH = 1500 MOY.\r\n        tokensPerEthPrice = 2000; //Regular Price for All Stages.\r\n      } else if (block.number >= fundingStartBlock+86401 && block.number <= fundingEndBlock) { // Regular Sale, final price for all users 1 ETH = 1000 MOY. \r\n        tokensPerEthPrice = 1000; //Regular Price for All Stages.\r\n      }  \r\n         }\r\n\r\n    // default payable function when sending ether to this contract\r\n    function () public payable {\r\n      require(msg.data.length == 0);\r\n      BuyMOYTokens();\r\n    }\r\n\r\n    function BuyMOYTokens() public payable {\r\n      // 0. conditions (length, OpenDistribution setup, zero check, exceed funding contrib check, contract valid check, within funding block range check, balance overflow check etc.)\r\n      require(!(msg.value == 0)\r\n      && (isOpenDistributionSetup)\r\n      && (block.number >= fundingStartBlock)\r\n      && (block.number <= fundingEndBlock)\r\n      && (tokensRemaining > 0));\r\n\r\n      // 1. vars\r\n      uint256 rewardTransferAmount = 0;\r\n\r\n      // 2. effects\r\n      setPrice();\r\n      amountRaised = safeAdd(amountRaised,msg.value);\r\n      rewardTransferAmount = safeDiv(safeMul(msg.value,tokensPerEthPrice),1);\r\n\r\n      // 3. interaction\r\n      tokensRemaining = safeSub(tokensRemaining, safeDiv(rewardTransferAmount,1));  // will cause throw if attempt to purchase over the token limit in one tx or at all once limit reached.\r\n      tokenContract.transfer(msg.sender, rewardTransferAmount);\r\n\r\n      // 4. events\r\n      fundValue[msg.sender] = safeAdd(fundValue[msg.sender], msg.value);\r\n      Transfer(this, msg.sender, msg.value); \r\n      Buy(msg.sender, msg.value, rewardTransferAmount);\r\n    }\r\n\r\n    function budgetMultiSigWithdraw(uint256 _amount) public onlyOwner {\r\n      require(areFundsReleasedToBudget && (amountRaised >= fundingCap));\r\n      budgetWallet.transfer(_amount);\r\n    }\r\n\r\n    function checkGoalReached() public onlyOwner returns (bytes32 response) { // return OpenDistribution status to owner for each result case, update public constant.\r\n      // update state & status variables\r\n      require (isOpenDistributionSetup);\r\n      if ((amountRaised < fundingCap) && (block.number <= fundingEndBlock && block.number >= fundingStartBlock)) { // OpenDistribution in progress waiting for hardcap.\r\n        areFundsReleasedToBudget = false;\r\n        isOpenDistributionClosed = false;\r\n        CurrentStatus = \"OpenDistribution in progress, waiting to reach goal.\";\r\n        return \"OpenDistribution in progress.\";\r\n      } else if ((amountRaised < fundingCap) && (block.number < fundingStartBlock)) { // OpenDistribution has not started.\r\n        areFundsReleasedToBudget = false;\r\n        isOpenDistributionClosed = false;\r\n        CurrentStatus = \"OpenDistribution is setup\";\r\n        return \"OpenDistribution is setup\";\r\n      } else if ((amountRaised < fundingCap) && (block.number > fundingEndBlock)) { // OpenDistribution ended, total not achieved.\r\n        areFundsReleasedToBudget = false;\r\n        isOpenDistributionClosed = true;\r\n        CurrentStatus = \"OpenDistribution is Over.\";\r\n        return \"OpenDistribution is Over\";\r\n      } else if ((amountRaised >= fundingCap) && (tokensRemaining == 0)) { // Distribution ended, all tokens gone.\r\n          areFundsReleasedToBudget = true;\r\n          isOpenDistributionClosed = true;\r\n          CurrentStatus = \"Successful OpenDistribution.\";\r\n          return \"Successful OpenDistribution.\";\r\n      } else if ((amountRaised >= fundingCap) && (block.number > fundingEndBlock) && (tokensRemaining > 0)) { // OpenDistribution ended.\r\n          areFundsReleasedToBudget = true;\r\n          isOpenDistributionClosed = true;\r\n          CurrentStatus = \"Successful OpenDistribution.\";\r\n          return \"Successful OpenDistribution\";\r\n      } else if ((amountRaised >= fundingCap) && (tokensRemaining > 0) && (block.number <= fundingEndBlock)) { // OpenDistribution in progress, objetive achieved!\r\n        areFundsReleasedToBudget = true;\r\n        isOpenDistributionClosed = false;\r\n        CurrentStatus = \"OpenDistribution in Progress, Goal Achieved.\";\r\n        return \"Goal Achieved.\";\r\n      }\r\n      setPrice();\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"checkGoalReached\",\"outputs\":[{\"name\":\"response\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerEthPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialMoySupply\",\"outputs\":[{\"name\":\"tokenTotalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"areFundsReleasedToBudget\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"budgetWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fundingStartBlock\",\"type\":\"uint256\"},{\"name\":\"_fundingEndBlock\",\"type\":\"uint256\"},{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_budgetWallet\",\"type\":\"address\"}],\"name\":\"setupOpenDistribution\",\"outputs\":[{\"name\":\"response\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingEndBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOpenDistributionSetup\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOpenDistributionClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensRemaining\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"budgetMultiSigWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingStartBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"BuyMOYTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remainingSupply\",\"outputs\":[{\"name\":\"tokensLeft\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CurrentStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"MoyOpenDistribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_MOY\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"}]","ContractName":"MoyTokenOpenDistribution","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bdc93e58e4b523a3d9216577c8cce3e37386c70f1c788fcc0b33c81467df06a6"}]}