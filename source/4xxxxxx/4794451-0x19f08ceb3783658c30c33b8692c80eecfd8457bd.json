{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract EtherCard {\r\n\r\n  struct Gift {\r\n      uint256 amount;\r\n      uint256 amountToRedeem;\r\n      bool redeemed;\r\n      address from;\r\n  }\r\n  \r\n  // Who created this contract\r\n  address public owner;\r\n  mapping (bytes32 => Gift) gifts;\r\n  uint256 feeAmount;\r\n\r\n  function EtherCard() public {\r\n    owner = msg.sender;\r\n    feeAmount = 100; //1% of the gift amount\r\n  }\r\n\r\n  function getBalance() public view returns (uint256) {\r\n      return this.balance;\r\n  }\r\n\r\n  function getAmountByCoupon(bytes32 hash) public view returns (uint256) {\r\n      return gifts[hash].amountToRedeem;\r\n  }\r\n\r\n  function getRedemptionStatus(bytes32 hash) public view returns (bool) {\r\n      return gifts[hash].redeemed;\r\n  }\r\n\r\n  // Called when someone tries to redeem the gift\r\n  function redeemGift(string coupon, address wallet) public returns (uint256) {\r\n      bytes32 hash = keccak256(coupon);\r\n      Gift storage gift = gifts[hash];\r\n      if ((gift.amount <= 0) || gift.redeemed) {\r\n          return 0;\r\n      }\r\n      uint256 amount = gift.amountToRedeem;\r\n      wallet.transfer(amount);\r\n      gift.redeemed = true;\r\n      return amount;\r\n  }\r\n\r\n  // Called when someone sends ETH to this contract function\r\n  function createGift(bytes32 hashedCoupon) public payable {\r\n        if (msg.value * 1000 < 1) { // Send minimum 0.001 ETH\r\n            return;\r\n        }\r\n        uint256 calculatedFees = msg.value/feeAmount;\r\n        \r\n        var gift = gifts[hashedCoupon];\r\n        gift.amount = msg.value;\r\n        gift.amountToRedeem = msg.value - calculatedFees;\r\n        gift.from = msg.sender;\r\n        gift.redeemed = false;\r\n\r\n        //Transfer ether to owner\r\n        owner.transfer(calculatedFees);                \r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hashedCoupon\",\"type\":\"bytes32\"}],\"name\":\"createGift\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"getRedemptionStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"coupon\",\"type\":\"string\"},{\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"redeemGift\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"getAmountByCoupon\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"EtherCard","CompilerVersion":"v0.4.17+commit.bdeb9e52","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ecf06da1bc8f6749a8887db08a37406bce85e61179b5901ab6e675a2c4518b25"}]}