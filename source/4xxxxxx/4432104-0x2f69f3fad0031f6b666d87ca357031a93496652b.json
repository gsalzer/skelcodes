{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n// 管理员合约\r\ncontract Owned {\r\n    address public owner;\r\n    function Owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\ninterface tokenRecipient { function receiveApproval(address _from, uint _value, address _token, bytes _extraData) public; }\r\n\r\n// 代币交易合约\r\ncontract TokenBase is Owned {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals = 18;\r\n    uint public totalSupply;\r\n    uint public tokenUnit = 10 ** uint(decimals);\r\n    uint public wanUnit = 10000 * tokenUnit;\r\n    uint public foundingTime;\r\n\r\n    mapping (address => uint) public balanceOf;\r\n    mapping (address => mapping (address => uint)) public allowance;\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint _value);\r\n\r\n    function TokenBase() public {\r\n        foundingTime = now;\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require(_to != 0x0);\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        Transfer(_from, _to, _value);\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n\r\n    function transfer(address _to, uint _value) public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint _value) public returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n\r\n    function approveAndCall(address _spender, uint _value, bytes _extraData) public returns (bool success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\n// 工作证明挖矿合约\r\ncontract WorkProff is TokenBase {\r\n    uint public oneYear = 1 years;\r\n    uint public minerTotalSupply = 3900 * wanUnit;              // 挖矿：总供应量\r\n    uint public minerTotalYears = 20;                           // 挖矿：挖完总年数\r\n    uint public minerTotalTime = minerTotalYears * oneYear;     // 挖矿：挖完总时间\r\n    uint public minerPreSupply = minerTotalSupply / 2;\r\n    uint public minerPreTime = 7 days;\r\n    uint public minerTotalReward = 0;                           // 挖矿：总奖励\r\n    uint public minerTimeOfLastProof;                           // 挖矿：上次奖励时间\r\n    uint public minerDifficulty = 10 ** 32;                     // 挖矿：难度\r\n    bytes32 public minerCurrentChallenge;\r\n\r\n    function WorkProff() public {\r\n        minerTimeOfLastProof = now;\r\n    }\r\n    \r\n    function proofOfWork(uint nonce) public {\r\n        require(minerTotalReward < minerTotalSupply);\r\n        bytes8 n = bytes8(sha3(nonce, minerCurrentChallenge));\r\n        require(n >= bytes8(minerDifficulty));\r\n\r\n        uint timeSinceLastProof = (now - minerTimeOfLastProof);\r\n        require(timeSinceLastProof >= 5 seconds);\r\n        \r\n        uint reward = 0;\r\n        uint difficuty = 0;\r\n        if (now - foundingTime < minerPreTime) {\r\n            reward = timeSinceLastProof * minerPreSupply / minerPreTime;\r\n            difficuty = 0;\r\n        } else {\r\n            reward = timeSinceLastProof * (minerTotalSupply - minerPreSupply) / minerTotalTime;\r\n            difficuty = minerDifficulty;\r\n        }\r\n\r\n        balanceOf[msg.sender] += reward;\r\n        totalSupply += reward;\r\n        minerDifficulty = minerDifficulty * 10 minutes / timeSinceLastProof + 1;\r\n        minerTimeOfLastProof = now;\r\n        minerCurrentChallenge = sha3(nonce, minerCurrentChallenge, block.blockhash(block.number - 1));\r\n        Transfer(0, this, reward);\r\n        Transfer(this, msg.sender, reward);\r\n    }\r\n}\r\n\r\n// 定期间隔期权合约\r\ncontract Option is WorkProff {\r\n    uint public optionTotalSupply;                          // 期权：总量\r\n    uint public optionInitialSupply = 6600 * wanUnit;       // 期权：初始期权供应量（4500 + 2100）\r\n    uint public optionTotalTimes = 5;                       // 期权：总行权次数\r\n    uint public optionExerciseSpan = 1 years;               // 期权：行权间隔\r\n\r\n    mapping (address => uint) public optionOf;              // 期权：期权总数量\r\n    mapping (address => uint) public optionExerciseOf;      // 期权：已经行权的期权\r\n\r\n    event OptionTransfer(address indexed from, address indexed to, uint option, uint exercised);\r\n    event OptionExercise(address indexed addr, uint value);\r\n\r\n    function Option() public {\r\n        optionTotalSupply = optionInitialSupply;\r\n        optionOf[msg.sender] = optionInitialSupply;\r\n        optionExerciseOf[msg.sender] = 0;\r\n    }\r\n\r\n    function min(uint a, uint b) private returns (uint) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    function _checkOptionExercise(uint option, uint exercised) internal returns (bool) {\r\n        uint canExercisedTimes = min(optionTotalTimes, (now - foundingTime) / optionExerciseSpan + 1);\r\n        return exercised <= option * canExercisedTimes / optionTotalTimes;\r\n    }\r\n\r\n    function _optionTransfer(address _from, address _to, uint _option, uint _exercised) internal {\r\n        require(_to != 0x0);\r\n        require(optionOf[_from] >= _option);\r\n        require(optionOf[_to] + _option > optionOf[_to]);\r\n        require(optionExerciseOf[_from] >= _exercised);\r\n        require(optionExerciseOf[_to] + _exercised > optionExerciseOf[_to]);\r\n        require(_checkOptionExercise(_option, _exercised));\r\n        require(_checkOptionExercise(optionOf[_from] - _option, optionExerciseOf[_from] - _exercised));\r\n\r\n        uint previousOptions = optionOf[_from] + optionOf[_to];\r\n        uint previousExercised = optionExerciseOf[_from] + optionExerciseOf[_to];\r\n        optionOf[_from] -= _option;\r\n        optionOf[_to] += _option;\r\n        optionExerciseOf[_from] -= _exercised;\r\n        optionExerciseOf[_to] += _exercised;\r\n        OptionTransfer(_from, _to, _option, _exercised);\r\n        assert(optionOf[_from] + optionOf[_to] == previousOptions);\r\n        assert(optionExerciseOf[_from] + optionExerciseOf[_to] == previousExercised);\r\n    }\r\n\r\n    function optionTransfer(address _to, uint _option, uint _exercised) public {\r\n        _optionTransfer(msg.sender, _to, _option, _exercised);\r\n    }\r\n\r\n    function optionExercise(uint value) public {\r\n        require(_checkOptionExercise(optionOf[msg.sender], optionExerciseOf[msg.sender] + value));\r\n        optionExerciseOf[msg.sender] += value;\r\n        balanceOf[msg.sender] += value;\r\n        totalSupply += value;\r\n        Transfer(0, this, value);\r\n        Transfer(this, msg.sender, value);\r\n        OptionExercise(msg.sender, value);\r\n    }\r\n}\r\n\r\ncontract Token is Option {\r\n    uint public initialSupply = 0 * wanUnit;        // 初始供应量\r\n    uint public reserveSupply = 10500 * wanUnit;    // 锁定：预留\r\n    uint public sellSupply = 9000 * wanUnit;        // 锁定：ICO\r\n\r\n    function Token() public {\r\n        totalSupply = initialSupply;\r\n        balanceOf[msg.sender] = initialSupply;\r\n        name = \"ZBC\";\r\n        symbol = \"ZBC\";\r\n    }\r\n\r\n    function releaseReserve(uint value) onlyOwner public {\r\n        require(reserveSupply >= value);\r\n        balanceOf[owner] += value;\r\n        totalSupply += value;\r\n        reserveSupply -= value;\r\n        Transfer(0, this, value);\r\n        Transfer(this, owner, value);\r\n    }\r\n\r\n    function releaseSell(uint value) onlyOwner public {\r\n        require(sellSupply >= value);\r\n        balanceOf[owner] += value;\r\n        totalSupply += value;\r\n        sellSupply -= value;\r\n        Transfer(0, this, value);\r\n        Transfer(this, owner, value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"reserveSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"releaseReserve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"optionExercise\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minerPreTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minerTotalYears\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"optionTotalTimes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"proofOfWork\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foundingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wanUnit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minerCurrentChallenge\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minerTotalReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minerPreSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"optionTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_option\",\"type\":\"uint256\"},{\"name\":\"_exercised\",\"type\":\"uint256\"}],\"name\":\"optionTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"optionExerciseSpan\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minerTimeOfLastProof\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minerTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minerTotalTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"releaseSell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"optionOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenUnit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"optionInitialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oneYear\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"optionExerciseOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minerDifficulty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"option\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"exercised\",\"type\":\"uint256\"}],\"name\":\"OptionTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"OptionExercise\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Token","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e5d0ce9f79da52373cbfb8649cafe3aab5b563f8efbff3442152d13471acf1ee"}]}