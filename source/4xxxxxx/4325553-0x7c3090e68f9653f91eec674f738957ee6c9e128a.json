{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\ncontract tickets {\r\n    \r\n    mapping(uint256 => uint256) public ticketPrices;\r\n    mapping(address => uint256[]) public ticketsOwners;\r\n    mapping(uint256 => address) public ticketsOwned;\r\n    mapping(address => uint256) public noOfTicketsOwned;\r\n    mapping(address => bool) public banned;\r\n    uint256 public noOfSeats;\r\n    \r\n    mapping(address => uint256[]) public reservations;\r\n    mapping(address => uint256) public noOfreservations;\r\n    mapping(address => uint256) public timeOfreservations;\r\n    mapping(address => uint256) public priceOfreservations;\r\n    mapping(uint256 => address) public addressesReserving;\r\n    uint256 public lowestAddressReserving=0;\r\n    uint256 public highestAddressReserving=0;\r\n    \r\n    mapping(uint256 => uint256[]) public ticketTransfers;\r\n    mapping(uint256 => uint256) public ticketTransfersPerAmount;\r\n    uint256 public ticketTransfersAmount = 0;\r\n    mapping(address => uint256[]) public ticketTransferers;\r\n    mapping(address => uint256) public ticketTransferersAmount;\r\n    mapping(address => uint256[]) public ticketTransferees;\r\n    mapping(address => uint256) public ticketTransfereesAmount;\r\n    \r\n    mapping(address => bytes32) public hashes;\r\n    \r\n    string public name;\r\n    \r\n    uint256 public secondsToHold = 60 * 5 ;\r\n    \r\n    address public owner;\r\n    \r\n    uint256 eventDate;\r\n    \r\n    function tickets(uint256[] ticks, uint256 nOfSeats, string n, uint256 eD) {\r\n        for(uint256 i=0;i<nOfSeats;i++) {\r\n            ticketPrices[i] = ticks[i];\r\n        }\r\n        noOfSeats = nOfSeats;\r\n        name = n;\r\n        owner = msg.sender;\r\n        eventDate = eD;\r\n    }\r\n    \r\n    function reserveSeats(uint256[] seats, uint256 nOfSeats) {\r\n        if(noOfreservations[msg.sender] != 0 && !banned[msg.sender]) {\r\n            revert();\r\n        }\r\n        resetReservationsInternal();\r\n        uint256 price = 0;\r\n        for(uint256 i=0;i<nOfSeats;i++) {\r\n            if(ticketsOwned[seats[i]] != 0x0) {\r\n                revert();\r\n            }\r\n            reservations[msg.sender].push(seats[i]);\r\n            price += ticketPrices[seats[i]];\r\n            ticketsOwned[seats[i]] = msg.sender;\r\n        }\r\n        noOfreservations[msg.sender] = nOfSeats;\r\n        timeOfreservations[msg.sender] = now;\r\n        priceOfreservations[msg.sender] = price;\r\n        noOfTicketsOwned[msg.sender]++;\r\n        highestAddressReserving++;\r\n        Reserved(msg.sender, seats);\r\n    }\r\n    \r\n    function resetReservations(address requester, bool resetOwn) {\r\n        if(noOfreservations[requester] == 0) {\r\n            throw;\r\n        }\r\n        for(uint256 i=0;i<noOfreservations[requester] && resetOwn;i++) {\r\n            ticketsOwned[reservations[requester][i]] = 0x0;\r\n            noOfTicketsOwned[msg.sender]--;\r\n        }\r\n        reservations[requester] = new uint256[](0);\r\n        noOfreservations[requester] = 0;\r\n        timeOfreservations[requester] = 0;\r\n        priceOfreservations[requester] = 0;\r\n    }\r\n    \r\n    function resetReservationsInternal() private {\r\n        bool pastTheLowest = false;\r\n        bool stop = false;\r\n        for(uint256 i=lowestAddressReserving;i<highestAddressReserving && !stop;i++) {\r\n            if(timeOfreservations[addressesReserving[i]] != 0) {\r\n                pastTheLowest = true;\r\n                if(now - timeOfreservations[addressesReserving[i]] > secondsToHold) {\r\n                    resetReservations(addressesReserving[i], true);\r\n                } else {\r\n                    stop = true;\r\n                }\r\n            }\r\n            if(timeOfreservations[addressesReserving[i]] == 0 && !pastTheLowest) {\r\n                lowestAddressReserving = i;\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    function revokeTickets(address revokee, bool payback) payable {\r\n        if(msg.sender == owner) {\r\n            banned[revokee] = true;\r\n            uint256 price = 0;\r\n            for(uint256 i=0;i<noOfTicketsOwned[revokee];i++) {\r\n                ticketsOwned[ticketsOwners[revokee][i]] = 0x0;\r\n                price+=ticketPrices[ticketsOwners[revokee][i]];\r\n            }\r\n            ticketsOwners[revokee] = new uint256[](0);\r\n            noOfTicketsOwned[revokee] = 0;\r\n            if(payback) {\r\n                revokee.send(price);\r\n            }\r\n            Banned(revokee, payback);\r\n        }\r\n    }\r\n    \r\n    function InvokeTransfer(address transferee, uint256[] ticks, uint256 amount) {\r\n        if(amount>0 && getTransfer(msg.sender,transferee) != 100000000000000000) {\r\n            for(uint256 i=0;i<amount;i++) {\r\n                ticketTransfers[ticketTransfersAmount].push(ticks[i]);\r\n            }\r\n            ticketTransferers[msg.sender][ticketTransferersAmount[msg.sender]++] = ticketTransfersAmount;\r\n            ticketTransferees[transferee][ticketTransfereesAmount[transferee]++] = ticketTransfersAmount;\r\n            ticketTransfersPerAmount[ticketTransfersAmount] = amount;\r\n            TransferStarted(msg.sender, transferee, ticks, ticketTransfersAmount++);\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n    \r\n    function removeTransfer(uint256 transferID) {\r\n        bool transferer = false;\r\n        for(uint256 i=0;i<ticketTransferersAmount[msg.sender] && !transferer;i++) {\r\n            if(ticketTransferers[msg.sender][i] == transferID) {\r\n                transferer = true;\r\n            }\r\n        }\r\n        if(transferer) {\r\n            ticketTransfers[transferID] = new uint256[](0);\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n    \r\n    function finishTransfer(uint256 transferID) payable {\r\n        bool transferee = false;\r\n        for(uint256 j=0;j<ticketTransfereesAmount[msg.sender] && !transferee;j++) {\r\n            if(ticketTransferees[msg.sender][j] == transferID) {\r\n                transferee = true;\r\n            }\r\n        }\r\n        if(!transferee) {\r\n            revert();\r\n        }\r\n        uint256 price = 0;\r\n        for(uint256 i=0;i<ticketTransfersPerAmount[transferID];i++) {\r\n            price += ticketPrices[ticketTransfers[transferID][i]];\r\n        }\r\n        if(msg.value == price) {\r\n            for(i=0;i<ticketTransfersPerAmount[transferID];i++) {\r\n                ticketsOwned[ticketTransfers[transferID][i]] = msg.sender;\r\n            }\r\n            Transferred(transferID);\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n    \r\n    function getTransfer(address transferer, address transferee) returns (uint256) {\r\n        for(uint256 i=0;i<ticketTransferersAmount[transferer];i++) {\r\n            for(uint256 j=0;j<ticketTransfereesAmount[transferee];j++) {\r\n                if(ticketTransferers[transferer][i] == ticketTransferees[transferee][j]) {\r\n                    return ticketTransferees[transferee][j];\r\n                }\r\n            }\r\n        }\r\n        return 100000000000000000;\r\n    }\r\n    \r\n    function returnTickets(uint256 ticketID) {\r\n        if(now < eventDate) {\r\n            if(ticketsOwned[ticketID] == msg.sender) {\r\n                for(uint256 i=0;i<noOfTicketsOwned[msg.sender];i++) {\r\n                    if(ticketsOwners[msg.sender][i] == ticketID) {\r\n                        ticketsOwners[msg.sender][i] = 100000000000000000;\r\n                    }\r\n                }\r\n                ticketsOwned[ticketID] = 0x0;\r\n                noOfTicketsOwned[msg.sender]--;\r\n                msg.sender.send(ticketPrices[ticketID]);\r\n            } else {\r\n                revert();\r\n            }\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n    \r\n    function changePrice (uint256[] seats, uint256 nOfSeats) {\r\n        if(nOfSeats == noOfSeats) {\r\n            for(uint256 i = 0;i<noOfSeats;i++) {\r\n                ticketPrices[i] = seats[i];\r\n            }\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n    \r\n    function setHash(bytes32 hash) {\r\n        hashes[msg.sender] = hash;\r\n    }\r\n    \r\n    function checkHash(address a, string password) constant returns (bool) {\r\n        return hashes[a]!=\"\" && hashes[a] == sha3(password);\r\n    }\r\n    \r\n    function end() {\r\n        if(msg.sender == owner) {\r\n            if(now > eventDate) {\r\n                owner.send(this.balance);\r\n            }\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n    \r\n    function() payable {\r\n        if(msg.value == priceOfreservations[msg.sender] && !banned[msg.sender]) {\r\n            for(uint256 i=0;i<noOfreservations[msg.sender];i++) {\r\n                ticketsOwners[msg.sender].push(reservations[msg.sender][i]);\r\n            }\r\n            resetReservations(msg.sender, false);\r\n            Confirmed(msg.sender);\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n    \r\n    event Reserved(address indexed _to, uint256[] _tickets);\r\n    event Confirmed(address indexed _to);\r\n    event TransferStarted(address indexed _from, address indexed _to, uint256[] _tickets, uint256 _transferID);\r\n    event Transferred(uint256 _transferID);\r\n    event Banned(address indexed _banned, bool payback);\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reservations\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"revokee\",\"type\":\"address\"},{\"name\":\"payback\",\"type\":\"bool\"}],\"name\":\"revokeTickets\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"hashes\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"setHash\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highestAddressReserving\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ticketTransferers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ticketsOwned\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ticketTransfersAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"noOfTicketsOwned\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ticketsOwners\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ticketTransfersPerAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"transferID\",\"type\":\"uint256\"}],\"name\":\"finishTransfer\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"transferID\",\"type\":\"uint256\"}],\"name\":\"removeTransfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"timeOfreservations\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ticketTransferersAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ticketID\",\"type\":\"uint256\"}],\"name\":\"returnTickets\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"transferee\",\"type\":\"address\"},{\"name\":\"ticks\",\"type\":\"uint256[]\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InvokeTransfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"transferer\",\"type\":\"address\"},{\"name\":\"transferee\",\"type\":\"address\"}],\"name\":\"getTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"noOfreservations\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"banned\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"seats\",\"type\":\"uint256[]\"},{\"name\":\"nOfSeats\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ticketTransferees\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lowestAddressReserving\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"seats\",\"type\":\"uint256[]\"},{\"name\":\"nOfSeats\",\"type\":\"uint256\"}],\"name\":\"reserveSeats\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressesReserving\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"},{\"name\":\"password\",\"type\":\"string\"}],\"name\":\"checkHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"noOfSeats\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondsToHold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ticketTransfers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"priceOfreservations\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ticketPrices\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ticketTransfereesAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"requester\",\"type\":\"address\"},{\"name\":\"resetOwn\",\"type\":\"bool\"}],\"name\":\"resetReservations\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"end\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"ticks\",\"type\":\"uint256[]\"},{\"name\":\"nOfSeats\",\"type\":\"uint256\"},{\"name\":\"n\",\"type\":\"string\"},{\"name\":\"eD\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tickets\",\"type\":\"uint256[]\"}],\"name\":\"Reserved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"Confirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tickets\",\"type\":\"uint256[]\"},{\"indexed\":false,\"name\":\"_transferID\",\"type\":\"uint256\"}],\"name\":\"TransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_transferID\",\"type\":\"uint256\"}],\"name\":\"Transferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_banned\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"payback\",\"type\":\"bool\"}],\"name\":\"Banned\",\"type\":\"event\"}]","ContractName":"tickets","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000059cff6c10000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000009184e72a00000000000000000000000000000000000000000000000000000001b48eb57e000000000000000000000000000000000000000000000000000000009184e72a000000000000000000000000000000000000000000000000000000012309ce54000000000000000000000000000000000000000000000000000000009184e72a00000000000000000000000000000000000000000000000000000000000000000075461792054617900000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://3cc91c6f9a5af5f89d4f6105d9d928007d23750e4a527f3773afec84e6f9e4fb"}]}