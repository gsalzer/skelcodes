{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract SafeMath {\r\n    function mul(uint256 a, uint256 b) internal  returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal  returns (uint256) {\r\n        assert(b > 0);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal   returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n    function add(uint256 a, uint256 b) internal  returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n    function pow( uint256 a , uint8 b ) internal returns ( uint256 ){\r\n        uint256 c;\r\n        c = a ** b;\r\n        return c;\r\n    }\r\n}\r\ncontract owned {\r\n    bool public OwnerDefined = false;\r\n    address public owner;\r\n    event OwnerEvents(address _addr, uint8 action);\r\n    function owned()\r\n        internal\r\n    {\r\n        require(OwnerDefined == false);\r\n        owner = msg.sender;\r\n        OwnerDefined = true;\r\n        OwnerEvents(msg.sender,1);\r\n    }\r\n}\r\ncontract ERC20Token is owned, SafeMath{\r\n    bool public tokenState;\r\n    string public name = \"8SM\";\r\n    string public symbol = \"8SM\";\r\n    uint256 public decimals = 8;\r\n    uint256 public totalSupply = mul(25,pow(10,15));\r\n    mapping(address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    function init()\r\n        external\r\n    returns ( bool ){\r\n        require(tokenState == false);\r\n        owned;\r\n        tokenState = true;\r\n        balances[this] = totalSupply;\r\n        allowed[this][owner] = totalSupply;\r\n        return true;\r\n    }\r\n    function transfer(address _to, uint256 _value)\r\n        public\r\n    returns ( bool ) {\r\n        require(tokenState == true);\r\n        require(_to != address(0));\r\n        require(_value <= balances[msg.sender]);\r\n        balances[msg.sender] = sub(balances[msg.sender],_value);\r\n        balances[_to] = add(balances[_to],_value);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    function transferFrom(address _from, address _to, uint256 _value)\r\n        public\r\n    {\r\n        require(_to != address(0));\r\n        require(_value <= balances[_from]);\r\n        require(_value <= allowed[_from][msg.sender]);\r\n        balances[_from] = sub(balances[_from],_value);\r\n        balances[_to] = add(balances[_to],_value);\r\n        allowed[_from][msg.sender] = sub(allowed[_from][msg.sender],_value);\r\n        Transfer(_from, _to, _value);\r\n    }\r\n    function balanceOf(address _owner)\r\n        external\r\n        constant\r\n    returns (uint256) {\r\n        require(tokenState == true);\r\n        return balances[_owner];\r\n    }\r\n    function approve(address _spender, uint256 _value)\r\n        external\r\n    returns (bool success) {\r\n        require(tokenState == true);\r\n        require(_spender != address(0));\r\n        require(msg.sender == owner);\r\n        allowed[msg.sender][_spender] = mul(_value, 100000000);\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    function allowance(address _owner, address _spender)\r\n        external\r\n        constant\r\n    returns (uint256 remaining) {\r\n        require(tokenState == true);\r\n        return allowed[_owner][_spender];\r\n    }\r\n    function changeOwner()\r\n        external\r\n    returns ( bool ){\r\n        require(owner == msg.sender);\r\n        require(tokenState == true);\r\n        allowed[this][owner] = 0;\r\n        owner = msg.sender;\r\n        allowed[this][msg.sender] = balances[this];\r\n        return true;\r\n    }\r\n}\r\ncontract disburseToken is SafeMath{\r\n    ERC20Token token;\r\n    bool public state;\r\n    address public tokenAddress; \r\n    address public owner;\r\n    address public from;\r\n    uint256 public staticblock = 5760;\r\n    function init(address _addr,address _from) external returns(bool){\r\n        require(state == false);\r\n        state = true;\r\n        tokenAddress = _addr;\r\n        token = ERC20Token(_addr);\r\n        owner = msg.sender;\r\n        from = _from;\r\n        return true;\r\n    }\r\n    function changeOwner(address _addr) external returns (bool){\r\n        require(state == true);\r\n        owner = _addr;\r\n        return true;\r\n    }\r\n    function disburse (address char) returns ( bool ){\r\n        require(state == true);\r\n        require(owner == msg.sender);\r\n        uint256 e = sub(block.number,mul(div(block.number,staticblock),staticblock));\r\n        token.transferFrom(from,char,mul(e,4340277));\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"changeOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OwnerDefined\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"init\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenState\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"action\",\"type\":\"uint8\"}],\"name\":\"OwnerEvents\",\"type\":\"event\"}]","ContractName":"ERC20Token","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ed98f6262bf2a1719eb483b9909d83eb758d14c1b9e3b50e59bff2c245a2e663"}]}