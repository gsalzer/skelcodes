{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ninterface tokenRecipient {\r\nfunction receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; \r\n}\r\n\r\ncontract ERC20 {\r\n\r\nstring public name;\r\nstring public symbol;\r\nuint8 public decimals = 18;\r\nuint256 public totalSupply;\r\n\r\nmapping (address => uint256) public balanceOf;\r\nmapping (address => mapping (address => uint256)) public allowance;\r\n\r\nevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\nfunction ERC20(\r\nuint256 initialSupply,\r\nstring tokenName,\r\nstring tokenSymbol\r\n) public {\r\ntotalSupply = initialSupply * 10 ** uint256(decimals); \r\nbalanceOf[msg.sender] = totalSupply; \r\nname = tokenName; \r\nsymbol = tokenSymbol; \r\n}\r\n\r\nfunction _transfer(address _from, address _to, uint _value) internal {\r\nrequire(_to != 0x0);\r\nrequire(balanceOf[_from] >= _value);\r\nrequire(balanceOf[_to] + _value > balanceOf[_to]);\r\n\r\nuint previousBalances = balanceOf[_from] + balanceOf[_to];\r\nbalanceOf[_from] -= _value;\r\nbalanceOf[_to] += _value;\r\nTransfer(_from, _to, _value);\r\n\r\nassert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n}\r\n\r\n\r\nfunction transfer(address _to, uint256 _value) public {\r\n_transfer(msg.sender, _to, _value);\r\n}\r\n\r\n\r\nfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\nrequire(_value <= allowance[_from][msg.sender]); // Check allowance\r\nallowance[_from][msg.sender] -= _value;\r\n_transfer(_from, _to, _value);\r\nreturn true;\r\n}\r\n\r\n\r\nfunction approve(address _spender, uint256 _value) public\r\nreturns (bool success) {\r\nallowance[msg.sender][_spender] = _value;\r\nreturn true;\r\n}\r\n\r\nfunction approveAndCall(address _spender, uint256 _value, bytes _extraData)\r\npublic\r\nreturns (bool success) {\r\ntokenRecipient spender = tokenRecipient(_spender);\r\nif (approve(_spender, _value)) {\r\nspender.receiveApproval(msg.sender, _value, this, _extraData);\r\nreturn true;\r\n}\r\n}\r\n\r\n}\r\ncontract Clout is ERC20 {\r\n\r\nfunction Clout() ERC20(100000000, \"Clout\", \"Clout\") public {}\r\nfunction multisend(address[] dests, uint256[] values) public returns (uint256) {\r\nuint256 i = 0;\r\nwhile (i < dests.length) {\r\ntransfer(dests[i], values[i]);\r\ni += 1;\r\n}\r\nreturn(i);\r\n}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multisend\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Clout","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://96bf27e8366203e057df2094d1993c7cb601290b7cbe8d16bd057c1f082a6d59"}]}