{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\ncontract NumberBoard {\r\n\r\n\tstruct ANumberCard {\r\n\t\taddress\t\t\towner;\r\n\t\tuint\t\t\tlookupIdx;\r\n\t\tstring  \t\ttheMessage;\r\n\t\tbool\t\t\tbuyNowActive;\r\n\t\tuint \t\t\tbuyNowPrice;\r\n\t\taddress\t\t\tcurrentBidder;\r\n\t\tuint\t\t\tcurrentBid;\r\n\t}\r\n\r\n\tmapping(uint => ANumberCard) \tpublic ownership;\r\n\tmapping(address => uint[]) \t\tpublic ownershipLookup;\r\n\r\n\tuint constant\t\t\t\t\tpublic minPrice = 1 finney;\r\n\tuint\t\t\t\t\t\t\tpublic houseEarnings;\r\n\tmapping(address => uint)\t\tpublic earnings;\r\n\tmapping(address => uint)\t\tpublic deadbids;\r\n\r\n\taddress houseOwner;\r\n\r\n\tevent NumberTaken(uint indexed number);\r\n\tevent PriceSet(uint indexed number, uint price);\r\n\tevent BidPlaced(uint indexed number, uint price);\r\n\tevent BidCanceled(uint indexed number, uint price);\r\n\tevent BidAccepted(uint indexed number, uint price);\r\n\tevent PriceAccepted(uint indexed number, uint price);\r\n\r\n\tfunction NumberBoard() {\r\n\t\thouseOwner = msg.sender;\r\n\t}\r\n\r\n\tfunction isOwner(address addr, uint theNum) constant returns (bool) {\r\n\t\treturn ownership[theNum].owner == addr;\r\n\t}\r\n\r\n\tfunction hasOwner(uint theNum) constant returns (bool) {\r\n\t\treturn ownership[theNum].owner > 0;\r\n\t}\r\n\r\n\tfunction ownedNumbers(address addr) constant returns (uint[]) {\r\n\t\tuint l = ownershipLookup[addr].length;\r\n\t\tuint[] memory ret = new uint[](l);\r\n\t\tfor (uint i = 0; i < l; i++) {\r\n\t\t\tret[i] = ownershipLookup[addr][i];\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tfunction takeNumber(uint theNum) {\r\n\t\trequire(!hasOwner(theNum));\r\n\t\trequire(!isOwner(msg.sender, theNum));\r\n\r\n\t\townership[theNum] = ANumberCard(msg.sender, 0, \"\", false, 0, 0, 0);\r\n\t\townershipLookup[msg.sender].push(theNum);\r\n\t\townership[theNum].lookupIdx = ownershipLookup[msg.sender].length - 1;\r\n\r\n\t\tNumberTaken(theNum);\r\n\t}\r\n\r\n\tfunction transferNumberOwnership(uint theNum, address from, address to) private {\r\n\t\trequire(isOwner(from, theNum));\r\n\r\n\t\tANumberCard storage card = ownership[theNum];\r\n\r\n\t\tcard.owner = to;\r\n\t\tuint len = ownershipLookup[from].length;\r\n\t\townershipLookup[from][card.lookupIdx] = ownershipLookup[from][len - 1];\r\n\t\townershipLookup[from].length--;\r\n\r\n\t\townershipLookup[to].push(theNum);\r\n\t\townership[theNum].lookupIdx = ownershipLookup[to].length - 1;\r\n\t}\r\n\r\n\tfunction updateMessage(uint theNum, string aMessage) {\r\n\t\trequire(isOwner(msg.sender, theNum));\r\n\r\n\t\townership[theNum].theMessage = aMessage;\r\n\t}\r\n\r\n//---------------------\r\n// Buy now\r\n//---------------------\r\n\r\n\tfunction hasBuyNowOffer(uint theNum) constant returns (bool) {\r\n\t\treturn ownership[theNum].buyNowActive;\r\n\t}\r\n\r\n\tfunction canAcceptBuyNow(uint theNum, address buyer) constant returns (bool) {\r\n\t\treturn ownership[theNum].owner != buyer && hasBuyNowOffer(theNum);\r\n\t}\r\n\r\n\tfunction placeBuyNowOffer(uint theNum, uint price) {\r\n\t\trequire(isOwner(msg.sender, theNum));\r\n\t\trequire(price >= minPrice);\r\n\r\n\t\tANumberCard storage numCard = ownership[theNum];\r\n\t\tnumCard.buyNowPrice = price;\r\n\t\tnumCard.buyNowActive = true;\r\n\r\n\t\tPriceSet(theNum, price);\r\n\t}\r\n\r\n\tfunction cancelBuyNowOffer(uint theNum) {\r\n\t\trequire(isOwner(msg.sender, theNum));\r\n\t\tcancelBuyNowOfferInternal(ownership[theNum]);\r\n\t}\r\n\r\n\tfunction acceptBuyNowOffer(uint theNum) payable {\r\n\t\trequire (canAcceptBuyNow(theNum, msg.sender));\r\n\t\tANumberCard storage numCard = ownership[theNum];\r\n\t\trequire (msg.value == numCard.buyNowPrice);\r\n\r\n\t\taddEarnings(msg.value, numCard.owner);\r\n\t\tcancelBidInternal(theNum);\r\n\r\n\t\ttransferNumberOwnership(theNum, numCard.owner, msg.sender);\r\n\t\tcancelBuyNowOfferInternal(numCard);\r\n\r\n\t\tPriceAccepted(theNum, msg.value);\r\n\t}\r\n\r\n\tfunction cancelBuyNowOfferInternal(ANumberCard storage numCard) private {\r\n\t\tnumCard.buyNowPrice = 0;\r\n\t\tnumCard.buyNowActive = false;\t\t\r\n\t}\r\n\r\n//---------------------\r\n// Bidding\r\n//---------------------\r\n\r\n\tfunction placeNewBid(uint theNum) payable {\r\n\t\trequire(hasOwner(theNum));\r\n\t\trequire(!isOwner(msg.sender, theNum));\r\n\t\trequire(msg.value >= minPrice);\r\n\r\n\t\tANumberCard storage numCard = ownership[theNum];\r\n\t\trequire(msg.value > numCard.currentBid + minPrice);\r\n\r\n\t\tdeadbids[numCard.currentBidder] += numCard.currentBid;\r\n\r\n\t\tnumCard.currentBid = msg.value;\r\n\t\tnumCard.currentBidder = msg.sender;\r\n\r\n\t\tBidPlaced(theNum, msg.value);\r\n\t}\r\n\r\n\tfunction cancelBid(uint theNum) {\r\n\t\tANumberCard storage numCard = ownership[theNum];\r\n\t\trequire(msg.sender == numCard.currentBidder);\r\n\r\n\t\tuint amount = numCard.currentBid;\r\n\t\tcancelBidInternal(theNum);\r\n\t\tBidCanceled(theNum, amount);\r\n\t}\r\n\r\n\tfunction cancelBidInternal(uint theNum) private {\r\n\t\tANumberCard storage numCard = ownership[theNum];\r\n\t\tdeadbids[numCard.currentBidder] += numCard.currentBid;\r\n\t\tnumCard.currentBid = 0;\r\n\t\tnumCard.currentBidder = 0;\r\n\t}\r\n\r\n\tfunction acceptBid(uint theNum) {\r\n\t\trequire(isOwner(msg.sender, theNum));\r\n\r\n\t\tANumberCard storage numCard = ownership[theNum];\r\n\t\trequire(numCard.currentBid > 0);\r\n\t\trequire(numCard.currentBidder != 0);\r\n\r\n\t\tuint amount = numCard.currentBid;\r\n\t\taddEarnings(amount, numCard.owner);\r\n\t\ttransferNumberOwnership(theNum, numCard.owner, numCard.currentBidder);\r\n\r\n\t\tnumCard.currentBidder = 0;\r\n\t\tnumCard.currentBid = 0;\r\n\r\n\t\tBidAccepted(theNum, amount);\r\n\t}\r\n\r\n\tfunction addEarnings(uint amount, address to) private {\r\n\t\tuint interest = amount / 100;\r\n\t\tearnings[to] += amount - interest;\r\n\t\thouseEarnings += interest;\r\n\t}\r\n\r\n\tfunction withdrawDeadBids() {\r\n \t\tuint amount = deadbids[msg.sender];\r\n        deadbids[msg.sender] = 0;\r\n        msg.sender.transfer(amount);\r\n\t}\r\n\r\n\tfunction withdrawEarnings() {\r\n \t\tuint amount = earnings[msg.sender];\r\n        earnings[msg.sender] = 0;\r\n        msg.sender.transfer(amount);\r\n\t}\r\n\r\n\tfunction withdrawHouseEarnings() {\r\n\t\trequire(msg.sender == houseOwner);\r\n\r\n\t\tuint amount = houseEarnings;\r\n\t\thouseEarnings = 0;\r\n        msg.sender.transfer(amount);\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"ownedNumbers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"theNum\",\"type\":\"uint256\"}],\"name\":\"acceptBid\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"theNum\",\"type\":\"uint256\"}],\"name\":\"hasBuyNowOffer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"theNum\",\"type\":\"uint256\"}],\"name\":\"takeNumber\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawHouseEarnings\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"earnings\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"theNum\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"placeBuyNowOffer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownershipLookup\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"theNum\",\"type\":\"uint256\"},{\"name\":\"aMessage\",\"type\":\"string\"}],\"name\":\"updateMessage\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"theNum\",\"type\":\"uint256\"}],\"name\":\"placeNewBid\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"theNum\",\"type\":\"uint256\"},{\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"canAcceptBuyNow\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"theNum\",\"type\":\"uint256\"}],\"name\":\"cancelBid\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownership\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"lookupIdx\",\"type\":\"uint256\"},{\"name\":\"theMessage\",\"type\":\"string\"},{\"name\":\"buyNowActive\",\"type\":\"bool\"},{\"name\":\"buyNowPrice\",\"type\":\"uint256\"},{\"name\":\"currentBidder\",\"type\":\"address\"},{\"name\":\"currentBid\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawEarnings\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"theNum\",\"type\":\"uint256\"}],\"name\":\"acceptBuyNowOffer\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"houseEarnings\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawDeadBids\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"theNum\",\"type\":\"uint256\"}],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"theNum\",\"type\":\"uint256\"}],\"name\":\"cancelBuyNowOffer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"theNum\",\"type\":\"uint256\"}],\"name\":\"hasOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"deadbids\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"NumberTaken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"number\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PriceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"number\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"BidPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"number\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"BidCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"number\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"BidAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"number\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PriceAccepted\",\"type\":\"event\"}]","ContractName":"NumberBoard","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9c1793c82837ce6172385fe28bc922e07b7069006fbba5dca79f6ec382c91d62"}]}