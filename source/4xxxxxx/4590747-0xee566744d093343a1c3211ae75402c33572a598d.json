{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n  * The Movement\r\n  * Decentralized Autonomous Organization\r\n  */\r\n  \r\npragma solidity ^0.4.18;\r\n\r\ncontract MovementVoting {\r\n    mapping(address => int256) public votes;\r\n    address[] public voters;\r\n    uint256 public endBlock;\r\n\taddress public admin;\r\n\t\r\n    event onVote(address indexed voter, int256 indexed proposalId);\r\n    event onUnVote(address indexed voter, int256 indexed proposalId);\r\n\r\n    function MovementVoting(uint256 _endBlock) {\r\n        endBlock = _endBlock;\r\n\t\tadmin = msg.sender;\r\n    }\r\n\r\n\tfunction changeEndBlock(uint256 _endBlock)\r\n\tonlyAdmin {\r\n\t\tendBlock = _endBlock;\r\n\t}\r\n\r\n    function vote(int256 proposalId) {\r\n\r\n        require(msg.sender != address(0));\r\n        require(proposalId > 0);\r\n        require(endBlock == 0 || block.number <= endBlock);\r\n        if (votes[msg.sender] == 0) {\r\n            voters.push(msg.sender);\r\n        }\r\n\r\n        votes[msg.sender] = proposalId;\r\n\r\n        onVote(msg.sender, proposalId);\r\n    }\r\n\r\n    function unVote() {\r\n\r\n        require(msg.sender != address(0));\r\n        require(votes[msg.sender] > 0);\r\n        int256 proposalId = votes[msg.sender];\r\n\t\tvotes[msg.sender] = -1;\r\n        onUnVote(msg.sender, proposalId);\r\n    }\r\n\r\n    function votersCount()\r\n    constant\r\n    returns(uint256) {\r\n        return voters.length;\r\n    }\r\n\r\n    function getVoters(uint256 offset, uint256 limit)\r\n    constant\r\n    returns(address[] _voters, int256[] _proposalIds) {\r\n\r\n        if (offset < voters.length) {\r\n            uint256 resultLength = limit;\r\n            uint256 index = 0;\r\n\r\n         \r\n            if (voters.length - offset < limit) {\r\n                resultLength = voters.length - offset;\r\n            }\r\n\r\n            _voters = new address[](resultLength);\r\n            _proposalIds = new int256[](resultLength);\r\n\r\n            for(uint256 i = offset; i < offset + resultLength; i++) {\r\n                _voters[index] = voters[i];\r\n                _proposalIds[index] = votes[voters[i]];\r\n                index++;\r\n            }\r\n\r\n            return (_voters, _proposalIds);\r\n        }\r\n    }\r\n\r\n\tmodifier onlyAdmin() {\r\n\t\tif (msg.sender != admin) revert();\r\n\t\t_;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"endBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"proposalId\",\"type\":\"int256\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_endBlock\",\"type\":\"uint256\"}],\"name\":\"changeEndBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"offset\",\"type\":\"uint256\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getVoters\",\"outputs\":[{\"name\":\"_voters\",\"type\":\"address[]\"},{\"name\":\"_proposalIds\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votersCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"votes\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voters\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_endBlock\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"proposalId\",\"type\":\"int256\"}],\"name\":\"onVote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"proposalId\",\"type\":\"int256\"}],\"name\":\"onUnVote\",\"type\":\"event\"}]","ContractName":"MovementVoting","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://2466479a63a62a23e9102683d0b88bb5e72bc6e97bdd0591ddef2f88b94c0d19"}]}