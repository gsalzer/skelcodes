{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n// a naive implementation of hash registry\r\n\r\ncontract HashRegistry {\r\n    \r\n    struct StoredIn {\r\n        uint storageId;\r\n        address storedBy; \r\n    }\r\n    \r\n    mapping(uint => StoredIn) storeMap;\r\n    string[] storageNames;\r\n    \r\n    function store(uint hash, uint storageId) public {\r\n        address storedBy = storeMap[hash].storedBy;  \r\n        require(storedBy == 0 || storedBy == msg.sender);\r\n        require(storageId < storageNames.length);\r\n        storeMap[hash] = StoredIn(storageId, msg.sender);\r\n    }\r\n    \r\n    \r\n    function addStorage(string storageName) public {\r\n        //ToDo: check existing storageNames to prevent duplicates\r\n        storageNames.push(storageName);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"uint256\"},{\"name\":\"storageId\",\"type\":\"uint256\"}],\"name\":\"store\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"storageName\",\"type\":\"string\"}],\"name\":\"addStorage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"HashRegistry","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d026b639e14ddc5bbb410ecdfc5112302275282ee0a012631fc6f820f5b83a1a"}]}