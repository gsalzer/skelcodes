{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.16;\r\n\r\ncontract Escrow{\r\n    \r\n    function Escrow() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    mapping (address => mapping (bytes32 => uint128)) public balances;\r\n    mapping (bytes16 => Lock) public lockedMoney;\r\n    address public owner;\r\n    \r\n    struct Lock {\r\n        uint128 amount;\r\n        bytes32 currencyAndBank;\r\n        address from;\r\n        address executingBond;\r\n    }\r\n    \r\n    event TxExecuted(uint32 indexed event_id);\r\n    \r\n    modifier onlyOwner() {\r\n        if(msg.sender == owner)\r\n        _;\r\n    }\r\n    \r\n    function checkBalance(address acc, string currencyAndBank) constant returns (uint128 balance) {\r\n        bytes32 cab = sha3(currencyAndBank);\r\n        return balances[acc][cab];\r\n    }\r\n    \r\n    function getLocked(bytes16 lockID) returns (uint) {\r\n        return lockedMoney[lockID].amount;\r\n    }\r\n    \r\n    function deposit(address to, uint128 amount, string currencyAndBank, uint32 event_id) \r\n        onlyOwner returns(bool success) {\r\n            bytes32 cab = sha3(currencyAndBank);\r\n            balances[to][cab] += amount;\r\n            TxExecuted(event_id);\r\n            return true;\r\n    } \r\n    \r\n    function withdraw(uint128 amount, string currencyAndBank, uint32 event_id) \r\n        returns(bool success) {\r\n            bytes32 cab = sha3(currencyAndBank);\r\n            require(balances[msg.sender][cab] >= amount);\r\n            balances[msg.sender][cab] -= amount;\r\n            TxExecuted(event_id);\r\n            return true;\r\n    }\r\n    \r\n    function lock(uint128 amount, string currencyAndBank, address executingBond, bytes16 lockID, uint32 event_id) \r\n        returns(bool success) {   \r\n            bytes32 cab = sha3(currencyAndBank);\r\n            require(balances[msg.sender][cab] >= amount);\r\n            balances[msg.sender][cab] -= amount;\r\n            lockedMoney[lockID].currencyAndBank = cab;\r\n            lockedMoney[lockID].amount += amount;\r\n            lockedMoney[lockID].from = msg.sender;\r\n            lockedMoney[lockID].executingBond = executingBond;\r\n            TxExecuted(event_id);\r\n            return true; \r\n    }\r\n    \r\n    function executeLock(bytes16 lockID, address issuer) returns(bool success) {\r\n        if(msg.sender == lockedMoney[lockID].executingBond){\r\n\t        balances[issuer][lockedMoney[lockID].currencyAndBank] += lockedMoney[lockID].amount;            \r\n\t        delete lockedMoney[lockID];\r\n\t        return true;\r\n\t\t}else\r\n\t\t    return false;\r\n    }\r\n    \r\n    function unlock(bytes16 lockID, uint32 event_id) onlyOwner returns (bool success) {\r\n        balances[lockedMoney[lockID].from][lockedMoney[lockID].currencyAndBank] +=\r\n            lockedMoney[lockID].amount;\r\n        delete lockedMoney[lockID];\r\n        TxExecuted(event_id);\r\n        return true;\r\n    }\r\n    \r\n    function pay(address to, uint128 amount, string currencyAndBank, uint32 event_id) \r\n        returns (bool success){\r\n            bytes32 cab = sha3(currencyAndBank);\r\n            require(balances[msg.sender][cab] >= amount);\r\n            balances[msg.sender][cab] -= amount;\r\n            balances[to][cab] += amount;\r\n            TxExecuted(event_id);\r\n            return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint128\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint128\"},{\"name\":\"currencyAndBank\",\"type\":\"string\"},{\"name\":\"event_id\",\"type\":\"uint32\"}],\"name\":\"pay\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"acc\",\"type\":\"address\"},{\"name\":\"currencyAndBank\",\"type\":\"string\"}],\"name\":\"checkBalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint128\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint128\"},{\"name\":\"currencyAndBank\",\"type\":\"string\"},{\"name\":\"event_id\",\"type\":\"uint32\"}],\"name\":\"deposit\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"lockID\",\"type\":\"bytes16\"},{\"name\":\"event_id\",\"type\":\"uint32\"}],\"name\":\"unlock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint128\"},{\"name\":\"currencyAndBank\",\"type\":\"string\"},{\"name\":\"executingBond\",\"type\":\"address\"},{\"name\":\"lockID\",\"type\":\"bytes16\"},{\"name\":\"event_id\",\"type\":\"uint32\"}],\"name\":\"lock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"lockID\",\"type\":\"bytes16\"},{\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"executeLock\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"lockID\",\"type\":\"bytes16\"}],\"name\":\"getLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes16\"}],\"name\":\"lockedMoney\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint128\"},{\"name\":\"currencyAndBank\",\"type\":\"bytes32\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"executingBond\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint128\"},{\"name\":\"currencyAndBank\",\"type\":\"string\"},{\"name\":\"event_id\",\"type\":\"uint32\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"event_id\",\"type\":\"uint32\"}],\"name\":\"TxExecuted\",\"type\":\"event\"}]","ContractName":"Escrow","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f281071a24b53195814820eb29b36a265df46dd6c30c2c9b1ae3d298168f2ad1"}]}