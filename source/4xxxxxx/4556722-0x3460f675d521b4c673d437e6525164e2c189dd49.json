{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\ncontract Token {\r\n    function totalSupply() constant returns (uint256 totalSupply);\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract ERC20Token is Token {\r\n    uint256 constant MAX_UINT256 = 2**256 - 1;\r\n    uint256 _totalSupply;\r\n    \r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        require(balances[msg.sender] >= _value);\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        uint256 allowance = allowed[_from][msg.sender];\r\n        require(balances[_from] >= _value && allowance >= _value);\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        if (allowance < MAX_UINT256) {\r\n            allowed[_from][msg.sender] -= _value;\r\n        }\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n    function totalSupply() constant returns (uint256 totalSupply) {\r\n         totalSupply = _totalSupply;\r\n    }\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n}\r\n\r\ncontract iBTCoE is ERC20Token{\r\n    function TransferToBTCoE(address _to, uint256 _value) returns (bool success);\r\n    function TransferToSAToE(uint256 _value) returns (bool success);\r\n}\r\n\r\ncontract iSAToE is ERC20Token{\r\n    function TransferToSAToE(address _to, uint256 _value) returns (bool success);\r\n    function TransferToBTCoE(uint256 _amount) returns (bool success);\r\n}\r\n\r\ncontract BTCoE is iBTCoE{\r\n    \r\n    string public constant name = \"Bitcoin oE\"; \r\n    uint8 public constant decimals = 8;\r\n    string public constant symbol = \"BTCoE\";\r\n\r\n    address public owner;\r\n    mapping(address => bool) airDropped;\r\n    uint256 public airDropStage = 1;\r\n    uint256 public userCount = 0;\r\n    \r\n    address public satoeContract = 0x00;\r\n    uint256 minTxFee = 0.02 ether;\r\n    uint256 maxTxFee = 0.03 ether;\r\n    uint256 minClaimFee = 0.003 ether;\r\n    uint256 maxClaimFee = 0.004 ether;\r\n    uint256 public maxSupply;\r\n    iSAToE satoe;\r\n    bool public satoeLocked = false;\r\n    \r\n    function BTCoE()\r\n    {\r\n        maxSupply  = 21000000 * 10**8;\r\n        _totalSupply = maxSupply;\r\n        \r\n        owner = msg.sender;\r\n        balances[owner] = maxSupply;\r\n        airDropped[owner] = true;\r\n    }\r\n    \r\n    modifier forOwner(){\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    function() payable external\r\n    {\r\n        require (block.number >= 4574200);\r\n        require (airDropStage <= 10);\r\n        require (!airDropped[msg.sender]);\r\n        require(msg.value >= minTxFee);\r\n        require(msg.value <= maxTxFee);\r\n        \r\n        uint256 airDropReward = (2048*10**8)/(2**(airDropStage-1));\r\n        require (balances[owner] >= airDropReward);\r\n        \r\n        balances[owner] -= airDropReward;\r\n        balances[msg.sender] += airDropReward;\r\n        Transfer(owner, msg.sender, airDropReward);\r\n        airDropped[msg.sender] = true;\r\n        \r\n        userCount ++;\r\n        if (userCount == 256*airDropStage)\r\n        {\r\n            userCount = 0;\r\n            airDropStage++;\r\n        }\r\n    }\r\n    //------------------------------------------------------------------------\r\n    function SetSAToEContract(address _address) forOwner\r\n    {\r\n        require (_address != 0x0);\r\n        require (!satoeLocked);\r\n        satoeContract = _address;\r\n        satoe = iSAToE(satoeContract);\r\n    }\r\n    function LockSAToE() forOwner\r\n    {\r\n        require (satoeContract != 0x00);\r\n        satoeLocked = true;\r\n    }\r\n    function TransferToBTCoE(address _to, uint256 _value) returns (bool success) \r\n    {\r\n        require (msg.sender == satoeContract);\r\n        require (balances[satoeContract] >= _value);\r\n        \r\n        balances[satoeContract] -= _value;\r\n        balances[_to] += _value;\r\n        _totalSupply = maxSupply - balances[satoeContract];\r\n        Transfer(satoeContract, _to, _value);\r\n        return true;\r\n    }\r\n    function TransferToSAToE(uint256 _value) returns (bool success)\r\n    {\r\n        require (satoeContract != 0x00);\r\n        require (_value <= balances[msg.sender]);\r\n        uint256 realMicroSAToE = _value * 10**6;\r\n        \r\n        balances[msg.sender] -= _value;\r\n        balances[satoeContract] += _value;\r\n        _totalSupply = maxSupply - balances[satoeContract];\r\n        Transfer(msg.sender, satoeContract, _value);\r\n        require (satoe.TransferToSAToE(msg.sender, realMicroSAToE));\r\n        return true;\r\n    }\r\n    function balanceOf(address _owner) constant returns (uint256 balance) \r\n    {\r\n        // balances[satoeContract] is locked\r\n        // check to assure match total supply.\r\n        if(_owner == satoeContract) return 0;\r\n        return balances[_owner];\r\n    }\r\n    //------------------------------------------------------------------------\r\n    function ProcessTxFee() forOwner\r\n    {\r\n        require (owner.send(this.balance));\r\n    }\r\n    function SetTxFee(uint256 minfee, uint256 maxfee) forOwner\r\n    {\r\n        require (minfee < maxfee);\r\n        minTxFee = minfee;\r\n        maxTxFee = maxfee;\r\n    }\r\n    function SetClaimFee(uint256 minfee, uint256 maxfee) forOwner\r\n    {\r\n        require (minfee < maxfee);\r\n        minClaimFee = minfee;\r\n        maxClaimFee = maxfee;\r\n    }\r\n    //------------------------------------------------------------------------\r\n    event ClaimedSignature(address indexed ethAddress, string btcSignature);\r\n    event DeliveredBTC(address indexed ethAddress, uint256 amount);\r\n    bool public allowingClaimBTC = true;\r\n    mapping(address => bool) acceptedClaimers;\r\n    function AllowClaimBTC(bool val) forOwner\r\n    {\r\n        allowingClaimBTC = val;\r\n    }\r\n    function ClaimBTC(string fullSignature) payable\r\n    {\r\n        require (allowingClaimBTC);\r\n        require (!acceptedClaimers[msg.sender]);\r\n        require (msg.value >= minClaimFee);\r\n        require (msg.value <= maxClaimFee);\r\n        \r\n        ClaimedSignature(msg.sender,fullSignature);\r\n    }\r\n    \r\n    function DeliverToClaimers(address[] dests, uint256[] values) forOwner returns (uint256) \r\n    {\r\n        require (dests.length == values.length);\r\n        uint256 i = 0;\r\n        while (i < dests.length) \r\n        {\r\n            if(!acceptedClaimers[dests[i]])\r\n            {\r\n                transfer(dests[i], values[i]); \r\n                acceptedClaimers[dests[i]] = true;\r\n                DeliveredBTC(dests[i], values[i]);\r\n            }\r\n            i += 1;\r\n        }\r\n        return(i);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"userCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"bool\"}],\"name\":\"AllowClaimBTC\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowingClaimBTC\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"fullSignature\",\"type\":\"string\"}],\"name\":\"ClaimBTC\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"satoeLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"minfee\",\"type\":\"uint256\"},{\"name\":\"maxfee\",\"type\":\"uint256\"}],\"name\":\"SetTxFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airDropStage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"minfee\",\"type\":\"uint256\"},{\"name\":\"maxfee\",\"type\":\"uint256\"}],\"name\":\"SetClaimFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"LockSAToE\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"DeliverToClaimers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"SetSAToEContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ProcessTxFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"satoeContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferToSAToE\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferToBTCoE\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"ethAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"btcSignature\",\"type\":\"string\"}],\"name\":\"ClaimedSignature\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"ethAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DeliveredBTC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"BTCoE","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4f3f9f4fac10a8b900f6f234d33151a3612c5727fa431856071a3574a685d414"}]}