{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.16;\r\n\r\ncontract PullPayInterface {\r\n  function asyncSend(address _dest) public payable;\r\n}\r\n\r\ncontract ERC223ReceivingContract {\r\n    function tokenFallback(address _from, uint _value, bytes _data);\r\n}\r\n\r\ncontract ControllerInterface {\r\n\r\n\r\n  // State Variables\r\n  bool public paused;\r\n  address public nutzAddr;\r\n\r\n  // Nutz functions\r\n  function babzBalanceOf(address _owner) constant returns (uint256);\r\n  function activeSupply() constant returns (uint256);\r\n  function burnPool() constant returns (uint256);\r\n  function powerPool() constant returns (uint256);\r\n  function totalSupply() constant returns (uint256);\r\n  function allowance(address _owner, address _spender) constant returns (uint256);\r\n\r\n  function approve(address _owner, address _spender, uint256 _amountBabz) public;\r\n  function transfer(address _from, address _to, uint256 _amountBabz, bytes _data) public;\r\n  function transferFrom(address _sender, address _from, address _to, uint256 _amountBabz, bytes _data) public;\r\n\r\n  // Market functions\r\n  function floor() constant returns (uint256);\r\n  function ceiling() constant returns (uint256);\r\n\r\n  function purchase(address _sender, uint256 _value, uint256 _price) public returns (uint256);\r\n  function sell(address _from, uint256 _price, uint256 _amountBabz);\r\n\r\n  // Power functions\r\n  function powerBalanceOf(address _owner) constant returns (uint256);\r\n  function outstandingPower() constant returns (uint256);\r\n  function authorizedPower() constant returns (uint256);\r\n  function powerTotalSupply() constant returns (uint256);\r\n\r\n  function powerUp(address _sender, address _from, uint256 _amountBabz) public;\r\n  function downTick(address _owner, uint256 _now) public;\r\n  function createDownRequest(address _owner, uint256 _amountPower) public;\r\n  function downs(address _owner) constant public returns(uint256, uint256, uint256);\r\n  function downtime() constant returns (uint256);\r\n}\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    require(newOwner != address(0));      \r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract ERC20Basic {\r\n  function totalSupply() constant returns (uint256);\r\n  function balanceOf(address _owner) constant returns (uint256);\r\n  function transfer(address _to, uint256 _value) returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\ncontract ERC223Basic is ERC20Basic {\r\n    function transfer(address to, uint value, bytes data) returns (bool);\r\n}\r\n\r\n/*\r\n * ERC20 interface\r\n * see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC223Basic {\r\n  // active supply of tokens\r\n  function activeSupply() constant returns (uint256);\r\n  function allowance(address _owner, address _spender) constant returns (uint256);\r\n  function transferFrom(address _from, address _to, uint _value) returns (bool);\r\n  function approve(address _spender, uint256 _value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * Nutz implements a price floor and a price ceiling on the token being\r\n * sold. It is based of the zeppelin token contract.\r\n */\r\ncontract Nutz is Ownable, ERC20 {\r\n\r\n  event Sell(address indexed seller, uint256 value);\r\n\r\n  string public name = \"Acebusters Nutz\";\r\n  // acebusters units:\r\n  // 10^12 - Nutz   (NTZ)\r\n  // 10^9 - Jonyz\r\n  // 10^6 - Helcz\r\n  // 10^3 - Pascalz\r\n  // 10^0 - Babz\r\n  string public symbol = \"NTZ\";\r\n  uint256 public decimals = 12;\r\n\r\n  // returns balances of active holders\r\n  function balanceOf(address _owner) constant returns (uint) {\r\n    return ControllerInterface(owner).babzBalanceOf(_owner);\r\n  }\r\n\r\n  function totalSupply() constant returns (uint256) {\r\n    return ControllerInterface(owner).totalSupply();\r\n  }\r\n\r\n  function activeSupply() constant returns (uint256) {\r\n    return ControllerInterface(owner).activeSupply();\r\n  }\r\n\r\n  // return remaining allowance\r\n  // if calling return allowed[address(this)][_spender];\r\n  // returns balance of ether parked to be withdrawn\r\n  function allowance(address _owner, address _spender) constant returns (uint256) {\r\n    return ControllerInterface(owner).allowance(_owner, _spender);\r\n  }\r\n\r\n  // returns either the salePrice, or if reserve does not suffice\r\n  // for active supply, returns maxFloor\r\n  function floor() constant returns (uint256) {\r\n    return ControllerInterface(owner).floor();\r\n  }\r\n\r\n  // returns either the salePrice, or if reserve does not suffice\r\n  // for active supply, returns maxFloor\r\n  function ceiling() constant returns (uint256) {\r\n    return ControllerInterface(owner).ceiling();\r\n  }\r\n\r\n  function powerPool() constant returns (uint256) {\r\n    return ControllerInterface(owner).powerPool();\r\n  }\r\n\r\n\r\n  function _checkDestination(address _from, address _to, uint256 _value, bytes _data) internal {\r\n    // erc223: Retrieve the size of the code on target address, this needs assembly .\r\n    uint256 codeLength;\r\n    assembly {\r\n      codeLength := extcodesize(_to)\r\n    }\r\n    if(codeLength>0) {\r\n      ERC223ReceivingContract untrustedReceiver = ERC223ReceivingContract(_to);\r\n      // untrusted contract call\r\n      untrustedReceiver.tokenFallback(_from, _value, _data);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // ############################################\r\n  // ########### ADMIN FUNCTIONS ################\r\n  // ############################################\r\n\r\n  function powerDown(address powerAddr, address _holder, uint256 _amountBabz) public onlyOwner {\r\n    bytes memory empty;\r\n    _checkDestination(powerAddr, _holder, _amountBabz, empty);\r\n    // NTZ transfered from power pool to user's balance\r\n    Transfer(powerAddr, _holder, _amountBabz);\r\n  }\r\n\r\n\r\n  function asyncSend(address _pullAddr, address _dest, uint256 _amountWei) public onlyOwner {\r\n    assert(_amountWei <= this.balance);\r\n    PullPayInterface(_pullAddr).asyncSend.value(_amountWei)(_dest);\r\n  }\r\n\r\n\r\n  // ############################################\r\n  // ########### PUBLIC FUNCTIONS ###############\r\n  // ############################################\r\n\r\n  function approve(address _spender, uint256 _amountBabz) public {\r\n    ControllerInterface(owner).approve(msg.sender, _spender, _amountBabz);\r\n    Approval(msg.sender, _spender, _amountBabz);\r\n  }\r\n\r\n  function transfer(address _to, uint256 _amountBabz, bytes _data) public returns (bool) {\r\n    ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data);\r\n    Transfer(msg.sender, _to, _amountBabz);\r\n    _checkDestination(msg.sender, _to, _amountBabz, _data);\r\n    return true;\r\n  }\r\n\r\n  function transfer(address _to, uint256 _amountBabz) public returns (bool) {\r\n    bytes memory empty;\r\n    return transfer(_to, _amountBabz, empty);\r\n  }\r\n\r\n  function transData(address _to, uint256 _amountBabz, bytes _data) public returns (bool) {\r\n    return transfer(_to, _amountBabz, _data);\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _amountBabz, bytes _data) public returns (bool) {\r\n    ControllerInterface(owner).transferFrom(msg.sender, _from, _to, _amountBabz, _data);\r\n    Transfer(_from, _to, _amountBabz);\r\n    _checkDestination(_from, _to, _amountBabz, _data);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint256 _amountBabz) public returns (bool) {\r\n    bytes memory empty;\r\n    return transferFrom(_from, _to, _amountBabz, empty);\r\n  }\r\n\r\n  function () public payable {\r\n    uint256 price = ControllerInterface(owner).ceiling();\r\n    purchase(price);\r\n    require(msg.value > 0);\r\n  }\r\n\r\n  function purchase(uint256 _price) public payable {\r\n    require(msg.value > 0);\r\n    uint256 amountBabz = ControllerInterface(owner).purchase(msg.sender, msg.value, _price);\r\n    Transfer(owner, msg.sender, amountBabz);\r\n    bytes memory empty;\r\n    _checkDestination(address(this), msg.sender, amountBabz, empty);\r\n  }\r\n\r\n  function sell(uint256 _price, uint256 _amountBabz) public {\r\n    require(_amountBabz != 0);\r\n    ControllerInterface(owner).sell(msg.sender, _price, _amountBabz);\r\n    Sell(msg.sender, _amountBabz);\r\n  }\r\n\r\n  function powerUp(uint256 _amountBabz) public {\r\n    Transfer(msg.sender, owner, _amountBabz);\r\n    ControllerInterface(owner).powerUp(msg.sender, msg.sender, _amountBabz);\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amountBabz\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"powerPool\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amountBabz\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"powerAddr\",\"type\":\"address\"},{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_amountBabz\",\"type\":\"uint256\"}],\"name\":\"powerDown\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"floor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amountBabz\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transData\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ceiling\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pullAddr\",\"type\":\"address\"},{\"name\":\"_dest\",\"type\":\"address\"},{\"name\":\"_amountWei\",\"type\":\"uint256\"}],\"name\":\"asyncSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amountBabz\",\"type\":\"uint256\"}],\"name\":\"powerUp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amountBabz\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amountBabz\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"activeSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amountBabz\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_amountBabz\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Nutz","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e7188771bf5d7a226186fe3e1f737db42cbe645d83df810fdae6d557e4f8f96d"}]}