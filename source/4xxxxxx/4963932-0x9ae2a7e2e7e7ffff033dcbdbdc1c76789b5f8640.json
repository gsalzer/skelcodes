{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    modifier onlyOwner {\r\n        if (msg.sender != owner) throw;\r\n        _;\r\n    }\r\n    \r\n    function transferOwnership(address newOwner) onlyOwner {\r\n        if (newOwner == 0x0) throw;\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract SafeMath {\r\n  function safeMul(uint a, uint b) internal returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n  \r\n  function safeSub(uint a, uint b) internal returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n  \r\n  function safeAdd(uint a, uint b) internal returns (uint) {\r\n    uint c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n  \r\n  function assert(bool assertion) internal {\r\n    if (!assertion) throw;\r\n  }\r\n}\r\n\r\ncontract Token {\r\n    uint256 public totalSupply;\r\n    \r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n    \r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n    \r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n    \r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract StandardToken is Token {\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        if (balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\r\n            balances[_from] -= _value;\r\n            balances[_to] += _value;\r\n            allowed[_from][msg.sender] -= _value;\r\n            Transfer(_from, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n}\r\n\r\ncontract pr0coin is owned, SafeMath, StandardToken {\r\n    string public name = \"pr0coin\";\r\n    string public symbol = \">_\";\r\n    address public pr0coinAddress = this;\r\n    uint8 public decimals = 4;\r\n    uint256 public totalSupply = 1000000000000;\r\n    uint256 public buyPriceEth = 2 szabo;\r\n    uint256 public sellPriceEth = 1 szabo;\r\n    uint256 public gasForDCN = 5 szabo;\r\n    uint256 public DCNForGas = 10;\r\n    uint256 public gasReserve = 1 ether;\r\n    uint256 public minBalanceForAccounts = 10 szabo;\r\n    bool public directTradeAllowed = true;\r\n    \r\n    function pr0coin() {\r\n        balances[msg.sender] = totalSupply/10; \r\n        balances[this] = totalSupply - balances[msg.sender];\r\n    }\r\n    \r\n    function setEtherPrices(uint256 newBuyPriceEth, uint256 newSellPriceEth) onlyOwner {\r\n        buyPriceEth = newBuyPriceEth;\r\n        sellPriceEth = newSellPriceEth;\r\n    }\r\n    \r\n    function setGasForDCN(uint newGasAmountInWei) onlyOwner {\r\n        gasForDCN = newGasAmountInWei;\r\n    }\r\n    \r\n    function setDCNForGas(uint newDCNAmount) onlyOwner {\r\n        DCNForGas = newDCNAmount;\r\n    }\r\n    \r\n    function setGasReserve(uint newGasReserveInWei) onlyOwner {\r\n        gasReserve = newGasReserveInWei;\r\n    }\r\n    \r\n    function setMinBalance(uint minimumBalanceInWei) onlyOwner {\r\n        minBalanceForAccounts = minimumBalanceInWei;\r\n    }\r\n    \r\n    function haltDirectTrade() onlyOwner {\r\n        directTradeAllowed = false;\r\n    }\r\n    \r\n    function unhaltDirectTrade() onlyOwner {\r\n        directTradeAllowed = true;\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        if (_value < DCNForGas) throw;                                   \r\n        if (msg.sender != owner && _to == pr0coinAddress && directTradeAllowed) {\r\n            sellpr0coinsAgainstEther(_value);                         \r\n            return true;\r\n        }\r\n\r\n        if (balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]) {            \r\n            balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n\r\n            if (msg.sender.balance >= minBalanceForAccounts && _to.balance >= minBalanceForAccounts) { \r\n                balances[_to] = safeAdd(balances[_to], _value);\r\n                Transfer(msg.sender, _to, _value);\r\n                return true;\r\n            } else {\r\n                balances[this] = safeAdd(balances[this], DCNForGas);\r\n                balances[_to] = safeAdd(balances[_to], safeSub(_value, DCNForGas));\r\n                Transfer(msg.sender, _to, safeSub(_value, DCNForGas));\r\n\r\n                if(msg.sender.balance < minBalanceForAccounts) {\r\n                    if(!msg.sender.send(gasForDCN)) throw;\r\n                  }\r\n                if(_to.balance < minBalanceForAccounts) {\r\n                    if(!_to.send(gasForDCN)) throw;\r\n                }\r\n            }\r\n        } else { throw; }\r\n    }\r\n    \r\n    function buypr0coinsAgainstEther() payable returns (uint amount) {\r\n        if (buyPriceEth == 0 || msg.value < buyPriceEth) throw;             \r\n        amount = msg.value / buyPriceEth;                                   \r\n        if (balances[this] < amount) throw;                                 \r\n        balances[msg.sender] = safeAdd(balances[msg.sender], amount);       \r\n        balances[this] = safeSub(balances[this], amount);                   \r\n        Transfer(this, msg.sender, amount);                                 \r\n        return amount;\r\n    }\r\n    \r\n    function sellpr0coinsAgainstEther(uint256 amount) returns (uint revenue) {\r\n        if (sellPriceEth == 0 || amount < DCNForGas) throw;                 \r\n        if (balances[msg.sender] < amount) throw;                           \r\n        revenue = safeMul(amount, sellPriceEth);                            \r\n        if (safeSub(this.balance, revenue) < gasReserve) throw;             \r\n        if (!msg.sender.send(revenue)) {                                    \r\n            throw;                                                          \r\n        } else {\r\n            balances[this] = safeAdd(balances[this], amount);               \r\n            balances[msg.sender] = safeSub(balances[msg.sender], amount);   \r\n            Transfer(this, msg.sender, revenue);                            \r\n            return revenue;                                                 \r\n        }\r\n    }\r\n    \r\n    function refundToOwner (uint256 amountOfEth, uint256 dcn) onlyOwner {\r\n        uint256 eth = safeMul(amountOfEth, 1 ether);\r\n        if (!msg.sender.send(eth)) {                                       \r\n            throw;                                                         \r\n        } else {\r\n            Transfer(this, msg.sender, eth);                               \r\n        }\r\n        if (balances[this] < dcn) throw;                                   \r\n        balances[msg.sender] = safeAdd(balances[msg.sender], dcn);         \r\n        balances[this] = safeSub(balances[this], dcn);                     \r\n        Transfer(this, msg.sender, dcn);                                   \r\n    }\r\n    \r\n    function() payable {\r\n        if (msg.sender != owner) {\r\n            if (!directTradeAllowed) throw;\r\n            buypr0coinsAgainstEther();\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"sellPriceEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newGasReserveInWei\",\"type\":\"uint256\"}],\"name\":\"setGasReserve\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newDCNAmount\",\"type\":\"uint256\"}],\"name\":\"setDCNForGas\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"directTradeAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minBalanceForAccounts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBuyPriceEth\",\"type\":\"uint256\"},{\"name\":\"newSellPriceEth\",\"type\":\"uint256\"}],\"name\":\"setEtherPrices\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPriceEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amountOfEth\",\"type\":\"uint256\"},{\"name\":\"dcn\",\"type\":\"uint256\"}],\"name\":\"refundToOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newGasAmountInWei\",\"type\":\"uint256\"}],\"name\":\"setGasForDCN\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"haltDirectTrade\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DCNForGas\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gasForDCN\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"minimumBalanceInWei\",\"type\":\"uint256\"}],\"name\":\"setMinBalance\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pr0coinAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unhaltDirectTrade\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellpr0coinsAgainstEther\",\"outputs\":[{\"name\":\"revenue\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buypr0coinsAgainstEther\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gasReserve\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"pr0coin","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0322880b987757e3f72512f8447a18f72a01a953e3cbf9513c209e56c70ec904"}]}