{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\ncontract LightCoinToken{\r\n\tmapping (address => uint256) balances;\r\n\taddress public owner;\r\n\taddress public lockOwner;\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n\tuint256 public lockAmount ;\r\n    uint256 public startTime ;\r\n\t// total amount of tokens\r\n    uint256 public totalSupply;\r\n\t// `allowed` tracks any extra transfer rights as in all ERC20 tokens\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n    function LightCoinToken() public { \r\n        owner = 0x9a64fE62837d8E2C0Bd0C2a96bbDdEA609Ab2F19;          // Set owner of contract \r\n\t\tlockOwner = 0x821C05372425709a68090A17075A855dd20371c7;\r\n\t\tstartTime = 1515686400;\r\n        name = \"Lightcoin\";                                   // Set the name for display purposes\r\n        symbol = \"Light\";                                           // Set the symbol for display purposes\r\n        decimals =8;                                            // Amount of decimals for display purposes\r\n\t\ttotalSupply = 21000000000000000000;               // Total supply\r\n\t\tbalances[owner] = totalSupply * 90 /100 ;\r\n\t\tbalances[0x6CC0BE3c4ad8306526506CB602591AA029896B46]=2000000;\r\n\t\tlockAmount = totalSupply / 10 ;\r\n    }\r\n\t\r\n    /// @param _owner The address from which the balance will be retrieved\r\n    /// @return The balance\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n\t\t return balances[_owner];\r\n\t}\r\n\r\n    /// @notice send `_value` token to `_to` from `msg.sender`\r\n    /// @param _to The address of the recipient\r\n    /// @param _value The amount of token to be transferred\r\n    /// @return Whether the transfer was successful or not\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n\t    require(_value > 0 );                                      // Check send token value > 0;\r\n\t\trequire(balances[msg.sender] >= _value);\r\n\t\tbalances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n\t}\r\n\r\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\r\n    /// @param _from The address of the sender\r\n    /// @param _to The address of the recipient\r\n    /// @param _value The amount of token to be transferred\r\n    /// @return Whether the transfer was successful or not\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n\t    require(balances[_from] >= _value);                 // Check if the sender has enough\r\n        require(balances[_to] + _value >= balances[_to]);   // Check for overflows\r\n        require(_value <= allowed[_from][msg.sender]);      // Check allowance\r\n\t\tbalances[_from] -= _value;\r\n        balances[_to] += _value;\r\n\t\tallowed[_from][_to] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n\t}\r\n\r\n    /// @notice `msg.sender` approves `_spender` to spend `_value` tokens\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @param _value The amount of tokens to be approved for transfer\r\n    /// @return Whether the approval was successful or not\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n\t\trequire(balances[msg.sender] >= _value);\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n    /// @param _owner The address of the account owning tokens\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @return Amount of remaining tokens allowed to spent\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n\t}\r\n\t\r\n\t/* This unnamed function is called whenever someone tries to send ether to it */\r\n    function () private {\r\n        revert();     // Prevents accidental sending of ether\r\n    }\r\n\t\r\n\tfunction releaseToken() public{\r\n\t   require(now >= startTime +2 years);\t   \r\n       uint256 i = ((now  - startTime -2 years) / (0.5 years));\r\n\t   uint256  releasevalue = totalSupply /40 ;\r\n\t   require(lockAmount > (4 - i - 1) * releasevalue); \t   \r\n\t   lockAmount -= releasevalue ;\r\n\t   balances[lockOwner] +=  releasevalue ;\r\n    }\r\n\t\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"LightCoinToken","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c2ec6417b0cf13f44fae5b05a06113697593f1d831782bdfda20e54f5b5b2e03"}]}