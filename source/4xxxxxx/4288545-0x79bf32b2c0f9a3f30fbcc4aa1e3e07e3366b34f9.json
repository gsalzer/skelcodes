{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\n/** @title Decentralized Identification Number (DIN) registry. */\r\ncontract DINRegistry {\r\n\r\n    struct Record {\r\n        address owner;\r\n        address resolver;  // Address where product information is stored. \r\n        uint256 updated;   // Unix timestamp.\r\n    }\r\n\r\n    // DIN => Record\r\n    mapping (uint256 => Record) records;\r\n\r\n    // The address of DINRegistrar.\r\n    address public registrar;\r\n\r\n    // The first DIN registered.\r\n    uint256 public genesis;\r\n\r\n    modifier only_registrar {\r\n        require(registrar == msg.sender);\r\n        _;\r\n    }\r\n\r\n    modifier only_owner(uint256 DIN) {\r\n        require(records[DIN].owner == msg.sender);\r\n        _;\r\n    }\r\n\r\n    // Logged when the owner of a DIN transfers ownership to a new account.\r\n    event NewOwner(uint256 indexed DIN, address indexed owner);\r\n\r\n    // Logged when the resolver associated with a DIN changes.\r\n    event NewResolver(uint256 indexed DIN, address indexed resolver);\r\n\r\n    // Logged when a new DIN is registered.\r\n    event NewRegistration(uint256 indexed DIN, address indexed owner);\r\n\r\n    // Logged when the DINRegistrar contract changes.\r\n    event NewRegistrar(address indexed registrar);\r\n\r\n    /** @dev Constructor.\r\n      * @param _genesis The first DIN registered.\r\n      */\r\n    function DINRegistry(uint256 _genesis) {\r\n        genesis = _genesis;\r\n\r\n        // Register the genesis DIN to the account that deploys this contract.\r\n        records[genesis].owner = msg.sender;\r\n        records[genesis].updated = block.timestamp;\r\n        NewRegistration(genesis, msg.sender);\r\n    }\r\n\r\n    // Get the owner of a specified DIN.\r\n    function owner(uint256 DIN) constant returns (address) {\r\n        return records[DIN].owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Transfer ownership of a DIN.\r\n     * @param DIN The DIN to transfer.\r\n     * @param owner The address of the new owner.\r\n     */\r\n    function setOwner(uint256 DIN, address owner) only_owner(DIN) {\r\n        records[DIN].owner = owner;\r\n        records[DIN].updated = block.timestamp;\r\n        NewOwner(DIN, owner);\r\n    }\r\n\r\n    // Get the resolver of a specified DIN.\r\n    function resolver(uint256 DIN) constant returns (address) {\r\n        return records[DIN].resolver;\r\n    }\r\n\r\n    /**\r\n     * @dev Set the resolver of a DIN.\r\n     * @param DIN The DIN to update.\r\n     * @param resolver The address of the resolver.\r\n     */\r\n    function setResolver(uint256 DIN, address resolver) only_owner(DIN) {\r\n        records[DIN].resolver = resolver;\r\n        records[DIN].updated = block.timestamp;\r\n        NewResolver(DIN, resolver);\r\n    }\r\n\r\n    // Get the time a specified DIN record was last updated.\r\n    function updated(uint256 DIN) constant returns (uint256) {\r\n        return records[DIN].updated;\r\n    } \r\n\r\n    /**\r\n     * @dev Register a new DIN.\r\n     * @param owner The account that will own the DIN.\r\n     */\r\n    function register(uint256 DIN, address owner) only_registrar {\r\n        records[DIN].owner = owner;\r\n        records[DIN].updated = block.timestamp;\r\n        NewRegistration(DIN, owner);\r\n    }\r\n\r\n    /**\r\n     * @dev Change the DINRegistrar contract.\r\n     * @param _registrar The address of the new registrar.\r\n     */\r\n    function setRegistrar(address _registrar) only_owner(genesis) {\r\n        registrar = _registrar;\r\n        NewRegistrar(_registrar);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"DIN\",\"type\":\"uint256\"}],\"name\":\"resolver\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"DIN\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"DIN\",\"type\":\"uint256\"}],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"genesis\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"DIN\",\"type\":\"uint256\"}],\"name\":\"updated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"DIN\",\"type\":\"uint256\"},{\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"DIN\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_registrar\",\"type\":\"address\"}],\"name\":\"setRegistrar\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_genesis\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"DIN\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"DIN\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"NewResolver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"DIN\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NewRegistration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"registrar\",\"type\":\"address\"}],\"name\":\"NewRegistrar\",\"type\":\"event\"}]","ContractName":"DINRegistry","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000003b9aca00","Library":"","SwarmSource":"bzzr://9cf646f75f7d6e5e997a8d63ba3e824eb8e0ae4f40c3595c4db02abb3983ca96"}]}