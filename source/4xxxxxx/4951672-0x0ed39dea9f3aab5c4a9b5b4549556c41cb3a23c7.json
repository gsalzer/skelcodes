{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.19;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract DataCentre is Ownable {\r\n    struct Container {\r\n        mapping(bytes32 => uint256) values;\r\n        mapping(bytes32 => address) addresses;\r\n        mapping(bytes32 => bool) switches;\r\n        mapping(address => uint256) balances;\r\n        mapping(address => mapping (address => uint)) constraints;\r\n    }\r\n\r\n    mapping(bytes32 => Container) containers;\r\n\r\n    // Owner Functions\r\n    function setValue(bytes32 _container, bytes32 _key, uint256 _value) onlyOwner {\r\n        containers[_container].values[_key] = _value;\r\n    }\r\n\r\n    function setAddress(bytes32 _container, bytes32 _key, address _value) onlyOwner {\r\n        containers[_container].addresses[_key] = _value;\r\n    }\r\n\r\n    function setBool(bytes32 _container, bytes32 _key, bool _value) onlyOwner {\r\n        containers[_container].switches[_key] = _value;\r\n    }\r\n\r\n    function setBalanace(bytes32 _container, address _key, uint256 _value) onlyOwner {\r\n        containers[_container].balances[_key] = _value;\r\n    }\r\n\r\n\r\n    function setConstraint(bytes32 _container, address _source, address _key, uint256 _value) onlyOwner {\r\n        containers[_container].constraints[_source][_key] = _value;\r\n    }\r\n\r\n    // Constant Functions\r\n    function getValue(bytes32 _container, bytes32 _key) constant returns(uint256) {\r\n        return containers[_container].values[_key];\r\n    }\r\n\r\n    function getAddress(bytes32 _container, bytes32 _key) constant returns(address) {\r\n        return containers[_container].addresses[_key];\r\n    }\r\n\r\n    function getBool(bytes32 _container, bytes32 _key) constant returns(bool) {\r\n        return containers[_container].switches[_key];\r\n    }\r\n\r\n    function getBalanace(bytes32 _container, address _key) constant returns(uint256) {\r\n        return containers[_container].balances[_key];\r\n    }\r\n\r\n    function getConstraint(bytes32 _container, address _source, address _key) constant returns(uint256) {\r\n        return containers[_container].constraints[_source][_key];\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_container\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_container\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_container\",\"type\":\"bytes32\"},{\"name\":\"_source\",\"type\":\"address\"},{\"name\":\"_key\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setConstraint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_container\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getBool\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_container\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setBalanace\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_container\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_container\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_container\",\"type\":\"bytes32\"},{\"name\":\"_source\",\"type\":\"address\"},{\"name\":\"_key\",\"type\":\"address\"}],\"name\":\"getConstraint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_container\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setBool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_container\",\"type\":\"bytes32\"},{\"name\":\"_key\",\"type\":\"address\"}],\"name\":\"getBalanace\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"DataCentre","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2dafc90312680fa713d658a48c17cffd71360093cb5501ede01f261626ee76b2"}]}