{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\ncontract token { \r\n    function transfer(address _to, uint256 _value);\r\n\tfunction balanceOf(address _owner) constant returns (uint256 balance);\t\r\n}\r\n\r\ncontract Crowdsale {\r\n\r\n\ttoken public sharesTokenAddress; // token address\r\n\r\n\tuint public startICO = now + 10 days; // start ICO\r\n\tuint public periodICO; // duration ICO\r\n\tuint public stopICO; // end ICO\r\n\tuint public price = 0.0035 * 1 ether; // ETH for 1 package of tokens\r\n\tuint coeff = 100000; // capacity of 1 package\r\n\t\r\n\tuint256 public tokenSold = 0; // tokens sold\r\n\tuint256 public tokenFree = 0; // tokens free\r\n\tbool public crowdsaleClosed = false;\r\n\r\n\taddress public owner;\r\n\t\r\n\tevent TokenFree(uint256 value);\r\n\tevent CrowdsaleClosed(bool value);\r\n    \r\n\tfunction Crowdsale(address _tokenAddress, address _owner, uint _timePeriod) {\r\n\t\towner = _owner;\r\n\t\tsharesTokenAddress = token(_tokenAddress);\r\n\t\tperiodICO = _timePeriod * 1 hours;\r\n\t\tstopICO = startICO + periodICO;\r\n\t}\r\n\r\n\tfunction() payable {\r\n\t\ttokenFree = sharesTokenAddress.balanceOf(this); // free tokens count\r\n\t\tif (now > (stopICO + 1)) {\r\n\t\t\tmsg.sender.transfer(msg.value); // if crowdsale closed - cash back\r\n\t\t\tcrowdsaleClosed = true;\r\n\t\t} else if (crowdsaleClosed) {\r\n\t\t\tmsg.sender.transfer(msg.value); // if no more tokens - cash back\r\n\t\t} else {\r\n\t\t\tuint256 tokenToBuy = msg.value / price * coeff; // tokens to buy\r\n\t\t\trequire(tokenToBuy > 0);\r\n\t\t\tuint256 actualETHTransfer = tokenToBuy * price / coeff;\r\n\t\t\tif (tokenFree >= tokenToBuy) { // free tokens >= tokens to buy, sell tokens\r\n\t\t\t\towner.transfer(actualETHTransfer);\r\n\t\t\t\tif (msg.value > actualETHTransfer){ // if more than need - cash back\r\n\t\t\t\t\tmsg.sender.transfer(msg.value - actualETHTransfer);\r\n\t\t\t\t}\r\n\t\t\t\tsharesTokenAddress.transfer(msg.sender, tokenToBuy);\r\n\t\t\t\ttokenSold += tokenToBuy;\r\n\t\t\t\ttokenFree -= tokenToBuy;\r\n\t\t\t\tif(tokenFree==0) crowdsaleClosed = true;\r\n\t\t\t} else { // free tokens < tokens to buy \r\n\t\t\t\tuint256 sendETH = tokenFree * price / coeff; // price for all free tokens\r\n\t\t\t\towner.transfer(sendETH); \r\n\t\t\t\tsharesTokenAddress.transfer(msg.sender, tokenFree); \r\n\t\t\t\tmsg.sender.transfer(msg.value - sendETH); // more than need - cash back\r\n\t\t\t\ttokenSold += tokenFree;\r\n\t\t\t\ttokenFree = 0;\r\n\t\t\t\tcrowdsaleClosed = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tTokenFree(tokenFree);\r\n\t\tCrowdsaleClosed(crowdsaleClosed);\r\n\t}\r\n\t\r\n\tfunction unsoldTokensBack(){ // after crowdsale we can take back all unsold tokens from crowdsale\t    \r\n\t    require(crowdsaleClosed);\r\n\t\trequire(msg.sender == owner);\r\n\t    sharesTokenAddress.transfer(owner, sharesTokenAddress.balanceOf(this));\r\n\t\ttokenFree = 0;\r\n\t\tcrowdsaleClosed = true;\r\n\t}\t\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"unsoldTokensBack\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sharesTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFree\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"periodICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_timePeriod\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokenFree\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"CrowdsaleClosed\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000003001c9b565c0e65e85ee5981035b6b07a3dac89a000000000000000000000000f86d0b42fa991eda3be705496d32f59a37387ee0000000000000000000000000000000000000000000000000000000000000000a","Library":"","SwarmSource":"bzzr://d537ace587b7479dfb53689dced2e591fc0bfd7c17ebb39dd0bd969c164eea01"}]}