{"status":"1","message":"OK","result":[{"SourceCode":"contract SafeMath{\r\n  function safeMul(uint a, uint b) internal returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint a, uint b) internal returns (uint) {\r\n    assert(b > 0);\r\n    uint c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\t\r\n\tfunction safeSub(uint a, uint b) internal returns (uint) {\r\n    \tassert(b <= a);\r\n    \treturn a - b;\r\n  }\r\n\r\n\tfunction safeAdd(uint a, uint b) internal returns (uint) {\r\n    \tuint c = a + b;\r\n    \tassert(c >= a);\r\n    \treturn c;\r\n  }\r\n\tfunction assert(bool assertion) internal {\r\n\t    if (!assertion) {\r\n\t      throw;\r\n\t    }\r\n\t}\r\n}\r\n\r\n\r\ncontract ERC20{\r\n\r\n \tfunction totalSupply() constant returns (uint256 totalSupply) {}\r\n\tfunction balanceOf(address _owner) constant returns (uint256 balance) {}\r\n\tfunction transfer(address _recipient, uint256 _value) returns (bool success) {}\r\n\tfunction transferFrom(address _from, address _recipient, uint256 _value) returns (bool success) {}\r\n\tfunction approve(address _spender, uint256 _value) returns (bool success) {}\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\r\n\r\n\tevent Transfer(address indexed _from, address indexed _recipient, uint256 _value);\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    event Burn(address indexed _owner,  uint256 _value);\r\n\r\n}\r\n\r\ncontract GSD is ERC20, SafeMath{\r\n\t\r\n\tmapping(address => uint256) balances;\r\n\taddress public owner = msg.sender;\r\n\r\n\tuint256 public totalSupply;\r\n\r\n\r\n\tfunction balanceOf(address _owner) constant returns (uint256 balance) {\r\n\t    return balances[_owner];\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _value) returns (bool success){\r\n\t    balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n\t    balances[_to] = safeAdd(balances[_to], _value);\r\n\t    Transfer(msg.sender, _to, _value);\r\n\t    return true;\r\n\t}\r\n\r\n\tmapping (address => mapping (address => uint256)) allowed;\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) returns (bool success){\r\n\t    var _allowance = allowed[_from][msg.sender];\r\n\t    \r\n\t    balances[_to] = safeAdd(balances[_to], _value);\r\n\t    balances[_from] = safeSub(balances[_from], _value);\r\n\t    allowed[_from][msg.sender] = safeSub(_allowance, _value);\r\n\t    Transfer(_from, _to, _value);\r\n\t    return true;\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _value) returns (bool success) {\r\n\t    allowed[msg.sender][_spender] = _value;\r\n\t    Approval(msg.sender, _spender, _value);\r\n\t    return true;\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n\t    return allowed[_owner][_spender];\r\n\t}\r\n\t\r\n\tfunction burn(uint256 _value) public {\r\n    require(_value <= balances[msg.sender]);\r\n    address burner = msg.sender;\r\n    balances[burner] = safeSub(balances[burner],_value);\r\n    totalSupply=safeSub(totalSupply,_value);\r\n    Burn(burner, _value);\r\n  }\r\n\t\r\n\tfunction recycle (uint256 _value) returns (bool success){\r\n\t    balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n\t    balances[address(this)] = safeAdd(balances[address(this)], _value);\r\n\t    Transfer(msg.sender, address(this), _value);\r\n\t    return true;\r\n\t}\r\n\t\r\n\tfunction harvest () returns (bool success) {\r\n\t    require(msg.sender == owner);\r\n\t  \r\n\t  uint256[] times;\r\n\t  times[0]=1516746600; //10:30 1516747200\r\n\t  times[1]=1516748400; //11:00\r\n\t  \r\n\t  bool itsTime=false;\r\n\t  //uint256 starttime = 1518566400; //2018\r\n\t  \r\n\t  for (uint i=0; i<times.length;i++){\r\n\t      if ( now >= times[i] && now <=(times[i]+600) ) \r\n\t      {itsTime=true; break;}\r\n\t  }\r\n\t  \r\n\t \r\n\t require(itsTime);\r\n\t \r\n\t uint256 Bal=balances[address(this)];\r\n\t balances[owner] = safeAdd(Bal, balances[owner]);\r\n\t balances[address(this)]=0;\r\n\t Transfer(address(this),owner,Bal);\r\n\t return true;\r\n\t  \r\n\t}\r\n\t\r\n\tstring \tpublic name = \"GSD\";\r\n\tstring \tpublic symbol = \"GSD\";\r\n\tuint \tpublic decimals = 18;\r\n\tuint \tpublic INITIAL_SUPPLY = 20000000000;\r\n\r\n\tfunction GSD() {\r\n\t  totalSupply = INITIAL_SUPPLY;\r\n\t  balances[msg.sender] = INITIAL_SUPPLY;  // Give all of the initial tokens to the contract deployer.\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"harvest\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"recycle\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"GSD","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://afce3fe9c0e78808b75974fbf13a5e0bcdf26e0ce2357d4389273aae426e538e"}]}