{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) public;\r\n}\r\n\r\ncontract Crowdsale {\r\n    address public payoutAddr;\r\n\r\n    uint public deadline;\r\n    uint public amountRaised;\r\n    uint public price = 300;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n    bool crowdsaleClosed = false;\r\n\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    function Crowdsale (\r\n        address ifSuccessfulSendTo,\r\n        address addressOfTokenUsedAsReward,\r\n        uint durationInMinutes\r\n    ) public {\r\n        payoutAddr = ifSuccessfulSendTo;\r\n        tokenReward = token(addressOfTokenUsedAsReward);\r\n        deadline = now + durationInMinutes * 1 minutes;\r\n    }\r\n    \r\n    function () public payable {\r\n        require(!crowdsaleClosed);\r\n        balanceOf[msg.sender] += msg.value;\r\n        amountRaised += msg.value;\r\n        tokenReward.transfer(msg.sender, msg.value * price);\r\n        FundTransfer(msg.sender, msg.value, true);\r\n    }\r\n\r\n    modifier afterDeadline() { if (now >= deadline) _; }\r\n\r\n    function closeSale() public afterDeadline {\r\n        crowdsaleClosed = true;\r\n    }\r\n\r\n    function safeWithdrawal() public afterDeadline {\r\n         if (payoutAddr == msg.sender) {\r\n            if (payoutAddr.send(amountRaised)) {\r\n                FundTransfer(payoutAddr, amountRaised, false);\r\n            } \r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"payoutAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ifSuccessfulSendTo\",\"type\":\"address\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"},{\"name\":\"durationInMinutes\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000005c62c1c4d76986360d75ff2daa0098e6b776a3c60000000000000000000000009b6e2ef9666051804c1e6796962c5f17fda15463000000000000000000000000000000000000000000000000000000000000b8ec","Library":"","SwarmSource":"bzzr://8a69aa6d4f35d9d29cb52a6eac6e4aeba9ceaeab8a862efd07a25850ae81b7df"}]}