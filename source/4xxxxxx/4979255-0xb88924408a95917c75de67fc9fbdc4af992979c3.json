{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n\r\ncontract ERC721 {\r\n    \r\n    function totalSupply() public view returns (uint256 total);\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function ownerOf(uint256 _tokenId) external view returns (address owner, uint256 tokenId);\r\n    function approve(address _to, uint256 _tokenId) external;\r\n    function transfer(address _to, uint256 _tokenId) external payable;\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) external payable;\r\n\r\n\r\n    event Transfer(address from, address to, uint256 tokenId);\r\n    event Approval(address owner, address approved, uint256 tokenId);\r\n    \r\n    \r\n    \r\n}\r\n\r\n\r\ncontract HorseControl  {\r\n\r\n    address public ceoAddress=0xC229F1e3D3a798725e09dbC6b31b20c07b95543B;\r\n    address public ctoAddress=0x01569f2D20499ad013daE86B325EE30cB582c3Ba;\r\n \r\n\r\n    modifier onCEO() {\r\n        require(msg.sender == ceoAddress);\r\n        _;\r\n    }\r\n\r\n    modifier onCTO() {\r\n        require(msg.sender == ctoAddress);\r\n        _;\r\n    }\r\n\r\n    modifier onlyC() {\r\n        require(\r\n            msg.sender == ceoAddress ||\r\n            msg.sender == ctoAddress\r\n        );\r\n        _;\r\n    }\r\n\r\n \r\n}\r\n\r\n\r\ncontract GeneScienceInterface is HorseControl{\r\n    \r\n        mapping (uint256 => uint256) public dna1; \r\n        mapping (uint256 => uint256) public dna2; \r\n        mapping (uint256 => uint256) public dna3; \r\n        mapping (uint256 => uint256) public dna4; \r\n        mapping (uint256 => uint256) public dna5; \r\n        mapping (uint256 => uint256) public dna6; \r\n\r\n    \r\n    function mixGenes(uint256 childId, uint256 _mareId, uint16 mumcool, uint256 _stallionId, uint16 dadcool) internal {\r\n     \r\n\r\n            uint16 cooldownI = (mumcool+dadcool)/2;     \r\n            \r\n   uint256   childG1;\r\n        uint256   childG2;\r\n        uint256   childG3;\r\n        uint256   childG4;\r\n        uint256   childG5;\r\n        uint256   childG6;\r\n\r\n               if(cooldownI<=1 && cooldownI>=0){\r\n                   \r\n                   \r\n           childG1= dna1[_stallionId];\r\n           childG2= dna2[_stallionId];\r\n           childG3= dna3[_mareId];\r\n           childG4= dna4[_mareId];\r\n           childG5= dna5[_mareId];\r\n           childG6= dna6[_stallionId];\r\n\r\n          \r\n                  \r\n                  \r\n              }else if(cooldownI<=2 && cooldownI>1){\r\n            childG1= dna1[_stallionId];\r\n           childG2= dna2[_mareId];\r\n           childG3= dna3[_stallionId];\r\n           childG4= dna4[_mareId];\r\n           childG5= dna5[_mareId];\r\n           childG6= dna6[_stallionId];\r\n           \r\n                  \r\n              }else if(cooldownI<=3 && cooldownI>2){\r\n                  \r\n           \r\n         childG1= dna1[_mareId];\r\n           childG2= dna2[_stallionId];\r\n           childG3= dna3[_mareId];\r\n           childG4= dna4[_stallionId];\r\n           childG5= dna5[_stallionId];\r\n           childG6= dna6[_mareId];\r\n        \r\n              }else if(cooldownI<=4 && cooldownI>3){\r\n                  \r\n           childG1= dna1[_mareId];\r\n           childG2= dna2[_mareId];\r\n           childG3= dna3[_stallionId];\r\n           childG4= dna4[_stallionId];\r\n           childG5= dna5[_stallionId];\r\n           childG6= dna6[_mareId];\r\n        \r\n              }\r\n\r\n        dna1[childId] = childG1;\r\n        dna2[childId] = childG2;\r\n        dna3[childId] = childG3;\r\n        dna4[childId] = childG4;\r\n        dna5[childId] = childG5;\r\n        dna6[childId] = childG6;\r\n\r\n    }\r\n   \r\n}\r\n\r\n\r\n\r\n\r\ncontract HoresBasis is  GeneScienceInterface {\r\n   \r\n    event Birth(address owner, uint256 HorseId, uint256 mareId, uint256 stallionId);\r\n   \r\n    event Transfer(address from, address to, uint256 tokenId);\r\n\r\n    struct Horse {\r\n        uint64 birthTime;\r\n        uint64 unproductiveEndBlock;\r\n        uint32 mareId;\r\n        uint32 stallionId;\r\n        uint32 stallionWithId;\r\n        uint16 unproductiveIndex;\r\n        uint16 generation;\r\n    }\r\n\r\n    uint32[5] public sterile = [\r\n        uint32(15 minutes),\r\n        uint32(120 minutes),\r\n        uint32(480 minutes),\r\n        uint32(1800 minutes),\r\n        uint32(3000 minutes)\r\n    ];\r\n\r\n\r\n    uint256 public secondsPerBlock = 15;\r\n\r\n    Horse[] horses;\r\n\r\n    mapping (uint256 => address) public horseOwnerIndex;\r\n    \r\n    mapping (uint256 => uint256) public horseIndexPrice;\r\n    \r\n    mapping (uint256 => bool)  horseIndexForSale;\r\n\r\n    mapping (address => uint256) tokenOwnershipCount;\r\n\r\n\r\n   uint256 public saleFee = 20;\r\n\r\n   uint256 public BirthFee = 4 finney;\r\n   \r\n   \r\n \r\n    function _transfer(address _from, address _to, uint256 _tokenId) internal {\r\n        tokenOwnershipCount[_to]++;\r\n        horseOwnerIndex[_tokenId] = _to;\r\n        \r\n        if (_from != address(0)) {\r\n            tokenOwnershipCount[_from]--;\r\n         \r\n        }\r\n       Transfer(_from, _to, _tokenId);\r\n       \r\n    }\r\n    \r\n    \r\n    function _sell(address _from,  uint256 _tokenId, uint256 value) internal {\r\n     \r\n     if(horseIndexForSale[_tokenId]==true){\r\n         \r\n              uint256 price = horseIndexPrice[_tokenId];\r\n            \r\n            require(price<=value);\r\n            \r\n         uint256 Fee = price / saleFee;\r\n            \r\n          uint256  oPrice= price - Fee;\r\n            \r\n            address _to = msg.sender;\r\n            \r\n            tokenOwnershipCount[_to]++;\r\n            horseOwnerIndex[_tokenId] = _to;\r\n            \r\n            horseIndexForSale[_tokenId]=false;\r\n            \r\n            \r\n            if (_from != address(0)) {\r\n                tokenOwnershipCount[_from]--;\r\n               \r\n            }\r\n                 \r\n           Transfer(_from, _to, _tokenId);\r\n             \r\n             _from.transfer(oPrice);\r\n             \r\n             ceoAddress.transfer(Fee);\r\n             \r\n            uint256 bidExcess = value - oPrice - Fee;\r\n            _to.transfer(bidExcess);\r\n            \r\n            \r\n     }else{\r\n          _to.transfer(value);\r\n     }\r\n      \r\n    }\r\n    \r\n    \r\n\t\r\n    function _newHorse(\r\n        uint256 _mareId,\r\n        uint256 _stallionId,\r\n        uint256 _generation,\r\n        uint256 _genes1,\r\n        uint256 _genes2,\r\n        uint256 _genes3,\r\n        uint256 _genes4,\r\n        uint256 _genes5,\r\n        uint256 _genes6,\r\n        address _owner\r\n    )\r\n        internal\r\n        returns (uint)\r\n    {\r\n   \r\n        Horse memory _horse = Horse({\r\n           birthTime: uint64(now),\r\n            unproductiveEndBlock: 0,\r\n            mareId: uint32(_mareId),\r\n            stallionId: uint32(_stallionId),\r\n            stallionWithId: 0,\r\n            unproductiveIndex: 0,\r\n            generation: uint16(_generation)\r\n            \r\n        });\r\n       \r\n        \r\n       uint256 newHorseId;\r\n\t   \r\n     newHorseId = horses.push(_horse)-1;\r\n     \r\n     makeDna(_mareId, _stallionId, newHorseId, _genes1, _genes2, _genes3, _genes4, _genes5, _genes6);\r\n        require(newHorseId == uint256(uint32(newHorseId)));\r\n\r\n       Birth(\r\n            _owner,\r\n            newHorseId,\r\n            uint256(_horse.mareId),\r\n            uint256(_horse.stallionId)\r\n        );\r\n\r\n        _transfer(0, _owner, newHorseId);\r\n\r\n        return newHorseId;  \r\n    }\r\n\r\n\r\nfunction makeDna( uint256 _mareId,\r\n        uint256 _stallionId,\r\n        uint256 _newId,\r\n        uint256 _genes1,\r\n        uint256 _genes2,\r\n        uint256 _genes3,\r\n        uint256 _genes4,\r\n        uint256 _genes5,\r\n        uint256 _genes6)internal{\r\n    \r\n      if(_mareId!=0 && _stallionId!=0){\r\n               \r\n          Horse storage stallion = horses[_stallionId];\r\n     Horse storage mare = horses[_mareId];\r\n     \r\n    GeneScienceInterface.mixGenes(_newId, _mareId,mare.unproductiveIndex, _stallionId, stallion.unproductiveIndex);\r\n         \r\n     }else{\r\n         \r\n        dna1[_newId] = _genes1;\r\n        dna2[_newId] = _genes2;\r\n        dna3[_newId] = _genes3;\r\n        dna4[_newId] = _genes4;\r\n        dna5[_newId] = _genes5;\r\n        dna6[_newId] = _genes6;\r\n     }\r\n}\r\n\r\n\r\n\r\n    function setSecondsPerBlock(uint256 secs) external  onlyC {\r\n    require(secs < sterile[0]);\r\n       secondsPerBlock = secs;\r\n      \r\n    }\r\n   \r\n}\r\n\r\n\r\ncontract HorseOwnership is HoresBasis, ERC721{\r\n\r\n  string public constant  name = \"CryptoHorse\";\r\n    string public constant symbol = \"CHC\";\r\n     uint8 public constant decimals = 0; \r\n\r\n    function horseForSale(uint256 _tokenId, uint256 price) external {\r\n  \r\n     address  ownerof =  horseOwnerIndex[_tokenId];\r\n        require(ownerof == msg.sender);\r\n        horseIndexPrice[_tokenId] = price;\r\n        horseIndexForSale[_tokenId]= true;\r\n\t\t}\r\n\r\n\r\n function horseNotForSale(uint256 _tokenId) external {\r\n         address  ownerof =  horseOwnerIndex[_tokenId];\r\n            require(ownerof == msg.sender);\r\n        horseIndexForSale[_tokenId]= false;\r\n\r\n    }\r\n\r\n\r\n    function _owns(address _applicant, uint256 _tokenId) internal view returns (bool) {\r\n        return horseOwnerIndex[_tokenId] == _applicant;\r\n    }\r\n\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 count) {\r\n        return tokenOwnershipCount[_owner];\r\n    }\r\n\r\n    function transfer(\r\n        address _to,\r\n        uint256 _tokenId\r\n    )\r\n        external\r\n        payable\r\n    {\r\n        require(_to != address(0));\r\n\t\t\r\n        require(_to != address(this));\r\n \r\n        require(_owns(msg.sender, _tokenId));\r\n       _transfer(msg.sender, _to, _tokenId);\r\n    }\r\n\r\n    function approve(\r\n        address _to,\r\n        uint256 _tokenId\r\n    )\r\n        external \r\n    {\r\n        require(_owns(msg.sender, _tokenId));\r\n\r\n        Approval(msg.sender, _to, _tokenId);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _tokenId ) external payable {\r\n        \r\n        if(_from != msg.sender){\r\n              require(_to == msg.sender);\r\n                 \r\n                require(_from==horseOwnerIndex[_tokenId]);\r\n        \r\n               _sell(_from,  _tokenId, msg.value);\r\n            \r\n        }\r\n \r\n    }\r\n\r\n    function totalSupply() public view returns (uint) {\r\n        return horses.length;\r\n    }\r\n\r\n    function ownerOf(uint256 _tokenId)  external view returns (address owner, uint256 tokenId)  {\r\n        owner = horseOwnerIndex[_tokenId];\r\n        tokenId=_tokenId;\r\n       \r\n       return;\r\n       \r\n    }\r\n\r\n       function horseFS(uint256 _tokenId) external view  returns (bool buyable, uint256 tokenId) {\r\n        buyable = horseIndexForSale[_tokenId];\r\n        tokenId=_tokenId;\r\n       return;\r\n       \r\n    }\r\n\t\r\n\tfunction horsePr(uint256 _tokenId) external view  returns (uint256 price, uint256 tokenId) {\r\n        price = horseIndexPrice[_tokenId];\r\n        tokenId=_tokenId;\r\n       return;\r\n       \r\n    }\r\n    \r\n}\r\n\r\ncontract HorseStud is HorseOwnership {\r\n  \r\n    event Pregnant(address owner, uint256 mareId, uint256 stallionId, uint256 unproductiveEndBlock);\r\n\r\n    uint256 public pregnantHorses;\r\n\r\n\r\n    function _isStallionPermitted(uint256 _stallionId, uint256 _mareId) internal view returns (bool) {\r\n        address mareOwner = horseOwnerIndex[_mareId];\r\n        address stallionOwner = horseOwnerIndex[_stallionId];\r\n        return (mareOwner == stallionOwner);\r\n    }\r\n\r\n function setBirthFee(uint256 val) external onCTO {\r\n        BirthFee = val;\r\n    }\r\n    \r\n function setSaleFee(uint256 val) external onCTO {\r\n        saleFee = val;\r\n    }\r\n\r\n \r\n    function isReadyToBear(uint256 _horseId) public view returns (bool) {\r\n        require(_horseId > 0);\r\n        Horse storage knight = horses[_horseId];\r\n        require(knight.unproductiveIndex<4);  \r\n    \r\n        bool ready = (knight.stallionWithId == 0) && (knight.unproductiveEndBlock <= uint64(block.number));\r\n       return ready;\r\n    }\r\n\r\n    function isPregnant(uint256 _horseId) public view returns (bool) {\r\n        require(_horseId > 0);\r\n        return horses[_horseId].stallionWithId != 0;\r\n    }\r\n\r\n\t\r\n    function _canScrewEachOther(uint256 _mareId, uint256 _stallionId) private view returns(bool) {\r\n\t\t\r\n        if (_mareId == _stallionId) {\r\n            return false;\r\n        }\r\n        \r\n     uint256   matronSex=dna4[_mareId];\r\n     uint256   sireSex=dna4[_stallionId];\r\n\r\n        if(matronSex!=1){\r\n            return false;\r\n        }\r\n        \r\n         if(sireSex!=2){\r\n            return false;\r\n        }\r\n        \r\n      if(matronSex==sireSex){\r\n          return false;\r\n      }  \r\n        \r\n        return true;\r\n    }\r\n\r\n    function canBearWith(uint256 _mareId, uint256 _stallionId)\r\n        external\r\n        view\r\n        returns(bool)\r\n    {\r\n        require(_mareId > 0);\r\n        require(_stallionId > 0);\r\n        return _canScrewEachOther( _mareId,  _stallionId) &&\r\n            _isStallionPermitted(_stallionId, _mareId);\r\n    }\r\n\r\n    \r\n    function _bearWith(uint256 _mareId, uint256 _stallionId) internal {\r\n        Horse storage stallion = horses[_stallionId];\r\n        Horse storage mare = horses[_mareId];\r\n\r\n        mare.stallionWithId = uint32(_stallionId);\r\n       \r\n         stallion.unproductiveEndBlock = uint64((sterile[stallion.unproductiveIndex]/secondsPerBlock) + block.number);\r\n mare.unproductiveEndBlock = uint64((sterile[mare.unproductiveIndex]/secondsPerBlock) + block.number);\r\n        \r\n        if (stallion.unproductiveIndex < 5) {\r\n            stallion.unproductiveIndex += 1;\r\n        }\r\n\t\t if (mare.unproductiveIndex < 5) {\r\n\t\t\t\t\tmare.unproductiveIndex += 1;\r\n\t\t}\r\n\t\t \r\n        pregnantHorses++;\r\n\r\n        Pregnant(horseOwnerIndex[_mareId], _mareId, _stallionId, mare.unproductiveEndBlock);\r\n   \r\n   bearChild(_mareId);\r\n\r\n    }\r\n\r\n\t\r\n\t\r\n    function stallionWith(uint256 _mareId, uint256 _stallionId) external payable  {\r\n\t\trequire(_owns(msg.sender, _mareId));\r\n        require(_owns(msg.sender, _stallionId));\r\n\r\n        Horse storage mare = horses[_mareId];\r\n\r\n        require(isReadyToBear(_mareId));\r\n        require(isReadyToBear(_stallionId));\r\n\r\n        bool (mare.stallionWithId == 0) && (mare.unproductiveEndBlock <= uint64(block.number));\r\n\r\n        Horse storage stallion = horses[_stallionId];\r\n\r\n        bool (stallion.stallionWithId == 0) && (stallion.unproductiveEndBlock <= uint64(block.number));\r\n\r\n        require(_canScrewEachOther(\r\n            _mareId,\r\n            _stallionId\r\n        ));\r\n        \r\n        if(BirthFee>= msg.value){\r\n           \r\n\t\t   ceoAddress.transfer(BirthFee);\r\n             uint256   rest=msg.value-BirthFee;\r\n                msg.sender.transfer(rest);   \r\n     _bearWith(uint32(_mareId), uint32(_stallionId));\r\n \r\n        \r\n        }else{\r\n            \r\n               msg.sender.transfer(msg.value);\r\n  \r\n        }\r\n        \r\n    }\r\n\r\n\t\r\n\t\r\n    function bearChild(uint256 _mareId) internal  {\r\n        \r\n            Horse storage mare = horses[_mareId];\r\n          \r\n               require(mare.birthTime != 0);\r\n        \r\n                bool (mare.stallionWithId != 0) && (mare.unproductiveEndBlock <= uint64(block.number)); \r\n            \r\n              uint256 stallionId = mare.stallionWithId;\r\n                \r\n               Horse storage stallion = horses[stallionId];\r\n        \r\n                uint16 parentGen = mare.generation;\r\n                if (stallion.generation > mare.generation) {\r\n                    parentGen = stallion.generation;\r\n                }\r\n        \r\n                address owner = horseOwnerIndex[_mareId];\r\n                \r\n             _newHorse(_mareId, stallionId, parentGen + 1, 0,0,0,0,0,0, owner);\r\n           \r\n              mare.stallionWithId=0;\r\n                \r\n                pregnantHorses--;\r\n                \r\n    }\r\n    \r\n    \r\n    \r\n}\r\n\r\n\r\n\r\n\r\ncontract HorseMinting is HorseStud {\r\n\r\n    uint256 public  GEN_0_LIMIT = 20000;\r\n\r\n\r\n    uint256 public gen0Count;\r\n\r\n    \r\n\r\n    function createGen0Horse(uint256 _genes1,uint256 _genes2,uint256 _genes3,uint256 _genes4,uint256 _genes5,uint256 _genes6, address _owner) external onCTO {\r\n        address horseOwner = _owner;\r\n       if (horseOwner == address(0)) {\r\n             horseOwner = ctoAddress;\r\n        }\r\n    require(gen0Count < GEN_0_LIMIT);\r\n\r\n            \r\n              _newHorse(0, 0, 0, _genes1, _genes2, _genes3, _genes4, _genes5, _genes6, horseOwner);\r\n            \r\n        gen0Count++;\r\n        \r\n    }\r\n\r\n   \r\n}\r\n\r\n\r\ncontract GetTheHorse is HorseMinting {\r\n\r\n\r\n    function getHorse(uint256 _id)\r\n        external\r\n        view\r\n        returns (\r\n        uint256 price,\r\n        uint256 id,\r\n        bool forSale,\r\n        bool isGestating,\r\n        bool isReady,\r\n        uint256 unproductiveIndex,\r\n        uint256 nextActionAt,\r\n        uint256 stallionWithId,\r\n        uint256 birthTime,\r\n        uint256 mareId,\r\n        uint256 stallionId,\r\n        uint256 generation\r\n\t\t\r\n    ) {\r\n\t\tprice = horseIndexPrice[_id];\r\n        id = uint256(_id);\r\n\t\tforSale = horseIndexForSale[_id];\r\n        Horse storage knight = horses[_id];\r\n        isGestating = (knight.stallionWithId != 0);\r\n        isReady = (knight.unproductiveEndBlock <= block.number);\r\n        unproductiveIndex = uint256(knight.unproductiveIndex);\r\n        nextActionAt = uint256(knight.unproductiveEndBlock);\r\n        stallionWithId = uint256(knight.stallionWithId);\r\n        birthTime = uint256(knight.birthTime);\r\n        mareId = uint256(knight.mareId);\r\n        stallionId = uint256(knight.stallionId);\r\n        generation = uint256(knight.generation);\r\n\r\n    }\r\n\r\n  \r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_horseId\",\"type\":\"uint256\"}],\"name\":\"isPregnant\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ctoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"horseForSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dna5\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getHorse\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"forSale\",\"type\":\"bool\"},{\"name\":\"isGestating\",\"type\":\"bool\"},{\"name\":\"isReady\",\"type\":\"bool\"},{\"name\":\"unproductiveIndex\",\"type\":\"uint256\"},{\"name\":\"nextActionAt\",\"type\":\"uint256\"},{\"name\":\"stallionWithId\",\"type\":\"uint256\"},{\"name\":\"birthTime\",\"type\":\"uint256\"},{\"name\":\"mareId\",\"type\":\"uint256\"},{\"name\":\"stallionId\",\"type\":\"uint256\"},{\"name\":\"generation\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dna3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"secs\",\"type\":\"uint256\"}],\"name\":\"setSecondsPerBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dna6\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_horseId\",\"type\":\"uint256\"}],\"name\":\"isReadyToBear\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"horseOwnerIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondsPerBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dna2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"horsePr\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pregnantHorses\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"horseNotForSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mareId\",\"type\":\"uint256\"},{\"name\":\"_stallionId\",\"type\":\"uint256\"}],\"name\":\"stallionWith\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dna4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"horseIndexPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"setBirthFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BirthFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"horseFS\",\"outputs\":[{\"name\":\"buyable\",\"type\":\"bool\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gen0Count\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_genes1\",\"type\":\"uint256\"},{\"name\":\"_genes2\",\"type\":\"uint256\"},{\"name\":\"_genes3\",\"type\":\"uint256\"},{\"name\":\"_genes4\",\"type\":\"uint256\"},{\"name\":\"_genes5\",\"type\":\"uint256\"},{\"name\":\"_genes6\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createGen0Horse\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"setSaleFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GEN_0_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sterile\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dna1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_mareId\",\"type\":\"uint256\"},{\"name\":\"_stallionId\",\"type\":\"uint256\"}],\"name\":\"canBearWith\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"mareId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"stallionId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"unproductiveEndBlock\",\"type\":\"uint256\"}],\"name\":\"Pregnant\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"HorseId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"mareId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"stallionId\",\"type\":\"uint256\"}],\"name\":\"Birth\",\"type\":\"event\"}]","ContractName":"GetTheHorse","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://edcf2c20eb8d8aaadf8403007f42e86d74d58599fcb45e12ff2ffb76c4f3818a"}]}