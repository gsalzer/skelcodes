{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract LockYourLove {\r\n\r\n    struct  LoveItem {\r\n        address lovers_address;\r\n        uint block_number;\r\n        uint block_timestamp;\r\n        string love_message;\r\n        string love_url;\r\n    }\r\n  \r\n    address public owner;\r\n    \r\n    mapping (bytes32 => LoveItem) private mapLoveItems;\r\n\r\n    uint public price;\r\n    uint public numLoveItems;\r\n    //bytes32 bb;\r\n    event EvLoveItemAdded(bytes32 indexed _loveHash, \r\n                            address indexed _loversAddress, \r\n                            uint _blockNumber, \r\n                            uint _blockTimestamp,\r\n                            string _loveMessage,\r\n                            string _loveUrl);\r\n\tevent EvNewPrice(uint blocknumber, uint newprice);\r\n\t                                \r\n    modifier onlyOwner()\r\n    {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    // This is the constructor. It's payable so you can initialize the contract with funds during deploy\r\n    function LockYourLove () { // Constructor\r\n        owner = msg.sender;\r\n        price = 10000000000000000; // 0.01 ethers -> https://etherconverter.online\r\n        numLoveItems = 0;\r\n    }\r\n\r\n    /*function stringToBytes32(string memory str) returns (bytes32 result) {\r\n        assembly {\r\n            result := mload(add(str, 32))\r\n        }\r\n    }\r\n\r\n    function setBB (string str) { \r\n       bb = stringToBytes32(str);\r\n    }\r\n\r\n    function getBB () constant returns (bytes32 result) {\r\n       result = bb;\r\n    }*/\r\n    \r\n    function() payable { \r\n        msg.sender.transfer(msg.value);\r\n    }\r\n\r\n    function donateToLovers(bytes32 loveHash) payable returns (bool) {\r\n        require(msg.value > 0);\r\n        require(mapLoveItems[loveHash].lovers_address > 0);\r\n        mapLoveItems[loveHash].lovers_address.transfer(msg.value);\r\n    }\r\n\r\n    function setPrice (uint newprice) onlyOwner { \r\n        price = newprice;\r\n\t\tEvNewPrice(block.number, price);\r\n    }\r\n    \r\n\tfunction getPrice() constant returns  (uint){\r\n\t\treturn price;\r\n\t}\r\n\r\n\tfunction getNumLoveItems() constant returns  (uint){\r\n\t\treturn numLoveItems;\r\n\t}\r\n\r\n    // datacoord = userId_assurId\r\n    function addLovers(bytes32 love_hash, string lovemsg, string loveurl) payable {\r\n        \r\n        require(bytes(lovemsg).length < 250);\r\n\t\trequire(bytes(loveurl).length < 100);\r\n\t\trequire(msg.value >= price);\r\n        \r\n        mapLoveItems[love_hash] = LoveItem(msg.sender, block.number, block.timestamp, lovemsg, loveurl);\r\n        numLoveItems++;\r\n            \r\n        owner.transfer(price); \r\n        \r\n        EvLoveItemAdded(love_hash, msg.sender, block.number, block.timestamp, lovemsg, loveurl);\r\n    }\r\n    \r\n    \r\n    function getLovers(bytes32 love_hash) constant returns  (address, uint, uint, string, string){\r\n        require(mapLoveItems[love_hash].block_number > 0);\r\n        \r\n        return (mapLoveItems[love_hash].lovers_address, mapLoveItems[love_hash].block_number, mapLoveItems[love_hash].block_timestamp,  \r\n                mapLoveItems[love_hash].love_message, mapLoveItems[love_hash].love_url);\r\n    }\r\n    \r\n    \r\n    function destroy() onlyOwner { // so funds not locked in contract forever\r\n        selfdestruct(owner); // send funds to organizer\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"loveHash\",\"type\":\"bytes32\"}],\"name\":\"donateToLovers\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"love_hash\",\"type\":\"bytes32\"},{\"name\":\"lovemsg\",\"type\":\"string\"},{\"name\":\"loveurl\",\"type\":\"string\"}],\"name\":\"addLovers\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"love_hash\",\"type\":\"bytes32\"}],\"name\":\"getLovers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newprice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numLoveItems\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumLoveItems\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_loveHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"_loversAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_blockTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_loveMessage\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_loveUrl\",\"type\":\"string\"}],\"name\":\"EvLoveItemAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"blocknumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newprice\",\"type\":\"uint256\"}],\"name\":\"EvNewPrice\",\"type\":\"event\"}]","ContractName":"LockYourLove","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"0","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f11dededeff2a6c408e8e56a1c78f70c1347056d67080b2751b9d1ddf23251f7"}]}