{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.15;\r\n\r\ncontract ERC20 {\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n}\r\n\r\ncontract TokensaleBlacklist {\r\n    function isRestricted(address _addr) constant returns(bool);\r\n}\r\n\r\ncontract TraderStarsSale {\r\n    uint public constant SALES_START = 1510754400; // 15.11.2017 14:00:00 UTC\r\n    uint public constant SALES_DEADLINE = 1513864800; // 21.12.2017 14:00:00 UTC\r\n    address public constant MASTER_WALLET = 0x909B194c56eB3ecf10F1f9FaF5fc8E35B2de1F2d;\r\n    address public constant TOKEN = 0xfCA1a79D59Bcf870fAA685BE0d0cdA394F52Ceb5;\r\n    address public constant TOKENSALE_BLACKLIST = 0x945B2c9569A8ebd883d05Ab20f09AD6c241cB156;\r\n    uint public constant TOKEN_PRICE = 0.00000003 ether;\r\n    uint public constant PRE_ICO_MAX_CAP = 100000000000;\r\n    uint public constant ICO_MAX_CAP = 2100000000000;\r\n    uint public preIcoTotalSupply;\r\n    uint public icoTotalSupply;\r\n\r\n    event Contributed(address receiver, uint contribution, uint reward);\r\n\r\n    function contribute() payable returns(bool) {\r\n        require(msg.value >= TOKEN_PRICE);\r\n        require(now < SALES_DEADLINE);\r\n        require(now >= SALES_START);\r\n        // Blacklist of exchange pools, and other not private wallets.\r\n        require(!TokensaleBlacklist(TOKENSALE_BLACKLIST).isRestricted(msg.sender));\r\n\r\n        uint tokensAmount = _calculateBonusAndUpdateTotal(msg.value / TOKEN_PRICE);\r\n        require(tokensAmount > 0);\r\n        require(preIcoTotalSupply < PRE_ICO_MAX_CAP);\r\n        require(preIcoTotalSupply + icoTotalSupply < ICO_MAX_CAP);\r\n\r\n        require(ERC20(TOKEN).transferFrom(MASTER_WALLET, msg.sender, tokensAmount));\r\n        // If there is some division reminder from msg.value % TOKEN_PRICE, we just\r\n        // collect it too.\r\n        MASTER_WALLET.transfer(msg.value);\r\n\r\n        Contributed(msg.sender, msg.value, tokensAmount);\r\n        return true;\r\n    }\r\n\r\n    function _calculateBonusAndUpdateTotal(uint _value) internal returns(uint) {\r\n        uint currentTime = now;\r\n        uint amountWithBonus;\r\n\r\n        // between 5.12.2017 14:00:00 UTC and 21.12.2017 14:00:00 UTC no bonus\r\n        if (currentTime > 1512482400 && currentTime <= SALES_DEADLINE) {\r\n            icoTotalSupply += _value;\r\n            return _value;\r\n        // between 28.11.2017 14:00:00 UTC and 5.12.2017 14:00:00 UTC +2.5%\r\n        } else if (currentTime > 1511877600 && currentTime <= 1512482400) {\r\n            amountWithBonus = _value + _value * 25 / 1000;\r\n            icoTotalSupply += amountWithBonus;\r\n            return amountWithBonus;\r\n        // between 24.11.2017 14:00:00 UTC and 28.11.2017 14:00:00 UTC +5%\r\n        } else if (currentTime > 1511532000 && currentTime <= 1511877600) {\r\n            amountWithBonus = _value + _value * 50 / 1000;\r\n            icoTotalSupply += amountWithBonus;\r\n            return amountWithBonus;\r\n        // between 22.11.2017 14:00:00 UTC and 24.11.2017 14:00:00 UTC +10%\r\n        } else if (currentTime > 1511359200 && currentTime <= 1511532000) {\r\n            amountWithBonus = _value + _value * 100 / 1000;\r\n            icoTotalSupply += amountWithBonus;\r\n            return amountWithBonus;\r\n        // between 21.11.2017 14:00:00 UTC and 22.11.2017 14:00:00 UTC +25%\r\n        } else if (currentTime > 1511272800 && currentTime <= 1511359200) {\r\n            amountWithBonus = _value + _value * 250 / 1000;\r\n            icoTotalSupply += amountWithBonus;\r\n            return amountWithBonus;\r\n        // between 15.11.2017 14:00:00 UTC and 17.11.2017 14:00:00 UTC +30%\r\n        } else if (currentTime >= SALES_START && currentTime <= 1510927200) {\r\n            amountWithBonus = _value + _value * 300 / 1000;\r\n            preIcoTotalSupply += amountWithBonus;\r\n            return amountWithBonus;\r\n        }\r\n        \r\n        return 0;\r\n    }\r\n\r\n    function () payable {\r\n        contribute();\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"SALES_DEADLINE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MASTER_WALLET\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRE_ICO_MAX_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICO_MAX_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_PRICE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contribute\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKENSALE_BLACKLIST\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preIcoTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SALES_START\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"contribution\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Contributed\",\"type\":\"event\"}]","ContractName":"TraderStarsSale","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"10000","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3fee49f7b824227476414fe482ec999fbe4880077b472fd02cdc92894a62b708"}]}