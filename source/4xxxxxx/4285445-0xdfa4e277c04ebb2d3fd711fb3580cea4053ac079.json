{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;        \r\n   \r\n  contract CentraSale { \r\n\r\n    using SafeMath for uint; \r\n\r\n    address public contract_address = 0x96a65609a7b84e8842732deb08f56c3e21ac6f8a; \r\n\r\n    address public owner;    \r\n    uint public constant min_value = 10**18*1/10;     \r\n\r\n    uint256 public constant token_price = 1481481481481481;  \r\n    uint256 public tokens_total;  \r\n   \r\n    // Functions with this modifier can only be executed by the owner\r\n    modifier onlyOwner() {\r\n        if (msg.sender != owner) {\r\n            throw;\r\n        }\r\n        _;\r\n    }      \r\n \r\n    // Constructor\r\n    function CentraSale() {\r\n        owner = msg.sender;                         \r\n    }\r\n      \r\n    //default function for crowdfunding\r\n    function() payable {    \r\n\r\n      if(!(msg.value >= min_value)) throw;                                 \r\n\r\n      tokens_total = msg.value*10**18/token_price;\r\n      if(!(tokens_total > 0)) throw;           \r\n\r\n      if(!contract_transfer(tokens_total)) throw;\r\n      owner.send(this.balance);\r\n    }\r\n\r\n    //Contract execute\r\n    function contract_transfer(uint _amount) private returns (bool) {      \r\n\r\n      if(!contract_address.call(bytes4(sha3(\"transfer(address,uint256)\")),msg.sender,_amount)) {    \r\n        return false;\r\n      }\r\n      return true;\r\n    }     \r\n\r\n    //Withdraw money from contract balance to owner\r\n    function withdraw() onlyOwner returns (bool result) {\r\n        owner.send(this.balance);\r\n        return true;\r\n    }    \r\n      \r\n }\r\n\r\n /**\r\n   * Math operations with safety checks\r\n   */\r\n  library SafeMath {\r\n    function mul(uint a, uint b) internal returns (uint) {\r\n      uint c = a * b;\r\n      assert(a == 0 || c / a == b);\r\n      return c;\r\n    }\r\n\r\n    function div(uint a, uint b) internal returns (uint) {\r\n      // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n      uint c = a / b;\r\n      // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n      return c;\r\n    }\r\n\r\n    function sub(uint a, uint b) internal returns (uint) {\r\n      assert(b <= a);\r\n      return a - b;\r\n    }\r\n\r\n    function add(uint a, uint b) internal returns (uint) {\r\n      uint c = a + b;\r\n      assert(c >= a);\r\n      return c;\r\n    }\r\n\r\n    function max64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n      return a >= b ? a : b;\r\n    }\r\n\r\n    function min64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n      return a < b ? a : b;\r\n    }\r\n\r\n    function max256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n      return a >= b ? a : b;\r\n    }\r\n\r\n    function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n      return a < b ? a : b;\r\n    }\r\n\r\n    function assert(bool assertion) internal {\r\n      if (!assertion) {\r\n        throw;\r\n      }\r\n    }\r\n  }","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contract_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"min_value\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokens_total\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"CentraSale","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e13f1e0cfdfdb2d2f425fdf4634a5d996b60e150dbb9db25f978ee9c26cc52c0"}]}