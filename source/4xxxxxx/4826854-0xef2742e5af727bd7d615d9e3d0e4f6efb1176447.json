{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    owner = newOwner;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n}\r\n\r\ncontract DnaMixer {\r\n    function mixDna(uint256 dna1, uint256 dna2, uint256 seed) public pure returns (uint256);\r\n}\r\n\r\n\r\ncontract CpData is Ownable {\r\n\r\n    struct Girl {\r\n        uint256 dna;\r\n        uint64 creationTime;\r\n        uint32 sourceGirl1;\r\n        uint32 sourceGirl2;\r\n        uint16 gen;\r\n        uint8 combinesLeft;\r\n        uint64 combineCooledDown;\r\n    }\r\n\r\n    struct Auction {\r\n        address seller;\r\n        uint128 startingPriceWei;\r\n        uint128 endingPriceWei;\r\n        uint64 duration;\r\n        uint64 creationTime;\r\n        bool isCombine;\r\n    }\r\n\r\n    event NewGirl(address owner, uint256 girlId, uint256 sourceGirl1, uint256 sourceGirl2, uint256 dna);\r\n    event Transfer(address from, address to, uint256 girlId);\r\n    event AuctionCreated(uint256 girlId, uint256 startingPriceWei, uint256 endingPriceWei, uint256 duration, bool isCombine);\r\n    event AuctionCompleted(uint256 girlId, uint256 priceWei, address winner);\r\n    event AuctionCancelled(uint256 girlId);\r\n\r\n    uint256 public constant OWNERS_AUCTION_CUT = 350;\r\n\r\n    uint256 public constant MAX_PROMO_GIRLS = 6000;\r\n    uint256 public promoCreatedCount;\r\n    \r\n    uint256 public constant MAX_GEN0_GIRLS = 30000;\r\n    uint256 public gen0CreatedCount;\r\n        \r\n    DnaMixer public dnaMixer;\r\n\r\n    Girl[] girls;\r\n\r\n    mapping (uint256 => address) public girlIdToOwner;\r\n    mapping (uint256 => Auction) public girlIdToAuction;\r\n    \r\n}\r\n\r\n\r\ncontract CpInternals is CpData {\r\n\r\n    function _transfer(address _from, address _to, uint256 _girlId) internal {\r\n        girlIdToOwner[_girlId] = _to;        \r\n        Transfer(_from, _to, _girlId);\r\n    }\r\n\r\n    function _createGirl(uint256 _sourceGirlId1, uint256 _sourceGirlId2, uint256 _gen, uint256 _dna, address _owner) internal returns (uint) {\r\n        require(_sourceGirlId1 < girls.length || _sourceGirlId1 == 0);\r\n        require(_sourceGirlId2 < girls.length || _sourceGirlId2 == 0);\r\n        require(_gen < 65535);\r\n\r\n        Girl memory _girl = Girl({\r\n            dna: _dna,\r\n            sourceGirl1: uint32(_sourceGirlId1),\r\n            sourceGirl2: uint32(_sourceGirlId2),\r\n            gen: uint16(_gen),\r\n            creationTime: uint64(now),\r\n            combinesLeft: 10,\r\n            combineCooledDown: 0\r\n        });\r\n\r\n        uint256 newGirlId = girls.push(_girl) - 1;\r\n        NewGirl(_owner, newGirlId, _sourceGirlId1, _sourceGirlId2, _girl.dna);\r\n        _transfer(0, _owner, newGirlId);\r\n\r\n        return newGirlId;\r\n    }\r\n\r\n     function _combineGirls(Girl storage _sourceGirl1, Girl storage _sourceGirl2, uint256 _girl1Id, uint256 _girl2Id, address _owner) internal returns(uint256) {\r\n        uint16 maxGen = _sourceGirl1.gen;\r\n\r\n        if (_sourceGirl2.gen > _sourceGirl1.gen) {\r\n            maxGen = _sourceGirl2.gen;\r\n        }\r\n\r\n        uint256 seed = block.number + maxGen + block.timestamp;\r\n        uint256 newDna = dnaMixer.mixDna(_sourceGirl1.dna, _sourceGirl2.dna, seed);\r\n\r\n        _sourceGirl1.combinesLeft -= 1;\r\n        _sourceGirl2.combinesLeft -= 1;\r\n        _sourceGirl1.combineCooledDown = uint64(now) + 6 hours;\r\n        _sourceGirl2.combineCooledDown = uint64(now) + 6 hours;\r\n\r\n        return _createGirl(_girl1Id, _girl2Id, maxGen + 1, newDna, _owner);\r\n    }\r\n\r\n    function _getAuctionPrice(Auction storage _auction) internal view returns (uint256) {\r\n        uint256 secondsPassed = 0;\r\n\r\n        if (now > _auction.creationTime) {\r\n            secondsPassed = now - _auction.creationTime;\r\n        }\r\n\r\n        uint256 price = _auction.endingPriceWei;\r\n\r\n        if (secondsPassed < _auction.duration) {\r\n            uint256 priceSpread = _auction.startingPriceWei - _auction.endingPriceWei;\r\n            uint256 deltaPrice = priceSpread * secondsPassed / _auction.duration;\r\n            price = _auction.startingPriceWei - deltaPrice;\r\n        }\r\n\r\n        return price;\r\n    }\r\n\r\n}\r\n\r\n\r\ncontract CpApis is CpInternals {\r\n\r\n    function getGirl(uint256 _id) external view returns (uint256 dna, uint256 sourceGirlId1, uint256 sourceGirlId2, uint256 gen, uint256 creationTime, uint8 combinesLeft, uint64 combineCooledDown) {\r\n        Girl storage girl = girls[_id];\r\n        dna = girl.dna;\r\n        sourceGirlId1 = girl.sourceGirl1;\r\n        sourceGirlId2 = girl.sourceGirl2;\r\n        gen = girl.gen;\r\n        creationTime = girl.creationTime;\r\n        combinesLeft = girl.combinesLeft;\r\n        combineCooledDown = girl.combineCooledDown;\r\n    }\r\n\r\n    function createPromoGirl(uint256 _dna) external onlyOwner {\r\n        require(promoCreatedCount < MAX_PROMO_GIRLS);\r\n\r\n        promoCreatedCount++;\r\n        _createGirl(0, 0, 0, _dna, owner);\r\n    }\r\n\r\n    function createGen0(uint256 _dna) external onlyOwner {\r\n        require(gen0CreatedCount < MAX_GEN0_GIRLS);\r\n\r\n        gen0CreatedCount++;\r\n        _createGirl(0, 0, 0, _dna, owner);\r\n    }\r\n\r\n    function setDnaMixerAddress(address _address) external onlyOwner {\r\n        dnaMixer = DnaMixer(_address);\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _girlId) external {\r\n        require(_to != address(0));\r\n        require(_to != address(this));\r\n        require(girlIdToOwner[_girlId] == msg.sender);\r\n        Auction storage auction = girlIdToAuction[_girlId];\r\n        require(auction.creationTime == 0);\r\n        _transfer(msg.sender, _to, _girlId);\r\n    }\r\n\r\n    function ownerOf(uint256 _girlId) external view returns (address owner) {\r\n        owner = girlIdToOwner[_girlId];\r\n        require(owner != address(0));\r\n    }\r\n    \r\n    function createAuction(uint256 _girlId, uint256 _startingPriceWei, uint256 _endingPriceWei, uint256 _duration, bool _isCombine) external {\r\n        require(_startingPriceWei > _endingPriceWei);\r\n        require(_startingPriceWei > 0);\r\n        require(_startingPriceWei == uint256(uint128(_startingPriceWei)));\r\n        require(_endingPriceWei == uint256(uint128(_endingPriceWei)));\r\n        require(_duration == uint256(uint64(_duration)));\r\n        require(girlIdToOwner[_girlId] == msg.sender);\r\n\r\n        if (_isCombine) {\r\n            Girl storage girl = girls[_girlId];\r\n            require(girl.combinesLeft > 0);\r\n            require(girl.combineCooledDown < now);\r\n        }\r\n\r\n        Auction memory auction = Auction(\r\n            msg.sender,\r\n            uint128(_startingPriceWei),\r\n            uint128(_endingPriceWei),\r\n            uint64(_duration),\r\n            uint64(now),\r\n            _isCombine\r\n        );\r\n\r\n        girlIdToAuction[_girlId] = auction;\r\n\r\n        AuctionCreated(_girlId, _startingPriceWei, _endingPriceWei, _duration, _isCombine);\r\n    }\r\n    \r\n    function bid(uint256 _girlId, uint256 _myGirl) external payable {\r\n        Auction storage auction = girlIdToAuction[_girlId];\r\n\r\n        require(auction.startingPriceWei > 0);\r\n        require(!auction.isCombine || (auction.isCombine && _girlId > 0));\r\n\r\n        uint256 price = _getAuctionPrice(auction);\r\n        require(msg.value >= price);\r\n        bool isCombine = auction.isCombine;\r\n\r\n        if (isCombine) {\r\n            Girl storage sourceGirl1 = girls[_girlId];\r\n            Girl storage sourceGirl2 = girls[_myGirl];\r\n    \r\n            require(sourceGirl1.combinesLeft > 0);\r\n            require(sourceGirl2.combinesLeft > 0);\r\n            require(sourceGirl1.combineCooledDown < now);\r\n            require(sourceGirl2.combineCooledDown < now);\r\n        }\r\n\r\n        address seller = auction.seller;\r\n        delete girlIdToAuction[_girlId];\r\n\r\n        if (price > 0) {\r\n            uint256 cut = price * (OWNERS_AUCTION_CUT / 10000);\r\n            seller.transfer(price - cut);\r\n        }\r\n\r\n        msg.sender.transfer(msg.value - price);\r\n\r\n        if (isCombine) {\r\n            _combineGirls(sourceGirl1, sourceGirl2, _girlId, _myGirl, msg.sender);\r\n        } else {\r\n            _transfer(seller, msg.sender, _girlId);\r\n        }\r\n\r\n        AuctionCompleted(_girlId, price, msg.sender);\r\n    }\r\n\r\n    function combineMyGirls(uint256 _girlId1, uint256 _girlId2) external payable {\r\n        require(_girlId1 != _girlId2);\r\n        require(girlIdToOwner[_girlId1] == msg.sender);\r\n        require(girlIdToOwner[_girlId2] == msg.sender);\r\n                        \r\n        Girl storage sourceGirl1 = girls[_girlId1];\r\n        Girl storage sourceGirl2 = girls[_girlId2];\r\n\r\n        require(sourceGirl1.combinesLeft > 0);\r\n        require(sourceGirl2.combinesLeft > 0);\r\n        require(sourceGirl1.combineCooledDown < now);\r\n        require(sourceGirl2.combineCooledDown < now);\r\n\r\n        _combineGirls(sourceGirl1, sourceGirl2, _girlId1, _girlId2, msg.sender);\r\n    }\r\n\r\n    function cancelAuction(uint256 _girlId) external {\r\n        Auction storage auction = girlIdToAuction[_girlId];\r\n        require(auction.startingPriceWei > 0);\r\n\r\n        require(msg.sender == auction.seller);\r\n        delete girlIdToAuction[_girlId];\r\n        AuctionCancelled(_girlId);\r\n    }\r\n    \r\n    function getAuction(uint256 _girlId) external view returns(address seller, uint256 startingPriceWei, uint256 endingPriceWei, uint256 duration, uint256 startedAt, bool isCombine) {\r\n        Auction storage auction = girlIdToAuction[_girlId];\r\n        require(auction.startingPriceWei > 0);\r\n\r\n        return (auction.seller, auction.startingPriceWei, auction.endingPriceWei, auction.duration, auction.creationTime, auction.isCombine);\r\n    }\r\n\r\n    function getGirlsAuctionPrice(uint256 _girlId) external view returns (uint256) {\r\n        Auction storage auction = girlIdToAuction[_girlId];\r\n        require(auction.startingPriceWei > 0);\r\n\r\n        return _getAuctionPrice(auction);\r\n    }\r\n\r\n    function withdrawBalance() external onlyOwner {\r\n        owner.transfer(this.balance);\r\n    }\r\n}\r\n\r\n\r\ncontract CryptoPussyMain is CpApis {\r\n\r\n    function CryptoPussyMain() public payable {\r\n        owner = msg.sender;\r\n        _createGirl(0, 0, 0, uint256(-1), owner);\r\n    }\r\n\r\n    function() external payable {\r\n        require(msg.sender == address(0));\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getGirl\",\"outputs\":[{\"name\":\"dna\",\"type\":\"uint256\"},{\"name\":\"sourceGirlId1\",\"type\":\"uint256\"},{\"name\":\"sourceGirlId2\",\"type\":\"uint256\"},{\"name\":\"gen\",\"type\":\"uint256\"},{\"name\":\"creationTime\",\"type\":\"uint256\"},{\"name\":\"combinesLeft\",\"type\":\"uint8\"},{\"name\":\"combineCooledDown\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"promoCreatedCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"girlIdToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dna\",\"type\":\"uint256\"}],\"name\":\"createGen0\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setDnaMixerAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_PROMO_GIRLS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_girlId\",\"type\":\"uint256\"},{\"name\":\"_myGirl\",\"type\":\"uint256\"}],\"name\":\"bid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_girlId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dnaMixer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OWNERS_AUCTION_CUT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_girlId\",\"type\":\"uint256\"}],\"name\":\"getAuction\",\"outputs\":[{\"name\":\"seller\",\"type\":\"address\"},{\"name\":\"startingPriceWei\",\"type\":\"uint256\"},{\"name\":\"endingPriceWei\",\"type\":\"uint256\"},{\"name\":\"duration\",\"type\":\"uint256\"},{\"name\":\"startedAt\",\"type\":\"uint256\"},{\"name\":\"isCombine\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_girlId\",\"type\":\"uint256\"}],\"name\":\"cancelAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_girlId1\",\"type\":\"uint256\"},{\"name\":\"_girlId2\",\"type\":\"uint256\"}],\"name\":\"combineMyGirls\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_girlId\",\"type\":\"uint256\"},{\"name\":\"_startingPriceWei\",\"type\":\"uint256\"},{\"name\":\"_endingPriceWei\",\"type\":\"uint256\"},{\"name\":\"_duration\",\"type\":\"uint256\"},{\"name\":\"_isCombine\",\"type\":\"bool\"}],\"name\":\"createAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dna\",\"type\":\"uint256\"}],\"name\":\"createPromoGirl\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_girlId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_girlId\",\"type\":\"uint256\"}],\"name\":\"getGirlsAuctionPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"girlIdToAuction\",\"outputs\":[{\"name\":\"seller\",\"type\":\"address\"},{\"name\":\"startingPriceWei\",\"type\":\"uint128\"},{\"name\":\"endingPriceWei\",\"type\":\"uint128\"},{\"name\":\"duration\",\"type\":\"uint64\"},{\"name\":\"creationTime\",\"type\":\"uint64\"},{\"name\":\"isCombine\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_GEN0_GIRLS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gen0CreatedCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"girlId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sourceGirl1\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sourceGirl2\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewGirl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"girlId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"girlId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"startingPriceWei\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"endingPriceWei\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isCombine\",\"type\":\"bool\"}],\"name\":\"AuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"girlId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"priceWei\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"AuctionCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"girlId\",\"type\":\"uint256\"}],\"name\":\"AuctionCancelled\",\"type\":\"event\"}]","ContractName":"CryptoPussyMain","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://576da0a1e110ab3e06d2e9254b281fef96238b034e44c439fc9cd64147262a50"}]}