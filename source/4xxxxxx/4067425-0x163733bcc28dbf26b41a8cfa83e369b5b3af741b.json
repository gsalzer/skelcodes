{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\ninterface TokenERC20 {\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n}\r\n\r\n\r\ninterface TokenNotifier {\r\n\r\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data);\r\n}\r\n\r\n/**\r\n * @title SafeMath (from https://github.com/OpenZeppelin/zeppelin-solidity/blob/4d91118dd964618863395dcca25a50ff137bf5b6/contracts/math/SafeMath.sol)\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\ncontract SafeMath {\r\n    \r\n    function safeMul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function safeSub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function safeAdd(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\ncontract Owned {\r\n\r\n    address owner;\r\n    \r\n    function Owned() { owner = msg.sender; }\r\n\r\n    modifier onlyOwner { require(msg.sender == owner); _; }\r\n}\r\n\r\n\r\ncontract PersianToken is TokenERC20, Owned, SafeMath {\r\n\r\n    // The actual total supply is not constant and it will be updated with the real redeemed tokens once the ICO is over\r\n    uint256 public totalSupply = 0;\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    uint8 public constant decimals = 18;\r\n    string public constant name = 'Persian';\r\n    string public constant symbol = 'PRS';\r\n    string public constant version = '1.0.0';\r\n\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        if (balances[msg.sender] < _value) return false;\r\n        balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n        balances[_to] = safeAdd(balances[_to], _value);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        if(balances[msg.sender] < _value || allowed[_from][msg.sender] < _value) return false;\r\n        balances[_to] = safeAdd(balances[_to], _value);\r\n        balances[_from] = safeSub(balances[_from], _value);\r\n        allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {\r\n        if(!approve(_spender, _value)) return false;\r\n        TokenNotifier(_spender).receiveApproval(msg.sender, _value, this, _extraData);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n}\r\n\r\n\r\ncontract TokenICO is PersianToken {\r\n\r\n    uint256 public icoStartBlock;\r\n    uint256 public icoEndBlock;\r\n    uint256 public totalContributions;\r\n    mapping (address => uint256) public contributions;\r\n\r\n    // At max 300.000 Persian (with 18 decimals) will be ever generated from this ICO\r\n    uint256 public constant maxTotalSupply = 300000 * 10**18;\r\n\r\n    event Contributed(address indexed _contributor, uint256 _value, uint256 _estimatedTotalTokenBalance);\r\n    event Claimed(address indexed _contributor, uint256 _value);\r\n\r\n    function contribute() onlyDuringICO payable external returns (bool success) {\r\n        totalContributions = safeAdd(totalContributions, msg.value);\r\n        contributions[msg.sender] = safeAdd(contributions[msg.sender], msg.value);\r\n        Contributed(msg.sender, msg.value, estimateBalanceOf(msg.sender));\r\n        return true;\r\n    }\r\n\r\n    function claimToken() onlyAfterICO external returns (bool success) {\r\n        uint256 balance = estimateBalanceOf(msg.sender);\r\n        contributions[msg.sender] = 0;\r\n        balances[msg.sender] = safeAdd(balances[msg.sender], balance);\r\n        totalSupply = safeAdd(totalSupply, balance);\r\n        require(totalSupply <= maxTotalSupply);\r\n        Claimed(msg.sender, balance);\r\n        return true;\r\n    }\r\n\r\n    function redeemEther() onlyAfterICO onlyOwner external  {\r\n        owner.transfer(this.balance);\r\n    }\r\n\r\n    function estimateBalanceOf(address _owner) constant returns (uint256 estimatedTokens) {\r\n        return contributions[_owner] > 0 ? safeMul( maxTotalSupply / totalContributions, contributions[_owner]) : 0;\r\n    }\r\n\r\n    // This check is an helper function for ÐApp to check the effect of the NEXT tx, NOT simply the current state of the contract\r\n    function isICOOpen() constant returns (bool _open) {\r\n        return block.number >= (icoStartBlock - 1) && !isICOEnded();\r\n    }\r\n\r\n    // This check is an helper function for ÐApp to check the effect of the NEXT tx, NOT simply the current state of the contract\r\n    function isICOEnded() constant returns (bool _ended) {\r\n        return block.number >= icoEndBlock;\r\n    }\r\n\r\n    modifier onlyDuringICO {\r\n        require(block.number >= icoStartBlock && block.number <= icoEndBlock); _;\r\n    }\r\n\r\n    modifier onlyAfterICO {\r\n        require(block.number > icoEndBlock); _;\r\n    }\r\n}\r\n\r\n\r\ncontract PersianTokenICO is TokenICO {\r\n\r\n    function PersianTokenICO(uint256 _icoStartBlock, uint256 _icoEndBlock) {\r\n        icoStartBlock = _icoStartBlock;\r\n        icoEndBlock = _icoEndBlock;\r\n    }\r\n  \r\n    function () onlyDuringICO payable {\r\n        totalContributions = safeAdd(totalContributions, msg.value);\r\n        contributions[msg.sender] = safeAdd(contributions[msg.sender], msg.value);\r\n        Contributed(msg.sender, msg.value, estimateBalanceOf(msg.sender));\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoStartBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalContributions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimToken\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEndBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"estimateBalanceOf\",\"outputs\":[{\"name\":\"estimatedTokens\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isICOOpen\",\"outputs\":[{\"name\":\"_open\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isICOEnded\",\"outputs\":[{\"name\":\"_ended\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contribute\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"redeemEther\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_icoStartBlock\",\"type\":\"uint256\"},{\"name\":\"_icoEndBlock\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_contributor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_estimatedTotalTokenBalance\",\"type\":\"uint256\"}],\"name\":\"Contributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_contributor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"PersianTokenICO","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000003e17b400000000000000000000000000000000000000000000000000000000003e8ce4","Library":"","SwarmSource":"bzzr://3972841bd35892d3fe4c711ac36c6215f9d2bcdda7487d2996ea8efc43fe2e0e"}]}