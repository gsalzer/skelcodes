{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n \r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract SpaceICOToken {\r\n\tusing SafeMath for uint256;\r\n\tstring public name = \"SpaceICO Token\";\r\n    string public symbol = \"SIO\";\r\n    uint256 public decimals = 18;\r\n\r\n    uint256 private saleStart;\r\n    uint256 private saleEnd;\r\n\r\n    uint256 private constant TOTAL_SUPPLY = 50000000 * 1 ether;\r\n    uint256 private constant SOFT_CAP = 500 * 1 ether;\r\n\r\n\tmapping (address => uint) balances;\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n\r\n\taddress private owner;\r\n\r\n    function getSaleStart() constant returns (uint256) {\r\n        return saleStart;\r\n    }\r\n\r\n    function getSaleEnd() constant returns (uint256) {\r\n        return saleEnd;\r\n    }\r\n\r\n \r\n    function getCurrentPrice() constant returns (uint price) {\r\n        //Token price, ETH: 0,002\r\n        price = 500 * 1 ether;\r\n    }\r\n\r\n    function softCapReached() constant returns (bool) {\r\n        return this.balance > SOFT_CAP;\r\n    }\r\n\r\n    function inSalePeriod() constant returns (bool) {\r\n        return now > saleStart && now < saleEnd;\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        balance = balances[_owner];\r\n    }\r\n\r\n\tfunction SpaceICOToken(uint _saleStart) {\r\n        owner = msg.sender;\r\n        if (_saleStart == 0) {\r\n            saleStart = 1508025600; //Beginning: 10.15.2017\r\n            saleEnd = 1509408000; //End: 10.31.2017\r\n        } else {\r\n            saleStart = _saleStart;\r\n            saleEnd = _saleStart + 17 days;\r\n        }\r\n\r\n        balances[owner] = 50000000 * 10 ** decimals;\r\n\t}\r\n\r\n    function transfer(address _to, uint256 _value) returns (bool) {\r\n        require(_to != address(0));\r\n\r\n        // SafeMath.sub will throw if there is not enough balance.\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _amount) returns (bool success) {\r\n        require(now > saleEnd + 14 days);\r\n\r\n        if (balances[_from] >= _amount && allowed[_from][msg.sender] >= _amount && _amount > 0 && balances[_to] + _amount > balances[_to]) {\r\n\r\n            balances[_from] = balances[_from].sub(_amount);\r\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n            balances[_to] = balances[_to].add(_amount);\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function approve(address _spender, uint _amount) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function() payable {\r\n        buyTokens();\r\n    }\r\n\r\n    function buyTokens() payable {\r\n        require(msg.value > 0);\r\n        require(inSalePeriod());\r\n\r\n        uint amountInWei = msg.value;\r\n\r\n        uint price = getCurrentPrice();\r\n        uint tokenAmount = price * amountInWei / 1 ether;\r\n        \r\n        transfer(msg.sender, tokenAmount);        \r\n\r\n        //Raise event\r\n        BuyToken(msg.sender, amountInWei, 0);\r\n    }\r\n\r\n    function refund() {\r\n        if (softCapReached() == false && now > saleEnd) {\r\n\r\n            uint tokenAmount = balanceOf(msg.sender);\r\n            uint amount = tokenAmount.div(1 ether);\r\n            \r\n            msg.sender.transfer(amount);\r\n            Refund();\r\n        }\r\n    }\r\n\r\n    function withdraw() {\r\n        require(msg.sender == owner);\r\n\r\n        if (softCapReached() == true && now > saleEnd) {\r\n            msg.sender.transfer(this.balance);\r\n        }\r\n    }\r\n\r\n\tevent Transfer(address indexed _from, address indexed _to, uint _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n    event BuyToken(address indexed _purchaser, uint256 _value, uint256 _amount);\r\n    event Refund();\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"softCapReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"inSalePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSaleEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSaleStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_saleStart\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_purchaser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Refund\",\"type\":\"event\"}]","ContractName":"SpaceICOToken","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://947d4d7218ddfe726f0dc7c7804fb3d8b1b6d04854cf22e8611836b3a072bea7"}]}