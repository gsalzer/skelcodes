{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\n\r\n// TURN 0.2 ETH INTO 0.4 ETH\r\n\r\n// This is a minimalistic program aiming\r\n// at very fast, secure & unlimited \r\n// payouts of 0.4 ETH with\r\n// a neglibile fees of 0.01 ETH\r\n\r\n\r\n\r\n// SUPPORTS EXACTLY 0.2 ETH\r\n\r\n// Sending more or less than 0.2 ETH\r\n// will be refunded immediately\r\n\r\ncontract Doubly {\r\n    \r\n    address public owner;\r\n    address[] public participants;\r\n    uint public payoutIndex = 0;\r\n    uint public payoutCount = 0;\r\n    uint public fees;\r\n    \r\n    // This means that if the owner calls this function, the\r\n    // function is executed and otherwise, an exception is\r\n    // thrown.\r\n    modifier onlyowner {  \r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    function Doubly(){\r\n        owner = msg.sender;\r\n        participants.push(owner);\r\n        participants.push(owner);\r\n        payoutCount = payoutCount + 2;\r\n    }\r\n    \r\n    // Fallback function\r\n    function () payable {\r\n        enter();\r\n    }\r\n    \r\n    // Owner can collect fees\r\n    function collectFees() onlyowner {\r\n        if (fees == 0) return;\r\n\r\n        owner.transfer(fees);\r\n        fees = 0;\r\n    }\r\n\r\n    // Change ownership\r\n    function setOwner(address newOwner) onlyowner {\r\n        owner = newOwner;\r\n    }\r\n    \r\n    // Double Payout program\r\n    function enter() payable returns(string){\r\n\r\n        // Return non-eligible funds\r\n        if(msg.value < 0.2 ether){\r\n            msg.sender.transfer(msg.value);\r\n            return \"Low value!\";\r\n        }\r\n        \r\n        // Add participant to the payout queue\r\n        // Allocate two payout slots\r\n        participants.push(msg.sender);\r\n        participants.push(msg.sender);\r\n        payoutCount = payoutCount + 2;\r\n\r\n        // Processing payout \r\n        // returning non-eligible funds\r\n        // and collecting fees\r\n        participants[payoutIndex].transfer(0.19 ether);\r\n        msg.sender.transfer(msg.value - 0.2 ether);\r\n        fees += 0.01 ether;\r\n        delete participants[payoutIndex];\r\n        payoutIndex = payoutIndex + 1;\r\n        return \"Successfully joined the queue!\";\r\n\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"payoutIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participants\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"payoutCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fees\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectFees\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enter\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Doubly","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7059f8e4eba40aaf361ebdf0801a5e0c8b7a73596324ce49641262cb6f81da57"}]}