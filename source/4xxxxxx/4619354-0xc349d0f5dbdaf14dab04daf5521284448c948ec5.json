{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\n\r\n\r\ncontract Kiyomi {\r\n    string public constant symbol = \"pep\";\r\n\r\n    string public constant name = \"Kiyomi\";\r\n\r\n    uint public constant decimals = 8;\r\n\r\n    uint _totalSupply = 21000000 * 10 ** decimals;\r\n\r\n    uint public marketSupply;\r\n\r\n    uint public marketPrice;\r\n\r\n    address owner;\r\n\r\n    mapping (address => uint) accounts;\r\n\r\n    mapping (address => mapping (address => uint)) allowed;\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint _value);\r\n\r\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n\r\n    function Kiyomi() public {\r\n        owner = msg.sender;\r\n        accounts[owner] = _totalSupply;\r\n        Transfer(address(0), owner, _totalSupply);\r\n    }\r\n\r\n    function totalSupply() public constant returns (uint __totalSupply) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address _account) public constant returns (uint balance) {\r\n        return accounts[_account];\r\n    }\r\n\r\n    function allowance(address _account, address _spender) public constant returns (uint remaining) {\r\n        return allowed[_account][_spender];\r\n    }\r\n\r\n    function transfer(address _to, uint _amount) public returns (bool success) {\r\n        require(_amount > 0 && accounts[msg.sender] >= _amount);\r\n        accounts[msg.sender] -= _amount;\r\n        accounts[_to] += _amount;\r\n        Transfer(msg.sender, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _amount) public returns (bool success) {\r\n        require(_amount > 0 && accounts[_from] >= _amount && allowed[_from][msg.sender] >= _amount);\r\n        accounts[_from] -= _amount;\r\n        allowed[_from][msg.sender] -= _amount;\r\n        accounts[_to] += _amount;\r\n        Transfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint _amount) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    function purchase() public payable returns (bool _status) {\r\n        require(msg.value > 0 && marketSupply > 0 && marketPrice > 0 && accounts[owner] > 0);\r\n        // Calculate available and required units\r\n        uint unitsAvailable = accounts[owner] < marketSupply ? accounts[owner] : marketSupply;\r\n        uint unitsRequired = msg.value / marketPrice;\r\n        uint unitsFinal = unitsAvailable < unitsRequired ? unitsAvailable : unitsRequired;\r\n        // Transfer funds\r\n        marketSupply -= unitsFinal;\r\n        accounts[owner] -= unitsFinal;\r\n        accounts[msg.sender] += unitsFinal;\r\n        Transfer(owner, msg.sender, unitsFinal);\r\n        // Calculate remaining ether amount\r\n        uint remainEther = msg.value - (unitsFinal * marketPrice);\r\n        // Return extra ETH to sender\r\n        if (remainEther > 0) {\r\n            msg.sender.transfer(remainEther);\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    function crowdsaleSetup(uint _supply, uint _perEther) public returns (bool _status) {\r\n        require(msg.sender == owner && accounts[owner] >= _supply * 10 ** decimals);\r\n        marketSupply = _supply * 10 ** decimals;\r\n        marketPrice = 1 ether / (_perEther * 10 ** decimals);\r\n        return true;\r\n    }\r\n\r\n    function withdrawFunds(uint _amount) public returns (bool _status) {\r\n        require(msg.sender == owner && _amount > 0 && this.balance >= _amount);\r\n        owner.transfer(_amount);\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_supply\",\"type\":\"uint256\"},{\"name\":\"_perEther\",\"type\":\"uint256\"}],\"name\":\"crowdsaleSetup\",\"outputs\":[{\"name\":\"_status\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[{\"name\":\"_status\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"__totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"purchase\",\"outputs\":[{\"name\":\"_status\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Kiyomi","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f1677349e527dbfd678023dc88e46221e488f594ca610bb69e9361403b945f5d"}]}