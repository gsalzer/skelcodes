{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Mainsale {\r\n\r\n  using SafeMath for uint256;\r\n\r\n  address public owner;\r\n  address public multisig;\r\n  uint256 public endTimestamp;\r\n  uint256 public totalRaised;\r\n  uint256 public constant hardCap = 16318 ether;\r\n  uint256 public constant MIN_CONTRIBUTION = 0.1 ether;\r\n  uint256 public constant MAX_CONTRIBUTION = 1000 ether;\r\n  uint256 public constant TWO_DAYS = 60 * 60 * 24 * 2;\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  modifier belowCap() {\r\n    require(totalRaised < hardCap);\r\n    _;\r\n  }\r\n\r\n  modifier withinTimeLimit() {\r\n    require(block.timestamp <= endTimestamp);\r\n    _;\r\n  }\r\n\r\n  function Mainsale(address _multisig, uint256 _endTimestamp) {\r\n    require (_multisig != 0 && _endTimestamp >= (block.timestamp + TWO_DAYS));\r\n    owner = msg.sender;\r\n    multisig = _multisig;\r\n    endTimestamp = _endTimestamp;\r\n  }\r\n  \r\n  function() payable belowCap withinTimeLimit {\r\n    require(msg.value >= MIN_CONTRIBUTION && msg.value <= MAX_CONTRIBUTION);\r\n    totalRaised = totalRaised.add(msg.value);\r\n    uint contribution = msg.value;\r\n    if (totalRaised > hardCap) {\r\n      uint refundAmount = totalRaised.sub(hardCap);\r\n      msg.sender.transfer(refundAmount);\r\n      contribution = contribution.sub(refundAmount);\r\n      refundAmount = 0;\r\n      totalRaised = hardCap;\r\n    }\r\n    multisig.transfer(contribution);\r\n  }\r\n\r\n  function withdrawStuck() onlyOwner {\r\n    multisig.transfer(this.balance);\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"MIN_CONTRIBUTION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multisig\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawStuck\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_CONTRIBUTION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TWO_DAYS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_multisig\",\"type\":\"address\"},{\"name\":\"_endTimestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Mainsale","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000fBE55DE3383ec44c39FF839FbAF9A6d769251544000000000000000000000000000000000000000000000000000000005A42E27F","Library":"","SwarmSource":"bzzr://bcffb1a28f5719b799290a6d0287d751d8e0952461fe903fff3ae2dde31fb858"}]}