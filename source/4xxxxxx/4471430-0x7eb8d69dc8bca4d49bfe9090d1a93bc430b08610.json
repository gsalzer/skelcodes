{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\ncontract myOwned {\r\n    address public contractOwner;\r\n    function myOwned() public { contractOwner = msg.sender; }\r\n    modifier onlyOwner { require(msg.sender == contractOwner); _;}\r\n    function exOwner(address newOwner) onlyOwner public { contractOwner = newOwner;}\r\n}\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount);\r\n}\r\n\r\ncontract AIAcrowdsale is myOwned {\r\n    uint public startDate;\r\n    uint public stopDate;\r\n    uint public fundingGoal;\r\n    uint public amountRaised;\r\n    token public contractTokenReward;\r\n    address public contractWallet;\r\n    mapping(address => uint256) public balanceOf;\r\n    event GoalReached(address receiver, uint amount);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    function AIAcrowdsale (\r\n        uint _startDate,\r\n        uint _stopDate,\r\n        uint _fundingGoal,\r\n        address _contractWallet,\r\n        address _contractTokenReward\r\n    ) {\r\n        startDate = _startDate;\r\n        stopDate = _stopDate;\r\n        fundingGoal = _fundingGoal * 1 ether;\r\n        contractWallet = _contractWallet;\r\n        contractTokenReward = token(_contractTokenReward);\r\n    }\r\n    \r\n    function getCurrentTimestamp() internal returns (uint256) {\r\n        return now;    \r\n    }\r\n\r\n    function saleActive() public constant returns (bool) {\r\n        return (now >= startDate && now <= stopDate && amountRaised < fundingGoal);\r\n    }\r\n\r\n    function getRateAt(uint256 at) public constant returns (uint256) {\r\n        if (at < startDate) {return 0;} \r\n        else if (at < (startDate + 150 hours)) {return 4355;} \r\n        else if (at < (startDate + 318 hours)) {return 3920;} \r\n        else if (at < (startDate + 486 hours)) {return 3528;} \r\n        else if (at <= stopDate) {return 3176;} \r\n        else if (at > stopDate) {return 0;}\r\n    }\r\n\r\n    function getRateNow() public constant returns (uint256) {\r\n        return getRateAt(now);\r\n    }\r\n\r\n    function () payable {\r\n        require(saleActive());\r\n        require(amountRaised < fundingGoal);\r\n        uint amount = msg.value;\r\n        balanceOf[msg.sender] += amount;\r\n        amountRaised += amount;\r\n        uint price =  0.0001 ether / getRateAt(now);\r\n        contractTokenReward.transfer(msg.sender, amount / price);\r\n        FundTransfer(msg.sender, amount, true);\r\n        contractWallet.transfer(msg.value);\r\n    }\r\n\r\n    function saleEnd() onlyOwner {\r\n        require(!saleActive());\r\n        require(now > stopDate );\r\n        contractWallet.transfer(this.balance);\r\n        contractTokenReward.transfer(contractWallet, this.balance);\r\n\r\n    }\r\n\r\n    function destroy() { \r\n        if (msg.sender == contractWallet) { \r\n        suicide(contractWallet);\r\n        contractTokenReward.transfer(contractWallet, this.balance);\r\n        }\r\n    }    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"stopDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"exOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRateNow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"at\",\"type\":\"uint256\"}],\"name\":\"getRateAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"saleEnd\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractTokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_startDate\",\"type\":\"uint256\"},{\"name\":\"_stopDate\",\"type\":\"uint256\"},{\"name\":\"_fundingGoal\",\"type\":\"uint256\"},{\"name\":\"_contractWallet\",\"type\":\"address\"},{\"name\":\"_contractTokenReward\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"AIAcrowdsale","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000005a2fa8a0000000000000000000000000000000000000000000000000000000005a5492a00000000000000000000000000000000000000000000000000000000000012110000000000000000000000000fa701ba045fb7ad1118187c36a680624d170915d000000000000000000000000219101d69455c620700bf02f157f29ef7a8f7988","Library":"","SwarmSource":"bzzr://8c3da7d517c3b66ecd5498700ea59695102364ea9cd0b6dbf8aa96b3328dddf5"}]}