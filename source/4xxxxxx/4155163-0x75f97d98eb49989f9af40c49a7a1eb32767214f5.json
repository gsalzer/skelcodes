{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.0;\r\n\r\n/// @title PonzICO\r\n/// @author acityinohio\r\ncontract PonzICO {\r\n    address public owner;\r\n    uint public total;\r\n    mapping (address => uint) public invested;\r\n    mapping (address => uint) public balances;\r\n\r\n    //function signatures\r\n    function PonzICO() { }\r\n    function withdraw() { }\r\n    function reinvest() { }\r\n    function invest() payable { }\r\n    \r\n}\r\n\r\n/// @title VoteOnMyTeslaColor EXCLUSIVELY FOR SUPER-ACCREDITED PONZICO INVESTORS\r\n/// @author acityinohio\r\ncontract VoteOnMyTeslaColor {\r\n    address public owner;\r\n    enum Color { SolidBlack, MidnightSilverMetallic, DeepBlueMetallic, SilverMetallic, RedMultiCoat }\r\n    mapping (uint8 => uint32) public votes;\r\n    mapping (address => bool) public voted;\r\n\r\n    //log vote\r\n    event LogVotes(Color color, uint num);\r\n    //log winner\r\n    event LogWinner(Color color);\r\n\r\n    //hardcode production PonzICO address\r\n    PonzICO ponzico = PonzICO(0x1ce7986760ADe2BF0F322f5EF39Ce0DE3bd0C82B);\r\n\r\n    //just for me\r\n    modifier ownerOnly() {require(msg.sender == owner); _; }\r\n    //only valid colors, as specified by the Model3 production details\r\n    modifier isValidColor(uint8 color) {require(color < uint8(5)); _; }\r\n    //Only super-accredited ponzICO investors (0.1 ETH per vote) can vote\r\n    //Can only vote once! Unless you want to pay to play...\r\n    modifier superAccreditedInvestor() { require(ponzico.invested(msg.sender) >= 0.1 ether && !voted[msg.sender]); _;}\r\n\r\n    //constructor for initializing VoteOnMyTeslaColor\r\n    //the owner is the genius who made the revolutionary smart contract PonzICO\r\n    //obviously blue starts with 10 votes because it is objectively the BEST color\r\n    function VoteOnMyTeslaColor() {\r\n        owner = msg.sender;\r\n        //YOURE MY BOY BLUE\r\n        votes[uint8(2)] = 10;\r\n    }\r\n\r\n    //SUPER ACCREDITED INVESTORS ONLY, YOU CAN ONLY VOTE ONCE\r\n    function vote(uint8 color)\r\n    superAccreditedInvestor()\r\n    isValidColor(color)\r\n    {\r\n        //0.1 ETH invested in PonzICO per vote, truncated\r\n        uint32 num = uint32(ponzico.invested(msg.sender) / (0.1 ether));\r\n        votes[color] += num;\r\n        voted[msg.sender] = true;\r\n        LogVotes(Color(color), num);\r\n    }\r\n    \r\n    //pay to vote again! I don't care!\r\n    //...but it'll cost you 1 ether for me to look the other way, wink wink\r\n    function itsLikeChicago() payable {\r\n        require(voted[msg.sender] && msg.value >= 1 ether);\r\n        voted[msg.sender] = false;\r\n    }\r\n\r\n    function winnovate()\r\n    ownerOnly()\r\n    {\r\n        Color winner = Color.SolidBlack;\r\n        for (uint8 choice = 1; choice < 5; choice++) {\r\n            if (votes[choice] > votes[choice-1]) {\r\n                winner = Color(choice);\r\n            }\r\n        }\r\n        LogWinner(winner);\r\n        //keeping dat blockchain bloat on check\r\n        selfdestruct(owner);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"itsLikeChicago\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"winnovate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"voted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"color\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"votes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"color\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"LogVotes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"color\",\"type\":\"uint8\"}],\"name\":\"LogWinner\",\"type\":\"event\"}]","ContractName":"VoteOnMyTeslaColor","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3df08aae266f35f69e7d379e000758733dbea3f10d49bea08ac5a56f6cdec8bf"}]}