{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\ncontract AbstractMintableToken {\r\n    function mintFromTrustedContract(address _to, uint256 _amount) returns (bool);\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    function Ownable() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n\r\n}\r\n\r\ncontract RegistrationBonus is Ownable {\r\n    address public tokenAddr;\r\n    uint256 constant  bonusAmount = 1 * 1 ether;\r\n    mapping (address => uint) public beneficiaryAddresses;\r\n    mapping (uint => address) public beneficiaryUserIds;\r\n    AbstractMintableToken token;\r\n\r\n    event BonusEnrolled(address beneficiary, uint userId, uint256 amount);\r\n\r\n    function RegistrationBonus(address _token){\r\n        tokenAddr = _token;\r\n        token = AbstractMintableToken(tokenAddr);\r\n    }\r\n\r\n    function addBonusToken(address _beneficiary, uint _userId) onlyOwner returns (bool) {\r\n        require(beneficiaryAddresses[_beneficiary] == 0);\r\n        require(beneficiaryUserIds[_userId] == 0);\r\n\r\n        if(token.mintFromTrustedContract(_beneficiary, bonusAmount)) {\r\n            beneficiaryAddresses[_beneficiary] = _userId;\r\n            beneficiaryUserIds[_userId] = _beneficiary;\r\n            BonusEnrolled(_beneficiary, _userId, bonusAmount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"beneficiaryUserIds\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"addBonusToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"beneficiaryAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BonusEnrolled\",\"type\":\"event\"}]","ContractName":"RegistrationBonus","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000ac7abdd94cecf22538e20fcda3ad9b3519cc7046","Library":"","SwarmSource":"bzzr://0d9d17b8a5c65cd0e1ce9f3c78eed362c681a4c745c0e4331b154ac4d79643fc"}]}