{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract Owned {\r\n  address public owner;\r\n\r\n  function Owned(\r\n    )\r\n      public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n  modifier onlyOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(\r\n    address _owner)\r\n      onlyOwner public {\r\n        require(_owner != 0x0);\r\n\r\n        owner = _owner;\r\n    }\r\n}\r\n\r\ninterface tokenRecipient {\r\n  function receiveApproval(\r\n    address _from,\r\n    uint256 _value,\r\n    address _token,\r\n    bytes _extraData)\r\n      public;\r\n}\r\n\r\ncontract ERC20Token {\r\n  string public name;\r\n  string public symbol;\r\n  uint8 public decimals;\r\n  uint256 public totalSupply;\r\n\r\n  mapping (address => uint256) public balanceOf;\r\n  mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  event Burn(address indexed from, uint256 value);\r\n\r\n  function ERC20Token(\r\n    string _tokenName,\r\n    string _tokenSymbol,\r\n    uint8 _decimals,\r\n    uint256 _totalSupply)\r\n      public {\r\n        name = _tokenName;\r\n        symbol = _tokenSymbol;\r\n        decimals = _decimals;\r\n        totalSupply = _totalSupply * 10 ** uint256(decimals);\r\n        balanceOf[msg.sender] = totalSupply;\r\n    }\r\n\r\n  function _transfer(\r\n    address _from,\r\n    address _to,\r\n    uint256 _value)\r\n      internal {\r\n        require(_to != 0x0);\r\n        require(_from != 0x0);\r\n        require(_from != _to);\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n\r\n        uint256 previousBalances = balanceOf[_from] + balanceOf[_to];\r\n\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n\r\n        Transfer(_from, _to, _value);\r\n\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n\r\n  function transfer(\r\n    address _to,\r\n    uint256 _value)\r\n      public {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n  function transferFrom(\r\n    address _from,\r\n    address _to,\r\n    uint256 _value)\r\n      public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]);\r\n        \r\n        allowance[_from][msg.sender] -= _value;\r\n        \r\n        _transfer(_from, _to, _value);\r\n        \r\n        return true;\r\n    }\r\n\r\n  function approve(\r\n    address _spender,\r\n    uint256 _value)\r\n      public returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        \r\n        return true;\r\n    }\r\n\r\n  function approveAndCall(\r\n    address _spender,\r\n    uint256 _value,\r\n    bytes _extraData)\r\n      public returns (bool success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n\r\n        if (approve(_spender, _value)) {\r\n          spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n          \r\n          return true;\r\n        }\r\n    }\r\n\r\n  function burn(\r\n    uint256 _value)\r\n      public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value);\r\n\r\n        balanceOf[msg.sender] -= _value;\r\n        totalSupply -= _value;\r\n\r\n        Burn(msg.sender, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n  function burnFrom(\r\n    address _from,\r\n    uint256 _value)\r\n      public returns (bool success) {\r\n        require(balanceOf[_from] >= _value);\r\n        require(_value <= allowance[_from][msg.sender]);\r\n\r\n        balanceOf[_from] -= _value;\r\n        allowance[_from][msg.sender] -= _value;\r\n        totalSupply -= _value;\r\n\r\n        Burn(_from, _value);\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract Sentinel is Owned, ERC20Token {\r\n  mapping (bytes32 => address) public services;\r\n\r\n  function Sentinel(\r\n    string _tokenName,\r\n    string _tokenSymbol,\r\n    uint8 _decimals,\r\n    uint256 _totalSupply)\r\n      ERC20Token(_tokenName, _tokenSymbol, _decimals, _totalSupply) public {\r\n    }\r\n\r\n  function deployService(\r\n    bytes32 _serviceName,\r\n    address _serviceAddress)\r\n      onlyOwner public {\r\n        services[_serviceName] = _serviceAddress;\r\n    }\r\n\r\n  function payService(\r\n    bytes32 _serviceName,\r\n    address _from,\r\n    address _to,\r\n    uint256 _value)\r\n      public {\r\n        require(msg.sender != 0x0);\r\n        require(services[_serviceName] != 0x0);\r\n        require(msg.sender == services[_serviceName]);\r\n        require(_from != 0x0);\r\n        require(_to != 0x0);\r\n        require(balanceOf[_from] >= _value);\r\n        require(balanceOf[_to] + _value > balanceOf[_to]);\r\n\r\n        uint256 previousBalances = balanceOf[_from] + balanceOf[_to];\r\n\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n\r\n        Transfer(_from, _to, _value);\r\n\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"services\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_serviceName\",\"type\":\"bytes32\"},{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"payService\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_serviceName\",\"type\":\"bytes32\"},{\"name\":\"_serviceAddress\",\"type\":\"address\"}],\"name\":\"deployService\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"Sentinel","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000077359400000000000000000000000000000000000000000000000000000000000000000853454e54696e656c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000453454e5400000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://5f1db0ef2fce6f9bc8ff00b80497b96170f9a3bd6cd63deb09106650ba23d781"}]}