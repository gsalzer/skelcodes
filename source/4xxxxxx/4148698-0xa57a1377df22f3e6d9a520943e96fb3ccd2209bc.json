{"status":"1","message":"OK","result":[{"SourceCode":"contract Gamble {\r\n    address owner;\r\n    Bet[] bets;\r\n    address[] winners;\r\n\r\n    struct Bet {\r\n        address sender;\r\n        int8 range;\r\n    }\r\n\r\n    function Gamble() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function place (int8 range) public payable {\r\n        if (msg.value >= 50 finney && range <= 100) {\r\n            bets[bets.length++] = Bet({sender: msg.sender, range: range});\r\n        }\r\n    }\r\n\r\n    function solve (int8 range) public {\r\n        if (msg.sender == owner && range <= 100) {\r\n            for (uint i = 0; i < bets.length; ++i) {\r\n                if (bets[i].range == range) {\r\n                    winners[winners.length++] = bets[i].sender;\r\n                }\r\n            }\r\n\r\n            for (uint j = 0; j < winners.length; ++j) {\r\n                winners[j].send(winners.length / this.balance);\r\n            }\r\n\r\n            selfdestruct(owner);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"range\",\"type\":\"int8\"}],\"name\":\"solve\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"range\",\"type\":\"int8\"}],\"name\":\"place\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"Gamble","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fc8c6a7d264d1311958fb65046f01b31284cc63a23dea44172a10f14d9183dcd"}]}