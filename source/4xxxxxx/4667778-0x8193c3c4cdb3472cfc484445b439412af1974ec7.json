{"status":"1","message":"OK","result":[{"SourceCode":"//sol Cryptopus\r\n// @authors:\r\n// Alexandr Romanov <rmnff.dev@yandex.ru>\r\n// usage:\r\n// use modifiers isOwner (just own owned).\r\npragma solidity ^0.4.10;\r\n\r\ncontract checkedMathematics {\r\n    function checkedAddition(uint256 x, uint256 y) pure internal returns(uint256) {\r\n      uint256 z = x + y;\r\n      assert((z >= x) && (z >= y));\r\n      return z;\r\n    }\r\n    function checkedSubtract(uint256 x, uint256 y) pure internal returns(uint256) {\r\n      assert(x >= y);\r\n      uint256 z = x - y;\r\n      return z;\r\n    }\r\n    function checkedMultiplication(uint256 x, uint256 y) pure internal returns(uint256) {\r\n      uint256 z = x * y;\r\n      assert((x == 0)||(z/x == y));\r\n      return z;\r\n    }\r\n    function checkedDivision(uint256 a, uint256 b) pure internal returns (uint256) {\r\n      assert(b > 0);\r\n      uint c = a / b;\r\n      assert(a == b * c + a % b);\r\n      return c;\r\n    }\r\n}\r\n\r\ncontract ERC20Token {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract StandardToken is ERC20Token {\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n      if (balances[msg.sender] >= _value && _value > 0) {\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        allowed[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n}\r\n\r\ncontract Cryptopus is checkedMathematics, StandardToken {\r\n\r\n    string public constant name                      = \"Cryptopus Token\";\r\n    string public constant symbol                    = \"CPP\"; // Still unused symbol we are using now\r\n    uint256 public constant decimals                 = 18;\r\n    uint256 private constant tokenCreationCapICO025  = 10000000**decimals;\r\n    uint256 private constant tokenCreationCapICO030  = 10000000**decimals;\r\n    uint256 public  constant tokenCreationCapOverall = 20000000**decimals;\r\n\r\n    address public owner;\r\n\r\n    // 1 ETH = $470 USD Date: December 1st, 2017\r\n    uint private oneTokenInWeiSale1  = 530000000000000; // $0.25 USD\r\n    uint private oneTokenInWeiSale2  = 590000000000000; // $0.28 USD\r\n    uint private oneTokenInWeiSale3  = 640000000000000; // $0.30 USD\r\n    uint private oneTokenInWeiNormal = 680000000000000; // $0.32 USD\r\n\r\n    Phase public currentPhase = Phase.ICOweek1;\r\n\r\n    enum Phase {\r\n        ICOweek1,\r\n        ICOweek2,\r\n        ICOweek3,\r\n        NormalLife\r\n    }\r\n\r\n    modifier isOwner {\r\n        if(owner != msg.sender) revert();\r\n        _;\r\n    }\r\n\r\n    event CreateCPP(address indexed _to, uint256 _value);\r\n\r\n    function Cryptopus() public {\r\n      owner = msg.sender;\r\n    }\r\n\r\n    function () public payable {\r\n        createTokens();\r\n    }\r\n\r\n    function createTokens() internal {\r\n        if (msg.value <= 0) revert();\r\n\r\n        if (currentPhase == Phase.ICOweek1) {\r\n            if (totalSupply <= tokenCreationCapICO025) {\r\n                generateTokens(oneTokenInWeiSale1);\r\n            }\r\n        }\r\n        else if (currentPhase == Phase.ICOweek2) {\r\n            if (totalSupply > tokenCreationCapICO025 && totalSupply <= tokenCreationCapICO030) {\r\n                generateTokens(oneTokenInWeiSale2);\r\n            }\r\n        }\r\n        else if (currentPhase == Phase.ICOweek3) {\r\n            if (totalSupply > tokenCreationCapICO030 && totalSupply <= tokenCreationCapOverall) {\r\n                generateTokens(oneTokenInWeiSale3);\r\n            }\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n\r\n    function generateTokens(uint _oneTokenInWei) internal {\r\n        uint multiplier = 10**decimals;\r\n        uint256 tokens = checkedDivision(msg.value, _oneTokenInWei)*multiplier;\r\n        uint256 checkedSupply = checkedAddition(totalSupply, tokens);\r\n        if (tokenCreationCapOverall <= checkedSupply) revert();\r\n        balances[msg.sender] += tokens;\r\n        totalSupply = checkedAddition(totalSupply, tokens);\r\n        CreateCPP(msg.sender,tokens);\r\n    }\r\n\r\n    function changePhaseToICOweek2() external isOwner returns (bool){\r\n        currentPhase = Phase.ICOweek2;\r\n        return true;\r\n    }\r\n\r\n    function changePhaseToICOweek3() external isOwner returns (bool){\r\n        currentPhase = Phase.ICOweek3;\r\n        return true;\r\n    }\r\n\r\n    function changePhaseToNormalLife() external isOwner returns (bool){\r\n        currentPhase = Phase.NormalLife;\r\n        return true;\r\n    }\r\n\r\n    function changeTokenPrice(uint tpico1, uint tpico2, uint tpico3) external isOwner returns (bool){\r\n        oneTokenInWeiSale1 = tpico1;\r\n        oneTokenInWeiSale2 = tpico2;\r\n        oneTokenInWeiSale3 = tpico3;\r\n        return true;\r\n    }\r\n\r\n    function finalize() external isOwner returns (bool){\r\n      owner.transfer(this.balance);\r\n      return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"currentPhase\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tpico1\",\"type\":\"uint256\"},{\"name\":\"tpico2\",\"type\":\"uint256\"},{\"name\":\"tpico3\",\"type\":\"uint256\"}],\"name\":\"changeTokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"changePhaseToNormalLife\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCreationCapOverall\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"changePhaseToICOweek3\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"changePhaseToICOweek2\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"CreateCPP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Cryptopus","CompilerVersion":"v0.4.19-nightly.2017.11.11+commit.284c3839","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7242818d4916577ce3f199bed9a5d991ff58dbeb0e5308ffa1602153dedfa28e"}]}