{"status":"1","message":"OK","result":[{"SourceCode":"/*******************************/\r\n/* Solidity Contract By Younes */\r\n/**** L.younes@1fancy.com ******/\r\n/****** www.1fancy.com *********/\r\n/*******************************/\r\n\r\npragma solidity ^0.4.16;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount);\r\n}\r\n\r\ncontract MiCarsICO {\r\n\t// Beneficiary Address\r\n\tuint128 private decimals = 1000000000000000000;\r\n    address public beneficiary = 0x8f42914C201AcDd8a2769211C862222Ec56eea40;\r\n    address public owner = beneficiary;\r\n\t\r\n\t// Start date vendredi 29 décembre 2017 00:00:00\r\n\tuint public startdate = now;\r\n\t// Pré ico round 1 fin: vendredi 5 janvier 2018 23:59:3\r\n\tuint public deadlinePreIcoOne = 1515196740;\r\n\t\r\n\t// Pré ico round 2 fin: vendredi 12 janvier 2018 23:59:3\r\n    uint public deadlinePreIcoTwo = 1515801540;\t\r\n\t\r\n\t// Fianl Tuesday fin: mardi 13 février 2018 23:59:3\r\n    uint public deadline = 1518566340;\r\n\r\n\t\r\n\t// Min token per transaction\r\n    uint public vminEtherPerPurchase = 0.0011 * 1 ether;\r\n\t\r\n\t// Max Token per transaction\r\n    uint public vmaxEtherPerPurchase = 225 * 1 ether;\r\n\t\r\n\t// Initial Starting price per token\r\n    uint public price = 0.000385901 * 1 ether;\r\n    uint public updatedPrice  = 0.000515185 * 1 ether;\r\n\t\r\n\t// Amount raised and deadlines in seconds\r\n    uint public amountRaised;\r\n    uint public sentToken;\r\n    \r\n\r\n\t\r\n\r\n\t\r\n\t// Token Address\r\n    token public tokenReward = token(0xdd5a3aeef473401c23f24c4c6b9cd1b0808fbb36);\r\n    mapping(address => uint256) public balanceOf;\r\n\t\r\n    bool crowdsaleClosed = false;\r\n    bool price_rate_changed = false;\r\n\r\n    event GoalReached(address recipient, uint totalAmountRaised);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    /**\r\n     * Constrctor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    function MiCarsICO() {}\r\n\r\n    function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\t// assert(b > 0); // Solidity automatically throws when dividing by 0\r\n\t\tuint256 c = a / b;\r\n\t\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\t\treturn c;\r\n\t  }\r\n\tfunction mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tif (a == 0) {\r\n\t\t  return 0;\r\n\t\t}\r\n\t\tuint256 c = a * b;\r\n\t\tassert(c / a == b);\r\n\t\treturn c;\r\n\t}\r\n  \r\n\tmodifier isOwner {\r\n\t  require(msg.sender == owner);\r\n\t  _;\r\n\t }\r\n\t\r\n\r\n\tfunction kill() isOwner public {\r\n        selfdestruct(beneficiary);\r\n    }\r\n\r\n    function EmergencyPause() isOwner public {\r\n        crowdsaleClosed = true;\r\n    }\r\n    function EmergencyUnPause() isOwner public {\r\n        crowdsaleClosed = false;\r\n    }\r\n\t\r\n\t /**\r\n     * Withdraw the funds\r\n     *\r\n     */\r\n    function safeWithdrawal(uint _amounty) isOwner public {\r\n\t\t\tuint amounted = _amounty;\r\n            \r\n            if (beneficiary.send(amounted)) {\r\n                FundTransfer(beneficiary, amounted, false);\r\n            }\r\n    }\r\n\t\r\n    function UpdatePrice(uint _new_price) isOwner public {\r\n          updatedPrice = _new_price;\r\n\t\t  price_rate_changed = true;\r\n    }\r\n\r\n    function () payable   {\r\n        require(crowdsaleClosed == false);\r\n\r\n\t\tif (price_rate_changed == false) {\r\n\t\t\t\t\t\r\n\t\t\t// Token price in 1st week Pre Ico\r\n\t\t\tif (now <= deadlinePreIcoOne) {\r\n\t\t\t\tprice = 0.000385901 * 1 ether;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Token price in 2nd week Pre Ico\r\n\t\t\telse if (now > deadlinePreIcoOne && now <= deadlinePreIcoTwo) {\r\n\t\t\t\tprice = 0.000411628 * 1 ether;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Token price in 3th week Pre Ico\r\n\t\t\telse if (now > deadlinePreIcoTwo && now <= deadline) {\r\n\t\t\t\tprice = 0.000515185 * 1 ether;\r\n\t\t\t}\r\n\t\t\t// Token fixed price in any issue happend\r\n\t\t\telse {\r\n\t\t\t\tprice = 0.000515185 * 1 ether;\r\n\t\t\t}\r\n\t\t// Regular token price\r\n\t\t} else if (price_rate_changed == true) {\r\n\t\t\tprice = updatedPrice * 1 ether;\r\n\t\t} else {\r\n\t\t\tprice = 0.000515185 * 1 ether;\r\n\t\t}\r\n\t\t\r\n\t\tuint amount = msg.value;\r\n\r\n\t\tuint calculedamount = mul(amount, decimals);\r\n\t\tuint tokentosend = div(calculedamount, price);\r\n\r\n\r\n        if (msg.value >= vminEtherPerPurchase && msg.value <= vmaxEtherPerPurchase) {\r\n\t\t\t\t\r\n\t\t\t\tbalanceOf[msg.sender] += amount;\r\n\t\t\t\tFundTransfer(msg.sender, amount, true);\r\n\t\t\t\ttokenReward.transfer(msg.sender, tokentosend);\r\n\r\n\t\t\t\tamountRaised += amount;\r\n\t\t\t\tsentToken += tokentosend;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t} else {\r\n\t\t\trevert();\r\n\t\t}\r\n        \r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"deadlinePreIcoTwo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new_price\",\"type\":\"uint256\"}],\"name\":\"UpdatePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vmaxEtherPerPurchase\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"EmergencyPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sentToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amounty\",\"type\":\"uint256\"}],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadlinePreIcoOne\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vminEtherPerPurchase\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"updatedPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"EmergencyUnPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startdate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalAmountRaised\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"MiCarsICO","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e59ddd954fe3d7eaf73d41c0ba0c3b9146c67628dd1918a15204cf0147463391"}]}