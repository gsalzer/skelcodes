{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances. \r\n */\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances.\r\n */\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint256;\r\n\r\n  mapping(address => uint256) balances;\r\n\r\n  /**\r\n  * @dev transfer token for a specified address\r\n  * @param _to The address to transfer to.\r\n  * @param _value The amount to be transferred.\r\n  */\r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[msg.sender]);\r\n\r\n    // SafeMath.sub will throw if there is not enough balance.\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @dev Gets the balance of the specified address.\r\n  * @param _owner The address to query the the balance of.\r\n  * @return An uint256 representing the amount owned by the passed address.\r\n  */\r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title Standard ERC20 token\r\n *\r\n * @dev Implementation of the basic standard token.\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n */\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances.\r\n */\r\n/**\r\n * @title Standard ERC20 token\r\n *\r\n * @dev Implementation of the basic standard token.\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n */\r\ncontract StandardToken is ERC20, BasicToken {\r\n\r\n  mapping (address => mapping (address => uint256)) internal allowed;\r\n\r\n\r\n  /**\r\n   * @dev Transfer tokens from one address to another\r\n   * @param _from address The address which you want to send tokens from\r\n   * @param _to address The address which you want to transfer to\r\n   * @param _value uint256 the amount of tokens to be transferred\r\n   */\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[_from]);\r\n    require(_value <= allowed[_from][msg.sender]);\r\n\r\n    balances[_from] = balances[_from].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n   *\r\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\r\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   * @param _spender The address which will spend the funds.\r\n   * @param _value The amount of tokens to be spent.\r\n   */\r\n  function approve(address _spender, uint256 _value) public returns (bool) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\r\n   * @param _owner address The address which owns the funds.\r\n   * @param _spender address The address which will spend the funds.\r\n   * @return A uint256 specifying the amount of tokens still available for the spender.\r\n   */\r\n  function allowance(address _owner, address _spender) public view returns (uint256) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n  /**\r\n   * approve should be called when allowed[_spender] == 0. To increment\r\n   * allowed value is better to use this function to avoid 2 calls (and wait until\r\n   * the first transaction is mined)\r\n   * From MonolithDAO Token.sol\r\n   */\r\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\r\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n\r\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n    uint oldValue = allowed[msg.sender][_spender];\r\n    if (_subtractedValue > oldValue) {\r\n      allowed[msg.sender][_spender] = 0;\r\n    } else {\r\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n    }\r\n    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\n //The Persian Daric was a gold coin which, along\r\n //with a similar silver coin, the siglos, represented\r\n //the bimetallic monetary standard of the \r\n //Achaemenid Persian Empire.in that era Daric\r\n //was the best phenomena in purpose to making\r\n //possible exchange in whole world.This is a \r\n //contract to celebrate our ancestors and to \r\n //remind us of the tradition. The tradition one \r\n //that made our lives today. We are going to the \r\n //future, while this is our past that drives us \r\n //forward. Author, Farhad Ghanaatgar \r\n //Constructor\r\ncontract DaRiCpAy is StandardToken {\r\n\tusing SafeMath for uint256;\r\n\r\n    // EVENTS\r\n    event CreatedIRC(address indexed _creator, uint256 _amountOfIRC);\r\n\r\n\t\r\n\t// TOKEN DATA\r\n\tstring public constant name = \"DaRiC\";\r\n\tstring public constant symbol = \"IRC\";\r\n\tuint256 public constant decimals = 18;\r\n\tstring public version = \"1.0\";\r\n\r\n\t// IRC TOKEN PURCHASE LIMITS\r\n\tuint256 public maxPresaleSupply; \t// MAX TOTAL DURING PRESALE (0.8% of MAXTOTALSUPPLY)\r\n\r\n\t// PURCHASE DATES\r\n\tuint256 public constant preSaleStartTime = 1516406400; \t//Saturday, 20-Jan-18 00:00:00 UTC in RFC 2822\r\n\tuint256 public constant preSaleEndTime = 1518220800 ; \t// Saturday, 10-Feb-18 00:00:00 UTC in RFC 2822\r\n\tuint256 public saleStartTime = 1518267600 ; // Saturday, 10-Feb-18 13:00:00 UTC in RFC 2822\r\n\tuint256 public saleEndTime = 1522429200; //Friday, 30-Mar-18 17:00:00 UTC in RFC 2822\r\n\r\n\r\n\t// PURCHASE BONUSES\r\n\tuint256 public lowEtherBonusLimit = 5 * 1 ether;\t\t\t\t// 5+ Ether\r\n\tuint256 public lowEtherBonusValue = 110;\t\t\t\t\t\t// 10% Discount\r\n\tuint256 public midEtherBonusLimit = 24 * 1 ether; \t\t    \t// 24+ Ether\r\n\tuint256 public midEtherBonusValue = 115;\t\t\t\t\t\t// 15% Discount\r\n\tuint256 public highEtherBonusLimit = 50 * 1 ether; \t\t\t\t// 50+ Ether\r\n\tuint256 public highEtherBonusValue = 120; \t\t\t\t\t\t// 20% Discount\r\n\tuint256 public highTimeBonusLimit = 0; \t\t\t\t\t\t\t// 1-12 Days\r\n\tuint256 public highTimeBonusValue = 115; \t\t\t\t\t\t// 20% Discount\r\n\tuint256 public midTimeBonusLimit = 1036800; \t\t\t\t\t// 12-24 Days\r\n\tuint256 public midTimeBonusValue = 110; \t\t\t\t\t\t// 15% Discount\r\n\tuint256 public lowTimeBonusLimit = 3124800;\t\t\t\t\t\t// 24+ Days\r\n\tuint256 public lowTimeBonusValue = 105;\t\t\t\t\t\t\t// 5% Discount\r\n\r\n\t// PRICING INFO\r\n\tuint256 public constant IRC_PER_ETH_PRE_SALE = 10000;  \t\t\t// 10000 IRC = 1 ETH\r\n\tuint256 public constant IRC_PER_ETH_SALE = 8000;  \t\t\t\t// 8000 IRC = 1 ETH\r\n\t\r\n\t// ADDRESSES\r\n\taddress public constant ownerAddress = 0x88ce817Efd0dD935Eed8e9d553167d08870AA6e7; \t// The owners address\r\n\r\n\t// STATE INFO\t\r\n\tbool public allowInvestment = true;\t\t\t\t\t\t\t\t// Flag to change if transfering is allowed\r\n\tuint256 public totalWEIInvested = 0; \t\t\t\t\t\t\t// Total WEI invested\r\n\tuint256 public totalIRCAllocated = 0;\t\t\t\t\t\t\t// Total IRC allocated\r\n\tmapping (address => uint256) public WEIContributed; \t\t\t// Total WEI Per Account\r\n\r\n\r\n\t// INITIALIZATIONS FUNCTION\r\n\tfunction DaRiCpAy() {\r\n\t\trequire(msg.sender == ownerAddress);\r\n\r\n\t\ttotalSupply = 20*1000000*1000000000000000000; \t\t\t\t// MAX TOTAL IRC 20 million\r\n\t\tuint256 totalIRCReserved = totalSupply.mul(20).div(100);\t// 20% reserved for IRC\r\n\t\tmaxPresaleSupply = totalSupply*8/1000 + totalIRCReserved; \t// MAX TOTAL DURING PRESALE (0.8% of MAXTOTALSUPPLY)\r\n\r\n\t\tbalances[msg.sender] = totalIRCReserved;\r\n\t\ttotalIRCAllocated = totalIRCReserved;\t\t\t\t\r\n\t}\r\n\r\n\r\n\t// FALL BACK FUNCTION TO ALLOW ETHER DONATIONS\r\n\tfunction() payable {\r\n\r\n\t\trequire(allowInvestment);\r\n\r\n\t\t// Smallest investment is 0.00001 ether\r\n\t\tuint256 amountOfWei = msg.value;\r\n\t\trequire(amountOfWei >= 10000000000000);\r\n\r\n\t\tuint256 amountOfIRC = 0;\r\n\t\tuint256 absLowTimeBonusLimit = 0;\r\n\t\tuint256 absMidTimeBonusLimit = 0;\r\n\t\tuint256 absHighTimeBonusLimit = 0;\r\n\t\tuint256 totalIRCAvailable = 0;\r\n\r\n\t\t// Investment periods\r\n\t\tif (now > preSaleStartTime && now < preSaleEndTime) {\r\n\t\t\t// Pre-sale ICO\r\n\t\t\tamountOfIRC = amountOfWei.mul(IRC_PER_ETH_PRE_SALE);\r\n\t\t\tabsLowTimeBonusLimit = preSaleStartTime + lowTimeBonusLimit;\r\n\t\t\tabsMidTimeBonusLimit = preSaleStartTime + midTimeBonusLimit;\r\n\t\t\tabsHighTimeBonusLimit = preSaleStartTime + highTimeBonusLimit;\r\n\t\t\ttotalIRCAvailable = maxPresaleSupply - totalIRCAllocated;\r\n\t\t} else if (now > saleStartTime && now < saleEndTime) {\r\n\t\t\t// ICO\r\n\t\t\tamountOfIRC = amountOfWei.mul(IRC_PER_ETH_SALE);\r\n\t\t\tabsLowTimeBonusLimit = saleStartTime + lowTimeBonusLimit;\r\n\t\t\tabsMidTimeBonusLimit = saleStartTime + midTimeBonusLimit;\r\n\t\t\tabsHighTimeBonusLimit = saleStartTime + highTimeBonusLimit;\r\n\t\t\ttotalIRCAvailable = totalSupply - totalIRCAllocated;\r\n\t\t} else {\r\n\t\t\t// Invalid investment period\r\n\t\t\trevert();\r\n\t\t}\r\n\r\n\t\t// Check that IRC calculated greater than zero\r\n\t\tassert(amountOfIRC > 0);\r\n\r\n\t\t// Apply Bonuses\r\n\t\tif (amountOfWei >= highEtherBonusLimit) {\r\n\t\t\tamountOfIRC = amountOfIRC.mul(highEtherBonusValue).div(100);\r\n\t\t} else if (amountOfWei >= midEtherBonusLimit) {\r\n\t\t\tamountOfIRC = amountOfIRC.mul(midEtherBonusValue).div(100);\r\n\t\t} else if (amountOfWei >= lowEtherBonusLimit) {\r\n\t\t\tamountOfIRC = amountOfIRC.mul(lowEtherBonusValue).div(100);\r\n\t\t}\r\n\t\tif (now >= absLowTimeBonusLimit) {\r\n\t\t\tamountOfIRC = amountOfIRC.mul(lowTimeBonusValue).div(100);\r\n\t\t} else if (now >= absMidTimeBonusLimit) {\r\n\t\t\tamountOfIRC = amountOfIRC.mul(midTimeBonusValue).div(100);\r\n\t\t} else if (now >= absHighTimeBonusLimit) {\r\n\t\t\tamountOfIRC = amountOfIRC.mul(highTimeBonusValue).div(100);\r\n\t\t}\r\n\r\n\t\t// Max sure it doesn't exceed remaining supply\r\n\t\tassert(amountOfIRC <= totalIRCAvailable);\r\n\r\n\t\t// Update total IRC balance\r\n\t\ttotalIRCAllocated = totalIRCAllocated + amountOfIRC;\r\n\r\n\t\t// Update user IRC balance\r\n\t\tuint256 balanceSafe = balances[msg.sender].add(amountOfIRC);\r\n\t\tbalances[msg.sender] = balanceSafe;\r\n\r\n\t\t// Update total WEI Invested\r\n\t\ttotalWEIInvested = totalWEIInvested.add(amountOfWei);\r\n\r\n\t\t// Update total WEI Invested by account\r\n\t\tuint256 contributedSafe = WEIContributed[msg.sender].add(amountOfWei);\r\n\t\tWEIContributed[msg.sender] = contributedSafe;\r\n\r\n\t\t// CHECK VALUES\r\n\t\tassert(totalIRCAllocated <= totalSupply);\r\n\t\tassert(totalIRCAllocated > 0);\r\n\t\tassert(balanceSafe > 0);\r\n\t\tassert(totalWEIInvested > 0);\r\n\t\tassert(contributedSafe > 0);\r\n\r\n\t\t// CREATE EVENT FOR SENDER\r\n\t\tCreatedIRC(msg.sender, amountOfIRC);\r\n\t}\r\n\t\r\n\t\r\n\t// CHANGE PARAMETERS METHODS\r\n\tfunction transferEther(address addressToSendTo, uint256 value) {\r\n\t\trequire(msg.sender == ownerAddress);\r\n\t\taddressToSendTo;\r\n\t\taddressToSendTo.transfer(value) ;\r\n\t}\t\r\n\tfunction changeAllowInvestment(bool _allowInvestment) {\r\n\t\trequire(msg.sender == ownerAddress);\r\n\t\tallowInvestment = _allowInvestment;\r\n\t}\r\n\tfunction changeSaleTimes(uint256 _saleStartTime, uint256 _saleEndTime) {\r\n\t\trequire(msg.sender == ownerAddress);\r\n\t\tsaleStartTime = _saleStartTime;\r\n\t\tsaleEndTime\t= _saleEndTime;\r\n\t}\r\n\tfunction changeEtherBonuses(uint256 _lowEtherBonusLimit, uint256 _lowEtherBonusValue, uint256 _midEtherBonusLimit, uint256 _midEtherBonusValue, uint256 _highEtherBonusLimit, uint256 _highEtherBonusValue) {\r\n\t\trequire(msg.sender == ownerAddress);\r\n\t\tlowEtherBonusLimit = _lowEtherBonusLimit;\r\n\t\tlowEtherBonusValue = _lowEtherBonusValue;\r\n\t\tmidEtherBonusLimit = _midEtherBonusLimit;\r\n\t\tmidEtherBonusValue = _midEtherBonusValue;\r\n\t\thighEtherBonusLimit = _highEtherBonusLimit;\r\n\t\thighEtherBonusValue = _highEtherBonusValue;\r\n\t}\r\n\tfunction changeTimeBonuses(uint256 _highTimeBonusLimit, uint256 _highTimeBonusValue, uint256 _midTimeBonusLimit, uint256 _midTimeBonusValue, uint256 _lowTimeBonusLimit, uint256 _lowTimeBonusValue) {\r\n\t\trequire(msg.sender == ownerAddress);\r\n\t\thighTimeBonusLimit = _highTimeBonusLimit;\r\n\t\thighTimeBonusValue = _highTimeBonusValue;\r\n\t\tmidTimeBonusLimit = _midTimeBonusLimit;\r\n\t\tmidTimeBonusValue = _midTimeBonusValue;\r\n\t\tlowTimeBonusLimit = _lowTimeBonusLimit;\r\n\t\tlowTimeBonusValue = _lowTimeBonusValue;\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"addressToSendTo\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"midTimeBonusValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highTimeBonusValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_saleStartTime\",\"type\":\"uint256\"},{\"name\":\"_saleEndTime\",\"type\":\"uint256\"}],\"name\":\"changeSaleTimes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lowEtherBonusValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highTimeBonusLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPresaleSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"WEIContributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"midTimeBonusLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IRC_PER_ETH_PRE_SALE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_highTimeBonusLimit\",\"type\":\"uint256\"},{\"name\":\"_highTimeBonusValue\",\"type\":\"uint256\"},{\"name\":\"_midTimeBonusLimit\",\"type\":\"uint256\"},{\"name\":\"_midTimeBonusValue\",\"type\":\"uint256\"},{\"name\":\"_lowTimeBonusLimit\",\"type\":\"uint256\"},{\"name\":\"_lowTimeBonusValue\",\"type\":\"uint256\"}],\"name\":\"changeTimeBonuses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highEtherBonusValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_lowEtherBonusLimit\",\"type\":\"uint256\"},{\"name\":\"_lowEtherBonusValue\",\"type\":\"uint256\"},{\"name\":\"_midEtherBonusLimit\",\"type\":\"uint256\"},{\"name\":\"_midEtherBonusValue\",\"type\":\"uint256\"},{\"name\":\"_highEtherBonusLimit\",\"type\":\"uint256\"},{\"name\":\"_highEtherBonusValue\",\"type\":\"uint256\"}],\"name\":\"changeEtherBonuses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highEtherBonusLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"midEtherBonusLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"midEtherBonusValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowInvestment\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lowTimeBonusLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalWEIInvested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allowInvestment\",\"type\":\"bool\"}],\"name\":\"changeAllowInvestment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalIRCAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lowTimeBonusValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lowEtherBonusLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IRC_PER_ETH_SALE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amountOfIRC\",\"type\":\"uint256\"}],\"name\":\"CreatedIRC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"DaRiCpAy","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2aecb080f95d4bf8af13da101bd77b8c2969eaef7093c20d0aea31de3b4d54e4"}]}