{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\n\r\ncontract BM_MasterClass_Reserved {\r\n    mapping (address => uint256) public holders;\r\n    uint256 public amount_investments = 0;\r\n    uint256 public countHolders = 0;\r\n\r\n    uint256 public dtStart = 1502737200; //14.08.2017 22:00 MSK\r\n    uint256 public dtEnd = 1502910000; //16.08.2017 22:00 MSK\r\n\r\n    uint256 public minSizeInvest = 100 finney;\r\n\r\n    address public owner;\r\n\r\n    event Investment(address holder, uint256 value);\r\n\r\n    function BM_MasterClass_Reserved(){\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier isOwner()\r\n    {\r\n        assert(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function changeOwner(address new_owner) isOwner {\r\n        assert(new_owner!=address(0x0));\r\n        assert(new_owner!=address(this));\r\n        owner = new_owner;\r\n    }\r\n\r\n    function getDataHolders(address holder) external constant returns(uint256)\r\n    {\r\n        return holders[holder];\r\n    }\r\n\r\n    function sendInvestmentsToOwner() isOwner {\r\n        assert(now >= dtEnd);\r\n        owner.transfer(this.balance);\r\n    }\r\n\r\n    function () payable {\r\n        assert(now < dtEnd);\r\n        assert(now >= dtStart);\r\n        assert(msg.value>=minSizeInvest);\r\n\r\n        if(holders[msg.sender] == 0){\r\n            countHolders += 1;\r\n        }\r\n        holders[msg.sender] += msg.value;\r\n        amount_investments += msg.value;\r\n        Investment(msg.sender, msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"countHolders\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minSizeInvest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"holders\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amount_investments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sendInvestmentsToOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dtEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"getDataHolders\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dtStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Investment\",\"type\":\"event\"}]","ContractName":"BM_MasterClass_Reserved","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1cf7b10ddf254f3502c2d54f98bf52e513c30f81d831e6ea47a2e96fcc321266"}]}