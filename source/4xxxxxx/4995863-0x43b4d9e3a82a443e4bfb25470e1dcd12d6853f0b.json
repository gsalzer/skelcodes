{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\nlibrary SafeMath {\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a + b;\r\n        require(c >= a);\r\n    }\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b <= a);\r\n        c = a - b;\r\n    }\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b > 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n\r\ncontract ERC20Interface {\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\r\n}\r\n\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    function Owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\n\r\ncontract Tangent is ERC20Interface, Owned {\r\n    using SafeMath for uint;\r\n\r\n    string public symbol;\r\n    string public  name;\r\n    uint8 public decimals;\r\n    uint public _totalSupply;\r\n\r\n    mapping(address => uint) balances;\r\n    mapping(address => mapping(address => uint)) allowed;\r\n\r\n    function Tangent() public {\r\n        symbol = \"TAN\";\r\n        name = \"Tangent\";\r\n        decimals = 18;\r\n        _totalSupply = 1000000 * 10**uint(decimals);\r\n        balances[owner] = _totalSupply;\r\n        Transfer(address(0), owner, _totalSupply);\r\n    }\r\n\r\n    function totalSupply() public constant returns (uint) {\r\n        return _totalSupply  - balances[address(0)];\r\n    }\r\n\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance) {\r\n        return balances[tokenOwner];\r\n    }\r\n\r\n    function transfer(address to, uint tokens) public returns (bool success) {\r\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n        balances[to] = balances[to].add(tokens);\r\n        Transfer(msg.sender, to, tokens);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint tokens) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        Approval(msg.sender, spender, tokens);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n        balances[from] = balances[from].sub(tokens);\r\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n        balances[to] = balances[to].add(tokens);\r\n        Transfer(from, to, tokens);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\r\n        return allowed[tokenOwner][spender];\r\n    }\r\n\r\n    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\r\n        allowed[msg.sender][spender] = tokens;\r\n        Approval(msg.sender, spender, tokens);\r\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\r\n        return true;\r\n    }\r\n\r\n    function () public payable {\r\n        revert();\r\n    }\r\n\r\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\r\n    }\r\n}\r\n\r\ncontract Slopes {\r\n    uint[9] purchased;\r\n    uint[9] slopes;\r\n    uint round;\r\n    function Slopes() public {\r\n        round = 0;\r\n        purchased = [\r\n            0,\r\n            533669923120630398976,\r\n            1448836313210046119936,\r\n            3129995208684548390912,\r\n            6258159088532505755648,\r\n            12107544817228717228032,\r\n            23069429949211428782080,\r\n            43633652091382656925696,\r\n            82231181009131438866432];\r\n        slopes = [\r\n            187381742286,\r\n            218539494201,\r\n            237931108758,\r\n            255741077107,\r\n            273532995464,\r\n            291920592258,\r\n            311220135425,\r\n            331627447634,\r\n            353284494958];\r\n    }\r\n}\r\n\r\ncontract CoinSale is Owned, Slopes {\r\n    using SafeMath for uint;\r\n    bool onSale;\r\n    address public tokenAddress;\r\n    address public tokenOwner;\r\n    uint numberPurchased;\r\n    uint initialWeiPerTan;\r\n    uint weiPerTangent;\r\n    uint purchaseGoal;\r\n    uint slope;\r\n    Tangent tokenContract;\r\n\r\n    event SlopeIncreased(uint slope);\r\n    event SaleEnded();\r\n    event Purchase(uint tangles, uint weis, uint weisPerTangent, uint numberPurchased);\r\n    \r\n    modifier isOnSale {\r\n        require(onSale == true);\r\n        _;\r\n    }\r\n    \r\n    function CoinSale(address tokenAddr) public {\r\n        onSale = true;\r\n        numberPurchased = 0;\r\n        purchaseGoal = 3*10**4 * 1 ether;\r\n        initialWeiPerTan = (1/10000) * 1 ether;\r\n        weiPerTangent = initialWeiPerTan;\r\n        tokenAddress = tokenAddr;\r\n        tokenContract = Tangent(tokenAddress);\r\n        tokenOwner = tokenContract.owner();\r\n        slope = slopes[0];\r\n    }\r\n\r\n    modifier autoIncreaseSlope() {\r\n        if (round+1 < purchased.length) {\r\n            if (numberPurchased >= purchased[round+1]) {\r\n                round++;\r\n                slope = slopes[round];\r\n                SlopeIncreased(slope);\r\n            }\r\n        }\r\n        _;\r\n    }\r\n    \r\n    function endSale() public onlyOwner returns (bool){\r\n        if (numberPurchased < purchaseGoal) {\r\n            return false;\r\n        }\r\n        onSale = false;\r\n        SaleEnded();\r\n        return true;\r\n    }\r\n    \r\n    function withdraw() public onlyOwner {\r\n        owner.transfer(this.balance);\r\n    }\r\n    \r\n    function () public payable isOnSale autoIncreaseSlope {\r\n        uint tangles = msg.value.mul(1 ether).div(weiPerTangent);\r\n        tokenContract.transferFrom(tokenOwner, msg.sender, tangles);\r\n        weiPerTangent = weiPerTangent.add(tangles.mul(slope).div(1 ether));\r\n        numberPurchased = numberPurchased.add(tangles);\r\n        Purchase(tangles, msg.value, weiPerTangent, numberPurchased);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"endSale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"slope\",\"type\":\"uint256\"}],\"name\":\"SlopeIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SaleEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tangles\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"weis\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"weisPerTangent\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"numberPurchased\",\"type\":\"uint256\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"CoinSale","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000c3d4230aa46168bac185dec95dc79b4ef595a0dc","Library":"","SwarmSource":"bzzr://1d9f3d41e86a6931f372592a13a338fdb0014731e58bcef6ff96de427cd3aa0b"}]}