{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.4;\r\n\r\n// TGE (ICO) Proxy\r\ncontract TgeProxy {\r\n\r\n  address[] public managers;\r\n  mapping (address => address) votesAddr;\r\n\r\n  bool locked = false;\r\n\r\n  function TgeProxy() {\r\n    // any number of managers can be added in constructor\r\n    managers.push(0xCE05A8Aa56E1054FAFC214788246707F5258c0Ae);\r\n    managers.push(0xBb62A710BDbEAF1d3AD417A222d1ab6eD08C37f5);\r\n    managers.push(0x009A55A3c16953A359484afD299ebdC444200EdB);\r\n  }\r\n\r\n  // gateway for tge contributions\r\n  // this function will start accepting ETH, when ico/tge address\r\n  // will be confirmed by all contract managers\r\n  function() payable isLocked {\r\n    votesAddr[managers[0]].transfer(msg.value);\r\n  }\r\n\r\n  // this function allows ico/tge manager to set final ico/tge address\r\n  // it can be overwritten until contract address is locked\r\n  function setTgeAddr(address addr) isManager isUnlocked {\r\n    votesAddr[msg.sender] = addr;\r\n    lockAttemp();\r\n  }\r\n  \r\n  function lockAttemp() private {\r\n    address addr = votesAddr[managers[0]];\r\n    bool lock = true;\r\n    for (uint8 i = 0; i < managers.length; ++i) {\r\n      if (votesAddr[managers[i]] == 0x0) {\r\n        lock = false;\r\n        break;\r\n      }\r\n      if (votesAddr[managers[i]] != addr) {\r\n        lock = false;\r\n        break;\r\n      }\r\n    }\r\n    if (lock) {\r\n      locked = true;\r\n    }\r\n  }\r\n  \r\n  // only for contract managers\r\n  modifier isManager() {\r\n    for (uint8 i = 0; i < managers.length; ++i) {\r\n      if (managers[i] == msg.sender) {\r\n        _;\r\n      }\r\n    }\r\n  }\r\n\r\n  // run code only in unlocked mode\r\n  modifier isUnlocked() {\r\n    assert(!locked);\r\n    _;\r\n  }\r\n\r\n  // run code only when tge address is locked\r\n  modifier isLocked() {\r\n    assert(locked);\r\n    _;\r\n  }\r\n  \r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"managers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setTgeAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"TgeProxy","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0ed425d60cd5354c40fe4c3e8c1f1317294b9cd929fdb587b07e1deff164636f"}]}