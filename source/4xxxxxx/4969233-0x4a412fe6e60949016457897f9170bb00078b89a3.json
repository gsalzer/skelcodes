{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.4;\r\n\r\n// mainnet: 0x4a412fe6e60949016457897f9170bb00078b89a3\r\n\r\ncontract SimpleMultisig {\r\n\r\n  // wallet\r\n  struct Tx {\r\n    address founder;\r\n    address destAddr;\r\n    uint256 amount;\r\n    bool active;\r\n  }\r\n  \r\n  mapping (address => bool) public founders;\r\n  Tx[] public txs;\r\n\r\n  function SimpleMultisig() public {\r\n    founders[0xf8e18E704Fb07282Eec78ADBEC6B584497d0B2e2] = true;\r\n    founders[0x0c621a12884c4F95B7Af1C46760a1bb7fE85ffaa] = true;\r\n    founders[0x6fc10338003273a46D7da62a126099998C981572] = true;\r\n  }\r\n\r\n  // contribute function\r\n  function() public payable {}\r\n\r\n  // one of founders can propose destination address for ethers\r\n  function proposeTx(address destAddr, uint256 amount) public isFounder {\r\n    txs.push(Tx({\r\n      founder: msg.sender,\r\n      destAddr: destAddr,\r\n      amount: amount,\r\n      active: true\r\n    }));\r\n  }\r\n\r\n  // another founder can approve specified tx and send it to destAddr\r\n  function approveTx(uint8 txIdx) public isFounder {\r\n    assert(txs[txIdx].founder != msg.sender);\r\n    assert(txs[txIdx].active);\r\n\r\n    txs[txIdx].active = false;\r\n    txs[txIdx].destAddr.transfer(txs[txIdx].amount);\r\n  }\r\n\r\n  // founder who created tx can cancel it\r\n  function cancelTx(uint8 txIdx) public {\r\n    assert(txs[txIdx].founder == msg.sender);\r\n    assert(txs[txIdx].active);\r\n\r\n    txs[txIdx].active = false;\r\n  }\r\n\r\n  // check if msg.sender is founder\r\n  modifier isFounder() {\r\n    assert(founders[msg.sender]);\r\n    _;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"txIdx\",\"type\":\"uint8\"}],\"name\":\"approveTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"destAddr\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"proposeTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"founders\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"txIdx\",\"type\":\"uint8\"}],\"name\":\"cancelTx\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"txs\",\"outputs\":[{\"name\":\"founder\",\"type\":\"address\"},{\"name\":\"destAddr\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"active\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"SimpleMultisig","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://18b1a110987309c24f492cd3a054080ec4483d698ce788d4ab663d712df76aa3"}]}