{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\ncontract token {function transfer(address receiver, uint amount){ }}\r\n\r\ncontract Crowdsale {\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    uint public amountRaised; uint public tokensCounter; uint tokensForSending;\r\n\r\n    token public tokenReward = token(0x9bB7Eb467eB11193966e726f3397d27136E79eb2);\r\n    address public beneficiary = 0xA4047af02a2Fd8e6BB43Cfe8Ab25292aC52c73f4;\r\n    bool public crowdsaleClosed = true;\r\n    bool public admin = false;\r\n    uint public price = 0.0000000333 ether;\r\n\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n\r\n    function () payable {\r\n        uint amount = msg.value;\r\n        if (crowdsaleClosed || amount < 0.1 ether) throw;\r\n        balanceOf[msg.sender] += amount;\r\n        amountRaised += amount;\r\n        tokensForSending = amount / price;\r\n        tokenReward.transfer(msg.sender, tokensForSending);\r\n        tokensCounter += tokensForSending;\r\n        FundTransfer(msg.sender, amount, true);\r\n        if (beneficiary.send(amount)) {\r\n            FundTransfer(beneficiary, amount, false);\r\n        }\r\n    }\r\n\r\n    function closeCrowdsale(bool closeType){\r\n        if (beneficiary == msg.sender) {\r\n            crowdsaleClosed = closeType;\r\n        }\r\n        else {\r\n            throw;\r\n        }\r\n    }\r\n\r\n    function getUnsoldTokensVal(uint val_) {\r\n        if (beneficiary == msg.sender) {\r\n            tokenReward.transfer(beneficiary, val_);\r\n        }\r\n        else {\r\n            throw;\r\n        }\r\n    }\r\n    \r\n    function checkAdmin() {\r\n        if (beneficiary == msg.sender) {\r\n            admin =  true;\r\n        }\r\n        else {\r\n            throw;\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"val_\",\"type\":\"uint256\"}],\"name\":\"getUnsoldTokensVal\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensCounter\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkAdmin\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"closeType\",\"type\":\"bool\"}],\"name\":\"closeCrowdsale\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1e45abf62fad8b0b8fa436911c5268a7fe4772b848493a14acba3f7475fd0418"}]}