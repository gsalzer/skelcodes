{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract ERC20Constant {\r\n    function balanceOf( address who ) constant returns (uint value);\r\n}\r\ncontract ERC20Stateful {\r\n    function transfer( address to, uint value) returns (bool ok);\r\n}\r\ncontract ERC20Events {\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\ncontract ERC20 is ERC20Constant, ERC20Stateful, ERC20Events {}\r\n\r\ncontract Owned {\r\n    address public owner;\r\n\r\n    function Owned() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract ClosedSale is Owned {\r\n\r\n    ERC20 public token;\r\n\r\n    // Amount of Token received per ETH\r\n    uint256 public tokenPerEth;\r\n\r\n    // Address that can buy the Token\r\n    address public buyer;\r\n\r\n    // Forwarding address\r\n    address public receiver;\r\n\r\n    event LogWithdrawal(uint256 _value);\r\n    event LogBought(uint _value);\r\n\r\n    function ClosedSale (\r\n        ERC20   _token,\r\n        address _buyer,\r\n        uint256 _tokenPerEth,\r\n        address _receiver\r\n    )\r\n        Owned()\r\n    {\r\n        token       = _token;\r\n        receiver    = _receiver;\r\n        buyer       = _buyer;\r\n        tokenPerEth = _tokenPerEth;\r\n    }\r\n\r\n    // Withdraw the token\r\n    function withdrawToken(uint256 _value) onlyOwner returns (bool ok) {\r\n        return ERC20(token).transfer(owner,_value);\r\n        LogWithdrawal(_value);\r\n    }\r\n\r\n    function buy(address beneficiary) payable {\r\n        require(beneficiary == buyer);\r\n\r\n        uint orderInTokens = msg.value * tokenPerEth;\r\n        token.transfer(beneficiary, orderInTokens);\r\n        receiver.transfer(msg.value);\r\n\r\n        LogBought(orderInTokens);\r\n    }\r\n\r\n    function() payable {\r\n        buy(msg.sender);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"tokenPerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_buyer\",\"type\":\"address\"},{\"name\":\"_tokenPerEth\",\"type\":\"uint256\"},{\"name\":\"_receiver\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"LogWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"LogBought\",\"type\":\"event\"}]","ContractName":"ClosedSale","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000f5d2fb29fb7d3cfee444a200298f468908cc94200000000000000000000000000ecd3949d7b9141e10c0e9d068310ec92880ecc0000000000000000000000000000000000000000000000000000000000002dbc000000000000000000000000fe95e04a628087fcdd5f278e61f148b47471af4a","Library":"","SwarmSource":"bzzr://9035f495cc51ed32347f06214c08021dca50ea53a22f5d0072ef645ea06de0e5"}]}