{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16; //YourMomToken\r\n\r\ncontract owned {\t//Defines contract Owner\r\n\taddress public owner;\r\n\r\n\t//Events\r\n\tevent TransferOwnership (address indexed _owner, address indexed _newOwner);\t//Notifies about the ownership transfer\r\n\r\n\t//Constrctor function\r\n\tfunction owned() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) onlyOwner() public {\r\n\t\tTransferOwnership (owner, newOwner);\r\n\t\towner = newOwner;\r\n\t}\r\n\t\r\n\t//Modifiers\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyPayloadSize(uint size) {\t\t//Mitigates ERC20 Short Address Attack\r\n\t\tassert(msg.data.length >= size + 4);\r\n\t\t_;\r\n\t}\r\n}\r\n\r\n\r\ncontract YourMomToken is owned {\r\n\tmapping (address => uint256) public balanceOf;\t\t//This creates an array with all balances\r\n\tmapping (address => mapping (address => uint256)) public allowance;\t//This creates an array of arrays with adress->adress=value\r\n\tuint256 public totalSupply;\r\n\tstring public name;\r\n\tstring public symbol;\r\n\tuint8 public decimals;\r\n\r\n\t//Events\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\t\t//Declaring the event function to help clients like the Ethereum Wallet keep track of activities happening in the contract\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint _value);\t//Notifies clients about the Approval\r\n\tevent Burn(address indexed from, uint256 value);\t\t\t\t\t\t\t\t//This notifies clients about the amount burnt\r\n\r\n\t//Constructor function\r\n\tfunction YourMomToken(string tokenName, string tokenSymbol, uint256 initialSupplyInEther) public {\r\n\t\tname = tokenName;\t\t\t\t\t\t\t\t//Set the name for display purposes\r\n\t\tsymbol = tokenSymbol;\t\t\t\t\t\t\t//Set the symbol for display purposes\r\n\t\tdecimals = 18;\t\t\t\t\t\t\t\t\t//Amount of decimals for display purposes\r\n\t\ttotalSupply = initialSupplyInEther * 10**18;\t//Defines the initial supply as the total supply (in wei)\r\n\t\tbalanceOf[msg.sender] = totalSupply;\t\t\t//Give the creator all initial tokens\r\n\t}\r\n\r\n\t//Call functions\r\n\tfunction name() public constant returns (string) { return name; }\r\n\tfunction symbol() public constant returns (string) { return symbol; }\r\n\tfunction decimals() public constant returns (uint8) { return decimals; }\r\n\tfunction totalSupply() public constant returns (uint256) { return totalSupply; }\r\n\tfunction balanceOf(address _owner) public constant returns (uint256 balance) { return balanceOf[_owner]; }\r\n\tfunction allowance(address _owner, address _spender) public constant returns (uint256 remaining) { return allowance[_owner][_spender]; }\r\n\r\n\tfunction transfer(address _to, uint256 _value) onlyPayloadSize (2 * 32) public returns (bool success) {\t//Transfer _value tokens from msg.sender to '_to'\r\n\t\t_transfer(msg.sender, _to, _value);\t\t//Call the _transfer function (internal). Calling it it's cleaner than write two identical functions for 'transfer' and 'transferFrom'\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) onlyPayloadSize (3 * 32) public returns (bool success) {\t//Transfer tokens from other address\r\n\t\trequire(_value <= allowance[_from][msg.sender]);\t//Check allowance array, if '_from' has authorized 'msg.sender' spend <= _value\r\n\t\t_transfer(_from, _to, _value);\t\t\t\t\t\t//Send '_value' tokens to '_to' in behalf of '_from'\r\n\t\tallowance[_from][msg.sender] -= _value;\t\t\t\t//Reduce msg.sender's allowance to spend '_from's tokens in '_value'\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tfunction _transfer(address _from, address _to, uint _value) internal returns (bool success) {\r\n\t\trequire(_to != 0x0);\t\t\t\t\t\t\t\t\t//Prevent transfer to 0x0 address. Use burn() instead\r\n\t\trequire(balanceOf[_from] >= _value);\t\t\t\t\t//Check if the sender has enough\r\n\t\trequire(balanceOf[_to] + _value >= balanceOf[_to]);\t\t//Check for overflows\r\n\t\trequire(_value != 0);\t\t\t\t\t\t\t\t\t//Prevents a transaction of '0' to be executed\r\n\t\trequire(_from != _to);\t\t\t\t\t\t\t\t\t//Prevents sending a transaction to yourself\r\n\t\tbalanceOf[_from] -= _value;\t\t\t\t\t\t\t\t//Subtract from the sender\r\n\t\tbalanceOf[_to] += _value;\t\t\t\t\t\t\t\t//Add the same to the recipient\r\n\t\tTransfer(_from, _to, _value);\t\t\t\t\t\t\t//Notify anyone listening that this transfer took place\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool success) {\t//Set allowance for other address\r\n\t\trequire((_value == 0) || (allowance[msg.sender][_spender] == 0));\t\t//Mitigates the approve/transfer attack (race condition)\r\n\t\trequire(_value != allowance[msg.sender][_spender]);\t//Prevents setting allowance for the already setted value\r\n\t\tallowance[msg.sender][_spender] = _value;\t\t\t//Set allowance array\r\n\t\tApproval(msg.sender, _spender, _value);\t\t\t\t//Call the Approval event\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction burn(uint256 _value) public returns (bool success) {\t//Function to destroy tokens\r\n\t\trequire(balanceOf[msg.sender] >= _value);\t\t\t//Check if the targeted balance has enough\r\n\t\trequire(_value != 0);\t\t\t\t\t\t\t\t//Prevents a transaction of '0' to be executed\r\n\t\tbalanceOf[msg.sender] -= _value;\t\t\t\t\t//Subtract from the targeted balance\r\n\t\ttotalSupply -= _value;\t\t\t\t\t\t\t\t//Update totalSupply\r\n\t\tBurn(msg.sender, _value);\t\t\t\t\t\t\t//Call the Event to notice about the burn\r\n\t\treturn true;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"initialSupplyInEther\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"}]","ContractName":"YourMomToken","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000f4240000000000000000000000000000000000000000000000000000000000000000c596f75724d6f6d546f6b656e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003594d540000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://ac8a52f5508b15e27d5f9656035c8bd5d30e59dbbe12dd9d49de432d5746a751"}]}