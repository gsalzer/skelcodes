{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.10;\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\tfunction mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a / b;\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\n/**\r\n * @title Owned\r\n * @dev Owner contract to add owner checks\r\n */\r\ncontract Owned {\r\n\taddress public owner;\r\n\r\n\tfunction Owned () {\r\n\t\towner = msg.sender;\t\r\n\t}\t\r\n\r\n\tfunction transferOwner(address newOwner) public onlyOwner {\r\n\t\towner = newOwner;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n}\r\n\r\n/**\r\n * @title Payload\r\n * @dev Fix for the ERC20 short address attack.\r\n */\r\ncontract Payload {\r\n\tmodifier onlyPayloadSize(uint size) {\r\n\t\t// require(msg.data.length >= size + 4);\r\n\t\t_;\r\n  \t}\r\n}\r\n\r\ncontract CryptoTokenConstants {\r\n\tuint256 constant PRE_ICO_ALLOCATION = 6;\r\n\tuint256 constant ICO_ALLOCATION = 74;\r\n\tuint256 constant TEAM_ALLOCATION = 10;\r\n\tuint256 constant RESERVED_ALLOCATION = 10;\r\n\r\n\tuint256 constant PRE_ICO_BONUS = 50;\r\n\tuint256 constant ICO_PHASE_01_BONUS = 20;\r\n\tuint256 constant ICO_PHASE_02_BONUS = 10;\r\n\tuint256 constant ICO_PHASE_03_BONUS = 5;\r\n\tuint256 constant ICO_PHASE_04_BONUS = 0;\r\n\r\n\tuint256 constant BUY_RATE = 1500; \r\n\tuint256 constant BUY_PRICE = (10 ** 18) / BUY_RATE;\r\n\r\n\t// 1 ETH = ? inETH\r\n\tuint256 constant PRE_ICO_RATE = 2250;\r\n\tuint256 constant ICO_PHASE_01_RATE = 1800;\r\n\tuint256 constant ICO_PHASE_02_RATE = 1650;\r\n\tuint256 constant ICO_PHASE_03_RATE = 1575;\r\n\tuint256 constant ICO_PHASE_04_RATE = 1500;\r\n\r\n\t// 1 inETH = ? ETH\r\n\tuint256 constant PRE_ICO_BUY_PRICE = uint256((10 ** 18) / 2250);\r\n\tuint256 constant ICO_PHASE_01_BUY_PRICE = uint256((10 ** 18) / 1800);\r\n\tuint256 constant ICO_PHASE_02_BUY_PRICE = uint256((10 ** 18) / 1650);\r\n\tuint256 constant ICO_PHASE_03_BUY_PRICE = uint256((10 ** 18) / 1575);\r\n\tuint256 constant ICO_PHASE_04_BUY_PRICE = uint256((10 ** 18) / 1500);\r\n}\r\n\r\n/**\r\n * @title CryptoToken\r\n * @dev CryptoToken implementation\r\n */\r\ncontract CryptoToken is Owned, Payload, CryptoTokenConstants {\r\n\tusing SafeMath for uint256;\r\n\r\n\tstring public name;\r\n\tstring public symbol;\r\n\tuint8 public decimals;\r\n\taddress public wallet;\r\n\r\n\tuint256 public totalSupply;\r\n\tuint256 public transSupply;\r\n\tuint256 public availSupply;\r\n\r\n\tuint256 public totalContributors;\r\n\tuint256 public totalContribution;\r\n\r\n\tmapping (address => bool) developers;\r\n\tmapping (address => uint256) contributions;\r\n\tmapping (address => uint256) balances;\r\n\tmapping (address => mapping (address => uint256)) allowed;\r\n\r\n\tmapping (address => bool) freezes;\r\n\r\n\tstruct SpecialPrice {\r\n        uint256 buyPrice;\r\n        uint256 sellPrice;\r\n        bool exists;\r\n    }\r\n\r\n\tmapping (address => SpecialPrice) specialPrices;\r\n\r\n\tuint256 public buyPrice;\r\n\tuint256 public sellPrice;\r\n\r\n\tbool public tokenStatus = true;\r\n\tbool public transferStatus = true;\r\n\tbool public buyStatus = true;\r\n\tbool public sellStatus = false;\r\n\tbool public refundStatus = false;\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\tevent Approval(address indexed approver, address indexed spender, uint256 value);\r\n\tevent Price(uint256 buy, uint256 sell);\r\n\tevent Buy(address indexed addr , uint256 value , uint256 units);\r\n\tevent Sell(address indexed addr , uint256 value , uint256 units);\r\n\tevent Refund(address indexed addr , uint256 value);\r\n\r\n\tfunction CryptoToken (string _name, string _symbol, uint8 _decimals, address _wallet, uint256 _totalSupply, uint256 _buyPrice, uint256 _sellPrice) {\r\n\t\tname = bytes(_name).length > 0 ? _name : \"IntelliETH\";\r\n\t\tsymbol = bytes(_symbol).length > 0 ? _symbol : \"INETH\";\r\n\t\tdecimals = _decimals > 0 ? _decimals : 18;\r\n\t\twallet = _wallet != 0x0 ? _wallet : 0x634dA488e1E122A9f2ED83e91ccb6Db3414e3984;\r\n\t\t\r\n\t\t_totalSupply = _totalSupply > 0 ? _totalSupply : 500000000;\r\n\r\n\t\ttotalSupply = _totalSupply * (10 ** uint256(decimals));\r\n\t\tavailSupply = totalSupply;\r\n\t\ttransSupply = 0;\r\n\r\n\t\tbalances[owner] = totalSupply;\r\n\r\n\t\tbuyPrice = _buyPrice > 0 ? _buyPrice : 444444444444444;\r\n\t\tsellPrice = _sellPrice > 0 ? _sellPrice : 0;\r\n\r\n\t\tdevelopers[owner] = true;\r\n\t\tdevelopers[wallet] = true;\r\n\t}\t\r\n\r\n\tfunction balanceOf(address addr) public constant returns (uint256) {\r\n\t\treturn balances[addr];\r\n\t}\r\n\r\n\tfunction transfer(address to, uint256 value) public onlyPayloadSize(2 * 32) returns (bool) {\r\n\t\treturn _transfer(msg.sender, to, value);\r\n\t}\r\n\r\n\tfunction allowance(address approver, address spender) public constant returns (uint256) {\r\n\t\treturn allowed[approver][spender];\r\n\t}\r\n\r\n\tfunction transferFrom(address approver, address to, uint256 value) public onlyPayloadSize(3 * 32) returns (bool) {\r\n\t\trequire(allowed[approver][msg.sender] - value >= 0);\r\n\t\trequire(allowed[approver][msg.sender] - value < allowed[approver][msg.sender]);\r\n\r\n\t\tallowed[approver][msg.sender] = allowed[approver][msg.sender].sub(value);\r\n\t\treturn _transfer(approver, to, value);\r\n\t}\r\n\r\n\tfunction approve(address spender, uint256 value) public returns (bool) {\r\n\t\treturn _approve(msg.sender , spender , value);\r\n\t}\r\n\r\n\tfunction increaseApproval(address spender , uint256 value) public returns (bool) {\r\n\t\trequire(value > 0);\r\n\t\trequire(allowed[msg.sender][spender] + value > allowed[msg.sender][spender]);\r\n\r\n\t\tvalue = allowed[msg.sender][spender].add(value);\r\n\t\treturn _approve(msg.sender , spender , value);\r\n\t}\r\n\r\n\tfunction decreaseApproval(address spender , uint256 value) public returns (bool) {\r\n\t\trequire(value > 0);\r\n\t\trequire(allowed[msg.sender][spender] - value >= 0);\t\r\n\t\trequire(allowed[msg.sender][spender] - value < allowed[msg.sender][spender]);\t\r\n\r\n\t\tvalue = allowed[msg.sender][spender].sub(value);\r\n\t\treturn _approve(msg.sender , spender , value);\r\n\t}\r\n\r\n\tfunction freeze(address addr, bool status) public onlyOwner returns (bool) {\r\n\t\tfreezes[addr] = status;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction frozen(address addr) public constant onlyOwner returns (bool) {\r\n\t\treturn freezes[addr];\r\n\t}\r\n\r\n\tfunction setWallet(address addr) public onlyOwner returns (bool) {\r\n\t\twallet = addr;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setDeveloper(address addr , bool status) public onlyOwner returns (bool) {\r\n\t\tdevelopers[addr] = status;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getDeveloper(address addr) public constant onlyOwner returns (bool) {\r\n\t\treturn developers[addr];\r\n\t}\r\n\r\n\tfunction getContribution(address addr) public constant onlyOwner returns (uint256) {\r\n\t\treturn contributions[addr];\r\n\t}\r\n\r\n\tfunction setSpecialPrice(address addr, uint256 _buyPrice, uint256 _sellPrice) public onlyOwner returns (bool) {\r\n        specialPrices[addr] = SpecialPrice(_buyPrice, _sellPrice, true);\r\n        return true;\r\n    }\r\n\r\n    function delSpecialPrice(address addr) public onlyOwner returns (bool) {\r\n        delete specialPrices[addr];\r\n        return true;\r\n    }\r\n\r\n\tfunction price(uint256 _buyPrice, uint256 _sellPrice) public onlyOwner returns (bool) {\r\n\t\tbuyPrice = _buyPrice;\r\n\t\tsellPrice = _sellPrice;\r\n\t\tPrice(buyPrice, sellPrice);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setBuyPrice(uint256 _buyPrice) public onlyOwner returns (bool) {\r\n\t\tbuyPrice = _buyPrice;\r\n\t\tPrice(buyPrice, sellPrice);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setSellPrice(uint256 _sellPrice) public onlyOwner returns (bool) {\r\n\t\tsellPrice = _sellPrice;\r\n\t\tPrice(buyPrice, sellPrice);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction getBuyPrice(address addr) public constant returns (uint256) {\r\n\t\tSpecialPrice memory specialPrice = specialPrices[addr];\r\n\t\tif(specialPrice.exists) {\r\n\t\t\treturn specialPrice.buyPrice;\r\n\t\t}\r\n\t\treturn buyPrice;\r\n\t}\r\n\r\n\tfunction getSellPrice(address addr) public constant returns (uint256) {\r\n\t\tSpecialPrice memory specialPrice = specialPrices[addr];\r\n\t\tif(specialPrice.exists) {\r\n\t\t\treturn specialPrice.sellPrice;\r\n\t\t}\r\n\t\treturn sellPrice;\r\n\t}\r\n\r\n\tfunction () public payable {\r\n\t\tbuy();\r\n\t}\r\n\r\n\tfunction withdraw() public onlyOwner returns (bool) {\r\n\t\tmsg.sender.transfer(this.balance);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction buy() public payable returns(uint256) {\r\n\t\trequire(msg.value > 0);\r\n\t\trequire(tokenStatus == true || developers[msg.sender] == true);\r\n\t\trequire(buyStatus == true);\r\n\r\n\t\tuint256 buyPriceSpecial = getBuyPrice(msg.sender);\r\n\t\tuint256 bigval = msg.value * (10 ** uint256(decimals));\r\n\t\tuint256 units =  bigval / buyPriceSpecial;\r\n\r\n\t\t_transfer(owner , msg.sender , units);\r\n\t\tBuy(msg.sender , msg.value , units);\r\n\t\t\r\n\t\ttotalContributors = totalContributors.add(1);\r\n\t\ttotalContribution = totalContribution.add(msg.value);\r\n\t\tcontributions[msg.sender] = contributions[msg.sender].add(msg.value);\r\n\r\n\t\t_forward(msg.value);\r\n\t\treturn units;\r\n\t}\r\n\r\n\tfunction sell(uint256 units) public payable returns(uint256) {\r\n\t\trequire(units > 0);\r\n\t\trequire(tokenStatus == true || developers[msg.sender] == true);\r\n\t\trequire(sellStatus == true);\r\n\r\n\t\tuint256 sellPriceSpecial = getSellPrice(msg.sender);\r\n\t\tuint256 value = ((units * sellPriceSpecial) / (10 ** uint256(decimals)));\r\n\t\t_transfer(msg.sender , owner , units);\r\n\r\n\t\tSell(msg.sender , value , units);\r\n\t\tmsg.sender.transfer(value);\t\r\n\t\treturn value;\r\n\t}\r\n\r\n\tfunction refund() public payable returns(uint256) {\r\n\t\trequire(contributions[msg.sender] > 0);\r\n\t\trequire(tokenStatus == true || developers[msg.sender] == true);\r\n\t\trequire(refundStatus == true);\r\n\r\n\t\tuint256 value = contributions[msg.sender];\r\n\t\tcontributions[msg.sender] = 0;\r\n\r\n\t\tRefund(msg.sender, value);\r\n\t\tmsg.sender.transfer(value);\t\r\n\t\treturn value;\r\n\t}\r\n\r\n\tfunction setTokenStatus(bool _tokenStatus) public onlyOwner returns (bool) {\r\n\t\ttokenStatus = _tokenStatus;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setTransferStatus(bool _transferStatus) public onlyOwner returns (bool) {\r\n\t\ttransferStatus = _transferStatus;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setBuyStatus(bool _buyStatus) public onlyOwner returns (bool) {\r\n\t\tbuyStatus = _buyStatus;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setSellStatus(bool _sellStatus) public onlyOwner returns (bool) {\r\n\t\tsellStatus = _sellStatus;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction setRefundStatus(bool _refundStatus) public onlyOwner returns (bool) {\r\n\t\trefundStatus = _refundStatus;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction _transfer(address from, address to, uint256 value) private onlyPayloadSize(3 * 32) returns (bool) {\r\n\t\trequire(to != address(0));\r\n\t\trequire(from != to);\r\n\t\trequire(value > 0);\r\n\r\n\t\trequire(balances[from] - value >= 0);\r\n\t\trequire(balances[from] - value < balances[from]);\r\n\t\trequire(balances[to] + value > balances[to]);\r\n\r\n\t\trequire(freezes[from] == false);\r\n\t\trequire(tokenStatus == true || developers[msg.sender] == true);\r\n\t\trequire(transferStatus == true);\r\n\r\n\t\tbalances[from] = balances[from].sub(value);\r\n\t\tbalances[to] = balances[to].add(value);\r\n\r\n\t\t_addSupply(to, value);\r\n\t\t_subSupply(from, value);\r\n\t\t\r\n\t\tTransfer(from, to, value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction _forward(uint256 value) internal returns (bool) {\r\n\t\twallet.transfer(value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction _approve(address owner, address spender, uint256 value) private returns (bool) {\r\n\t\trequire(value > 0);\r\n\t\tallowed[owner][spender] = value;\r\n\t\tApproval(owner, spender, value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction _addSupply(address to, uint256 value) private returns (bool) {\r\n\t\tif(owner == to) {\r\n\t\t\trequire(availSupply + value > availSupply);\r\n\t\t\trequire(transSupply - value >= 0);\r\n\t\t\trequire(transSupply - value < transSupply);\r\n\t\t\tavailSupply = availSupply.add(value);\r\n\t\t\ttransSupply = transSupply.sub(value);\r\n\t\t\trequire(balances[owner] == availSupply);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction _subSupply(address from, uint256 value) private returns (bool) {\r\n\t\tif(owner == from) {\r\n\t\t\trequire(availSupply - value >= 0);\r\n\t\t\trequire(availSupply - value < availSupply);\r\n\t\t\trequire(transSupply + value > transSupply);\r\n\t\t\tavailSupply = availSupply.sub(value);\r\n\t\t\ttransSupply = transSupply.add(value);\r\n\t\t\trequire(balances[owner] == availSupply);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_buyStatus\",\"type\":\"bool\"}],\"name\":\"setBuyStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_refundStatus\",\"type\":\"bool\"}],\"name\":\"setRefundStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenStatus\",\"type\":\"bool\"}],\"name\":\"setTokenStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"approver\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_buyPrice\",\"type\":\"uint256\"},{\"name\":\"_sellPrice\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_transferStatus\",\"type\":\"bool\"}],\"name\":\"setTransferStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sellStatus\",\"type\":\"bool\"}],\"name\":\"setSellStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_buyPrice\",\"type\":\"uint256\"}],\"name\":\"setBuyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getDeveloper\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"refundStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"availSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setDeveloper\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"freeze\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getBuyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"frozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"approver\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"units\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"delSpecialPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"_buyPrice\",\"type\":\"uint256\"},{\"name\":\"_sellPrice\",\"type\":\"uint256\"}],\"name\":\"setSpecialPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalContributors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sellPrice\",\"type\":\"uint256\"}],\"name\":\"setSellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"name\":\"_buyPrice\",\"type\":\"uint256\"},{\"name\":\"_sellPrice\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"buy\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"sell\",\"type\":\"uint256\"}],\"name\":\"Price\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"units\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"units\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"}]","ContractName":"CryptoToken","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fcf0998715908b903c217e4f58bcf90843cc6d45feb63889bf1d7e425960d665"}]}