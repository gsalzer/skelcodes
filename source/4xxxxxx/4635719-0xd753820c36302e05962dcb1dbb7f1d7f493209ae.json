{"status":"1","message":"OK","result":[{"SourceCode":"contract Rental {\r\n    enum ItemState {\r\n        Idle, Busy\r\n    }\r\n    \r\n    struct Item {\r\n        address owner;\r\n        string name;\r\n        string serialNumber;\r\n        ItemState state;\r\n    }\r\n    \r\n    enum RequestState {\r\n        Pending, Canceled, Accepted, Finished\r\n    }\r\n    \r\n    struct Request {\r\n        address client;\r\n        uint itemId;\r\n        uint fee;\r\n        string start;\r\n        string end;\r\n        RequestState state;\r\n    }\r\n    \r\n    Item[] public items;\r\n    Request[] public requests;\r\n    \r\n    function getItemsLength() public constant returns (uint) {\r\n        return items.length;\r\n    }\r\n    \r\n    function getRequestsLength() public constant returns (uint) {\r\n        return requests.length;\r\n    }\r\n    \r\n    function addItem(string _name, string _serialNumber) public returns (uint) {\r\n        Item memory newItem = Item({\r\n          owner: msg.sender,\r\n          name: _name,\r\n          serialNumber: _serialNumber,\r\n          state: ItemState.Idle\r\n        });\r\n        return items.push(newItem) - 1;\r\n    }\r\n    \r\n    function addRequest(uint _itemId, string _start, string _end) public payable returns (uint) {\r\n        Request memory newRequest = Request({\r\n           client: msg.sender,\r\n           itemId: _itemId,\r\n           fee: msg.value,\r\n           start: _start,\r\n           end: _end,\r\n           state: RequestState.Pending\r\n        });\r\n        return requests.push(newRequest) - 1;\r\n    }\r\n    \r\n    function cancelRequest(uint _requestId) public {\r\n        Request storage req = requests[_requestId];\r\n        require(req.client == msg.sender);\r\n        require(req.state == RequestState.Pending);\r\n        req.state = RequestState.Canceled;\r\n        msg.sender.transfer(req.fee);\r\n    }\r\n    \r\n    function acceptRequest(uint _requestId) public {\r\n        Request storage req = requests[_requestId];\r\n        require(req.state == RequestState.Pending);\r\n        Item storage item = items[req.itemId];\r\n        require(item.owner == msg.sender);\r\n        require(item.state == ItemState.Idle);\r\n        item.state = ItemState.Busy;\r\n        req.state = RequestState.Accepted;\r\n        msg.sender.transfer(req.fee);\r\n    }\r\n    \r\n    function acceptReturning(uint _requestId) public {\r\n        Request storage req = requests[_requestId];\r\n        require(req.state == RequestState.Accepted);\r\n        Item storage item = items[req.itemId];\r\n        require(item.owner == msg.sender);\r\n        require(item.state == ItemState.Busy);\r\n        item.state = ItemState.Idle;\r\n        req.state = RequestState.Finished;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getItemsLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"cancelRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"acceptRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"acceptReturning\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_serialNumber\",\"type\":\"string\"}],\"name\":\"addItem\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requests\",\"outputs\":[{\"name\":\"client\",\"type\":\"address\"},{\"name\":\"itemId\",\"type\":\"uint256\"},{\"name\":\"fee\",\"type\":\"uint256\"},{\"name\":\"start\",\"type\":\"string\"},{\"name\":\"end\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"},{\"name\":\"_start\",\"type\":\"string\"},{\"name\":\"_end\",\"type\":\"string\"}],\"name\":\"addRequest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"serialNumber\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRequestsLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Rental","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b5a8ffb37ef7c31309b611c9072b6d3fc1b99ccf6de41504767ffa5cb1f29add"}]}