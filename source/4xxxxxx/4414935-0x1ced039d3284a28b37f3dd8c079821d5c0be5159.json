{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * Copyright 2017 Icofunding S.L. (https://icofunding.com)\r\n * \r\n */\r\n\r\n// Interface\r\ncontract PriceModel {\r\n  function getPrice(uint block) constant returns (uint);\r\n}\r\n\r\n/*\r\n * Different prices depending on the block\r\n */\r\ncontract Phased is PriceModel {\r\n  uint[] prices;\r\n  uint[] blocks;\r\n\r\n  // prices: list of number of tokens (plus with decimals) to be bough by 1 ether\r\n  // blocks: list of blocks when the price changes. Must be sorted\r\n  // List of prices and list of blocks must have the same length\r\n  // Maximum number of phases is 10\r\n  function Phased(uint[] _prices, uint[] _blocks) {\r\n    require(_prices.length == _blocks.length && _prices.length <= 10);\r\n    require(isSorted(_blocks));\r\n\r\n    prices = _prices;\r\n    blocks = _blocks;\r\n  }\r\n\r\n  // Returns the price for a specific block\r\n  function getPrice(uint _block) public constant returns (uint price) {\r\n    // Binary search of the value in the array\r\n    uint min = 0;\r\n    uint max = blocks.length-1;\r\n    while (max > min) {\r\n      uint mid = (max + min + 1)/ 2;\r\n      if (blocks[mid] <= _block) {\r\n        min = mid;\r\n      } else {\r\n        max = mid-1;\r\n      }\r\n    }\r\n\r\n    return prices[min];\r\n  }\r\n\r\n  // Checks if an uint array is sorted\r\n  function isSorted(uint[] list) internal constant returns (bool sorted) {\r\n    sorted = true;\r\n\r\n    for(uint i = 1; i < list.length; i++) {\r\n      if(list[i-1] > list[i])\r\n        sorted = false;\r\n    }\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_prices\",\"type\":\"uint256[]\"},{\"name\":\"_blocks\",\"type\":\"uint256[]\"}],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"Phased","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000119e47f21381f40000000000000000000000000000000000000000000000000010f0cf064dd592000000000000000000000000000000000000000000000000001043561a882930000000000000000000000000000000000000000000000000000f95dd2ec27cce000000000000000000000000000000000000000000000000000ee86442fcd06c0000000000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000436e16000000000000000000000000000000000000000000000000000000000043855d0000000000000000000000000000000000000000000000000000000000441107000000000000000000000000000000000000000000000000000000000044b3f800000000000000000000000000000000000000000000000000000000004556e9","Library":"","SwarmSource":"bzzr://0b282cd8b06de04b04c089ca232ef3da26bd809c973b9727fe1fd6f8b55bf6dc"}]}