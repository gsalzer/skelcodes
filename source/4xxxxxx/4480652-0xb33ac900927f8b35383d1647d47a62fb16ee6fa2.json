{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint a, uint b) internal returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint a, uint b) internal returns (uint) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint a, uint b) internal returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint a, uint b) internal returns (uint) {\r\n    uint c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a < b ? a : b;\r\n  }\r\n}\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount);\r\n    function balanceOf(address) returns (uint256);\r\n}\r\n\r\ncontract Crowdsale {\r\n    address public beneficiary;\r\n    uint public tokenBalance;\r\n    uint public amountRaised;\r\n    uint public deadline;\r\n    uint dollar_exchange;\r\n    uint test_factor;\r\n    uint start_time;\r\n    uint price;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    /**\r\n     * Constrctor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    function Crowdsale() {\r\n        tokenBalance = 5000000;  //For display purposes\r\n        beneficiary = 0xD83A4537f917feFf68088eAB619dC6C529A55ad4;\r\n        start_time = now;\r\n        deadline = start_time + 14 * 1 days;    \r\n        dollar_exchange = 280;\r\n        tokenReward = token(0x2ca8e1fbcde534c8c71d8f39864395c2ed76fb0e);  //chozun coin address\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n    **/\r\n\r\n    function () payable beforeDeadline {\r\n\r\n        uint amount = msg.value;\r\n        balanceOf[msg.sender] += amount;\r\n        amountRaised += amount;\r\n        price = SafeMath.div(0.35 * 1 ether, dollar_exchange);\r\n        if (amount >= 37.5 ether && amount < 83 ether) {price = SafeMath.div(SafeMath.mul(100, price), 110);} \r\n        if (amount >= 87.5 ether && amount < 166 ether) {price = SafeMath.div(SafeMath.mul(100, price), 115);} \r\n        if (amount >= 175 ether) {price = SafeMath.div(SafeMath.mul(100, price), 120);}\r\n        tokenBalance = SafeMath.sub(tokenBalance, SafeMath.div(amount, price));\r\n        if (tokenBalance < 0 ) { revert(); }\r\n        tokenReward.transfer(msg.sender, SafeMath.div(amount * 1 ether, price));\r\n        FundTransfer(msg.sender, amount, true);\r\n        \r\n    }\r\n\r\n    modifier afterDeadline() { if (now >= deadline) _; }\r\n    modifier beforeDeadline() { if (now <= deadline) _; }\r\n\r\n    function safeWithdrawal() afterDeadline {\r\n\r\n        if (beneficiary.send(amountRaised)) {\r\n            FundTransfer(beneficiary, amountRaised, false);\r\n            tokenReward.transfer(beneficiary, tokenReward.balanceOf(this));\r\n            tokenBalance = 0;\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c89ded2ac5405fd8bc33b9d85e589a45d6bc96438c1eb93a579d1616c4f7c03c"}]}