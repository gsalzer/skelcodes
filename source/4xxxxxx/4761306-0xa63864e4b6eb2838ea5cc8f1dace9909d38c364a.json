{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n/* Function required from STCn main contract */\r\ncontract ERC20Token {\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {}\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\r\n    \r\n}\r\n\r\ncontract MultiSend {\r\n    ERC20Token public _STCnContract;\r\n    address public _multiSendOwner;\r\n    uint256 public tokensApproved;\r\n    \r\n    function MultiSend () {\r\n        address c = 0x420C42cE1370c0Ec3ca87D9Be64A7002E78e6709; // set STCn contract address\r\n        _STCnContract = ERC20Token(c); \r\n        _multiSendOwner = msg.sender;\r\n        tokensApproved = 0; // set to 0 first as allowance to contract can't be set yet\r\n    }\r\n    \r\n    /* Before first sending, make sure to allow this contract spending from token contract with function approve(address _spender, uint256 _value)\r\n    ** and to update tokensApproved with function updateTokensApproved () */\r\n    \r\n    function dropCoinsSingle(address[] dests, uint256 tokens) {\r\n        require(msg.sender == _multiSendOwner && tokensApproved >= (dests.length * tokens));\r\n        uint256 i = 0;\r\n        while (i < dests.length) {\r\n            _STCnContract.transferFrom(_multiSendOwner, dests[i], tokens);\r\n            i += 1;\r\n        }\r\n        updateTokensApproved();\r\n    }\r\n    \r\n    /* Be careful to this function to be sure you approved enough before you send as contract can't check first total amount in array\r\n    ** If not enough amount is approved, transaction will fail */\r\n    \r\n    function dropCoinsMulti(address[] dests, uint256[] tokens) {\r\n        require(msg.sender == _multiSendOwner);\r\n        uint256 i = 0;\r\n        while (i < dests.length) {\r\n            _STCnContract.transferFrom(_multiSendOwner, dests[i], tokens[i]);\r\n            i += 1;\r\n        }\r\n        updateTokensApproved();\r\n    }\r\n    \r\n    function updateTokensApproved () {\r\n        tokensApproved = _STCnContract.allowance(_multiSendOwner, this);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"tokensApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"dropCoinsSingle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dests\",\"type\":\"address[]\"},{\"name\":\"tokens\",\"type\":\"uint256[]\"}],\"name\":\"dropCoinsMulti\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateTokensApproved\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_STCnContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_multiSendOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"MultiSend","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7a03e2d85d585eb91326055df9888ca8a85a9e8082572b814a900fbc2f1b3ccd"}]}