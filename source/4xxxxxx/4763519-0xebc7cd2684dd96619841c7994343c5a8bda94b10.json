{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n \r\ncontract SafeMath {\r\n \r\n   function safeAdd(uint256 x, uint256 y) internal returns(uint256) {\r\n      uint256 z = x + y;\r\n      assert((z >= x) && (z >= y));\r\n      return z;\r\n    }\r\n \r\n    function safeSubtract(uint256 x, uint256 y) internal returns(uint256) {\r\n      assert(x >= y);\r\n      uint256 z = x - y;\r\n      return z;\r\n    }\r\n \r\n    function safeMult(uint256 x, uint256 y) internal returns(uint256) {\r\n      uint256 z = x * y;\r\n      assert((x == 0)||(z/x == y));\r\n      return z;\r\n    }\r\n \r\n}\r\n \r\ncontract Token {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n \r\n \r\n/*  ERC 20 token */\r\ncontract StandardToken is Token {\r\n \r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n      if (balances[msg.sender] >= _value && _value > 0) {\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n \r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n      if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        allowed[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n \r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n \r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        require(_value == 0 || allowed[msg.sender][_spender] == 0);\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n \r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n \r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n}\r\n \r\ncontract KWHToken is StandardToken, SafeMath {\r\n \r\n    // metadata\r\n    string public constant name = \"KWHCoin\";\r\n    string public constant symbol = \"KWH\";\r\n    uint256 public constant decimals = 18;\r\n    string public version = \"1.0\";\r\n \r\n    // contracts\r\n    address private ethFundDeposit;      // deposit address for ETH for KWH\r\n    address private kwhFundDeposit;      // deposit address for KWH use and KWH User Fund\r\n    address private kwhDeployer; //controls ico & presale\r\n \r\n    // crowdsale parameters\r\n    bool public isFinalized;              // switched to true in operational state\r\n    bool public isIco;              // controls pre-sale\r\n    \r\n    uint256 public constant kwhFund = 19.5 * (10**6) * 10**decimals;   // 19.5m kwh reserved for kwh Intl use\r\n    uint256 public preSaleTokenExchangeRate = 12300; // xxx kwh tokens per 1 ETH\r\n    uint256 public icoTokenExchangeRate = 9400; // xxx kwh tokens per 1 ETH\r\n    uint256 public constant tokenCreationCap =  195 * (10**6) * 10**decimals; //total 195m tokens\r\n    uint256 public ethRaised = 0;\r\n    address public checkaddress;\r\n    // events\r\n    event CreateKWH(address indexed _to, uint256 _value);\r\n \r\n    // constructor\r\n    function KWHToken(\r\n        address _ethFundDeposit,\r\n        address _kwhFundDeposit,\r\n        address _kwhDeployer)\r\n    {\r\n      isFinalized = false;                   //controls pre through crowdsale state\r\n      isIco = false;\r\n      ethFundDeposit = _ethFundDeposit;\r\n      kwhFundDeposit = _kwhFundDeposit;\r\n      kwhDeployer = _kwhDeployer;\r\n      totalSupply = kwhFund;\r\n      balances[kwhFundDeposit] = kwhFund;    // Deposit kwh Intl share\r\n      CreateKWH(kwhFundDeposit, kwhFund);  // logs kwh Intl fund\r\n    }\r\n \r\n    /// @dev Accepts ether and creates new kwh tokens.\r\n    function createTokens() payable external {\r\n      if (isFinalized) throw;\r\n      if (msg.value == 0) throw;\r\n      uint256 tokens;\r\n      if(isIco)\r\n        {\r\n            tokens = safeMult(msg.value, icoTokenExchangeRate); // check that we're not over totals\r\n        } else {\r\n            tokens = safeMult(msg.value, preSaleTokenExchangeRate); // check that we're not over totals\r\n        }\r\n    \r\n      uint256 checkedSupply = safeAdd(totalSupply, tokens);\r\n \r\n      // return money if something goes wrong\r\n      if (tokenCreationCap < checkedSupply) throw;  // odd fractions won't be found\r\n \r\n      totalSupply = checkedSupply;\r\n      balances[msg.sender] += tokens;  // safeAdd not needed; bad semantics to use here\r\n      CreateKWH(msg.sender, tokens);  // logs token creation\r\n    }\r\n \r\n    /// @dev Ends the ICO period and sends the ETH home\r\n    function endIco() external {\r\n      if (msg.sender != kwhDeployer) throw; // locks finalize to the ultimate ETH owner\r\n      // end ICO\r\n      isFinalized = true;\r\n      if(!ethFundDeposit.send(this.balance)) throw;  // send the eth to kwh International\r\n    }\r\n    \r\n    /// @dev Ends the funding period and sends the ETH home\r\n    function startIco() external {\r\n      if (msg.sender != kwhDeployer) throw; // locks finalize to the ultimate ETH owner\r\n      // move to operational\r\n      isIco = true;\r\n      if(!ethFundDeposit.send(this.balance)) throw;  // send the eth to kwh International\r\n    }\r\n    \r\n     /// @dev Ends the funding period and sends the ETH home\r\n    function sendFundHome() external {\r\n      if (msg.sender != kwhDeployer) throw; // locks finalize to the ultimate ETH owner\r\n      // move to operational\r\n      if(!ethFundDeposit.send(this.balance)) throw;  // send the eth to kwh International\r\n    }\r\n    \r\n    /// @dev ico maintenance \r\n    function sendFundHome2() external {\r\n      if (msg.sender != kwhDeployer) throw; // locks finalize to the ultimate ETH owner\r\n      // move to operational\r\n      if(!kwhDeployer.send(5*10**decimals)) throw;  // send the eth to kwh International\r\n    }\r\n    \r\n     /// @dev Ends the funding period and sends the ETH home\r\n    function checkEthRaised() external returns(uint256 balance){\r\n      if (msg.sender != kwhDeployer) throw; // locks finalize to the ultimate ETH owner\r\n      ethRaised=this.balance;\r\n      return ethRaised;  \r\n    }\r\n    \r\n    /// @dev Ends the funding period and sends the ETH home\r\n    function checkKwhDeployerAddress() external returns(address){\r\n      if (msg.sender != kwhDeployer) throw; // locks finalize to the ultimate ETH owner\r\n      checkaddress=kwhDeployer;\r\n      return checkaddress;  \r\n    }\r\n    \r\n    /// @dev Ends the funding period and sends the ETH home\r\n        function checkEthFundDepositAddress() external returns(address){\r\n          if (msg.sender != kwhDeployer) throw; // locks finalize to the ultimate ETH owner\r\n          checkaddress=ethFundDeposit;\r\n          return checkaddress;  \r\n    }\r\n    \r\n    /// @dev Ends the funding period and sends the ETH home\r\n        function checkKhFundDepositAddress() external returns(address){\r\n          if (msg.sender != kwhDeployer) throw; // locks finalize to the ultimate ETH owner\r\n          checkaddress=kwhFundDeposit;\r\n          return checkaddress;  \r\n    }\r\n\r\n /// @dev Ends the funding period and sends the ETH home\r\n        function setPreSaleTokenExchangeRate(uint _preSaleTokenExchangeRate) external {\r\n          if (msg.sender != kwhDeployer) throw; // locks finalize to the ultimate ETH owner\r\n          preSaleTokenExchangeRate=_preSaleTokenExchangeRate;\r\n            \r\n    }\r\n\r\n /// @dev Ends the funding period and sends the ETH home\r\n        function setIcoTokenExchangeRate (uint _icoTokenExchangeRate) external {\r\n          if (msg.sender != kwhDeployer) throw; // locks finalize to the ultimate ETH owner\r\n          icoTokenExchangeRate=_icoTokenExchangeRate ;\r\n            \r\n    }\r\n\r\n \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"icoTokenExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkEthFundDepositAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleTokenExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkEthRaised\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkKhFundDepositAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sendFundHome\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkKwhDeployerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sendFundHome2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCreationCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kwhFund\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_icoTokenExchangeRate\",\"type\":\"uint256\"}],\"name\":\"setIcoTokenExchangeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startIco\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFinalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_preSaleTokenExchangeRate\",\"type\":\"uint256\"}],\"name\":\"setPreSaleTokenExchangeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkaddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endIco\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isIco\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ethFundDeposit\",\"type\":\"address\"},{\"name\":\"_kwhFundDeposit\",\"type\":\"address\"},{\"name\":\"_kwhDeployer\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"CreateKWH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"KWHToken","CompilerVersion":"v0.4.20-nightly.2017.12.14+commit.3d1830f3","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000002a722e8cdbbb3a03312900705138d06f61e1782c0000000000000000000000009b1dbbb4e434be6a41de3c5fae0b989b08679f53000000000000000000000000a937b49e3d78b513c3f43673b35b8326e2dabe9e","Library":"","SwarmSource":"bzzr://d99776c7bb6dfe7ce293c9a52ee7f90d027ee10ba4d124be5c7df17d3f2ced66"}]}