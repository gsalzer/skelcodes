{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.15;\r\n\r\n/*\r\n\r\n    Crypto Market Prices via Ethereum Smart Contract\r\n\r\n    A community driven smart contract that lets your contracts use fiat\r\n    amounts in USD, EURO, and GBP. Need to charge $10.50 for a contract call?\r\n    With this contract, you can convert ETH and other crypto's.\r\n\r\n    Repo: https://github.com/hunterlong/fiatcontract\r\n    Website: https://fiatcontract.com\r\n\r\n    Examples:\r\n\r\n      FiatContract price = FiatContract(CONTRACT_ADDRESS);\r\n\r\n      uint256 ethCent = price.USD(0);        // returns $0.01 worth of ETH in USD.\r\n      uint256 weiAmount = ethCent * 2500     // returns $25.00 worth of ETH in USD\r\n      require(msg.value == weiAmount);       // require $25.00 worth of ETH as a payment\r\n      \r\n    Please look at Repo or Website to get Currency ID values.\r\n\r\n    @author Hunter Long\r\n*/\r\n\r\ncontract FiatContract {\r\n\r\n    mapping(uint => Token) public tokens;\r\n\r\n    address public sender;\r\n    address public creator;\r\n\r\n    event NewPrice(uint id, string token);\r\n    event DeletePrice(uint id);\r\n    event UpdatedPrice(uint id);\r\n    event RequestUpdate(uint id);\r\n    event Donation(address from);\r\n\r\n    struct Token {\r\n        string name;\r\n        uint256 eth;\r\n        uint256 usd;\r\n        uint256 eur;\r\n        uint256 gbp;\r\n        uint block;\r\n    }\r\n\r\n    // initialize function\r\n    function FiatContract() {\r\n        creator = msg.sender;\r\n        sender = msg.sender;\r\n    }\r\n\r\n    // returns the Token struct\r\n    function getToken(uint _id) internal constant returns (Token) {\r\n        return tokens[_id];\r\n    }\r\n\r\n    // returns rate price of coin related to ETH.\r\n    function ETH(uint _id) constant returns (uint256) {\r\n        return tokens[_id].eth;\r\n    }\r\n\r\n    // returns 0.01 value in United States Dollar\r\n    function USD(uint _id) constant returns (uint256) {\r\n        return tokens[_id].usd;\r\n    }\r\n\r\n    // returns 0.01 value in Euro\r\n    function EUR(uint _id) constant returns (uint256) {\r\n        return tokens[_id].eur;\r\n    }\r\n\r\n    // returns 0.01 value in British Pound\r\n    function GBP(uint _id) constant returns (uint256) {\r\n        return tokens[_id].gbp;\r\n    }\r\n\r\n    // returns block when price was updated last\r\n    function updatedAt(uint _id) constant returns (uint) {\r\n        return tokens[_id].block;\r\n    }\r\n\r\n    // update market rates in USD, EURO, and GBP for a specific coin\r\n    function update(uint id, string _token, uint256 eth, uint256 usd, uint256 eur, uint256 gbp) external {\r\n        require(msg.sender==sender);\r\n        tokens[id] = Token(_token, eth, usd, eur, gbp, block.number);\r\n        NewPrice(id, _token);\r\n    }\r\n\r\n    // delete a token from the contract\r\n    function deleteToken(uint id) {\r\n        require(msg.sender==creator);\r\n        DeletePrice(id);\r\n        delete tokens[id];\r\n    }\r\n\r\n    // change creator address\r\n    function changeCreator(address _creator){\r\n        require(msg.sender==creator);\r\n        creator = _creator;\r\n    }\r\n\r\n    // change sender address\r\n    function changeSender(address _sender){\r\n        require(msg.sender==creator);\r\n        sender = _sender;\r\n    }\r\n\r\n    // execute function for creator if ERC20's get stuck in this wallet\r\n    function execute(address _to, uint _value, bytes _data) external returns (bytes32 _r) {\r\n        require(msg.sender==creator);\r\n        require(_to.call.value(_value)(_data));\r\n        return 0;\r\n    }\r\n\r\n    // default function so this contract can accept ETH with low gas limits.\r\n    function() payable {\r\n\r\n    }\r\n\r\n    // public function for requesting an updated price from server\r\n    // using this function requires a payment of $0.35 USD\r\n    function requestUpdate(uint id) external payable {\r\n        uint256 weiAmount = tokens[0].usd * 35;\r\n        require(msg.value >= weiAmount);\r\n        sender.transfer(msg.value);\r\n        RequestUpdate(id);\r\n    }\r\n\r\n    // donation function that get forwarded to the contract updater\r\n    function donate() external payable {\r\n        require(msg.value >= 0);\r\n        sender.transfer(msg.value);\r\n        Donation(msg.sender);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"USD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"string\"},{\"name\":\"eth\",\"type\":\"uint256\"},{\"name\":\"usd\",\"type\":\"uint256\"},{\"name\":\"eur\",\"type\":\"uint256\"},{\"name\":\"gbp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"eth\",\"type\":\"uint256\"},{\"name\":\"usd\",\"type\":\"uint256\"},{\"name\":\"eur\",\"type\":\"uint256\"},{\"name\":\"gbp\",\"type\":\"uint256\"},{\"name\":\"block\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"GBP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"deleteToken\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sender\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"ETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"changeCreator\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"changeSender\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"name\":\"_r\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"requestUpdate\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"updatedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"EUR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"token\",\"type\":\"string\"}],\"name\":\"NewPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"DeletePrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"UpdatedPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"RequestUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"}],\"name\":\"Donation\",\"type\":\"event\"}]","ContractName":"FiatContract","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://87ba2447cee31b65d51114566c66a3e29c2703755653036218a99cce54a38274"}]}