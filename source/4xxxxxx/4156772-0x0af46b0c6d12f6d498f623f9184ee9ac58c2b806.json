{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\ncontract TimeBroker \r\n{\r\n    address owner;\r\n    \r\n    function TimeBroker()\r\n    {\r\n        owner = msg.sender;    \r\n    }\r\n    \r\n    modifier isOwner()\r\n    {\r\n        assert(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    struct Seller\r\n    {\r\n        string FirstName;\r\n        string SecondName;\r\n        string MiddleName;\r\n        string City;\r\n        //uint256 rating;\r\n    }\r\n    \r\n    mapping(address => Seller) public sellers;\r\n\r\n    Auction[] auctions;\r\n    \r\n    struct Auction\r\n    {\r\n        address seller;\r\n        uint256 bidsAcceptedBefore;\r\n        uint256 datetime;\r\n        uint64 duration;\r\n        uint256 currentPrice;\r\n        address winner;\r\n        bool canceled;\r\n    }\r\n    mapping (uint256 => bool) auctionWithdrawDone;\r\n    \r\n    \r\n\r\n    event RegisterSeller(address source, string FirstName, string SecondName, string MiddleName, string City);\r\n    event NewAuction(address seller, uint256 index, uint256 bidsAcceptedBefore, uint256 datetime, uint64 duration, uint256 minPrice);\r\n    event CancelAuction(address seller, uint256 index, uint256 bidsAcceptedBefore, uint256 datetime, uint64 duration, uint256 currentPrice, address winner);\r\n    event AuctionFinished(address seller, uint256 index, uint256 bidsAcceptedBefore, uint256 datetime, uint64 duration, uint256 currentPrice, address winner);\r\n    event Bid(address seller, uint256 index, address buyer, uint256 newPrice);\r\n    event Withdraw(address seller, uint256 index, uint256 payToSeller);\r\n    \r\n    function registerAsSeller(address source, string FirstName, string SecondName, string MiddleName, string City) isOwner\r\n    {\r\n        sellers[source] = Seller(FirstName, SecondName, MiddleName, City);\r\n        RegisterSeller(source, FirstName, SecondName, MiddleName, City);\r\n    }\r\n\r\n    function createAuction(uint256 bidsAcceptedBefore, uint256 datetime, uint64 duration, uint256 minPrice)\r\n    {\r\n        assert(bytes(sellers[msg.sender].FirstName).length > 0);\r\n        assert(datetime > bidsAcceptedBefore);\r\n        assert(datetime > now);\r\n        assert(duration > 0);\r\n        auctions.push(Auction(msg.sender, bidsAcceptedBefore, datetime, duration, minPrice, 0x0, false));\r\n        NewAuction(msg.sender, auctions.length - 1, bidsAcceptedBefore, datetime, duration, minPrice);\r\n    }\r\n\r\n    function withdraw(uint256 index)\r\n    {\r\n        Auction storage auc = auctions[index];\r\n        assert(auc.seller == msg.sender); // seller call function\r\n        assert(now > auc.datetime + auc.duration); // meeting ended\r\n        assert(auctionWithdrawDone[index] == false);\r\n        auctionWithdrawDone[index] = true;\r\n        uint256 payToSeller = auc.currentPrice * 95 / 100;\r\n        assert(auc.currentPrice > payToSeller);\r\n        auc.seller.transfer(payToSeller);               // 95% to seller\r\n        owner.transfer(auc.currentPrice - payToSeller); // 5% to owner\r\n        Withdraw(auc.seller, index, payToSeller);\r\n    }\r\n\r\n\r\n    function placeBid(uint256 index) payable\r\n    {\r\n        Auction storage auc = auctions[index];\r\n        assert(auc.seller != msg.sender);\r\n        assert(now < auc.bidsAcceptedBefore);\r\n        assert(auc.canceled == false);\r\n        assert(msg.value > auc.currentPrice);\r\n        if (auc.winner != 0)\r\n        {\r\n            auc.winner.transfer(auc.currentPrice);\r\n        }\r\n        auc.currentPrice = msg.value;\r\n        auc.winner = msg.sender;\r\n        Bid(auc.seller, index, msg.sender, msg.value);\r\n    }\r\n\r\n    function kill() isOwner {\r\n        selfdestruct(msg.sender);\r\n    }\r\n\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"bidsAcceptedBefore\",\"type\":\"uint256\"},{\"name\":\"datetime\",\"type\":\"uint256\"},{\"name\":\"duration\",\"type\":\"uint64\"},{\"name\":\"minPrice\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellers\",\"outputs\":[{\"name\":\"FirstName\",\"type\":\"string\"},{\"name\":\"SecondName\",\"type\":\"string\"},{\"name\":\"MiddleName\",\"type\":\"string\"},{\"name\":\"City\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"source\",\"type\":\"address\"},{\"name\":\"FirstName\",\"type\":\"string\"},{\"name\":\"SecondName\",\"type\":\"string\"},{\"name\":\"MiddleName\",\"type\":\"string\"},{\"name\":\"City\",\"type\":\"string\"}],\"name\":\"registerAsSeller\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"FirstName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"SecondName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"MiddleName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"City\",\"type\":\"string\"}],\"name\":\"RegisterSeller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bidsAcceptedBefore\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"datetime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"duration\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"minPrice\",\"type\":\"uint256\"}],\"name\":\"NewAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bidsAcceptedBefore\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"datetime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"duration\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"currentPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"CancelAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bidsAcceptedBefore\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"datetime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"duration\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"currentPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"AuctionFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"Bid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"payToSeller\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"}]","ContractName":"TimeBroker","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0bce254c926c130e1e7421d2df42ade7e79f96d69b098381a0a9256f2a5a4165"}]}