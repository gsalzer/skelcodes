{"status":"1","message":"OK","result":[{"SourceCode":"/* Simple token - simple token for PreICO and ICO\r\n   Copyright (C) 2017  Sergey Sherkunov <leinlawun@leinlawun.org>\r\n   Copyright (C) 2017  OOM.AG <info@oom.ag>\r\n\r\n   This file is part of simple token.\r\n\r\n   Token is free software: you can redistribute it and/or modify\r\n   it under the terms of the GNU General Public License as published by\r\n   the Free Software Foundation, either version 3 of the License, or\r\n   (at your option) any later version.\r\n\r\n   This program is distributed in the hope that it will be useful,\r\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n   GNU General Public License for more details.\r\n\r\n   You should have received a copy of the GNU General Public License\r\n   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */\r\n\r\npragma solidity ^0.4.18;\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n\r\n        assert(c >= a);\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        assert(b <= a);\r\n\r\n        c = a - b;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a * b;\r\n\r\n        assert(c / a == b);\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a / b;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a % b;\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a;\r\n\r\n        if(a > b)\r\n           c = b;\r\n    }\r\n}\r\n\r\ncontract ABXToken {\r\n    using SafeMath for uint256;\r\n\r\n    address public owner;\r\n\r\n    address public minter;\r\n\r\n    string public name;\r\n\r\n    string public symbol;\r\n\r\n    uint8 public decimals;\r\n\r\n    uint256 public totalSupply;\r\n\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    event Transfer(address indexed oldTokensHolder,\r\n                   address indexed newTokensHolder, uint256 tokensNumber);\r\n\r\n    //An Attack Vector on Approve/TransferFrom Methods:\r\n    //https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    event Transfer(address indexed tokensSpender,\r\n                   address indexed oldTokensHolder,\r\n                   address indexed newTokensHolder, uint256 tokensNumber);\r\n\r\n    event Approval(address indexed tokensHolder, address indexed tokensSpender,\r\n                   uint256 newTokensNumber);\r\n\r\n    //An Attack Vector on Approve/TransferFrom Methods:\r\n    //https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    event Approval(address indexed tokensHolder, address indexed tokensSpender,\r\n                   uint256 oldTokensNumber, uint256 newTokensNumber);\r\n\r\n    modifier onlyOwner {\r\n        require(owner == msg.sender);\r\n\r\n        _;\r\n    }\r\n\r\n    //ERC20 Short Address Attack:\r\n    //https://vessenes.com/the-erc20-short-address-attack-explained\r\n    //https://blog.golemproject.net/how-to-find-10m-by-just-reading-blockchain-6ae9d39fcd95\r\n    //https://ericrafaloff.com/analyzing-the-erc20-short-address-attack\r\n    modifier checkPayloadSize(uint256 size) {\r\n        require(msg.data.length == size + 4);\r\n\r\n        _;\r\n    }\r\n\r\n    modifier onlyNotNullTokenHolder(address tokenHolder) {\r\n        require(tokenHolder != address(0));\r\n\r\n        _;\r\n    }\r\n\r\n    function ABXToken(string _name, string _symbol, uint8 _decimals,\r\n                      uint256 _totalSupply) public {\r\n        owner = msg.sender;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        totalSupply = _totalSupply.mul(10 ** uint256(decimals));\r\n\r\n        require(decimals <= 77);\r\n\r\n        balanceOf[this] = totalSupply;\r\n    }\r\n\r\n    function setOwner(address _owner) public onlyOwner returns(bool) {\r\n        owner = _owner;\r\n\r\n        return true;\r\n    }\r\n\r\n    function setMinter(address _minter) public onlyOwner returns(bool) {\r\n        safeApprove(this, minter, 0);\r\n\r\n        minter = _minter;\r\n\r\n        safeApprove(this, minter, balanceOf[this]);\r\n\r\n        return true;\r\n    }\r\n\r\n    //ERC20 Short Address Attack:\r\n    //https://vessenes.com/the-erc20-short-address-attack-explained\r\n    //https://blog.golemproject.net/how-to-find-10m-by-just-reading-blockchain-6ae9d39fcd95\r\n    //https://ericrafaloff.com/analyzing-the-erc20-short-address-attack\r\n    function transfer(address newTokensHolder, uint256 tokensNumber) public\r\n                     checkPayloadSize(2 * 32) returns(bool) {\r\n        transfer(msg.sender, newTokensHolder, tokensNumber);\r\n\r\n        return true;\r\n    }\r\n\r\n    //An Attack Vector on Approve/TransferFrom Methods:\r\n    //https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    //\r\n    //ERC20 Short Address Attack:\r\n    //https://vessenes.com/the-erc20-short-address-attack-explained\r\n    //https://blog.golemproject.net/how-to-find-10m-by-just-reading-blockchain-6ae9d39fcd95\r\n    //https://ericrafaloff.com/analyzing-the-erc20-short-address-attack\r\n    function transferFrom(address oldTokensHolder, address newTokensHolder,\r\n                          uint256 tokensNumber) public checkPayloadSize(3 * 32)\r\n                         returns(bool) {\r\n        allowance[oldTokensHolder][msg.sender] =\r\n            allowance[oldTokensHolder][msg.sender].sub(tokensNumber);\r\n\r\n        transfer(oldTokensHolder, newTokensHolder, tokensNumber);\r\n\r\n        Transfer(msg.sender, oldTokensHolder, newTokensHolder, tokensNumber);\r\n\r\n        return true;\r\n    }\r\n\r\n    //ERC20 Short Address Attack:\r\n    //https://vessenes.com/the-erc20-short-address-attack-explained\r\n    //https://blog.golemproject.net/how-to-find-10m-by-just-reading-blockchain-6ae9d39fcd95\r\n    //https://ericrafaloff.com/analyzing-the-erc20-short-address-attack\r\n    function approve(address tokensSpender, uint256 newTokensNumber) public\r\n                    checkPayloadSize(2 * 32) returns(bool) {\r\n        safeApprove(msg.sender, tokensSpender, newTokensNumber);\r\n\r\n        return true;\r\n    }\r\n\r\n    //An Attack Vector on Approve/TransferFrom Methods:\r\n    //https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    //\r\n    //ERC20 Short Address Attack:\r\n    //https://vessenes.com/the-erc20-short-address-attack-explained\r\n    //https://blog.golemproject.net/how-to-find-10m-by-just-reading-blockchain-6ae9d39fcd95\r\n    //https://ericrafaloff.com/analyzing-the-erc20-short-address-attack\r\n    function approve(address tokensSpender, uint256 oldTokensNumber,\r\n                     uint256 newTokensNumber) public checkPayloadSize(3 * 32)\r\n                    returns(bool) {\r\n        require(allowance[msg.sender][tokensSpender] == oldTokensNumber);\r\n\r\n        unsafeApprove(msg.sender, tokensSpender, newTokensNumber);\r\n\r\n        Approval(msg.sender, tokensSpender, oldTokensNumber, newTokensNumber);\r\n\r\n        return true;\r\n    }\r\n\r\n    function transfer(address oldTokensHolder, address newTokensHolder,\r\n                      uint256 tokensNumber) private\r\n                      onlyNotNullTokenHolder(oldTokensHolder) {\r\n        balanceOf[oldTokensHolder] =\r\n            balanceOf[oldTokensHolder].sub(tokensNumber);\r\n\r\n        balanceOf[newTokensHolder] =\r\n            balanceOf[newTokensHolder].add(tokensNumber);\r\n\r\n        Transfer(oldTokensHolder, newTokensHolder, tokensNumber);\r\n    }\r\n\r\n    //An Attack Vector on Approve/TransferFrom Methods:\r\n    //https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    function unsafeApprove(address tokensHolder, address tokensSpender,\r\n                           uint256 newTokensNumber) private\r\n                          onlyNotNullTokenHolder(tokensHolder) {\r\n        allowance[tokensHolder][tokensSpender] = newTokensNumber;\r\n\r\n        Approval(msg.sender, tokensSpender, newTokensNumber);\r\n    }\r\n    \r\n    //An Attack Vector on Approve/TransferFrom Methods:\r\n    //https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    function safeApprove(address tokensHolder, address tokensSpender,\r\n                         uint256 newTokensNumber) private {\r\n        require(allowance[tokensHolder][tokensSpender] == 0 ||\r\n                newTokensNumber == 0);\r\n\r\n        unsafeApprove(tokensHolder, tokensSpender, newTokensNumber);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokensSpender\",\"type\":\"address\"},{\"name\":\"newTokensNumber\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"oldTokensHolder\",\"type\":\"address\"},{\"name\":\"newTokensHolder\",\"type\":\"address\"},{\"name\":\"tokensNumber\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokensSpender\",\"type\":\"address\"},{\"name\":\"oldTokensNumber\",\"type\":\"uint256\"},{\"name\":\"newTokensNumber\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newTokensHolder\",\"type\":\"address\"},{\"name\":\"tokensNumber\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldTokensHolder\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newTokensHolder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokensNumber\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokensSpender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"oldTokensHolder\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newTokensHolder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokensNumber\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokensHolder\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokensSpender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newTokensNumber\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokensHolder\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokensSpender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"oldTokensNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newTokensNumber\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"ABXToken","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000017d7840000000000000000000000000000000000000000000000000000000000000000941425820546f6b656e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034142580000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://b344239db350975828399b39cb18076db8bf7a662c64cd47f81451dbdf436cb3"}]}