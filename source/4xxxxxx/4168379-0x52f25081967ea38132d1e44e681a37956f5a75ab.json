{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\ncontract Parallax {\r\n    \r\n    // Mapping of last bid for each price.\r\n    mapping(uint => address) cup;\r\n\r\n\r\n    // Address of creator.\r\n    address public constant referee = 0x6A0D0eBf1e532840baf224E1bD6A1d4489D5D78d;\r\n    \r\n    \r\n    // Game ends at 2 ether.\r\n    uint public deadline = 2000 finney;\r\n    \r\n    \r\n    // Min and max initialization.\r\n    uint public highestBid = 0;\r\n    uint public lowestBid = deadline*2;\r\n    \r\n    \r\n    // Payable fallback method: Called whenever ether is received by contract.\r\n    function() payable {\r\n        \r\n        // Rule 1: You can only send multiples of 0.002 ether.\r\n        require(msg.value % 2 finney == 0);\r\n        \r\n        // Rule 2: You can't close the game by becoming the highest bidder.\r\n        if(msg.value > highestBid)\r\n            require(this.balance - msg.value < deadline);\r\n        \r\n        // Reassign limits.\r\n        if(msg.value < lowestBid)   lowestBid = msg.value;\r\n        if(msg.value > highestBid)  highestBid = msg.value;\r\n        \r\n        \r\n        // Set the last bidder for the price.\r\n        cup[msg.value] = msg.sender;\r\n        \r\n        // Check if the deadline was reached.\r\n        if(this.balance >= deadline) {\r\n            \r\n            // Winning condition: The last bidder of the average price\r\n            // get the chicken.\r\n            uint finderAmount = (highestBid + lowestBid)/2;\r\n            address finderAddress = cup[finderAmount];\r\n            \r\n            // If no one guessed correctly, give the chicken to the\r\n            // the fattest bidder.\r\n            if (finderAddress == 0x0)\r\n                finderAddress = cup[highestBid];\r\n            \r\n            // Reset the limits for the next game.\r\n            highestBid = 0;\r\n            lowestBid = deadline*2;\r\n            \r\n            // Send the chicken to the winner and pay the commission\r\n            // to the owner. Fee for a successful game is 0.01 ether. \r\n            finderAddress.transfer(this.balance - 100 finney);\r\n            referee.transfer(100 finney);\r\n        } \r\n        \r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"referee\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lowestBid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highestBid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"Parallax","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b86e7c7d1d4e94edbeaff2ee1d4ac17ed6bd4c2384058a45ce2a9b6ced94e54e"}]}