{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n/**\r\n * Manually audited pub registrar\r\n *\r\n * State Diagram:\r\n * \r\n * UNCONTACTED -> APPLIED <-> REJECTED\r\n *      |            |\r\n *      v            v\r\n *    BOARD       ACCEPTED\r\n */\r\ncontract AllPubs {\r\n    // the application fee serves to incentivize the board to review applications quickly\r\n    uint256 constant public registrationBounty = 50 finney;\r\n    // the board receives less when it rejects candidates\r\n    uint256 constant public invalidationBounty = 5 finney;\r\n\r\n    enum Membership {\r\n        UNCONTACTED, // default\r\n        REJECTED, // rejected applicant\r\n        APPLIED, // application\r\n        ACCEPTED, // accepted applicant\r\n        BOARD, // allowed to approve pubs\r\n        SOURCE // AllPubs creator\r\n    }\r\n\r\n    mapping (address => Membership) public membership;\r\n    // please do not trust REJECTED abis\r\n    mapping (address => string) public abis;\r\n    address[] public pubs;\r\n\r\n    function AllPubs()\r\n    public {\r\n        membership[msg.sender] = Membership.SOURCE;\r\n    }\r\n\r\n    event PubRegistered(address location);\r\n\r\n    event PubAccepted(address location);\r\n\r\n    event PubRejected(address location, string reason);\r\n\r\n    function pubCount()\r\n    public view\r\n    returns (uint256) {\r\n        return pubs.length;\r\n    }\r\n\r\n\r\n    function register(address _pubish, string _abi)\r\n    external payable {\r\n        assert(msg.value == registrationBounty);\r\n        assert(membership[_pubish] <= Membership.REJECTED);\r\n        membership[_pubish] = Membership.APPLIED;\r\n        abis[_pubish] = _abi;\r\n        PubRegistered(_pubish);\r\n    }\r\n\r\n    function accept(address _pubish)\r\n    external {\r\n        assert(membership[msg.sender] >= Membership.BOARD);\r\n        assert(membership[_pubish] == Membership.APPLIED);\r\n        membership[_pubish] = Membership.ACCEPTED;\r\n        msg.sender.transfer(registrationBounty);\r\n        pubs.push(_pubish);\r\n        PubAccepted(_pubish);\r\n    }\r\n\r\n    function reject(address _pubish, string _reason)\r\n    external {\r\n        assert(membership[msg.sender] >= Membership.BOARD);\r\n        assert(membership[_pubish] == Membership.APPLIED);\r\n        membership[_pubish] = Membership.REJECTED;\r\n        msg.sender.transfer(invalidationBounty);\r\n        PubRejected(_pubish, _reason);\r\n    }\r\n\r\n    event NewBoardMember(address _boardMember);\r\n\r\n    function appoint(address _delegate)\r\n    external {\r\n        assert(membership[msg.sender] >= Membership.BOARD);\r\n        assert(membership[_delegate] == Membership.UNCONTACTED);\r\n        membership[_delegate] = Membership.BOARD;\r\n        NewBoardMember(_delegate);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"abis\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pubish\",\"type\":\"address\"},{\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"reject\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pubish\",\"type\":\"address\"},{\"name\":\"_abi\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"appoint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"invalidationBounty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registrationBounty\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pubs\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"membership\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pubish\",\"type\":\"address\"}],\"name\":\"accept\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pubCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"location\",\"type\":\"address\"}],\"name\":\"PubRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"location\",\"type\":\"address\"}],\"name\":\"PubAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"location\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PubRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_boardMember\",\"type\":\"address\"}],\"name\":\"NewBoardMember\",\"type\":\"event\"}]","ContractName":"AllPubs","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8158276688a87af0f4e3ec1aa6f6c919017fe7fa09b59f96a147cfea01724419"}]}