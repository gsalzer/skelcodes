{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.14;\r\n\r\ncontract ERC20Basic {\r\n    uint256 public totalSupply;\r\n\r\n    function balanceOf(address who) constant returns (uint256);\r\n}\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    function Ownable() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner {\r\n        require(newOwner != address(0));\r\n        owner = newOwner;\r\n    }\r\n\r\n}\r\n\r\ncontract CryptoSlotsGame is Ownable {\r\n\r\n    struct Win {\r\n    uint8 odds;\r\n    uint8 chance;\r\n    }\r\n\r\n    ERC20Basic public token;\r\n\r\n    mapping (address => uint) private investorToProfitDay;\r\n\r\n    address private houseAddress;\r\n\r\n    uint public lastInvestorsProfit = 0;\r\n\r\n    uint public lastInvestorsProfitSum = 0;\r\n\r\n    uint public lastInvestorsProfitDay = 0;\r\n\r\n    uint public nextInvestorsProfitSum = 0;\r\n\r\n    uint public houseFee = 100;\r\n\r\n    uint public investorsFee = 100;\r\n\r\n    uint public constant percentDivider = 10000;\r\n\r\n    uint public minBet = 0.01 ether;\r\n\r\n    uint public maxBet = 0.25 ether;\r\n\r\n    uint private rnd = 8345634;\r\n\r\n    uint private seed = 578340194;\r\n\r\n    Win[] private winConfig;\r\n\r\n    event LogBet(address indexed player, uint bet, uint win);\r\n\r\n    event LogInvestorProfit(address indexed investor, uint value);\r\n\r\n    event LogUpdateInvestorProfitSum(uint value);\r\n\r\n\r\n    function CryptoSlotsGame() {\r\n        houseAddress = msg.sender;\r\n        winConfig.push(Win(5, 10));\r\n        winConfig.push(Win(2, 30));\r\n    }\r\n\r\n    function deleteContract() onlyOwner\r\n    {\r\n        selfdestruct(msg.sender);\r\n    }\r\n\r\n    function changeWinConfig(uint8[] _winOdds, uint8[] _winChance) onlyOwner {\r\n        winConfig.length = _winOdds.length;\r\n        for (uint8 i = 0; i < winConfig.length; i++) {\r\n            winConfig[i].odds = _winOdds[i];\r\n            winConfig[i].chance = _winChance[i];\r\n        }\r\n    }\r\n\r\n    function() payable {\r\n        bet();\r\n    }\r\n\r\n    function bet() public payable returns (uint win) {\r\n        require(minBet <= msg.value && msg.value <= maxBet);\r\n\r\n        updateProfit();\r\n\r\n        uint playerWin = msg.value * odds(getRandom());\r\n\r\n        if (playerWin > 0) {\r\n            if (playerWin > this.balance) playerWin = this.balance;\r\n            msg.sender.transfer(playerWin);\r\n            LogBet(msg.sender, msg.value, playerWin);\r\n        }\r\n        else {\r\n            playerWin = 1;\r\n            nextInvestorsProfitSum += msg.value * investorsFee / percentDivider;\r\n            msg.sender.transfer(playerWin);\r\n            LogBet(msg.sender, msg.value, playerWin);\r\n            houseAddress.transfer(msg.value * houseFee / percentDivider);\r\n        }\r\n        \r\n        return playerWin;\r\n    }\r\n\r\n    function updateProfit() private {\r\n        uint today = now / 1 days;\r\n\r\n        if (lastInvestorsProfitDay < today) {\r\n            lastInvestorsProfitDay = today;\r\n            lastInvestorsProfitSum = nextInvestorsProfitSum + lastInvestorsProfit;\r\n            lastInvestorsProfit = lastInvestorsProfitSum;\r\n\r\n            LogUpdateInvestorProfitSum(lastInvestorsProfitSum);\r\n\r\n            nextInvestorsProfitSum = 0;\r\n        }\r\n    }\r\n\r\n    function getRandom() private returns (uint) {\r\n        rnd = (uint(sha3(block.blockhash(block.number - rnd), block.coinbase, block.timestamp, seed)) % 100);\r\n        return rnd;\r\n    }\r\n\r\n    function setSeed(uint value) {\r\n        seed = value;\r\n    }\r\n\r\n    function setMinBet(uint value) onlyOwner {\r\n        minBet = value;\r\n    }\r\n\r\n    function setMaxBet(uint value) onlyOwner {\r\n        maxBet = value;\r\n    }\r\n\r\n    function odds(uint value) private constant returns (uint8){\r\n        for (uint8 i = 0; i < winConfig.length; i++) {\r\n            if (value <= winConfig[i].chance) return winConfig[i].odds;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function getProfit() returns (uint) {\r\n        updateProfit();\r\n\r\n        if (lastInvestorsProfit > 0 && investorToProfitDay[msg.sender] < lastInvestorsProfitDay) {\r\n            uint tokenBalance = token.balanceOf(msg.sender);\r\n            if (tokenBalance > 0) {\r\n                uint profit = tokenBalance / token.totalSupply() * lastInvestorsProfitSum;\r\n                msg.sender.transfer(profit);\r\n                lastInvestorsProfit -= profit;\r\n                investorToProfitDay[msg.sender] = lastInvestorsProfitDay;\r\n                LogInvestorProfit(msg.sender, profit);\r\n                return profit;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function setHouseFee(uint value) onlyOwner {\r\n        houseFee = value;\r\n    }\r\n\r\n    function setInvestorsFee(uint value) onlyOwner {\r\n        investorsFee = value;\r\n    }\r\n\r\n    function setHouseAddress(address value) onlyOwner {\r\n        houseAddress = value;\r\n    }\r\n\r\n    function setToken(address value) onlyOwner {\r\n        token = ERC20Basic(value);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"houseFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"bet\",\"outputs\":[{\"name\":\"win\",\"type\":\"uint256\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setHouseFee\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deleteContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getProfit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastInvestorsProfit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_winOdds\",\"type\":\"uint8[]\"},{\"name\":\"_winChance\",\"type\":\"uint8[]\"}],\"name\":\"changeWinConfig\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMaxBet\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setMinBet\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nextInvestorsProfitSum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastInvestorsProfitSum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastInvestorsProfitDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setSeed\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setInvestorsFee\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investorsFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"address\"}],\"name\":\"setHouseAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"percentDivider\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"bet\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"win\",\"type\":\"uint256\"}],\"name\":\"LogBet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LogInvestorProfit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LogUpdateInvestorProfitSum\",\"type\":\"event\"}]","ContractName":"CryptoSlotsGame","CompilerVersion":"v0.4.14+commit.c2215d46","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://df023177207552aadbed360a157973dae41eb5c494add6367e1b71ace003006b"}]}