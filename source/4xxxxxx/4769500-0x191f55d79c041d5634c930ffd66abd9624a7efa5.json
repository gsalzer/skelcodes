{"status":"1","message":"OK","result":[{"SourceCode":"contract DFNTokens {\r\n  // An identifying string, set by the constructor\r\n  string public name;\r\n\r\n  // mapping from address to balance\r\n  mapping(address => uint) public balance;\r\n\r\n  // set of addresses that are authorized to transfer\r\n  mapping(address => bool) public authorizedToTransfer;\r\n\r\n  // owner (authorized to do anything)\r\n  address public owner;\r\n\r\n  // list of notarizations\r\n  bytes32[] public notarizationList;\r\n\r\n  // frozen flag\r\n  bool public frozen = false;\r\n\r\n  // freeze requested at height\r\n  uint public freezeHeight = 0;\r\n\r\n  // For convenience of external contracts only (not used here)\r\n  // list of addresses with balances\r\n  address[] public addrList;\r\n  // test if address has ever had a non-zero balance\r\n  mapping(address => bool) public seen;\r\n  // number of addresses that ever had a non-zero balance\r\n  uint public nAddresses = 0;\r\n\r\n  // Constructor\r\n  function DFNTokens() public {\r\n      name = \"test\";\r\n\r\n      // set owner\r\n      owner = msg.sender;\r\n\r\n      // genesis balance\r\n      balance[0x0] = 469213710;\r\n\r\n      // first three accounts\r\n      TransferDFN(0x0, 0x1, 44575302);\r\n      TransferDFN(0x0, 0x2, 115986694);\r\n      TransferDFN(0x0, 0x3, 308651714);\r\n  }\r\n\r\n  // Modifier\r\n  modifier onlyowner {\r\n      require(msg.sender == owner);\r\n      _;\r\n  }\r\n\r\n  modifier onlyauthorized {\r\n      require(msg.sender == owner || authorizedToTransfer[msg.sender] == true);\r\n      _;\r\n  }\r\n\r\n  modifier alive {\r\n      require(!frozen);\r\n      _;\r\n  }\r\n\r\n  // Transfer DFN\r\n  function TransferDFN(address from, address to, uint amt) onlyauthorized alive public {\r\n    require(0 < amt && amt <= balance[from]);\r\n\r\n    // transfer balance\r\n    balance[to] += amt;\r\n    balance[from] -= amt;\r\n\r\n    // maintain records for convenience of external contracts\r\n    if (!seen[to]) {\r\n        addrList.push(to);\r\n        seen[to] = true;\r\n        nAddresses += 1;\r\n    }\r\n  }\r\n\r\n// Authorize external contract to transfer \r\nfunction AuthorizeToTransfer(address newAddr) onlyowner alive public {\r\n    authorizedToTransfer[newAddr] = true;\r\n}\r\n\r\n// Unauthorize external contract to transfer \r\nfunction UnauthorizeToTransfer(address addr) onlyowner alive public {\r\n    authorizedToTransfer[addr] = false;\r\n}\r\n\r\n// Record notarization string (hash)\r\nfunction Notarize(bytes32 hash) onlyowner alive public {\r\n    notarizationList.push(hash);\r\n}\r\n\r\n// Freeze contract\r\nfunction Freeze() onlyowner alive public {\r\n    // Freeze if this is the second call within 20 blocks\r\n    if (freezeHeight > 0 && block.number < freezeHeight + 20) { frozen = true; }\r\n\r\n    // Otherwise set block number of latest freeze request\r\n    freezeHeight = block.number;\r\n}\r\n\r\n// Empty out funds that accidentally end up on this contract\r\nfunction emptyTo(address addr) onlyowner public {\r\n    addr.transfer(address(this).balance);\r\n}\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"TransferDFN\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"frozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"freezeHeight\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"notarizationList\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedToTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"emptyTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"seen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addrList\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"AuthorizeToTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"Notarize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"UnauthorizeToTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"DFNTokens","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a43f9c152356b1e2c734fd007902711a227a53b21afc942a7475449aeb978ddc"}]}