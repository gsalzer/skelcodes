{"status":"1","message":"OK","result":[{"SourceCode":"contract IToken {\r\n    function totalSupply() constant returns (uint256 supply) {}\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {}\r\n    function transferViaProxy(address _from, address _to, uint _value) returns (uint error) {}\r\n    function transferFromViaProxy(address _source, address _from, address _to, uint256 _amount) returns (uint error) {}\r\n    function approveFromProxy(address _source, address _spender, uint256 _value) returns (uint error) {}\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\r\n    function issueNewCoins(address _destination, uint _amount) returns (uint error){}\r\n    function issueNewHeldCoins(address _destination, uint _amount){}\r\n    function destroyOldCoins(address _destination, uint _amount) returns (uint error) {}\r\n    function takeTokensForBacking(address _destination, uint _amount){}\r\n}\r\n\r\n\r\ncontract DestructionContract{\r\n\r\n    address public curator;\r\n    address public dev;\r\n    IToken tokenContract;\r\n\r\n    function DestructionContract(){\r\n        dev = msg.sender;\r\n    }\r\n\r\n    function destroy(uint _amount){\r\n        if (msg.sender != curator) throw;\r\n\r\n        tokenContract.destroyOldCoins(msg.sender, _amount);\r\n    }\r\n\r\n    function setDestructionCurator(address _curatorAdress){\r\n        if (msg.sender != dev) throw;\r\n\r\n        curator = _curatorAdress;\r\n    }\r\n\r\n    function setTokenContract(address _contractAddress){\r\n        if (msg.sender != curator) throw;\r\n\r\n        tokenContract = IToken(_contractAddress);\r\n    }\r\n\r\n    function killContract(){\r\n        if (msg.sender != dev) throw;\r\n\r\n        selfdestruct(dev);\r\n    }\r\n\r\n    function tokenAddress() constant returns (address tokenAddress){\r\n        return address(tokenContract);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"killContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"setTokenContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_curatorAdress\",\"type\":\"address\"}],\"name\":\"setDestructionCurator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"DestructionContract","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://de1f5d4fea749f1f8017eda6cd1bbfaad6ac7f88e58406d61348aff91e34eadd"}]}