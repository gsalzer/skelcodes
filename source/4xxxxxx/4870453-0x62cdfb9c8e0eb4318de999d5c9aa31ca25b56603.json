{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n/// @title SafeMath\r\n/// @dev Math operations with safety checks that throw on error\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n/// @title ERC20 Standard Token interface\r\ncontract IERC20Token {\r\n    uint256 public totalSupply;\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    event Burn(address indexed from, uint256 value);\r\n}\r\n\r\n/// @title ERC20 Standard Token implementation\r\ncontract ERC20Token is IERC20Token {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    mapping (address => uint256) public balances;\r\n    mapping (address => mapping (address => uint256)) public allowed;\r\n\r\n    modifier validAddress(address _address) {\r\n        require(_address != 0x0);\r\n        require(_address != address(this));\r\n        _;\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint _value) internal validAddress(_to) {\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n\r\n        Transfer(_from, _to, _value);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        _transfer(msg.sender, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n\r\n        _transfer(_from, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public validAddress(_spender) returns (bool success) {\r\n        require(_value == 0 || allowed[msg.sender][_spender] == 0);\r\n\r\n        allowed[msg.sender][_spender] = _value;\r\n\r\n        Approval(msg.sender, _spender, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n}\r\n\r\ncontract Owned {\r\n\r\n    address public owner;\r\n\r\n    function Owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier validAddress(address _address) {\r\n        require(_address != 0x0);\r\n        require(_address != address(this));\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        assert(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public validAddress(_newOwner) onlyOwner {\r\n        require(_newOwner != owner);\r\n\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\n/// @title BC2B contract - crowdfunding code for BC2B Project\r\ncontract BC2BToken is ERC20Token, Owned {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    string public constant name = \"BC2B\";\r\n    string public constant symbol = \"BC2B\";\r\n    uint32 public constant decimals = 18;\r\n\r\n    // SET current initial token supply\r\n    uint256 public initialSupply = 10000000;\r\n    // \r\n    bool public fundingEnabled = true;\r\n    // The maximum tokens available for sale\r\n    uint256 public maxSaleToken;\r\n    // Total number of tokens sold\r\n    uint256 public totalSoldTokens;\r\n    // Total number of tokens for BC2B Project\r\n    uint256 public totalProjectToken;\r\n    // Funding wallets, which allowed the transaction during the crowdfunding\r\n    address[] public wallets;\r\n    // The flag indicates if the BC2B contract is in enable / disable transfers\r\n    bool public transfersEnabled = true; \r\n\r\n    // List wallets to allow transactions tokens\r\n    uint[256] private nWallets;\r\n    // Index on the list of wallets to allow reverse lookup\r\n    mapping(uint => uint) private iWallets;\r\n\r\n    event Finalize();\r\n    event DisableTransfers();\r\n\r\n    /// @notice BC2B Project\r\n    /// @dev Constructor\r\n    function BC2BToken() public {\r\n\r\n        initialSupply = initialSupply * 10 ** uint256(decimals);\r\n\r\n        totalSupply = initialSupply;\r\n        // Initializing 60% of tokens for sale\r\n        // maxSaleToken = initialSupply * 60 / 100 (60% this is maxSaleToken & 100% this is initialSupply)\r\n        // totalProjectToken will be calculated in function finalize()\r\n        // \r\n        // |------------maxSaleToken------totalProjectToken|\r\n        // |================60%================|====40%====|\r\n        // |------------------totalSupply------------------|\r\n        maxSaleToken = totalSupply.mul(60).div(100);\r\n        // Give all the tokens to a COLD wallet\r\n        balances[msg.sender] = maxSaleToken;\r\n        // SET HOT wallets\r\n        wallets = [\r\n                0xbED1c18C16868D7C34CEE770e10ae3175b4809Ce,\r\n                0x6F8E76fd90153D4a73491044972a4edE1e216a26,\r\n                0xB75D0fa5C82956CBA2724344B74261DC6dc74CDa\r\n            ];\r\n        // Add COLD wallet (owner)\r\n        nWallets[1] = uint(msg.sender);\r\n        iWallets[uint(msg.sender)] = 1;\r\n\r\n        for (uint index = 0; index < wallets.length; index++) {\r\n            nWallets[2 + index] = uint(wallets[index]);\r\n            iWallets[uint(wallets[index])] = index + 2;\r\n        }\r\n    }\r\n\r\n    modifier validAddress(address _address) {\r\n        require(_address != 0x0);\r\n        require(_address != address(this));\r\n        _;\r\n    }\r\n\r\n    modifier transfersAllowed() {\r\n        require(transfersEnabled);\r\n        _;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public transfersAllowed() returns (bool success) {\r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public transfersAllowed() returns (bool) {\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n    function _transferProject(address _to, uint256 _value) private {\r\n        balances[_to] = balances[_to].add(_value);\r\n\r\n        Transfer(this, _to, _value);\r\n    }\r\n\r\n    function finalize() external onlyOwner {\r\n        require(fundingEnabled);\r\n\r\n        uint256 soldTokens = maxSaleToken;\r\n\r\n        for (uint index = 1; index < nWallets.length; index++) {\r\n            if (balances[address(nWallets[index])] > 0) {\r\n                // Get total sold tokens on the funding wallets\r\n                // totalSoldTokens is 60% of the total number of tokens\r\n                soldTokens = soldTokens.sub(balances[address(nWallets[index])]);\r\n\r\n                Burn(address(nWallets[index]), balances[address(nWallets[index])]);\r\n                // Burning tokens on funding wallet\r\n                balances[address(nWallets[index])] = 0;\r\n            }\r\n        }\r\n\r\n        totalSoldTokens = soldTokens;\r\n\r\n        // totalProjectToken = totalSoldTokens * 40 / 60 (40% this is BC2B Project & 60% this is totalSoldTokens)\r\n        //\r\n        // |----------totalSoldTokens-----totalProjectToken|\r\n        // |================60%================|====40%====|\r\n        // |totalSupply=(totalSoldTokens+totalProjectToken)|\r\n        totalProjectToken = totalSoldTokens.mul(40).div(60);\r\n\r\n        totalSupply = totalSoldTokens.add(totalProjectToken);\r\n        // SET 40% of totalSupply tokens for BC2B\r\n        _transferProject(0xB09Df01b913eb1975e16b408eDe9Ecb8360A1627, totalSupply.mul(40).div(100));\r\n\r\n        fundingEnabled = false;\r\n\r\n        Finalize();\r\n    }\r\n\r\n    function disableTransfers() external onlyOwner {\r\n        require(transfersEnabled);\r\n\r\n        transfersEnabled = false;\r\n\r\n        DisableTransfers();\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalProjectToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSaleToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"wallets\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSoldTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Finalize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DisableTransfers\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"BC2BToken","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://35739ce6634b691bcd33d6c92c63cf5873d4a69248b15e3b67beadab8daf7882"}]}