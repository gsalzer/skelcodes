{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract GeneScienceInterface {\r\n    /// @dev simply a boolean to indicate this is the contract we expect to be\r\n    function isGeneScience() public pure returns (bool);\r\n\r\n    /// @dev given genes of kitten 1 & 2, return a genetic combination - may have a random factor\r\n    /// @param genes1 genes of mom\r\n    /// @param genes2 genes of sire\r\n    /// @return the genes that are supposed to be passed down the child\r\n    function mixGenes(uint256 genes1, uint256 genes2, uint256 targetBlock) public returns (uint256);\r\n}\r\n\r\ncontract KittiesDNA {\r\n    GeneScienceInterface geneScience;\r\n    \r\n    function KittiesDNA() public {\r\n        geneScience = GeneScienceInterface(0xf97e0A5b616dfFC913e72455Fde9eA8bBe946a2B);\r\n    }\r\n    \r\n    function mixGenes(uint256 matronGenes, uint256 sireGenes, uint256 targetBlock) public returns (uint256) {\r\n        return geneScience.mixGenes(matronGenes, sireGenes, targetBlock);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"matronGenes\",\"type\":\"uint256\"},{\"name\":\"sireGenes\",\"type\":\"uint256\"},{\"name\":\"targetBlock\",\"type\":\"uint256\"}],\"name\":\"mixGenes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"KittiesDNA","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://aeb3171a4042f757b9a708e882cf42d844ee1833bb44f34acc8f46fd06f1eb6e"}]}