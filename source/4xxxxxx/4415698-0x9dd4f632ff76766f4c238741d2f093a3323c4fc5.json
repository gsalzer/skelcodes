{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n/// @title SafeMath\r\n/// @dev Math operations with safety checks that throw on error\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract IOwned {\r\n    function owner() public constant returns (address) { owner; }\r\n}\r\n\r\ncontract Owned is IOwned {\r\n    address public owner;\r\n\r\n    function Owned() {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner {\r\n        assert(msg.sender == owner);\r\n        _;\r\n    }\r\n}\r\n\r\n/// @title B2BK (B2BX) contract interface\r\ncontract IB2BKToken {\r\n    function totalSupply() public constant returns (uint256) { totalSupply; }\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) { _owner; balance; }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n\r\n    event Buy(address indexed _from, address indexed _to, uint256 _rate, uint256 _value);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event FundTransfer(address indexed backer, uint amount, bool isContribution);\r\n    event UpdateRate(uint256 _rate);\r\n    event Finalize(address indexed _from, uint256 _value);\r\n    event Burn(address indexed _from, uint256 _value);\r\n}\r\n\r\n/// @title B2BK (B2BX) contract - integration code for KICKICO.\r\ncontract B2BKToken is IB2BKToken, Owned {\r\n    using SafeMath for uint256;\r\n \r\n    string public constant name = \"B2BX KICKICO\";\r\n    string public constant symbol = \"B2BK\";\r\n    uint8 public constant decimals = 18;\r\n\r\n    uint256 public totalSupply = 0;\r\n    // Total number of tokens available for BUY.\r\n    uint256 public constant totalMaxBuy = 5000000 ether;\r\n\r\n    // The total number of ETH.\r\n    uint256 public totalETH = 0;\r\n\r\n    address public wallet;\r\n    uint256 public rate = 0;\r\n\r\n    // The flag indicates is in transfers state.\r\n    bool public transfers = false;\r\n    // The flag indicates is in BUY state.\r\n    bool public finalized = false;\r\n\r\n    mapping (address => uint256) public balanceOf;\r\n\r\n    /// @notice B2BK Project - Initializing.\r\n    /// @dev Constructor.\r\n    function B2BKToken(address _wallet, uint256 _rate) validAddress(_wallet) {\r\n        wallet = _wallet;\r\n        rate = _rate;\r\n    }\r\n\r\n    modifier validAddress(address _address) {\r\n        assert(_address != 0x0);\r\n        _;\r\n    }\r\n\r\n    modifier transfersAllowed {\r\n        require(transfers);\r\n        _;\r\n    }\r\n\r\n    modifier isFinalized {\r\n        require(finalized);\r\n        _;\r\n    }\r\n\r\n    modifier isNotFinalized {\r\n        require(!finalized);\r\n        _;\r\n    }\r\n\r\n    /// @notice This function is disabled. Addresses having B2BK tokens automatically receive an equal number of B2BX tokens.\r\n    function transfer(address _to, uint256 _value) public transfersAllowed returns (bool success) {\r\n        return false;\r\n    }\r\n\r\n    /// @notice This function if anybody sends ETH directly to this contract, consider he is getting B2BK.\r\n    function () payable {\r\n        buy(msg.sender);\r\n    }\r\n\r\n    /// @notice This function sends B2BK tokens to the specified address when sending ETH\r\n    /// @param _to Address of the recipient\r\n    function buy(address _to) public validAddress(_to) isNotFinalized payable {\r\n        uint256 _amount = msg.value;\r\n\r\n        assert(_amount > 0);\r\n\r\n        uint256 _tokens = _amount.mul(rate);\r\n\r\n        assert(totalSupply.add(_tokens) <= totalMaxBuy);\r\n\r\n        totalSupply = totalSupply.add(_tokens);\r\n        totalETH = totalETH.add(_amount);\r\n\r\n        balanceOf[_to] = balanceOf[_to].add(_tokens);\r\n\r\n        wallet.transfer(_amount);\r\n\r\n        Buy(msg.sender, _to, rate, _tokens);\r\n        Transfer(this, _to, _tokens);\r\n        FundTransfer(msg.sender, _amount, true);\r\n    }\r\n\r\n    /// @notice This function updates rates.\r\n    function updateRate(uint256 _rate) external isNotFinalized onlyOwner {\r\n        rate = _rate;\r\n\r\n        UpdateRate(rate);\r\n    }\r\n\r\n    /// @notice This function completes BUY tokens.\r\n    function finalize() external isNotFinalized onlyOwner {\r\n        finalized = true;\r\n\r\n        Finalize(msg.sender, totalSupply);\r\n    }\r\n\r\n    /// @notice This function burns all B2BK tokens on the address that caused this function.\r\n    function burn() external isFinalized {\r\n        uint256 _balance = balanceOf[msg.sender];\r\n\r\n        assert(_balance > 0);\r\n\r\n        totalSupply = totalSupply.sub(_balance);\r\n        balanceOf[msg.sender] = 0;\r\n\r\n        Burn(msg.sender, _balance);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"updateRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMaxBuy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfers\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_rate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_rate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"UpdateRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Finalize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"B2BKToken","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000008dbaaf884dec1f8858725024a5aca09e2ef1d838000000000000000000000000000000000000000000000000000000000000017c","Library":"","SwarmSource":"bzzr://d36b5aebb22c65638963ac2375984c6f1edc3025d6a024513b06c8d9b986aa83"}]}