{"status":"1","message":"OK","result":[{"SourceCode":"contract SimplePyramid {\r\n    uint public constant MINIMUM_INVESTMENT = 1e15; // 0.001 ether\r\n    uint public numInvestors = 0;\r\n    uint public depth = 0;\r\n    address[] public investors;\r\n    mapping(address => uint) public balances;\r\n\r\n    function SimplePyramid () public payable {\r\n        require(msg.value >= MINIMUM_INVESTMENT);\r\n        investors.length = 3;\r\n        investors[0] = msg.sender;\r\n        numInvestors = 1;\r\n        depth = 1;\r\n        balances[address(this)] = msg.value;\r\n    }\r\n   \r\n    function () payable public {\r\n        require(msg.value >= MINIMUM_INVESTMENT);\r\n        balances[address(this)] += msg.value;\r\n\r\n        numInvestors += 1;\r\n        investors[numInvestors - 1] = msg.sender;\r\n\r\n        if (numInvestors == investors.length) {\r\n            // pay out previous layer\r\n            uint endIndex = numInvestors - 2**depth;\r\n            uint startIndex = endIndex - 2**(depth-1);\r\n            for (uint i = startIndex; i < endIndex; i++)\r\n                balances[investors[i]] += MINIMUM_INVESTMENT;\r\n\r\n            // spread remaining ether among all participants\r\n            uint paid = MINIMUM_INVESTMENT * 2**(depth-1);\r\n            uint eachInvestorGets = (balances[address(this)] - paid) / numInvestors;\r\n            for(i = 0; i < numInvestors; i++)\r\n                balances[investors[i]] += eachInvestorGets;\r\n\r\n            // update state variables\r\n            balances[address(this)] = 0;\r\n            depth += 1;\r\n            investors.length += 2**depth;\r\n        }\r\n    }\r\n\r\n    function withdraw () public {\r\n        uint payout = balances[msg.sender];\r\n        balances[msg.sender] = 0;\r\n        msg.sender.transfer(payout);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"numInvestors\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investors\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"depth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_INVESTMENT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"SimplePyramid","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fb88b107b59309d1376291de76c6e53b96f38a5285a8eb97895f96f6e49e4ec9"}]}