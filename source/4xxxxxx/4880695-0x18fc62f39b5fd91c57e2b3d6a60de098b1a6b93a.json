{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract ERC20Cutted {\r\n    \r\n  function balanceOf(address who) public constant returns (uint256);\r\n  \r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  \r\n}\r\n\r\ncontract Distributor {\r\n\r\n  address public owner;\r\n\r\n  mapping (address => uint) public received;\r\n    \r\n  mapping (address => uint) public balances;\r\n\r\n  address[] public stopList;\r\n\r\n  mapping (address => uint) public stopAddresses;\r\n\r\n  uint public stopAddressesTotal;\r\n\r\n  address[] public receivers;\r\n  \r\n  uint public index;\r\n  \r\n  uint public total;\r\n\r\n  uint public receivedTotal;\r\n\r\n  ERC20Cutted public token = ERC20Cutted(0xE2FB6529EF566a080e6d23dE0bd351311087D567);\r\n\r\n  modifier onlyOwner() {\r\n    require(owner == msg.sender);\r\n    _;\r\n  }\r\n  \r\n  function Distributor() public {\r\n      owner = msg.sender;\r\n  }\r\n\r\n  function isContract(address _addr) private view returns (bool) {\r\n    uint length;\r\n    assembly {\r\n      length := extcodesize(_addr)\r\n    }\r\n    return (length>0);\r\n  }\r\n  \r\n  function setToken(address newToken) public onlyOwner {\r\n    token = ERC20Cutted(newToken);\r\n  }\r\n  \r\n  function receiversCount() public view returns(uint) {\r\n    return receivers.length;\r\n  }\r\n\r\n  function receivedCount() public view returns(uint) {\r\n    return index;\r\n  }\r\n\r\n  function addReceivers(address[] _receivers, uint[] _balances) public onlyOwner {\r\n    for(uint i = 0; i < _receivers.length; i++) {\r\n      address receiver = _receivers[i];\r\n      uint balance = _balances[i];\r\n      if(balance > 0) {\r\n        if(isContract(receiver)) {\r\n          if(stopAddresses[receiver] == 0) stopList.push(receiver);\r\n          stopAddresses[receiver] += balance;\r\n          stopAddressesTotal += balance;\r\n        } else {\r\n          if(balances[receiver] == 0) receivers.push(receiver); \r\n          balances[receiver] += balance;\r\n          total += balance;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function changeBalance(address to, uint newValue) public onlyOwner {\r\n    require(balances[to] > 0);\r\n    total -= balances[to]; \r\n    balances[to] = newValue;\r\n    total += newValue;\r\n  }\r\n\r\n  function process(uint count) public onlyOwner {\r\n    address receiver;\r\n    uint value;\r\n    for(uint i = 0; index < receivers.length && i < count; i++) {\r\n      receiver = receivers[index];\r\n      value = balances[receiver];\r\n      token.transfer(receiver, value);\r\n      received[receiver] = value;\r\n      receivedTotal += value;\r\n      index++;\r\n    }\r\n  }\r\n\r\n  function retrieveCurrentTokensToOwner() public {\r\n    retrieveTokens(owner, address(token));\r\n  }\r\n\r\n  function retrieveTokens(address to, address anotherToken) public onlyOwner {\r\n    ERC20Cutted alienToken = ERC20Cutted(anotherToken);\r\n    alienToken.transfer(to, alienToken.balanceOf(this));\r\n  }\r\n\r\n  function () public payable {\r\n  }\r\n  \r\n  function retreive() public onlyOwner {\r\n    owner.transfer(this.balance);\r\n  }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"receivedTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"total\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"receiversCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"retrieveCurrentTokensToOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"anotherToken\",\"type\":\"address\"}],\"name\":\"retrieveTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stopList\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"stopAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receivers\",\"type\":\"address[]\"},{\"name\":\"_balances\",\"type\":\"uint256[]\"}],\"name\":\"addReceivers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"retreive\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"receivedCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"receivers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopAddressesTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"received\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"changeBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"process\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Distributor","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e70ac296745375152e98ff8d5741f4213f90ae5f3953ea3a18eebeba17f21b49"}]}