{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n \r\ncontract Token {\r\n    string public symbol = \"711\";\r\n    string public name = \"711 token\";\r\n    uint8 public constant decimals = 18;\r\n    uint256 _totalSupply = 711000000000000000000;\r\n    address owner = 0;\r\n    bool startDone = false;\r\n    uint public amountRaised;\r\n    uint public deadline;\r\n    uint public overRaisedUnsend = 0;\r\n    uint public backers = 0;\r\n    uint rate = 4;\r\n    uint successcoef = 2;\r\n    uint unreserved = 80;\r\n    uint _durationInMinutes = 0;\r\n    bool fundingGoalReached = false;\r\n    mapping(address => uint256) public balanceOf;\r\n\t\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    mapping(address => uint256) balances;\r\n \r\n    mapping(address => mapping (address => uint256)) allowed;\r\n \r\n    function Token(address adr) {\r\n\t\towner = adr;        \r\n    }\r\n\t\r\n\tfunction StartICO(uint256 durationInMinutes)\r\n\t{\r\n\t\tif (msg.sender == owner && startDone == false)\r\n\t\t{\r\n\t\t\tbalances[owner] = _totalSupply;\r\n\t\t\t_durationInMinutes = durationInMinutes;\r\n            deadline = now + durationInMinutes * 1 minutes;\r\n\t\t\tstartDone = true;\r\n\t\t}\r\n\t}\r\n \r\n    function totalSupply() constant returns (uint256 totalSupply) {        \r\n\t\treturn _totalSupply;\r\n    }\r\n \r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n \r\n    function transfer(address _to, uint256 _amount) returns (bool success) {\r\n        if (balances[msg.sender] >= _amount \r\n            && _amount > 0\r\n            && balances[_to] + _amount > balances[_to]) {\r\n            balances[msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(msg.sender, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) returns (bool success) {\r\n        if (balances[_from] >= _amount\r\n            && allowed[_from][msg.sender] >= _amount\r\n            && _amount > 0\r\n            && balances[_to] + _amount > balances[_to]) {\r\n            balances[_from] -= _amount;\r\n            allowed[_from][msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(_from, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    function () payable {\r\n        uint _amount = msg.value;\r\n        uint amount = msg.value;\r\n        _amount = _amount * rate;\r\n        if (amountRaised + _amount <= _totalSupply * unreserved / 100\r\n            && balances[owner] >= _amount\r\n            && _amount > 0\r\n            && balances[msg.sender] + _amount > balances[msg.sender]\r\n            && now <= deadline\r\n            && !fundingGoalReached \r\n            && startDone) {\r\n        backers += 1;\r\n        balances[msg.sender] += _amount;\r\n        balances[owner] -= _amount;\r\n        amountRaised += _amount;\r\n        Transfer(owner, msg.sender, _amount);\r\n        } else {\r\n            if (!msg.sender.send(amount)) {\r\n                overRaisedUnsend += amount; \r\n            }\r\n        }\r\n    }\r\n \r\n    function approve(address _spender, uint256 _amount) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n \r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    \r\n    modifier afterDeadline() { if (now > deadline || amountRaised >= _totalSupply / successcoef) _; }\r\n\r\n    function safeWithdrawal() afterDeadline {\r\n\r\n    if (amountRaised < _totalSupply / successcoef) {\r\n            uint _amount = balances[msg.sender];\r\n            balances[msg.sender] = 0;\r\n            if (_amount > 0) {\r\n                if (msg.sender.send(_amount / rate)) {\r\n                    balances[owner] += _amount;\r\n                    amountRaised -= _amount;\r\n                    Transfer(msg.sender, owner, _amount);\r\n                } else {\r\n                    balances[msg.sender] = _amount;\r\n                }\r\n            }\r\n        }\r\n\r\n    if (owner == msg.sender\r\n    \t&& amountRaised >= _totalSupply / successcoef) {\r\n           if (owner.send(this.balance)) {\r\n               fundingGoalReached = true;\r\n            } \r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"durationInMinutes\",\"type\":\"uint256\"}],\"name\":\"StartICO\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"backers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"overRaisedUnsend\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"adr\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Token","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000c711c2c4a73ffabb52b289d24e53f70a0544efe1","Library":"","SwarmSource":"bzzr://77c504f9117efe0c3c57be1014c1ae258e206bd7fd16704a7cd97e87e476dd34"}]}