{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\ncontract MigrationAgent {\r\n    function migrateFrom(address _from, uint256 _value);\r\n}\r\n\r\ncontract ERC20Interface {\r\n     function totalSupply() constant returns (uint256 totalSupply);\r\n     function balanceOf(address _owner) constant returns (uint256 balance);\r\n     function transfer(address _to, uint256 _value) returns (bool success);\r\n     function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n     function approve(address _spender, uint256 _value) returns (bool success);\r\n     function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n     event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n     event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n/// Ethereum Ultimate (ETHU)\r\ncontract EthereumUltimateToken is ERC20Interface {\r\n    string public constant name = \"Ethereum Ultimate\";\r\n    string public constant symbol = \"ETHU\";\r\n    uint8 public constant decimals = 18;  // 18 decimal places, the same as ETH.\r\n    uint256 public constant tokenCreationCap = 3000000* 10**18;\r\n    uint256 public constant tokenCreationMin = 250000* 10**18;\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n    uint public fundingStart;\r\n    uint public fundingEnd;\r\n    bool public funding = true;\r\n    address public master;\r\n    uint256 totalTokens;\r\n    uint256 soldAfterPowerHour;\r\n    mapping (address => uint256) balances;\r\n    mapping (address => uint) lastTransferred;\r\n    mapping (address => uint256) balancesEther;\r\n    address public migrationAgent;\r\n    uint256 public totalMigrated;\r\n    event Migrate(address indexed _from, address indexed _to, uint256 _value);\r\n    event Refund(address indexed _from, uint256 _value);\r\n    uint totalParticipants;\r\n\r\n    function EthereumUltimateToken() {\r\n        master = msg.sender;\r\n        fundingStart = 1509279285;\r\n        fundingEnd = 1514764800;\r\n    }\r\n    \r\n    function getAmountofTotalParticipants() constant returns (uint){\r\n        return totalParticipants;\r\n    }\r\n    \r\n    function getAmountSoldAfterPowerDay() constant external returns(uint256){\r\n        return soldAfterPowerHour;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        if(funding) throw;\r\n\r\n        var senderBalance = balances[msg.sender];\r\n        if (senderBalance >= _value && _value > 0) {\r\n            senderBalance -= _value;\r\n            balances[msg.sender] = senderBalance;\r\n            \r\n            balances[_to] += _value;\r\n            \r\n            lastTransferred[msg.sender]=block.timestamp;\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function totalSupply() constant returns (uint256 totalSupply) {\r\n        return totalTokens;\r\n    }\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n    function EtherBalanceOf(address _owner) constant returns (uint256) {\r\n        return balancesEther[_owner];\r\n    }\r\n    function TimeLeft() external constant returns (uint256) {\r\n        if(fundingEnd>block.timestamp)\r\n            return fundingEnd-block.timestamp;\r\n        else\r\n            return 0;\r\n    }\r\n    function TimeLeftBeforeCrowdsale() external constant returns (uint256) {\r\n        if(fundingStart>block.timestamp)\r\n            return fundingStart-block.timestamp;\r\n        else\r\n            return 0;\r\n    }\r\nfunction migrate(uint256 _value) external {\r\n        if(funding) throw;\r\n        if(migrationAgent == 0) throw;\r\n        if(_value == 0) throw;\r\n        if(_value > balances[msg.sender]) throw;\r\n        balances[msg.sender] -= _value;\r\n        totalTokens -= _value;\r\n        totalMigrated += _value;\r\n        MigrationAgent(migrationAgent).migrateFrom(msg.sender, _value);\r\n        Migrate(msg.sender, migrationAgent, _value);\r\n    }\r\n\r\n    function setMigrationAgent(address _agent) external {\r\n        if(funding) throw;\r\n        \r\n        if(migrationAgent != 0) throw;\r\n        \r\n        if(msg.sender != master) throw;\r\n        \r\n        migrationAgent = 0xc04FdF16cDf0af953D2eF14cFB01cDdBE881Dd2D;\r\n    }\r\n    \r\n    function getExchangeRate() constant returns(uint){\r\n            return 30000; // 30000 \r\n    }\r\n    \r\n    function ICOopen() constant returns(bool){\r\n        if(!funding) return false;\r\n        else if(block.timestamp < fundingStart) return false;\r\n        else if(block.timestamp > fundingEnd) return false;\r\n        else if(tokenCreationCap <= totalTokens) return false;\r\n        else return true;\r\n    }\r\n\r\n    function() payable external {\r\n        if(!funding) throw;\r\n        if(block.timestamp < fundingStart) throw;\r\n        if(block.timestamp > fundingEnd) throw;\r\n        if(msg.value == 0) throw;\r\n        if((msg.value  * getExchangeRate()) > (tokenCreationCap - totalTokens)) throw;\r\n        var numTokens = msg.value * getExchangeRate();\r\n        totalTokens += numTokens;\r\n        \r\n        if(getExchangeRate()!=30000){\r\n            soldAfterPowerHour += numTokens;\r\n        }\r\n        balances[msg.sender] += numTokens;\r\n        balancesEther[msg.sender] += msg.value;\r\n        totalParticipants+=1;\r\n        Transfer(0, msg.sender, numTokens);\r\n    }\r\n\r\n    function finalize() external {\r\n        if(!funding) throw;\r\n        funding = false;\r\n        uint256 percentOfTotal = 25;\r\n        uint256 additionalTokens = totalTokens * percentOfTotal / (37 + percentOfTotal);\r\n        totalTokens += additionalTokens;\r\n        balances[master] += additionalTokens;\r\n        Transfer(0, master, additionalTokens);\r\n        if (!master.send(this.balance)) throw;\r\n    }\r\n\r\n    function refund() external {\r\n        if(!funding) throw;\r\n        if(block.timestamp <= fundingEnd) throw;\r\n        if(totalTokens >= tokenCreationMin) throw;\r\n\r\n        var ethuValue = balances[msg.sender];\r\n        var ethValue = balancesEther[msg.sender];\r\n        if (ethuValue == 0) throw;\r\n        balances[msg.sender] = 0;\r\n        balancesEther[msg.sender] = 0;\r\n        totalTokens -= ethuValue;\r\n\r\n        Refund(msg.sender, ethValue);\r\n        if (!msg.sender.send(ethValue)) throw;\r\n    }\r\n\t\r\n     function transferFrom(address _from,address _to,uint256 _amount) returns (bool success) {\r\n         if(funding) throw;\r\n         if (balances[_from] >= _amount\r\n             && allowed[_from][msg.sender] >= _amount\r\n             && _amount > 0\r\n             && balances[_to] + _amount > balances[_to]) {\r\n             balances[_from] -= _amount;\r\n             allowed[_from][msg.sender] -= _amount;\r\n             balances[_to] += _amount;\r\n             Transfer(_from, _to, _amount);\r\n             return true;\r\n         } else {\r\n             return false;\r\n         }\r\n     }\r\n  \r\n     function approve(address _spender, uint256 _amount) returns (bool success) {\r\n         if(funding) throw;\r\n         allowed[msg.sender][_spender] = _amount;\r\n         Approval(msg.sender, _spender, _amount);\r\n         return true;\r\n     }\r\n  \r\n     function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n         return allowed[_owner][_spender];\r\n     }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"ICOopen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingEnd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"EtherBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAmountSoldAfterPowerDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCreationCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"setMigrationAgent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"migrationAgent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TimeLeftBeforeCrowdsale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMigrated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingStart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCreationMin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"funding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAmountofTotalParticipants\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TimeLeft\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"master\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Migrate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"EthereumUltimateToken","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8e4e3f3437c02319158d7ba568ec514d12e498fb3ee93542b5ed3fb2ea686723"}]}