{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity^0.4.17;\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable{\r\n  address public owner;\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public constant returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public constant returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances. \r\n */\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint256;\r\n\r\n  mapping(address => uint256) balances;\r\n\r\n  /**\r\n  * @dev transfer token for a specified address\r\n  * @param _to The address to transfer to.\r\n  * @param _value The amount to be transferred.\r\n  */\r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @dev Gets the balance of the specified address.\r\n  * @param _owner The address to query the the balance of. \r\n  * @return An uint256 representing the amount owned by the passed address.\r\n  */\r\n  function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @title Standard ERC20 token\r\n *\r\n * @dev Implementation of the basic standard token.\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n */\r\ncontract StandardToken is ERC20, BasicToken {\r\n\r\n  mapping (address => mapping (address => uint256)) allowed;\r\n\r\n\r\n  /**\r\n   * @dev Transfer tokens from one address to another\r\n   * @param _from address The address which you want to send tokens from\r\n   * @param _to address The address which you want to transfer to\r\n   * @param _value uint256 the amout of tokens to be transfered\r\n   */\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n    var _allowance = allowed[_from][msg.sender];\r\n\r\n    // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\r\n    // require (_value <= _allowance);\r\n\r\n    balances[_to] = balances[_to].add(_value);\r\n    balances[_from] = balances[_from].sub(_value);\r\n    allowed[_from][msg.sender] = _allowance.sub(_value);\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Aprove the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n   * @param _spender The address which will spend the funds.\r\n   * @param _value The amount of tokens to be spent.\r\n   */\r\n  function approve(address _spender, uint256 _value) public returns (bool) {\r\n\r\n    // To change the approve amount you first have to reduce the addresses`\r\n    //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n    //  already 0 to mitigate the race condition described here:\r\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\r\n   * @param _owner address The address which owns the funds.\r\n   * @param _spender address The address which will spend the funds.\r\n   * @return A uint256 specifing the amount of tokens still avaible for the spender.\r\n   */\r\n  function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n}\r\n\r\ncontract VuePayToken is StandardToken, Ownable {\r\n\tusing SafeMath for uint256;\r\n\t// Events\r\n\tevent CreatedVUP(address indexed _creator, uint256 _amountOfVUP);\r\n\tevent VUPRefundedForWei(address indexed _refunder, uint256 _amountOfWei);\r\n\tevent print(uint256 vup);\r\n\t// Token data\r\n\tstring public constant name = \"VuePay Token\";\r\n\tstring public constant symbol = \"VUP\";\r\n\tuint256 public constant decimals = 18;  // Since our decimals equals the number of wei per ether, we needn't multiply sent values when converting between VUP and ETH.\r\n\tstring public version = \"1.0\";\r\n\t\r\n\t// Addresses and contracts\r\n\taddress public executor;\r\n\t//Vuepay Multisig Wallet\r\n\taddress public vuePayETHDestination=0x8B8698DEe100FC5F561848D0E57E94502Bd9318b;\r\n\t//Vuepay Development activities Wallet\r\n\taddress public constant devVUPDestination=0x31403fA55aEa2065bBDd2778bFEd966014ab0081;\r\n\t//VuePay Core Team reserve Wallet\r\n\taddress public constant coreVUPDestination=0x22d310194b5ac5086bDacb2b0f36D8f0a5971b23;\r\n\t//VuePay Advisory and Promotions (PR/Marketing/Media etcc.) wallet\r\n\taddress public constant advisoryVUPDestination=0x991ABE74a1AC3d903dA479Ca9fede3d0954d430B;\r\n\t//VuePay User DEvelopment Fund Wallet\r\n\taddress public constant udfVUPDestination=0xf4307C073451b80A0BaD1E099fD2B7f0fe38b7e9;\r\n\t//Vuepay Cofounder Wallet\r\n\taddress public constant cofounderVUPDestination=0x863B2217E80e6C6192f63D3716c0cC7711Fad5b4;\r\n\t//VuePay Unsold Tokens wallet\r\n\taddress public constant unsoldVUPDestination=0x5076084a3377ecDF8AD5cD0f26A21bA848DdF435;\r\n\t//Total VuePay Sold\r\n\tuint256 public totalVUP;\r\n\t\r\n\t// Sale data\r\n\tbool public saleHasEnded;\r\n\tbool public minCapReached;\r\n\tbool public preSaleEnded;\r\n\tbool public allowRefund;\r\n\tmapping (address => uint256) public ETHContributed;\r\n\tuint256 public totalETHRaised;\r\n\tuint256 public preSaleStartBlock;\r\n\tuint256 public preSaleEndBlock;\r\n\tuint256 public icoEndBlock;\r\n\t\r\n    uint public constant coldStorageYears = 10 years;\r\n    uint public coreTeamUnlockedAt;\r\n    uint public unsoldUnlockedAt;\r\n    uint256 coreTeamShare;\r\n    uint256 cofounderShare;\r\n    uint256 advisoryTeamShare;\r\n    \r\n\t// Calculate the VUP to ETH rate for the current time period of the sale\r\n\tuint256 curTokenRate = VUP_PER_ETH_BASE_RATE;\r\n\tuint256 public constant INITIAL_VUP_TOKEN_SUPPLY =1000000000e18;\r\n\tuint256 public constant VUP_TOKEN_SUPPLY_TIER1 =150000000e18;\r\n    uint256 public constant VUP_TOKEN_SUPPLY_TIER2 =270000000e18;\r\n\tuint256 public constant VUP_TOKEN_SUPPLY_TIER3 =380000000e18;\r\n\tuint256 public constant VUP_TOKEN_SUPPLY_TIER4 =400000000e18;\r\n\t\r\n\tuint256 public constant PRESALE_ICO_PORTION =400000000e18;  // Total for sale in Pre Sale and ICO In percentage\r\n\tuint256 public constant ADVISORY_TEAM_PORTION =50000000e18;  // Total Advisory share In percentage\r\n\tuint256 public constant CORE_TEAM_PORTION =50000000e18;  // Total core Team share  percentage\r\n\tuint256 public constant DEV_TEAM_PORTION =50000000e18;  // Total dev team share In percentage\r\n\tuint256 public constant CO_FOUNDER_PORTION = 350000000e18;  // Total cofounder share In percentage\r\n\tuint256 public constant UDF_PORTION =100000000e18;  // Total user deve fund share In percentage\r\n\t\r\n\tuint256 public constant VUP_PER_ETH_BASE_RATE = 2000;  // 2000 VUP = 1 ETH during normal part of token sale\r\n\tuint256 public constant VUP_PER_ETH_PRE_SALE_RATE = 3000; // 3000 VUP @ 50%  discount in pre sale\r\n\t\r\n\tuint256 public constant VUP_PER_ETH_ICO_TIER2_RATE = 2500; // 2500 VUP @ 25% discount\r\n\tuint256 public constant VUP_PER_ETH_ICO_TIER3_RATE = 2250;// 2250 VUP @ 12.5% discount\r\n\t\r\n\t\r\n\tfunction VuePayToken () public payable\r\n\t{\r\n\r\n\t    totalSupply = INITIAL_VUP_TOKEN_SUPPLY;\r\n\t    balances[msg.sender] = INITIAL_VUP_TOKEN_SUPPLY;\r\n\t    \r\n\t\t//Start Pre-sale approx on the 6th october 8:00 GMT\r\n\t    preSaleStartBlock=4339492;\r\n\t    //preSaleStartBlock=block.number;\r\n\t    preSaleEndBlock = preSaleStartBlock + 37800;  // Equivalent to 14 days later, assuming 32 second blocks\r\n\t    icoEndBlock = preSaleEndBlock + 81000;  // Equivalent to 30 days , assuming 32 second blocks\r\n\t\texecutor = msg.sender;\r\n\t\tsaleHasEnded = false;\r\n\t\tminCapReached = false;\r\n\t\tallowRefund = false;\r\n\t\tadvisoryTeamShare = ADVISORY_TEAM_PORTION;\r\n\t\ttotalETHRaised = 0;\r\n\t\ttotalVUP=0;\r\n\r\n\t}\r\n\r\n\tfunction () payable public {\r\n\t\t\r\n\t\t//minimum .05 Ether required.\r\n\t\trequire(msg.value >= .05 ether);\r\n\t\t// If sale is not active, do not create VUP\r\n\t\trequire(!saleHasEnded);\r\n\t\t//Requires block to be >= Pre-Sale start block \r\n\t\trequire(block.number >= preSaleStartBlock);\r\n\t\t//Requires block.number to be less than icoEndBlock number\r\n\t\trequire(block.number < icoEndBlock);\r\n\t\t//Has the Pre-Sale ended, after 14 days, Pre-Sale ends.\r\n\t\tif (block.number > preSaleEndBlock){\r\n\t\t    preSaleEnded=true;\r\n\t\t}\r\n\t\t// Do not do anything if the amount of ether sent is 0\r\n\t\trequire(msg.value!=0);\r\n\r\n\t\tuint256 newEtherBalance = totalETHRaised.add(msg.value);\r\n\t\t//Get the appropriate rate which applies\r\n\t\tgetCurrentVUPRate();\r\n\t\t// Calculate the amount of VUP being purchase\r\n\t\t\r\n\t\tuint256 amountOfVUP = msg.value.mul(curTokenRate);\r\n\t\r\n        //Accrue VUP tokens\r\n\t\ttotalVUP=totalVUP.add(amountOfVUP);\r\n\t    // if all tokens sold out , sale ends.\r\n\t\trequire(totalVUP<= PRESALE_ICO_PORTION);\r\n\t\t\r\n\t\t// Ensure that the transaction is safe\r\n\t\tuint256 totalSupplySafe = totalSupply.sub(amountOfVUP);\r\n\t\tuint256 balanceSafe = balances[msg.sender].add(amountOfVUP);\r\n\t\tuint256 contributedSafe = ETHContributed[msg.sender].add(msg.value);\r\n\t\t\r\n\t\t// Update individual and total balances\r\n\t\ttotalSupply = totalSupplySafe;\r\n\t\tbalances[msg.sender] = balanceSafe;\r\n\r\n\t\ttotalETHRaised = newEtherBalance;\r\n\t\tETHContributed[msg.sender] = contributedSafe;\r\n\r\n\t\tCreatedVUP(msg.sender, amountOfVUP);\r\n\t}\r\n\t\r\n\tfunction getCurrentVUPRate() internal {\r\n\t        //default to the base rate\r\n\t        curTokenRate = VUP_PER_ETH_BASE_RATE;\r\n\r\n\t        //if VUP sold < 100 mill and still in presale, use Pre-Sale rate\r\n\t        if ((totalVUP <= VUP_TOKEN_SUPPLY_TIER1) && (!preSaleEnded)) {    \r\n\t\t\t        curTokenRate = VUP_PER_ETH_PRE_SALE_RATE;\r\n\t        }\r\n\t\t    //If VUP Sold < 100 mill and Pre-Sale ended, use Tier2 rate\r\n\t        if ((totalVUP <= VUP_TOKEN_SUPPLY_TIER1) && (preSaleEnded)) {\r\n\t\t\t     curTokenRate = VUP_PER_ETH_ICO_TIER2_RATE;\r\n\t\t    }\r\n\t\t    //if VUP Sold > 100 mill, use Tier 2 rate irrespective of Pre-Sale end or not\r\n\t\t    if (totalVUP >VUP_TOKEN_SUPPLY_TIER1 ) {\r\n\t\t\t    curTokenRate = VUP_PER_ETH_ICO_TIER2_RATE;\r\n\t\t    }\r\n\t\t    //if VUP sold more than 200 mill use Tier3 rate\r\n\t\t    if (totalVUP >VUP_TOKEN_SUPPLY_TIER2 ) {\r\n\t\t\t    curTokenRate = VUP_PER_ETH_ICO_TIER3_RATE;\r\n\t\t        \r\n\t\t    }\r\n            //if VUP sod more than 300mill\r\n\t\t    if (totalVUP >VUP_TOKEN_SUPPLY_TIER3){\r\n\t\t        curTokenRate = VUP_PER_ETH_BASE_RATE;\r\n\t\t    }\r\n\t}\r\n    // Create VUP tokens from the Advisory bucket for marketing, PR, Media where we are \r\n    //paying upfront for these activities in VUP tokens.\r\n    //Clients = Media, PR, Marketing promotion etc.\r\n    function createCustomVUP(address _clientVUPAddress,uint256 _value) public onlyOwner {\r\n\t    //Check the address is valid\r\n\t    require(_clientVUPAddress != address(0x0));\r\n\t\trequire(_value >0);\r\n\t\trequire(advisoryTeamShare>= _value);\r\n\t   \r\n\t  \tuint256 amountOfVUP = _value;\r\n\t  \t//Reduce from advisoryTeamShare\r\n\t    advisoryTeamShare=advisoryTeamShare.sub(amountOfVUP);\r\n        //Accrue VUP tokens\r\n\t\ttotalVUP=totalVUP.add(amountOfVUP);\r\n\t\t//Assign tokens to the client\r\n\t\tuint256 balanceSafe = balances[_clientVUPAddress].add(amountOfVUP);\r\n\t\tbalances[_clientVUPAddress] = balanceSafe;\r\n\t\t//Create VUP Created event\r\n\t\tCreatedVUP(_clientVUPAddress, amountOfVUP);\r\n\t\r\n\t}\r\n    \r\n\tfunction endICO() public onlyOwner{\r\n\t\t// Do not end an already ended sale\r\n\t\trequire(!saleHasEnded);\r\n\t\t// Can't end a sale that hasn't hit its minimum cap\r\n\t\trequire(minCapReached);\r\n\t\t\r\n\t\tsaleHasEnded = true;\r\n\r\n\t\t// Calculate and create all team share VUPs\r\n\t\r\n\t    coreTeamShare = CORE_TEAM_PORTION;\r\n\t    uint256 devTeamShare = DEV_TEAM_PORTION;\r\n\t    cofounderShare = CO_FOUNDER_PORTION;\r\n\t    uint256 udfShare = UDF_PORTION;\r\n\t\r\n\t    \r\n\t\tbalances[devVUPDestination] = devTeamShare;\r\n\t\tbalances[advisoryVUPDestination] = advisoryTeamShare;\r\n\t\tbalances[udfVUPDestination] = udfShare;\r\n       \r\n        // Locked time of approximately 9 months before team members are able to redeeem tokens.\r\n        uint nineMonths = 9 * 30 days;\r\n        coreTeamUnlockedAt = now.add(nineMonths);\r\n        // Locked time of approximately 10 years before team members are able to redeeem tokens.\r\n        uint lockTime = coldStorageYears;\r\n        unsoldUnlockedAt = now.add(lockTime);\r\n\r\n\t\tCreatedVUP(devVUPDestination, devTeamShare);\r\n\t\tCreatedVUP(advisoryVUPDestination, advisoryTeamShare);\r\n\t\tCreatedVUP(udfVUPDestination, udfShare);\r\n\r\n\t}\r\n\tfunction unlock() public onlyOwner{\r\n\t   require(saleHasEnded);\r\n       require(now > coreTeamUnlockedAt || now > unsoldUnlockedAt);\r\n       if (now > coreTeamUnlockedAt) {\r\n          balances[coreVUPDestination] = coreTeamShare;\r\n          CreatedVUP(coreVUPDestination, coreTeamShare);\r\n          balances[cofounderVUPDestination] = cofounderShare;\r\n          CreatedVUP(cofounderVUPDestination, cofounderShare);\r\n         \r\n       }\r\n       if (now > unsoldUnlockedAt) {\r\n          uint256 unsoldTokens=PRESALE_ICO_PORTION.sub(totalVUP);\r\n          require(unsoldTokens > 0);\r\n          balances[unsoldVUPDestination] = unsoldTokens;\r\n          CreatedVUP(coreVUPDestination, unsoldTokens);\r\n         }\r\n    }\r\n\r\n\t// Allows VuePay to withdraw funds\r\n\tfunction withdrawFunds() public onlyOwner {\r\n\t\t// Disallow withdraw if the minimum hasn't been reached\r\n\t\trequire(minCapReached);\r\n\t\trequire(this.balance > 0);\r\n\t\tif(this.balance > 0) {\r\n\t\t\tvuePayETHDestination.transfer(this.balance);\r\n\t\t}\r\n\t}\r\n\r\n\t// Signals that the sale has reached its minimum funding goal\r\n\tfunction triggerMinCap() public onlyOwner {\r\n\t\tminCapReached = true;\r\n\t}\r\n\r\n\t// Opens refunding.\r\n\tfunction triggerRefund() public onlyOwner{\r\n\t\t// No refunds if the sale was successful\r\n\t\trequire(!saleHasEnded);\r\n\t\t// No refunds if minimum cap is hit\r\n\t\trequire(!minCapReached);\r\n\t\t// No refunds if the sale is still progressing\r\n\t    require(block.number >icoEndBlock);\r\n\t\trequire(msg.sender == executor);\r\n\t\tallowRefund = true;\r\n\t}\r\n\r\n\tfunction claimRefund() external {\r\n\t\t// No refunds until it is approved\r\n\t\trequire(allowRefund);\r\n\t\t// Nothing to refund\r\n\t\trequire(ETHContributed[msg.sender]!=0);\r\n\r\n\t\t// Do the refund.\r\n\t\tuint256 etherAmount = ETHContributed[msg.sender];\r\n\t\tETHContributed[msg.sender] = 0;\r\n\r\n\t\tVUPRefundedForWei(msg.sender, etherAmount);\r\n\t\tmsg.sender.transfer(etherAmount);\r\n\t}\r\n    //Allow changing the Vuepay MultiSig wallet incase of emergency\r\n\tfunction changeVuePayETHDestinationAddress(address _newAddress) public onlyOwner {\r\n\t\tvuePayETHDestination = _newAddress;\r\n\t}\r\n\t\r\n\tfunction transfer(address _to, uint _value) public returns (bool) {\r\n\t\t// Cannot transfer unless the minimum cap is hit\r\n\t\trequire(minCapReached);\r\n\t\treturn super.transfer(_to, _value);\r\n\t}\r\n\t\r\n\tfunction transferFrom(address _from, address _to, uint _value) public returns (bool) {\r\n\t\t// Cannot transfer unless the minimum cap is hit\r\n\t\trequire(minCapReached);\r\n\t\treturn super.transferFrom(_from, _to, _value);\r\n\t}\r\n\r\n\t\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisoryVUPDestination\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleEndBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalVUP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"triggerRefund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEV_TEAM_PORTION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalETHRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coldStorageYears\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_VUP_TOKEN_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEndBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vuePayETHDestination\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coreTeamUnlockedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VUP_PER_ETH_BASE_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleHasEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CORE_TEAM_PORTION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unsoldUnlockedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minCapReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unsoldVUPDestination\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"coreVUPDestination\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VUP_PER_ETH_PRE_SALE_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VUP_PER_ETH_ICO_TIER3_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clientVUPAddress\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"createCustomVUP\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VUP_TOKEN_SUPPLY_TIER4\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VUP_PER_ETH_ICO_TIER2_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"udfVUPDestination\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimRefund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"devVUPDestination\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADVISORY_TEAM_PORTION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"triggerMinCap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VUP_TOKEN_SUPPLY_TIER3\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"executor\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VUP_TOKEN_SUPPLY_TIER1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cofounderVUPDestination\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"changeVuePayETHDestinationAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ETHContributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CO_FOUNDER_PORTION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UDF_PORTION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRESALE_ICO_PORTION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preSaleStartBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VUP_TOKEN_SUPPLY_TIER2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowRefund\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amountOfVUP\",\"type\":\"uint256\"}],\"name\":\"CreatedVUP\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_refunder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amountOfWei\",\"type\":\"uint256\"}],\"name\":\"VUPRefundedForWei\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"vup\",\"type\":\"uint256\"}],\"name\":\"print\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"VuePayToken","CompilerVersion":"v0.4.17+commit.bdeb9e52","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3e5a4342f961efff8fc4b9073cbb30c0957765427f8edb843681eb8cf587a633"}]}