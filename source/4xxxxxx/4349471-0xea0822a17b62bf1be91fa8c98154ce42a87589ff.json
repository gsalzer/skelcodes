{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract Vault {\r\n    \r\n    event Deposit(address indexed depositor, uint amount);\r\n    event Withdrawal(address indexed to, uint amount);\r\n\r\n    mapping (address => uint) public deposits;\r\n    uint minDeposit;\r\n    bool Locked;\r\n    address Owner;\r\n    uint Date;\r\n\r\n    function initVault() isOpen payable {\r\n        Owner = msg.sender;\r\n        minDeposit = 0.1 ether;\r\n        Locked = false;\r\n    }\r\n\r\n    function() payable { deposit(); }\r\n\r\n    function MinimumDeposit() constant returns (uint) { return minDeposit; }\r\n    function ReleaseDate() constant returns (uint) { return Date; }\r\n    function WithdrawalEnabled() internal returns (bool) { return Date > 0 && Date <= now; }\r\n\r\n    function deposit() payable {\r\n        if (msg.value >= MinimumDeposit()) {\r\n            deposits[msg.sender] += msg.value;\r\n        }\r\n        Deposit(msg.sender, msg.value);\r\n    }\r\n\r\n    function withdraw(address to, uint amount) onlyOwner {\r\n        if (WithdrawalEnabled()) {\r\n            if (deposits[msg.sender] > 0 && amount <= deposits[msg.sender]) {\r\n                to.transfer(amount);\r\n                Withdrawal(to, amount);\r\n            }\r\n        }\r\n    }\r\n    \r\n    function SetReleaseDate(uint NewDate) { Date = NewDate; }\r\n    modifier onlyOwner { if (msg.sender == Owner) _; }\r\n    function lock() { Locked = true; }\r\n    modifier isOpen { if (!Locked) _; }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"initVault\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ReleaseDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MinimumDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"NewDate\",\"type\":\"uint256\"}],\"name\":\"SetReleaseDate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"}]","ContractName":"Vault","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1d1e6f49bf78e80fbcb41d9826921b90a40ff720f59b08a1ef552976c407094e"}]}