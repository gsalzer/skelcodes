{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\n/// @title Interface for contracts conforming to ERC-721: Non-Fungible Tokens\r\n/// @author Dieter Shirley <dete@axiomzen.co> (https://github.com/dete)\r\ncontract ERC721 {\r\n    function implementsERC721() public pure returns (bool);\r\n    function totalSupply() public view returns (uint256 total);\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n\r\n    function approve(address _to, uint256 _tokenId) public returns(bool success);\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) public returns(bool success);\r\n    function transfer(address _to, uint256 _tokenId) public returns(bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 amount);\r\n    event Approval(address indexed owner, address indexed approved, uint256 amount);\r\n\r\n    // Optional\r\n    // function name() public view returns (string name);\r\n    // function symbol() public view returns (string symbol);\r\n    // function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256 tokenId);\r\n    // function tokenMetadata(uint256 _tokenId) public view returns (string infoUrl);\r\n}\r\n\r\ncontract SingleTransferToken is ERC721 {\r\n\r\n    string public symbol = \"STT\";\r\n\r\n    string public name = \"SingleTransferToken\";\r\n\r\n    uint256 _totalSupply = 1;\r\n\r\n    uint256 currentPrice;\r\n\r\n    uint256 sellingPrice;\r\n\r\n    uint256 stepLimit = 1 ether;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 amount);\r\n\r\n    // Owner of this contract\r\n    \r\n    address owner;\r\n\r\n    // Current owner of the token\r\n    address public tokenOwner;\r\n\r\n    // Allowed to transfer to this address\r\n    address allowedTo = address(0);\r\n\r\n    modifier onlyOwner() {\r\n\r\n        require(msg.sender == owner);\r\n        _;\r\n\r\n    }\r\n\r\n    modifier onlySingle(uint256 amount){\r\n        require(amount == 1);\r\n        _;\r\n    }\r\n\r\n    function implementsERC721() public pure returns (bool)\r\n    {\r\n        return true;\r\n    }\r\n\r\n    // Constructor\r\n\r\n    function SingleTransferToken(string tokenName, string tokenSymbol, uint256 initialPrice, uint256 sLimit) public{\r\n\r\n        name = tokenName;\r\n        \r\n        symbol = tokenSymbol;\r\n\r\n        owner = msg.sender;\r\n\r\n        tokenOwner = msg.sender;\r\n\r\n        stepLimit = sLimit;\r\n\r\n        sellingPrice = initialPrice;\r\n\r\n        currentPrice = initialPrice;\r\n\r\n    }\r\n\r\n    function totalSupply() constant public returns (uint256 total) {\r\n\r\n        total = _totalSupply;\r\n\r\n    }\r\n\r\n    // What is the balance of a particular account?\r\n\r\n    function balanceOf(address _owner) constant public returns (uint256 balance) {\r\n\r\n        return _owner == tokenOwner ? 1 : 0;\r\n\r\n    }\r\n\r\n    // Transfer the balance from owner's account to another account\r\n\r\n    function transfer(address _to, uint256 _amount) onlySingle(_amount) public returns (bool success) {\r\n\r\n        if(balanceOf(msg.sender) > 0){\r\n         \r\n            tokenOwner = _to;\r\n        \r\n            Transfer(msg.sender, _to, _amount);\r\n\r\n            success = true;\r\n\r\n        }else {\r\n\r\n            success = false;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // Send _value amount of tokens from address _from to address _to\r\n\r\n    function transferFrom(\r\n\r\n        address _from,\r\n\r\n        address _to,\r\n\r\n        uint256 _amount\r\n\r\n    ) onlySingle(_amount) public returns (bool success) {\r\n\r\n        require(balanceOf(_from) > 0 && allowedTo == _to);\r\n\r\n        tokenOwner = _to;\r\n        \r\n        Transfer(_from, _to, _amount);\r\n\r\n        success = true;\r\n    }\r\n\r\n \r\n    // Allow _spender to withdraw from your account, multiple times, up to the _value amount.\r\n\r\n    // If this function is called again it overwrites the current allowance with _value.\r\n\r\n    function approve(address _spender, uint256 _amount) public onlySingle(_amount) returns (bool success) {\r\n\r\n        require(tokenOwner == msg.sender);\r\n\r\n        allowedTo = _spender;\r\n\r\n        Approval(msg.sender, _spender, _amount);\r\n\r\n        success = true;\r\n\r\n    }\r\n\r\n \r\n    function allowance(address _owner, address _spender) constant public returns (uint256 remaining) {\r\n\r\n        return _owner == tokenOwner && allowedTo == _spender? 1 : 0;\r\n\r\n    }\r\n\r\n    // Allows someone to send ether and obtain the token\r\n\r\n    function() public payable {\r\n\r\n        //making sure token owner is not sending\r\n        assert(tokenOwner != msg.sender);\r\n        \r\n        //making sure sent amount is greater than or equal to the sellingPrice\r\n        assert(msg.value >= sellingPrice);\r\n        \r\n        //if sent amount is greater than sellingPrice refund extra\r\n        if(msg.value > sellingPrice){\r\n            \r\n            msg.sender.transfer(msg.value - sellingPrice);\r\n\r\n        }\r\n\r\n        //update prices\r\n        currentPrice = sellingPrice;\r\n\r\n        if(currentPrice >= stepLimit){\r\n\r\n            sellingPrice = (currentPrice * 120)/94; //adding commission amount //1.2/(1-0.06)\r\n        \r\n        }else{\r\n\r\n            sellingPrice = (currentPrice * 2 * 100)/94;//adding commission amount\r\n        \r\n        }  \r\n        \r\n        transferToken(tokenOwner, msg.sender);\r\n\r\n        //if contact balance is greater than 1000000000000000 wei,\r\n        //transfer balance to the contract owner\r\n        //if (this.balance >= 1000000000000000) {\r\n\r\n        //    owner.transfer(this.balance);\r\n\r\n        //}\r\n\r\n    } \r\n\r\n    function transferToken(address prevOwner, address newOwner) internal {\r\n\r\n        //pay previous owner        \r\n        prevOwner.transfer((currentPrice*94)/100); //(1-0.06) \r\n\r\n        tokenOwner = newOwner;\r\n\r\n        Transfer(prevOwner, newOwner, 1);\r\n        \r\n\r\n    }\r\n\r\n    function payout(address _to) onlyOwner public{\r\n    \tif(this.balance > 1 ether){\r\n    \t\tif(_to == address(0)){\r\n    \t\t\towner.transfer(this.balance - 1 ether);\r\n    \t\t}else{\r\n    \t\t\t_to.transfer(this.balance - 1 ether);\r\n    \t\t}\r\n    \t\t\r\n    \t}\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"payout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementsERC721\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"total\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"initialPrice\",\"type\":\"uint256\"},{\"name\":\"sLimit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"SingleTransferToken","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000038d7ea4c680000000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000064173616e6b61000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064173616e6b610000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://59e0791d126e0ddf8b090ba951fd127ffcf5f1bb3ce64328e9702c063625e68e"}]}