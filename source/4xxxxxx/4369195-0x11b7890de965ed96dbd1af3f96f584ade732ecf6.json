{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\nlibrary SafeMath {\r\n    function mul(uint a, uint b) internal returns (uint) {\r\n        uint c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n    function div(uint a, uint b) internal returns (uint) {\r\n        assert(b > 0);\r\n        uint c = a / b;\r\n        assert(a == b * c + a % b);\r\n        return c;\r\n    }\r\n    function sub(uint a, uint b) internal returns (uint) {\r\n        assert(b <= a);\r\n        return a - b;\r\n     }\r\n    function add(uint a, uint b) internal returns (uint) {\r\n         uint c = a + b;\r\n         assert(c >= a);\r\n         return c;\r\n     }\r\n    function max64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n        return a >= b ? a : b;\r\n     }\r\n\r\n    function min64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    function max256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n}\r\n\r\ncontract tokenLUCG {\r\n    /* Public variables of the token */\r\n        string public name;\r\n        string public symbol;\r\n        uint8 public decimals;\r\n        uint256 public totalSupply = 0;\r\n\r\n\r\n        function tokenLUCG (string _name, string _symbol, uint8 _decimals){\r\n            name = _name;\r\n            symbol = _symbol;\r\n            decimals = _decimals;\r\n\r\n        }\r\n    /* This creates an array with all balances */\r\n        mapping (address => uint256) public balanceOf;\r\n\r\n}\r\n\r\ncontract Presale is tokenLUCG {\r\n\r\n        using SafeMath for uint;\r\n        string name = 'Level Up Coin Gold';\r\n        string symbol = 'LUCG';\r\n        uint8 decimals = 18;\r\n        address manager;\r\n        address public ico;\r\n\r\n        function Presale (address _manager) tokenLUCG (name, symbol, decimals){\r\n             manager = _manager;\r\n\r\n        }\r\n\r\n        event Transfer(address _from, address _to, uint256 amount);\r\n        event Burn(address _from, uint256 amount);\r\n\r\n        modifier onlyManager{\r\n             require(msg.sender == manager);\r\n            _;\r\n        }\r\n\r\n        modifier onlyIco{\r\n             require(msg.sender == ico);\r\n            _;\r\n        }\r\n        function mintTokens(address _investor, uint256 _mintedAmount) public onlyManager {\r\n             balanceOf[_investor] = balanceOf[_investor].add(_mintedAmount);\r\n             totalSupply = totalSupply.add(_mintedAmount);\r\n             Transfer(this, _investor, _mintedAmount);\r\n\r\n        }\r\n\r\n        function burnTokens(address _owner) public onlyIco{\r\n             uint  tokens = balanceOf[_owner];\r\n             require(balanceOf[_owner] != 0);\r\n             balanceOf[_owner] = 0;\r\n             totalSupply = totalSupply.sub(tokens);\r\n             Burn(_owner, tokens);\r\n        }\r\n\r\n        function setIco(address _ico) onlyManager{\r\n            ico = _ico;\r\n        }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ico\",\"type\":\"address\"}],\"name\":\"setIco\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ico\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"burnTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"},{\"name\":\"_mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"Presale","CompilerVersion":"v0.4.17-nightly.2017.8.28+commit.d15cde2a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000f988e97412f39ea878ba7586da8a350f15a15218","Library":"","SwarmSource":"bzzr://93615cb7489d990a5b24b6c48c4224c7b312fd694127535d05e22bddbd559c9c"}]}