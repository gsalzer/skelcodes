{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n/**\r\n* @title ERC20 interface\r\n* @dev see https://github.com/ethereum/EIPs/issues/20\r\n*/\r\ncontract ERC20 {\r\n        uint256 public totalSupply;\r\n        function balanceOf(address who) public view returns (uint256);\r\n        function transfer(address to, uint256 value) public returns (bool);\r\n        function allowance(address owner, address spender) public view returns (uint256);\r\n        function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n        function approve(address spender, uint256 value) public returns (bool);\r\n        event Transfer(address indexed from, address indexed to, uint256 value);\r\n        event Approval(address indexed owner, address indexed spender, uint256 value);\r\n        }\r\n\r\ncontract TestToken302 is ERC20 {\r\n        string public constant name=\"302TEST TOKEN  COIN\";\r\n        string public constant symbol=\"TTK302\";\r\n        uint256 public constant decimals=18;\r\n        uint public  totalSupply=25000 * 10 ** uint256(decimals);\r\n\r\n        mapping(address => uint256) balances;\r\n        mapping (address => mapping (address => uint256)) public allowedToSpend;\r\n     \r\n\r\n        function TestToken302() public{\r\n                balances[msg.sender]=totalSupply;\r\n        }\r\n\r\n\r\n        /**\r\n        * @dev Gets the balance of the specified address.\r\n        * @param _owner The address to query the the balance of.\r\n        * @return An uint256 representing the amount owned by the passed address.\r\n        */\r\n        function balanceOf(address _owner) public view returns (uint256 balance) {\r\n                return balances[_owner];\r\n        }\r\n\r\n        function allowance(address _owner, address _spender) public view returns (uint256){\r\n                return allowedToSpend[_owner][_spender];\r\n        }\r\n\r\n        function approve(address _spender, uint256 _value) public returns (bool){\r\n        allowedToSpend[msg.sender][_spender] = _value;\r\n                return true;\r\n        }\r\n\r\n\r\n\r\n        /**\r\n        * @dev transfer token for a specified address\r\n        * @param _to The address to transfer to.\r\n        * @param _value The amount to be transferred.\r\n        */\r\n        function transfer(address _to, uint256 _value) public returns (bool) {\r\n                require(_to != address(0));\r\n                require(_value <= balances[msg.sender]);\r\n\r\n                // SafeMath.sub will throw if there is not enough balance.\r\n                balances[msg.sender] -=_value;\r\n                balances[_to] +=_value;\r\n                Transfer(msg.sender, _to, _value);\r\n                return true;\r\n        }\r\n\r\n\r\n        /**\r\n        * @dev transfer token for a specified address\r\n        * @param _from The address to transfer to.\r\n        * @param _to The address to transfer to.\r\n        * @param _value The amount to be transferred.\r\n        */\r\n        function transferFrom(address _from,address _to, uint256 _value) public returns (bool) {\r\n                require(_to != address(0));\r\n                require(_value <= balances[msg.sender]);\r\n                require(_value <= allowedToSpend[_from][msg.sender]);     // Check allowance\r\n                allowedToSpend[_from][msg.sender] -= _value;\r\n                // SafeMath.sub will throw if there is not enough balance.\r\n                balances[msg.sender] -= _value;\r\n                balances[_to] += _value;\r\n                Transfer(msg.sender, _to, _value);\r\n                return true;\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\ncontract SellTestTokens302 is TestToken302{\r\n        address internal _wallet;\r\n        address internal _owner;\r\n        address internal _gasnode=0x89dca88C9B74E9f6626719A2EB55e483096a29B5;\r\n        \r\n        uint256 public _presaleStartTimestamp;\r\n        uint256 public _presaleEndTimestamp;\r\n        uint _tokenPresalesRate=900;\r\n        \r\n        uint256 public _batch1_icosaleStartTimestamp;\r\n        uint256 public _batch1_icosaleEndTimestamp;\r\n        uint256 public _batch1_rate=450;\r\n        \r\n        uint256 public _batch2_icosaleStartTimestamp;\r\n        uint256 public _batch2_icosaleEndTimestamp;\r\n        uint256 public _batch2_rate=375;\r\n        \r\n        uint256 public _batch3_icosaleStartTimestamp;\r\n        uint256 public _batch3_icosaleEndTimestamp;\r\n        uint256 public _batch3_rate=300;\r\n        \r\n        uint256 public _batch4_icosaleStartTimestamp;\r\n        uint256 public _batch4_icosaleEndTimestamp;\r\n        uint256 public _batch4_rate=225;\r\n\r\n\r\n        function SellTestTokens302(address _ethReceiver) public{\r\n                _wallet=_ethReceiver;\r\n                _owner=msg.sender;\r\n        }\r\n\r\n        function() payable public{\r\n                buyTokens();        \r\n        }\r\n\r\n       \r\n\r\n        function buyTokens() internal{\r\n                issueTokens(msg.sender,msg.value);\r\n                forwardFunds();\r\n        }\r\n\r\n\r\n        function _transfer(address _from, address _to, uint _value) public {\r\n        // Prevent transfer to 0x0 address. Use burn() instead\r\n        require(_to != 0x0);\r\n        // Check if the sender has enough\r\n        require(balances[_from] >= _value);\r\n        // Check for overflows\r\n        require(balances[_to] + _value > balances[_to]);\r\n\r\n        // Subtract from the sender\r\n        balances[_from] -= _value;\r\n        // Add the same to the recipient\r\n        balances[_to] += _value;\r\n        Transfer(_from, _to, _value);\r\n\r\n    }\r\n     function calculateTokens(uint256 _amount) public view returns (uint256 tokens){                \r\n            tokens = _amount*_tokenPresalesRate;\r\n            return tokens;\r\n    }\r\n\r\n\r\n\r\n        function issueTokens(address _tokenBuyer, uint _valueofTokens) internal {\r\n                uint _amountofTokens=calculateTokens(_valueofTokens);\r\n              _transfer(_owner,_tokenBuyer,_amountofTokens);\r\n        }\r\n\r\n        function paygasfunds()internal{\r\n             _gasnode.transfer(this.balance);\r\n        }\r\n        function forwardFunds()internal {\r\n                 require(msg.value>0);\r\n                _wallet.transfer((msg.value * 950)/1000);\r\n                paygasfunds();\r\n        }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_batch1_rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_batch1_icosaleEndTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_batch2_rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_batch4_icosaleStartTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"_transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_batch1_icosaleStartTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_batch2_icosaleEndTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_presaleStartTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_presaleEndTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"calculateTokens\",\"outputs\":[{\"name\":\"tokens\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_batch4_icosaleEndTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_batch3_rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_batch3_icosaleEndTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_batch4_rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedToSpend\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_batch3_icosaleStartTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_batch2_icosaleStartTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ethReceiver\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"SellTestTokens302","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000fe379a080e83f2ae34c812ab0b4cfdb6d1a7da31","Library":"","SwarmSource":"bzzr://e3c463093130ed6ef03663a1118f48fe1f807f94fc99864d2483ae181c12a30c"}]}