{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\nlibrary SafeMath {\r\n\tfunction mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a / b;\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        if (msg.sender != owner) {\r\n            revert();\r\n        }\r\n        _;\r\n    }\r\n}\r\n\r\ncontract BasicToken is owned {\r\n    using SafeMath for uint256;\r\n\r\n    // Token Variables Initialization\r\n    string public constant name = \"Valorem\";\r\n    string public constant symbol = \"VLR\";\r\n    uint8 public constant decimals = 18;\r\n\r\n    uint256 public totalSupply;\r\n    uint256 constant initialSupply = 200000000 * (10 ** uint256(decimals));\r\n\r\n    address public reserveAccount;\r\n    address public bountyAccount;\r\n\r\n    uint256 reserveToken;\r\n    uint256 bountyToken;\r\n\r\n    mapping (address => bool) public frozenAccount;\r\n    mapping (address => uint256) public balanceOf;\r\n\r\n    event Burn(address indexed _from,uint256 _value);\r\n    event FrozenFunds(address _account, bool _frozen);\r\n    event Transfer(address indexed _from,address indexed _to,uint256 _value);\r\n\r\n    function BasicToken () {\r\n        totalSupply = initialSupply;\r\n        balanceOf[msg.sender] = initialSupply;\r\n\r\n        bountyTransfers();\r\n    }\r\n\r\n    function bountyTransfers() internal {\r\n        reserveAccount = 0x000f1505CdAEb27197FB652FB2b1fef51cdc524e;\r\n        bountyAccount = 0x00892214999FdE327D81250407e96Afc76D89CB9;\r\n\r\n        reserveToken = ( totalSupply * 25 ) / 100;\r\n        bountyToken = ( reserveToken * 7 ) / 100;\r\n\r\n        balanceOf[msg.sender] = totalSupply - reserveToken;\r\n        balanceOf[bountyAccount] = bountyToken;\r\n        reserveToken = reserveToken - bountyToken;\r\n        balanceOf[reserveAccount] = reserveToken;\r\n\r\n        Transfer(msg.sender,reserveAccount,reserveToken);\r\n        Transfer(msg.sender,bountyAccount,bountyToken);\r\n    }\r\n\r\n    function _transfer(address _from,address _to,uint256 _value) internal {\r\n        require(balanceOf[_from] > _value);\r\n        require(!frozenAccount[_from]);\r\n        require(!frozenAccount[_to]);\r\n\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        balanceOf[_to] = balanceOf[_to].add(_value);\r\n        Transfer(_from, _to, _value);\r\n    }\r\n\r\n    function transfer(address _to,uint256 _value) {\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    function freezeAccount(address _account, bool _frozen) onlyOwner {\r\n        frozenAccount[_account] = _frozen;\r\n        FrozenFunds(_account, _frozen);\r\n    }\r\n\r\n    function burnTokens(uint256 _value) onlyOwner returns (bool success) {\r\n        require(balanceOf[msg.sender] > _value);\r\n\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].add(_value);\r\n        totalSupply = totalSupply.sub(_value);\r\n        Burn(msg.sender,_value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function newTokens(address _owner, uint256 _value) onlyOwner {\r\n        balanceOf[_owner] = balanceOf[_owner].add(_value);\r\n        totalSupply = totalSupply.add(_value);\r\n        Transfer(this, _owner, _value);\r\n    }\r\n\r\n    function escrowAmount(address _account, uint256 _value) onlyOwner {\r\n        _transfer(msg.sender, _account, _value);\r\n        freezeAccount(_account, true);\r\n    }\r\n\r\n    function () {\r\n        revert();\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bountyAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"escrowAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"newTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"},{\"name\":\"_frozen\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"BasicToken","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c5e0603e7bb98c199b0173e4eba81825aaaa056b49526a8c8664a1cfac8a2836"}]}