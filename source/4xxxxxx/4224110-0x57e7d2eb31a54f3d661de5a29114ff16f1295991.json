{"status":"1","message":"OK","result":[{"SourceCode":"// Copyright New Alchemy Limited, 2017. All rights reserved.\r\n\r\npragma solidity >=0.4.10;\r\n\r\n// Just the bits of ERC20 that we need.\r\ncontract Token {\r\n\tfunction balanceOf(address addr) returns(uint);\r\n\tfunction transfer(address to, uint amount) returns(bool);\r\n}\r\n\r\ncontract Sale {\r\n\taddress public owner;    // contract owner\r\n\taddress public newOwner; // new contract owner for two-way ownership handshake\r\n\tstring public notice;    // arbitrary public notice text\r\n\tuint public start;       // start time of sale\r\n\tuint public end;         // end time of sale\r\n\tuint public cap;         // Ether hard cap\r\n\tbool public live;        // sale is live right now\r\n\r\n\tevent StartSale();\r\n\tevent EndSale();\r\n\tevent EtherIn(address from, uint amount);\r\n\r\n\tfunction Sale() {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction () payable {\r\n\t\trequire(block.timestamp >= start);\r\n\r\n\t\t// If we've reached end-of-sale conditions, accept\r\n\t\t// this as the last contribution and emit the EndSale event.\r\n\t\t// (Technically this means we allow exactly one contribution\r\n\t\t// after the end of the sale.)\r\n\t\t// Conversely, if we haven't started the sale yet, emit\r\n\t\t// the StartSale event.\r\n\t\tif (block.timestamp > end || this.balance > cap) {\r\n\t\t\trequire(live);\r\n\t\t\tlive = false;\r\n\t\t\tEndSale();\r\n\t\t} else if (!live) {\r\n\t\t\tlive = true;\r\n\t\t\tStartSale();\r\n\t\t}\r\n\t\tEtherIn(msg.sender, msg.value);\r\n\t}\r\n\r\n\tfunction init(uint _start, uint _end, uint _cap) onlyOwner {\r\n\t\tstart = _start;\r\n\t\tend = _end;\r\n\t\tcap = _cap;\r\n\t}\r\n\r\n\tfunction softCap(uint _newend) onlyOwner {\r\n\t\trequire(_newend >= block.timestamp && _newend >= start && _newend <= end);\r\n\t\tend = _newend;\r\n\t}\r\n\r\n\t// 1st half of ownership change\r\n\tfunction changeOwner(address next) onlyOwner {\r\n\t\tnewOwner = next;\r\n\t}\r\n\r\n\t// 2nd half of ownership change\r\n\tfunction acceptOwnership() {\r\n\t\trequire(msg.sender == newOwner);\r\n\t\towner = msg.sender;\r\n\t\tnewOwner = 0;\r\n\t}\r\n\r\n\t// put some text in the contract\r\n\tfunction setNotice(string note) onlyOwner {\r\n\t\tnotice = note;\r\n\t}\r\n\r\n\t// withdraw all of the Ether\r\n\tfunction withdraw() onlyOwner {\r\n\t\tmsg.sender.transfer(this.balance);\r\n\t}\r\n\r\n\t// withdraw some of the Ether\r\n\tfunction withdrawSome(uint value) onlyOwner {\r\n\t\trequire(value <= this.balance);\r\n\t\tmsg.sender.transfer(value);\r\n\t}\r\n\r\n\t// withdraw tokens to owner\r\n\tfunction withdrawToken(address token) onlyOwner {\r\n\t\tToken t = Token(token);\r\n\t\tif (!t.transfer(msg.sender, t.balanceOf(this))) throw;\r\n\t}\r\n\r\n\t// refund early/late tokens\r\n\tfunction refundToken(address token, address sender, uint amount) onlyOwner {\r\n\t\tToken t = Token(token);\r\n\t\tif (!t.transfer(sender, amount)) throw;\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"note\",\"type\":\"string\"}],\"name\":\"setNotice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newend\",\"type\":\"uint256\"}],\"name\":\"softCap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_start\",\"type\":\"uint256\"},{\"name\":\"_end\",\"type\":\"uint256\"},{\"name\":\"_cap\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"refundToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"live\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"notice\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"next\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawSome\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"StartSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EndSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EtherIn\",\"type\":\"event\"}]","ContractName":"Sale","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://15a91b7941521ec13ea0f111aca7bf9889ce9c71637027be662a8f84366b6470"}]}