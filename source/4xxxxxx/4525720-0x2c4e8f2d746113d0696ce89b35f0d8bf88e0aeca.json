{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Simple Token Contract\r\n//\r\n// Copyright (c) 2017 OpenST Ltd.\r\n// https://simpletoken.org/\r\n//\r\n// The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// SafeMath Library Implementation\r\n//\r\n// Copyright (c) 2017 OpenST Ltd.\r\n// https://simpletoken.org/\r\n//\r\n// The MIT Licence.\r\n//\r\n// Based on the SafeMath library by the OpenZeppelin team.\r\n// Copyright (c) 2016 Smart Contract Solutions, Inc.\r\n// https://github.com/OpenZeppelin/zeppelin-solidity\r\n// The MIT License.\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n\r\n        assert(a == 0 || c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n\r\n        return a - b;\r\n    }\r\n\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n\r\n        assert(c >= a);\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\n//\r\n// Implements basic ownership with 2-step transfers.\r\n//\r\ncontract Owned {\r\n\r\n    address public owner;\r\n    address public proposedOwner;\r\n\r\n    event OwnershipTransferInitiated(address indexed _proposedOwner);\r\n    event OwnershipTransferCompleted(address indexed _newOwner);\r\n\r\n\r\n    function Owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n    modifier onlyOwner() {\r\n        require(isOwner(msg.sender));\r\n        _;\r\n    }\r\n\r\n\r\n    function isOwner(address _address) internal view returns (bool) {\r\n        return (_address == owner);\r\n    }\r\n\r\n\r\n    function initiateOwnershipTransfer(address _proposedOwner) public onlyOwner returns (bool) {\r\n        proposedOwner = _proposedOwner;\r\n\r\n        OwnershipTransferInitiated(_proposedOwner);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    function completeOwnershipTransfer() public returns (bool) {\r\n        require(msg.sender == proposedOwner);\r\n\r\n        owner = proposedOwner;\r\n        proposedOwner = address(0);\r\n\r\n        OwnershipTransferCompleted(owner);\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract SimpleTokenConfig {\r\n\r\n    string  public constant TOKEN_SYMBOL   = \"ST\";\r\n    string  public constant TOKEN_NAME     = \"Simple Token\";\r\n    uint8   public constant TOKEN_DECIMALS = 18;\r\n\r\n    uint256 public constant DECIMALSFACTOR = 10**uint256(TOKEN_DECIMALS);\r\n    uint256 public constant TOKENS_MAX     = 800000000 * DECIMALSFACTOR;\r\n}\r\n\r\ncontract ERC20Interface {\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    function name() public view returns (string);\r\n    function symbol() public view returns (string);\r\n    function decimals() public view returns (uint8);\r\n    function totalSupply() public view returns (uint256);\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n}\r\n\r\n//\r\n// Standard ERC20 implementation, with ownership.\r\n//\r\ncontract ERC20Token is ERC20Interface, Owned {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    string  private tokenName;\r\n    string  private tokenSymbol;\r\n    uint8   private tokenDecimals;\r\n    uint256 internal tokenTotalSupply;\r\n\r\n    mapping(address => uint256) balances;\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n\r\n\r\n    function ERC20Token(string _symbol, string _name, uint8 _decimals, uint256 _totalSupply) public\r\n        Owned()\r\n    {\r\n        tokenSymbol      = _symbol;\r\n        tokenName        = _name;\r\n        tokenDecimals    = _decimals;\r\n        tokenTotalSupply = _totalSupply;\r\n        balances[owner]  = _totalSupply;\r\n\r\n        // According to the ERC20 standard, a token contract which creates new tokens should trigger\r\n        // a Transfer event and transfers of 0 values must also fire the event.\r\n        Transfer(0x0, owner, _totalSupply);\r\n    }\r\n\r\n\r\n    function name() public view returns (string) {\r\n        return tokenName;\r\n    }\r\n\r\n\r\n    function symbol() public view returns (string) {\r\n        return tokenSymbol;\r\n    }\r\n\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return tokenDecimals;\r\n    }\r\n\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return tokenTotalSupply;\r\n    }\r\n\r\n\r\n    function balanceOf(address _owner) public view returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n\r\n\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        // According to the EIP20 spec, \"transfers of 0 values MUST be treated as normal\r\n        // transfers and fire the Transfer event\".\r\n        // Also, should throw if not enough balance. This is taken care of by SafeMath.\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n\r\n        Transfer(msg.sender, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        balances[_from] = balances[_from].sub(_value);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n\r\n        Transfer(_from, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success) {\r\n\r\n        allowed[msg.sender][_spender] = _value;\r\n\r\n        Approval(msg.sender, _spender, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n//\r\n// Implements a more advanced ownership and permission model based on owner,\r\n// admin and ops per Simple Token key management specification.\r\n//\r\ncontract OpsManaged is Owned {\r\n\r\n    address public opsAddress;\r\n    address public adminAddress;\r\n\r\n    event AdminAddressChanged(address indexed _newAddress);\r\n    event OpsAddressChanged(address indexed _newAddress);\r\n\r\n\r\n    function OpsManaged() public\r\n        Owned()\r\n    {\r\n    }\r\n\r\n\r\n    modifier onlyAdmin() {\r\n        require(isAdmin(msg.sender));\r\n        _;\r\n    }\r\n\r\n\r\n    modifier onlyAdminOrOps() {\r\n        require(isAdmin(msg.sender) || isOps(msg.sender));\r\n        _;\r\n    }\r\n\r\n\r\n    modifier onlyOwnerOrAdmin() {\r\n        require(isOwner(msg.sender) || isAdmin(msg.sender));\r\n        _;\r\n    }\r\n\r\n\r\n    modifier onlyOps() {\r\n        require(isOps(msg.sender));\r\n        _;\r\n    }\r\n\r\n\r\n    function isAdmin(address _address) internal view returns (bool) {\r\n        return (adminAddress != address(0) && _address == adminAddress);\r\n    }\r\n\r\n\r\n    function isOps(address _address) internal view returns (bool) {\r\n        return (opsAddress != address(0) && _address == opsAddress);\r\n    }\r\n\r\n\r\n    function isOwnerOrOps(address _address) internal view returns (bool) {\r\n        return (isOwner(_address) || isOps(_address));\r\n    }\r\n\r\n\r\n    // Owner and Admin can change the admin address. Address can also be set to 0 to 'disable' it.\r\n    function setAdminAddress(address _adminAddress) external onlyOwnerOrAdmin returns (bool) {\r\n        require(_adminAddress != owner);\r\n        require(_adminAddress != address(this));\r\n        require(!isOps(_adminAddress));\r\n\r\n        adminAddress = _adminAddress;\r\n\r\n        AdminAddressChanged(_adminAddress);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    // Owner and Admin can change the operations address. Address can also be set to 0 to 'disable' it.\r\n    function setOpsAddress(address _opsAddress) external onlyOwnerOrAdmin returns (bool) {\r\n        require(_opsAddress != owner);\r\n        require(_opsAddress != address(this));\r\n        require(!isAdmin(_opsAddress));\r\n\r\n        opsAddress = _opsAddress;\r\n\r\n        OpsAddressChanged(_opsAddress);\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\n//\r\n// SimpleToken is a standard ERC20 token with some additional functionality:\r\n// - It has a concept of finalize\r\n// - Before finalize, nobody can transfer tokens except:\r\n//     - Owner and operations can transfer tokens\r\n//     - Anybody can send back tokens to owner\r\n// - After finalize, no restrictions on token transfers\r\n//\r\n\r\n//\r\n// Permissions, according to the ST key management specification.\r\n//\r\n//                                    Owner    Admin   Ops\r\n// transfer (before finalize)           x               x\r\n// transferForm (before finalize)       x               x\r\n// finalize                                      x\r\n//\r\n\r\ncontract SimpleToken is ERC20Token, OpsManaged, SimpleTokenConfig {\r\n\r\n    bool public finalized;\r\n\r\n\r\n    // Events\r\n    event Burnt(address indexed _from, uint256 _amount);\r\n    event Finalized();\r\n\r\n\r\n    function SimpleToken() public\r\n        ERC20Token(TOKEN_SYMBOL, TOKEN_NAME, TOKEN_DECIMALS, TOKENS_MAX)\r\n        OpsManaged()\r\n    {\r\n        finalized = false;\r\n    }\r\n\r\n\r\n    // Implementation of the standard transfer method that takes into account the finalize flag.\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        checkTransferAllowed(msg.sender, _to);\r\n\r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n\r\n    // Implementation of the standard transferFrom method that takes into account the finalize flag.\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        checkTransferAllowed(msg.sender, _to);\r\n\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n\r\n    function checkTransferAllowed(address _sender, address _to) private view {\r\n        if (finalized) {\r\n            // Everybody should be ok to transfer once the token is finalized.\r\n            return;\r\n        }\r\n\r\n        // Owner and Ops are allowed to transfer tokens before the sale is finalized.\r\n        // This allows the tokens to move from the TokenSale contract to a beneficiary.\r\n        // We also allow someone to send tokens back to the owner. This is useful among other\r\n        // cases, for the Trustee to transfer unlocked tokens back to the owner (reclaimTokens).\r\n        require(isOwnerOrOps(_sender) || _to == owner);\r\n    }\r\n\r\n    // Implement a burn function to permit msg.sender to reduce its balance\r\n    // which also reduces tokenTotalSupply\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        require(_value <= balances[msg.sender]);\r\n\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        tokenTotalSupply = tokenTotalSupply.sub(_value);\r\n\r\n        Burnt(msg.sender, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    // Finalize method marks the point where token transfers are finally allowed for everybody.\r\n    function finalize() external onlyAdmin returns (bool success) {\r\n        require(!finalized);\r\n\r\n        finalized = true;\r\n\r\n        Finalized();\r\n\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_SYMBOL\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_adminAddress\",\"type\":\"address\"}],\"name\":\"setAdminAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_opsAddress\",\"type\":\"address\"}],\"name\":\"setOpsAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DECIMALSFACTOR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"opsAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKENS_MAX\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proposedOwner\",\"type\":\"address\"}],\"name\":\"initiateOwnershipTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposedOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"completeOwnershipTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Burnt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Finalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"AdminAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"OpsAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"SimpleToken","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2834b25310e165b028c7358691ec1bfc91fb5d3d4a55ea9b470bf23ac34d26d9"}]}