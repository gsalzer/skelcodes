{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) constant returns (uint256);\r\n  function transfer(address to, uint256 value) returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) constant returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) returns (bool);\r\n  function approve(address spender, uint256 value) returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\nlibrary SafeMath {\r\n    \r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    // assert(b > 0); \r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); \r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n  \r\n}\r\n\r\ncontract Ownable {\r\n    \r\n  address public owner;\r\n\r\n  \r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n  \r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n}\r\n\r\ncontract Crowdsale is Ownable {\r\n    \r\n    using SafeMath for uint256;\r\n    \r\n    address public multisig;\r\n\r\n   \r\n\r\n   \r\n\r\n   \r\n ERC20 public token;\r\n    uint public startTime;\r\n    \r\n  \r\n    uint public endTime;\r\n\r\n    uint256 public hardcap;\r\n\r\n    uint public rate;\r\n    \r\n    uint public bonusPercent;\r\n    \r\n  \r\n    \r\n  \r\n  uint256 public tokensSold = 0;\r\n\r\n \r\n  uint256 public weiRaised = 0;\r\n  \r\n  \r\n  uint public investorCount = 0;\r\n    \r\n  mapping (address => uint256) public investedAmountOf;\r\n\r\n \r\n  mapping (address => uint256) public tokenAmountOf;\r\n \r\n\r\n  \r\n  struct Promo {\r\n        uint bonus;\r\n        uint EndTime;\r\n    }\r\n \r\n mapping (address => Promo) PromoList;\r\n mapping (uint=>uint) amountBonus;\r\n uint public level_1_amount=50 ether;\r\n uint public level_2_amount=100 ether;\r\n uint public level_3_amount=250 ether;\r\n uint public level_4_amount=500 ether;\r\n uint public level_5_amount=1000 ether;\r\n uint public level_6_amount=100000 ether;\r\n uint public level_7_amount=1000000 ether;\r\n uint public level_8_amount=1000000 ether;\r\n uint public level_9_amount=1000000 ether;\r\n uint public level_1_percent=20;\r\n uint public level_2_percent=25;\r\n uint public level_3_percent=30;\r\n uint public level_4_percent=35;\r\n uint public level_5_percent=40;\r\n uint public level_6_percent=40;\r\n uint public level_7_percent=40;\r\n uint public level_8_percent=40;\r\n uint public level_9_percent=40;\r\n bool public canExchange=true;\r\n    function Crowdsale() {\r\n        multisig =0x7c27f68b0d5afffb668da3e046adfba6ea1f6bc3;\r\n     \r\n       bonusPercent=130;\r\n        rate =5000;\r\n        startTime =1510704000;\r\n        endTime=1513382399;\r\n     \r\n        hardcap = 1000000000000000;\r\n        token=ERC20(0x292317a267adfb97d1b4e3ffd04f9da399cf973b);\r\n        \r\n    }\r\n\r\n\r\n\r\n  \r\n    function setEndTime(uint _endTime) public onlyOwner{\r\n         require(_endTime>=now&&_endTime>=startTime);\r\n        endTime=_endTime;\r\n    }\r\n    \r\n     function setHardcap(uint256 _hardcap) public onlyOwner{\r\n       \r\n        hardcap=_hardcap;\r\n    }\r\n    \r\n   function setPromo(address _address,uint _amount,uint _endtime) public onlyOwner{\r\n       \r\n       PromoList[_address].bonus=_amount;\r\n        PromoList[_address].EndTime=_endtime;\r\n    }\r\n     function resetAmountBonuses() public onlyOwner\r\n     {\r\n level_1_amount=0;\r\n level_2_amount=0;\r\n level_3_amount=0;\r\n level_4_amount=0;\r\n level_5_amount=0;\r\n level_6_amount=0;\r\n level_7_amount=0;\r\n level_8_amount=0;\r\n level_9_amount=0;\r\n level_1_percent=0;\r\n level_2_percent=0;\r\n level_3_percent=0;\r\n level_4_percent=0;\r\n level_5_percent=0;\r\n level_6_percent=0;\r\n level_7_percent=0;\r\n level_8_percent=0;\r\n level_9_percent=0;\r\n    }\r\n     function setAmountBonuses(uint _level,uint _amount,uint _percent) public onlyOwner\r\n     {\r\n         if (_level==1) \r\n         {\r\n           level_1_amount=(_amount).mul(1 ether);\r\n          level_1_percent=_percent;\r\n         }\r\n        else if (_level==2) \r\n         {\r\n           level_2_amount=_amount.mul(1 ether);\r\n          level_2_percent=_percent;\r\n         }\r\n       else  if (_level==3) \r\n         {\r\n           level_3_amount=_amount.mul(1 ether);\r\n          level_3_percent=_percent;\r\n         }\r\n      else   if (_level==4) \r\n         {\r\n           level_4_amount=_amount.mul(1 ether);\r\n          level_4_percent=_percent;\r\n         }\r\n      else   if (_level==5) \r\n         {\r\n           level_5_amount=_amount.mul(1 ether);\r\n          level_5_percent=_percent;\r\n         }\r\n     else    if (_level==6) \r\n         {\r\n           level_6_amount=_amount.mul(1 ether);\r\n          level_6_percent=_percent;\r\n         }\r\n       else  if (_level==7) \r\n         {\r\n           level_7_amount=_amount.mul(1 ether);\r\n          level_7_percent=_percent;\r\n         }\r\n      else   if (_level==8) \r\n         {\r\n           level_8_amount=_amount.mul(1 ether);\r\n          level_8_percent=_percent;\r\n         }\r\n       else  if (_level==9) \r\n         {\r\n           level_9_amount=_amount.mul(1 ether);\r\n          level_9_percent=_percent;\r\n         }\r\n     }\r\n \r\n    \r\n\r\n    \r\n    \r\n    \r\n    modifier saleIsOn(){\r\n         require(now > startTime && now <= endTime);\r\n         _;\r\n    }\r\n    \r\n    modifier isUnderHardCap() {\r\n   \r\n       require(tokensSold <= hardcap);\r\n        _;\r\n    }\r\n    \r\n    modifier isCanExchange(){\r\n       require(canExchange);\r\n       _;\r\n       }\r\n   \r\n   function calcToken()\r\n      \r\n        returns (uint256)\r\n    {\r\n         uint bonus;\r\n        uint256  tokens=0;\r\n         bonus=bonusPercent;\r\n       if (PromoList[msg.sender].EndTime >=now)\r\n        {\r\n           bonus += PromoList[msg.sender].bonus; \r\n        }\r\n       \r\n        \r\n           \r\n            if (msg.value>=level_1_amount && msg.value<level_2_amount )\r\n            {\r\n            bonus+=level_1_percent;\r\n            }\r\n            else\r\n             if (msg.value>=level_2_amount && msg.value<level_3_amount )\r\n            {\r\n            bonus+=level_2_percent;\r\n            }\r\n             else\r\n             if (msg.value>=level_3_amount && msg.value<level_4_amount )\r\n            {\r\n            bonus+=level_3_percent;\r\n            }\r\n             else\r\n             if (msg.value>=level_4_amount && msg.value<level_5_amount )\r\n            {\r\n            bonus+=level_4_percent;\r\n            }\r\n             else\r\n             if (msg.value>=level_5_amount && msg.value<level_6_amount )\r\n            {\r\n            bonus+=level_5_percent;\r\n            }\r\n         else\r\n             if (msg.value>=level_6_amount && msg.value<level_7_amount )\r\n            {\r\n            bonus+=level_6_percent;\r\n            }\r\n            else\r\n             if (msg.value>=level_7_amount && msg.value<level_8_amount )\r\n            {\r\n            bonus+=level_7_percent;\r\n            }\r\n             else\r\n             if (msg.value>=level_8_amount && msg.value<level_9_amount )\r\n            {\r\n            bonus+=level_8_percent;\r\n            }\r\n       else\r\n             if (msg.value>=level_9_amount)\r\n            {\r\n            bonus+=level_9_percent;\r\n            }\r\n             uint256 multiplier = 10 **6;\r\n         tokens = multiplier.mul(msg.value).div(1 ether).mul(rate).div(100).mul(bonus);\r\n        \r\n        \r\n       \r\n        return tokens;\r\n    }\r\n       function exchange() public isCanExchange {\r\n     // address myAdrress=this;\r\n     ERC20  oldToken=ERC20(0x12a35383cA24ceb44cdcBBecbEb7baCcB5F3754A);\r\n    ERC20   newToken=ERC20(0x292317a267AdFb97d1b4E3Ffd04f9Da399cf973b);\r\n       \r\n\r\n     uint  oldTokenAmount=oldToken.balanceOf(msg.sender);\r\n     //oldToken.approve(myAdrress,oldTokenAmount);\r\n      oldToken.transferFrom(msg.sender,0x0a6d9df476577C0D4A24EB50220fad007e444db8,oldTokenAmount);\r\n newToken.transferFrom(0x0a6d9df476577C0D4A24EB50220fad007e444db8,msg.sender,oldTokenAmount*105/40);\r\n    \r\n       \r\n   }\r\n    function createTokens() payable saleIsOn isUnderHardCap {\r\n        \r\n      \r\n      \r\n      uint256 tokens=calcToken();\r\n        \r\n         \r\n        assert (tokens >= 10000);\r\n    \r\n        \r\n       \r\n       token.transferFrom(0x0a6d9df476577C0D4A24EB50220fad007e444db8,msg.sender, tokens);\r\n        if(investedAmountOf[msg.sender] == 0) {\r\n      \r\n       investorCount++;\r\n        }\r\n        investedAmountOf[msg.sender] = investedAmountOf[msg.sender].add(msg.value);\r\n        tokenAmountOf[msg.sender] = tokenAmountOf[msg.sender].add(tokens);\r\n        \r\n        weiRaised = weiRaised.add(msg.value);\r\n    tokensSold = tokensSold.add(tokens);  \r\n    \r\n     multisig.transfer(msg.value);\r\n    }\r\n\r\n    function() external payable {\r\n        createTokens();\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"level_3_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canExchange\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investedAmountOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_5_percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multisig\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_4_percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_2_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_2_percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_8_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_4_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_7_percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_6_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_5_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resetAmountBonuses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_7_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenAmountOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_9_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_3_percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_1_percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_level\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_percent\",\"type\":\"uint256\"}],\"name\":\"setAmountBonuses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_9_percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hardcap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_8_percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_endtime\",\"type\":\"uint256\"}],\"name\":\"setPromo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"setEndTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exchange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"calcToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investorCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_1_amount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hardcap\",\"type\":\"uint256\"}],\"name\":\"setHardcap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"level_6_percent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://db2c5b13d2d85384cf0e85c1278a7b34b66f55f74d5b588129a690f059c6c932"}]}