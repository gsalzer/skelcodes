{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.2;\r\n\r\n\r\ncontract owned {\r\n\taddress public owner;\r\n\taddress public server;\r\n\r\n\tfunction owned() {\r\n\t\towner = msg.sender;\r\n\t\tserver = msg.sender;\r\n\t}\r\n\r\n\tfunction changeOwner(address newOwner) onlyOwner {\r\n\t\towner = newOwner;\r\n\t}\r\n\r\n\tfunction changeServer(address newServer) onlyOwner {\r\n\t\tserver = newServer;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyServer {\r\n\t\trequire(msg.sender == server);\r\n\t\t_;\r\n\t}\r\n}\r\n\r\n\r\ncontract tokenRecipient {function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);}\r\n\r\n\r\ncontract CSToken is owned {uint8 public decimals;\r\n\r\n\tuint[] public agingTimes;\r\n\r\n\taddress[] public addressByIndex;\r\n\r\n\tfunction balanceOf(address _owner) constant returns (uint256 balance);\r\n\r\n\tfunction mintToken(address target, uint256 mintedAmount, uint agingTime);\r\n\r\n\tfunction addAgingTime(uint time);\r\n\r\n\tfunction allAgingTimesAdded();\r\n\r\n\tfunction addAgingTimesForPool(address poolAddress, uint agingTime);\r\n\r\n\tfunction countAddresses() constant returns (uint256 length);\r\n}\r\n\r\n\r\ncontract KickicoCrowdsale is owned {\r\n\tuint[] public IcoStagePeriod;\r\n\r\n\tbool public IcoClosedManually = false;\r\n\r\n\tuint public threshold = 200000 ether;\r\n\tuint public goal = 50000 ether;\r\n\r\n\tuint public totalCollected = 0;\r\n\r\n\tuint public pricePerTokenInWei = 3333333;\r\n\r\n\tuint public agingTime = 1539594000;\r\n\r\n\tuint prPoolAgingTime = 1513242000;\r\n\r\n\tuint advisoryPoolAgingTime = 1535533200;\r\n\r\n\tuint bountiesPoolAgingTime = 1510736400;\r\n\r\n\tuint lotteryPoolAgingTime = 1512118800;\r\n\r\n\tuint angelInvestorsPoolAgingTime = 1506848400;\r\n\r\n\tuint foundersPoolAgingTime = 1535533200;\r\n\r\n\tuint chinaPoolAgingTime = 1509526800;\r\n\r\n\tuint[] public bonuses;\r\n\r\n\tuint[] public bonusesAfterClose;\r\n\r\n\taddress public prPool;\r\n\r\n\taddress public founders;\r\n\r\n\taddress public advisory;\r\n\r\n\taddress public bounties;\r\n\r\n\taddress public lottery;\r\n\r\n\taddress public angelInvestors;\r\n\r\n\taddress public china;\r\n\r\n\tuint tokenMultiplier = 10;\r\n\r\n\tCSToken public tokenReward;\r\n\tCSToken public oldTokenReward;\r\n\r\n\tmapping (address => uint256) public balanceOf;\r\n\r\n\tevent FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n\tbool parametersHaveBeenSet = false;\r\n\r\n\tfunction KickicoCrowdsale(address _tokenAddress, address _prPool, address _founders, address _advisory, address _bounties, address _lottery, address _angelInvestors, address _china, address _oldTokenAddress) {\r\n\t\ttokenReward = CSToken(_tokenAddress);\r\n\t\toldTokenReward = CSToken(_oldTokenAddress);\r\n\r\n\t\ttokenMultiplier = tokenMultiplier ** tokenReward.decimals();\r\n\r\n\t\t// bind pools\r\n\t\tprPool = _prPool;\r\n\t\tfounders = _founders;\r\n\t\tadvisory = _advisory;\r\n\t\tbounties = _bounties;\r\n\t\tlottery = _lottery;\r\n\t\tangelInvestors = _angelInvestors;\r\n\t\tchina = _china;\r\n\t}\r\n\r\n\tfunction setParams() onlyOwner {\r\n\t\trequire(!parametersHaveBeenSet);\r\n\r\n\t\tparametersHaveBeenSet = true;\r\n\r\n\t\ttokenReward.addAgingTimesForPool(prPool, prPoolAgingTime);\r\n\t\ttokenReward.addAgingTimesForPool(advisory, advisoryPoolAgingTime);\r\n\t\ttokenReward.addAgingTimesForPool(bounties, bountiesPoolAgingTime);\r\n\t\ttokenReward.addAgingTimesForPool(lottery, lotteryPoolAgingTime);\r\n\t\ttokenReward.addAgingTimesForPool(angelInvestors, angelInvestorsPoolAgingTime);\r\n\r\n\t\t// mint to pools\r\n\t\ttokenReward.mintToken(advisory, 10000000 * tokenMultiplier, 0);\r\n\t\ttokenReward.mintToken(bounties, 25000000 * tokenMultiplier, 0);\r\n\t\ttokenReward.mintToken(lottery, 1000000 * tokenMultiplier, 0);\r\n\t\ttokenReward.mintToken(angelInvestors, 30000000 * tokenMultiplier, 0);\r\n\t\ttokenReward.mintToken(prPool, 23000000 * tokenMultiplier, 0);\r\n\t\ttokenReward.mintToken(china, 8000000 * tokenMultiplier, 0);\r\n\r\n\t\ttokenReward.addAgingTime(agingTime);\r\n\t\ttokenReward.addAgingTime(prPoolAgingTime);\r\n\t\ttokenReward.addAgingTime(advisoryPoolAgingTime);\r\n\t\ttokenReward.addAgingTime(bountiesPoolAgingTime);\r\n\t\ttokenReward.addAgingTime(lotteryPoolAgingTime);\r\n\t\ttokenReward.addAgingTime(angelInvestorsPoolAgingTime);\r\n\t\ttokenReward.addAgingTime(foundersPoolAgingTime);\r\n\t\ttokenReward.addAgingTime(chinaPoolAgingTime);\r\n\t\ttokenReward.allAgingTimesAdded();\r\n\r\n\t\tIcoStagePeriod.push(1504011600);\r\n\t\tIcoStagePeriod.push(1506718800);\r\n\r\n\t\tbonuses.push(1990 finney);\r\n\t\tbonuses.push(2990 finney);\r\n\t\tbonuses.push(4990 finney);\r\n\t\tbonuses.push(6990 finney);\r\n\t\tbonuses.push(9500 finney);\r\n\t\tbonuses.push(14500 finney);\r\n\t\tbonuses.push(19500 finney);\r\n\t\tbonuses.push(29500 finney);\r\n\t\tbonuses.push(49500 finney);\r\n\t\tbonuses.push(74500 finney);\r\n\t\tbonuses.push(99 ether);\r\n\t\tbonuses.push(149 ether);\r\n\t\tbonuses.push(199 ether);\r\n\t\tbonuses.push(299 ether);\r\n\t\tbonuses.push(499 ether);\r\n\t\tbonuses.push(749 ether);\r\n\t\tbonuses.push(999 ether);\r\n\t\tbonuses.push(1499 ether);\r\n\t\tbonuses.push(1999 ether);\r\n\t\tbonuses.push(2999 ether);\r\n\t\tbonuses.push(4999 ether);\r\n\t\tbonuses.push(7499 ether);\r\n\t\tbonuses.push(9999 ether);\r\n\t\tbonuses.push(14999 ether);\r\n\t\tbonuses.push(19999 ether);\r\n\t\tbonuses.push(49999 ether);\r\n\t\tbonuses.push(99999 ether);\r\n\r\n\t\tbonusesAfterClose.push(200);\r\n\t\tbonusesAfterClose.push(100);\r\n\t\tbonusesAfterClose.push(75);\r\n\t\tbonusesAfterClose.push(50);\r\n\t\tbonusesAfterClose.push(25);\r\n\t}\r\n\r\n\tfunction mint(uint amount, uint tokens, address sender) internal {\r\n\t\tbalanceOf[sender] += amount;\r\n\t\ttotalCollected += amount;\r\n\t\ttokenReward.mintToken(sender, tokens, agingTime);\r\n\t\ttokenReward.mintToken(founders, tokens / 10, foundersPoolAgingTime);\r\n\t}\r\n\r\n\tfunction contractBalance() constant returns (uint256 balance) {\r\n\t\treturn this.balance;\r\n\t}\r\n\r\n\tfunction processPayment(address from, uint amount, bool isCustom) internal {\r\n\t\tif(!isCustom)\r\n\t\tFundTransfer(from, amount, true);\r\n\t\tuint original = amount;\r\n\r\n\t\tuint _price = pricePerTokenInWei;\r\n\t\tuint remain = threshold - totalCollected;\r\n\t\tif (remain < amount) {\r\n\t\t\tamount = remain;\r\n\t\t}\r\n\r\n\t\tfor (uint i = 0; i < bonuses.length; i++) {\r\n\t\t\tif (amount < bonuses[i]) break;\r\n\r\n\t\t\tif (amount >= bonuses[i] && (i == bonuses.length - 1 || amount < bonuses[i + 1])) {\r\n\t\t\t\tif (i < 15) {\r\n\t\t\t\t\t_price = _price * 1000 / (1000 + ((i + 1 + (i > 11 ? 1 : 0)) * 5));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t_price = _price * 1000 / (1000 + ((8 + i - 14) * 10));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tuint tokenAmount = amount / _price;\r\n\t\tuint currentAmount = tokenAmount * _price;\r\n\t\tmint(currentAmount, tokenAmount + tokenAmount * getBonusByRaised() / 1000, from);\r\n\t\tuint change = original - currentAmount;\r\n\t\tif (change > 0 && !isCustom) {\r\n\t\t\tif (from.send(change)) {\r\n\t\t\t\tFundTransfer(from, change, false);\r\n\t\t\t}\r\n\t\t\telse revert();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getBonusByRaised() internal returns (uint256) {\r\n\t\tuint raisedInPercent = totalCollected * 100 / goal;\r\n\t\tif (raisedInPercent > 50) return 0;\r\n\t\tfor (uint i = 0; i < bonusesAfterClose.length; i++) {\r\n\t\t\tif (i * 10 <= raisedInPercent && (i + 1) * 10 > raisedInPercent) {\r\n\t\t\t\treturn bonusesAfterClose[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tfunction closeICO() onlyOwner {\r\n\t\trequire(now >= IcoStagePeriod[0] && now < IcoStagePeriod[1] && !IcoClosedManually);\r\n\t\tIcoClosedManually = true;\r\n\t}\r\n\r\n\tfunction safeWithdrawal(uint amount) onlyOwner {\r\n\t\trequire(this.balance >= amount);\r\n\r\n\t\t// lock withdraw if stage not closed\r\n\t\tif (now >= IcoStagePeriod[0] && now < IcoStagePeriod[1])\r\n\t\trequire(IcoClosedManually || isReachedThreshold());\r\n\r\n\t\tif (owner.send(amount)) {\r\n\t\t\tFundTransfer(msg.sender, amount, false);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isReachedThreshold() internal returns (bool reached) {\r\n\t\treturn pricePerTokenInWei > (threshold - totalCollected);\r\n\t}\r\n\r\n\tfunction isIcoClosed() constant returns (bool closed) {\r\n\t\treturn (now >= IcoStagePeriod[1] || IcoClosedManually || isReachedThreshold());\r\n\t}\r\n\r\n\tfunction customPayment(address _recipient, uint256 _amount) onlyServer {\r\n\t\trequire(parametersHaveBeenSet);\r\n\t\trequire(_amount >= 10 finney);\r\n\r\n\t\t// validate by stage periods\r\n\t\trequire(now >= IcoStagePeriod[0] && now < IcoStagePeriod[1]);\r\n\t\t// validate if closed manually or reached the threshold\r\n\t\trequire(!IcoClosedManually);\r\n\t\trequire(!isReachedThreshold());\r\n\t\tprocessPayment(_recipient, _amount, true);\r\n\t}\r\n\r\n\tbool public allowManuallyMintTokens = true;\r\n\tfunction mintTokens(address[] recipients) onlyServer {\r\n\t\trequire(allowManuallyMintTokens);\r\n\t\tfor(uint i = 0; i < recipients.length; i++) {\r\n\t\t\ttokenReward.mintToken(recipients[i], oldTokenReward.balanceOf(recipients[i]), 1538902800);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction disableManuallyMintTokens() onlyOwner {\r\n\t\tallowManuallyMintTokens = false;\r\n\t}\r\n\r\n\tfunction() payable {\r\n\t\trequire(parametersHaveBeenSet);\r\n\t\trequire(msg.value >= 50 finney);\r\n\r\n\t\t// validate by stage periods\r\n\t\trequire(now >= IcoStagePeriod[0] && now < IcoStagePeriod[1]);\r\n\t\t// validate if closed manually or reached the threshold\r\n\t\trequire(!IcoClosedManually);\r\n\t\trequire(!isReachedThreshold());\r\n\r\n\t\tprocessPayment(msg.sender, msg.value, false);\r\n\t}\r\n\r\n\tfunction changeTokenOwner(address _owner) onlyOwner {\r\n\t\ttokenReward.changeOwner(_owner);\r\n\t}\r\n\r\n\tfunction kill() onlyOwner {\r\n\t\trequire(isIcoClosed());\r\n\t\tif(this.balance > 0) {\r\n\t\t\towner.transfer(this.balance);\r\n\t\t}\r\n\t\tchangeTokenOwner(owner);\r\n\t\tselfdestruct(owner);\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"newServer\",\"type\":\"address\"}],\"name\":\"changeServer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeTokenOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bonusesAfterClose\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipients\",\"type\":\"address[]\"}],\"name\":\"mintTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"agingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"goal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founders\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"threshold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_recipient\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"customPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeICO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isIcoClosed\",\"outputs\":[{\"name\":\"closed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"IcoStagePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractBalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"IcoClosedManually\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bonuses\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"angelInvestors\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lottery\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oldTokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableManuallyMintTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"china\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pricePerTokenInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bounties\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCollected\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowManuallyMintTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"server\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_prPool\",\"type\":\"address\"},{\"name\":\"_founders\",\"type\":\"address\"},{\"name\":\"_advisory\",\"type\":\"address\"},{\"name\":\"_bounties\",\"type\":\"address\"},{\"name\":\"_lottery\",\"type\":\"address\"},{\"name\":\"_angelInvestors\",\"type\":\"address\"},{\"name\":\"_china\",\"type\":\"address\"},{\"name\":\"_oldTokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"KickicoCrowdsale","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000efbdd2ca166b193075efe8530a612c5daa10012a00000000000000000000000028d198d27ccfcc3f784022fd82a3da9fed72e3250000000000000000000000000927ff2eabf4667fdca3dc3a84fd30c13b7a50040000000000000000000000006cfe9e3b517fe8fa1d3f8666f323120794e5fbb3000000000000000000000000cfb44c01d517c92a297a25505f6cd988ca99b646000000000000000000000000b086907b4e6532a14af3e72875211cf1151c801000000000000000000000000024beafbbaf290d2638737c662aa199ea25cc509a000000000000000000000000239013e02e7903e66e0d46b44216adbbaef21fa80000000000000000000000000e9c4d8610aa2cf0dabdabb19920a1c810b65720","Library":"","SwarmSource":"bzzr://24ecc94245dee8bdd27f293f22d1dfb8d3273c751d1684f3379bc9114ee11014"}]}