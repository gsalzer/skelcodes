{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract BBTDonate {\r\n\r\n    address public owner;\r\n    bool public isClosed;\r\n    uint256 public totalReceive;\r\n    uint256 public remain;\r\n    mapping (address => uint256) public record;\r\n    mapping (address => bool) public isAdmin;\r\n\r\n    modifier onlyAdmin {\r\n        require(msg.sender == owner || isAdmin[msg.sender]);\r\n        _;\r\n    }\r\n    \r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    function BBTDonate() public {\r\n        owner = msg.sender;\r\n        totalReceive = 0;\r\n        isClosed = false;\r\n    }\r\n    \r\n    function () payable public {\r\n        record[msg.sender] = add(record[msg.sender], msg.value);\r\n        totalReceive = add(totalReceive, msg.value);\r\n    }\r\n    \r\n    function refund(address thankyouverymuch) public {\r\n        require(isClosed);\r\n        require(record[thankyouverymuch] != 0);\r\n        uint256 amount = div(mul(remain, record[thankyouverymuch]), totalReceive);\r\n        record[thankyouverymuch] = 0;\r\n        require(thankyouverymuch.send(amount));\r\n    }\r\n    \r\n    // only admin\r\n    function dispatch (address _receiver, uint256 _amount, string log) onlyAdmin public {\r\n        require(bytes(log).length != 0);\r\n        require(_receiver.send(_amount));\r\n    }\r\n    \r\n\r\n    // only owner\r\n    function changeOwner (address _owner) onlyOwner public {\r\n        owner = _owner;\r\n    }\r\n    \r\n    function addAdmin (address _admin, bool remove) onlyOwner public {\r\n        if(remove) {\r\n            isAdmin[_admin] = false;\r\n        }\r\n        isAdmin[_admin] = true;\r\n    }\r\n    \r\n    function turnOff () onlyOwner public {\r\n        isClosed = true;\r\n        remain = this.balance;\r\n    }\r\n    \r\n    function collectBalance () onlyOwner public {\r\n        require(isClosed);\r\n        require(owner.send(this.balance));\r\n    }\r\n    \r\n    // helper function\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n    \r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    } \r\n    \r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"record\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"log\",\"type\":\"string\"}],\"name\":\"dispatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remain\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalReceive\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_admin\",\"type\":\"address\"},{\"name\":\"remove\",\"type\":\"bool\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"turnOff\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"thankyouverymuch\",\"type\":\"address\"}],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"BBTDonate","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e515abe587a8d3c5c505ffde7e532eec3ea3f7f0a3694814ed65ffa87af008a2"}]}