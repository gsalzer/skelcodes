{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.4;\r\ncontract Owned{\r\n\taddress owner;\r\n\tfunction Owned() public{\r\n\t\towner = msg.sender;\r\n\t}\r\n\tmodifier onlyOwner{\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n}\r\ncontract LumenCoin is Owned{\r\n\tstruct User{\r\n\t\tstring username;\r\n\t\tuint balance;\r\n\t}\r\n\tstring public TokenName;\r\n    uint8 public decimals= 18;\r\n    string public symbol;\r\n    uint public totalSupply= 22000000000000000000000000;\r\n    uint public reserve = 8000000000000000000000000;\r\n    \r\n    uint256 public sellPrice;\r\n    uint256 public buyPrice;\r\n\r\n\tfunction LumenCoin(){\r\n\t    users[msg.sender].balance = totalSupply;\r\n        TokenName = \"LumenCoin\";\r\n        decimals = 18;\r\n        symbol = \"LNC\";\r\n\t}\r\n\tmapping (address => User) users;\r\n\taddress[] public userAccounts;\r\n\t\r\n\tevent userInfo(\r\n\t\tstring username,\r\n\t\tuint balance\r\n\t);\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\t/**\r\n\tfunction () {\r\n        //if ether is sent to this address, send it back.\r\n        throw;\r\n    }\r\n\t**/\r\n\tfunction setUser(address _address,string _username,uint _balance) public {\r\n\t\tvar user = users[_address];\r\n\t\tuser.username = _username;\r\n\t\tuser.balance = _balance;\r\n\t\t\r\n\t\tif(owner == _address){\r\n\t\tuser.balance = totalSupply;    \r\n\t\t}\r\n\t\tuserAccounts.push(_address)-1;\r\n\t\tuserInfo(_username,_balance);\r\n\t}\r\n\t\r\n\tfunction getUsers() view public returns(address[]){\r\n\treturn userAccounts;\r\n\t}\r\n\t\r\n\tfunction getUser(address _address) view public returns(string,uint){\r\n\t\treturn (users[_address].username,users[_address].balance);\r\n\t}\r\n\tfunction countUsers() view public returns (uint){\r\n\tuserAccounts.length;\r\n\t}\r\n\tfunction transfer(address _to, uint256 _value) onlyOwner returns (bool success) {\r\n        require (_to != 0x0);\r\n        require (users[owner].balance >= _value);\r\n        if (users[owner].balance >= _value && _value > 0) {\r\n            if(totalSupply <= reserve){\r\n                users[owner].balance += totalSupply;\r\n                return false;\r\n            }\r\n            \r\n            users[owner].balance -= _value;\r\n            users[_to].balance += _value;\r\n            totalSupply -= _value;\r\n            Transfer(owner, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\tfunction transferFrom(address _from,address _to, uint256 _value) returns (bool success){\r\n\t    if (users[_from].balance >= _value && _value > 0){\r\n\t        users[_from].balance -= _value;\r\n\t        users[_to].balance += _value;\r\n\t    }\r\n\t    return false;\r\n\t}\r\n\tfunction setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner public {\r\n        sellPrice = newSellPrice;\r\n        buyPrice = newBuyPrice;\r\n    }\r\n    \r\n    function buy() payable public {\r\n        uint amount = msg.value / buyPrice; \r\n        transfer(this, amount);              \r\n    }\r\n    \r\n    function sell(uint256 amount) public {\r\n        require(this.balance >= amount * sellPrice);      // checks if the contract has enough ether to buy\r\n        transferFrom(msg.sender, this, amount);              // makes the transfers\r\n        msg.sender.transfer(amount * sellPrice);          // sends ether to the seller. It's important to do this last to avoid recursion attacks\r\n    }\r\n\t\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getUsers\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newSellPrice\",\"type\":\"uint256\"},{\"name\":\"newBuyPrice\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sellPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userAccounts\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_username\",\"type\":\"string\"},{\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"setUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TokenName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserve\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countUsers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"username\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"userInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"LumenCoin","CompilerVersion":"v0.4.19-nightly.2017.10.19+commit.c58d9d2c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3e855e69d1f2a4f31496ffba7f55c174a55f0775a35b81261d1cdf9b75318f47"}]}