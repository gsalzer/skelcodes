{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n/**\r\n* @title ICO CONTRACT\r\n* @dev ERC-20 Token Standard Compliant\r\n*/\r\n\r\n/**\r\n* @title SafeMath by OpenZeppelin\r\n* @dev Math operations with safety checks that throw on error\r\n*/\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n    }\r\n\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract token {\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n\r\n    }\r\n\r\n/**\r\n* @title admined\r\n* @notice This contract is administered\r\n*/\r\ncontract admined {\r\n    address public admin; //Admin address is public\r\n    \r\n    /**\r\n    * @dev This contructor takes the msg.sender as the first administer\r\n    */\r\n    function admined() internal {\r\n        admin = msg.sender; //Set initial admin to contract creator\r\n        Admined(admin);\r\n    }\r\n\r\n    /**\r\n    * @dev This modifier limits function execution to the admin\r\n    */\r\n    modifier onlyAdmin() { //A modifier to define admin-only functions\r\n        require(msg.sender == admin);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @notice This function transfer the adminship of the contract to _newAdmin\r\n    * @param _newAdmin The new admin of the contract\r\n    */\r\n    function transferAdminship(address _newAdmin) onlyAdmin public { //Admin can be transfered\r\n        admin = _newAdmin;\r\n        TransferAdminship(admin);\r\n    }\r\n\r\n    /**\r\n    * @dev Log Events\r\n    */\r\n    event TransferAdminship(address newAdminister);\r\n    event Admined(address administer);\r\n\r\n}\r\n\r\n\r\ncontract ICO is admined {\r\n    using SafeMath for uint256;\r\n    //This ico have 5 stages\r\n    enum State {\r\n        EarlyBird,\r\n        PreSale,\r\n        TokenSale,\r\n        ITO,\r\n        Successful\r\n    }\r\n    //public variables\r\n    uint256 public priceOfEthOnEUR;\r\n    State public state = State.EarlyBird; //Set initial stage\r\n    uint256 public startTime = now; //block-time when it was deployed\r\n    uint256 public price; //Price rate for base calculation\r\n    uint256 public totalRaised; //eth in wei\r\n    uint256 public totalDistributed; //tokens distributed\r\n    uint256 public stageDistributed; //tokens distributed on the actual stage\r\n    uint256 public completedAt; //Time stamp when the ico finish\r\n    token public tokenReward; //Address of the valit token used as reward\r\n    address public creator; //Address of the contract deployer\r\n    string public campaignUrl; //Web site of the campaing\r\n    string public version = '1';\r\n\r\n    //events for log\r\n    event LogFundingReceived(address _addr, uint _amount, uint _currentTotal);\r\n    event LogBeneficiaryPaid(address _beneficiaryAddress);\r\n    event LogFundingSuccessful(uint _totalRaised);\r\n    event LogFunderInitialized(\r\n        address _creator,\r\n        string _url,\r\n        uint256 _initialRate);\r\n    event LogContributorsPayout(address _addr, uint _amount);\r\n    event PriceUpdate(uint256 _newPrice);\r\n    event StageDistributed(State _stage, uint256 _stageDistributed);\r\n\r\n    modifier notFinished() {\r\n        require(state != State.Successful);\r\n        _;\r\n    }\r\n    /**\r\n    * @notice ICO constructor\r\n    * @param _campaignUrl is the ICO _url\r\n    * @param _addressOfTokenUsedAsReward is the token totalDistributed\r\n    * @param _initialEURPriceOfEth is the current price in EUR for a single ether\r\n    */\r\n    function ICO (string _campaignUrl, token _addressOfTokenUsedAsReward, uint256 _initialEURPriceOfEth) public {\r\n        creator = msg.sender;\r\n        campaignUrl = _campaignUrl;\r\n        tokenReward = token(_addressOfTokenUsedAsReward);\r\n        priceOfEthOnEUR = _initialEURPriceOfEth;\r\n        price = SafeMath.div(priceOfEthOnEUR.mul(6666666666666666667),1000000000000000000);\r\n        \r\n        LogFunderInitialized(\r\n            creator,\r\n            campaignUrl,\r\n            price\r\n            );\r\n        PriceUpdate(price);\r\n    }\r\n\r\n    function updatePriceOfEth(uint256 _newPrice) onlyAdmin public {\r\n        priceOfEthOnEUR = _newPrice;\r\n        price = SafeMath.div(priceOfEthOnEUR.mul(6666666666666666667),1000000000000000000);\r\n        PriceUpdate(price);\r\n    }\r\n\r\n    /**\r\n    * @notice contribution handler\r\n    */\r\n    function contribute() public notFinished payable {\r\n\r\n        uint256 tokenBought;\r\n        totalRaised = totalRaised.add(msg.value);\r\n\r\n        if (state == State.EarlyBird){\r\n\r\n            tokenBought = msg.value.mul(price);\r\n            tokenBought = tokenBought.mul(4); //4x\r\n            require(stageDistributed.add(tokenBought) <= 200000000 * (10 ** 18));\r\n\r\n        } else if (state == State.PreSale){\r\n\r\n            tokenBought = msg.value.mul(price);\r\n            tokenBought = tokenBought.mul(15); //1.5x\r\n            tokenBought = tokenBought.div(10);\r\n            require(stageDistributed.add(tokenBought) <= 500000000 * (10 ** 18));\r\n\r\n        } else if (state == State.TokenSale){\r\n\r\n            tokenBought = msg.value.mul(price); //1x\r\n            require(stageDistributed.add(tokenBought) <= 500000000 * (10 ** 18));\r\n\r\n        } else if (state == State.ITO){\r\n\r\n            tokenBought = msg.value.mul(price); //1x\r\n            require(stageDistributed.add(tokenBought) <= 800000000 * (10 ** 18));\r\n\r\n        } \r\n\r\n        totalDistributed = totalDistributed.add(tokenBought);\r\n        stageDistributed = stageDistributed.add(tokenBought);\r\n        tokenReward.transfer(msg.sender, tokenBought);\r\n        \r\n        LogFundingReceived(msg.sender, msg.value, totalRaised);\r\n        LogContributorsPayout(msg.sender, tokenBought);\r\n        \r\n        checkIfFundingCompleteOrExpired();\r\n    }\r\n\r\n    /**\r\n    * @notice check status\r\n    */\r\n    function checkIfFundingCompleteOrExpired() public {\r\n        \r\n        if(state!=State.Successful){ //if we are on ICO period and its not Successful\r\n            \r\n            if(state == State.EarlyBird && now > startTime.add(38 days)){ //38 days - 25.12.2017 to 01.02.2018\r\n                \r\n                StageDistributed(state,stageDistributed);\r\n\r\n                state = State.PreSale;\r\n                stageDistributed = 0;\r\n            \r\n            } else if(state == State.PreSale && now > startTime.add(127 days)){ //89 days(+38) - 01.02.2018 to 01.05.2018\r\n                \r\n                StageDistributed(state,stageDistributed);\r\n\r\n                state = State.TokenSale;\r\n                stageDistributed = 0;\r\n\r\n            } else if(state == State.TokenSale && now > startTime.add(219 days)){ //92 days(+127) - 01.05.2018 to 01.08.2018\r\n            \r\n                StageDistributed(state,stageDistributed);\r\n\r\n                state = State.ITO;\r\n                stageDistributed = 0;\r\n\r\n            } else if(state == State.ITO && now > startTime.add(372 days)){ //153 days(+219) - 01.08.2018 to 01.01.2019\r\n                \r\n                StageDistributed(state,stageDistributed);\r\n\r\n                state = State.Successful; //ico becomes Successful\r\n                completedAt = now; //ICO is complete\r\n                LogFundingSuccessful(totalRaised); //we log the finish\r\n                finished(); //and execute closure\r\n            \r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @notice function to withdraw eth to creator address\r\n    */\r\n    function payOut() public {\r\n        require(msg.sender == creator); //Only the creator can withdraw funds\r\n        require(creator.send(this.balance));\r\n        LogBeneficiaryPaid(creator);\r\n    }\r\n\r\n    /**\r\n    * @notice closure handler\r\n    */\r\n    function finished() public { //When finished eth are transfered to creator\r\n        require(state == State.Successful);\r\n        uint256 remanent = tokenReward.balanceOf(this);\r\n\r\n        require(creator.send(this.balance));\r\n        tokenReward.transfer(creator,remanent);\r\n\r\n        LogBeneficiaryPaid(creator);\r\n        LogContributorsPayout(creator, remanent);\r\n    }\r\n\r\n    function () public payable {\r\n        contribute();\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceOfEthOnEUR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"updatePriceOfEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"completedAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"checkIfFundingCompleteOrExpired\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stageDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finished\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payOut\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"campaignUrl\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_campaignUrl\",\"type\":\"string\"},{\"name\":\"_addressOfTokenUsedAsReward\",\"type\":\"address\"},{\"name\":\"_initialEURPriceOfEth\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_currentTotal\",\"type\":\"uint256\"}],\"name\":\"LogFundingReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_beneficiaryAddress\",\"type\":\"address\"}],\"name\":\"LogBeneficiaryPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_totalRaised\",\"type\":\"uint256\"}],\"name\":\"LogFundingSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_url\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_initialRate\",\"type\":\"uint256\"}],\"name\":\"LogFunderInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"LogContributorsPayout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"PriceUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_stage\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"_stageDistributed\",\"type\":\"uint256\"}],\"name\":\"StageDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAdminister\",\"type\":\"address\"}],\"name\":\"TransferAdminship\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"administer\",\"type\":\"address\"}],\"name\":\"Admined\",\"type\":\"event\"}]","ContractName":"ICO","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000600000000000000000000000009cdf0b3b0b35d0ee593d68c55da1cc79585335bc000000000000000000000000000000000000000000000000000000000000022b000000000000000000000000000000000000000000000000000000000000001268747470733a2f2f6f6d65676f6e2e6f72670000000000000000000000000000","Library":"","SwarmSource":"bzzr://7a606f90daf8d04208f642881a0c7fb56168ca7e9434f174c4b13c7783629c49"}]}