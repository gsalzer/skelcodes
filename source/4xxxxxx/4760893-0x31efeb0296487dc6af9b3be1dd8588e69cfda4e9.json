{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.18;\r\n\r\n\r\n/* \r\n    Author: Patrick Guay @ Vanbex and Etherparty\r\n    patrick@vanbex.com\r\n*/\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract VancouverCharityDrive is Ownable {\r\n\r\n\r\n    mapping(address => Pledge[]) public pledges; // keeps all the pledges per address\r\n    mapping(address => CompanyInfo) public companies; // keeps all the names of companies per address\r\n    address[] public participatingCompanies;\r\n\r\n    event PledgeCreated(address indexed pledger, uint256 amount, string companyName);\r\n    event PledgeUpdated(address indexed pledger, uint256 amount, string companyName);\r\n    event PledgeConfirmed(address indexed pledger, uint256 amount, string companyName, string txHash);\r\n\r\n    struct CompanyInfo {\r\n        bool initialized;\r\n        string name;\r\n        string email;\r\n        string description;\r\n    }\r\n\r\n    struct Pledge {\r\n        bool initialized;\r\n        uint amount; // Amount of the currency used for the pledge\r\n        string charityName; // Name of the charity\r\n        string currency; // Currency used for the pledge\r\n        string txHash; //  TxHash of the pledge\r\n        bool confirmed;\r\n    }\r\n\r\n    modifier isWhiteListed() {\r\n        require(companies[msg.sender].initialized == true);\r\n        _;\r\n    }\r\n\r\n    function whitelistCompany(address _companyAddress, string _companyName, string _companyEmail, string _description) public onlyOwner returns(bool) {\r\n        companies[_companyAddress] = CompanyInfo(true, _companyName, _companyEmail, _description);\r\n        participatingCompanies.push(_companyAddress);\r\n        return true;\r\n    }\r\n\r\n    function createPledge(uint _amount, string _charityName, string _currency) public isWhiteListed returns(bool) {\r\n        pledges[msg.sender].push(Pledge(true, _amount, _charityName, _currency, \"\", false));\r\n        PledgeCreated(msg.sender, _amount, companies[msg.sender].name);\r\n        return true;\r\n    }\r\n\r\n    function updatePledge(uint _amount, string _charityName, string _currency, uint _pledgeIndex) public isWhiteListed returns(bool) {\r\n        Pledge storage pledge = pledges[msg.sender][_pledgeIndex];\r\n        require(pledge.initialized == true && pledge.confirmed == false);\r\n        pledge.currency = _currency;\r\n        pledge.amount = _amount;\r\n        pledge.charityName = _charityName;\r\n        return true;\r\n    }\r\n\r\n    function confirmPledge(uint _pledgeIndex, string _txHash) public isWhiteListed returns(bool) {\r\n        Pledge storage pledge = pledges[msg.sender][_pledgeIndex];\r\n        require(pledge.initialized == true && pledge.confirmed == false);\r\n        pledge.txHash = _txHash;\r\n        pledge.confirmed = true;\r\n        PledgeConfirmed(msg.sender, pledge.amount, companies[msg.sender].name, _txHash);\r\n        return true;\r\n    }\r\n\r\n    function getPledge(address _companyAddress, uint _index) public view returns (uint amount, string charityName, string currency, string txHash, bool confirmed) {\r\n        amount = pledges[_companyAddress][_index].amount;\r\n        charityName = pledges[_companyAddress][_index].charityName;\r\n        currency = pledges[_companyAddress][_index].currency;\r\n        txHash = pledges[_companyAddress][_index].txHash;\r\n        confirmed = pledges[_companyAddress][_index].confirmed;\r\n    }\r\n\r\n    function getAllCompanies() public view returns (address[]) {\r\n        return participatingCompanies;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_pledgeIndex\",\"type\":\"uint256\"},{\"name\":\"_txHash\",\"type\":\"string\"}],\"name\":\"confirmPledge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"companies\",\"outputs\":[{\"name\":\"initialized\",\"type\":\"bool\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllCompanies\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_charityName\",\"type\":\"string\"},{\"name\":\"_currency\",\"type\":\"string\"}],\"name\":\"createPledge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_charityName\",\"type\":\"string\"},{\"name\":\"_currency\",\"type\":\"string\"},{\"name\":\"_pledgeIndex\",\"type\":\"uint256\"}],\"name\":\"updatePledge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participatingCompanies\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pledges\",\"outputs\":[{\"name\":\"initialized\",\"type\":\"bool\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"charityName\",\"type\":\"string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"txHash\",\"type\":\"string\"},{\"name\":\"confirmed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_companyAddress\",\"type\":\"address\"},{\"name\":\"_companyName\",\"type\":\"string\"},{\"name\":\"_companyEmail\",\"type\":\"string\"},{\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"whitelistCompany\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_companyAddress\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getPledge\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"charityName\",\"type\":\"string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"txHash\",\"type\":\"string\"},{\"name\":\"confirmed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"pledger\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"companyName\",\"type\":\"string\"}],\"name\":\"PledgeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"pledger\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"companyName\",\"type\":\"string\"}],\"name\":\"PledgeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"pledger\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"companyName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"txHash\",\"type\":\"string\"}],\"name\":\"PledgeConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"VancouverCharityDrive","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b7723cc0dc8255d28af9526d9a22deea63c7b2b8859b5c1f8a62e1d51ba47904"}]}