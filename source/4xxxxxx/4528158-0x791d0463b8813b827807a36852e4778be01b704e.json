{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Test1\r\n{\r\n    address owner = msg.sender;\r\n    \r\n    function withdraw()\r\n    payable\r\n    public\r\n    {\r\n        require(msg.sender==owner);\r\n        owner.transfer(this.balance);\r\n    }\r\n    \r\n    function() payable {}\r\n    \r\n    function Test()\r\n    payable\r\n    public\r\n    {\r\n        if(msg.value>=1 ether)\r\n        {\r\n            \r\n            var i1 = 1;\r\n            var i2 = 0;\r\n            var amX2 = msg.value*2;\r\n            \r\n            while(true)\r\n            {\r\n                if(i1<i2)break;\r\n                if(i1>amX2)break;\r\n                \r\n                i2=i1;\r\n                i1++;\r\n            }\r\n            msg.sender.transfer(i2);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Test\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"Test1","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a1d741549c5c20838fcdbbb4ce215f2fc0a9b9c3825975c4964f889ac83e8326"}]}