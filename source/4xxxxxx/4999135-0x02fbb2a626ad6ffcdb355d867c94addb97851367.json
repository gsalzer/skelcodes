{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n \r\ncontract admined {\r\n\taddress public admin;\r\n\r\n\tfunction admined() public{\r\n\t\tadmin = msg.sender; //The address of the person who deploys the contract\r\n\t}\r\n\r\n\tmodifier onlyAdmin(){ //The function that uses this modifier can only be executed by the admin\r\n\t\trequire(msg.sender == admin);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transferAdminship(address newAdmin) onlyAdmin public { //This function can be only called by the admin and assigns a new admin\r\n\t\tadmin = newAdmin;\r\n\t}\r\n\r\n}\r\n\r\ncontract Token {\r\n\r\n\tmapping (address => uint256) public balanceOf;\r\n\t// balanceOf[address] = 5;\r\n\tstring public name;\r\n\tstring public symbol; //Example: ETH\r\n\tuint8 public decimals; //Example 18. This is going to be the smallest unit of the coin. And the code is based on this unit.  When you say an address has a balance equal to 1. Then the real balance is 10**-18 of the coin. to represent a balance of 1 coin, then that is 10**18 of the smallest unit in code\r\n\tuint256 public totalSupply; //Total supply including the number of decimals. ex: 1000 coins are 1000*(10 ** decimals) where decimals = 18\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value); //Defining an event which is triggered when is called and can be catch to the outside world through a library like Web3\r\n\r\n\r\n\tfunction Token(uint256 initialSupply, string tokenName, string tokenSymbol, uint8 decimalUnits) public{ //The constructor. The initializer of contract. Only called once\r\n\t\tbalanceOf[msg.sender] = initialSupply; //msg.sender is the address of the one who deployed the contract. That address will have all the inital supply  \r\n\t\ttotalSupply = initialSupply; //The total supply is the inital supply\r\n\t\tdecimals = decimalUnits; //set the decimals\r\n\t\tsymbol = tokenSymbol; //set the simbo\r\n\t\tname = tokenName; //Set the name of the token\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _value) public{ //The function to transfer. Can be called by anyone. \r\n\t\trequire(balanceOf[msg.sender] >= _value); //If the address doesn't have enough balance, the function won't be executed\r\n\t\trequire(balanceOf[_to] + _value >= balanceOf[_to]); //Check for overflow errors\r\n\t\tbalanceOf[msg.sender] -= _value; //Substract the amount to send from the sender address\r\n\t\tbalanceOf[_to] += _value; //Add the amount to send to the receiver address\r\n\t\tTransfer(msg.sender, _to, _value); //Tell the outside world that a transaction took place\r\n\t}\r\n\r\n}\r\n\r\ncontract EcoCrypto is admined, Token{ //The main contract. The token which will inherit from the other two contracts. ie this contract will have already defined the functions defined in the previous contracts\r\n\r\n\tfunction EcoCrypto() public  //initializer\r\n\t  Token (10000000000000000000, \"EcoCrypto\", \"ECO\", 8 ){ //calles the constructor/initializer of the contract called taken\r\n\t\t\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _value) public{ //The main function.  It was already defined by the contract called token. Since we're defining a function with the same name transfer, we're overriding it\r\n\t\trequire(balanceOf[msg.sender] > 0);\r\n\t\trequire(balanceOf[msg.sender] >= _value);\r\n\t\trequire(balanceOf[_to] + _value >= balanceOf[_to]);\r\n\t\t//if(admin)\r\n\t\tbalanceOf[msg.sender] -= _value;\r\n\t\tbalanceOf[_to] += _value;\r\n\t\tTransfer(msg.sender, _to, _value);\r\n\t}\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"EcoCrypto","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b9c418c276256c20f40ba1b204a8038e989825aadf1c746475eb13742691b2e2"}]}