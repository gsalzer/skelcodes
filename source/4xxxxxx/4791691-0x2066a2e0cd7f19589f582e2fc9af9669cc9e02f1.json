{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n\r\n/// @title  Sether token presale - sether.io (SETH) - crowdfunding code\r\n/// Whitepaper:  \r\n///  https://raw.githubusercontent.com/mware-solutions/icosite/master/SETHER%20Whitepaper.pdf\r\n/// \r\n\r\ncontract SetherToken {\r\n    string public name = \"Sether\";\r\n    string public symbol = \"SETH\";\r\n    uint8 public constant decimals = 18;  \r\n    address public owner;\r\n\r\n    uint256 public constant tokensPerEth = 1;\r\n    uint256 public constant howManyEtherInWeiToBecomeOwner = 1000 ether;\r\n    uint256 public constant howManyEtherInWeiToKillContract = 500 ether;\r\n    uint256 public constant howManyEtherInWeiToChangeSymbolName = 400 ether;\r\n    \r\n    bool public funding = true;\r\n\r\n    // The current total token supply.\r\n    uint256 totalTokens = 1000;\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Migrate(address indexed _from, address indexed _to, uint256 _value);\r\n    event Refund(address indexed _from, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    function SetherToken() public {\r\n        owner = msg.sender;\r\n        balances[owner]=1000;\r\n    }\r\n\r\n    function changeNameSymbol(string _name, string _symbol) payable external\r\n    {\r\n        if (msg.sender==owner || msg.value >=howManyEtherInWeiToChangeSymbolName)\r\n        {\r\n            name = _name;\r\n            symbol = _symbol;\r\n        }\r\n    }\r\n    \r\n    \r\n    function changeOwner (address _newowner) payable external\r\n    {\r\n        if (msg.value>=howManyEtherInWeiToBecomeOwner)\r\n        {\r\n            owner.transfer(msg.value);\r\n            owner.transfer(this.balance);\r\n            owner=_newowner;\r\n        }\r\n    }\r\n\r\n    function killContract () payable external\r\n    {\r\n        if (msg.sender==owner || msg.value >=howManyEtherInWeiToKillContract)\r\n        {\r\n            selfdestruct(owner);\r\n        }\r\n    }\r\n    /// @notice Transfer `_value` SETH tokens from sender's account\r\n    /// `msg.sender` to provided account address `_to`.\r\n    /// @notice This function is disabled during the funding.\r\n    /// @dev Required state: Operational\r\n    /// @param _to The address of the tokens recipient\r\n    /// @param _value The amount of token to be transferred\r\n    /// @return Whether the transfer was successful or not\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        // Abort if not in Operational state.\r\n        \r\n        var senderBalance = balances[msg.sender];\r\n        if (senderBalance >= _value && _value > 0) {\r\n            senderBalance -= _value;\r\n            balances[msg.sender] = senderBalance;\r\n            balances[_to] += _value;\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    function mintTo(address _to, uint256 _value) public returns (bool) {\r\n        // Abort if not in Operational state.\r\n        \r\n            balances[_to] += _value;\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n    }\r\n    \r\n\r\n    function totalSupply() external constant returns (uint256) {\r\n        return totalTokens;\r\n    }\r\n\r\n    function balanceOf(address _owner) external constant returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n\r\n\r\n    function transferFrom(\r\n         address _from,\r\n         address _to,\r\n         uint256 _amount\r\n     ) public returns (bool success) {\r\n         if (balances[_from] >= _amount\r\n             && allowed[_from][msg.sender] >= _amount\r\n             && _amount > 0\r\n             && balances[_to] + _amount > balances[_to]) {\r\n             balances[_from] -= _amount;\r\n             allowed[_from][msg.sender] -= _amount;\r\n             balances[_to] += _amount;\r\n             return true;\r\n         } else {\r\n             return false;\r\n         }\r\n  }\r\n\r\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\r\n         allowed[msg.sender][_spender] = _amount;\r\n         Approval(msg.sender, _spender, _amount);\r\n         \r\n         return true;\r\n     }\r\n// Crowdfunding:\r\n\r\n    /// @notice Create tokens when funding is active.\r\n    /// @dev Required state: Funding Active\r\n    /// @dev State transition: -> Funding Success (only if cap reached)\r\n    function () payable external {\r\n        // Abort if not in Funding Active state.\r\n        // The checks are split (instead of using or operator) because it is\r\n        // cheaper this way.\r\n        if (!funding) revert();\r\n        \r\n        // Do not allow creating 0 or more than the cap tokens.\r\n        if (msg.value == 0) revert();\r\n        \r\n        var numTokens = msg.value * (1000.0/totalTokens);\r\n        totalTokens += numTokens;\r\n\r\n        // Assign new tokens to the sender\r\n        balances[msg.sender] += numTokens;\r\n\r\n        // Log token creation event\r\n        Transfer(0, msg.sender, numTokens);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"killContract\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"howManyEtherInWeiToChangeSymbolName\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"changeNameSymbol\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"howManyEtherInWeiToBecomeOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"howManyEtherInWeiToKillContract\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newowner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"funding\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Migrate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"SetherToken","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://83113d3858ddd213f3de3cec83d5270c33061a1fe24342c97136edf4ce8d95af"}]}