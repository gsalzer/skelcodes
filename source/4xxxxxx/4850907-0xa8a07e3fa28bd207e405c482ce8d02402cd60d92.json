{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^ 0.4.18;\r\n\r\n\r\n\r\n\r\n\r\ncontract tokenRecipient {\r\n    function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);\r\n}\r\n\r\n\r\ncontract ERC20 {\r\n\r\n    function totalSupply() constant returns(uint _totalSupply);\r\n\r\n    function balanceOf(address who) constant returns(uint256);\r\n\r\n    function transfer(address to, uint256 value) returns(bool ok);\r\n\r\n    function transferFrom(address from, address to, uint256 value) returns(bool ok);\r\n\r\n    function approve(address spender, uint256 value) returns(bool ok);\r\n\r\n    function allowance(address owner, address spender) constant returns(uint256);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n}\r\n\r\n\r\ncontract OsherCoin is ERC20 {\r\n\r\n\r\n    string public standard = 'OsherCoin 1.0';\r\n    string public constant name = \"OsherCoin\";\r\n    string public constant symbol = \"OSH\";\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n  \r\n    \r\n    address public owner;\r\n    mapping( address => uint256) public balanceOf;\r\n    mapping( uint => address) public accountIndex;\r\n    uint public accountCount;\r\n    \r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n \r\n    \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed _owner, address indexed spender, uint value);\r\n    \r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    \r\n    function OsherCoin() {\r\n         \r\n        uint supply = 100000000000000000; \r\n        appendTokenHolders( msg.sender );\r\n        balanceOf[msg.sender] =  supply;\r\n        totalSupply = supply; // \r\n        \r\n        decimals = 8; // Amount of decimals for display purposes\r\n        owner = msg.sender;\r\n        \r\n  \r\n    }\r\n    \r\n    \r\n    modifier onlyOwner() {\r\n        if (msg.sender != owner) {\r\n            throw;\r\n        }\r\n        _;\r\n    }\r\n\r\n\r\n    function balanceOf(address tokenHolder) constant returns(uint256) {\r\n\r\n        return balanceOf[tokenHolder];\r\n    }\r\n\r\n    function totalSupply() constant returns(uint256) {\r\n\r\n        return totalSupply;\r\n    }\r\n\r\n    function getAccountCount() constant returns(uint256) {\r\n\r\n        return accountCount;\r\n    }\r\n\r\n    function getAddress(uint256 slot) constant returns(address) {\r\n\r\n        return accountIndex[slot];\r\n\r\n    }\r\n\r\n    \r\n    function appendTokenHolders(address tokenHolder) private {\r\n\r\n        if (balanceOf[tokenHolder] == 0) {\r\n            accountIndex[accountCount] = tokenHolder;\r\n            accountCount++;\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    function transfer(address _to, uint256 _value) returns(bool ok) {\r\n   \r\n        if (balanceOf[msg.sender] < _value) throw; \r\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw;\r\n        \r\n        appendTokenHolders(_to);\r\n        balanceOf[msg.sender] -= _value; \r\n        balanceOf[_to] += _value; \r\n        Transfer(msg.sender, _to, _value); \r\n\r\n        return true;\r\n    }\r\n    \r\n    function approve(address _spender, uint256 _value)\r\n    returns(bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        Approval( msg.sender ,_spender, _value);\r\n        return true;\r\n    }\r\n\r\n \r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData)\r\n    returns(bool success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns(uint256 remaining) {\r\n        return allowance[_owner][_spender];\r\n    }\r\n\r\n \r\n    function transferFrom(address _from, address _to, uint256 _value) returns(bool success) {\r\n     \r\n        if (balanceOf[_from] < _value) throw;  \r\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  \r\n        if (_value > allowance[_from][msg.sender]) throw; \r\n        appendTokenHolders(_to);\r\n        balanceOf[_from] -= _value; \r\n        balanceOf[_to] += _value; \r\n        allowance[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n       \r\n        return true;\r\n    }\r\n  \r\n    function burn(uint256 _value) returns(bool success) {\r\n        if (balanceOf[msg.sender] < _value) throw; \r\n        if( totalSupply -  _value < 2100000000000000) throw;\r\n        balanceOf[msg.sender] -= _value; \r\n        totalSupply -= _value; \r\n        Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    function burnFrom(address _from, uint256 _value) returns(bool success) {\r\n        \r\n        if( totalSupply -  _value < 2100000000000000) throw;\r\n        if (balanceOf[_from] < _value) throw; \r\n        if (_value > allowance[_from][msg.sender]) throw; \r\n        balanceOf[_from] -= _value; \r\n        allowance[_from][msg.sender] -= _value; \r\n        totalSupply -= _value; \r\n        Burn(_from, _value);\r\n        return true;\r\n    }\r\n \r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accountIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"ok\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAccountCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"accountCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"OsherCoin","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e3cc4dd41074e026dd09db73f43ed5f6fbd5e90bc4ab4e276d11953d69149924"}]}