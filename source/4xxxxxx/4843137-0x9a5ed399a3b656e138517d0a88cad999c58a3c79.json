{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\ncontract DependentOnIPFS {\r\n  /**\r\n   * @dev Validate a multihash bytes value\r\n   */\r\n  function isValidIPFSMultihash(bytes _multihashBytes) internal pure returns (bool) {\r\n    require(_multihashBytes.length > 2);\r\n\r\n    uint8 _size;\r\n\r\n    // There isn't another way to extract only this byte into a uint8\r\n    // solhint-disable no-inline-assembly\r\n    assembly {\r\n      // Seek forward 33 bytes beyond the solidity length value and the hash function byte\r\n      _size := byte(0, mload(add(_multihashBytes, 33)))\r\n    }\r\n\r\n    return (_multihashBytes.length == _size + 2);\r\n  }\r\n}\r\n\r\ncontract Poll is DependentOnIPFS {\r\n  // There isn't a way around using time to determine when votes can be cast\r\n  // solhint-disable not-rely-on-time\r\n\r\n  bytes public pollDataMultihash;\r\n  uint16 public numChoices;\r\n  uint256 public startTime;\r\n  uint256 public endTime;\r\n  address public author;\r\n\r\n  mapping(address => uint16) public votes;\r\n\r\n  event VoteCast(address indexed voter, uint16 indexed choice);\r\n\r\n  function Poll(\r\n    bytes _ipfsHash,\r\n    uint16 _numChoices,\r\n    uint256 _startTime,\r\n    uint256 _endTime,\r\n    address _author\r\n  ) public {\r\n    require(_startTime >= now && _endTime > _startTime);\r\n    require(isValidIPFSMultihash(_ipfsHash));\r\n\r\n    numChoices = _numChoices;\r\n    startTime = _startTime;\r\n    endTime = _endTime;\r\n    pollDataMultihash = _ipfsHash;\r\n    author = _author;\r\n  }\r\n\r\n  /**\r\n   * @dev Cast or change your vote\r\n   * @param _choice The index of the option in the corresponding IPFS document.\r\n   */\r\n  function vote(uint16 _choice) public duringPoll {\r\n    // Choices are indexed from 1 since the mapping returns 0 for \"no vote cast\"\r\n    require(_choice <= numChoices && _choice > 0);\r\n\r\n    votes[msg.sender] = _choice;\r\n    VoteCast(msg.sender, _choice);\r\n  }\r\n\r\n  modifier duringPoll {\r\n    require(now >= startTime && now <= endTime);\r\n    _;\r\n  }\r\n}\r\n\r\ncontract VotingCenter {\r\n  Poll[] public polls;\r\n\r\n  event PollCreated(address indexed poll, address indexed author);\r\n\r\n  /**\r\n   * @dev create a poll and store the address of the poll in this contract\r\n   * @param _ipfsHash Multihash for IPFS file containing poll information\r\n   * @param _numOptions Number of choices in this poll\r\n   * @param _startTime Time after which a user can cast a vote in the poll\r\n   * @param _endTime Time after which the poll no longer accepts new votes\r\n   * @return The address of the new Poll\r\n   */\r\n  function createPoll(\r\n    bytes _ipfsHash,\r\n    uint16 _numOptions,\r\n    uint256 _startTime,\r\n    uint256 _endTime\r\n  ) public returns (address) {\r\n    Poll newPoll = new Poll(_ipfsHash, _numOptions, _startTime, _endTime, msg.sender);\r\n    polls.push(newPoll);\r\n\r\n    PollCreated(address(newPoll), msg.sender);\r\n\r\n    return address(newPoll);\r\n  }\r\n\r\n  function allPolls() view public returns (Poll[]) {\r\n    return polls;\r\n  }\r\n\r\n  function numPolls() view public returns (uint256) {\r\n    return polls.length;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"numPolls\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"polls\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPolls\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ipfsHash\",\"type\":\"bytes\"},{\"name\":\"_numOptions\",\"type\":\"uint16\"},{\"name\":\"_startTime\",\"type\":\"uint256\"},{\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"createPoll\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"poll\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"author\",\"type\":\"address\"}],\"name\":\"PollCreated\",\"type\":\"event\"}]","ContractName":"VotingCenter","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://076da6a3929ba6884cfc299852a3dd0a7ce1e586f1fadf39c62e5623b4c0490a"}]}