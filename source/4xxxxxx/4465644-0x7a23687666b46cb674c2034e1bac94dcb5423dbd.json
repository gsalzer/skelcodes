{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\n/**\r\n *\r\n * @author  <chicocripto@protonmail.com>\r\n *\r\n * RDFDM - Riverdimes Fiat Donation Manager\r\n * Version 20171027a\r\n *\r\n * Overview:\r\n * four basic round-up operations are supported:\r\n *\r\n * A) fiatCollected: Record Fiat Donation (collection)\r\n *    inputs:        charity (C), fiat amount ($XX.XX),\r\n *    summary:       creates a log of a fiat donation to a specified charity, C.\r\n *    message:       $XX.XX collected FBO Charity C, internal document #ABC\r\n *    - add $XX.XX to chariy's fiatBalanceIn, fiatCollected\r\n *\r\n * B) fiatToEth:     Fiat Converted to ETH\r\n *    inputs:        charity (C), fiat amount ($XX.XX), ETH amount (Z), document reference (ABC)\r\n *    summary:       deduct $XX.XX from charity C's fiatBalanceIn; credit charity C's ethBalanceIn. this operation is invoked\r\n *                   when fiat donations are converted to ETH. it includes a deposit of Z ETH.\r\n *    message(s):    On behalf of Charity C, $XX.XX used to purchase Z ETH\r\n *    - $XX.XX deducted from charity C's fiatBalanceIn\r\n *    - skims 4% of Z for RD Token holders, and 16% for operational overhead\r\n *    - credits charity C with 80% of Z ETH (ethBalance)\r\n *\r\n * C) ethToFiat:     ETH Converted to Fiat\r\n *    inputs:        charity (C), ETH amount (Z), fiat amount ($XX.XX), document reference (ABC)\r\n *    summary:       withdraw ETH from and convert to fiat\r\n *    message(s):    Z ETH converted to $XX.XX FBO Charity C\r\n *    - deducts Z ETH from charity C's ethBalance\r\n *    - adds $XX.XX to charity C's fiatBalanceOut\r\n *\r\n * D) fiatDelivered: Record Fiat Delivery to Specified Charity\r\n *    inputs:        charity (C), fiat amount ($XX.XX), document reference (ABC)\r\n *    summary:       creates a log of a fiat delivery to a specified charity, C:\r\n *    message:       $XX.XX delivered to Charity C, internal document #ABC\r\n *    - deducts the dollar amount, $XX.XX from charity's fiatBalanceOut\r\n *    - add $XX.XX to charity's totalDelivered\r\n *\r\n * one basic operation, unrelated to round-up\r\n *\r\n * A) ethDonation:        Direct ETH Donation to Charity\r\n *    inputs:             charity (C), ETH amount (Z), document reference (ABC)\r\n *    summary:            ETH donation to a specified charity, crediting charity's ethBalance. ETH in transaction.\r\n *    messages:           Z ETH donated to Charity C, internal document #ABC\r\n *    - add Z ETH to chariy's ethDonated\r\n *    - skims 0.5% of Z for RD Token holders, and 1.5% for operational overhead\r\n *    - credits charity C with 98% of Z ETH (ethBalance)\r\n *\r\n * in addition there are shortcut operations (related to round-up):\r\n *\r\n * A) fiatCollectedToEth: Record Fiat Donation (collection) and convert to ETH\r\n *    inputs:             charity (C), fiat amount ($XX.XX), ETH amount (Z), document reference (ABC)\r\n *    summary:            creates a log of a fiat donation to a specified charity, C; fiat donation is immediately converted to\r\n *                        ETH, crediting charity C's ethBalance. the transaction includes a deposit of Z ETH.\r\n *    messages:           $XX.XX collected FBO Charity C, internal document #ABC\r\n *                        On behalf of Charity C, $XX.XX used to purchase Z ETH\r\n *    - add $XX.XX to chariy's fiatCollected\r\n *    - skims 4% of Z for RD Token holders, and 16% for operational overhead\r\n *    - credits charity C with 80% of Z ETH (ethBalance)\r\n *\r\n * B) ethToFiatDelivered: Record ETH Conversion to Fiat; and Fiat Delivery to Specified Charity\r\n *    inputs:             charity (C), ETH amount (Z), fiat amount ($XX.XX), document reference (ABC)\r\n *    summary:            withdraw ETH from charity C's ethBalance and convert to fiat; log fiat delivery of $XX.XX.\r\n *    messages:           Z ETH converted to $XX.XX FBO Charity C\r\n *                        $XX.XX delivered to Charity C, internal document #ABC\r\n *    - deducts Z ETH from charity C's ethBalance\r\n *    - add $XX.XX to charity's totalDelivered\r\n *\r\n */\r\n\r\n//import './SafeMath.sol';\r\n//contract RDFDM is SafeMath\r\ncontract RDFDM {\r\n\r\n  //events relating to donation operations\r\n  //\r\n  event FiatCollectedEvent(uint indexed charity, uint usd, uint ref);\r\n  event FiatToEthEvent(uint indexed charity, uint usd, uint eth);\r\n  event EthToFiatEvent(uint indexed charity, uint eth, uint usd);\r\n  event FiatDeliveredEvent(uint indexed charity, uint usd, uint ref);\r\n  event EthDonationEvent(uint indexed charity, uint eth);\r\n\r\n  //events relating to adding and deleting charities\r\n  //\r\n  event CharityAddedEvent(uint indexed charity, string name, uint8 currency);\r\n  event CharityModifiedEvent(uint indexed charity, string name, uint8 currency);\r\n\r\n  //currencies\r\n  //\r\n  uint constant  CURRENCY_USD  = 0x01;\r\n  uint constant  CURRENCY_EURO = 0x02;\r\n  uint constant  CURRENCY_NIS  = 0x03;\r\n  uint constant  CURRENCY_YUAN = 0x04;\r\n\r\n\r\n  struct Charity {\r\n    uint fiatBalanceIn;           // funds in external acct, collected fbo charity\r\n    uint fiatBalanceOut;          // funds in external acct, pending delivery to charity\r\n    uint fiatCollected;           // total collected since dawn of creation\r\n    uint fiatDelivered;           // total delivered since dawn of creation\r\n    uint ethDonated;              // total eth donated since dawn of creation\r\n    uint ethCredited;             // total eth credited to this charity since dawn of creation\r\n    uint ethBalance;              // current eth balance of this charity\r\n    uint fiatToEthPriceAccEth;    // keep track of fiat to eth conversion price: total eth\r\n    uint fiatToEthPriceAccFiat;   // keep track of fiat to eth conversion price: total fiat\r\n    uint ethToFiatPriceAccEth;    // kkep track of eth to fiat conversion price: total eth\r\n    uint ethToFiatPriceAccFiat;   // kkep track of eth to fiat conversion price: total fiat\r\n    uint8 currency;               // fiat amounts are in smallest denomination of currency\r\n    string name;                  // eg. \"Salvation Army\"\r\n  }\r\n\r\n  uint public charityCount;\r\n  address public owner;\r\n  address public manager;\r\n  address public token;           //token-holder fees sent to this address\r\n  address public operatorFeeAcct; //operations fees sent to this address\r\n  mapping (uint => Charity) public charities;\r\n  bool public isLocked;\r\n\r\n  modifier ownerOnly {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  modifier managerOnly {\r\n    require(msg.sender == owner || msg.sender == manager);\r\n    _;\r\n  }\r\n\r\n  modifier unlockedOnly {\r\n    require(!isLocked);\r\n    _;\r\n  }\r\n\r\n\r\n  //\r\n  //constructor\r\n  //\r\n  function RDFDM() {\r\n    owner = msg.sender;\r\n    manager = msg.sender;\r\n    token = msg.sender;\r\n    operatorFeeAcct = msg.sender;\r\n  }\r\n  function lock() public ownerOnly { isLocked = true; }\r\n  function setToken(address _token) public ownerOnly unlockedOnly { token = _token; }\r\n  function setOperatorFeeAcct(address _operatorFeeAcct) public ownerOnly { operatorFeeAcct = _operatorFeeAcct; }\r\n  function setManager(address _manager) public managerOnly { manager = _manager; }\r\n  function deleteManager() public managerOnly { manager = owner; }\r\n\r\n\r\n  function addCharity(string _name, uint8 _currency) public managerOnly {\r\n    charities[charityCount].name = _name;\r\n    charities[charityCount].currency = _currency;\r\n    CharityAddedEvent(charityCount, _name, _currency);\r\n    ++charityCount;\r\n  }\r\n\r\n  function modifyCharity(uint _charity, string _name, uint8 _currency) public managerOnly {\r\n    require(_charity < charityCount);\r\n    charities[charityCount].name = _name;\r\n    charities[charityCount].currency = _currency;\r\n    CharityModifiedEvent(_charity, _name, _currency);\r\n  }\r\n\r\n\r\n\r\n  //======== basic operations\r\n\r\n  function fiatCollected(uint _charity, uint _fiat, uint _ref) public managerOnly {\r\n    require(_charity < charityCount);\r\n    charities[charityCount].fiatBalanceIn += _fiat;\r\n    charities[charityCount].fiatCollected += _fiat;\r\n    FiatCollectedEvent(_charity, _fiat, _ref);\r\n  }\r\n\r\n  function fiatToEth(uint _charity, uint _fiat) public managerOnly payable {\r\n    require(token != 0);\r\n    require(_charity < charityCount);\r\n    //keep track of fiat to eth conversion price\r\n    charities[charityCount].fiatToEthPriceAccFiat += _fiat;\r\n    charities[charityCount].fiatToEthPriceAccEth += msg.value;\r\n    charities[charityCount].fiatBalanceIn -= _fiat;\r\n    uint _tokenCut = (msg.value * 4) / 100;\r\n    uint _operatorCut = (msg.value * 16) / 100;\r\n    uint _charityCredit = (msg.value - _operatorCut) - _tokenCut;\r\n    operatorFeeAcct.transfer(_operatorCut);\r\n    token.transfer(_tokenCut);\r\n    charities[charityCount].ethBalance += _charityCredit;\r\n    charities[charityCount].ethCredited += _charityCredit;\r\n    FiatToEthEvent(_charity, _fiat, msg.value);\r\n  }\r\n\r\n  function ethToFiat(uint _charity, uint _eth, uint _fiat) public managerOnly {\r\n    require(_charity < charityCount);\r\n    require(charities[_charity].ethBalance >= _eth);\r\n    //keep track of fiat to eth conversion price\r\n    charities[charityCount].ethToFiatPriceAccFiat += _fiat;\r\n    charities[charityCount].ethToFiatPriceAccEth += _eth;\r\n    charities[charityCount].ethBalance -= _eth;\r\n    charities[charityCount].fiatBalanceOut += _fiat;\r\n    //withdraw funds to the caller\r\n    msg.sender.transfer(_eth);\r\n    EthToFiatEvent(_charity, _eth, _fiat);\r\n  }\r\n\r\n  function fiatDelivered(uint _charity, uint _fiat, uint _ref) public managerOnly {\r\n    require(_charity < charityCount);\r\n    require(charities[_charity].fiatBalanceOut >= _fiat);\r\n    charities[_charity].fiatBalanceOut -= _fiat;\r\n    charities[charityCount].fiatDelivered += _fiat;\r\n    FiatDeliveredEvent(_charity, _fiat, _ref);\r\n  }\r\n\r\n  //======== unrelated to round-up\r\n  function ethDonation(uint _charity) public payable {\r\n    require(token != 0);\r\n    require(_charity < charityCount);\r\n    uint _tokenCut = (msg.value * 1) / 200;\r\n    uint _operatorCut = (msg.value * 3) / 200;\r\n    uint _charityCredit = (msg.value - _operatorCut) - _tokenCut;\r\n    operatorFeeAcct.transfer(_operatorCut);\r\n    token.transfer(_tokenCut);\r\n    charities[charityCount].ethDonated += _charityCredit;\r\n    charities[charityCount].ethBalance += _charityCredit;\r\n    charities[charityCount].ethCredited += _charityCredit;\r\n    EthDonationEvent(_charity, msg.value);\r\n  }\r\n\r\n\r\n  //======== combo operations\r\n  function fiatCollectedToEth(uint _charity, uint _fiat, uint _ref) public managerOnly payable {\r\n    require(token != 0);\r\n    require(_charity < charityCount);\r\n    charities[charityCount].fiatCollected += _fiat;\r\n    //charities[charityCount].fiatBalanceIn does not change, since we immediately convert to eth\r\n    //keep track of fiat to eth conversion price\r\n    charities[charityCount].fiatToEthPriceAccFiat += _fiat;\r\n    charities[charityCount].fiatToEthPriceAccEth += msg.value;\r\n    uint _tokenCut = (msg.value * 4) / 100;\r\n    uint _operatorCut = (msg.value * 16) / 100;\r\n    uint _charityCredit = (msg.value - _operatorCut) - _tokenCut;\r\n    operatorFeeAcct.transfer(_operatorCut);\r\n    token.transfer(_tokenCut);\r\n    charities[charityCount].ethBalance += _charityCredit;\r\n    charities[charityCount].ethCredited += _charityCredit;\r\n    FiatCollectedEvent(_charity, _fiat, _ref);\r\n    FiatToEthEvent(_charity, _fiat, msg.value);\r\n  }\r\n\r\n  function ethToFiatDelivered(uint _charity, uint _eth, uint _fiat, uint _ref) public managerOnly {\r\n    require(_charity < charityCount);\r\n    require(charities[_charity].ethBalance >= _eth);\r\n    //keep track of fiat to eth conversion price\r\n    charities[charityCount].ethToFiatPriceAccFiat += _fiat;\r\n    charities[charityCount].ethToFiatPriceAccEth += _eth;\r\n    charities[charityCount].ethBalance -= _eth;\r\n    //charities[charityCount].fiatBalanceOut does not change, since we immediately deliver\r\n    //withdraw funds to the caller\r\n    msg.sender.transfer(_eth);\r\n    EthToFiatEvent(_charity, _eth, _fiat);\r\n    charities[charityCount].fiatDelivered += _fiat;\r\n    FiatDeliveredEvent(_charity, _fiat, _ref);\r\n  }\r\n\r\n\r\n  //note: contant fcn does not need safe math\r\n  function quickAuditEthCredited(uint _charity) public constant returns (uint _fiatCollected,\r\n                                                              uint _fiatToEthNotProcessed,\r\n                                                              uint _fiatToEthProcessed,\r\n                                                              uint _fiatToEthPricePerEth,\r\n                                                              uint _fiatToEthCreditedFinney,\r\n                                                              uint _fiatToEthAfterFeesFinney,\r\n                                                              uint _ethDonatedFinney,\r\n                                                              uint _ethDonatedAfterFeesFinney,\r\n                                                              uint _totalEthCreditedFinney,\r\n                                                               int _quickDiscrepancy) {\r\n    require(_charity < charityCount);\r\n    _fiatCollected = charities[charityCount].fiatCollected;                                                //eg. $450 = 45000\r\n    _fiatToEthNotProcessed = charities[charityCount].fiatBalanceIn;                                        //eg.            0\r\n    _fiatToEthProcessed = _fiatCollected - _fiatToEthNotProcessed;                                         //eg.        45000\r\n    if (charities[charityCount].fiatToEthPriceAccEth == 0) {\r\n      _fiatToEthPricePerEth = 0;\r\n      _fiatToEthCreditedFinney = 0;\r\n    } else {\r\n      _fiatToEthPricePerEth = (charities[charityCount].fiatToEthPriceAccFiat * (1 ether)) /                //eg. 45000 * 10^18 = 45 * 10^21\r\n                               charities[charityCount].fiatToEthPriceAccEth;                               //eg 1.5 ETH        = 15 * 10^17\r\n                                                                                                           //               --------------------\r\n                                                                                                           //                     3 * 10^4 (30000 cents per ether)\r\n      _fiatToEthCreditedFinney = _fiatToEthProcessed * (1 ether / 1 finney) / _fiatToEthPricePerEth;       //eg. 45000 * 1000 / 30000 = 1500 (finney)\r\n      _fiatToEthAfterFeesFinney = _fiatToEthCreditedFinney * 8 / 10;                                       //eg. 1500 * 8 / 10 = 1200 (finney)\r\n    }\r\n    _ethDonatedFinney = charities[charityCount].ethDonated / (1 finney);                                   //eg. 1 ETH = 1 * 10^18 / 10^15 = 1000 (finney)\r\n    _ethDonatedAfterFeesFinney = _ethDonatedFinney * 98 / 100;                                             //eg. 1000 * 98/100 = 980 (finney)\r\n    _totalEthCreditedFinney = _fiatToEthAfterFeesFinney + _ethDonatedAfterFeesFinney;                      //eg 1200 + 980 = 2180 (finney)\r\n    uint256 tecf = charities[charityCount].ethCredited * (1 ether / 1 finney);\r\n    _quickDiscrepancy = int256(_totalEthCreditedFinney) - int256(tecf);\r\n  }\r\n\r\n\r\n  //note: contant fcn does not need safe math\r\n  function quickAuditFiatDelivered(uint _charity) public constant returns (\r\n                                                              uint _totalEthCreditedFinney,\r\n                                                              uint _ethNotProcessedFinney,\r\n                                                              uint _processedEthCreditedFinney,\r\n                                                              uint _ethToFiatPricePerEth,\r\n                                                              uint _ethToFiatCreditedFiat,\r\n                                                              uint _ethToFiatNotProcessed,\r\n                                                              uint _ethToFiatProcessed,\r\n                                                              uint _fiatDelivered,\r\n                                                               int _quickDiscrepancy) {\r\n    require(_charity < charityCount);\r\n    _totalEthCreditedFinney = charities[charityCount].ethCredited * (1 ether / 1 finney);\r\n    _ethNotProcessedFinney = charities[charityCount].ethBalance / (1 finney);                              //eg. 1 ETH = 1 * 10^18 / 10^15 = 1000 (finney)\r\n    _processedEthCreditedFinney = _totalEthCreditedFinney - _ethNotProcessedFinney;                        //eg 1180 finney\r\n    if (charities[charityCount].ethToFiatPriceAccEth == 0) {\r\n      _ethToFiatPricePerEth = 0;\r\n      _ethToFiatCreditedFiat = 0;\r\n    } else {\r\n      _ethToFiatPricePerEth = (charities[charityCount].ethToFiatPriceAccFiat * (1 ether)) /                //eg. 29400 * 10^18 = 2940000 * 10^16\r\n                               charities[charityCount].ethToFiatPriceAccEth;                               //eg 0.980 ETH      =      98 * 10^16\r\n                                                                                                           //               --------------------\r\n                                                                                                           //                      30000 (30000 cents per ether)\r\n      _ethToFiatCreditedFiat = _processedEthCreditedFinney * _ethToFiatPricePerEth / (1 ether / 1 finney); //eg. 1180 * 30000 / 1000 = 35400\r\n    }\r\n    _ethToFiatNotProcessed = charities[_charity].fiatBalanceOut;\r\n    _ethToFiatProcessed = _ethToFiatCreditedFiat - _ethToFiatNotProcessed;\r\n    _fiatDelivered = charities[charityCount].fiatDelivered;\r\n    _quickDiscrepancy = int256(_ethToFiatProcessed) - int256(_fiatDelivered);\r\n  }\r\n\r\n\r\n  //\r\n  // default payable function.\r\n  //\r\n  function () payable {\r\n    revert();\r\n  }\r\n\r\n  //for debug\r\n  //only available before the contract is locked\r\n  function haraKiri() ownerOnly unlockedOnly {\r\n    selfdestruct(owner);\r\n  }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_charity\",\"type\":\"uint256\"}],\"name\":\"quickAuditEthCredited\",\"outputs\":[{\"name\":\"_fiatCollected\",\"type\":\"uint256\"},{\"name\":\"_fiatToEthNotProcessed\",\"type\":\"uint256\"},{\"name\":\"_fiatToEthProcessed\",\"type\":\"uint256\"},{\"name\":\"_fiatToEthPricePerEth\",\"type\":\"uint256\"},{\"name\":\"_fiatToEthCreditedFinney\",\"type\":\"uint256\"},{\"name\":\"_fiatToEthAfterFeesFinney\",\"type\":\"uint256\"},{\"name\":\"_ethDonatedFinney\",\"type\":\"uint256\"},{\"name\":\"_ethDonatedAfterFeesFinney\",\"type\":\"uint256\"},{\"name\":\"_totalEthCreditedFinney\",\"type\":\"uint256\"},{\"name\":\"_quickDiscrepancy\",\"type\":\"int256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_charity\",\"type\":\"uint256\"},{\"name\":\"_fiat\",\"type\":\"uint256\"},{\"name\":\"_ref\",\"type\":\"uint256\"}],\"name\":\"fiatCollectedToEth\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_charity\",\"type\":\"uint256\"},{\"name\":\"_eth\",\"type\":\"uint256\"},{\"name\":\"_fiat\",\"type\":\"uint256\"}],\"name\":\"ethToFiat\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operatorFeeAcct\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_charity\",\"type\":\"uint256\"}],\"name\":\"quickAuditFiatDelivered\",\"outputs\":[{\"name\":\"_totalEthCreditedFinney\",\"type\":\"uint256\"},{\"name\":\"_ethNotProcessedFinney\",\"type\":\"uint256\"},{\"name\":\"_processedEthCreditedFinney\",\"type\":\"uint256\"},{\"name\":\"_ethToFiatPricePerEth\",\"type\":\"uint256\"},{\"name\":\"_ethToFiatCreditedFiat\",\"type\":\"uint256\"},{\"name\":\"_ethToFiatNotProcessed\",\"type\":\"uint256\"},{\"name\":\"_ethToFiatProcessed\",\"type\":\"uint256\"},{\"name\":\"_fiatDelivered\",\"type\":\"uint256\"},{\"name\":\"_quickDiscrepancy\",\"type\":\"int256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_charity\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_currency\",\"type\":\"uint8\"}],\"name\":\"modifyCharity\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_charity\",\"type\":\"uint256\"}],\"name\":\"ethDonation\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"charityCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_charity\",\"type\":\"uint256\"},{\"name\":\"_eth\",\"type\":\"uint256\"},{\"name\":\"_fiat\",\"type\":\"uint256\"},{\"name\":\"_ref\",\"type\":\"uint256\"}],\"name\":\"ethToFiatDelivered\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_charity\",\"type\":\"uint256\"},{\"name\":\"_fiat\",\"type\":\"uint256\"}],\"name\":\"fiatToEth\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deleteManager\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"haraKiri\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operatorFeeAcct\",\"type\":\"address\"}],\"name\":\"setOperatorFeeAcct\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_charity\",\"type\":\"uint256\"},{\"name\":\"_fiat\",\"type\":\"uint256\"},{\"name\":\"_ref\",\"type\":\"uint256\"}],\"name\":\"fiatDelivered\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_currency\",\"type\":\"uint8\"}],\"name\":\"addCharity\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_charity\",\"type\":\"uint256\"},{\"name\":\"_fiat\",\"type\":\"uint256\"},{\"name\":\"_ref\",\"type\":\"uint256\"}],\"name\":\"fiatCollected\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"charities\",\"outputs\":[{\"name\":\"fiatBalanceIn\",\"type\":\"uint256\"},{\"name\":\"fiatBalanceOut\",\"type\":\"uint256\"},{\"name\":\"fiatCollected\",\"type\":\"uint256\"},{\"name\":\"fiatDelivered\",\"type\":\"uint256\"},{\"name\":\"ethDonated\",\"type\":\"uint256\"},{\"name\":\"ethCredited\",\"type\":\"uint256\"},{\"name\":\"ethBalance\",\"type\":\"uint256\"},{\"name\":\"fiatToEthPriceAccEth\",\"type\":\"uint256\"},{\"name\":\"fiatToEthPriceAccFiat\",\"type\":\"uint256\"},{\"name\":\"ethToFiatPriceAccEth\",\"type\":\"uint256\"},{\"name\":\"ethToFiatPriceAccFiat\",\"type\":\"uint256\"},{\"name\":\"currency\",\"type\":\"uint8\"},{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"charity\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"usd\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ref\",\"type\":\"uint256\"}],\"name\":\"FiatCollectedEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"charity\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"usd\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"FiatToEthEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"charity\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"usd\",\"type\":\"uint256\"}],\"name\":\"EthToFiatEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"charity\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"usd\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ref\",\"type\":\"uint256\"}],\"name\":\"FiatDeliveredEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"charity\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"EthDonationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"charity\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"currency\",\"type\":\"uint8\"}],\"name\":\"CharityAddedEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"charity\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"currency\",\"type\":\"uint8\"}],\"name\":\"CharityModifiedEvent\",\"type\":\"event\"}]","ContractName":"RDFDM","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://be5f6bc2b115292bb4eca86b44439b9cb3b7b04ab995f3a11d19ca19dab103dc"}]}