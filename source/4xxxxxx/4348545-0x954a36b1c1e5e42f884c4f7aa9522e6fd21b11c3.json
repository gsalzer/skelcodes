{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.10;\r\n\r\ncontract Vault {\r\n    \r\n    event Deposit(address indexed depositor, uint amount);\r\n    event Withdrawal(address indexed to, uint amount);\r\n    \r\n    address Owner;\r\n    \r\n    mapping (address => uint) public deposits;\r\n    uint Date;\r\n    uint MinimumDeposit;\r\n    bool Locked = false;\r\n    \r\n    function initVault(uint minDeposit) isOpen payable {\r\n        Owner = msg.sender;\r\n        Date = 0;\r\n        MinimumDeposit = minDeposit;\r\n        deposit();\r\n    }\r\n\r\n    function() payable { deposit(); }\r\n\r\n    function SetLockDate(uint NewDate) onlyOwner {\r\n        Date = NewDate;\r\n    }\r\n\r\n    function WithdrawalEnabled() constant returns (bool) { return Date > 0 && Date <= now; }\r\n\r\n    function deposit() payable {\r\n        if (msg.value >= MinimumDeposit) {\r\n            if ((deposits[msg.sender] + msg.value) < deposits[msg.sender]) {\r\n                return;\r\n            }\r\n            deposits[msg.sender] += msg.value;\r\n        }\r\n        Deposit(msg.sender, msg.value);\r\n    }\r\n\r\n    function withdraw(address to, uint amount) onlyOwner {\r\n        if (WithdrawalEnabled()) {\r\n            if (amount <= this.balance) {\r\n                to.transfer(amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    modifier onlyOwner { if (msg.sender == Owner) _; }\r\n    modifier isOpen { if (!Locked) _; }\r\n    function lock() { Locked = true; }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"WithdrawalEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"NewDate\",\"type\":\"uint256\"}],\"name\":\"SetLockDate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"minDeposit\",\"type\":\"uint256\"}],\"name\":\"initVault\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"}]","ContractName":"Vault","CompilerVersion":"v0.4.10+commit.f0d539ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2f42d0b4cbfc0b0d98fdb06200f8d531b575b83b2fe6f9ddf499ad5cc264e69c"}]}