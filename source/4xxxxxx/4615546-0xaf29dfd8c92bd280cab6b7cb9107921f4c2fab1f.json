{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n// https://www.storm4.cloud\r\n\r\ncontract PubKeyTrust {\r\n\taddress owner;\r\n\r\n\tuint8[] public allHashTypes;\r\n\tmapping(uint8 => string) public hashTypes;\r\n\r\n\tstruct HashInfo {\r\n\t\tbytes pubKeyHash;\r\n\t\tbytes keyID;\r\n\t\tuint blockNumber;\r\n\t}\r\n\tstruct UserHashes {\r\n\t\tmapping(uint8 => HashInfo) hashes;\r\n\t\tbool initialized;\r\n\t}\r\n\tmapping(bytes20 => UserHashes) hashes;\r\n\r\n\tevent UserAdded(bytes20 indexed userID);\r\n\tevent PubKeyHashAdded(bytes20 indexed userID, uint8 indexed hashType);\r\n\tevent PubKeyHashTypeAdded(uint8 indexed hashType);\r\n\r\n\tfunction PubKeyTrust() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyByOwner()\r\n\t{\r\n\t\tif (msg.sender != owner)\r\n\t\t\trequire(false);\r\n\t\telse\r\n\t\t\t_;\r\n\t}\r\n\r\n\tfunction numHashTypes() public view returns (uint) {\r\n\r\n\t\treturn allHashTypes.length;\r\n\t}\r\n\r\n\tfunction addHashType(uint8 hashType, string description) public onlyByOwner {\r\n\r\n\t\t// Strings must be non-empty\r\n\t\tif (hashType == 0) require(false);\r\n\t\tif (bytes(description).length == 0) require(false);\r\n\t\tif (bytes(description).length > 64) require(false);\r\n\r\n\t\tstring storage prvDescription = hashTypes[hashType];\r\n\t\tif (bytes(prvDescription).length == 0)\r\n\t\t{\r\n\t\t\tallHashTypes.push(hashType);\r\n\t\t\thashTypes[hashType] = description;\r\n\t\t\tPubKeyHashTypeAdded(hashType);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isValidHashType(uint8 hashType) public view returns (bool) {\r\n\r\n\t\tstring storage description = hashTypes[hashType];\r\n\t\treturn (bytes(description).length > 0);\r\n\t}\r\n\r\n\tfunction addPubKeyHash(bytes20 userID, uint8 hashType, bytes pubKeyHash, bytes keyID) public onlyByOwner {\r\n\r\n\t\tif (!isValidHashType(hashType)) require(false);\r\n\t\tif (pubKeyHash.length == 0) require(false);\r\n\t\tif (keyID.length == 0) require(false);\r\n\r\n\t\tUserHashes storage userHashes = hashes[userID];\r\n\t\tif (!userHashes.initialized) {\r\n\t\t\tuserHashes.initialized = true;\r\n\t\t\tUserAdded(userID);\r\n\t\t}\r\n\r\n\t\tHashInfo storage hashInfo = userHashes.hashes[hashType];\r\n\t\tif (hashInfo.blockNumber == 0)\r\n\t\t{\r\n\t\t\thashInfo.pubKeyHash = pubKeyHash;\r\n\t\t\thashInfo.keyID = keyID;\r\n\t\t\thashInfo.blockNumber = block.number;\r\n\t\t\tPubKeyHashAdded(userID, hashType);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getPubKeyHash(bytes20 userID, uint8 hashType) public view returns (bytes) {\r\n\r\n\t\tUserHashes storage userHashes = hashes[userID];\r\n\t\tHashInfo storage hashInfo = userHashes.hashes[hashType];\r\n\r\n\t\treturn hashInfo.pubKeyHash;\r\n\t}\r\n\r\n\tfunction getKeyID(bytes20 userID, uint8 hashType) public view returns (bytes) {\r\n\r\n\t\tUserHashes storage userHashes = hashes[userID];\r\n\t\tHashInfo storage hashInfo = userHashes.hashes[hashType];\r\n\r\n\t\treturn hashInfo.keyID;\r\n\t}\r\n\r\n\tfunction getBlockNumber(bytes20 userID, uint8 hashType) public view returns (uint) {\r\n\r\n\t\tUserHashes storage userHashes = hashes[userID];\r\n\t\tHashInfo storage hashInfo = userHashes.hashes[hashType];\r\n\r\n\t\treturn hashInfo.blockNumber;\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"userID\",\"type\":\"bytes20\"},{\"name\":\"hashType\",\"type\":\"uint8\"},{\"name\":\"pubKeyHash\",\"type\":\"bytes\"},{\"name\":\"keyID\",\"type\":\"bytes\"}],\"name\":\"addPubKeyHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numHashTypes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"userID\",\"type\":\"bytes20\"},{\"name\":\"hashType\",\"type\":\"uint8\"}],\"name\":\"getPubKeyHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"userID\",\"type\":\"bytes20\"},{\"name\":\"hashType\",\"type\":\"uint8\"}],\"name\":\"getBlockNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"userID\",\"type\":\"bytes20\"},{\"name\":\"hashType\",\"type\":\"uint8\"}],\"name\":\"getKeyID\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"hashTypes\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hashType\",\"type\":\"uint8\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"addHashType\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allHashTypes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hashType\",\"type\":\"uint8\"}],\"name\":\"isValidHashType\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"userID\",\"type\":\"bytes20\"}],\"name\":\"UserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"userID\",\"type\":\"bytes20\"},{\"indexed\":true,\"name\":\"hashType\",\"type\":\"uint8\"}],\"name\":\"PubKeyHashAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hashType\",\"type\":\"uint8\"}],\"name\":\"PubKeyHashTypeAdded\",\"type\":\"event\"}]","ContractName":"PubKeyTrust","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d424aa35a17d3e3afbb907b5db4f17448173ec2c095bdc536b69aca03bfd2e24"}]}