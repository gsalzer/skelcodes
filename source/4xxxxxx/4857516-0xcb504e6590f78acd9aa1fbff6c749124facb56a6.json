{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract KryptoArmy {\r\n\r\n    address ceoAddress = 0x46d9112533ef677059c430E515775e358888e38b;\r\n    address cfoAddress = 0x23a49A9930f5b562c6B1096C3e6b5BEc133E8B2E;\r\n\r\n    modifier onlyCeo() {\r\n        require (msg.sender == ceoAddress);\r\n        _;\r\n    }\r\n\r\n    // Struct for Army\r\n    struct Army {\r\n        string name;            // The name of the army (invented by the user)\r\n        string idArmy;          // The id of the army (USA for United States)\r\n        uint experiencePoints;  // The experience points of the army, we will use this to handle\r\n        uint256 price;          // The cost of the Army in Wei (1 ETH = 1000000000000000000 Wei) \r\n        uint attackBonus;       // The attack bonus for the soldiers (from 0 to 10)\r\n        uint defenseBonus;      // The defense bonus for the soldiers (from 0 to 10)\r\n        bool isForSale;         // User is selling this army, it can be purchase on the marketplace\r\n        address ownerAddress;   // The address of the owner\r\n        uint soldiersCount;     // The count of all the soldiers in this army\r\n    } \r\n    Army[] armies;\r\n    \r\n    // Struct for Battles\r\n    struct Battle {\r\n        uint idArmyAttacking;   // The id of the army attacking\r\n        uint idArmyDefensing;   // The id of the army defensing\r\n        uint idArmyVictorious;  // The id of the winning army\r\n    } \r\n\r\n    Battle[] battles;\r\n\r\n    // Mapping army\r\n    mapping (address => uint) public ownerToArmy;       // Which army does this address own\r\n    mapping (address => uint) public ownerArmyCount;    // How many armies own this address?\r\n\r\n    // Mapping weapons to army\r\n    mapping (uint => uint) public armyDronesCount;\r\n    mapping (uint => uint) public armyPlanesCount;\r\n    mapping (uint => uint) public armyHelicoptersCount;\r\n    mapping (uint => uint) public armyTanksCount;\r\n    mapping (uint => uint) public armyAircraftCarriersCount;\r\n    mapping (uint => uint) public armySubmarinesCount;\r\n    mapping (uint => uint) public armySatelitesCount;\r\n\r\n    // Mapping battles\r\n    mapping (uint => uint) public armyCountBattlesWon;\r\n    mapping (uint => uint) public armyCountBattlesLost;\r\n\r\n    // This function creates a new army and saves it in the array with its parameters\r\n    function _createArmy(string _name, string _idArmy, uint _price, uint _attackBonus, uint _defenseBonus) public onlyCeo {\r\n\r\n        // We add the new army to the list and save the id in a variable \r\n        armies.push(Army(_name, _idArmy, 0, _price, _attackBonus, _defenseBonus, true, address(this), 0));\r\n    }\r\n\r\n    // We use this function to purchase an army with Metamask\r\n    function purchaseArmy(uint _armyId) public payable {\r\n        // We verify that the value paid is equal to the cost of the army\r\n        require(msg.value == armies[_armyId].price);\r\n        require(msg.value > 0);\r\n        \r\n        // We check if this army is owned by another user\r\n        if(armies[_armyId].ownerAddress != address(this)) {\r\n            uint CommissionOwnerValue = msg.value - (msg.value / 10);\r\n            armies[_armyId].ownerAddress.transfer(CommissionOwnerValue);\r\n        }\r\n\r\n        // We modify the ownership of the army\r\n        _ownershipArmy(_armyId);\r\n    }\r\n\r\n    // Function to purchase a soldier\r\n    function purchaseSoldiers(uint _armyId, uint _countSoldiers) public payable {\r\n        // Check that message value > 0\r\n        require(msg.value > 0);\r\n        uint256 msgValue = msg.value;\r\n\r\n        if(msgValue == 1000000000000000 && _countSoldiers == 1) {\r\n            // Increment soldiers count in army\r\n            armies[_armyId].soldiersCount = armies[_armyId].soldiersCount + _countSoldiers;\r\n        } else if(msgValue == 8000000000000000 && _countSoldiers == 10) {\r\n            // Increment soldiers count in army\r\n            armies[_armyId].soldiersCount = armies[_armyId].soldiersCount + _countSoldiers;\r\n        } else if(msgValue == 65000000000000000 && _countSoldiers == 100) {\r\n            // Increment soldiers count in army\r\n            armies[_armyId].soldiersCount = armies[_armyId].soldiersCount + _countSoldiers;\r\n        } else if(msgValue == 500000000000000000 && _countSoldiers == 1000) {\r\n            // Increment soldiers count in army\r\n            armies[_armyId].soldiersCount = armies[_armyId].soldiersCount + _countSoldiers;\r\n        }\r\n    }\r\n\r\n    // Payable function to purchase weapons\r\n    function purchaseWeapons(uint _armyId, uint _weaponId, uint _bonusAttack, uint _bonusDefense ) public payable {\r\n        // Check that message value > 0\r\n        uint isValid = 0;\r\n        uint256 msgValue = msg.value;\r\n\r\n        if(msgValue == 10000000000000000 && _weaponId == 0) {\r\n            armyDronesCount[_armyId]++;\r\n            isValid = 1;\r\n        } else if(msgValue == 25000000000000000 && _weaponId == 1) {\r\n             armyPlanesCount[_armyId]++;\r\n            isValid = 1;\r\n        } else if(msgValue == 25000000000000000 && _weaponId == 2) {\r\n            armyHelicoptersCount[_armyId]++;\r\n            isValid = 1;\r\n        } else if(msgValue == 45000000000000000 && _weaponId == 3) {\r\n            armyTanksCount[_armyId]++;\r\n            isValid = 1;\r\n        } else if(msgValue == 100000000000000000 && _weaponId == 4) {\r\n            armyAircraftCarriersCount[_armyId]++;\r\n            isValid = 1;\r\n        } else if(msgValue == 100000000000000000 && _weaponId == 5) {\r\n            armySubmarinesCount[_armyId]++;\r\n            isValid = 1;\r\n        } else if(msgValue == 120000000000000000 && _weaponId == 6) {\r\n            armySatelitesCount[_armyId]++;\r\n            isValid = 1;\r\n        } \r\n\r\n        // We check if the data has been verified as valid\r\n        if(isValid == 1) {\r\n            armies[_armyId].attackBonus = armies[_armyId].attackBonus + _bonusAttack;\r\n            armies[_armyId].defenseBonus = armies[_armyId].defenseBonus + _bonusDefense;\r\n        }\r\n    }\r\n\r\n    // We use this function to affect an army to an address (when someone purchase an army)\r\n    function _ownershipArmy(uint armyId) private {\r\n\r\n        // We check if the sender already own an army\r\n        require (ownerArmyCount[msg.sender] == 0);\r\n\r\n        // If this army has alreay been purchased we verify that the owner put it on sale\r\n        require(armies[armyId].isForSale == true);\r\n        \r\n        // We check one more time that the price paid is the price of the army\r\n        require(armies[armyId].price == msg.value);\r\n\r\n        // We decrement the army count for the previous owner (in case a user is selling army on marketplace)\r\n        ownerArmyCount[armies[armyId].ownerAddress]--;\r\n        \r\n        // We set the new army owner\r\n        armies[armyId].ownerAddress = msg.sender;\r\n        ownerToArmy[msg.sender] = armyId;\r\n\r\n        // We increment the army count for this address\r\n        ownerArmyCount[msg.sender]++;\r\n\r\n        // Send event for new ownership\r\n        armies[armyId].isForSale = false;\r\n    }\r\n\r\n    // We use this function to start a new battle\r\n    function startNewBattle(uint _idArmyAttacking, uint _idArmyDefensing, uint _randomIndicatorAttack, uint _randomIndicatorDefense) public returns(uint) {\r\n\r\n        // We verify that the army attacking is the army of msg.sender\r\n        require (armies[_idArmyAttacking].ownerAddress == msg.sender);\r\n\r\n        // Get details for army attacking\r\n        uint ScoreAttack = armies[_idArmyAttacking].attackBonus * (armies[_idArmyAttacking].soldiersCount/3) + armies[_idArmyAttacking].soldiersCount  + _randomIndicatorAttack; \r\n\r\n        // Get details for army defending\r\n        uint ScoreDefense = armies[_idArmyAttacking].defenseBonus * (armies[_idArmyDefensing].soldiersCount/2) + armies[_idArmyDefensing].soldiersCount + _randomIndicatorDefense; \r\n\r\n        uint VictoriousArmy;\r\n        uint ExperiencePointsGained;\r\n        if(ScoreDefense >= ScoreAttack) {\r\n            VictoriousArmy = _idArmyDefensing;\r\n            ExperiencePointsGained = armies[_idArmyAttacking].attackBonus + 2;\r\n            armies[_idArmyDefensing].experiencePoints = armies[_idArmyDefensing].experiencePoints + ExperiencePointsGained;\r\n\r\n            // Increment mapping battles won\r\n            armyCountBattlesWon[_idArmyDefensing]++;\r\n            armyCountBattlesLost[_idArmyAttacking]++;\r\n        } else {\r\n            VictoriousArmy = _idArmyAttacking;\r\n            ExperiencePointsGained = armies[_idArmyDefensing].defenseBonus + 2;\r\n            armies[_idArmyAttacking].experiencePoints = armies[_idArmyAttacking].experiencePoints + ExperiencePointsGained;\r\n\r\n            // Increment mapping battles won\r\n            armyCountBattlesWon[_idArmyAttacking]++;\r\n            armyCountBattlesLost[_idArmyDefensing]++;\r\n        }\r\n        \r\n        // We add the new battle to the blockchain and save its id in a variable \r\n        battles.push(Battle(_idArmyAttacking, _idArmyDefensing, VictoriousArmy));  \r\n        \r\n        // Send event\r\n        return (VictoriousArmy);\r\n    }\r\n\r\n    // Owner can sell army\r\n    function ownerSellArmy(uint _armyId, uint256 _amount) public {\r\n        // We close the function if the user calling this function doesn't own the army\r\n        require (armies[_armyId].ownerAddress == msg.sender);\r\n        require (_amount > 0);\r\n        require (armies[_armyId].isForSale == false);\r\n\r\n        armies[_armyId].isForSale = true;\r\n        armies[_armyId].price = _amount;\r\n    }\r\n    \r\n    // Owner remove army from marketplace\r\n    function ownerCancelArmyMarketplace(uint _armyId) public {\r\n        require (armies[_armyId].ownerAddress == msg.sender);\r\n        require (armies[_armyId].isForSale == true);\r\n        armies[_armyId].isForSale = false;\r\n    }\r\n\r\n    // Function to return all the value of an army\r\n    function getArmyFullData(uint armyId) public view returns(string, string, uint, uint256, uint, uint, bool) {\r\n        string storage ArmyName = armies[armyId].name;\r\n        string storage ArmyId = armies[armyId].idArmy;\r\n        uint ArmyExperiencePoints = armies[armyId].experiencePoints;\r\n        uint256 ArmyPrice = armies[armyId].price;\r\n        uint ArmyAttack = armies[armyId].attackBonus;\r\n        uint ArmyDefense = armies[armyId].defenseBonus;\r\n        bool ArmyIsForSale = armies[armyId].isForSale;\r\n        return (ArmyName, ArmyId, ArmyExperiencePoints, ArmyPrice, ArmyAttack, ArmyDefense, ArmyIsForSale);\r\n    }\r\n\r\n    // Function to return the owner of the army\r\n    function getArmyOwner(uint armyId) public view returns(address, bool) {\r\n        return (armies[armyId].ownerAddress, armies[armyId].isForSale);\r\n    }\r\n\r\n    // Function to return the owner of the army\r\n    function getSenderArmyDetails() public view returns(uint, string) {\r\n        uint ArmyId = ownerToArmy[msg.sender];\r\n        string storage ArmyName = armies[ArmyId].name;\r\n        return (ArmyId, ArmyName);\r\n    }\r\n    \r\n    // Function to return the owner army count\r\n    function getSenderArmyCount() public view returns(uint) {\r\n        uint ArmiesCount = ownerArmyCount[msg.sender];\r\n        return (ArmiesCount);\r\n    }\r\n\r\n    // Function to return the soldiers count of an army\r\n    function getArmySoldiersCount(uint armyId) public view returns(uint) {\r\n        uint SoldiersCount = armies[armyId].soldiersCount;\r\n        return (SoldiersCount);\r\n    }\r\n\r\n    // Return an array with the weapons of the army\r\n    function getWeaponsArmy1(uint armyId) public view returns(uint, uint, uint, uint)  {\r\n        uint CountDrones = armyDronesCount[armyId];\r\n        uint CountPlanes = armyPlanesCount[armyId];\r\n        uint CountHelicopters = armyHelicoptersCount[armyId];\r\n        uint CountTanks = armyTanksCount[armyId];\r\n        return (CountDrones, CountPlanes, CountHelicopters, CountTanks);\r\n    }\r\n    function getWeaponsArmy2(uint armyId) public view returns(uint, uint, uint)  {\r\n        uint CountAircraftCarriers = armyAircraftCarriersCount[armyId];\r\n        uint CountSubmarines = armySubmarinesCount[armyId];\r\n        uint CountSatelites = armySatelitesCount[armyId];\r\n        return (CountAircraftCarriers, CountSubmarines, CountSatelites);\r\n    }\r\n\r\n    // Retrieve count battles won\r\n    function getArmyBattles(uint _armyId) public view returns(uint, uint) {\r\n        return (armyCountBattlesWon[_armyId], armyCountBattlesLost[_armyId]);\r\n    }\r\n    \r\n    // Retrieve the details of a battle\r\n    function getDetailsBattles(uint battleId) public view returns(uint, uint, uint, string, string) {\r\n        return (battles[battleId].idArmyAttacking, battles[battleId].idArmyDefensing, battles[battleId].idArmyVictorious, armies[battles[battleId].idArmyAttacking].idArmy, armies[battles[battleId].idArmyDefensing].idArmy);\r\n    }\r\n    \r\n    // Get battles count\r\n    function getBattlesCount() public view returns(uint) {\r\n        return (battles.length);\r\n    }\r\n\r\n    // To withdraw fund from this contract\r\n    function withdraw(uint amount, uint who) public onlyCeo returns(bool) {\r\n        require(amount <= this.balance);\r\n        if(who == 0) {\r\n            ceoAddress.transfer(amount);\r\n        } else {\r\n            cfoAddress.transfer(amount);\r\n        }\r\n        \r\n        return true;\r\n    }\r\n    \r\n    // Initial function to create the 100 armies with their attributes\r\n    function KryptoArmy() public onlyCeo {\r\n\r\n      // 1. USA\r\n        _createArmy(\"United States\", \"USA\", 550000000000000000, 8, 9);\r\n\r\n        // 2. North Korea\r\n        _createArmy(\"North Korea\", \"NK\", 500000000000000000, 10, 5);\r\n\r\n        // 3. Russia\r\n        _createArmy(\"Russia\", \"RUS\", 450000000000000000, 8, 7);\r\n\r\n        // 4. China\r\n        _createArmy(\"China\", \"CHN\", 450000000000000000, 7, 8);\r\n\r\n        // 5. Japan\r\n        _createArmy(\"Japan\", \"JPN\", 420000000000000000, 7, 7);\r\n\r\n        // 6. France\r\n        _createArmy(\"France\", \"FRA\", 400000000000000000, 6, 8);\r\n\r\n        // 7. Germany\r\n        _createArmy(\"Germany\", \"GER\", 400000000000000000, 7, 6);\r\n\r\n        // 8. India\r\n        _createArmy(\"India\", \"IND\", 400000000000000000, 7, 6);\r\n\r\n        // 9. United Kingdom\r\n        _createArmy(\"United Kingdom\", \"UK\", 350000000000000000, 5, 7);\r\n\r\n        // 10. South Korea\r\n        _createArmy(\"South Korea\", \"SK\", 350000000000000000, 6, 6);\r\n\r\n        // 11. Turkey\r\n        _createArmy(\"Turkey\", \"TUR\", 300000000000000000, 7, 4);\r\n\r\n        // 12. Italy\r\n        //_createArmy(\"Italy\", \"ITA\", 280000000000000000, 5, 5);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_armyId\",\"type\":\"uint256\"},{\"name\":\"_weaponId\",\"type\":\"uint256\"},{\"name\":\"_bonusAttack\",\"type\":\"uint256\"},{\"name\":\"_bonusDefense\",\"type\":\"uint256\"}],\"name\":\"purchaseWeapons\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"armyId\",\"type\":\"uint256\"}],\"name\":\"getArmySoldiersCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_armyId\",\"type\":\"uint256\"}],\"name\":\"purchaseArmy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"armyCountBattlesLost\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"armyTanksCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSenderArmyDetails\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"who\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_idArmy\",\"type\":\"string\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_attackBonus\",\"type\":\"uint256\"},{\"name\":\"_defenseBonus\",\"type\":\"uint256\"}],\"name\":\"_createArmy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSenderArmyCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerToArmy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"battleId\",\"type\":\"uint256\"}],\"name\":\"getDetailsBattles\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"armyDronesCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"armyId\",\"type\":\"uint256\"}],\"name\":\"getWeaponsArmy2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"armyAircraftCarriersCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"armyPlanesCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBattlesCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"armyCountBattlesWon\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"armyId\",\"type\":\"uint256\"}],\"name\":\"getWeaponsArmy1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"armyId\",\"type\":\"uint256\"}],\"name\":\"getArmyFullData\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_idArmyAttacking\",\"type\":\"uint256\"},{\"name\":\"_idArmyDefensing\",\"type\":\"uint256\"},{\"name\":\"_randomIndicatorAttack\",\"type\":\"uint256\"},{\"name\":\"_randomIndicatorDefense\",\"type\":\"uint256\"}],\"name\":\"startNewBattle\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_armyId\",\"type\":\"uint256\"},{\"name\":\"_countSoldiers\",\"type\":\"uint256\"}],\"name\":\"purchaseSoldiers\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"armyId\",\"type\":\"uint256\"}],\"name\":\"getArmyOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"armySatelitesCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"armySubmarinesCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerArmyCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_armyId\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ownerSellArmy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_armyId\",\"type\":\"uint256\"}],\"name\":\"ownerCancelArmyMarketplace\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_armyId\",\"type\":\"uint256\"}],\"name\":\"getArmyBattles\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"armyHelicoptersCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"KryptoArmy","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cb16c6f47bfbe62d0951b7e33d96517fb4fcca5df60213da2b98702364997ea1"}]}