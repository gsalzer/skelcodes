{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\n\r\ncontract OsherCrowdsaleCore {\r\n    \r\n    function crowdsale( address _address )payable;\r\n    function precrowdsale( address _address )payable;\r\n}\r\n\r\ncontract OsherCrowdsale {\r\n    \r\n    address public owner;\r\n    \r\n    \r\n   \r\n    bool public crowdSaleStarted;\r\n    bool public crowdSaleClosed;\r\n    bool public  crowdSalePause;\r\n    \r\n    uint public crowdSaleStartTime;\r\n    uint public preicostarted;\r\n    \r\n    uint public deadline;\r\n    \r\n    address public CoreAddress;\r\n    OsherCrowdsaleCore  core;\r\n    \r\n    \r\n    \r\n    \r\n    modifier onlyOwner() {\r\n        if (msg.sender != owner) {\r\n            throw;\r\n        }\r\n        _;\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    function OsherCrowdsale(){\r\n        \r\n        crowdSaleStarted = false;\r\n        crowdSaleClosed = false;\r\n        crowdSalePause = false;\r\n        preicostarted = now;\r\n        owner = msg.sender;\r\n        \r\n    }\r\n    \r\n    // fallback function to receive all incoming ether funds and then forwarded to the DragonCrowdsaleCore contract \r\n    function () payable {\r\n        \r\n        require ( crowdSaleClosed == false && crowdSalePause == false  );\r\n        \r\n        if ( crowdSaleStarted ) { \r\n            require ( now < deadline );\r\n            core.crowdsale.value( msg.value )( msg.sender); \r\n            \r\n        } \r\n        else\r\n        { core.precrowdsale.value( msg.value )( msg.sender); }\r\n       \r\n    }\r\n    \r\n    \r\n   \r\n    // Start this to initiate crowdsale - will run for 60 days\r\n    function startCrowdsale() onlyOwner  {\r\n        \r\n        crowdSaleStarted = true;\r\n        crowdSaleStartTime = now;\r\n        deadline = now + 60 days;\r\n       \r\n                \r\n    }\r\n\r\n    //terminates the crowdsale\r\n    function endCrowdsale() onlyOwner  {\r\n        \r\n        \r\n        crowdSaleClosed = true;\r\n    }\r\n\r\n    //pauses the crowdsale\r\n    function pauseCrowdsale() onlyOwner {\r\n        \r\n        crowdSalePause = true;\r\n        \r\n        \r\n    }\r\n\r\n    //unpauses the crowdsale\r\n    function unpauseCrowdsale() onlyOwner {\r\n        \r\n        crowdSalePause = false;\r\n        \r\n        \r\n    }\r\n    \r\n    // set the dragon crowdsalecore contract\r\n    function setCore( address _core ) onlyOwner {\r\n        \r\n        require ( _core != 0x00 );\r\n        CoreAddress = _core;\r\n        core = OsherCrowdsaleCore( _core );\r\n        \r\n    }\r\n    \r\n    function transferOwnership( address _address ) onlyOwner {\r\n        \r\n        require ( _address!= 0x00 );\r\n        owner =  _address ;\r\n        \r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"endCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preicostarted\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdSaleStarted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpauseCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdSaleClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_core\",\"type\":\"address\"}],\"name\":\"setCore\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdSalePause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pauseCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdSaleStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CoreAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"OsherCrowdsale","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://31e7417ffb6b5353c885d80b5944dd7b48cd0db3d0bf1f846227789b53f8b1a0"}]}