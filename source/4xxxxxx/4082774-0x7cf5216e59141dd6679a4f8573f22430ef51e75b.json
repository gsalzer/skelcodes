{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract SandwichShop\r\n{\r\n    address owner;\r\n\r\n    modifier onlyOwner()\r\n    {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    struct Sandwich\r\n    {\r\n        uint sandwichID;\r\n        string sandwichName;\r\n        string sandwichDesc;\r\n        string calories;\r\n        uint price;\r\n        uint quantity;\r\n    }\r\n\r\n    struct OrderedSandwich\r\n    {\r\n        uint sandwichIdNumber;\r\n        string notes;\r\n        uint price;\r\n    }\r\n\r\n    event NewSandwichTicket( string _name, address _orderer, string _sandName, string _sandChanges );\r\n    event testSandwichOrder( uint _sandwichId, address _addr );\r\n\r\n    Sandwich[5] shopSandwich;\r\n    mapping( address => OrderedSandwich[] ) public cart;\r\n    mapping( address => uint ) public subtotal;\r\n\r\n    function SandwichShop() public\r\n    {\r\n        owner = msg.sender;\r\n\r\n        shopSandwich[0].sandwichID = 0;\r\n        shopSandwich[0].sandwichName = \"100: Ham & Swiss\";\r\n        shopSandwich[0].sandwichDesc = \"Ham Swiss Mustard Rye\";\r\n        shopSandwich[0].calories = \"450 calories\";\r\n        shopSandwich[0].price = 40 finney;\r\n        shopSandwich[0].quantity = 200;\r\n\r\n        shopSandwich[1].sandwichID = 1;\r\n        shopSandwich[1].sandwichName = \"101: Turkey & Pepperjack\";\r\n        shopSandwich[1].sandwichDesc = \"Turkey Pepperjack Mayo White Bread\";\r\n        shopSandwich[1].calories = \"500 calories\";\r\n        shopSandwich[1].price = 45 finney;\r\n        shopSandwich[1].quantity = 200;\r\n\r\n        shopSandwich[2].sandwichID = 2;\r\n        shopSandwich[2].sandwichName = \"102: Roast Beef & American\";\r\n        shopSandwich[2].sandwichDesc = \"Roast Beef Havarti Horseradish White Bread\";\r\n        shopSandwich[2].calories = \"600 calories\";\r\n        shopSandwich[2].price = 50 finney;\r\n        shopSandwich[2].quantity = 200;\r\n\r\n        shopSandwich[3].sandwichID = 3;\r\n        shopSandwich[3].sandwichName = \"103: Reuben\";\r\n        shopSandwich[3].sandwichDesc = \"Corned Beef Sauerkraut Swiss Rye\";\r\n        shopSandwich[3].calories = \"550 calories\";\r\n        shopSandwich[3].price = 50 finney;\r\n        shopSandwich[3].quantity = 200;\r\n\r\n        shopSandwich[4].sandwichID = 4;\r\n        shopSandwich[4].sandwichName = \"104: Italian\";\r\n        shopSandwich[4].sandwichDesc = \"Salami Peppers Provolone Oil Vinegar White\";\r\n        shopSandwich[4].calories = \"500 calories\";\r\n        shopSandwich[4].price = 40 finney;\r\n        shopSandwich[4].quantity = 200;\r\n    }\r\n\r\n    function getMenu() constant returns (string, string, string, string, string)\r\n    {\r\n        return (shopSandwich[0].sandwichName, shopSandwich[1].sandwichName,\r\n                shopSandwich[2].sandwichName, shopSandwich[3].sandwichName,\r\n                shopSandwich[4].sandwichName );\r\n    }\r\n\r\n    function getSandwichInfo(uint _sandwich) constant returns (string, string, string, uint, uint)\r\n    {\r\n        if( _sandwich > 4 )\r\n        {\r\n            return ( \"wrong ID\", \"wrong ID\", \"zero\", 0, 0);\r\n        }\r\n        else\r\n        {\r\n            return (shopSandwich[_sandwich].sandwichName, shopSandwich[_sandwich].sandwichDesc,\r\n                shopSandwich[_sandwich].calories, shopSandwich[_sandwich].price, shopSandwich[_sandwich].quantity);\r\n        }\r\n    }\r\n\r\n    function decrementQuantity(uint _sandnum) private\r\n    {\r\n        shopSandwich[_sandnum].quantity--;\r\n    }\r\n\r\n    function setQuantity(uint _sandnum, uint _quantity) onlyOwner\r\n    {\r\n        shopSandwich[_sandnum].quantity = _quantity;\r\n    }\r\n\r\n    function addToCart(uint _sandwichID, string _notes) returns (uint)\r\n    {\r\n        if( shopSandwich[_sandwichID].quantity > 0 )\r\n        {\r\n            OrderedSandwich memory newOrder;\r\n            newOrder.sandwichIdNumber = _sandwichID;\r\n            newOrder.notes = _notes;\r\n            newOrder.price = shopSandwich[_sandwichID].price;\r\n            subtotal[msg.sender] += newOrder.price;\r\n            testSandwichOrder(newOrder.sandwichIdNumber, msg.sender);\r\n\r\n            return cart[msg.sender].push(newOrder);\r\n        }\r\n        else\r\n        {\r\n            return cart[msg.sender].length;\r\n        }\r\n    }\r\n\r\n\r\n    function getCartLength(address _curious) constant returns (uint)\r\n    {\r\n        return cart[_curious].length;\r\n    }\r\n\r\n    function getCartItemInfo(address _curious, uint _slot) constant returns (string)\r\n    {\r\n        return cart[_curious][_slot].notes;\r\n    }\r\n\r\n    function emptyCart() public\r\n    {\r\n        delete cart[msg.sender];\r\n        subtotal[msg.sender] = 0;\r\n    }\r\n\r\n    function getCartSubtotal(address _curious) constant returns (uint)\r\n    {\r\n        return subtotal[_curious];\r\n    }\r\n\r\n    function checkoutCart(string _firstname) payable returns (uint)\r\n    {\r\n        if( msg.value < subtotal[msg.sender] ){ revert(); }\r\n\r\n        for( uint x = 0; x < cart[msg.sender].length; x++ )\r\n        {\r\n            if( shopSandwich[ cart[msg.sender][x].sandwichIdNumber ].quantity > 0 )\r\n            {\r\n                NewSandwichTicket( _firstname, msg.sender, \r\n                                   shopSandwich[ cart[msg.sender][x].sandwichIdNumber ].sandwichName,\r\n                                   cart[msg.sender][x].notes );\r\n                decrementQuantity( cart[msg.sender][x].sandwichIdNumber );\r\n            }\r\n            else\r\n            {\r\n                revert();\r\n            }\r\n        }\r\n        subtotal[msg.sender] = 0;\r\n        delete cart[msg.sender];\r\n    }\r\n\r\n    function transferFromRegister(address addr, uint amount) onlyOwner\r\n    {\r\n        if( amount <= this.balance )\r\n        {\r\n            addr.transfer(amount);\r\n        }\r\n    }\r\n\r\n    function kill() onlyOwner\r\n    {\r\n        selfdestruct(owner);\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_sandwichID\",\"type\":\"uint256\"},{\"name\":\"_notes\",\"type\":\"string\"}],\"name\":\"addToCart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_curious\",\"type\":\"address\"}],\"name\":\"getCartSubtotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_sandwich\",\"type\":\"uint256\"}],\"name\":\"getSandwichInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_curious\",\"type\":\"address\"},{\"name\":\"_slot\",\"type\":\"uint256\"}],\"name\":\"getCartItemInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMenu\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sandnum\",\"type\":\"uint256\"},{\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"setQuantity\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"emptyCart\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cart\",\"outputs\":[{\"name\":\"sandwichIdNumber\",\"type\":\"uint256\"},{\"name\":\"notes\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFromRegister\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_firstname\",\"type\":\"string\"}],\"name\":\"checkoutCart\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_curious\",\"type\":\"address\"}],\"name\":\"getCartLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"subtotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_orderer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_sandName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_sandChanges\",\"type\":\"string\"}],\"name\":\"NewSandwichTicket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_sandwichId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"testSandwichOrder\",\"type\":\"event\"}]","ContractName":"SandwichShop","CompilerVersion":"v0.4.12+commit.194ff033","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://895708dc903d40e67ad122e3289c4fc8a3d52d118a116bfa8a9977fd2bd48bc1"}]}