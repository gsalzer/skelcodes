{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract EtherealId{\r\n     string public constant CONTRACT_NAME = \"EtherealId\";\r\n    string public constant CONTRACT_VERSION = \"B\";\r\n    mapping (address => bool) private IsAuthority;\r\n\taddress private Creator;\r\n\taddress private Owner;\r\n    bool private Active;\r\n    \r\n\tmapping(bytes32 => bool) private Proof;\r\n\tmapping (address => bool) private BlockedAddresses;\r\n\tfunction SubmitProofOfOwnership(bytes32 proof) public onlyOwner{\r\n\t\tProof[proof] = true;\r\n\t}\t\r\n\tfunction RemoveProofOfOwnership(bytes32 proof) public ownerOrAuthority\t{\r\n\t\tdelete Proof[proof];\r\n\t}\t\r\n\tfunction CheckProofOfOwnership(bytes32 proof) view public returns(bool) \t{\r\n\t\treturn Proof[proof];\r\n\t}\r\n\tfunction BlockAddress(address addr) public ownerOrAuthority\t{\r\n\t\tBlockedAddresses[addr] = true;\r\n\t}\r\n\tfunction UnBlockAddress(address addr) public ownerOrAuthority\t{\r\n\t\tdelete BlockedAddresses[addr];\r\n\t}\r\n\tfunction IsBlocked(address addr) public view returns(bool){\r\n\t\treturn BlockedAddresses[addr];\r\n\t}\r\n\t\t\r\n    function Deactivate() public ownerOrAuthority    {\r\n        require(IsAuthority[msg.sender] || msg.sender == Owner);\r\n        Active = false;\r\n        selfdestruct(Owner);\r\n    }\r\n    function IsActive() public view returns(bool)    {\r\n        return Active;\r\n    }\r\n    mapping(bytes32 => bool) private VerifiedInfoHashes;//key is hash, true if verified\r\n    \r\n    event Added(bytes32 indexed hash);\r\n    function AddVerifiedInfo( bytes32 hash) public onlyAuthority    {\r\n        VerifiedInfoHashes[hash] = true;\r\n        Added(hash);\r\n    }\r\n    \r\n    event Removed(bytes32 indexed hash);\r\n    function RemoveVerifiedInfo(bytes32 hash) public onlyAuthority    {\r\n        delete VerifiedInfoHashes[hash];\r\n        Removed(hash);\r\n    }\r\n    \r\n    function EtherealId(address owner) public    {\r\n        IsAuthority[msg.sender] = true;\r\n        Active = true;\r\n\t\tCreator = msg.sender;\r\n\t\tOwner = owner;\r\n    }\r\n    modifier onlyOwner(){\r\n        require(msg.sender == Owner);\r\n        _;\r\n    }\r\n    modifier onlyAuthority(){\r\n        require(IsAuthority[msg.sender]);\r\n        _;\r\n    }\r\n\tmodifier ownerOrAuthority()\t{\r\n        require(msg.sender == Owner ||  IsAuthority[msg.sender]);\r\n        _;\r\n\t}\r\n\tmodifier notBlocked()\t{\r\n\t\trequire(!BlockedAddresses[msg.sender]);\r\n        _;\r\n\t}\r\n    function OwnerAddress() public view notBlocked returns(address)     {\r\n        return Owner;\r\n    }\r\n    function IsAuthorityAddress(address addr) public view notBlocked returns(bool)     {\r\n        return IsAuthority[addr];\r\n    }\r\n    function AddAuthorityAddress(address addr) public onlyOwner    {\r\n        IsAuthority[addr] = true;\r\n    }\r\n    \r\n    function RemoveAuthorityAddress(address addr) public onlyOwner    {\r\n\t\trequire(addr != Creator);\r\n        delete IsAuthority[addr];\r\n    }\r\n        \r\n    function VerifiedInfoHash(bytes32 hash) public view notBlocked returns(bool)     {\r\n        return VerifiedInfoHashes[hash];\r\n    }\r\n    \r\n\t//this is the fallback\r\n    event RecievedEth(address indexed _from, uint256 _value);\r\n\tfunction () payable public {\r\n\t\tRecievedEth(msg.sender, msg.value);\t\t\r\n\t}\r\n\t\r\n\tevent TransferedEth(address indexed _to, uint256 _value);\r\n\tfunction TransferEth(address _to, uint256 _value) public onlyOwner{\r\n\t    require(this.balance >= _value);\r\n\t    \r\n        if(_value >0)\r\n\t\t{\r\n\t\t\t_to.transfer(_value);\r\n\t\t\tTransferedEth(_to, _value);\r\n\t\t}   \r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"IsActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_VERSION\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"proof\",\"type\":\"bytes32\"}],\"name\":\"CheckProofOfOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRACT_NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"AddVerifiedInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"UnBlockAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"RemoveVerifiedInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OwnerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"AddAuthorityAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"IsAuthorityAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"proof\",\"type\":\"bytes32\"}],\"name\":\"RemoveProofOfOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Deactivate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"BlockAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"VerifiedInfoHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"proof\",\"type\":\"bytes32\"}],\"name\":\"SubmitProofOfOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"IsBlocked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"RemoveAuthorityAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"Added\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"Removed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"RecievedEth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferedEth\",\"type\":\"event\"}]","ContractName":"EtherealId","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000222316e1ade8c200c14dec921bc48f07713c0d94","Library":"","SwarmSource":"bzzr://a9aafbb4ae3e9d52c292271cabbc5f9514af85f21f245abb3f424be5bb39d360"}]}