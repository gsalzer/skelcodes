{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\ncontract KyberContirbutorWhitelist is Ownable {\r\n    mapping(address=>uint) addressCap;\r\n    \r\n    function KyberContirbutorWhitelist() {}\r\n    \r\n    event ListAddress( address _user, uint _cap, uint _time );\r\n    \r\n    // Owner can delist by setting cap = 0.\r\n    // Onwer can also change it at any time\r\n    function listAddress( address _user, uint _cap ) onlyOwner {\r\n        addressCap[_user] = _cap;\r\n        ListAddress( _user, _cap, now );\r\n    }\r\n    \r\n    function getCap( address _user ) constant returns(uint) {\r\n        return addressCap[_user];\r\n    }\r\n}\r\n\r\ncontract KyberContirbutorWhitelistOptimized is KyberContirbutorWhitelist {\r\n    uint public slackUsersCap = 7;\r\n    \r\n    function KyberContirbutorWhitelistOptimized() {}\r\n    \r\n    function listAddresses( address[] _users, uint[] _cap ) onlyOwner {\r\n        require(_users.length == _cap.length );\r\n        for( uint i = 0 ; i < _users.length ; i++ ) {\r\n            listAddress( _users[i], _cap[i] );   \r\n        }\r\n    }\r\n    \r\n    function setSlackUsersCap( uint _cap ) onlyOwner {\r\n        slackUsersCap = _cap;        \r\n    }\r\n    \r\n    function getCap( address _user ) constant returns(uint) {\r\n        uint cap = super.getCap(_user);\r\n        \r\n        if( cap == 1 ) return slackUsersCap;\r\n        else return cap;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_cap\",\"type\":\"uint256\"}],\"name\":\"listAddress\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"slackUsersCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_users\",\"type\":\"address[]\"},{\"name\":\"_cap\",\"type\":\"uint256[]\"}],\"name\":\"listAddresses\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cap\",\"type\":\"uint256\"}],\"name\":\"setSlackUsersCap\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_cap\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"ListAddress\",\"type\":\"event\"}]","ContractName":"KyberContirbutorWhitelistOptimized","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://979b7394bce4b889ff58bf599f0e9fd3bf550ac3baf22944e19869380e249ffe"}]}