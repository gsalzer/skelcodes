{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.10;\r\n\r\ncontract IERC20Token {\r\n    function totalSupply() public constant returns ( uint256 supply ) { supply; }\r\n    function balanceOf( address _owner ) public constant returns ( uint256 balance ) { _owner; balance; }\r\n    function allowance( address _owner, address _spender ) public constant returns ( uint256 remaining ) { _owner; _spender; remaining; }\r\n\r\n  function transfer( address _to, uint256 _value ) public returns ( bool success );\r\n  function transferFrom( address _from, address _to, uint256 _value ) public returns ( bool success );\r\n  function approve( address _spender, uint256 _value ) public returns ( bool success );\r\n}\r\ncontract RegaUtils {\r\n  modifier validAddress( address _address ) {\r\n    require( _address != 0x0 );\r\n    _;\r\n  }\r\n\r\n  // Overflow checked math\r\n  function safeAdd( uint256 x, uint256 y ) internal returns( uint256 ) {\r\n    uint256 z = x + y;\r\n    assert( z >= x );\r\n    return z;\r\n  }\r\n\r\n  function safeSub( uint256 x, uint256 y ) internal returns( uint256 ) {\r\n    assert( x >= y);\r\n    return x - y;\r\n  }\r\n}\r\ncontract ERC20Token is IERC20Token, RegaUtils {\r\n  uint256 public totalSupply = 0;\r\n  mapping( address => uint256 ) public balanceOf;\r\n  mapping( address => mapping( address => uint256 ) ) public allowance;\r\n\r\n  event Transfer( address indexed _from, address indexed _to, uint256 _value );\r\n  event Approval( address indexed _owner, address indexed _spender, uint256 _value );\r\n\r\n  function transfer( address _to, uint256 _value ) validAddress( _to )\r\n    returns( bool success )\r\n  {\r\n    balanceOf[ msg.sender ] = safeSub( balanceOf[ msg.sender ], _value );\r\n    balanceOf[ _to ] = safeAdd( balanceOf[ _to ], _value );\r\n    Transfer( msg.sender, _to, _value );\r\n    return true;\r\n  }\r\n\r\n  function transferFrom( address _from, address _to, uint256 _value ) validAddress( _from ) validAddress( _to )\r\n    returns( bool success )\r\n  {\r\n    allowance[ _from ][ msg.sender ] = safeSub( allowance[ _from ][ msg.sender ], _value );\r\n    balanceOf[ _from] = safeSub( balanceOf[_from], _value );\r\n    balanceOf[ _to] = safeAdd( balanceOf[_to], _value );\r\n    Transfer( _from, _to, _value );\r\n    return true;\r\n  }\r\n\r\n  function approve( address _spender, uint256 _value ) validAddress( _spender )\r\n    returns( bool success)\r\n  {\r\n    require( _value == 0 || allowance[ msg.sender ][ _spender ] == 0 );\r\n\r\n    allowance[ msg.sender ][ _spender ] = _value;\r\n    Approval( msg.sender, _spender, _value );\r\n    return true;\r\n  }\r\n\r\n}\r\ncontract RSTBase is ERC20Token {\r\n  address public board;\r\n  address public owner;\r\n\r\n  address public votingData;\r\n  address public tokenData;\r\n  address public feesData;\r\n\r\n  uint256 public reserve;\r\n  uint32  public crr;         // per cent\r\n  uint256 public weiForToken; // current rate\r\n  uint8   public totalAccounts;\r\n\r\n  modifier boardOnly() {\r\n    require(msg.sender == board);\r\n    _;\r\n  }\r\n}\r\ncontract TokenControllerBase is RSTBase {\r\n  function init() public;\r\n  function isSellOpen() public constant returns(bool);\r\n  function isBuyOpen() public constant returns(bool);\r\n  function sell(uint value) public;\r\n  function buy() public payable;\r\n  function addToReserve() public payable;\r\n}\r\n\r\ncontract VotingControllerBase is RSTBase {\r\n  function voteFor() public;\r\n  function voteAgainst() public;\r\n  function startVoting() public;\r\n  function stopVoting() public;\r\n  function getCurrentVotingDescription() public constant returns (bytes32 vd) ;\r\n}\r\n\r\ncontract FeesControllerBase is RSTBase {\r\n  function init() public;\r\n  function withdrawFee() public;\r\n  function calculateFee() public;\r\n  function addPayee( address payee ) public;\r\n  function removePayee( address payee ) public;\r\n  function setRepayment( ) payable public;\r\n}\r\ncontract RiskSharingToken is RSTBase {\r\n  string public constant version = \"0.1\";\r\n  string public constant name = \"REGA Risk Sharing Token\";\r\n  string public constant symbol = \"RST\";\r\n  uint8 public constant decimals = 10;\r\n\r\n  TokenControllerBase public tokenController;\r\n  VotingControllerBase public votingController;\r\n  FeesControllerBase public feesController;\r\n\r\n  modifier ownerOnly() {\r\n    require( msg.sender == owner );\r\n    _;\r\n  }\r\n\r\n  modifier boardOnly() {\r\n    require( msg.sender == board );\r\n    _;\r\n  }\r\n\r\n  modifier authorized() {\r\n    require( msg.sender == owner || msg.sender == board);\r\n    _;\r\n  }\r\n\r\n\r\n  function RiskSharingToken( address _board ) {\r\n    board = _board;\r\n    owner = msg.sender;\r\n    tokenController = TokenControllerBase(0);\r\n    votingController = VotingControllerBase(0);\r\n    weiForToken = uint(10)**(18-1-decimals); // 0.1 Ether\r\n    reserve = 0;\r\n    crr = 20;\r\n    totalAccounts = 0;\r\n  }\r\n\r\n  function() payable {\r\n\r\n  }\r\n\r\n  function setTokenController( TokenControllerBase tc, address _tokenData ) public boardOnly {\r\n    tokenController = tc;\r\n    if( _tokenData != address(0) )\r\n      tokenData = _tokenData;\r\n    if( tokenController != TokenControllerBase(0) )\r\n      if( !tokenController.delegatecall(bytes4(sha3(\"init()\"))) )\r\n        revert();\r\n  }\r\n\r\n// Voting\r\n  function setVotingController( VotingControllerBase vc ) public boardOnly {\r\n    votingController = vc;\r\n  }\r\n\r\n  function startVoting( bytes32 /*description*/ ) public boardOnly validAddress(votingController) {\r\n    if( !votingController.delegatecall(msg.data) )\r\n      revert();\r\n  }\r\n\r\n  function stopVoting() public boardOnly validAddress(votingController) {\r\n    if( !votingController.delegatecall(msg.data) )\r\n      revert();\r\n  }\r\n\r\n  function voteFor() public validAddress(votingController) {\r\n    if( !votingController.delegatecall(msg.data) )\r\n      revert();\r\n  }\r\n\r\n  function voteAgainst() public validAddress(votingController) {\r\n    if( !votingController.delegatecall(msg.data) )\r\n      revert();\r\n  }\r\n\r\n// Tokens operations\r\n  function buy() public payable validAddress(tokenController) {\r\n    if( !tokenController.delegatecall(msg.data) )\r\n      revert();\r\n  }\r\n\r\n  function sell( uint /*value*/ ) public validAddress(tokenController) {\r\n    if( !tokenController.delegatecall(msg.data) )\r\n      revert();\r\n  }\r\n\r\n  function addToReserve( ) public payable validAddress(tokenController) {\r\n    if( !tokenController.delegatecall(msg.data) )\r\n      revert();\r\n  }\r\n\r\n// some amount ma be not the reserve\r\n  function withdraw( uint256 amount ) public boardOnly {\r\n    require(safeSub(this.balance, amount) >= reserve);\r\n    board.transfer( amount );\r\n  }\r\n\r\n  function issueToken( address /*holder*/, uint256 /*amount*/ ) public authorized {\r\n    if( !tokenController.delegatecall(msg.data) )\r\n      revert();\r\n  }\r\n\r\n  function issueTokens( uint256[] /*data*/ ) public ownerOnly {\r\n    if( !tokenController.delegatecall(msg.data) )\r\n      revert();\r\n  }\r\n\r\n  // fees operations\r\n\r\n  function setFeesController( FeesControllerBase fc ) public boardOnly {\r\n    feesController = fc;\r\n    if( !feesController.delegatecall(bytes4(sha3(\"init()\"))) )\r\n      revert();\r\n  }\r\n\r\n  function withdrawFee() public validAddress(feesController) {\r\n      if( !feesController.delegatecall(msg.data) )\r\n        revert();\r\n  }\r\n\r\n  function calculateFee() public validAddress(feesController) {\r\n      if( !feesController.delegatecall(msg.data) )\r\n        revert();\r\n  }\r\n  function addPayee( address /*payee*/ ) public validAddress(feesController) {\r\n      if( !feesController.delegatecall(msg.data) )\r\n        revert();\r\n  }\r\n  function removePayee( address /*payee*/ ) public validAddress(feesController) {\r\n      if( !feesController.delegatecall(msg.data) )\r\n        revert();\r\n  }\r\n  function setRepayment( ) payable public validAddress(feesController) {\r\n      if( !feesController.delegatecall(msg.data) )\r\n        revert();\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"tokenData\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingData\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"vc\",\"type\":\"address\"}],\"name\":\"setVotingController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiForToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"removePayee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"name\":\"issueTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAccounts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tc\",\"type\":\"address\"},{\"name\":\"_tokenData\",\"type\":\"address\"}],\"name\":\"setTokenController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crr\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"board\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"voteAgainst\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setRepayment\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feesData\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"addToReserve\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserve\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"addPayee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"calculateFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"issueToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"fc\",\"type\":\"address\"}],\"name\":\"setFeesController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feesController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"startVoting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopVoting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"voteFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_board\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"RiskSharingToken","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000035752fddd201a191751623cea3e7065155fd741b","Library":"","SwarmSource":"bzzr://e9dde416aaca714bc4f94242a3d55f257c595e44bfe920a6ad0a35f5c5a5d60a"}]}