{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract Permissions {\r\n\r\n\taddress ownerAddress;\r\n\taddress storageAddress;\r\n\taddress callerAddress;\r\n\r\n\tfunction Permissions() public {\r\n\t\townerAddress = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == ownerAddress);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyCaller() {\r\n\t\trequire(msg.sender == callerAddress);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction getOwner() view external returns (address) {\r\n\t\treturn ownerAddress;\r\n\t}\r\n\r\n\tfunction getStorageAddress() view external returns (address) {\r\n\t\treturn storageAddress;\r\n\t}\r\n\r\n\tfunction getCaller() view external returns (address) {\r\n\t\treturn callerAddress;\r\n\t}\r\n\r\n\tfunction transferOwnership(address newOwner) external onlyOwner {\r\n\t\tif (newOwner != address(0)) {\r\n\t\t\t\townerAddress = newOwner;\r\n\t\t}\r\n\t}\r\n\tfunction newStorage(address _new) external onlyOwner {\r\n\t\tif (_new != address(0)) {\r\n\t\t\t\tstorageAddress = _new;\r\n\t\t}\r\n\t}\r\n\tfunction newCaller(address _new) external onlyOwner {\r\n\t\tif (_new != address(0)) {\r\n\t\t\t\tcallerAddress = _new;\r\n\t\t}\r\n\t}\r\n}\r\n\r\ncontract Creatures is Permissions {\r\n\tstruct Creature {\r\n\t\tuint16 species;\r\n\t\tuint8 subSpecies;\r\n\t\tuint8 eyeColor;\r\n\t\tuint64 timestamp;\r\n\t}\r\n\tCreature[] creatures;\r\n\r\n\tmapping (uint256 =>\taddress) public creatureIndexToOwner;\r\n\tmapping (address => uint256) ownershipTokenCount;\r\n\r\n\tevent CreateCreature(uint256 id, address indexed owner);\r\n\tevent Transfer(address _from, address _to, uint256 creatureID);\r\n\r\n\tfunction add(address _owner, uint16 _species, uint8 _subSpecies, uint8 _eyeColor) external onlyCaller {\r\n\t\t// do checks in caller function\r\n\t\tCreature memory _creature = Creature({\r\n\t\t\tspecies: _species,\r\n\t\t\tsubSpecies: _subSpecies,\r\n\t\t\teyeColor: _eyeColor,\r\n\t\t\ttimestamp: uint64(now)\r\n\t\t});\r\n\t\tuint256 newCreatureID = creatures.push(_creature) - 1;\r\n\t\ttransfer(0, _owner, newCreatureID);\r\n\t\tCreateCreature(newCreatureID, _owner);\r\n\t}\r\n\tfunction getCreature(uint256 id) external view returns (address, uint16, uint8, uint8, uint64) {\r\n\t\tCreature storage c = creatures[id];\r\n\t\taddress owner = creatureIndexToOwner[id];\r\n\t\treturn (\r\n\t\t\towner,\r\n\t\t\tc.species,\r\n\t\t\tc.subSpecies,\r\n\t\t\tc.eyeColor,\r\n\t\t\tc.timestamp\r\n\t\t);\r\n\t}\r\n\tfunction transfer(address _from, address _to, uint256 _tokenId) public onlyCaller {\r\n\t\t// do checks in caller function\r\n\t\tcreatureIndexToOwner[_tokenId] = _to;\r\n\t\tif (_from != address(0)) {\r\n\t\t\townershipTokenCount[_from]--;\r\n\t\t}\r\n\t\townershipTokenCount[_to]++;\r\n\t\tTransfer(_from, _to, _tokenId);\r\n\t}\r\n}\r\n\r\ncontract CreaturesInterface is Permissions {\r\n\r\n\tmapping (uint8 => uint256) public creatureCosts;\r\n\r\n\tfunction CreaturesInterface() public {\r\n\t\tcreatureCosts[0] = .10 ether;\r\n\t\tcreatureCosts[1] = .25 ether;\r\n\t\tcreatureCosts[2] = .12 ether;\r\n\t\tcreatureCosts[3] = .50 ether;\r\n\t\tcreatureCosts[4] = .10 ether;\r\n\t\tcreatureCosts[5] = 2.0 ether;\r\n\t\tcreatureCosts[6] = 2.0 ether;\r\n\t\tcreatureCosts[7] = 1.0 ether;\r\n\t\tcreatureCosts[8] = 1.0 ether;\r\n\t\tcreatureCosts[9] = .50 ether;\r\n\t\tcreatureCosts[10] = .50 ether;\r\n\t\tcreatureCosts[11] = .20 ether;\r\n\t\tcreatureCosts[12] = .50 ether;\r\n\t\tcreatureCosts[13] = .10 ether;\r\n\t\tcreatureCosts[14] = 1.0 ether;\r\n\t\tcreatureCosts[15] = 1.0 ether;\r\n\t\tcreatureCosts[16] = 10 ether;\r\n\t}\r\n\r\n\tfunction addCreature(uint16 _species, uint8 _subSpecies, uint8 _eyeColor) external payable {\r\n\t\trequire(_species == 0); // only one species available for now\r\n\t\trequire(creatureCosts[_subSpecies] > 0);\r\n\t\trequire(msg.value >= creatureCosts[_subSpecies]);\r\n\t\tCreatures creatureStorage = Creatures(storageAddress);\r\n\t\tcreatureStorage.add(msg.sender, _species, _subSpecies, _eyeColor);\r\n\t}\r\n    function withdrawBalance() external onlyOwner {\r\n        ownerAddress.transfer(this.balance);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"getStorageAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"newCaller\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_species\",\"type\":\"uint16\"},{\"name\":\"_subSpecies\",\"type\":\"uint8\"},{\"name\":\"_eyeColor\",\"type\":\"uint8\"}],\"name\":\"addCreature\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_new\",\"type\":\"address\"}],\"name\":\"newStorage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCaller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"creatureCosts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"CreaturesInterface","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5794f612af8aa30b87d54c6c9a4a3aa1e7374cb73195814cd92846bf4d647035"}]}