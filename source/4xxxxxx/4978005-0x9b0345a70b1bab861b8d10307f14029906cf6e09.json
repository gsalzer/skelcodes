{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) public;\r\n}\r\n\r\ncontract Presale {\r\n    address public beneficiary;\r\n    address public burner;\r\n    uint public fundingGoal;\r\n    uint public amountRaised;\r\n    uint public deadline;\r\n\r\n    uint public pricePresale = 10000;\r\n\r\n    // 4 mill tokens available to investors during pre-ico\r\n    // 2 mill tokens reserved for erotix fund\r\n    // 120.000 tokens reserved for founders fund\r\n    uint public presaleSupply = 6120000 * 1 ether;\r\n    uint public availableSupply = 4000000 * 1 ether;\r\n\r\n    // define amount of tokens to be sent to the funds, in percentages\r\n    uint public erotixFundMultiplier = 50;\r\n    uint public foundersFundMultiplier = 3;\r\n\r\n    // parameters used to check if enough supply available for requested tokens\r\n    uint public requestedTokens;\r\n    uint public amountAvailable;\r\n\r\n    address public erotixFund = 0x1a0cc2B7F7Cb6fFFd3194A2AEBd78A4a072915Be;\r\n    \r\n    // Smart contract which releases received ERX on the 1st of March 2019\r\n    address public foundersFund = 0xaefe05643b613823dBAF6245AFb819Fd56fBdd22; \r\n\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n    bool fundingGoalReached = false;\r\n    bool presaleClosed = false;\r\n\r\n    event GoalReached(address recipient, uint totalAmountRaised);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    /**\r\n     * Constructor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    function Presale(\r\n        address ifSuccessfulSendTo,\r\n        uint fundingGoalInEthers,\r\n        uint endOfPresale,\r\n        address addressOfTokenUsedAsReward,\r\n        address burnAddress\r\n    ) public {\r\n        beneficiary = ifSuccessfulSendTo;\r\n        fundingGoal = fundingGoalInEthers * 1 ether;\r\n        deadline = endOfPresale;\r\n        tokenReward = token(addressOfTokenUsedAsReward);\r\n        burner = burnAddress;\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function () payable public {\r\n        require(!presaleClosed);\r\n        uint amount = msg.value;\r\n\r\n        // Calculate amount of tokens requested by buyer\r\n        requestedTokens = amount * pricePresale;\r\n\r\n        // Check if enough supply left to fill order\r\n        if (requestedTokens <= availableSupply) {\r\n            balanceOf[msg.sender] += amount;\r\n            amountRaised += amount;\r\n\r\n            //send tokens to investor\r\n            tokenReward.transfer(msg.sender, amount * pricePresale);\r\n            //send tokens to funds\r\n            tokenReward.transfer(erotixFund, amount * pricePresale * erotixFundMultiplier / 100);\r\n            tokenReward.transfer(foundersFund, amount * pricePresale * foundersFundMultiplier / 100);\r\n\r\n            FundTransfer(msg.sender, amount, true);\r\n\r\n            // update supply\r\n            availableSupply -= requestedTokens;\r\n        } else {\r\n            // Not enough supply left, sell remaining supply\r\n            amountAvailable = availableSupply / pricePresale;\r\n            balanceOf[msg.sender] += amountAvailable;\r\n            amountRaised += amountAvailable;\r\n\r\n            //send tokens to investor\r\n            tokenReward.transfer(msg.sender, amountAvailable * pricePresale);\r\n            //send tokens to funds\r\n            tokenReward.transfer(erotixFund, amountAvailable * pricePresale * erotixFundMultiplier / 100);\r\n            tokenReward.transfer(foundersFund, amountAvailable * pricePresale * foundersFundMultiplier / 100);\r\n\r\n            FundTransfer(msg.sender, amountAvailable, true);\r\n\r\n            // update supply\r\n            availableSupply = 0;\r\n\r\n            // calculate amount of unspent eth and return it\r\n            amount -= amountAvailable;\r\n            msg.sender.send(amount);\r\n\r\n            // Sold out. Close presale,\r\n            presaleClosed = true;\r\n        }\r\n    }\r\n\r\n    modifier afterDeadline() { if (now >= deadline) _; }\r\n\r\n    /**\r\n     * Check if goal was reached\r\n     *\r\n     * Checks if the goal or time limit has been reached and ends the campaign\r\n     */\r\n    function checkGoalReached() afterDeadline public {\r\n        if (amountRaised >= fundingGoal){\r\n            fundingGoalReached = true;\r\n            GoalReached(beneficiary, amountRaised);\r\n        }\r\n        presaleClosed = true;\r\n\r\n        if (availableSupply > 0) {\r\n            tokenReward.transfer(burner, availableSupply);\r\n            tokenReward.transfer(burner, availableSupply * erotixFundMultiplier / 100);\r\n            tokenReward.transfer(burner, availableSupply * foundersFundMultiplier / 100);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Withdraw the funds\r\n     *\r\n     * Checks to see if goal or time limit has been reached, and if so, and the funding goal was reached,\r\n     * sends the entire amount to the beneficiary. If goal was not reached, each contributor can withdraw\r\n     * the amount they contributed.\r\n     */\r\n    function safeWithdrawal() public {\r\n        if (now >= deadline) {\r\n            if (!fundingGoalReached) {\r\n                uint amount = balanceOf[msg.sender];\r\n                balanceOf[msg.sender] = 0;\r\n                if (amount > 0) {\r\n                    if (msg.sender.send(amount)) {\r\n                        FundTransfer(msg.sender, amount, false);\r\n                    } else {\r\n                        balanceOf[msg.sender] = amount;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (presaleClosed) {\r\n            if (fundingGoalReached && beneficiary == msg.sender) {\r\n                if (beneficiary.send(amountRaised)) {\r\n                    FundTransfer(beneficiary, amountRaised, false);\r\n                } else {\r\n                    //If we fail to send the funds to beneficiary, unlock funders balance\r\n                    fundingGoalReached = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"checkGoalReached\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erotixFundMultiplier\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foundersFundMultiplier\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"erotixFund\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountAvailable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"availableSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pricePresale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foundersFund\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requestedTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ifSuccessfulSendTo\",\"type\":\"address\"},{\"name\":\"fundingGoalInEthers\",\"type\":\"uint256\"},{\"name\":\"endOfPresale\",\"type\":\"uint256\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"},{\"name\":\"burnAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalAmountRaised\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"Presale","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000e0401d70e14e2e51a5203b1989e211e391295c59000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000005a732b7000000000000000000000000054fe56d168a8c847dbf13dd6e0fcfffa4e55d4670000000000000000000000008c9f657fe6049f7e5890b3f67f45a2e7a6e0048f","Library":"","SwarmSource":"bzzr://292e2450ab697f5867ecfb7060581acf398d1dfbfe2b743f1109ebe4c710236a"}]}