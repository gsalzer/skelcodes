{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.18;\r\n\r\n/// @title User Comments\r\n/// @author Mark Beylin <mark.beylin@consensys.net>\r\n\r\ncontract UserComments {\r\n    event CommentAdded(string _comment, address _from, address _to, uint _time);\r\n\r\n    struct Comment{\r\n      string comment;\r\n      address from;\r\n      address to;\r\n      bool aboutBounty;\r\n      uint bountyId;\r\n      uint time;\r\n    }\r\n\r\n    Comment[] public comments;\r\n\r\n    modifier isValidCommentIndex(uint i){\r\n      require (i < comments.length);\r\n      _;\r\n    }\r\n\r\n    function addComment(string _comment, address _to, bool _aboutBounty, uint _bountyId)\r\n    public\r\n    {\r\n      if (_aboutBounty){\r\n        comments.push(Comment(_comment, msg.sender, address(0), _aboutBounty, _bountyId, block.timestamp));\r\n      } else {\r\n        comments.push(Comment(_comment, msg.sender, _to, _aboutBounty, _bountyId, block.timestamp));\r\n      }\r\n      CommentAdded(_comment, msg.sender, _to, block.timestamp);\r\n    }\r\n\r\n    function numComments()\r\n    public\r\n    constant\r\n    returns (uint){\r\n      return comments.length;\r\n    }\r\n\r\n    function getComment(uint _commentId)\r\n    isValidCommentIndex(_commentId)\r\n    public\r\n    constant\r\n    returns (string, address, address, bool, uint, uint){\r\n      return (comments[_commentId].comment,\r\n              comments[_commentId].from,\r\n              comments[_commentId].to,\r\n              comments[_commentId].aboutBounty,\r\n              comments[_commentId].bountyId,\r\n              comments[_commentId].time);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"_commentId\",\"type\":\"uint256\"}],\"name\":\"getComment\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"comments\",\"outputs\":[{\"name\":\"comment\",\"type\":\"string\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"aboutBounty\",\"type\":\"bool\"},{\"name\":\"bountyId\",\"type\":\"uint256\"},{\"name\":\"time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numComments\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_comment\",\"type\":\"string\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_aboutBounty\",\"type\":\"bool\"},{\"name\":\"_bountyId\",\"type\":\"uint256\"}],\"name\":\"addComment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_comment\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"CommentAdded\",\"type\":\"event\"}]","ContractName":"UserComments","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://80ce6a69be8e8416dd6a2369e396f2de734d1f2cdd99ce1433b9940f62f0f9b0"}]}