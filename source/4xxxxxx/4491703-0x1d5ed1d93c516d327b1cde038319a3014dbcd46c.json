{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n/*\r\nToken Contract with batch assignments\r\n\r\nERC-20 Token Standar Compliant\r\n\r\nContract developer: Fares A. Akel C.\r\nf.antonio.akel@gmail.com\r\nMIT PGP KEY ID: 078E41CB\r\n*/\r\n\r\n contract token {\r\n\r\n    function transfer(address _to, uint256 _value); \r\n \r\n }\r\n\r\n\r\n/**\r\n * This contract is administered\r\n */\r\n\r\ncontract admined {\r\n    address public admin; //Admin address is public\r\n    /**\r\n    * @dev This constructor set the initial admin of the contract\r\n    */\r\n    function admined() internal {\r\n        admin = msg.sender; //Set initial admin to contract creator\r\n        Admined(admin);\r\n    }\r\n\r\n    modifier onlyAdmin() { //A modifier to define admin-only functions\r\n        require(msg.sender == admin);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev Transfer the adminship of the contract\r\n    * @param _newAdmin The address of the new admin.\r\n    */\r\n    function transferAdminship(address _newAdmin) onlyAdmin public { //Admin can be transfered\r\n        require(_newAdmin != address(0));\r\n        admin = _newAdmin;\r\n        TransferAdminship(admin);\r\n    }\r\n\r\n    //All admin actions have a log for public review\r\n    event TransferAdminship(address newAdmin);\r\n    event Admined(address administrador);\r\n}\r\n\r\ncontract Sender is admined {\r\n    \r\n    token public ERC20Token;\r\n    \r\n    function Sender (token _addressOfToken) public {\r\n        ERC20Token = _addressOfToken; \r\n    }\r\n    /**\r\n    * @dev batch the adminship of the contract\r\n    * @param _data Array of addresses.\r\n    * @param _amount amount to transfer per address.\r\n    */\r\n    function batch(address[] _data, uint256 _amount) onlyAdmin public { //It takes an array of addresses and an amount\r\n        for (uint i=0; i<_data.length; i++) { //It moves over the array\r\n            ERC20Token.transfer(_data[i], _amount);\r\n        }\r\n    }\r\n\r\n    function() public {\r\n        revert();\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ERC20Token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_data\",\"type\":\"address[]\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"batch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_addressOfToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdminship\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"administrador\",\"type\":\"address\"}],\"name\":\"Admined\",\"type\":\"event\"}]","ContractName":"Sender","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000008bdf18fd62ba5c459850b9d60e8437492b9bcce5","Library":"","SwarmSource":"bzzr://64b535b8ab9ca99332c762d29c857245c2fed12d9b94b2702f202dcdae62ca99"}]}