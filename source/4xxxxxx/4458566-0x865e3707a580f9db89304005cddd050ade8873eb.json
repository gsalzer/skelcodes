{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\nlibrary SafeMath {\r\n    \r\n    /**\r\n     *  Sub function asserts that b is less than or equal to a.\r\n     * */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * Add function avoids overflow.\r\n    * */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract ERC20Basic {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address who) constant public returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender) constant public returns (uint256);\r\n    function transferFrom(address from, address to, uint256 value) public  returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract BasicToken is ERC20Basic {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    //keeps a record of the total balances of each ETH address.\r\n    mapping (address => uint256) balances;\r\n\r\n    modifier onlyPayloadSize(uint size) {\r\n        if (msg.data.length < size + 4) {\r\n        revert();\r\n        }\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * Transfer function makes it possible for users to transfer their Hire tokens to another\r\n     * ETH address.\r\n     * \r\n     * @param _to the address of the recipient.\r\n     * @param _amount the amount of Hire tokens to be sent.\r\n     * */\r\n    function transfer(address _to, uint256 _amount) public onlyPayloadSize(2 * 32) returns (bool) {\r\n        require(balances[msg.sender] >= _amount);\r\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        Transfer(msg.sender, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * BalanceOf function returns the total balance of the queried address.\r\n     * \r\n     * @param _addr the address which is being queried.\r\n     * */\r\n    function balanceOf(address _addr) public constant returns (uint256) {\r\n        return balances[_addr];\r\n    }\r\n}\r\n\r\ncontract AdvancedToken is BasicToken, ERC20 {\r\n    \r\n    //keeps a record of all the allowances from one ETH address to another.\r\n    mapping (address => mapping (address => uint256)) allowances; \r\n    \r\n    /**\r\n     * TransferFrom function allows users to spend ETH on another's behalf, given that the _owner\r\n     * has allowed them to. \r\n     * \r\n     * @param _from the address of the owner.\r\n     * @param _to the address of the recipient.\r\n     * @param _amount the total amount of tokens to be sent. '\r\n     * */\r\n    function transferFrom(address _from, address _to, uint256 _amount) public onlyPayloadSize(3 * 32) returns (bool) {\r\n        require(allowances[_from][msg.sender] >= _amount && balances[_from] >= _amount);\r\n        allowances[_from][msg.sender] = allowances[_from][msg.sender].sub(_amount);\r\n        balances[_from] = balances[_from].sub(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        Transfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Approve function allows users to allow others to spend a specified amount tokens on\r\n     * their behalf.\r\n     * \r\n     * @param _spender the address of the spended who is being granted permission to spend tokens.\r\n     * @param _amount the total amount of tokens the spender is allowed to spend.\r\n     * */\r\n    function approve(address _spender, uint256 _amount) public returns (bool) {\r\n        allowances[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Allowance function returns the total allowance from one address to another.\r\n     * \r\n     * @param _owner the address of the owner of the token.\r\n     * @param _spender the address of the spender who has or has not been allowed to spend\r\n     * the owners tokens.\r\n     * */\r\n    function allowance(address _owner, address _spender) public constant returns (uint256) {\r\n        return allowances[_owner][_spender];\r\n    }\r\n\r\n}\r\n\r\ncontract Hire is AdvancedToken {\r\n\r\n    uint8 public decimals;\r\n    string public name;\r\n    string public symbol;\r\n    address public owner;\r\n\r\n    /**\r\n    * Constructor initializes the total supply to 100,000,000, the token name to\r\n    * Hire, the token symbol to HIRE, sets the decimals to 18 and automatically \r\n    * sends all tokens to the owner of the contract upon deployment.\r\n    * */\r\n    function Hire() public {\r\n        totalSupply = 100000000e18;\r\n        decimals = 18;\r\n        name = \"Hire\";\r\n        symbol = \"HIRE\";\r\n        owner = 0xaAa34A22Bd3F496b3A8648367CeeA9c03B130A30;\r\n        balances[owner] = totalSupply;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"Hire","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://77e95292c89f002b652c07efc4aef7db7f4acb2de9129fef5da1369057355900"}]}