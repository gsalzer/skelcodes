{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) public;\r\n}\r\n\r\ncontract Crowdsale {\r\n    address public owner;\r\n    uint public amountRaised;\r\n    uint public deadline;\r\n    uint public rateOfEther;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n    bool crowdsaleClosed = false;\r\n\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    /**\r\n     * Constrctor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    function Crowdsale(\r\n        uint durationInMinutes,\r\n        address addressOfTokenUsedAsReward\r\n    ) public {\r\n        owner = msg.sender;\r\n        deadline = now + durationInMinutes * 1 minutes;\r\n        rateOfEther = 42352;\r\n        tokenReward = token(addressOfTokenUsedAsReward);\r\n    }\r\n\r\nfunction setPrice(uint tokenRateOfEachEther) public {\r\n    if(msg.sender == owner) {\r\n      rateOfEther = tokenRateOfEachEther;\r\n    }\r\n}\r\n\r\nfunction changeOwner (address newOwner) public {\r\n  if(msg.sender == owner) {\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\nfunction changeCrowdsale(bool isClose) public {\r\n    if(msg.sender == owner) {\r\n        crowdsaleClosed = isClose;\r\n    }\r\n}\r\n\r\n\r\n  function finishPresale(uint value) public {\r\n    if(msg.sender == owner) {\r\n        if(owner.send(value)) {\r\n            FundTransfer(owner, value, false);\r\n        }\r\n    }\r\n  }\r\n\r\n    function buyToken() payable public {\r\n        require(!crowdsaleClosed);\r\n        require(now <= deadline);\r\n        uint amount = msg.value;\r\n        amountRaised += amount;\r\n        uint tokens = amount * rateOfEther;\r\n        balanceOf[msg.sender] += tokens;\r\n        tokenReward.transfer(msg.sender, tokens);\r\n        FundTransfer(msg.sender, tokens, true);\r\n    }\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function () payable public {\r\n        buyToken();\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"finishPresale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"isClose\",\"type\":\"bool\"}],\"name\":\"changeCrowdsale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenRateOfEachEther\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyToken\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rateOfEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"durationInMinutes\",\"type\":\"uint256\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"Crowdsale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000001b80000000000000000000000008febf7551eea6ce499f96537ae0e2075c5a7301a","Library":"","SwarmSource":"bzzr://3904577933e5009dbe09a4a0caa884c1e5701e71d34115274559c795f799c03b"}]}