{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n/*standart library for uint\r\n*/\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0 || b == 0){\r\n        return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/*\r\ncontract to identify owner\r\n*/\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n\r\n  address public newOwner;\r\n\r\n  address public techSupport;\r\n\r\n  address public newTechSupport;\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  modifier onlyTechSupport() {\r\n    require(msg.sender == techSupport);\r\n    _;\r\n  }\r\n\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    require(_newOwner != address(0));\r\n    newOwner = _newOwner;\r\n  }\r\n\r\n  function acceptOwnership() public {\r\n    if (msg.sender == newOwner) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n\r\n  function transferTechSupport (address _newSupport) public{\r\n    require (msg.sender == owner || msg.sender == techSupport);\r\n    newTechSupport = _newSupport;\r\n  }\r\n\r\n  function acceptSupport() public{\r\n    if(msg.sender == newTechSupport){\r\n      techSupport = newTechSupport;\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\nERC - 20 token contract\r\n*/\r\ncontract VGCToken is Ownable {\r\n  using SafeMath for uint;\r\n  // Triggered when tokens are transferred.\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n  // Triggered whenever approve(address _spender, uint256 _value) is called.\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n  string public constant symbol = \"VGC\";\r\n  string public constant name = \"VooGlueC\";\r\n  uint8 public constant decimals = 2;\r\n  uint256 _totalSupply = 55000000*pow(10,decimals);\r\n\r\n  // Owner of this contract\r\n  address public owner;\r\n\r\n  // Balances for each account\r\n  mapping(address => uint256) balances;\r\n\r\n  // Owner of account approves the transfer of an amount to another account\r\n  mapping(address => mapping (address => uint256)) allowed;\r\n\r\n  // power function\r\n  function pow(uint256 a, uint256 b) internal pure returns (uint256){ //power function\r\n    return (a**b);\r\n  }\r\n\r\n  /*\r\n  standart ERC-20 function\r\n  get total supply of ERC-20 Tokens\r\n  */\r\n  function totalSupply() public view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /*\r\n  standart ERC-20 function\r\n  get ERC-20 token balance from _address\r\n  */\r\n\r\n  function balanceOf(address _address) public constant returns (uint256 balance) {\r\n    return balances[_address];\r\n  }\r\n\r\n  /*\r\n  //standart ERC-20 function\r\n  transfer token from message sender to _to\r\n  */\r\n  function transfer(address _to, uint256 _amount) public returns (bool success) {\r\n    //you can't transfer token back to token contract\r\n    require(this != _to);\r\n    balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n    balances[_to] = balances[_to].add(_amount);\r\n    Transfer(msg.sender,_to,_amount);\r\n    return true;\r\n  }\r\n\r\n  address public crowdsaleContract;\r\n  bool flag = false;\r\n  //connect to crowdsaleContract, can be use once\r\n  function setCrowdsaleContract (address _address) public {\r\n    require (!flag);\r\n    crowdsaleContract = _address;\r\n    reserveBalanceMap[_address] = true;\r\n    flag = true;\r\n  }\r\n\r\n  /*\r\n  standart ERC-20 function\r\n  */\r\n  function transferFrom(\r\n    address _from,\r\n    address _to,\r\n    uint256 _amount\r\n    )public returns (bool success) {\r\n      require(this != _to);\r\n\r\n      if (balances[_from] >= _amount\r\n       && allowed[_from][msg.sender] >= _amount\r\n       && _amount > 0\r\n       && balances[_to] + _amount > balances[_to]) {\r\n       balances[_from] -= _amount;\r\n       allowed[_from][msg.sender] -= _amount;\r\n       balances[_to] += _amount;\r\n       Transfer(_from, _to, _amount);\r\n    return true;\r\n    } else {\r\n    return false;\r\n    }\r\n  }\r\n\r\n  /*\r\n  standart ERC-20 function\r\n  approve your token balance to another address\r\n  */\r\n  function approve(address _spender, uint256 _amount)public returns (bool success) {\r\n    allowed[msg.sender][_spender] = _amount;\r\n    Approval(msg.sender, _spender, _amount);\r\n    return true;\r\n  }\r\n\r\n  //standart ERC-20 function\r\n  function allowance(address _owner, address _spender)public constant returns (uint256 remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n  //Constructor\r\n  function VGCToken(address _addressOwner) public {\r\n    owner = _addressOwner;\r\n    // techSupport = msg.sender;\r\n    techSupport = msg.sender;\r\n    balances[this] = _totalSupply;\r\n    teamBalanceMap[_addressOwner] = true;\r\n    bountyBalanceMap[_addressOwner] = true;\r\n    advisorsBalanceMap[_addressOwner] = true;\r\n    referalFundBalanceMap[_addressOwner] = true;\r\n    reserveBalanceMap[_addressOwner] = true;\r\n  }\r\n  //make investor balance = 0\r\n  function burnTokens(address _address) public{\r\n    balances[_address] = 0;\r\n  }\r\n  // Tokens reserve (last screen in documentation)\r\n  mapping (address => bool) public teamBalanceMap;\r\n  mapping (address => bool) public bountyBalanceMap;\r\n  mapping (address => bool) public advisorsBalanceMap;\r\n  mapping (address => bool) public referalFundBalanceMap;\r\n  mapping (address => bool) public reserveBalanceMap;\r\n\r\n\r\n  uint private crowdsaleBalance = 36000000*pow(10,decimals);\r\n\r\n  function getCrowdsaleBalance() public view returns(uint) {\r\n    return crowdsaleBalance;\r\n  }\r\n\r\n\r\n  uint public teamBalance = 1000000*pow(10,decimals);\r\n  uint public bountyBalance = 3000000*pow(10,decimals);\r\n  uint public ownerBalance = 1000000*pow(10,decimals);\r\n  uint public advisorsBalance = 1000000*pow(10,decimals);\r\n  uint public referalFundBalance = 3000000*pow(10,decimals);\r\n  uint public reserveBalance = 10000000*pow(10,decimals);\r\n\r\n  function addTRA (address _address) public onlyOwner {\r\n    teamBalanceMap[_address] = true;\r\n  }\r\n\r\n  function removeTRA (address _address) public onlyOwner {\r\n    teamBalanceMap[_address] = false;\r\n  }\r\n\r\n  function addBRA (address _address) public onlyOwner {\r\n    bountyBalanceMap[_address] = true;\r\n  }\r\n\r\n  function removeBRA (address _address) public onlyOwner {\r\n    bountyBalanceMap[_address] = false;\r\n  }\r\n\r\n  function addARA (address _address) public onlyOwner {\r\n    advisorsBalanceMap[_address] = true;\r\n  }\r\n\r\n  function removeARA (address _address) public onlyOwner {\r\n    advisorsBalanceMap[_address] = false;\r\n  }\r\n\r\n  function addFRA (address _address) public onlyOwner {\r\n    referalFundBalanceMap[_address] = true;\r\n  }\r\n\r\n  function removeFRA (address _address) public onlyOwner {\r\n    referalFundBalanceMap[_address] = false;\r\n  }\r\n\r\n  function addRRA (address _address) public onlyOwner {\r\n    reserveBalanceMap[_address] = true;\r\n  }\r\n\r\n  function removeRRA (address _address) public onlyOwner {\r\n    reserveBalanceMap[_address] = false;\r\n  }\r\n\r\n  function sendTeamBalance (address _address, uint _value) public{\r\n    require(teamBalanceMap[msg.sender]);\r\n    teamBalance = teamBalance.sub(_value);\r\n    balances[this] = balances[this].sub(_value);\r\n    balances[_address] = balances[_address].add(_value);\r\n    Transfer(this,_address, _value);\r\n  }\r\n\r\n  function sendBountyBalance (address _address, uint _value) public{\r\n    require(bountyBalanceMap[msg.sender]);\r\n    bountyBalance = bountyBalance.sub(_value);\r\n    balances[this] = balances[this].sub(_value);\r\n    balances[_address] = balances[_address].add(_value);\r\n    Transfer(this,_address, _value);\r\n  }\r\n\r\n  function sendAdvisorsBalance (address _address, uint _value) public{\r\n    require(advisorsBalanceMap[msg.sender]);\r\n    advisorsBalance = advisorsBalance.sub(_value);\r\n    balances[this] = balances[this].sub(_value);\r\n    balances[_address] = balances[_address].add(_value);\r\n    Transfer(this,_address, _value);\r\n  }\r\n\r\n  function sendReferallFundBalance (address _address, uint _value) public{\r\n    require(referalFundBalanceMap[msg.sender]);\r\n    referalFundBalance = referalFundBalance.sub(_value);\r\n    balances[this] = balances[this].sub(_value);\r\n    balances[_address] = balances[_address].add(_value);\r\n    Transfer(this,_address, _value);\r\n  }\r\n\r\n  function sendReserveBalance (address _address, uint _value) public{\r\n    require(reserveBalanceMap[msg.sender]);\r\n    reserveBalance = reserveBalance.sub(_value);\r\n    balances[this] = balances[this].sub(_value);\r\n    balances[_address] = balances[_address].add(_value);\r\n    Transfer(this,_address, _value);\r\n  }\r\n\r\n  function sendOwnersBalance (address _address, uint _value) public onlyOwner{\r\n    ownerBalance = ownerBalance.sub(_value);\r\n    balances[this] = balances[this].sub(_value);\r\n    balances[_address] = balances[_address].add(_value);\r\n    Transfer(this,_address, _value);\r\n  }\r\n\r\n  function sendCrowdsaleBalance (address _address, uint _value) public {\r\n    require (msg.sender == crowdsaleContract);\r\n    crowdsaleBalance = crowdsaleBalance.sub(_value);\r\n    balances[this] = balances[this].sub(_value);\r\n    balances[_address] = balances[_address].add(_value);\r\n    Transfer(this,_address, _value);\r\n  }\r\n\r\n  bool private isReferralBalancesSended = false;\r\n\r\n  function getRefBalSended () public view returns(bool){\r\n      return isReferralBalancesSended;\r\n  }\r\n\r\n\r\n  // Dashboard function\r\n  function referralProgram (address[] _addresses, uint[] _values, uint _summary) public onlyTechSupport {\r\n    require (_summary <= getCrowdsaleBalance());\r\n    require(_addresses.length == _values.length);\r\n    balances[this] = balances[this].sub(_summary);\r\n    for (uint i = 0; i < _addresses.length; i++){\r\n      balances[_addresses[i]] = balances[_addresses[i]].add(_values[i]);\r\n      Transfer(this,_addresses[i],_values[i]);\r\n    }\r\n    isReferralBalancesSended = true;\r\n  }\r\n\r\n  // at the end of ico burn unsold tokens\r\n  function finishIco() public{\r\n      require(msg.sender == crowdsaleContract);\r\n      balances[this] = balances[this].sub(crowdsaleBalance);\r\n      Transfer(this,0,crowdsaleBalance);\r\n      _totalSupply = _totalSupply.sub(crowdsaleBalance);\r\n      crowdsaleBalance = 0;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"referalFundBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRefBalSended\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"bountyBalanceMap\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addFRA\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCrowdsaleBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSupport\",\"type\":\"address\"}],\"name\":\"transferTechSupport\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendReserveBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addARA\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeRRA\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"advisorsBalanceMap\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crowdsaleContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendCrowdsaleBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendAdvisorsBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamBalanceMap\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"referalFundBalanceMap\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"advisorsBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setCrowdsaleContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"},{\"name\":\"_summary\",\"type\":\"uint256\"}],\"name\":\"referralProgram\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendTeamBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeBRA\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addRRA\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptSupport\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendOwnersBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserveBalanceMap\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendBountyBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"burnTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addBRA\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeFRA\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bountyBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"techSupport\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeTRA\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addTRA\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newTechSupport\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeARA\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishIco\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"sendReferallFundBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_addressOwner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"VGCToken","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000027dcd36ecb0615c9407ffb79892076cd1b6d8930","Library":"","SwarmSource":"bzzr://435c593a869b1627ebcb0b8a882aca85857ffb362b9d989b8ea3fbdd4a7da3e9"}]}