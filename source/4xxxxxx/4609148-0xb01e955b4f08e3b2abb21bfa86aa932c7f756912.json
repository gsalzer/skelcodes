{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract StandardCertificate is owned{\r\n    \r\n    string public name;\r\n    string public description;\r\n    string public language;\r\n    string public place;\r\n    uint public hoursCount;\r\n    \r\n    mapping (address => uint) certificates;\r\n    \r\n    function StandardCertificate (string _name, string _description, string _language, string _place, uint _hoursCount) {\r\n        name = _name;\r\n        description = _description;\r\n        language = _language;\r\n        place = _place;\r\n        hoursCount = _hoursCount;\r\n    }\r\n    \r\n    // выдача сертификата\r\n    function issue (address student) onlyOwner {\r\n        certificates[student] = now;\r\n    }\r\n    \r\n    function issued (address student)  constant returns (uint) {\r\n        return certificates[student];\r\n    }\r\n    \r\n    function annul (address student) onlyOwner {\r\n        certificates[student] = 0;\r\n    }\r\n    \r\n}\r\n\r\ncontract EWCertificationCenter is owned {\r\n    \r\n    string public name;\r\n    string public description;\r\n    string public place;\r\n    \r\n    mapping (address => bool) public validCertificators;\r\n    \r\n    mapping (address => bool) public validCourses;\r\n    \r\n    modifier onlyValidCertificator {\r\n        require(validCertificators[msg.sender]);\r\n        _;\r\n    }\r\n\r\n    \r\n    function EWCertificationCenter (string _name, string _description, string _place) {\r\n    \r\n        name = _name;\r\n        description = _description;\r\n        place = _place;\r\n        validCertificators[msg.sender]=true;\r\n        \r\n    }\r\n    \r\n    // add and delete certificator \r\n    function addCertificator(address newCertificator) onlyOwner {\r\n        validCertificators[newCertificator] = true;\r\n    }\r\n    \r\n    function deleteCertificator(address certificator) onlyOwner {\r\n        validCertificators[certificator] = false;\r\n    }\r\n    \r\n    // add and delete cource certificate\r\n    function addCourse(address courseAddess) onlyOwner {\r\n        StandardCertificate s = StandardCertificate(courseAddess);\r\n        validCourses[courseAddess] = true;\r\n    }\r\n\r\n    function deleteCourse(address courseAddess) onlyOwner {\r\n        validCourses[courseAddess] = false;\r\n    }\r\n    \r\n    function issueSertificate(address courseAddess, address student) onlyValidCertificator {\r\n        require (student != 0x0);\r\n        require (validCourses[courseAddess]);\r\n        \r\n        StandardCertificate s = StandardCertificate(courseAddess);\r\n        s.issue(student);\r\n    }\r\n    \r\n    function checkSertificate(address courseAddess, address student) constant returns (uint) {\r\n        require (student != 0x0);\r\n        require (validCourses[courseAddess]);\r\n        \r\n        StandardCertificate s = StandardCertificate(courseAddess);\r\n        return s.issued(student);        \r\n    }\r\n    \r\n    function annulCertificate(address courseAddess, address student) onlyValidCertificator {\r\n        require (student != 0x0);\r\n        require (validCourses[courseAddess]);\r\n\r\n        StandardCertificate s = StandardCertificate(courseAddess);\r\n        s.annul(student);\r\n    }\r\n    \r\n    function changeOwnership(address certificateAddress, address newOwner) onlyOwner {\r\n        StandardCertificate s = StandardCertificate(certificateAddress);\r\n        s.transferOwnership(newOwner);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"courseAddess\",\"type\":\"address\"},{\"name\":\"student\",\"type\":\"address\"}],\"name\":\"annulCertificate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCertificator\",\"type\":\"address\"}],\"name\":\"addCertificator\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"courseAddess\",\"type\":\"address\"}],\"name\":\"addCourse\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"certificator\",\"type\":\"address\"}],\"name\":\"deleteCertificator\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"validCertificators\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"place\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"certificateAddress\",\"type\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"courseAddess\",\"type\":\"address\"},{\"name\":\"student\",\"type\":\"address\"}],\"name\":\"checkSertificate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"validCourses\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"courseAddess\",\"type\":\"address\"}],\"name\":\"deleteCourse\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"courseAddess\",\"type\":\"address\"},{\"name\":\"student\",\"type\":\"address\"}],\"name\":\"issueSertificate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_description\",\"type\":\"string\"},{\"name\":\"_place\",\"type\":\"string\"}],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"EWCertificationCenter","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000001e457468657265756d776f726b7320456475636174696f6e2043656e7465720000000000000000000000000000000000000000000000000000000000000000003149737375616e636520616e642076616c69646174696f6e206f6620656475636174696f6e20636572746966696361746573000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001d63657274696669636174652e657468657265756d776f726b732e636f6d000000","Library":"","SwarmSource":"bzzr://e971a1e796edb94000de4f1ad0c06f69bd88d5c2d5fb7084fc083894426a5538"}]}