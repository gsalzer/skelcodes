{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract OwOWorldToken {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    string public constant symbol = \"OWO\";\r\n    string public constant name = \"OwO.World Token\";\r\n    uint public constant decimals = 18;\r\n\r\n    uint public _owoAmount;\r\n    uint public _totalSupply = 0;\r\n\r\n    uint public _oneTokenInWei = 108931000000000; // starts at $0.02\r\n    bool public _CROWDSALE_PAUSED = false;\r\n\r\n    address public _ownerWallet;   // owner wallet\r\n    address public _multiSigWallet;  // The address to hold the funds donated\r\n    uint public _totalEthCollected = 0;            // In wei\r\n    bool public _saleFinalized = false;         // Has OwO Dev finalized the sale?\r\n\r\n    uint constant public dust = 1 finney;    // Minimum investment\r\n    uint public _cap = 50000 ether;       // Hard cap to protect the ETH network from a really high raise\r\n    uint public _capOwO = 100000000 * 10 ** decimals;   // total supply of owo for the crowdsale\r\n\r\n    uint public MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE = 25;\r\n\r\n    /* How many distinct addresses have invested */\r\n    uint public _investorCount = 0;\r\n\r\n    /* the UNIX timestamp end date of the crowdsale */\r\n    uint public _endsAt;\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    // Crowdsale end time has been changed\r\n    event EndsAtChanged(uint endsAt);\r\n\r\n    mapping(address => uint256) balances;\r\n    mapping(address => mapping(address => uint256)) allowed;\r\n    mapping (address => uint256) public investedAmountOf;\r\n    mapping (address => uint256) public tokenAmountOf;\r\n\r\n\r\n    function () payable{\r\n        createTokens();\r\n    }\r\n\r\n    function OwOWorldToken()\r\n    {\r\n\r\n        _ownerWallet = msg.sender;\r\n\r\n        uint tokenAmount = 500000 * 10 ** decimals;\r\n        balances[_ownerWallet] = balances[_ownerWallet].add(tokenAmount);\r\n        _totalSupply = _totalSupply.add(tokenAmount);\r\n        _multiSigWallet = 0x6c5140f605a9Add003B3626Aae4f08F41E6c6FfF;\r\n        _endsAt = 1514332800;\r\n\r\n    }\r\n\r\n    modifier onlyOwner(){\r\n        require(msg.sender == _ownerWallet);\r\n        _;\r\n    }\r\n\r\n    function setOneTokenInWei(uint w) onlyOwner {\r\n        _oneTokenInWei = w;\r\n        changed(msg.sender);\r\n    }\r\n\r\n    function setMultiSigWallet(address w) onlyOwner {\r\n        require(w != 0\r\n          && _investorCount < MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE\r\n          );\r\n\r\n          _multiSigWallet = w;\r\n\r\n        changed(msg.sender);\r\n    }\r\n\r\n    function setEndsAt(uint time) onlyOwner {\r\n\r\n      require(now < time);\r\n\r\n      _endsAt = time;\r\n      EndsAtChanged(_endsAt);\r\n    }\r\n\r\n    function setPause(bool w) onlyOwner{\r\n        _CROWDSALE_PAUSED = w;\r\n        changed(msg.sender);\r\n    }\r\n\r\n   function setFinalized(bool w) onlyOwner{\r\n        _saleFinalized = w;\r\n        changed(msg.sender);\r\n        if(_saleFinalized == true){\r\n            withdraw();\r\n        }\r\n    }\r\n\r\n    function getMultiSigWallet() constant returns (address){\r\n\r\n        return _multiSigWallet;\r\n\r\n    }\r\n    function getMultiSigBalance() constant returns (uint){\r\n\r\n        return balances[_multiSigWallet];\r\n\r\n    }\r\n    function getTotalSupply() constant returns (uint){\r\n\r\n        return _totalSupply;\r\n\r\n    }\r\n\r\n\r\n    function getTotalEth() constant returns (uint){\r\n\r\n        return _totalEthCollected;\r\n\r\n    }\r\n\r\n    function getTotalPlayers() constant returns (uint){\r\n\r\n        return _investorCount;\r\n\r\n    }\r\n    function createTokens() payable{\r\n\r\n        require(\r\n            msg.value > 0\r\n            && _totalSupply < _capOwO\r\n            && _CROWDSALE_PAUSED ==false\r\n            && _saleFinalized == false\r\n            && now < _endsAt\r\n            );\r\n\r\n               //priced at $0.03\r\n            if(_totalSupply >500001 && _totalSupply<1000000 && _oneTokenInWei<135714800000000){\r\n                _oneTokenInWei = 135714800000000;\r\n            }\r\n            //priced at $0.04\r\n            if(_totalSupply >1000001 && _totalSupply<2000000 && _oneTokenInWei<180953100000000){\r\n                _oneTokenInWei = 180953100000000;\r\n            }\r\n            //priced at $0.05\r\n            if(_totalSupply>2000001 && _totalSupply<4000000 && _oneTokenInWei<226191400000000){\r\n                _oneTokenInWei = 226191400000000;\r\n            }\r\n            //priced at $0.06\r\n            if(_totalSupply>4000001 && _totalSupply<6000000 && _oneTokenInWei<271429700000000){\r\n              _oneTokenInWei = 271429700000000;\r\n            }\r\n            //priced at $0.07\r\n            if(_totalSupply>6000001 && _totalSupply<8000000 && _oneTokenInWei<316667900000000){\r\n              _oneTokenInWei = 316667900000000;\r\n            }\r\n            //priced at $0.08\r\n            if(_totalSupply>8000001 && _totalSupply<10000001 && _oneTokenInWei<361906200000000){\r\n              _oneTokenInWei = 361906200000000;\r\n            }\r\n\r\n\r\n            if(investedAmountOf[msg.sender] == 0) {\r\n                   // A new investor\r\n                   _investorCount = _investorCount.add(1);\r\n            }\r\n\r\n            _owoAmount = msg.value.div(_oneTokenInWei);\r\n\r\n            balances[msg.sender] = balances[msg.sender].add(_owoAmount);\r\n            _totalSupply = _totalSupply.add(_owoAmount);\r\n            _totalEthCollected = _totalEthCollected.add(msg.value);\r\n            investedAmountOf[msg.sender] = investedAmountOf[msg.sender].add(msg.value);\r\n\r\n            transfer(_ownerWallet,msg.value);\r\n\r\n\r\n\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns(uint256 balance){\r\n\r\n        return balances[_owner];\r\n\r\n    }\r\n\r\n    event changed(address a);\r\n\r\n    function transfer(address _to, uint256 _value) returns(bool success){\r\n        require(\r\n            balances[msg.sender] >= _value\r\n            && _value > 0\r\n            );\r\n            balances[msg.sender].sub(_value);\r\n            balances[_to].add(_value);\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) onlyOwner returns (bool success){\r\n        require(\r\n            allowed[_from][msg.sender] >= _value\r\n            && balances[_from] >= _value\r\n            && _value >0\r\n\r\n            );\r\n\r\n            balances[_from].sub(_value);\r\n            balances[_to].add(_value);\r\n            allowed[_from][msg.sender].sub(_value);\r\n            Transfer(_from,_to,_value);\r\n            return true;\r\n    }\r\n\r\n    function getBlockNumber() constant internal returns (uint) {\r\n        return block.number;\r\n    }\r\n\r\n    function withdraw() onlyOwner payable{\r\n\r\n         assert(_multiSigWallet.send(this.balance));\r\n\r\n     }\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"_cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"w\",\"type\":\"uint256\"}],\"name\":\"setOneTokenInWei\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_capOwO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_investorCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investedAmountOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"w\",\"type\":\"bool\"}],\"name\":\"setFinalized\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_ownerWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMultiSigWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalEthCollected\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_multiSigWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setEndsAt\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenAmountOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_saleFinalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owoAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createTokens\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"w\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_endsAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMultiSigBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_oneTokenInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"w\",\"type\":\"address\"}],\"name\":\"setMultiSigWallet\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_CROWDSALE_PAUSED\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dust\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"endsAt\",\"type\":\"uint256\"}],\"name\":\"EndsAtChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"a\",\"type\":\"address\"}],\"name\":\"changed\",\"type\":\"event\"}]","ContractName":"OwOWorldToken","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1b2cbf7faa0a099c1cc33265c69ca41907af3c897810ee27f879d6caf4330926"}]}