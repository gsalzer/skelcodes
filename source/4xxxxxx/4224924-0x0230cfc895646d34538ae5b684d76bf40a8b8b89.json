{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.4;\r\n\r\ncontract Random {\r\n  uint64 _seed = 0;\r\n\r\n  // return a pseudo random number between lower and upper bounds\r\n  // given the number of previous blocks it should hash.\r\n  function random(uint64 upper) public returns (uint64 randomNumber) {\r\n    _seed = uint64(sha3(sha3(block.blockhash(block.number), _seed), now));\r\n    return _seed % upper;\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"upper\",\"type\":\"uint64\"}],\"name\":\"random\",\"outputs\":[{\"name\":\"randomNumber\",\"type\":\"uint64\"}],\"payable\":false,\"type\":\"function\"}]","ContractName":"Random","CompilerVersion":"v0.4.12+commit.194ff033","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ab7bc513ba57047f13168251913a5eb100b3c9a43e0edded6f92fb7cc244b2f5"}]}