{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract MultiKeyDailyLimitWallet {\r\n\tuint constant LIMIT_PRECISION = 1000000;\r\n\t// Fractional daily limits per key. In units of 1/LIMIT_PRECISION.\r\n\tmapping(address=>uint) public credentials;\r\n\t// Timestamp of last withdrawal.\r\n\tuint public lastWithdrawalTime;\r\n\t// Total withdrawn in last 24-hours. Resets if 24 hours passes with no activity.\r\n\tuint public dailyCount;\r\n\tuint public nonce;\r\n\r\n\tevent OnWithdrawTo(address indexed from, address indexed to, uint amount,\r\n\t\tuint64 timestamp);\r\n\r\n\tfunction MultiKeyDailyLimitWallet(address[] keys, uint[] limits) public {\r\n\t\trequire(keys.length == limits.length);\r\n\t\tfor (uint i = 0; i < keys.length; i++) {\r\n\t\t\tvar limit = limits[i];\r\n\t\t\t// limit should be in range 1-LIMIT_PRECISION\r\n\t\t\trequire (limit > 0 && limit <= LIMIT_PRECISION);\r\n\t\t\tcredentials[keys[i]] = limit;\r\n\t\t}\r\n\t}\r\n\r\n\t/* #IF TESTING\r\n\tfunction setLastWithdrawalTime(uint time) public {\r\n\t\tlastWithdrawalTime = time;\r\n\t}\r\n\tfunction setDailyCount(uint count) public {\r\n\t\tdailyCount = count;\r\n\t}\r\n\tfunction setNonce(uint _nonce) public {\r\n\t\tnonce = _nonce;\r\n\t}\r\n\t #FI */\r\n\r\n\tfunction getRemainingLimit(address key) public view returns (uint) {\r\n\t\tvar pct = credentials[key];\r\n\t\tif (pct == 0)\r\n\t\t\treturn 0;\r\n\r\n\t\tvar _dailyCount = dailyCount;\r\n\t\tif ((block.timestamp - lastWithdrawalTime) >= 1 days)\r\n\t\t\t_dailyCount = 0;\r\n\r\n\t\tvar amt = ((this.balance + _dailyCount) * pct) / LIMIT_PRECISION;\r\n\t\tif (amt == 0 && this.balance > 0)\r\n\t\t\tamt = 1;\r\n\t\tif (_dailyCount >= amt)\r\n\t\t\treturn 0;\r\n\t\treturn amt - _dailyCount;\r\n\t}\r\n\r\n\tfunction withdrawTo(uint amount, address to, bytes signature) public {\r\n\t\trequire(amount > 0 && to != address(this));\r\n\t\tassert(block.timestamp >= lastWithdrawalTime);\r\n\r\n\t\tvar limit = getSignatureRemainingLimit(signature,\r\n\t\t\tkeccak256(address(this), nonce, amount, to));\r\n\t\trequire(limit >= amount);\r\n\t\trequire(this.balance >= amount);\r\n\r\n\t\t// Reset daily count if it's been more than a day since last withdrawal.\r\n\t\tif ((block.timestamp - lastWithdrawalTime) >= 1 days)\r\n\t\t\tdailyCount = 0;\r\n\r\n\t\tlastWithdrawalTime = block.timestamp;\r\n\t\tdailyCount += amount;\r\n\t\tnonce++;\r\n\t\tto.transfer(amount);\r\n\t\tOnWithdrawTo(msg.sender, to, amount, uint64(block.timestamp));\r\n\t}\r\n\r\n\tfunction getSignatureRemainingLimit(bytes signature, bytes32 payload)\r\n\t\t\tprivate view returns (uint) {\r\n\r\n\t\tvar addr = extractSignatureAddress(signature, payload);\r\n\t\treturn getRemainingLimit(addr);\r\n\t}\r\n\r\n\tfunction extractSignatureAddress(bytes signature, bytes32 payload)\r\n\t\t\tprivate pure returns (address) {\r\n\r\n\t\tpayload = keccak256(\"\\x19Ethereum Signed Message:\\n32\", payload);\r\n\t\tbytes32 r;\r\n\t\tbytes32 s;\r\n\t\tuint8 v;\r\n\t\tassembly {\r\n\t\t\tr := mload(add(signature, 32))\r\n\t\t\ts := mload(add(signature, 64))\r\n\t\t\tv := and(mload(add(signature, 65)), 255)\r\n\t\t}\r\n\t\tif (v < 27)\r\n\t\t\tv += 27;\r\n\t\trequire(v == 27 || v == 28);\r\n\t\treturn ecrecover(payload, v, r, s);\r\n\t}\r\n\r\n\tfunction() public payable {}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"lastWithdrawalTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"credentials\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dailyCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"address\"}],\"name\":\"getRemainingLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"keys\",\"type\":\"address[]\"},{\"name\":\"limits\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"OnWithdrawTo\",\"type\":\"event\"}]","ContractName":"MultiKeyDailyLimitWallet","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000400000000000000000000000071e85326be32a79dd06e74eb4625e1487e8d8a83000000000000000000000000f1debe48c8dd97a6ec9689ee3b8c8d550ddbf705000000000000000000000000c4d6391e285d9fc0881ed6712a7cf974de2846dc000000000000000000000000e06d3abd908b532b914f157677a955a9f285cb7b000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000002110000000000000000000000000000000000000000000000000000000000001664000000000000000000000000000000000000000000000000000000000000c24400000000000000000000000000000000000000000000000000000000000f4240","Library":"","SwarmSource":"bzzr://ec93432049f3233377f8f153de54a611e816dce2a7f6fa249ef45227bea82c05"}]}