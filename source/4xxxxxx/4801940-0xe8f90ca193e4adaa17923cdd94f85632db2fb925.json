{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract myOwned {\r\n    address public contractOwner;\r\n    function myOwned() public { contractOwner = msg.sender; }\r\n    modifier onlyOwner { require(msg.sender == contractOwner); _;}\r\n    function exOwner(address newOwner) onlyOwner public { contractOwner = newOwner;}\r\n}\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) public;\r\n}\r\n\r\ncontract EPOsale is myOwned {\r\n    uint public startDate;\r\n    uint public stopDate;\r\n    uint public saleSupply;\r\n    uint public fundingGoal;\r\n    uint public amountRaised;\r\n    token public contractTokenReward;\r\n    address public contractWallet;\r\n    mapping(address => uint256) public balanceOf;\r\n    event TakeBackToken(uint amount);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    function EPOsale (\r\n        uint _startDate,\r\n        uint _stopDate,\r\n        uint _saleSupply,\r\n        uint _fundingGoal,\r\n        address _contractWallet,\r\n        address _contractTokenReward\r\n    ) public {\r\n        startDate = _startDate;\r\n        stopDate = _stopDate;\r\n        saleSupply = _saleSupply;\r\n        fundingGoal = _fundingGoal;\r\n        contractWallet = _contractWallet;\r\n        contractTokenReward = token(_contractTokenReward);\r\n    }\r\n    \r\n    function getCurrentTimestamp () internal constant returns (uint256) {\r\n        return now;\r\n    }\r\n\r\n    function saleActive() public constant returns (bool) {\r\n        return (now >= startDate && now <= stopDate);\r\n    }\r\n\r\n    function getRateAt(uint256 at) public constant returns (uint256) {\r\n        if (at < startDate) {return 0;} \r\n        else if (at < (startDate + 168 hours)) {return 3000;} \r\n        else if (at < (startDate + 336 hours)) {return 2750;} \r\n        else if (at < (startDate + 504 hours)) {return 2625;} \r\n        else if (at <= stopDate) {return 2500;} \r\n        else if (at > stopDate) {return 0;}\r\n    }\r\n\r\n    function getRateNow() public constant returns (uint256) {\r\n        return getRateAt(now);\r\n    }\r\n\r\n    function () public payable {\r\n        require(saleActive());\r\n        require(msg.value >= 0.05 ether);\r\n        uint amount = msg.value;\r\n        amountRaised += amount/10000000000000000;\r\n        uint price = 0.00000001 ether/getRateAt(now);\r\n        contractTokenReward.transfer(msg.sender, amount/price);\r\n        contractWallet.transfer(msg.value);\r\n        FundTransfer(msg.sender, amount, true);\r\n    }\r\n\r\n    function saleEnd(uint restAmount) public onlyOwner {\r\n        require(!saleActive());\r\n        require(now > stopDate );\r\n        contractTokenReward.transfer(contractWallet, restAmount);\r\n        TakeBackToken(restAmount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"stopDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"exOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRateNow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"at\",\"type\":\"uint256\"}],\"name\":\"getRateAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"restAmount\",\"type\":\"uint256\"}],\"name\":\"saleEnd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractTokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_startDate\",\"type\":\"uint256\"},{\"name\":\"_stopDate\",\"type\":\"uint256\"},{\"name\":\"_saleSupply\",\"type\":\"uint256\"},{\"name\":\"_fundingGoal\",\"type\":\"uint256\"},{\"name\":\"_contractWallet\",\"type\":\"address\"},{\"name\":\"_contractTokenReward\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TakeBackToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"EPOsale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000005a524400000000000000000000000000000000000000000000000000000000005a7b22800000000000000000000000000000000000000000000000000000000002faf0800000000000000000000000000000000000000000000000000000000000004e20000000000000000000000000fa6dda94cd91f2160d9d7d091ef0c7230520810d000000000000000000000000f90ac7c074d68e0153721a88b0b723ce723c3a3a","Library":"","SwarmSource":"bzzr://08a20ade7a8b939def862dd91d0e7b6f903fdbb4403bd30150c8e1c325dc60bf"}]}