{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\t\r\n\r\n\tcontract ERC20 {\r\n\t  uint public totalSupply;\r\n\t  function balanceOf(address who) constant returns (uint);\r\n\t  function allowance(address owner, address spender) constant returns (uint);\r\n\t\r\n\r\n\t  function transfer(address _to, uint _value) returns (bool success);\r\n\t  function transferFrom(address _from, address _to, uint _value) returns (bool success);\r\n\t  function approve(address spender, uint value) returns (bool ok);\r\n\t  event Transfer(address indexed from, address indexed to, uint value);\r\n\t  event Approval(address indexed owner, address indexed spender, uint value);\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Math operations with safety checks\r\n\t */\r\n\tcontract SafeMath {\r\n\t  function safeMul(uint a, uint b) internal returns (uint) {\r\n\t    uint c = a * b;\r\n\t    assert(a == 0 || c / a == b);\r\n\t    return c;\r\n\t  }\r\n\t\r\n\r\n\t  function safeDiv(uint a, uint b) internal returns (uint) {\r\n\t    assert(b > 0);\r\n\t    uint c = a / b;\r\n\t    assert(a == b * c + a % b);\r\n\t    return c;\r\n\t  }\r\n\t\r\n\r\n\t  function safeSub(uint a, uint b) internal returns (uint) {\r\n\t    assert(b <= a);\r\n\t    return a - b;\r\n\t  }\r\n\t\r\n\r\n\t  function safeAdd(uint a, uint b) internal returns (uint) {\r\n\t    uint c = a + b;\r\n\t    assert(c>=a && c>=b);\r\n\t    return c;\r\n\t  }\r\n\t\r\n\r\n\t  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n\t    return a >= b ? a : b;\r\n\t  }\r\n\t\r\n\r\n\t  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n\t    return a < b ? a : b;\r\n\t  }\r\n\t\r\n\r\n\t  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t    return a >= b ? a : b;\r\n\t  }\r\n\t\r\n\r\n\t  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t    return a < b ? a : b;\r\n\t  }\r\n\t\r\n\r\n\t}\r\n\t\r\n\r\n\tcontract StandardToken is ERC20, SafeMath {event Minted(address receiver, uint amount);mapping(address => uint) balances;mapping (address => mapping (address => uint)) allowed;function isToken() public constant returns (bool weAre) {\r\n\t    return true;\r\n\t  }function transfer(address _to, uint _value) returns (bool success) {\r\n\t    balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n\t    balances[_to] = safeAdd(balances[_to], _value);\r\n\t    Transfer(msg.sender, _to, _value);\r\n\t    return true;\r\n\t  }function transferFrom(address _from, address _to, uint _value) returns (bool success) {\r\n\t    uint _allowance = allowed[_from][msg.sender];balances[_to] = safeAdd(balances[_to], _value);\r\n\t    balances[_from] = safeSub(balances[_from], _value);\r\n\t    allowed[_from][msg.sender] = safeSub(_allowance, _value);\r\n\t    Transfer(_from, _to, _value);\r\n\t    return true;\r\n\t  }function balanceOf(address _owner) constant returns (uint balance) {\r\n\t    return balances[_owner];\r\n\t  }function approve(address _spender, uint _value) returns (bool success) {require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n\t    allowed[msg.sender][_spender] = _value;\r\n\t    Approval(msg.sender, _spender, _value);\r\n\t    return true;\r\n\t  }function allowance(address _owner, address _spender) constant returns (uint remaining) {\r\n\t    return allowed[_owner][_spender];\r\n\t  }}contract ERC20Token is StandardToken {string public name = \"Smart Node\";\r\n\t    string public symbol = \"SMT\";\r\n\t    uint public decimals = 18;\r\n\t    uint data1 = 5;\r\n\t    uint data2 = 5;\r\n        uint data3 = 1;\r\n        function set(uint x, uint y, uint z) onlyOwner {\r\n        data1 = x;\r\n        data2 = y;\r\n        data3 = z;\r\n    }bool halted = false; //the founder address can set this to true to halt the whole TGE event due to emergency\r\n\t    bool preTge = true;bool stageOne = false;bool stageTwo = false;bool stageThree = false;bool public freeze = true;address founder = 0x0;\r\n\t    address owner = 0x0;uint totalTokens = 10000000 * 10**18;\r\n\t    uint team = 0;\r\n\t    uint bounty = 0;uint preTgeCap = 10000120 * 10**18;uint tgeCap = 10000120 * 10**18;uint presaleTokenSupply = 0;uint presaleEtherRaised = 0;uint preTgeTokenSupply = 0;event Buy(address indexed sender, uint eth, uint fbt); event TokensSent(address indexed to, uint256 value);\r\n\t    event ContributionReceived(address indexed to, uint256 value);\r\n\t    event Burn(address indexed from, uint256 value);function ERC20Token(address _founder) payable {\r\n\t        owner = msg.sender;\r\n\t        founder = _founder;\r\n\t        balances[founder] = team;\r\n\t        totalTokens = safeSub(totalTokens, team);\r\n\t        totalTokens = safeSub(totalTokens, bounty);\r\n\t        totalSupply = totalTokens;\r\n\t        balances[owner] = totalSupply;\r\n\t    }function price() constant returns (uint){\r\n\t        return 1 finney;\r\n\t    }function buy() public payable returns(bool) {\r\n\t        require(!halted);\r\n\t        require(msg.value>0);\r\n\t        uint tokens = msg.value * 10**18 / price();\r\n\t        require(balances[owner]>tokens);\r\n\t        if (stageThree) {\r\n\t\t\t\tpreTge = false;\r\n\t\t\t\tstageOne = false;\r\n\t\t\t\tstageTwo = false;\r\n\t            tokens = tokens - (tokens / data1);}\r\n\t        if (stageTwo) {\r\n\t\t\t\tpreTge = false;\r\n\t\t\t\tstageOne = false;\r\n\t\t\t\tstageThree = false;\r\n\t            tokens = tokens + (tokens / data2);}\r\n\t        if (stageOne) {\r\n\t\t\t\tpreTge = false;\r\n\t\t\t\tstageTwo = false;\r\n\t\t\t\tstageThree = false;\r\n\t            tokens = tokens + (tokens * data3);}\r\n\t        if (preTge) {\r\n\t            stageOne = false;\r\n\t            stageTwo = false;\r\n\t\t\t\tstageThree = false;\r\n\t            tokens = tokens + (tokens / 5);}\r\n\t        if (preTge) {\r\n\t            require(safeAdd(presaleTokenSupply, tokens) < preTgeCap);\r\n\t        } else {\r\n\t            require(safeAdd(presaleTokenSupply, tokens) < safeSub(tgeCap, preTgeTokenSupply));\r\n\t        }\r\n\t        founder.transfer(msg.value);\r\n\t        balances[msg.sender] = safeAdd(balances[msg.sender], tokens);\r\n\t        balances[owner] = safeSub(balances[owner], tokens);\r\n\t        if (preTge) {\r\n\t            preTgeTokenSupply  = safeAdd(preTgeTokenSupply, tokens);}\r\n\t        presaleTokenSupply = safeAdd(presaleTokenSupply, tokens);\r\n\t        presaleEtherRaised = safeAdd(presaleEtherRaised, msg.value);\r\n\t        Buy(msg.sender, msg.value, tokens);\r\n\t        TokensSent(msg.sender, tokens);\r\n\t        ContributionReceived(msg.sender, msg.value);\r\n\t        Transfer(owner, msg.sender, tokens);\r\n\t        return true;}\r\n\t    function InitialPriceEnable() onlyOwner() {\r\n\t        preTge = true;}\r\n\t    function InitialPriceDisable() onlyOwner() {\r\n\t        preTge = false;}\r\n\t    function PriceOneEnable() onlyOwner() {\r\n\t        stageOne = true;}\r\n\t    function PriceOneDisable() onlyOwner() {\r\n\t        stageOne = false;}\r\n\t    function PriceTwoEnable() onlyOwner() {\r\n\t        stageTwo = true;}\r\n\t    function PriceTwoDisable() onlyOwner() {\r\n\t        stageTwo = false;}\r\n\t    function PriceThreeEnable() onlyOwner() {\r\n\t        stageThree = true;}function PriceThreeDisable() onlyOwner() {\r\n\t        stageThree = false;}\r\n\t    function EventEmergencyStop() onlyOwner() {\r\n\t        halted = true;}function EventEmergencyContinue() onlyOwner() {\r\n\t        halted = false;}\r\n\t    function transfer(address _to, uint256 _value) isAvailable() returns (bool success) {\r\n\t        return super.transfer(_to, _value);}\r\n\t    function transferFrom(address _from, address _to, uint256 _value) isAvailable() returns (bool success) {\r\n\t        return super.transferFrom(_from, _to, _value);}function burnRemainingTokens() isAvailable() onlyOwner() {\r\n\t        Burn(owner, balances[owner]);\r\n\t        balances[owner] = 0;}modifier onlyOwner() {\r\n\t        require(msg.sender == owner);\r\n\t        _;}modifier isAvailable() {\r\n\t        require(!halted && !freeze);\r\n\t        _;}function() payable {\r\n\t        buy();}function freeze() onlyOwner() {\r\n\t         freeze = true;}function unFreeze() onlyOwner() {\r\n\t         freeze = false;}}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"InitialPriceEnable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"PriceTwoEnable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"},{\"name\":\"y\",\"type\":\"uint256\"},{\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"EventEmergencyStop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unFreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"burnRemainingTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"PriceOneDisable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"PriceTwoDisable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"EventEmergencyContinue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"PriceOneEnable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"PriceThreeDisable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isToken\",\"outputs\":[{\"name\":\"weAre\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"InitialPriceDisable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"PriceThreeEnable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_founder\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fbt\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokensSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ContributionReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"ERC20Token","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000aca399cc6ad322a332c7a3e9efb87527bd21e85c","Library":"","SwarmSource":"bzzr://7251ea170ab30ca2c0025a86cc9478541a0620c24f300e5452385b108b6eac1f"}]}