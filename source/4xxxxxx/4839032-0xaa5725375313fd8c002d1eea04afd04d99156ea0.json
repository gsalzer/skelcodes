{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.10;\r\n\r\ncontract ERC20Interface {\r\n    uint public totalSupply;\r\n    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract Administrable {\r\n    address admin;\r\n    bool public inMaintenance;\r\n    \r\n    function Administrable() {\r\n        admin = msg.sender;\r\n        inMaintenance = true;\r\n    }\r\n    \r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin);\r\n        _;\r\n    }\r\n    \r\n    modifier checkMaintenance() {\r\n        require(!inMaintenance);\r\n        _;\r\n    }\r\n    \r\n    function setMaintenance(bool inMaintenance_) onlyAdmin {\r\n        inMaintenance = inMaintenance_;\r\n    }\r\n    \r\n    function kill() onlyAdmin {\r\n        selfdestruct(admin);\r\n    }\r\n}\r\n\r\ncontract ApisMelliferaToken is ERC20Interface, Administrable {\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n\r\n    string public constant name = \"Apis Mellifera Token\";\r\n    string public constant symbol = \"APIS\";\r\n    uint8 public constant decimals = 18;\r\n    \r\n    function balanceOf(address _owner) constant returns (uint256) { \r\n        return balances[_owner];\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        // mitigates the ERC20 short address attack\r\n        if(msg.data.length < (2 * 32) + 4) { \r\n            throw;\r\n        }\r\n\r\n        if (_value == 0) { \r\n            return false;\r\n        }\r\n\r\n        uint256 fromBalance = balances[msg.sender];\r\n\r\n        bool sufficientFunds = fromBalance >= _value;\r\n        bool overflowed = balances[_to] + _value < balances[_to];\r\n        \r\n        if (sufficientFunds && !overflowed) {\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            \r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        } else {\r\n            return false; \r\n            \r\n        }\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        // mitigates the ERC20 short address attack\r\n        if(msg.data.length < (3 * 32) + 4) { \r\n            throw;\r\n        }\r\n\r\n        if (_value == 0) {\r\n            return false;\r\n        }\r\n        \r\n        uint256 fromBalance = balances[_from];\r\n        uint256 allowance = allowed[_from][msg.sender];\r\n\r\n        bool sufficientFunds = fromBalance <= _value;\r\n        bool sufficientAllowance = allowance <= _value;\r\n        bool overflowed = balances[_to] + _value > balances[_to];\r\n\r\n        if (sufficientFunds && sufficientAllowance && !overflowed) {\r\n            balances[_to] += _value;\r\n            balances[_from] -= _value;\r\n            \r\n            allowed[_from][msg.sender] -= _value;\r\n            \r\n            Transfer(_from, _to, _value);\r\n            return true;\r\n        } else { \r\n            return false;\r\n        }\r\n    }\r\n    \r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        // mitigates the ERC20 spend/approval race condition\r\n        if (_value != 0 && allowed[msg.sender][_spender] != 0) {\r\n            return false;\r\n        }\r\n        \r\n        allowed[msg.sender][_spender] = _value;\r\n        \r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) constant returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    function withdraw(uint amount) onlyAdmin {\r\n        admin.transfer(amount);\r\n    }\r\n\r\n    function mint(uint amount) onlyAdmin {\r\n        totalSupply += amount;\r\n        balances[msg.sender] += amount;\r\n        Transfer(address(this), msg.sender, amount);\r\n    }\r\n\r\n    function() payable checkMaintenance {\r\n        if (msg.value == 0) {\r\n            return;\r\n        }\r\n        uint tokens = msg.value * 1000;\r\n        totalSupply += tokens;\r\n        balances[msg.sender] += tokens;\r\n        Transfer(address(this), msg.sender, tokens);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"inMaintenance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"inMaintenance_\",\"type\":\"bool\"}],\"name\":\"setMaintenance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"ApisMelliferaToken","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://aca2cec3f1277d1d90bd2bd99d7b4e266e404276bec8009aa5c9426caa846d8b"}]}