{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.10;\r\n\r\ncontract ForeignToken {\r\n  function balanceOf(address _owner) constant returns (uint256);\r\n  function transfer(address _to, uint256 _value) returns (bool);\r\n}\r\n\r\ncontract BlockpassToken {\r\n\r\n  address owner = msg.sender;\r\n\r\n  bool public purchasingAllowed = false;\r\n\r\n  mapping (address => uint256) balances;\r\n  mapping (address => mapping (address => uint256)) allowed;\r\n\r\n  uint256 public totalContribution = 0;\r\n  uint256 public totalSupply = 0;\r\n  uint256 public startingBlock = block.number;\r\n\r\n  function name() constant returns (string) { return \"Blockpass Token\"; }\r\n  function symbol() constant returns (string) { return \"BPT\"; }\r\n  function decimals() constant returns (uint8) { return 18; }\r\n\r\n  function balanceOf(address _owner) constant returns (uint256) { return balances[_owner]; }\r\n\r\n  function transfer(address _to, uint256 _value) returns (bool success) {\r\n\r\n    if(msg.data.length < (2 * 32) + 4) { throw; }\r\n\r\n    if (_value == 0) { return false; }\r\n\r\n    uint256 fromBalance = balances[msg.sender];\r\n\r\n    bool sufficientFunds = fromBalance >= _value;\r\n    bool overflowed = balances[_to] + _value < balances[_to];\r\n\r\n    if (sufficientFunds && !overflowed) {\r\n      balances[msg.sender] -= _value;\r\n      balances[_to] += _value;\r\n\r\n      Transfer(msg.sender, _to, _value);\r\n      return true;\r\n      } else { return false; }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n\r\n      if(msg.data.length < (3 * 32) + 4) { throw; }\r\n\r\n      if (_value == 0) { return false; }\r\n\r\n      uint256 fromBalance = balances[_from];\r\n      uint256 allowance = allowed[_from][msg.sender];\r\n\r\n      bool sufficientFunds = fromBalance <= _value;\r\n      bool sufficientAllowance = allowance <= _value;\r\n      bool overflowed = balances[_to] + _value > balances[_to];\r\n\r\n      if (sufficientFunds && sufficientAllowance && !overflowed) {\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n\r\n        allowed[_from][msg.sender] -= _value;\r\n\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n        } else { return false; }\r\n      }\r\n\r\n      function approve(address _spender, uint256 _value) returns (bool success) {\r\n\r\n        if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; }\r\n\r\n        allowed[msg.sender][_spender] = _value;\r\n\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n      }\r\n\r\n      function allowance(address _owner, address _spender) constant returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n      }\r\n\r\n      event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n      event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n      function enablePurchasing() {\r\n        if (msg.sender != owner) { throw; }\r\n\r\n        purchasingAllowed = true;\r\n      }\r\n\r\n      function disablePurchasing() {\r\n        if (msg.sender != owner) { throw; }\r\n\r\n        purchasingAllowed = false;\r\n      }\r\n\r\n      function withdrawForeignTokens(address _tokenContract) returns (bool) {\r\n        if (msg.sender != owner) { throw; }\r\n\r\n        ForeignToken token = ForeignToken(_tokenContract);\r\n\r\n        uint256 amount = token.balanceOf(address(this));\r\n        return token.transfer(owner, amount);\r\n      }\r\n\r\n      function getStats() constant returns (uint256, uint256, bool) {\r\n        return (totalContribution, totalSupply, purchasingAllowed);\r\n      }\r\n\r\n      function() payable {\r\n        if (!purchasingAllowed) { throw; }\r\n\r\n        if (msg.value == 0) { return; }\r\n\r\n        //the last valid block for the crowdsale\r\n        if(block.number >= 4370000){ throw; }\r\n\r\n        uint256 BPTperEth = 1000;\r\n\r\n        if(block.number >= (startingBlock + 80600)){\r\n          BPTperEth = 800;\r\n        }\r\n\r\n        if(block.number >= (startingBlock + 161200)){\r\n          BPTperEth = 640;\r\n        }\r\n\r\n        if(block.number >= (startingBlock + 241800)){\r\n          BPTperEth = 512;\r\n        }\r\n\r\n        if(block.number >= (startingBlock + 322400)){\r\n          BPTperEth = 410;\r\n        }\r\n\r\n          owner.transfer(msg.value);\r\n          totalContribution += msg.value;\r\n          uint256 tokensIssued = (msg.value * BPTperEth);\r\n\r\n          totalSupply += tokensIssued;\r\n          balances[msg.sender] += tokensIssued;\r\n\r\n          Transfer(address(this), msg.sender, tokensIssued);\r\n\r\n      }\r\n    }","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disablePurchasing\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enablePurchasing\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStats\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startingBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"purchasingAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawForeignTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"BlockpassToken","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6f727d6b9394c635d7e65e9c4a67e796c56502b402cf146be6a57be7d34b6144"}]}