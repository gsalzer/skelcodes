{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.19;\r\n\r\ncontract EtherSpace {\r\n    // This contract was heavily inspired by EtherTanks/EtherArmy.\r\n    \r\n    address public owner;\r\n    \r\n    struct ShipProduct {\r\n        uint16 class; // \r\n        uint256 startPrice; // initial price\r\n        uint256 currentPrice; // The current price. Changes every time someone buys this kind of ship\r\n        uint256 earning; // The amount of earning each owner of this ship gets when someone buys this type of ship\r\n        uint64 amount; // The amount of ships issued\r\n    }\r\n    \r\n    struct ShipEntity {\r\n        uint16 model;\r\n        address owner; // The address of the owner of this ship\r\n        uint64 lastCashoutIndex; // Last amount existing in the game with the same ProductID\r\n        bool battle;\r\n        uint32 battleWins;\r\n        uint32 battleLosses;\r\n    }\r\n    \r\n    // event EventProduct (\r\n    //     uint16 model,\r\n    //     uint16 class,\r\n    //     uint256 price,\r\n    //     uint256 earning,\r\n    //     uint256 currentTime\r\n    // ); \r\n    \r\n    event EventCashOut (\r\n        address indexed player,\r\n        uint256 amount\r\n    );\r\n        \r\n    event EventBuyShip (\r\n        address indexed player,\r\n        uint16 productID,\r\n        uint64 shipID\r\n    );\r\n    \r\n    event EventAddToBattle (\r\n        address indexed player,\r\n        uint64 id\r\n    );\r\n    event EventRemoveFromBattle (\r\n        address indexed player,\r\n        uint64 id\r\n    );\r\n    event EventBattle (\r\n        address indexed player,\r\n        uint64 id,\r\n        uint64 idToAttack,\r\n        uint64 idWinner\r\n    );\r\n        \r\n    function EtherSpace() public {\r\n        owner = msg.sender;\r\n        \r\n        newShipProduct(0,   50000000000000000,   500000000000000); // 0.05, 0.0005\r\n        newShipProduct(0,   70000000000000000,   700000000000000); // 0.07, 0.0007\r\n        newShipProduct(0,   70000000000000000,   700000000000000); // 0.07, 0.0007\r\n        newShipProduct(0,   70000000000000000,   700000000000000); // 0.07, 0.0007\r\n        newShipProduct(0,  100000000000000000,  1000000000000000); // 0.10, 0.0010\r\n        newShipProduct(0,  100000000000000000,  1000000000000000); // 0.10, 0.0010\r\n        newShipProduct(0,  300000000000000000,  3000000000000000); // 0.30, 0.0030\r\n        newShipProduct(0,  300000000000000000,  3000000000000000); // 0.30, 0.0030\r\n        newShipProduct(0,  500000000000000000,  5000000000000000); // 0.50, 0.0050\r\n        newShipProduct(0,  500000000000000000,  5000000000000000); // 0.50, 0.0050\r\n        newShipProduct(0,  700000000000000000,  7000000000000000); // 0.70, 0.0070\r\n        newShipProduct(0,  700000000000000000,  7000000000000000); // 0.70, 0.0070\r\n        newShipProduct(0,  750000000000000000,  7500000000000000); // 0.75, 0.0075\r\n        newShipProduct(0, 1000000000000000000, 10000000000000000); // 1.00, 0.0100\r\n        newShipProduct(0, 2300000000000000000, 23000000000000000); // 2.30, 0.0230\r\n    }\r\n    \r\n    uint64 public newIdShip = 0; // The next ID for the new ship\r\n    uint16 public newModelShipProduct = 0; // The next model when creating ships\r\n    mapping (uint64 => ShipEntity) public ships; // The storage \r\n    mapping (uint16 => ShipProduct) shipProducts;\r\n    mapping (address => uint64[]) shipOwners;\r\n    mapping (address => uint) balances;\r\n    \r\n    function newShipProduct (uint16 _class, uint256 _price, uint256 _earning) private {\r\n        shipProducts[newModelShipProduct++] = ShipProduct(_class, _price, _price, _earning, 0);\r\n        \r\n        // EventProduct (newModelShipProduct-1, _class, _price, _earning, now);\r\n    }\r\n    \r\n    function cashOut () public payable { // shouldnt be payable\r\n        uint _balance = balances[msg.sender];\r\n        \r\n        for (uint64 index=0; index<shipOwners[msg.sender].length; index++) {\r\n            uint64 id = shipOwners[msg.sender][index]; // entity id\r\n            uint16 model = ships[id].model; // product model id\r\n            \r\n            _balance += shipProducts[model].earning * (shipProducts[model].amount - ships[id].lastCashoutIndex);\r\n\r\n            ships[id].lastCashoutIndex = shipProducts[model].amount;\r\n        }\r\n        \r\n        require (this.balance >= _balance); // Checking if this contract has enought money to pay\r\n        \r\n        balances[msg.sender] = 0;\r\n        msg.sender.transfer(_balance);\r\n        \r\n        EventCashOut (msg.sender, _balance);\r\n        return;\r\n    }\r\n    \r\n    function buyShip (uint16 _shipModel) public payable {\r\n        require (msg.value >= shipProducts[_shipModel].currentPrice); //value is higher than price\r\n        require (shipOwners[msg.sender].length <= 10); // max 10 ships allowed per player\r\n\r\n        if (msg.value > shipProducts[_shipModel].currentPrice){\r\n            // If player payed more, put the rest amount of money on his balance\r\n            balances[msg.sender] += msg.value - shipProducts[_shipModel].currentPrice;\r\n        }\r\n        \r\n        shipProducts[_shipModel].currentPrice += shipProducts[_shipModel].earning;\r\n    \r\n        ships[newIdShip++] = ShipEntity(_shipModel, msg.sender, ++shipProducts[_shipModel].amount, false, 0, 0);\r\n\r\n        shipOwners[msg.sender].push(newIdShip-1);\r\n\r\n        // After all owners of the same type of ship got their earnings, admins get the amount which remains and no one need it\r\n        // Basically, it is the start price of the ship.\r\n        balances[owner] += shipProducts[_shipModel].startPrice;\r\n        \r\n        EventBuyShip (msg.sender, _shipModel, newIdShip-1);\r\n        return;\r\n    }\r\n    \r\n    // Management\r\n    function newShip (uint16 _class, uint256 _price, uint256 _earning) public {\r\n        require (owner == msg.sender);\r\n        \r\n        shipProducts[newModelShipProduct++] = ShipProduct(_class, _price, _price, _earning, 0);\r\n    }\r\n    \r\n    function changeOwner(address _newOwner) public {\r\n        require (owner == msg.sender);\r\n        \r\n        owner = _newOwner;\r\n    }\r\n    \r\n    // Battle Functions\r\n    \r\n    uint battleStake = 50000000000000000; // 0.05\r\n    uint battleFee = 5000000000000000; // 0.005 or 5%\r\n    \r\n    uint nonce = 0;\r\n    function rand(uint min, uint max) public returns (uint){\r\n        nonce++;\r\n        return uint(sha3(nonce+uint256(block.blockhash(block.number-1))))%(min+max+1)-min;\r\n    }\r\n    \r\n    function addToBattle(uint64 _id) public payable {\r\n        require (msg.value == battleStake); // must pay exactly the battle stake\r\n        require (msg.sender == ships[_id].owner); // must be the owner\r\n        \r\n        ships[_id].battle = true;\r\n        \r\n        EventAddToBattle(msg.sender, _id);\r\n    }\r\n    function removeFromBattle(uint64 _id) public {\r\n        require (msg.sender == ships[_id].owner); // must be the owner\r\n        \r\n        ships[_id].battle = false;\r\n        balances[msg.sender] += battleStake;\r\n        \r\n        EventRemoveFromBattle(msg.sender, _id);\r\n    }\r\n    \r\n    function battle(uint64 _id, uint64 _idToAttack) public payable {\r\n        require (msg.sender == ships[_id].owner); // must be the owner\r\n        require (msg.value == battleStake); // must pay exactly the battle stake\r\n        require (ships[_idToAttack].battle == true); // ship to attack must be in battle mode\r\n        require (ships[_id].battle == false); // attacking ship must not be offered for battle\r\n        \r\n        uint randNumber = rand(0,1);\r\n        \r\n        if (randNumber == 1) {\r\n            ships[_id].battleWins++;\r\n            ships[_idToAttack].battleLosses++;\r\n            \r\n            balances[ships[_id].owner] += (battleStake * 2) - battleFee;\r\n            \r\n            EventBattle(msg.sender, _id, _idToAttack, _id);\r\n            \r\n        } else {\r\n            ships[_id].battleLosses++;\r\n            ships[_idToAttack].battleWins++;\r\n            \r\n            balances[ships[_idToAttack].owner] += (battleStake * 2) - battleFee;\r\n            \r\n            EventBattle(msg.sender, _id, _idToAttack, _idToAttack);\r\n        }\r\n        \r\n        balances[owner] += battleFee;\r\n        \r\n        ships[_idToAttack].battle = false;\r\n    }\r\n    \r\n    // UI Functions\r\n    function getPlayerShipModelById(uint64 _id) public constant returns (uint16) {\r\n        return ships[_id].model;\r\n    }\r\n    function getPlayerShipOwnerById(uint64 _id) public constant returns (address) {\r\n        return ships[_id].owner;\r\n    }\r\n    function getPlayerShipBattleById(uint64 _id) public constant returns (bool) {\r\n        return ships[_id].battle;\r\n    }\r\n    function getPlayerShipBattleWinsById(uint64 _id) public constant returns (uint32) {\r\n        return ships[_id].battleWins;\r\n    }\r\n    function getPlayerShipBattleLossesById(uint64 _id) public constant returns (uint32) {\r\n        return ships[_id].battleLosses;\r\n    }\r\n    \r\n    function getPlayerShipCount(address _player) public constant returns (uint) {\r\n        return shipOwners[_player].length;\r\n    }\r\n    \r\n    function getPlayerShipModelByIndex(address _player, uint index) public constant returns (uint16) {\r\n        return ships[shipOwners[_player][index]].model;\r\n    }\r\n    \r\n    function getPlayerShips(address _player) public constant returns (uint64[]) {\r\n        return shipOwners[_player];\r\n    }\r\n    \r\n    function getPlayerBalance(address _player) public constant returns (uint256) {\r\n        uint _balance = balances[_player];\r\n        \r\n        for (uint64 index=0; index<shipOwners[_player].length; index++) {\r\n            uint64 id = shipOwners[_player][index]; // entity id\r\n            uint16 model = ships[id].model; // product model id\r\n\r\n            _balance += shipProducts[model].earning * (shipProducts[model].amount - ships[id].lastCashoutIndex);\r\n        }\r\n        \r\n        return _balance;\r\n    }\r\n    \r\n    function getShipProductClassByModel(uint16 _model) public constant returns (uint16) {\r\n        return shipProducts[_model].class;\r\n    }\r\n    function getShipProductStartPriceByModel(uint16 _model) public constant returns (uint256) {\r\n        return shipProducts[_model].startPrice;\r\n    }\r\n    function getShipProductCurrentPriceByModel(uint16 _model) public constant returns (uint256) {\r\n        return shipProducts[_model].currentPrice;\r\n    }\r\n    function getShipProductEarningByModel(uint16 _model) public constant returns (uint256) {\r\n        return shipProducts[_model].earning;\r\n    }\r\n    function getShipProductAmountByModel(uint16 _model) public constant returns (uint64) {\r\n        return shipProducts[_model].amount;\r\n    }\r\n    \r\n    function getShipProductCount() public constant returns (uint16) {\r\n        return newModelShipProduct;\r\n    }\r\n    function getShipCount() public constant returns (uint64) {\r\n        return newIdShip;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint64\"},{\"name\":\"_idToAttack\",\"type\":\"uint64\"}],\"name\":\"battle\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getShipCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_model\",\"type\":\"uint16\"}],\"name\":\"getShipProductAmountByModel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"addToBattle\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"getPlayerShipBattleLossesById\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"getPlayerShipCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_model\",\"type\":\"uint16\"}],\"name\":\"getShipProductClassByModel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newModelShipProduct\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_player\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPlayerShipModelByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"removeFromBattle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_class\",\"type\":\"uint16\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_earning\",\"type\":\"uint256\"}],\"name\":\"newShip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_shipModel\",\"type\":\"uint16\"}],\"name\":\"buyShip\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cashOut\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_model\",\"type\":\"uint16\"}],\"name\":\"getShipProductCurrentPriceByModel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"getPlayerShipBattleWinsById\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"getPlayerShips\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"min\",\"type\":\"uint256\"},{\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"rand\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_model\",\"type\":\"uint16\"}],\"name\":\"getShipProductEarningByModel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newIdShip\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getShipProductCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"getPlayerShipModelById\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"ships\",\"outputs\":[{\"name\":\"model\",\"type\":\"uint16\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"lastCashoutIndex\",\"type\":\"uint64\"},{\"name\":\"battle\",\"type\":\"bool\"},{\"name\":\"battleWins\",\"type\":\"uint32\"},{\"name\":\"battleLosses\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"getPlayerShipBattleById\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_model\",\"type\":\"uint16\"}],\"name\":\"getShipProductStartPriceByModel\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"getPlayerBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"getPlayerShipOwnerById\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EventCashOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"productID\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"shipID\",\"type\":\"uint64\"}],\"name\":\"EventBuyShip\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint64\"}],\"name\":\"EventAddToBattle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint64\"}],\"name\":\"EventRemoveFromBattle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"idToAttack\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"idWinner\",\"type\":\"uint64\"}],\"name\":\"EventBattle\",\"type\":\"event\"}]","ContractName":"EtherSpace","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8cf559bab799db74815f15cfdc4dd53e2ff881c04cc2bb939e64dbf015fc781d"}]}