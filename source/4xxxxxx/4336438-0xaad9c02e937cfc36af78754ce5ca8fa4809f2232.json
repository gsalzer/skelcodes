{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\n// ================= Ownable Contract start =============================\r\n/*\r\n * Ownable\r\n *\r\n * Base contract with an owner.\r\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n}\r\n// ================= Ownable Contract end ===============================\r\n\r\n// ================= Safemath Contract start ============================\r\n/* taking ideas from FirstBlood token */\r\ncontract SafeMath {\r\n\r\n  function safeAdd(uint256 x, uint256 y) internal returns(uint256) {\r\n    uint256 z = x + y;\r\n    assert((z >= x) && (z >= y));\r\n    return z;\r\n  }\r\n\r\n  function safeSubtract(uint256 x, uint256 y) internal returns(uint256) {\r\n    assert(x >= y);\r\n    uint256 z = x - y;\r\n    return z;\r\n  }\r\n\r\n  function safeMult(uint256 x, uint256 y) internal returns(uint256) {\r\n    uint256 z = x * y;\r\n    assert((x == 0)||(z/x == y));\r\n    return z;\r\n  }\r\n}\r\n// ================= Safemath Contract end ==============================\r\n\r\n// ================= ERC20 Token Contract start =========================\r\n/*\r\n * ERC20 interface\r\n * see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function allowance(address owner, address spender) constant returns (uint);\r\n\r\n  function transfer(address to, uint value) returns (bool ok);\r\n  function transferFrom(address from, address to, uint value) returns (bool ok);\r\n  function approve(address spender, uint value) returns (bool ok);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n  event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n// ================= ERC20 Token Contract end ===========================\r\n\r\n// ================= Standard Token Contract start ======================\r\ncontract StandardToken is ERC20, SafeMath {\r\n\r\n  /**\r\n  * @dev Fix for the ERC20 short address attack.\r\n   */\r\n  modifier onlyPayloadSize(uint size) {\r\n    require(msg.data.length >= size + 4) ;\r\n    _;\r\n  }\r\n\r\n  mapping(address => uint) balances;\r\n  mapping (address => mapping (address => uint)) allowed;\r\n\r\n  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32)  returns (bool success){\r\n    balances[msg.sender] = safeSubtract(balances[msg.sender], _value);\r\n    balances[_to] = safeAdd(balances[_to], _value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) returns (bool success) {\r\n    var _allowance = allowed[_from][msg.sender];\r\n\r\n    balances[_to] = safeAdd(balances[_to], _value);\r\n    balances[_from] = safeSubtract(balances[_from], _value);\r\n    allowed[_from][msg.sender] = safeSubtract(_allowance, _value);\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function balanceOf(address _owner) constant returns (uint balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  function approve(address _spender, uint _value) returns (bool success) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) constant returns (uint remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n}\r\n// ================= Standard Token Contract end ========================\r\n\r\n// ================= Pausable Token Contract start ======================\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n  * @dev modifier to allow actions only when the contract IS paused\r\n  */\r\n  modifier whenNotPaused() {\r\n    require (!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n  * @dev modifier to allow actions only when the contract IS NOT paused\r\n  */\r\n  modifier whenPaused {\r\n    require (paused) ;\r\n    _;\r\n  }\r\n\r\n  /**\r\n  * @dev called by the owner to pause, triggers stopped state\r\n  */\r\n  function pause() onlyOwner whenNotPaused returns (bool) {\r\n    paused = true;\r\n    Pause();\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @dev called by the owner to unpause, returns to normal state\r\n  */\r\n  function unpause() onlyOwner whenPaused returns (bool) {\r\n    paused = false;\r\n    Unpause();\r\n    return true;\r\n  }\r\n}\r\n// ================= Pausable Token Contract end ========================\r\n\r\n// ================= IcoToken  start =======================\r\ncontract IcoToken is SafeMath, StandardToken, Pausable {\r\n  string public name;\r\n  string public symbol;\r\n  uint256 public decimals;\r\n  string public version;\r\n  address public icoContract;\r\n\r\n\r\n  function IcoToken(\r\n    string _name,\r\n    string _symbol,\r\n    uint256 _decimals,\r\n    string _version\r\n  )\r\n  {\r\n    name = _name;\r\n    symbol = _symbol;\r\n    decimals = _decimals;\r\n    version = _version;\r\n  }\r\n\r\n  function transfer(address _to, uint _value) whenNotPaused returns (bool success) {\r\n    return super.transfer(_to,_value);\r\n  }\r\n\r\n  function approve(address _spender, uint _value) whenNotPaused returns (bool success) {\r\n    return super.approve(_spender,_value);\r\n  }\r\n\r\n  function balanceOf(address _owner) constant returns (uint balance) {\r\n    return super.balanceOf(_owner);\r\n  }\r\n\r\n  function setIcoContract(address _icoContract) onlyOwner {\r\n    if (_icoContract != address(0)) {\r\n      icoContract = _icoContract;\r\n    }\r\n  }\r\n\r\n  function sell(address _recipient, uint256 _value) whenNotPaused returns (bool success) {\r\n      assert(_value > 0);\r\n      require(msg.sender == icoContract);\r\n\r\n      balances[_recipient] += _value;\r\n      totalSupply += _value;\r\n\r\n      Transfer(0x0, owner, _value);\r\n      Transfer(owner, _recipient, _value);\r\n      return true;\r\n  }\r\n\r\n  function issue(address _recipient, uint256 _value) whenNotPaused onlyOwner returns (bool success) {\r\n      assert(_value > 0);\r\n      _value = _value * 10**decimals;\r\n\r\n      balances[_recipient] += _value;\r\n      totalSupply += _value;\r\n\r\n      Transfer(0x0, owner, _value);\r\n      Transfer(owner, _recipient, _value);\r\n      return true;\r\n  }\r\n\r\n}\r\n// ================= Ico Token Contract end =======================\r\n\r\n// ================= Actual Sale Contract Start ====================\r\ncontract IcoContract is SafeMath, Pausable {\r\n  IcoToken public ico;\r\n\r\n  address public ethFundDeposit;\r\n  address public icoAddress;\r\n\r\n  uint256 public fundingStartTime;\r\n  uint256 public minContribution;\r\n\r\n  uint256 public tokenCreationCap;\r\n  uint256 public totalSupply;\r\n\r\n  bool public isFinalized;\r\n  uint256 public tokenExchangeRate;\r\n\r\n  event MintICO(address from, address to, uint256 val);\r\n\r\n  function CreateICO(address to, uint256 val) internal returns (bool success) {\r\n    MintICO(0x0, to, val);\r\n    return ico.sell(to, val);\r\n  }\r\n\r\n  function IcoContract(\r\n    address _ethFundDeposit,\r\n    address _icoAddress,\r\n    uint256 _fundingStartTime,\r\n    uint256 _tokenExchangeRate,\r\n    uint256 _tokenCreationCap,\r\n    uint256 _minContribution\r\n  )\r\n  {\r\n    ethFundDeposit = _ethFundDeposit;\r\n    icoAddress = _icoAddress;\r\n    fundingStartTime = _fundingStartTime;\r\n    tokenExchangeRate = _tokenExchangeRate;\r\n    tokenCreationCap = _tokenCreationCap;\r\n    minContribution = _minContribution;\r\n    ico = IcoToken(icoAddress);\r\n    isFinalized = false;\r\n  }\r\n\r\n  function () payable {    \r\n    createTokens(msg.sender, msg.value);\r\n  }\r\n\r\n  /// @dev Accepts ether and creates new ICO tokens.\r\n  function createTokens(address _beneficiary, uint256 _value) internal whenNotPaused {\r\n    require (tokenCreationCap > totalSupply);\r\n    require (now >= fundingStartTime);\r\n    require (_value >= minContribution);\r\n    require (!isFinalized);\r\n\r\n    uint256 tokens = safeMult(_value, tokenExchangeRate);\r\n    uint256 checkedSupply = safeAdd(totalSupply, tokens);\r\n\r\n    if (tokenCreationCap < checkedSupply) {        \r\n      uint256 tokensToAllocate = safeSubtract(tokenCreationCap, totalSupply);\r\n      uint256 tokensToRefund   = safeSubtract(tokens, tokensToAllocate);\r\n      totalSupply = tokenCreationCap;\r\n      uint256 etherToRefund = tokensToRefund / tokenExchangeRate;\r\n\r\n      require(CreateICO(_beneficiary, tokensToAllocate));\r\n      msg.sender.transfer(etherToRefund);\r\n      ethFundDeposit.transfer(this.balance);\r\n      return;\r\n    }\r\n\r\n    totalSupply = checkedSupply;\r\n\r\n    require(CreateICO(_beneficiary, tokens)); \r\n    ethFundDeposit.transfer(this.balance);\r\n  }\r\n\r\n  /// @dev Ends the funding period and sends the ETH home\r\n  function finalize() external onlyOwner {\r\n    require (!isFinalized);\r\n    // move to operational\r\n    isFinalized = true;\r\n    ethFundDeposit.transfer(this.balance);\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingStartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ico\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCreationCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFinalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ethFundDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ethFundDeposit\",\"type\":\"address\"},{\"name\":\"_icoAddress\",\"type\":\"address\"},{\"name\":\"_fundingStartTime\",\"type\":\"uint256\"},{\"name\":\"_tokenExchangeRate\",\"type\":\"uint256\"},{\"name\":\"_tokenCreationCap\",\"type\":\"uint256\"},{\"name\":\"_minContribution\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"MintICO\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}]","ContractName":"IcoContract","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000de52e080bf8acca81d3d04d1f2ca2f7ef39b48d00000000000000000000000052e34238bacb8730d4804637891c87656b5407d50000000000000000000000000000000000000000000000000000000059a6000000000000000000000000000000000000000000000000000000000000000927c0000000000000000000000000000000000000000001f04ef12cb04cf158000000000000000000000000000000000000000000000000000000016345785d8a0000","Library":"","SwarmSource":"bzzr://284d7a906fd7695f33850ea8f871b26e81263ea97dc5ef7b42591a43f890b907"}]}