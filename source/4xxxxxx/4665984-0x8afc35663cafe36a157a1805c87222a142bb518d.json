{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n// ERC20 Interface: https://github.com/ethereum/EIPs/issues/20\r\ncontract ERC20 {\r\n   function  transfer(address _to, uint256 _value) returns (bool success);\r\n  function balanceOf(address _owner) constant returns (uint256 balance);\r\n}\r\n\r\n\r\ncontract REDISale {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    address             public admin;\r\n    uint                public raisedWei;\r\n    uint                public rate; \r\n    bool                public haltSale = false; \r\n    bool                private enableTransfer = true; \r\n\r\n\r\n    ERC20               public token;\r\n    \r\n    address wallet ; \r\n    \r\n    function REDISale(){\r\n        token = ERC20(0x4d5c907a460B0844cc99b95003819c2AA2b2b77A);\r\n        wallet   = 0x03C7d48F9710AE7c706e2e8F95F293Fe39e928C4;\r\n        rate  =  400000; \r\n        admin = msg.sender;\r\n    }\r\n\r\n    function setHaltSale( bool halt ) {\r\n        require( msg.sender == admin );\r\n        haltSale = halt;\r\n    }\r\n\r\n    function seEnableTransfer( bool _transfer ) {\r\n        require( msg.sender == admin );\r\n        enableTransfer = _transfer; \r\n    }    \r\n\r\n    function seIcoAddress( address _wallet) {\r\n        require( msg.sender == admin );\r\n        wallet = _wallet ;\r\n    }    \r\n\r\n    function drain(uint _amount) {\r\n        require( msg.sender == admin );\r\n        if ( _amount == 0 ){\r\n            admin.transfer(this.balance);\r\n        }else{\r\n            token.transfer(admin,_amount);\r\n        }\r\n    }\r\n    \r\n    function sendTo(address _to, uint _amount){\r\n        require( msg.sender == admin );\r\n\r\n        token.transfer(_to, _amount);\r\n  \r\n    }\r\n    \r\n    function() payable {\r\n        buy( msg.sender );\r\n    }\r\n\r\n    event Buy( address _buyer, uint _tokens, uint _payedWei );\r\n    function buy( address recipient ) payable returns(uint){\r\n\r\n        require( ! haltSale );\r\n        uint weiPayment =  msg.value ;\r\n        require( weiPayment > 0 );\r\n        raisedWei = raisedWei.add( weiPayment );\r\n        \r\n   \r\n        if ( raisedWei > 185000 * 10 ** 18 ){\r\n            rate = 40000; \r\n        }else if ( raisedWei > 145000 * 10 ** 18){\r\n            rate = 50000; \r\n        }else if ( raisedWei >  75000 * 10 ** 18 ){\r\n            rate = 80000; \r\n        }\r\n        \r\n    \r\n        uint recievedTokens = weiPayment.mul( rate );\r\n        assert( token.transfer( recipient, recievedTokens ) );\r\n        Buy( recipient, recievedTokens, weiPayment );\r\n        if(enableTransfer){\r\n            wallet.transfer(msg.value);\r\n        }\r\n        return weiPayment;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_transfer\",\"type\":\"bool\"}],\"name\":\"seEnableTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"seIcoAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"haltSale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"halt\",\"type\":\"bool\"}],\"name\":\"setHaltSale\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"raisedWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"drain\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_payedWei\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"}]","ContractName":"REDISale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b2b504f98885a8ae161b612afc073aae8dabae9e431cc1ac77446d5ca3760319"}]}