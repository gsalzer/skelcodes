{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.18;\r\n\r\n/*\r\n\tPer Annum is an ERC20 token which can be mined during the first two weeks of each year for 120 years \r\n\tstarting in 2018. The mining reward starts at 100 tokens and is halved yearly. The maximum mining\r\n\treward starts at 10,000,000 and is halved every five years. The contract owner was granted 40,000\r\n\ttokens on deployment of the contract, and any unmined tokens at the end of the mining period are \r\n\tsent to the owner. 20,000 of the initial owner's supply will be given away in order to promote the\r\n\ttoken. \r\n\r\n\t\r\n\r\n\r\n\tanonymous proof of authorship - 4612370A4B007CE4AE5AEF472642F1DE55C63CEB53319C457EF1ED83F7441EA6\r\n\tsignature - 9927A75EF7C89D3C028C8BA7A1B48CDD515ACED7A2BC564A099D452D3B3FFE89\r\n*/\r\ncontract Per_Annum{\r\n\tstring public symbol = \"ANNUM\";\r\n\tstring public name = \"Per Annum\";\r\n\tuint8 public constant decimals = 8;\r\n\tuint256 _totalSupply = 0;\r\n\taddress contract_owner;\r\n\tuint256 current_remaining = 0; //to check for left over tokens after mining period\r\n\tuint256 _maxTotalSupply = 10000000000000000; //one hundred million\r\n\tuint256 _miningReward = 10000000000; //100 ANNUM rewarded on successful mine halved every 5 years \r\n\tuint256 _maxMiningReward = 1000000000000000; //10,000,000 ANNUM - To be halved every 5 years\r\n\tuint256 _year = 1514782800; // 01/01/2018 12:00AM EST\r\n\tuint256 _year_count = 2018; //contract starts in 2018 first leap year is 2020\r\n\tuint256 _currentMined = 0; //mined for the year\r\n\r\n\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    mapping(address => uint256) balances;\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n\r\n    //initialize contract - set owner and give owner 20,000 tokens\r\n    function Per_Annum(){\r\n    \t_totalSupply += 4000000000000;\r\n    \t_currentMined += 4000000000000;\t\r\n    \tcontract_owner = msg.sender;\r\n    \tbalances[msg.sender] += 4000000000000;\r\n    \tTransfer(this,msg.sender,4000000000000);\r\n    }\r\n\r\n\tfunction totalSupply() constant returns (uint256) {        \r\n\t\treturn _totalSupply;\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) constant returns (uint256 balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n\r\n\r\n\tfunction transfer(address _to, uint256 _amount) returns (bool success) {\r\n\t\tif (balances[msg.sender] >= _amount \r\n\t\t\t&& _amount > 0\r\n\t\t\t&& balances[_to] + _amount > balances[_to]) {\r\n\t\t\tbalances[msg.sender] -= _amount;\r\n\t\t\tbalances[_to] += _amount;\r\n\t\t\tTransfer(msg.sender, _to, _amount);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n            return false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction transferFrom(\r\n\t\taddress _from,\r\n\t\taddress _to,\r\n\t\tuint256 _amount\r\n\t) returns (bool success) {\r\n\t\tif (balances[_from] >= _amount\r\n\t\t\t&& allowed[_from][msg.sender] >= _amount\r\n\t\t\t&& _amount > 0\r\n\t\t\t&& balances[_to] + _amount > balances[_to]) {\r\n\t\t\tbalances[_from] -= _amount;\r\n\t\t\tallowed[_from][msg.sender] -= _amount;\r\n\t\t\tbalances[_to] += _amount;\r\n\t\t\tTransfer(_from, _to, _amount);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint256 _amount) returns (bool success) {\r\n\t\tallowed[msg.sender][_spender] = _amount;\r\n\t\tApproval(msg.sender, _spender, _amount);\r\n\t\treturn true;\r\n\t}\r\n\t//is_leap_year sets year to 12AM on new years day of the current year and sets the mining rewards\r\n\tfunction is_leap_year() private{\r\n\t\tif(now >= _year + 31557600){\t\r\n\t\t\t_year = _year + 31557600;\t//changes to new year, 1 day early on leap year, in seconds\r\n\t\t\t_year_count = _year_count + 1; //changes to new year in years\r\n\t\t\t_currentMined = 0;\t//resets for current years supply\r\n\t\t\t_miningReward = _miningReward/2; //halved yearly starting at 100\r\n\t\t\tif(((_year_count-2018)%5 == 0) && (_year_count != 2018)){\r\n\t\t\t\t_maxMiningReward = _maxMiningReward/2; //halved every 5th year\r\n\t\t\t\t\r\n\r\n\t\t\t}\r\n\t\t\tif((_year_count%4 == 1) && ((_year_count-1)%100 != 0)){\r\n\t\t\t\t_year = _year + 86400;\t//adds a day following a leap year\r\n\t\t\t\t\r\n\r\n\t\t\t}\r\n\t\t\telse if((_year_count-1)%400 == 0){\r\n\t\t\t\t_year = _year + 86400; //leap year day added on last day of leap year\r\n\r\n\t\t\t}\r\n \r\n\t\t}\t\r\n\r\n\t}\r\n\r\n\r\n\tfunction date_check() private returns(bool check_newyears){\r\n\r\n\t\tis_leap_year(); //set the year variables and rewards\r\n\t\t//check if date is new years day\r\n\t    if((_year <= now) && (now <= (_year + 1209600))){\r\n\t\t\treturn true;\t//it is the first two weeks of the new year\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn false; //it is not the first two weeks of the new year\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction mine() returns(bool success){\r\n\t\tif(date_check() != true){\r\n\t\t\tcurrent_remaining = _maxMiningReward - _currentMined; \r\n\t\t\tif((current_remaining > 0) && (_currentMined != 0)){\r\n\t\t\t\t_currentMined += current_remaining;\r\n\t\t\t\tbalances[contract_owner] += current_remaining;\r\n\t\t\t\tTransfer(this, contract_owner, current_remaining);\r\n\t\t\t\tcurrent_remaining = 0;\r\n\t\t\t}\r\n\t\t\trevert();\r\n\t\t}\r\n\t\telse if((_currentMined < _maxMiningReward) && (_maxMiningReward - _currentMined >= _miningReward)){\r\n\t\t\tif((_totalSupply+_miningReward) <= _maxTotalSupply){\r\n\t\t\t\t//send reward if there are tokens available and it is new years day\r\n\t\t\t\tbalances[msg.sender] += _miningReward;\t\r\n\t\t\t\t_currentMined += _miningReward;\r\n\t\t\t\t_totalSupply += _miningReward;\r\n\t\t\t\tTransfer(this, msg.sender, _miningReward); \r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction MaxTotalSupply() constant returns(uint256)\r\n\t{\r\n\t\treturn _maxTotalSupply;\r\n\t}\r\n\t\r\n\tfunction MiningReward() constant returns(uint256)\r\n\t{\r\n\t\treturn _miningReward;\r\n\t}\r\n\t\r\n\tfunction MaxMiningReward() constant returns(uint256)\r\n\t{\r\n\t\treturn _maxMiningReward;\r\n\t}\r\n\tfunction MinedThisYear() constant returns(uint256)\r\n\t{\r\n\t\treturn _currentMined; //amount mined so far this year\r\n\t}\r\n\r\n\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MinedThisYear\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MaxMiningReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MiningReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mine\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MaxTotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Per_Annum","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://82c3269af1fb9801cd23bdb6faeb7c410f58aa77e92c0238afa8750116f5cb69"}]}