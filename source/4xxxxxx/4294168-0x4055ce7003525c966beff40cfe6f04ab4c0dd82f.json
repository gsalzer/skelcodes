{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\n\r\n// @address 0x4055ce7003525c966beff40cfe6f04ab4c0dd82f\r\n// The implementation for the Game ICO smart contract was inspired by\r\n// the Ethereum token creation tutorial, the FirstBlood token, and the BAT token.\r\n\r\n///////////////\r\n// SAFE MATH //\r\n///////////////\r\n\r\ncontract SafeMath {\r\n\r\n    function safeAdd(uint256 x, uint256 y) internal returns(uint256) {\r\n        uint256 z = x + y;\r\n        require((z >= x) && (z >= y));\r\n        return z;\r\n    }\r\n\r\n    function safeSubtract(uint256 x, uint256 y) internal returns(uint256) {\r\n        require(x >= y);\r\n        uint256 z = x - y;\r\n        return z;\r\n    }\r\n\r\n    function safeMult(uint256 x, uint256 y) internal returns(uint256) {\r\n        uint256 z = x * y;\r\n        require((x == 0)||(z/x == y));\r\n        return z;\r\n    }\r\n\r\n}\r\n\r\n\r\n////////////////////\r\n// STANDARD TOKEN //\r\n////////////////////\r\n\r\ncontract Token {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n/*  ERC 20 token */\r\ncontract StandardToken is Token {\r\n\r\n    mapping (address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        if (balances[msg.sender] >= _value && _value > 0) {\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n            balances[_to] += _value;\r\n            balances[_from] -= _value;\r\n            allowed[_from][msg.sender] -= _value;\r\n            Transfer(_from, _to, _value);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n}\r\n\r\n/////////////////////\r\n//GAME.COM ICO TOKEN//\r\n/////////////////////\r\n\r\ncontract GameICO is StandardToken, SafeMath {\r\n    // Descriptive properties\r\n    string public constant name = \"Game.com Token\";\r\n    string public constant symbol = \"GTC\";\r\n    uint256 public constant decimals = 18;\r\n    string public version = \"1.0\";\r\n\r\n    // Account for ether proceed.\r\n    address public etherProceedsAccount = 0x0;\r\n    address public multiWallet = 0x0;\r\n\r\n    // These params specify the start, end, min, and max of the sale.\r\n    bool public isFinalized;\r\n\r\n    uint256 public window0TotalSupply = 0;\r\n    uint256 public window1TotalSupply = 0;\r\n    uint256 public window2TotalSupply = 0;\r\n    uint256 public window3TotalSupply = 0;\r\n\r\n    uint256 public window0StartTime = 0;\r\n    uint256 public window0EndTime = 0;\r\n    uint256 public window1StartTime = 0;\r\n    uint256 public window1EndTime = 0;\r\n    uint256 public window2StartTime = 0;\r\n    uint256 public window2EndTime = 0;\r\n    uint256 public window3StartTime = 0;\r\n    uint256 public window3EndTime = 0;\r\n\r\n    // setting the capacity of every part of ico\r\n    uint256 public preservedTokens = 1300000000 * 10**decimals;\r\n    uint256 public window0TokenCreationCap = 200000000 * 10**decimals;\r\n    uint256 public window1TokenCreationCap = 200000000 * 10**decimals;\r\n    uint256 public window2TokenCreationCap = 300000000 * 10**decimals;\r\n    uint256 public window3TokenCreationCap = 0 * 10**decimals;\r\n\r\n    // Setting the exchange rate for the ICO.\r\n    uint256 public window0TokenExchangeRate = 5000;\r\n    uint256 public window1TokenExchangeRate = 4000;\r\n    uint256 public window2TokenExchangeRate = 3000;\r\n    uint256 public window3TokenExchangeRate = 0;\r\n\r\n    uint256 public preICOLimit = 0;\r\n\r\n    // Events for logging refunds and token creation.\r\n    //event LogRefund(address indexed _to, uint256 _value);\r\n    event CreateGameIco(address indexed _to, uint256 _value);\r\n    event PreICOTokenPushed(address indexed _buyer, uint256 _amount);\r\n\r\n    // constructor\r\n    function GameICO()\r\n    {\r\n        totalSupply =  2000000000 * 10**decimals;\r\n        isFinalized             = false;\r\n        etherProceedsAccount    = msg.sender;\r\n    }\r\n    function adjustTime(\r\n    uint256 _window0StartTime, uint256 _window0EndTime,\r\n    uint256 _window1StartTime, uint256 _window1EndTime,\r\n    uint256 _window2StartTime, uint256 _window2EndTime)\r\n    {\r\n        require(msg.sender == etherProceedsAccount);\r\n        window0StartTime = _window0StartTime;\r\n        window0EndTime = _window0EndTime;\r\n        window1StartTime = _window1StartTime;\r\n        window1EndTime = _window1EndTime;\r\n        window2StartTime = _window2StartTime;\r\n        window2EndTime = _window2EndTime;\r\n    }\r\n    function adjustSupply(uint256 _window0TotalSupply, uint256 _window1TotalSupply, uint256 _window2TotalSupply){\r\n        require(msg.sender == etherProceedsAccount);\r\n        window0TotalSupply = _window0TotalSupply * 10**decimals;\r\n        window1TotalSupply = _window1TotalSupply * 10**decimals;\r\n        window2TotalSupply = _window2TotalSupply * 10**decimals;\r\n    }\r\n    function adjustCap(uint256 _preservedTokens, uint256 _window0TokenCreationCap, uint256 _window1TokenCreationCap, uint256 _window2TokenCreationCap){\r\n        require(msg.sender == etherProceedsAccount);\r\n        preservedTokens = _preservedTokens * 10**decimals;\r\n        window0TokenCreationCap = _window0TokenCreationCap * 10**decimals;\r\n        window1TokenCreationCap = _window1TokenCreationCap * 10**decimals;\r\n        window2TokenCreationCap = _window2TokenCreationCap * 10**decimals;\r\n    }\r\n    function adjustRate(uint256 _window0TokenExchangeRate, uint256 _window1TokenExchangeRate, uint256 _window2TokenExchangeRate){\r\n        require(msg.sender == etherProceedsAccount);\r\n        window0TokenExchangeRate = _window0TokenExchangeRate;\r\n        window1TokenExchangeRate = _window1TokenExchangeRate;\r\n        window2TokenExchangeRate = _window2TokenExchangeRate;\r\n    }\r\n    function setProceedsAccount(address _newEtherProceedsAccount) {\r\n        require(msg.sender == etherProceedsAccount);\r\n        etherProceedsAccount = _newEtherProceedsAccount;\r\n    }\r\n    function setMultiWallet(address _newWallet){\r\n        require(msg.sender == etherProceedsAccount);\r\n        multiWallet = _newWallet;\r\n    }\r\n    function setPreICOLimit(uint256 _preICOLimit){\r\n        require(msg.sender == etherProceedsAccount);\r\n        preICOLimit = _preICOLimit;\r\n    }\r\n\r\n    function preICOPush(address buyer, uint256 amount) {\r\n        require(msg.sender == etherProceedsAccount);\r\n\r\n        uint256 tokens = 0;\r\n        uint256 checkedSupply = 0;\r\n        checkedSupply = safeAdd(window0TotalSupply, amount);\r\n        require(window0TokenCreationCap >= checkedSupply);\r\n        balances[buyer] += tokens;\r\n        window0TotalSupply = checkedSupply;\r\n        PreICOTokenPushed(buyer, amount);\r\n    }\r\n\r\n    function () payable {\r\n        create();\r\n    }\r\n    function create() internal{\r\n        require(!isFinalized);\r\n        require(msg.value >= 0.001 ether);\r\n        uint256 tokens = 0;\r\n        uint256 checkedSupply = 0;\r\n\r\n        if(window0StartTime != 0 && window0EndTime != 0 && time() >= window0StartTime && time() <= window0EndTime){\r\n            if(preICOLimit > 0){\r\n                require(msg.value >= preICOLimit);\r\n            }\r\n            tokens = safeMult(msg.value, window0TokenExchangeRate);\r\n            checkedSupply = safeAdd(window0TotalSupply, tokens);\r\n            require(window0TokenCreationCap >= checkedSupply);\r\n            balances[msg.sender] += tokens;\r\n            window0TotalSupply = checkedSupply;\r\n            CreateGameIco(msg.sender, tokens);\r\n        }else if(window1StartTime != 0 && window1EndTime!= 0 && time() >= window1StartTime && time() <= window1EndTime){\r\n            tokens = safeMult(msg.value, window1TokenExchangeRate);\r\n            checkedSupply = safeAdd(window1TotalSupply, tokens);\r\n            require(window1TokenCreationCap >= checkedSupply);\r\n            balances[msg.sender] += tokens;\r\n            window1TotalSupply = checkedSupply;\r\n            CreateGameIco(msg.sender, tokens);\r\n        }else if(window2StartTime != 0 && window2EndTime != 0 && time() >= window2StartTime && time() <= window2EndTime){\r\n            tokens = safeMult(msg.value, window2TokenExchangeRate);\r\n            checkedSupply = safeAdd(window2TotalSupply, tokens);\r\n            require(window2TokenCreationCap >= checkedSupply);\r\n            balances[msg.sender] += tokens;\r\n            window2TotalSupply = checkedSupply;\r\n            CreateGameIco(msg.sender, tokens);\r\n        }else{\r\n            require(false);\r\n        }\r\n\r\n    }\r\n\r\n    function time() internal returns (uint) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function today(uint startTime) internal returns (uint) {\r\n        return dayFor(time(), startTime);\r\n    }\r\n\r\n    function dayFor(uint timestamp, uint startTime) internal returns (uint) {\r\n        return timestamp < startTime ? 0 : safeSubtract(timestamp, startTime) / 24 hours + 1;\r\n    }\r\n\r\n    function withDraw(uint256 _value){\r\n        require(msg.sender == etherProceedsAccount);\r\n        if(multiWallet != 0x0){\r\n            if (!multiWallet.send(_value)) require(false);\r\n        }else{\r\n            if (!etherProceedsAccount.send(_value)) require(false);\r\n        }\r\n    }\r\n\r\n    function finalize() {\r\n        require(!isFinalized);\r\n        require(msg.sender == etherProceedsAccount);\r\n        isFinalized = true;\r\n        balances[etherProceedsAccount] += totalSupply- window0TotalSupply- window1TotalSupply - window2TotalSupply;\r\n        if(multiWallet != 0x0){\r\n            if (!multiWallet.send(this.balance)) require(false);\r\n        }else{\r\n            if (!etherProceedsAccount.send(this.balance)) require(false);\r\n        }\r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"window0TotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_window0TokenExchangeRate\",\"type\":\"uint256\"},{\"name\":\"_window1TokenExchangeRate\",\"type\":\"uint256\"},{\"name\":\"_window2TokenExchangeRate\",\"type\":\"uint256\"}],\"name\":\"adjustRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preservedTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window3EndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window3TotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_window0TotalSupply\",\"type\":\"uint256\"},{\"name\":\"_window1TotalSupply\",\"type\":\"uint256\"},{\"name\":\"_window2TotalSupply\",\"type\":\"uint256\"}],\"name\":\"adjustSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window2StartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withDraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window2TokenExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window2TokenCreationCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_preICOLimit\",\"type\":\"uint256\"}],\"name\":\"setPreICOLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window3TokenCreationCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window3StartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multiWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window2EndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"setMultiWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window1TotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_window0StartTime\",\"type\":\"uint256\"},{\"name\":\"_window0EndTime\",\"type\":\"uint256\"},{\"name\":\"_window1StartTime\",\"type\":\"uint256\"},{\"name\":\"_window1EndTime\",\"type\":\"uint256\"},{\"name\":\"_window2StartTime\",\"type\":\"uint256\"},{\"name\":\"_window2EndTime\",\"type\":\"uint256\"}],\"name\":\"adjustTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window1TokenCreationCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFinalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newEtherProceedsAccount\",\"type\":\"address\"}],\"name\":\"setProceedsAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window1TokenExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_preservedTokens\",\"type\":\"uint256\"},{\"name\":\"_window0TokenCreationCap\",\"type\":\"uint256\"},{\"name\":\"_window1TokenCreationCap\",\"type\":\"uint256\"},{\"name\":\"_window2TokenCreationCap\",\"type\":\"uint256\"}],\"name\":\"adjustCap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window1StartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window2TotalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"buyer\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"preICOPush\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window0StartTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window1EndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window3TokenExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window0TokenCreationCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window0EndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"preICOLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"window0TokenExchangeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etherProceedsAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"CreateGameIco\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"PreICOTokenPushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"GameICO","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d6bd493f9f5f1be2834e4614755cd5ce67e4c8bee64c5f0eafcf7f2d9b11057d"}]}