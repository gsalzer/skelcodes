{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract ERC20Interface {\r\n     function totalSupply() constant returns (uint256 supply);\r\n     function balanceOf(address _owner) constant returns (uint256 balance);\r\n     function transfer(address _to, uint256 _value) returns(bool);\r\n     function transferFrom(address _from, address _to, uint256 _value) returns(bool);\r\n     function approve(address _spender, uint256 _value) returns (bool success);\r\n     function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n     event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n     event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract StdToken is ERC20Interface {\r\n     mapping(address => uint256) balances;\r\n     mapping (address => mapping (address => uint256)) allowed;\r\n     uint public supply = 0;\r\n\r\n     function transfer(address _to, uint256 _value) returns(bool) {\r\n          require(balances[msg.sender] >= _value);\r\n          require(balances[_to] + _value > balances[_to]);\r\n\r\n          balances[msg.sender] -= _value;\r\n          balances[_to] += _value;\r\n\r\n          Transfer(msg.sender, _to, _value);\r\n          return true;\r\n     }\r\n\r\n     function transferFrom(address _from, address _to, uint256 _value) returns(bool){\r\n          require(balances[_from] >= _value);\r\n          require(allowed[_from][msg.sender] >= _value);\r\n          require(balances[_to] + _value > balances[_to]);\r\n\r\n          balances[_to] += _value;\r\n          balances[_from] -= _value;\r\n          allowed[_from][msg.sender] -= _value;\r\n\r\n          Transfer(_from, _to, _value);\r\n          return true;\r\n     }\r\n\r\n     function totalSupply() constant returns (uint256) {\r\n          return supply;\r\n     }\r\n\r\n     function balanceOf(address _owner) constant returns (uint256) {\r\n          return balances[_owner];\r\n     }\r\n\r\n     function approve(address _spender, uint256 _value) returns (bool) {\r\n          require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n\r\n          allowed[msg.sender][_spender] = _value;\r\n          Approval(msg.sender, _spender, _value);\r\n\r\n          return true;\r\n     }\r\n\r\n     function allowance(address _owner, address _spender) constant returns (uint256) {\r\n          return allowed[_owner][_spender];\r\n     }\r\n}\r\n\r\ncontract myToken is StdToken\r\n{\r\n    string public constant name = \"168 Token\";\r\n    string public constant symbol = \"168\";\r\n    uint public constant decimals = 18;\r\n    uint public constant TOKEN_SUPPLY_LIMIT = 1000000 * (1 ether / 1 wei);\r\n    uint public constant MANAGER_SUPPLY = 650000 * (1 ether / 1 wei);\r\n    uint public constant ICO_PRICE = 1000;     // per 1 Ether\r\n    address public tokenManager = 0;\r\n\r\n    modifier onlyTokenManager()\r\n    {\r\n        require(msg.sender==tokenManager);\r\n        _;\r\n    }\r\n\r\n    function myToken()\r\n    {\r\n        tokenManager = msg.sender;\r\n        balances[tokenManager] += MANAGER_SUPPLY;\r\n        supply += MANAGER_SUPPLY;\r\n    }\r\n\r\n    function buyTokens() public payable\r\n    {\r\n        require(msg.value >= ((1 ether / 1 wei) / 100));\r\n\r\n        uint newTokens = msg.value * ICO_PRICE;\r\n\r\n        require(supply + newTokens <= TOKEN_SUPPLY_LIMIT);\r\n\r\n        tokenManager.transfer(msg.value);\r\n\r\n        balances[msg.sender] += newTokens;\r\n        supply += newTokens;\r\n    }\r\n\r\n    function setTokenManager(address _mgr) public onlyTokenManager\r\n    {\r\n        tokenManager = _mgr;\r\n    }\r\n\r\n    function() payable\r\n    {\r\n        buyTokens();\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_SUPPLY_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mgr\",\"type\":\"address\"}],\"name\":\"setTokenManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ICO_PRICE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MANAGER_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"myToken","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f3a17a5202b0cc4fc74f7abd69d962289f9f7ab611e8ed22e7871cfbfce57a4f"}]}