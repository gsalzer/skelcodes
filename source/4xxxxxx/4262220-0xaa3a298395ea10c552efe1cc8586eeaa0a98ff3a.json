{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    require(newOwner != address(0));      \r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract BonusCalculator {\r\n    function getBonus() constant returns (uint);\r\n}\r\n\r\ncontract GoldeaBonusCalculator is BonusCalculator, Ownable {\r\n    uint public start;\r\n    uint public end;\r\n    uint constant period = 86400 * 7;\r\n    mapping (uint => uint8) bonuses;\r\n\r\n    function GoldeaBonusCalculator(uint256 _start, uint256 _end) {\r\n        start = _start;\r\n        end = _end;\r\n        bonuses[0] = 30;\r\n        bonuses[1] = 20;\r\n        bonuses[3] = 10;\r\n    }\r\n\r\n    function getBonus() constant returns (uint) {\r\n        assert(now > start);\r\n        assert(now < end);\r\n\r\n        uint week = (now - start) / period;\r\n        uint8 foundBonus = bonuses[week];\r\n        if (foundBonus != 0) {\r\n            return foundBonus;\r\n        } else {\r\n            return 5;\r\n        }\r\n    }\r\n\r\n    function setStart(uint256 _start) onlyOwner() {\r\n        start = _start;\r\n    }\r\n\r\n    function setEnd(uint256 _end) onlyOwner() {\r\n        end = _end;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"setEnd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBonus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_start\",\"type\":\"uint256\"}],\"name\":\"setStart\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_start\",\"type\":\"uint256\"},{\"name\":\"_end\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"GoldeaBonusCalculator","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000059B480800000000000000000000000000000000000000000000000000000000059DC0D80","Library":"","SwarmSource":"bzzr://30208146969c3dce2a60a25a2fbc78ffc24f77811b68f0586959e3743f60736e"}]}