{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n\r\nlibrary SafeMath {\r\n\tfunction times(uint256 x, uint256 y) internal returns (uint256) {\r\n\t\tuint256 z = x * y;\r\n\t\tassert(x == 0 || (z / x == y));\r\n\t\treturn z;\r\n\t}\r\n\r\n\tfunction minus(uint256 x, uint256 y) internal returns (uint256) {\r\n\t\tassert(y <= x);\r\n\t\treturn x - y;\r\n\t}\r\n\r\n\tfunction plus(uint256 x, uint256 y) internal returns (uint256) {\r\n\t\tuint256 z = x + y;\r\n\t\tassert(z >= x && z >= y);\r\n\t\treturn z;\r\n\t}\r\n}\r\n\r\n\r\ncontract ERC20Simplified {\r\n  function balanceOf(address who) constant returns (uint256);\r\n  function transfer(address to, uint256 value) returns (bool);\r\n}\r\n\r\n\r\ncontract AuctusPreSale {\r\n\tusing SafeMath for uint256;\r\n\t\r\n\tstruct TokenInfo {\r\n\t\tuint256 tokenAmount; \r\n\t\tuint256 weiInvested;\r\n\t}\r\n\t\r\n\taddress public owner;\r\n\taddress public multiSigWallet = 0xed62dbc89f22dae81013e48928ef4395fa19e51b;\r\n\t\r\n\tuint256 public startTime = 1507039200; \r\n\tuint256 public endTime = 1507298400; \r\n\t\r\n\tuint256 public minimumCap = 400 ether;\r\n\tuint256 public maximumCap = 90000 ether;\r\n\tuint256 public maximumIndividualCap = 10 ether;\r\n\t\r\n\tuint256 public basicPricePerEth = 2500;\r\n\t\r\n\tuint256 public tokenSold;\r\n\tuint256 public weiRaised;\r\n\t\r\n\tbool public preSaleHalted;\r\n\t\r\n\tmapping(address => TokenInfo) public balances;\r\n\tmapping(address => uint256) public whitelist;\r\n\t\r\n\tevent Buy(address indexed recipient, uint256 tokenAmount);\r\n\tevent Revoke(address indexed recipient, uint256 weiAmount);\r\n\tevent ListAddress(address indexed who, uint256 individualCap);\r\n\tevent Drain(uint256 weiAmount);\r\n\t\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tmodifier validPayload(uint256 size) { \r\n\t\trequire(msg.data.length >= (size + 4));\r\n\t\t_;\r\n\t}\r\n\t\r\n\tmodifier preSalePeriod() {\r\n\t\trequire(now >= startTime && now <= endTime && weiRaised < maximumCap);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tmodifier preSaleCompletedSuccessfully() {\r\n\t\trequire(weiRaised >= minimumCap && (now > endTime || weiRaised >= maximumCap));\r\n\t\t_;\r\n\t}\r\n\t\r\n\tmodifier preSaleFailed() {\r\n\t\trequire(weiRaised < minimumCap && now > endTime);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tmodifier isPreSaleNotHalted() {\r\n\t\trequire(!preSaleHalted);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tfunction AuctusPreSale() {\r\n\t\towner = msg.sender;\r\n\t}\r\n\t\r\n\tfunction getTokenAmount(address who) constant returns (uint256) {\r\n\t\treturn balances[who].tokenAmount;\r\n\t}\r\n\t\r\n\tfunction getWeiInvested(address who) constant returns (uint256) {\r\n\t\treturn balances[who].weiInvested;\r\n\t}\r\n\t\r\n\tfunction() \r\n\t\tpayable \r\n\t\tpreSalePeriod \r\n\t\tisPreSaleNotHalted \r\n\t{\r\n\t\trequire(balances[msg.sender].weiInvested < whitelist[msg.sender]);\r\n\t\t\r\n\t\tvar (weiToInvest, weiRemaining) = getValueToInvest();\r\n\t\t\r\n\t\tuint256 amountToReceive = weiToInvest.times(basicPricePerEth);\r\n\t\tbalances[msg.sender].tokenAmount = balances[msg.sender].tokenAmount.plus(amountToReceive);\r\n\t\tbalances[msg.sender].weiInvested = balances[msg.sender].weiInvested.plus(weiToInvest);\r\n\t\t\r\n\t\ttokenSold = tokenSold.plus(amountToReceive);\r\n\t\tweiRaised = weiRaised.plus(weiToInvest);\r\n\t\t\r\n\t\tif (weiRemaining > 0) {\r\n\t\t\tmsg.sender.transfer(weiRemaining);\r\n\t\t}\r\n\t\t\r\n\t\tBuy(msg.sender, amountToReceive);\r\n\t}\r\n\t\r\n\tfunction revoke() preSaleFailed {\r\n\t\tuint256 weiAmount = balances[msg.sender].weiInvested;\r\n\t\tassert(weiAmount > 0);\r\n\t\t\r\n\t\tbalances[msg.sender].weiInvested = 0;\r\n\t\tmsg.sender.transfer(weiAmount);\r\n\t\t\r\n\t\tRevoke(msg.sender, weiAmount);\r\n\t}\r\n\t\r\n\tfunction setPreSaleHalt(bool halted) onlyOwner {\r\n\t\tpreSaleHalted = halted;\r\n\t}\r\n\t\r\n\tfunction transferOwnership(address newOwner) \r\n\t\tonlyOwner\r\n\t\tvalidPayload(32)\r\n\t{\r\n        owner = newOwner;\r\n    }\r\n\t\r\n\tfunction listAddress(address who, uint256 individualCap) \r\n\t\tonlyOwner \r\n\t\tvalidPayload(32 * 2)\r\n\t{\r\n        whitelist[who] = individualCap;\r\n        ListAddress(who, individualCap);\r\n    }\r\n\r\n    function listAddresses(address[] addresses) onlyOwner {\r\n        for (uint256 i = 0; i < addresses.length; i++) {\r\n            listAddress(addresses[i], maximumIndividualCap);\r\n        }\r\n    }\r\n\t\r\n\tfunction drain() \r\n\t\tonlyOwner \r\n\t\tpreSaleCompletedSuccessfully\r\n\t{\r\n\t\tuint256 weiAmount = this.balance;\r\n\t\tmultiSigWallet.transfer(weiAmount);\r\n\t\t\r\n\t\tDrain(weiAmount);\r\n\t}\r\n\t\r\n\tfunction drainERC20(ERC20Simplified erc20Token) \r\n\t\tonlyOwner \r\n\t\tvalidPayload(32)\r\n\t{\r\n\t\trequire(erc20Token.transfer(multiSigWallet, erc20Token.balanceOf(this)));\r\n    }\r\n\t\r\n\tfunction getValueToInvest() internal returns (uint256, uint256) {\r\n\t\tuint256 newWeiInvested = balances[msg.sender].weiInvested.plus(msg.value);\r\n\t\t\r\n\t\tuint256 weiToInvest;\r\n\t\tuint256 weiRemaining;\r\n\t\tif (newWeiInvested <= whitelist[msg.sender]) {\r\n\t\t\tweiToInvest = msg.value;\r\n\t\t\tweiRemaining = 0;\r\n\t\t} else {\r\n\t\t\tweiToInvest = whitelist[msg.sender].minus(balances[msg.sender].weiInvested);\r\n\t\t\tweiRemaining = msg.value.minus(weiToInvest);\r\n\t\t}\r\n\t\t\r\n\t\treturn (weiToInvest, weiRemaining);\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"preSaleHalted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"name\":\"weiInvested\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"},{\"name\":\"individualCap\",\"type\":\"uint256\"}],\"name\":\"listAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multiSigWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumIndividualCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basicPricePerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"erc20Token\",\"type\":\"address\"}],\"name\":\"drainERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"drain\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"listAddresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"halted\",\"type\":\"bool\"}],\"name\":\"setPreSaleHalt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"revoke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getWeiInvested\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getTokenAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"individualCap\",\"type\":\"uint256\"}],\"name\":\"ListAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Drain\",\"type\":\"event\"}]","ContractName":"AuctusPreSale","CompilerVersion":"v0.4.17+commit.bdeb9e52","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0c41a0552e3ccc2816a3661ec095cacd4cc8ba267c5b8c84c97729092215ec1c"}]}