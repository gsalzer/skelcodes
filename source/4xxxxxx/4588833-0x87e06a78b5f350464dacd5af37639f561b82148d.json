{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n\r\ncontract Token {\r\n    function balanceOf(address _account) public constant returns (uint balance);\r\n\r\n    function transfer(address _to, uint _value) public returns (bool success);\r\n}\r\n\r\n\r\ncontract CrowdSale {\r\n    address owner;\r\n\r\n    address BitcoinQuick = 0xD7AA94f17d60bE06414973a45FfA77efd6443f0F;\r\n\r\n    uint public unitCost;\r\n\r\n    function CrowdSale() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function() public payable {\r\n        // Init Bitcoin Quick contract\r\n        Token BTCQ = Token(BitcoinQuick);\r\n        // Get available supply for this account crowdsale\r\n        uint CrowdSaleSupply = BTCQ.balanceOf(this);\r\n        // Checkout requirements\r\n        require(msg.value > 0 && CrowdSaleSupply > 0 && unitCost > 0);\r\n        // Calculate and adjust required units\r\n        uint units = msg.value / unitCost;\r\n        units = CrowdSaleSupply < units ? CrowdSaleSupply : units;\r\n        // Transfer funds\r\n        require(units > 0 && BTCQ.transfer(msg.sender, units));\r\n        // Calculate remaining ether amount\r\n        uint remainEther = msg.value - (units * unitCost);\r\n        // Return remaining ETH if above 0.001 ETH (TO SAVE INVESTOR GAS)\r\n        if (remainEther >= 10 ** 15) {\r\n            msg.sender.transfer(remainEther);\r\n        }\r\n    }\r\n\r\n    function icoPrice(uint perEther) public returns (bool success) {\r\n        require(msg.sender == owner);\r\n        unitCost = 1 ether / (perEther * 10 ** 8);\r\n        return true;\r\n    }\r\n\r\n    function withdrawFunds(address _token) public returns (bool success) {\r\n        require(msg.sender == owner);\r\n        if (_token == address(0)) {\r\n            owner.transfer(this.balance);\r\n        }\r\n        else {\r\n            Token ERC20 = Token(_token);\r\n            ERC20.transfer(owner, ERC20.balanceOf(this));\r\n        }\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdrawFunds\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"perEther\",\"type\":\"uint256\"}],\"name\":\"icoPrice\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unitCost\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"CrowdSale","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0556dcb55d9da1e472643d5d05be178c1908455551994a8175988c62bb428375"}]}