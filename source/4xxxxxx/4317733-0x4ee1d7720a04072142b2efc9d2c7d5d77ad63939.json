{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.13;\r\n// -------------------------------------------------\r\n// 0.4.13+commit.0fb4cb1a\r\n// [Assistive Reality ARX token ETH cap presale contract]\r\n// [Contact staff@aronline.io for any queries]\r\n// [Join us in changing the world]\r\n// [aronline.io]\r\n// -------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/issues/20\r\n// -------------------------------------------------\r\n// 1,000 ETH capped Pre-sale contract\r\n// Security reviews completed 26/09/17 [passed OK]\r\n// Functional reviews completed 26/09/17 [passed OK]\r\n// Final code revision and regression test cycle complete 26/09/17 [passed OK]\r\n// -------------------------------------------------\r\n\r\ncontract owned {\r\n    address public owner;\r\n\r\n    function owned() {\r\n        owner = msg.sender;\r\n    }\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    function transferOwnership(address newOwner) onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract safeMath {\r\n  function safeMul(uint256 a, uint256 b) internal returns (uint256) {\r\n    uint256 c = a * b;\r\n    safeAssert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint256 a, uint256 b) internal returns (uint256) {\r\n    safeAssert(b > 0);\r\n    uint256 c = a / b;\r\n    safeAssert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint256 a, uint256 b) internal returns (uint256) {\r\n    safeAssert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint256 a, uint256 b) internal returns (uint256) {\r\n    uint256 c = a + b;\r\n    safeAssert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n  function safeAssert(bool assertion) internal {\r\n    if (!assertion) revert();\r\n  }\r\n}\r\n\r\ncontract ERC20Interface is owned, safeMath {\r\n  function balanceOf(address _owner) constant returns (uint256 balance);\r\n  function transfer(address _to, uint256 _value) returns (bool success);\r\n  function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n  function approve(address _spender, uint256 _value) returns (bool success);\r\n  function increaseApproval (address _spender, uint _addedValue) returns (bool success);\r\n  function decreaseApproval (address _spender, uint _subtractedValue) returns (bool success);\r\n  function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n  event Buy(address indexed _sender, uint256 _eth, uint256 _ARX);\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract ARXpresale is owned, safeMath {\r\n  // owner/admin & token reward\r\n  address         public admin                   = owner;     // admin address\r\n  ERC20Interface  public tokenReward;                         // address of the token used as reward\r\n\r\n  // multi-sig addresses and price variable\r\n  address public foundationWallet;                            // foundationMultiSig (foundation fund) or wallet account, for company operations/licensing of Assistive Reality products\r\n  address public beneficiaryWallet;                           // beneficiaryMultiSig (founder group) or wallet account, live is 0x00F959866E977698D14a36eB332686304a4d6AbA\r\n  uint256 public tokensPerEthPrice;                           // set initial value floating priceVar 1,500 tokens per Eth\r\n\r\n  // uint256 values for min,max caps & tracking\r\n  uint256 public amountRaisedInWei;                           // 0 initially (0)\r\n  uint256 public fundingMinCapInWei;                          // 100 ETH (10%) (100 000 000 000 000 000 000)\r\n  uint256 public fundingMaxCapInWei;                          // 1,000 ETH in Wei (1000 000 000 000 000 000 000)\r\n  uint256 public fundingRemainingAvailableInEth;              // ==((fundingMaxCapInWei - amountRaisedInWei)/1 ether); (resolution will only be to integer)\r\n\r\n  // loop control, ICO startup and limiters\r\n  string  public currentStatus                   = \"\";        // current presale status\r\n  uint256 public fundingStartBlock;                           // presale start block#\r\n  uint256 public fundingEndBlock;                             // presale end block#\r\n  bool    public isPresaleClosed                 = false;     // presale completion boolean\r\n  bool    public isPresaleSetup                  = false;     // boolean for presale setup\r\n\r\n  event Buy(address indexed _sender, uint256 _eth, uint256 _ARX);\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n  event Refund(address indexed _refunder, uint256 _value);\r\n  event Burn(address _from, uint256 _value);\r\n\r\n  mapping(address => uint256) balances;\r\n  mapping(address => uint256) fundValue;\r\n\r\n  // default function, map admin\r\n  function ARXpresale() onlyOwner {\r\n    admin = msg.sender;\r\n    currentStatus = \"presale deployed to chain\";\r\n  }\r\n\r\n  // setup the presale parameters\r\n  function Setuppresale(uint256 _fundingStartBlock, uint256 _fundingEndBlock) onlyOwner returns (bytes32 response) {\r\n      if ((msg.sender == admin)\r\n      && (!(isPresaleSetup))\r\n      && (!(beneficiaryWallet > 0))){\r\n          // init addresses\r\n          tokenReward                             = ERC20Interface(0xb0D926c1BC3d78064F3e1075D5bD9A24F35Ae6C5);   // mainnet is 0xb0D926c1BC3d78064F3e1075D5bD9A24F35Ae6C5\r\n          beneficiaryWallet                       = 0xd93333f8cb765397A5D0d0e0ba53A2899B48511f;                   // mainnet is 0xd93333f8cb765397A5D0d0e0ba53A2899B48511f\r\n          foundationWallet                        = 0x70A0bE1a5d8A9F39afED536Ec7b55d87067371aA;                   // mainnet is 0x70A0bE1a5d8A9F39afED536Ec7b55d87067371aA\r\n          tokensPerEthPrice                       = 8000;                                                         // set day1 presale value floating priceVar 8,000 ARX tokens per 1 ETH\r\n\r\n          // funding targets\r\n          fundingMinCapInWei                      = 100000000000000000000;                                        // 100000000000000000000  = 100 Eth (min cap) //testnet 2500000000000000000   = 2.5 Eth\r\n          fundingMaxCapInWei                      = 1000000000000000000000;                                       // 1000000000000000000000 = 1000 Eth (max cap) //testnet 6500000000000000000  = 6.5 Eth\r\n\r\n          // update values\r\n          amountRaisedInWei                       = 0;                                                            // init value to 0\r\n          fundingRemainingAvailableInEth          = safeDiv(fundingMaxCapInWei,1 ether);\r\n\r\n          fundingStartBlock                       = _fundingStartBlock;\r\n          fundingEndBlock                         = _fundingEndBlock;\r\n\r\n          // configure presale\r\n          isPresaleSetup                          = true;\r\n          isPresaleClosed                         = false;\r\n          currentStatus                           = \"presale is setup\";\r\n\r\n          //gas reduction experiment\r\n          setPrice();\r\n          return \"presale is setup\";\r\n      } else if (msg.sender != admin) {\r\n          return \"not authorized\";\r\n      } else  {\r\n          return \"campaign cannot be changed\";\r\n      }\r\n    }\r\n\r\n    function setPrice() {\r\n      // Price configuration mainnet:\r\n      // Day 0-1 Price   1 ETH = 8000 ARX [blocks: start    -> s+3600]  0 - +24hr\r\n      // Day 1-3 Price   1 ETH = 7250 ARX [blocks: s+3601   -> s+10800] +24hr - +72hr\r\n      // Day 3-5 Price   1 ETH = 6750 ARX [blocks: s+10801  -> s+18000] +72hr - +120hr\r\n      // Dau 5-7 Price   1 ETH = 6250 ARX [blocks: s+18001  -> <=fundingEndBlock] = +168hr (168/24 = 7 [x])\r\n\r\n      if (block.number >= fundingStartBlock && block.number <= fundingStartBlock+3600) { // 8000 ARX Day 1 level only\r\n        tokensPerEthPrice=8000;\r\n      } else if (block.number >= fundingStartBlock+3601 && block.number <= fundingStartBlock+10800) { // 7250 ARX Day 2,3\r\n        tokensPerEthPrice=7250;\r\n      } else if (block.number >= fundingStartBlock+10801 && block.number <= fundingStartBlock+18000) { // 6750 ARX Day 4,5\r\n        tokensPerEthPrice=6750;\r\n      } else if (block.number >= fundingStartBlock+18001 && block.number <= fundingEndBlock) { // 6250 ARX Day 6,7\r\n        tokensPerEthPrice=6250;\r\n      } else {\r\n        tokensPerEthPrice=6250; // default back out to this value instead of failing to return or return 0/halting;\r\n      }\r\n    }\r\n\r\n    // default payable function when sending ether to this contract\r\n    function () payable {\r\n      require(msg.data.length == 0);\r\n      BuyARXtokens();\r\n    }\r\n\r\n    function BuyARXtokens() payable {\r\n      // 0. conditions (length, presale setup, zero check, exceed funding contrib check, contract valid check, within funding block range check, balance overflow check etc)\r\n      require(!(msg.value == 0)\r\n      && (isPresaleSetup)\r\n      && (block.number >= fundingStartBlock)\r\n      && (block.number <= fundingEndBlock)\r\n      && !(safeAdd(amountRaisedInWei,msg.value) > fundingMaxCapInWei));\r\n\r\n      // 1. vars\r\n      uint256 rewardTransferAmount    = 0;\r\n\r\n      // 2. effects\r\n      setPrice();\r\n      amountRaisedInWei               = safeAdd(amountRaisedInWei,msg.value);\r\n      rewardTransferAmount            = safeMul(msg.value,tokensPerEthPrice);\r\n      fundingRemainingAvailableInEth  = safeDiv(safeSub(fundingMaxCapInWei,amountRaisedInWei),1 ether);\r\n\r\n      // 3. interaction\r\n      tokenReward.transfer(msg.sender, rewardTransferAmount);\r\n      fundValue[msg.sender]           = safeAdd(fundValue[msg.sender], msg.value);\r\n\r\n      // 4. events\r\n      Transfer(this, msg.sender, msg.value);\r\n      Buy(msg.sender, msg.value, rewardTransferAmount);\r\n    }\r\n\r\n    function beneficiaryMultiSigWithdraw(uint256 _amount) onlyOwner {\r\n      require(amountRaisedInWei >= fundingMinCapInWei);\r\n      beneficiaryWallet.transfer(_amount);\r\n    }\r\n\r\n    function checkGoalandPrice() onlyOwner returns (bytes32 response) {\r\n      // update state & status variables\r\n      require (isPresaleSetup);\r\n      if ((amountRaisedInWei < fundingMinCapInWei) && (block.number <= fundingEndBlock && block.number >= fundingStartBlock)) { // presale in progress, under softcap\r\n        currentStatus = \"In progress (Eth < Softcap)\";\r\n        return \"In progress (Eth < Softcap)\";\r\n      } else if ((amountRaisedInWei < fundingMinCapInWei) && (block.number < fundingStartBlock)) { // presale has not started\r\n        currentStatus = \"presale is setup\";\r\n        return \"presale is setup\";\r\n      } else if ((amountRaisedInWei < fundingMinCapInWei) && (block.number > fundingEndBlock)) { // presale ended, under softcap\r\n        currentStatus = \"Unsuccessful (Eth < Softcap)\";\r\n        return \"Unsuccessful (Eth < Softcap)\";\r\n      } else if (amountRaisedInWei >= fundingMaxCapInWei) {  // presale successful, at hardcap!\r\n          currentStatus = \"Successful (ARX >= Hardcap)!\";\r\n          return \"Successful (ARX >= Hardcap)!\";\r\n      } else if ((amountRaisedInWei >= fundingMinCapInWei) && (block.number > fundingEndBlock)) { // presale ended, over softcap!\r\n          currentStatus = \"Successful (Eth >= Softcap)!\";\r\n          return \"Successful (Eth >= Softcap)!\";\r\n      } else if ((amountRaisedInWei >= fundingMinCapInWei) && (block.number <= fundingEndBlock)) { // presale in progress, over softcap!\r\n        currentStatus = \"In progress (Eth >= Softcap)!\";\r\n        return \"In progress (Eth >= Softcap)!\";\r\n      }\r\n      setPrice();\r\n    }\r\n\r\n    function refund() { // any contributor can call this to have their Eth returned. user's purchased ARX tokens are burned prior refund of Eth.\r\n      //require minCap not reached\r\n      require ((amountRaisedInWei < fundingMinCapInWei)\r\n      && (isPresaleClosed)\r\n      && (block.number > fundingEndBlock)\r\n      && (fundValue[msg.sender] > 0));\r\n\r\n      //burn user's token ARX token balance, refund Eth sent\r\n      uint256 ethRefund = fundValue[msg.sender];\r\n      balances[msg.sender] = 0;\r\n      fundValue[msg.sender] = 0;\r\n      Burn(msg.sender, ethRefund);\r\n\r\n      //send Eth back, burn tokens\r\n      msg.sender.transfer(ethRefund);\r\n      Refund(msg.sender, ethRefund);\r\n    }\r\n\r\n    function withdrawRemainingTokens(uint256 _amountToPull) onlyOwner {\r\n      require(block.number >= fundingEndBlock);\r\n      tokenReward.transfer(msg.sender, _amountToPull);\r\n    }\r\n\r\n    function updateStatus() onlyOwner {\r\n      require((block.number >= fundingEndBlock) || (amountRaisedInWei >= fundingMaxCapInWei));\r\n      isPresaleClosed = true;\r\n      currentStatus = \"packagesale is closed\";\r\n    }\r\n  }","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"checkGoalandPrice\",\"outputs\":[{\"name\":\"response\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerEthPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingMaxCapInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateStatus\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foundationWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"BuyARXtokens\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amountToPull\",\"type\":\"uint256\"}],\"name\":\"withdrawRemainingTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaisedInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"beneficiaryMultiSigWithdraw\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingMinCapInWei\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingEndBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPresaleClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiaryWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPresaleSetup\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingStartBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fundingStartBlock\",\"type\":\"uint256\"},{\"name\":\"_fundingEndBlock\",\"type\":\"uint256\"}],\"name\":\"Setuppresale\",\"outputs\":[{\"name\":\"response\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingRemainingAvailableInEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_ARX\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_refunder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"ARXpresale","CompilerVersion":"v0.4.13+commit.fb4cb1a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fa2a1701df04b3f2e2f4786ae89c4da083d2c6a382ca1458f7391aea0c50c1ab"}]}