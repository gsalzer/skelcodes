{"status":"1","message":"OK","result":[{"SourceCode":"//MOVIECREDITS_UPDATE V3.0\r\n\r\ncontract SafeMath{\r\n  function safeMul(uint a, uint b) internal returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeDiv(uint a, uint b) internal returns (uint) {\r\n    assert(b > 0);\r\n    uint c = a / b;\r\n    assert(a == b * c + a % b);\r\n    return c;\r\n  }\r\n \r\n function safeSub(uint a, uint b) internal returns (uint) {\r\n     assert(b <= a);\r\n     return a - b;\r\n  }\r\n\r\n function safeAdd(uint a, uint b) internal returns (uint) {\r\n     uint c = a + b;\r\n     assert(c >= a);\r\n     return c;\r\n  }\r\n function assert(bool assertion) internal {\r\n     if (!assertion) {\r\n       throw;\r\n     }\r\n }\r\n}\r\ncontract ERC20{\r\n\r\n  function totalSupply() constant returns (uint256 totalSupply) {}\r\n function balanceOf(address _owner) constant returns (uint256 balance) {}\r\n function transfer(address _recipient, uint256 _value) returns (bool success) {}\r\n function transferFrom(address _from, address _recipient, uint256 _value) returns (bool success) {}\r\n function approve(address _spender, uint256 _value) returns (bool success) {}\r\n function allowance(address _owner, address _spender) constant returns (uint256 remaining) {}\r\n\r\n event Transfer(address indexed _from, address indexed _recipient, uint256 _value);\r\n event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n\r\n}\r\n\r\ncontract MOVIECREDITS3 is ERC20, SafeMath{\r\n\r\n \r\n mapping(address => uint256) balances;\r\n\r\n uint256 public totalSupply;\r\n\r\n\r\n function balanceOf(address _owner) constant returns (uint256 balance) {\r\n     return balances[_owner];\r\n }\r\n\r\n function transfer(address _to, uint256 _value) returns (bool success){\r\n     balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n     balances[_to] = safeAdd(balances[_to], _value);\r\n     Transfer(msg.sender, _to, _value);\r\n     return true;\r\n }\r\n\r\n mapping (address => mapping (address => uint256)) allowed;\r\n\r\n function transferFrom(address _from, address _to, uint256 _value) returns (bool success){\r\n     var _allowance = allowed[_from][msg.sender];\r\n    \r\n     balances[_to] = safeAdd(balances[_to], _value);\r\n     balances[_from] = safeSub(balances[_from], _value);\r\n     allowed[_from][msg.sender] = safeSub(_allowance, _value);\r\n     Transfer(_from, _to, _value);\r\n     return true;\r\n }\r\n\r\n function approve(address _spender, uint256 _value) returns (bool success) {\r\n     allowed[msg.sender][_spender] = _value;\r\n     Approval(msg.sender, _spender, _value);\r\n     return true;\r\n }\r\n\r\n function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n     return allowed[_owner][_spender];\r\n }\r\n\r\n\r\n\r\n\r\n uint256 public endTime;\r\n\r\n modifier during_offering_time(){\r\n  if (now >= endTime){\r\n   throw;\r\n  }else{\r\n   _;\r\n  }\r\n }\r\n\r\n function () payable during_offering_time {\r\n  createTokens(msg.sender);\r\n }\r\n\r\n function createTokens(address recipient) payable {\r\n  if (msg.value == 0) {\r\n    throw;\r\n  }\r\n\r\n  uint tokens = safeDiv(safeMul(msg.value, price), 1 ether);\r\n  totalSupply = safeAdd(totalSupply, tokens);\r\n\r\n  balances[recipient] = safeAdd(balances[recipient], tokens);\r\n\r\n  if (!owner.send(msg.value)) {\r\n    throw;\r\n  }\r\n }\r\n string  public name = \"MOVIECREDITS (EMVC)\";\r\n string  public symbol = \"EMVC\";\r\n uint  public decimals = 8;\r\n uint256 public INITIAL_SUPPLY = 6000000000000000;\r\nstring public version = 'EMVC3.0';\r\n uint256 public price;\r\n address public owner;\r\n\r\n function MOVIECREDITS() {\r\n  totalSupply = INITIAL_SUPPLY;\r\n  balances[msg.sender] = INITIAL_SUPPLY;  // Give all of the initial tokens to the contract deployer.\r\n  endTime = now + 7 weeks;\r\n  owner  = msg.sender;\r\n  price  = 750;\r\n }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"createTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"MOVIECREDITS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"MOVIECREDITS3","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://598378c3c909eb4f43d239a51ddf32e9041c9e7fcb2f130ed067bfeab4e80ea4"}]}