{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\ncontract ETHLotteryManager {\r\n    address public owner;\r\n    address[] lottery_list;\r\n\r\n    event Register(address _lottery);\r\n    event Destroy();\r\n\r\n    function ETHLotteryManager() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier isOwner() {\r\n        // used tx.origin on purpose instead of\r\n        // msg.sender, as we want to get the original\r\n        // starter of the transaction to be owner\r\n        require(tx.origin == owner);\r\n        _;\r\n    }\r\n\r\n    function lotteries() constant returns (address[]) {\r\n        return lottery_list;\r\n    }\r\n\r\n    function register() isOwner {\r\n        lottery_list.push(msg.sender);\r\n        Register(msg.sender);\r\n    }\r\n\r\n    function destruct() isOwner {\r\n        Destroy();\r\n        selfdestruct(owner);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"lotteries\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destruct\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_lottery\",\"type\":\"address\"}],\"name\":\"Register\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Destroy\",\"type\":\"event\"}]","ContractName":"ETHLotteryManager","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8e3b1a0a4645ef371f4b0b547189dbc203802c9f7c06c40034c631f9d0e41b61"}]}