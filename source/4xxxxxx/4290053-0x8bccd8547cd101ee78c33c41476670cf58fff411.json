{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract BMCAssetInterface {\r\n    function __transferWithReference(address _to, uint _value, string _reference, address _sender) returns(bool);\r\n    function __transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender) returns(bool);\r\n    function __approve(address _spender, uint _value, address _sender) returns(bool);\r\n    function __process(bytes _data, address _sender) payable {\r\n        throw;\r\n    }\r\n}\r\n\r\ncontract BMCAssetProxy {\r\n    address public bmcPlatform;\r\n    function __transferWithReference(address _to, uint _value, string _reference, address _sender) returns(bool);\r\n    function __transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender) returns(bool);\r\n    function __approve(address _spender, uint _value, address _sender) returns(bool);    \r\n    function getLatestVersion() returns(address);\r\n    function init(address _bmcPlatform, string _symbol, string _name);\r\n    function proposeUpgrade(address _newVersion);\r\n}\r\n\r\n/**\r\n * @title BMC Asset implementation contract.\r\n *\r\n * Basic asset implementation contract, without any additional logic.\r\n * Every other asset implementation contracts should derive from this one.\r\n * Receives calls from the proxy, and calls back immediatly without arguments modification.\r\n *\r\n * Note: all the non constant functions return false instead of throwing in case if state change\r\n * didn't happen yet.\r\n */\r\ncontract BMCAsset is BMCAssetInterface {\r\n    // Assigned asset proxy contract, immutable.\r\n    BMCAssetProxy public proxy;\r\n\r\n    /**\r\n     * Only assigned proxy is allowed to call.\r\n     */\r\n    modifier onlyProxy() {\r\n        if (proxy == msg.sender) {\r\n            _;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets asset proxy address.\r\n     *\r\n     * Can be set only once.\r\n     *\r\n     * @param _proxy asset proxy contract address.\r\n     *\r\n     * @return success.\r\n     * @dev function is final, and must not be overridden.\r\n     */\r\n    function init(BMCAssetProxy _proxy) returns(bool) {\r\n        if (address(proxy) != 0x0) {\r\n            return false;\r\n        }\r\n        proxy = _proxy;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Passes execution into virtual function.\r\n     *\r\n     * Can only be called by assigned asset proxy.\r\n     *\r\n     * @return success.\r\n     * @dev function is final, and must not be overridden.\r\n     */\r\n    function __transferWithReference(address _to, uint _value, string _reference, address _sender) onlyProxy() returns(bool) {\r\n        return _transferWithReference(_to, _value, _reference, _sender);\r\n    }\r\n\r\n    /**\r\n     * Calls back without modifications.\r\n     *\r\n     * @return success.\r\n     * @dev function is virtual, and meant to be overridden.\r\n     */\r\n    function _transferWithReference(address _to, uint _value, string _reference, address _sender) internal returns(bool) {\r\n        return proxy.__transferWithReference(_to, _value, _reference, _sender);\r\n    }\r\n\r\n    /**\r\n     * Passes execution into virtual function.\r\n     *\r\n     * Can only be called by assigned asset proxy.\r\n     *\r\n     * @return success.\r\n     * @dev function is final, and must not be overridden.\r\n     */\r\n    function __transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender) onlyProxy() returns(bool) {\r\n        return _transferFromWithReference(_from, _to, _value, _reference, _sender);\r\n    }\r\n\r\n    /**\r\n     * Calls back without modifications.\r\n     *\r\n     * @return success.\r\n     * @dev function is virtual, and meant to be overridden.\r\n     */\r\n    function _transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender) internal returns(bool) {\r\n        return proxy.__transferFromWithReference(_from, _to, _value, _reference, _sender);\r\n    }\r\n\r\n    /**\r\n     * Passes execution into virtual function.\r\n     *\r\n     * Can only be called by assigned asset proxy.\r\n     *\r\n     * @return success.\r\n     * @dev function is final, and must not be overridden.\r\n     */\r\n    function __approve(address _spender, uint _value, address _sender) onlyProxy() returns(bool) {\r\n        return _approve(_spender, _value, _sender);\r\n    }\r\n\r\n    /**\r\n     * Calls back without modifications.\r\n     *\r\n     * @return success.\r\n     * @dev function is virtual, and meant to be overridden.\r\n     */\r\n    function _approve(address _spender, uint _value, address _sender) internal returns(bool) {\r\n        return proxy.__approve(_spender, _value, _sender);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title Blackmooncrypto.com BMC tokens contract.\r\n *\r\n * The official Blackmooncrypto.com token implementation.\r\n */\r\ncontract BMC is BMCAsset {\r\n\r\n    uint public icoUsd;\r\n    uint public icoEth;\r\n    uint public icoBtc;\r\n    uint public icoLtc;\r\n\r\n    function initBMC(BMCAssetProxy _proxy, uint _icoUsd, uint _icoEth, uint _icoBtc, uint _icoLtc) returns(bool) {\r\n        if(icoUsd != 0 || icoEth != 0 || icoBtc != 0 || icoLtc != 0) {\r\n            return false;\r\n        }\r\n        icoUsd = _icoUsd;\r\n        icoEth = _icoEth;\r\n        icoBtc = _icoBtc;\r\n        icoLtc = _icoLtc;\r\n        super.init(_proxy);\r\n        return true;\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_proxy\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoLtc\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proxy\",\"type\":\"address\"},{\"name\":\"_icoUsd\",\"type\":\"uint256\"},{\"name\":\"_icoEth\",\"type\":\"uint256\"},{\"name\":\"_icoBtc\",\"type\":\"uint256\"},{\"name\":\"_icoLtc\",\"type\":\"uint256\"}],\"name\":\"initBMC\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_reference\",\"type\":\"string\"},{\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"__transferWithReference\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoBtc\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"__approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoUsd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_reference\",\"type\":\"string\"},{\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"__transferFromWithReference\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"__process\",\"outputs\":[],\"payable\":true,\"type\":\"function\"}]","ContractName":"BMC","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c4085542a5c419ae4a1611d8435b79bbb9b3665e0859cf8c6a67492f251561c2"}]}