{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\ncontract BlockHashMemory\r\n{\r\n    bytes32[] private blockHashes;\r\n    address private curator;\r\n    \r\n    function BlockHashMemory() public\r\n    {\r\n        curator = msg.sender;\r\n    }\r\n    \r\n    function transferCuratorship(address newCurator) external\r\n    {\r\n        require(msg.sender == curator);\r\n        curator = newCurator;\r\n    }\r\n    \r\n    function getBlockHashOrZero(uint256 blockNumber) external view returns (bytes32 blockHashOrZero)\r\n    {\r\n        if (blockNumber >= blockHashes.length) return 0x00;\r\n        return blockHashes[blockNumber];\r\n    }\r\n    \r\n    function curatorWrite(uint256 startBlockNumber, bytes32[] newHashes) external\r\n    {\r\n        require(msg.sender == curator);\r\n        for (uint256 i=0; i<newHashes.length; i++)\r\n        {\r\n            blockHashes[startBlockNumber + i] = newHashes[i];\r\n        }\r\n    }\r\n    \r\n    function volunteerWrite() external returns (uint256 amountWritten)\r\n    {\r\n        amountWritten = 0;\r\n        for (uint256 num=block.number-255; num<block.number; num++)\r\n        {\r\n            if (msg.gas < 20000) break;\r\n            blockHashes[num] = block.blockhash(num);\r\n            amountWritten++;\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"startBlockNumber\",\"type\":\"uint256\"},{\"name\":\"newHashes\",\"type\":\"bytes32[]\"}],\"name\":\"curatorWrite\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCurator\",\"type\":\"address\"}],\"name\":\"transferCuratorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"volunteerWrite\",\"outputs\":[{\"name\":\"amountWritten\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockHashOrZero\",\"outputs\":[{\"name\":\"blockHashOrZero\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","ContractName":"BlockHashMemory","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://758c5827180c02b1cf4a9b40c6fa479a4879f812cc584b70ae2abc8984af937b"}]}