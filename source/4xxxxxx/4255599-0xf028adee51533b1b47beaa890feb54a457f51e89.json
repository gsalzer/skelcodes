{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract BMToken {\r\n    string  public  name = \"BMChain Token\";\r\n    string  public  symbol = \"BMT\";\r\n    uint256  public  decimals = 18;\r\n\r\n    uint256 _supply = 0;\r\n    mapping (address => uint256) _balances;\r\n    mapping (address => mapping (address => uint256)) _approvals;\r\n\r\n    event Transfer( address indexed from, address indexed to, uint value);\r\n    event Approval( address indexed owner, address indexed spender, uint value);\r\n\r\n    address ico_contract;\r\n    address public owner;\r\n\r\n    function BMToken(){\r\n        ico_contract = address(0x0);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier isOwner()\r\n    {\r\n        assert(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function changeOwner(address new_owner) isOwner\r\n    {\r\n        assert(new_owner!=address(0x0));\r\n        assert(new_owner!=address(this));\r\n        owner = new_owner;\r\n    }\r\n\r\n    function setICOContract(address new_address) isOwner\r\n    {\r\n        assert(ico_contract==address(0x0));\r\n        assert(new_address!=address(0x0));\r\n        assert(new_address!=address(this));\r\n        ico_contract = new_address;\r\n    }\r\n\r\n    function add(uint256 x, uint256 y) constant internal returns (uint256 z) {\r\n        assert((z = x + y) >= x);\r\n    }\r\n\r\n    function sub(uint256 x, uint256 y) constant internal returns (uint256 z) {\r\n        assert((z = x - y) <= x);\r\n    }\r\n\r\n    function totalSupply() constant external returns (uint256) {\r\n        return _supply;\r\n    }\r\n\r\n    function balanceOf(address src) constant external returns (uint256) {\r\n        return _balances[src];\r\n    }\r\n\r\n    function allowance(address src, address where) constant external returns (uint256) {\r\n        return _approvals[src][where];\r\n    }\r\n\r\n    function transfer(address where, uint amount) external returns (bool) {\r\n        assert(where != address(this));\r\n        assert(where != address(0));\r\n        assert(_balances[msg.sender] >= amount);\r\n\r\n        _balances[msg.sender] = sub(_balances[msg.sender], amount);\r\n        _balances[where] = add(_balances[where], amount);\r\n\r\n        Transfer(msg.sender, where, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address src, address where, uint amount) external returns (bool) {\r\n        assert(where != address(this));\r\n        assert(where != address(0));\r\n        assert(_balances[src] >= amount);\r\n        assert(_approvals[src][msg.sender] >= amount);\r\n\r\n        _approvals[src][msg.sender] = sub(_approvals[src][msg.sender], amount);\r\n        _balances[src] = sub(_balances[src], amount);\r\n        _balances[where] = add(_balances[where], amount);\r\n\r\n        Transfer(src, where, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve(address where, uint256 amount) external returns (bool) {\r\n        assert(where != address(this));\r\n        assert(where != address(0));\r\n        _approvals[msg.sender][where] = amount;\r\n\r\n        Approval(msg.sender, where, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function mintTokens(address holder, uint256 amount) external\r\n    {\r\n        assert(msg.sender == ico_contract);\r\n        _balances[holder] = add(_balances[holder], amount);\r\n        _supply = add(_supply, amount);\r\n        Transfer(address(0x0), holder, amount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"where\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"where\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_address\",\"type\":\"address\"}],\"name\":\"setICOContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"new_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"where\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"where\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"BMToken","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3e9b58d4259f6bc6143e50a7f58895d121ef22db284f6286d900c1bc65ec31b4"}]}