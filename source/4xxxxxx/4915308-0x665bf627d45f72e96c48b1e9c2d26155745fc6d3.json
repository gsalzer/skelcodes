{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n/**\r\n * BittrexOpenSourceClone (BOSC) Crowd Sale\r\n */\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount);\r\n}\r\n\r\ncontract BittrexOpenSourceCloneCrowdsale {\r\n    address public beneficiary;\r\n    uint public amountRaised;\r\n    uint private currentBalance;\r\n    uint public price;\r\n    uint public initialTokenAmount;\r\n    uint public currentTokenAmount;\r\n    token public tokenReward;\r\n    mapping(address => uint256) public balanceOf;\r\n\r\n    /**\r\n     * Constrctor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    function BittrexOpenSourceCloneCrowdsale(\r\n        address sendTo,\r\n        address addressOfTokenUsedAsReward\r\n    ) {\r\n        beneficiary = sendTo;\r\n        /* 0.001 x 1 ether in wei */\r\n        price = 1000000000000000;\r\n        initialTokenAmount = 20000000;\r\n        currentTokenAmount = 20000000;\r\n        tokenReward = token(addressOfTokenUsedAsReward);\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function () payable {\r\n        uint amount = msg.value;\r\n        if (amount > 0) {\r\n            balanceOf[msg.sender] += amount;\r\n            amountRaised += amount;\r\n            currentBalance += amount;\r\n            uint tokenAmount = amount / price;\r\n            currentTokenAmount -= tokenAmount;\r\n            tokenReward.transfer(msg.sender, tokenAmount * 1 ether);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bank tokens\r\n     *\r\n     * Deposit token sale proceeds to BOSC Account\r\n     */\r\n    function bank() public {\r\n        if (beneficiary == msg.sender && currentBalance > 0) {\r\n            uint amountToSend = currentBalance;\r\n            currentBalance = 0;\r\n            beneficiary.send(amountToSend);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Withdraw unusold tokens\r\n     *\r\n     * Deposit unsold tokens to BOSC Account\r\n     * \r\n     * Oops. Forgot to multiply currentTokenAmount * 1 ether\r\n     * PTWO not sold in the crowdsale will be trapped in this contract\r\n     */\r\n    function returnUnsold() public {\r\n        if (beneficiary == msg.sender) {\r\n            tokenReward.transfer(beneficiary, currentTokenAmount * 1 ether);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Withdraw unusold tokens\r\n     *\r\n     * Deposit unsold tokens to BOSC Account 100k Safe\r\n     * \r\n     * Oops. Forgot to multiply tokenAmount * 1 ether\r\n     * PTWO not sold in the crowdsale will be trapped in this contract\r\n     */\r\n    function returnUnsoldSafe() public {\r\n        if (beneficiary == msg.sender) {\r\n            uint tokenAmount = 100000;\r\n            tokenReward.transfer(beneficiary, tokenAmount * 1 ether);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialTokenAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"bank\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"returnUnsold\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"returnUnsoldSafe\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentTokenAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"sendTo\",\"type\":\"address\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"BittrexOpenSourceCloneCrowdsale","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000031e9fa16f3dedbf570bdd80110f08b08f55d6b7000000000000000000000000060f37f3a9b2f14a684397309cb3b20c628fee43b","Library":"","SwarmSource":"bzzr://ea3e328832b3f2a00252cdbc60dfb87265cac27e608e313a279d1094f07b8c1e"}]}