{"status":"1","message":"OK","result":[{"SourceCode":"/**\r\n * Overflow aware uint math functions.\r\n *\r\n * Inspired by https://github.com/MakerDAO/maker-otc/blob/master/contracts/simple_market.sol\r\n */\r\npragma solidity ^0.4.11;\r\n\r\n/**\r\n * ERC 20 token\r\n *\r\n * https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ZeePinToken  {\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n\r\n    mapping(address => uint256) balances;\r\n\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    uint256 public totalSupply;\r\n\r\n\r\n    string public name = \"ZeePin Token\";\r\n    string public symbol = \"ZPT\";\r\n    uint public decimals = 18;\r\n\r\n    uint public startTime; //crowdsale start time (set in constructor)\r\n    uint public endTime; //crowdsale end time (set in constructor)\r\n    uint public startEarlyBird;  //crowdsale end time (set in constructor)\r\n    uint public endEarlyBird;  //crowdsale end time (set in constructor)\r\n    uint public startPeTime;  //pe start time (set in constructor)\r\n    uint public endPeTime; //pe end time (set in constructor)\r\n    uint public endFirstWeek;\r\n    uint public endSecondWeek;\r\n    uint public endThirdWeek;\r\n    uint public endFourthWeek;\r\n    uint public endFifthWeek;\r\n\r\n\r\n    // Initial founder address (set in constructor)\r\n    // All deposited ETH will be instantly forwarded to this address.\r\n    address public founder = 0x0;\r\n\r\n    // signer address (for clickwrap agreement)\r\n    // see function() {} for comments\r\n    address public signer = 0x0;\r\n\r\n    // price is defined by time\r\n    uint256 public pePrice = 6160;\r\n    uint256 public earlyBirdPrice = 5720;\r\n    uint256 public firstWeekTokenPrice = 4840;\r\n    uint256 public secondWeekTokenPrice = 4752;\r\n    uint256 public thirdWeekTokenPrice = 4620;\r\n    uint256 public fourthWeekTokenPrice = 4532;\r\n    uint256 public fifthWeekTokenPrice = 4400;\r\n\r\n    uint256 public etherCap = 90909 * 10**decimals; //max amount raised during crowdsale, which represents 5,100,000,000 ZPTs\r\n    uint256 public totalMintedToken = 1000000000;\r\n    uint256 public etherLowLimit = 16500 * 10**decimals;\r\n    uint256 public earlyBirdCap = 6119 * 10**decimals;\r\n    uint256 public earlyBirdMinPerPerson = 5 * 10**decimals;\r\n    uint256 public earlyBirdMaxPerPerson = 200 * 10**decimals;\r\n    uint256 public peCap = 2700 * 10**decimals;\r\n    uint256 public peMinPerPerson = 150 * 10**decimals;\r\n    uint256 public peMaxPerPerson = 450 * 10**decimals;\r\n    uint256 public regularMinPerPerson = 1 * 10**17;\r\n    uint256 public regularMaxPerPerson = 200 * 10**decimals;\r\n\r\n    uint public transferLockup = 15 days ; //transfers are locked for this time period after\r\n\r\n    uint public founderLockup = 2 weeks; //founder allocation cannot be created until this time period after endTime\r\n    \r\n\r\n    uint256 public founderAllocation = 100 * 10**16; //100% of token supply allocated post-crowdsale for the founder/operation allocation\r\n\r\n\r\n    bool public founderAllocated = false; //this will change to true when the founder fund is allocated\r\n\r\n    uint256 public saleTokenSupply = 0; //this will keep track of the token supply created during the crowdsale\r\n    uint256 public saleEtherRaised = 0; //this will keep track of the Ether raised during the crowdsale\r\n    bool public halted = false; //the founder address can set this to true to halt the crowdsale due to emergency\r\n\r\n    event Buy(uint256 eth, uint256 fbt);\r\n    event AllocateFounderTokens(address indexed sender);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n    event print(bytes32 msg);\r\n\r\n    //constructor\r\n    function ZeePinToken(address founderInput, address signerInput, uint startTimeInput, uint endTimeInput, uint startEarlyBirdInput, uint endEarlyBirdInput, uint startPeInput, uint endPeInput) {\r\n        founder = founderInput;\r\n        signer = signerInput;\r\n        startTime = startTimeInput;\r\n        endTime = endTimeInput;\r\n        startEarlyBird = startEarlyBirdInput;\r\n        endEarlyBird = endEarlyBirdInput;\r\n        startPeTime = startPeInput;\r\n        endPeTime = endPeInput;\r\n        \r\n        endFirstWeek = startTime + 1 weeks;\r\n        endSecondWeek = startTime + 2 weeks;\r\n        endThirdWeek = startTime + 3 weeks;\r\n        endFourthWeek = startTime + 4 weeks;\r\n        endFifthWeek = startTime + 5 weeks;\r\n    }\r\n\r\n    //price based on current token supply\r\n    function price() constant returns(uint256) {\r\n        if (now <= endEarlyBird && now >= startEarlyBird) return earlyBirdPrice;\r\n        if (now <= endFirstWeek) return firstWeekTokenPrice;\r\n        if (now <= endSecondWeek) return secondWeekTokenPrice;\r\n        if (now <= endThirdWeek) return thirdWeekTokenPrice;\r\n        if (now <= endFourthWeek) return fourthWeekTokenPrice;\r\n        if (now <= endFifthWeek) return fifthWeekTokenPrice;\r\n        return fifthWeekTokenPrice;\r\n    }\r\n\r\n    // price() exposed for unit tests\r\n    function testPrice(uint256 currentTime) constant returns(uint256) {\r\n        if (currentTime < endEarlyBird && currentTime >= startEarlyBird) return earlyBirdPrice;\r\n        if (currentTime < endFirstWeek && currentTime >= startTime) return firstWeekTokenPrice;\r\n        if (currentTime < endSecondWeek && currentTime >= endFirstWeek) return secondWeekTokenPrice;\r\n        if (currentTime < endThirdWeek && currentTime >= endSecondWeek) return thirdWeekTokenPrice;\r\n        if (currentTime < endFourthWeek && currentTime >= endThirdWeek) return fourthWeekTokenPrice;\r\n        if (currentTime < endFifthWeek && currentTime >= endFourthWeek) return fifthWeekTokenPrice;\r\n        return fifthWeekTokenPrice;\r\n    }\r\n\r\n\r\n    // Buy entry point\r\n    function buy( bytes32 hash) payable {\r\n        print(hash);\r\n        if (((now < startTime || now >= endTime) && (now < startEarlyBird || now >= endEarlyBird)) || halted) revert();\r\n        if (now>=startEarlyBird && now<endEarlyBird) {\r\n            if (msg.value < earlyBirdMinPerPerson || msg.value > earlyBirdMaxPerPerson || (saleEtherRaised + msg.value) > (peCap + earlyBirdCap)) {\r\n                revert();\r\n            }\r\n        }\r\n        if (now>=startTime && now<endTime) {\r\n            if (msg.value < regularMinPerPerson || msg.value > regularMaxPerPerson || (saleEtherRaised + msg.value) > etherCap ) {\r\n                revert();\r\n            }\r\n        }\r\n        uint256 tokens = (msg.value * price());\r\n        balances[msg.sender] = (balances[msg.sender] + tokens);\r\n        totalSupply = (totalSupply + tokens);\r\n        saleEtherRaised = (saleEtherRaised + msg.value);\r\n\r\n        if (!founder.call.value(msg.value)()) revert(); //immediately send Ether to founder address\r\n\r\n        Buy(msg.value, tokens);\r\n    }\r\n\r\n    /**\r\n     * Set up founder address token balance.\r\n     *\r\n     * Security review\r\n     *\r\n     * - Integer math: ok - only called once with fixed parameters\r\n     *\r\n     * Applicable tests:\r\n     *\r\n     *\r\n     */\r\n    function allocateFounderTokens() {\r\n        if (msg.sender!=founder) revert();\r\n        if (now <= endTime + founderLockup) revert();\r\n        if (founderAllocated) revert();\r\n        balances[founder] = (balances[founder] + totalSupply * founderAllocation / (1 ether));\r\n        totalSupply = (totalSupply + totalSupply * founderAllocation / (1 ether));\r\n        founderAllocated = true;\r\n        AllocateFounderTokens(msg.sender);\r\n    }\r\n\r\n    /**\r\n     * Set up founder address token balance.\r\n     *\r\n     * Security review\r\n     *\r\n     * - Integer math: ok - only called once with fixed parameters\r\n     *\r\n     * Applicable tests:\r\n     *\r\n     *\r\n     */\r\n    function offlineSales(uint256 offlineNum, uint256 offlineEther) {\r\n        if (msg.sender!=founder) revert();\r\n        // if (now >= startEarlyBird && now <= endEarlyBird) revert(); //offline sales can be done only during early bird time \r\n        if (saleEtherRaised + offlineEther > etherCap) revert();\r\n        totalSupply = (totalSupply + offlineNum);\r\n        balances[founder] = (balances[founder] + offlineNum );\r\n        saleEtherRaised = (saleEtherRaised + offlineEther);\r\n    }\r\n\r\n    /**\r\n     * Emergency Stop ICO.\r\n     *\r\n     *  Applicable tests:\r\n     *\r\n     * - Test unhalting, buying, and succeeding\r\n     */\r\n    function halt() {\r\n        if (msg.sender!=founder) revert();\r\n        halted = true;\r\n    }\r\n\r\n    function unhalt() {\r\n        if (msg.sender!=founder) revert();\r\n        halted = false;\r\n    }\r\n\r\n    /**\r\n     * Change founder address (where ICO ETH is being forwarded).\r\n     *\r\n     * Applicable tests:\r\n     *\r\n     * - Test founder change by hacker\r\n     * - Test founder change\r\n     * - Test founder token allocation twice\r\n     */\r\n    function changeFounder(address newFounder) {\r\n        if (msg.sender!=founder) revert();\r\n        founder = newFounder;\r\n    }\r\n\r\n    /**\r\n     * ERC 20 Standard Token interface transfer function\r\n     *\r\n     * Prevent transfers until freeze period is over.\r\n     *\r\n     * Applicable tests:\r\n     *\r\n     * - Test restricted early transfer\r\n     * - Test transfer after restricted period\r\n     */\r\n    function transfer(address _to, uint256 _value) returns (bool success) {\r\n        if (now <= endTime + transferLockup) revert();\r\n\r\n        //Default assumes totalSupply can't be over max (2^256 - 1).\r\n        //If your token leaves out totalSupply and can issue more tokens as time goes on, you need to check if it doesn't wrap.\r\n        //Replace the if with this one instead.\r\n        if (balances[msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\r\n        //if (balances[msg.sender] >= _value && _value > 0) {\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n\r\n    }\r\n    /**\r\n     * ERC 20 Standard Token interface transfer function\r\n     *\r\n     * Prevent transfers until freeze period is over.\r\n     */\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        if (msg.sender != founder) revert();\r\n\r\n        //same as above. Replace this line with the following if you want to protect against wrapping uints.\r\n        if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && balances[_to] + _value > balances[_to]) {\r\n        //if (balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0) {\r\n            balances[_to] += _value;\r\n            balances[_from] -= _value;\r\n            allowed[_from][msg.sender] -= _value;\r\n            Transfer(_from, _to, _value);\r\n            return true;\r\n        } else { return false; }\r\n    }\r\n\r\n    /**\r\n     * Do not allow direct deposits.\r\n     *\r\n     * All crowdsale depositors must have read the legal agreement.\r\n     * This is confirmed by having them signing the terms of service on the website.\r\n     * The give their crowdsale Ethereum source address on the website.\r\n     * Website signs this address using crowdsale private key (different from founders key).\r\n     * buy() takes this signature as input and rejects all deposits that do not have\r\n     * signature you receive after reading terms of service.\r\n     *\r\n     */\r\n    function() payable {\r\n        buy(0x33);\r\n    }\r\n\r\n    // only owner can kill\r\n    function kill() { \r\n        if (msg.sender == founder) suicide(founder); \r\n    }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"thirdWeekTokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"firstWeekTokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startPeTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endPeTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMintedToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"currentTime\",\"type\":\"uint256\"}],\"name\":\"testPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endEarlyBird\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"earlyBirdCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endFirstWeek\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"peMaxPerPerson\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pePrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startEarlyBird\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"earlyBirdPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"halt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endFourthWeek\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"regularMinPerPerson\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etherLowLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"etherCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"earlyBirdMinPerPerson\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderLockup\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondWeekTokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newFounder\",\"type\":\"address\"}],\"name\":\"changeFounder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"earlyBirdMaxPerPerson\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"founderAllocated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fifthWeekTokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endFifthWeek\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"regularMaxPerPerson\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"peMinPerPerson\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fourthWeekTokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endThirdWeek\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"halted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allocateFounderTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferLockup\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unhalt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"peCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endSecondWeek\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"offlineNum\",\"type\":\"uint256\"},{\"name\":\"offlineEther\",\"type\":\"uint256\"}],\"name\":\"offlineSales\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleEtherRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"founderInput\",\"type\":\"address\"},{\"name\":\"signerInput\",\"type\":\"address\"},{\"name\":\"startTimeInput\",\"type\":\"uint256\"},{\"name\":\"endTimeInput\",\"type\":\"uint256\"},{\"name\":\"startEarlyBirdInput\",\"type\":\"uint256\"},{\"name\":\"endEarlyBirdInput\",\"type\":\"uint256\"},{\"name\":\"startPeInput\",\"type\":\"uint256\"},{\"name\":\"endPeInput\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"eth\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fbt\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AllocateFounderTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"msg\",\"type\":\"bytes32\"}],\"name\":\"print\",\"type\":\"event\"}]","ContractName":"ZeePinToken","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000bef7fa019471b74baf041e1fbc6683b236a5f6fe000000000000000000000000bef7fa019471b74baf041e1fbc6683b236a5f6fe0000000000000000000000000000000000000000000000000000000059b561800000000000000000000000000000000000000000000000000000000059e234800000000000000000000000000000000000000000000000000000000059a94bc00000000000000000000000000000000000000000000000000000000059b5617f000000000000000000000000000000000000000000000000000000005992e2400000000000000000000000000000000000000000000000000000000059a7fa3f","Library":"","SwarmSource":"bzzr://cc92c0ffe95ba16fa631d1d1f025dc47803112a611673d308150a1d797572f31"}]}