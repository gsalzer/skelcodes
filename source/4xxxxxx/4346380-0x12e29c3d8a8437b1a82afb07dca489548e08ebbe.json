{"status":"1","message":"OK","result":[{"SourceCode":"contract CoinContract {\r\n  bool private workingState = false;\r\n  address public owner;\r\n  address public proxy;\r\n  uint256 public x = 100; //coin multiplier\r\n  mapping (address => uint256) private etherClients;\r\n  event FundsGot(address indexed _sender, uint256 _value);\r\n  event ContractEnabled();\r\n  event ContractDisabled();\r\n\r\n  modifier onlyOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  modifier proxyAndOwner {\r\n    require((msg.sender == proxy)||(msg.sender == owner));\r\n    _;\r\n  }\r\n  modifier workingFlag {\r\n    require(workingState == true);\r\n    _;\r\n  }\r\n  //@title Constructor\r\n  function CoinContract() {\r\n    owner = msg.sender;\r\n    enableContract();\r\n  }\r\n  //@title Destructor\r\n  function kill() public onlyOwner {\r\n    require(workingState == false);\r\n    selfdestruct(owner);\r\n  }\r\n  //@title Contract enabler\r\n  function enableContract() onlyOwner {\r\n    workingState = true;\r\n    ContractEnabled();\r\n  }\r\n  //@title Contract disabler\r\n  function disableContract() onlyOwner {\r\n    workingState = false;\r\n    ContractDisabled();\r\n  }\r\n  //@title Contract proxy setter\r\n  function setProxy(address _proxy) onlyOwner {\r\n    proxy = _proxy;\r\n  }\r\n  //@title Contract payment function\r\n  function pay(address _client, uint256 _amount) workingFlag returns (bool ret) {\r\n    require(x > 0);\r\n    etherClients[_client] += _amount;\r\n    uint256 value = x * _amount;\r\n    FundsGot(_client, etherClients[_client]);\r\n    ret = proxy.call(bytes4(sha3(\"generateTokens(address,uint256)\")), _client, value);\r\n  }\r\n  //@title Sender funds getter\r\n  function getSenderFunds(address _sender) workingFlag returns (uint256 amount) {\r\n    return etherClients[_sender];\r\n  }\r\n  //@title Universal call\r\n  function universalCall(string data) proxyAndOwner workingFlag returns (bool result) {\r\n    data;\r\n    bool ret = false;\r\n    return ret;\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enableContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"getSenderFunds\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proxy\",\"type\":\"address\"}],\"name\":\"setProxy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_client\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"pay\",\"outputs\":[{\"name\":\"ret\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data\",\"type\":\"string\"}],\"name\":\"universalCall\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"FundsGot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContractEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContractDisabled\",\"type\":\"event\"}]","ContractName":"CoinContract","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://b92be91c2390f4b6250c2dab9d6e01ef0b3c377263e706a1ac44fce3fb146fb9"}]}