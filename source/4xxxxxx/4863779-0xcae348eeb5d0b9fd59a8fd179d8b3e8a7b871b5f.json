{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract Hexagon {\r\n  /* Main information */\r\n  string public constant name = \"Hexagon\";\r\n  string public constant symbol = \"HEX\";\r\n  uint8 public constant decimals = 4;\r\n  uint8 public constant burnPerTransaction = 1;\r\n  uint256 public constant initialSupply = 420000000000000;\r\n  uint256 public currentSupply = initialSupply;\r\n\r\n  /* Create array with balances */\r\n  mapping (address => uint256) public balanceOf;\r\n  /* Create array with allowance */\r\n  mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n  /* Constructor */\r\n  function Hexagon() public {\r\n    /* Give creator all initial supply of tokens */\r\n    balanceOf[msg.sender] = initialSupply;\r\n  }\r\n\r\n  /* PUBLIC */\r\n  /* Send tokens */\r\n  function transfer(address _to, uint256 _value) public returns (bool success) {\r\n    _transfer(msg.sender, _to, _value);\r\n\r\n    return true;\r\n  }\r\n\r\n  /* Burn tokens */\r\n  function burn(uint256 _value) public returns (bool success) {\r\n    /* Check if the sender has enough */\r\n    require(balanceOf[msg.sender] >= _value);\r\n    /* Subtract from the sender */\r\n    balanceOf[msg.sender] -= _value;\r\n    /* Send to the black hole */\r\n    balanceOf[0x0] += _value;\r\n    /* Update current supply */\r\n    currentSupply -= _value;\r\n    /* Notify network */\r\n    Burn(msg.sender, _value);\r\n\r\n    return true;\r\n  }\r\n\r\n  /* Allow someone to spend on your behalf */\r\n  function approve(address _spender, uint256 _value) public returns (bool success) {\r\n    /* Check if the sender has already  */\r\n    require(_value == 0 || allowance[msg.sender][_spender] == 0);\r\n    /* Add to allowance  */\r\n    allowance[msg.sender][_spender] = _value;\r\n    /* Notify network */\r\n    Approval(msg.sender, _spender, _value);\r\n\r\n    return true;\r\n  }\r\n\r\n  /* Transfer tokens from allowance */\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n    /* Prevent transfer of not allowed tokens */\r\n    require(allowance[_from][msg.sender] >= _value);\r\n    /* Remove tokens from allowance */\r\n    allowance[_from][msg.sender] -= _value;\r\n\r\n    _transfer(_from, _to, _value);\r\n\r\n    return true;\r\n  }\r\n\r\n  /* INTERNAL */\r\n  function _transfer(address _from, address _to, uint _value) internal {\r\n    /* Prevent transfer to 0x0 address. Use burn() instead  */\r\n    require (_to != 0x0);\r\n    /* Check if the sender has enough */\r\n    require (balanceOf[_from] >= _value + burnPerTransaction);\r\n    /* Check for overflows */\r\n    require (balanceOf[_to] + _value > balanceOf[_to]);\r\n    /* Subtract from the sender */\r\n    balanceOf[_from] -= _value + burnPerTransaction;\r\n    /* Add the same to the recipient */\r\n    balanceOf[_to] += _value;\r\n    /* Apply transaction fee */\r\n    balanceOf[0x0] += burnPerTransaction;\r\n    /* Notify network */\r\n    Burn(_from, burnPerTransaction);\r\n    /* Notify network */\r\n    Transfer(_from, _to, _value);\r\n  }\r\n\r\n  /* Events */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Burn(address indexed from, uint256 value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"burnPerTransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"Hexagon","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://13cac6c5eb360da0f8ba62b52d477ef18d608fefd5a0d41bbb9c2fcd9c9e16ae"}]}