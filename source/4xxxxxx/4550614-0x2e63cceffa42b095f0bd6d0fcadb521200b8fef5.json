{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract EtherAuction {\r\n\r\n  // The address that deploys this auction and volunteers 1 eth as price.\r\n  address public auctioneer;\r\n  uint public auctionedEth = 0;\r\n\r\n  uint public highestBid = 0;\r\n  uint public secondHighestBid = 0;\r\n\r\n  address public highestBidder;\r\n  address public secondHighestBidder;\r\n\r\n  uint public latestBidTime = 0;\r\n  uint public auctionEndTime;\r\n\r\n  mapping (address => uint) public balances;\r\n\r\n  bool public auctionStarted = false;\r\n  bool public auctionFinalized = false;\r\n\r\n  event E_AuctionStarted(address _auctioneer, uint _auctionStart, uint _auctionEnd);\r\n  event E_Bid(address _highestBidder, uint _highestBid);\r\n  event E_AuctionFinished(address _highestBidder,uint _highestBid,address _secondHighestBidder,uint _secondHighestBid,uint _auctionEndTime);\r\n\r\n  function EtherAuction(){\r\n    auctioneer = msg.sender;\r\n  }\r\n\r\n  // The auctioneer has to call this function while supplying the 1th to start the auction\r\n  function startAuction() public payable{\r\n    require(!auctionStarted);\r\n    require(msg.sender == auctioneer);\r\n    require(msg.value == (1 * 10 ** 18));\r\n    \r\n    auctionedEth = msg.value;\r\n    auctionStarted = true;\r\n    auctionEndTime = now + (3600 * 24 * 7); // Ends 7 days after the deployment of the contract\r\n\r\n    E_AuctionStarted(msg.sender,now, auctionEndTime);\r\n  }\r\n\r\n  //Anyone can bid by calling this function and supplying the corresponding eth\r\n  function bid() public payable {\r\n    require(auctionStarted);\r\n    require(now < auctionEndTime);\r\n    require(msg.sender != auctioneer);\r\n    require(highestBidder != msg.sender); //If sender is already the highest bidder, reject it.\r\n\r\n    address _newBidder = msg.sender;\r\n\r\n    uint previousBid = balances[_newBidder];\r\n    uint _newBid = msg.value + previousBid;\r\n\r\n    require (_newBid  == highestBid + (5 * 10 ** 16)); //Each bid has to be 0.05 eth higher\r\n\r\n    // The highest bidder is now the second highest bidder\r\n    secondHighestBid = highestBid;\r\n    secondHighestBidder = highestBidder;\r\n\r\n    highestBid = _newBid;\r\n    highestBidder = _newBidder;\r\n\r\n    latestBidTime = now;\r\n    //Update the bidder's balance so they can later withdraw any pending balance\r\n    balances[_newBidder] = _newBid;\r\n\r\n    //If there's less than an hour remaining and someone bids, extend end time.\r\n    if(auctionEndTime - now < 3600)\r\n      auctionEndTime += 3600; // Each bid extends the auctionEndTime by 1 hour\r\n\r\n    E_Bid(highestBidder, highestBid);\r\n\r\n  }\r\n  // Once the auction end has been reached, we distribute the ether.\r\n  function finalizeAuction() public {\r\n    require (now > auctionEndTime);\r\n    require (!auctionFinalized);\r\n    auctionFinalized = true;\r\n\r\n    if(highestBidder == address(0)){\r\n      //If no one bid at the auction, auctioneer can withdraw the funds.\r\n      balances[auctioneer] = auctionedEth;\r\n    }else{\r\n      // Second highest bidder gets nothing, his latest bid is lost and sent to the auctioneer\r\n      balances[secondHighestBidder] -= secondHighestBid;\r\n      balances[auctioneer] += secondHighestBid;\r\n\r\n      //Auctioneer gets the highest bid from the highest bidder.\r\n      balances[highestBidder] -= highestBid;\r\n      balances[auctioneer] += highestBid;\r\n\r\n      //winner gets the 1eth being auctioned.\r\n      balances[highestBidder] += auctionedEth;\r\n      auctionedEth = 0;\r\n    }\r\n\r\n    E_AuctionFinished(highestBidder,highestBid,secondHighestBidder,secondHighestBid,auctionEndTime);\r\n\r\n  }\r\n\r\n  //Once the auction has finished, the bidders can withdraw the eth they put\r\n  //Winner will withdraw the auctionedEth\r\n  //Auctioneer will withdraw the highest bid from the winner\r\n  //Second highest bidder will already have his balance at 0\r\n  //The rest of the bidders get their money back\r\n  function withdrawBalance() public{\r\n    require (auctionFinalized);\r\n\r\n    uint ethToWithdraw = balances[msg.sender];\r\n    if(ethToWithdraw > 0){\r\n      balances[msg.sender] = 0;\r\n      msg.sender.transfer(ethToWithdraw);\r\n    }\r\n\r\n  }\r\n\r\n  //Call thisfunction to know how many seconds remain for the auction to end\r\n  function timeRemaining() public view returns (uint){\r\n      require (auctionEndTime > now);\r\n      return auctionEndTime - now;\r\n  }\r\n\r\n  function myLatestBid() public view returns (uint){\r\n    return balances[msg.sender];\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"auctionFinalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"bid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auctionEndTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auctioneer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startAuction\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highestBidder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondHighestBid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"myLatestBid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secondHighestBidder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auctionedEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highestBid\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timeRemaining\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestBidTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auctionStarted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalizeAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_auctioneer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_auctionStart\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_auctionEnd\",\"type\":\"uint256\"}],\"name\":\"E_AuctionStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_highestBidder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_highestBid\",\"type\":\"uint256\"}],\"name\":\"E_Bid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_highestBidder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_highestBid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_secondHighestBidder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_secondHighestBid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_auctionEndTime\",\"type\":\"uint256\"}],\"name\":\"E_AuctionFinished\",\"type\":\"event\"}]","ContractName":"EtherAuction","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3152b7bdf6648332e052e06fa6507717a30abb25f5ac361b96512fce84aa37b0"}]}