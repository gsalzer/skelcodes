{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract LunarToken {\r\n\r\n  struct LunarPlot {\r\n    address owner;\r\n    uint price;\r\n    bool forSale;\r\n    string metadata;\r\n    bool disabled;\r\n    uint8 subdivision;\r\n    uint parentID;\r\n  }\r\n\r\n  address owner;\r\n  address beneficiary;\r\n  uint public numPlots;\r\n  uint public totalOwned;\r\n  uint public totalPurchases;\r\n  uint public initialPrice;\r\n  uint8 public feePercentage;\r\n  bool public tradingEnabled;\r\n  bool public subdivisionEnabled;\r\n  uint8 public maxSubdivisions;\r\n\r\n  // ERC20-compatible fields\r\n  uint public totalSupply;\r\n  string public symbol = \"LUNA\";\r\n  string public name = \"lunars\";\r\n\r\n  mapping (uint => LunarPlot) public plots;\r\n  mapping (address => uint[]) public plotsOwned;\r\n\r\n  event Transfer(address indexed _from, address indexed _to, uint id);\r\n  event Purchase(address _from, uint id, uint256 price);\r\n  event PriceChanged(address _from, uint id, uint256 newPrice);\r\n  event MetadataUpdated(address _from, uint id, string newData);\r\n\r\n  modifier validID(uint id) {\r\n    require(id < numPlots);\r\n    require(!plots[id].disabled);\r\n    _;\r\n  }\r\n\r\n  modifier ownerOnly() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  modifier isOwnerOf(uint id) {\r\n    require(msg.sender == ownerOf(id));\r\n    _;\r\n  }\r\n\r\n  modifier tradingIsEnabled() {\r\n    require(tradingEnabled);\r\n    _;\r\n  }\r\n\r\n  modifier subdivisionIsEnabled() {\r\n    require(subdivisionEnabled);\r\n    _;\r\n  }\r\n\r\n  function LunarToken(\r\n    uint _numPlots,\r\n    uint _initialPriceInWei,\r\n    uint8 _feePercentage,\r\n    bool _tradingEnabled,\r\n    bool _subdivisionEnabled,\r\n    uint8 _maxSubdivisions\r\n  ) {\r\n    numPlots = _numPlots;\r\n    totalSupply = _numPlots;\r\n    initialPrice = _initialPriceInWei;\r\n    feePercentage = _feePercentage > 100 ? 100 : _feePercentage;\r\n    tradingEnabled = _tradingEnabled;\r\n    subdivisionEnabled = _subdivisionEnabled;\r\n    maxSubdivisions = _maxSubdivisions;\r\n    owner = msg.sender;\r\n    beneficiary = msg.sender;\r\n  }\r\n\r\n  /** An ERC20-compatible balance that returns the number of plots owned */\r\n  function balanceOf(address addr) constant returns(uint) {\r\n    return plotsOwned[addr].length;\r\n  }\r\n\r\n  function tokensOfOwnerByIndex(address addr, uint idx) constant returns(uint) {\r\n    return plotsOwned[addr][idx];\r\n  }\r\n\r\n  function ownerOf(uint id) constant validID(id) returns (address) {\r\n    return plots[id].owner;\r\n  }\r\n\r\n  function isUnowned(uint id) constant validID(id) returns(bool) {\r\n    return plots[id].owner == 0x0;\r\n  }\r\n\r\n  function transfer(uint id, address newOwner, string newData)\r\n    validID(id) isOwnerOf(id) tradingIsEnabled returns(bool)\r\n  {\r\n    plots[id].owner = newOwner;\r\n\r\n    if (bytes(newData).length != 0) {\r\n      plots[id].metadata = newData;\r\n    }\r\n\r\n    Transfer(msg.sender, newOwner, id);\r\n    addPlot(newOwner, id);\r\n    removePlot(msg.sender, id);\r\n    return true;\r\n  }\r\n\r\n  function purchase(uint id, string metadata, bool forSale, uint newPrice)\r\n    validID(id) tradingIsEnabled payable returns(bool)\r\n  {\r\n    LunarPlot plot = plots[id];\r\n\r\n    if (isUnowned(id)) {\r\n      require(msg.value >= initialPrice);\r\n    } else {\r\n      require(plot.forSale && msg.value >= plot.price);\r\n    }\r\n\r\n    if (plot.owner != 0x0) {\r\n      // We only send money to owner if the owner is set\r\n      uint fee = plot.price * feePercentage / 100;\r\n      uint saleProceeds = plot.price - fee;\r\n      plot.owner.transfer(saleProceeds);\r\n      removePlot(plot.owner, id);\r\n    } else {\r\n      totalOwned++;\r\n    }\r\n\r\n    addPlot(msg.sender, id);\r\n    plot.owner = msg.sender;\r\n    plot.forSale = forSale;\r\n    plot.price = newPrice;\r\n\r\n    if (bytes(metadata).length != 0) {\r\n      plot.metadata = metadata;\r\n    }\r\n\r\n    Purchase(msg.sender, id, msg.value);\r\n    totalPurchases++;\r\n    return true;\r\n  }\r\n\r\n  function subdivide(\r\n    uint id,\r\n    bool forSale1,\r\n    bool forSale2,\r\n    uint price1,\r\n    uint price2,\r\n    string metadata1,\r\n    string metadata2\r\n  ) isOwnerOf(id) subdivisionIsEnabled {\r\n    // Prevent more subdivisions than max\r\n    require(plots[id].subdivision < maxSubdivisions);\r\n\r\n    LunarPlot storage oldPlot = plots[id];\r\n\r\n    uint id1 = numPlots++;\r\n    plots[id1] = LunarPlot({\r\n      owner: msg.sender,\r\n      price: price1,\r\n      forSale: forSale1,\r\n      metadata: metadata1,\r\n      disabled: false,\r\n      parentID: id,\r\n      subdivision: oldPlot.subdivision + 1\r\n    });\r\n\r\n    uint id2 = numPlots++;\r\n    plots[id2] = LunarPlot({\r\n      owner: msg.sender,\r\n      price: price2,\r\n      forSale: forSale2,\r\n      metadata: metadata2,\r\n      disabled: false,\r\n      parentID: id,\r\n      subdivision: oldPlot.subdivision + 1\r\n    });\r\n\r\n    // Disable old plot and add new plots\r\n    plots[id].disabled = true;\r\n    totalOwned += 1;\r\n    totalSupply += 1;\r\n\r\n    removePlot(msg.sender, id);\r\n    addPlot(msg.sender, id1);\r\n    addPlot(msg.sender, id2);\r\n  }\r\n\r\n  function setPrice(uint id, bool forSale, uint newPrice) validID(id) isOwnerOf(id) {\r\n    plots[id].price = newPrice;\r\n    plots[id].forSale = forSale;\r\n    PriceChanged(msg.sender, id, newPrice);\r\n  }\r\n\r\n  function setMetadata(uint id, string newData) validID(id) isOwnerOf(id) {\r\n    plots[id].metadata = newData;\r\n    MetadataUpdated(msg.sender, id, newData);\r\n  }\r\n\r\n  // Private methods\r\n\r\n  function removePlot(address addr, uint id) private {\r\n    // Copy the last entry to id and then delete the last one\r\n    uint n = plotsOwned[addr].length;\r\n    for (uint8 i = 0; i < n; i++) {\r\n      if (plotsOwned[addr][i] == id) {\r\n        // If found, copy the last element to the idx and then delete last element\r\n        plotsOwned[addr][i] = plotsOwned[addr][n - 1];\r\n        delete plotsOwned[addr][n - 1];\r\n        plotsOwned[addr].length--;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function addPlot(address addr, uint id) private {\r\n    plotsOwned[addr].push(id);\r\n  }\r\n\r\n  // Contract management methods\r\n\r\n  function setOwner(address newOwner) ownerOnly {\r\n    owner = newOwner;\r\n  }\r\n\r\n  function setBeneficiary(address newBeneficiary) ownerOnly {\r\n    beneficiary = newBeneficiary;\r\n  }\r\n\r\n  function setSubdivisionEnabled(bool enabled) ownerOnly {\r\n    subdivisionEnabled = enabled;\r\n  }\r\n\r\n  function setTradingEnabled(bool enabled) ownerOnly {\r\n    tradingEnabled = enabled;\r\n  }\r\n\r\n  function setFeePercentage(uint8 _percentage) ownerOnly {\r\n    feePercentage = _percentage > 100 ? 100 : _percentage;\r\n  }\r\n\r\n  function setInitialPrice(uint _priceInWei) ownerOnly {\r\n    initialPrice = _priceInWei;\r\n  }\r\n\r\n  function withdraw() ownerOnly {\r\n    beneficiary.transfer(this.balance);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setSubdivisionEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"metadata\",\"type\":\"string\"},{\"name\":\"forSale\",\"type\":\"bool\"},{\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numPlots\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalOwned\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBeneficiary\",\"type\":\"address\"}],\"name\":\"setBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"newData\",\"type\":\"string\"}],\"name\":\"setMetadata\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalPurchases\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"plots\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"forSale\",\"type\":\"bool\"},{\"name\":\"metadata\",\"type\":\"string\"},{\"name\":\"disabled\",\"type\":\"bool\"},{\"name\":\"subdivision\",\"type\":\"uint8\"},{\"name\":\"parentID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"subdivisionEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_priceInWei\",\"type\":\"uint256\"}],\"name\":\"setInitialPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feePercentage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"forSale1\",\"type\":\"bool\"},{\"name\":\"forSale2\",\"type\":\"bool\"},{\"name\":\"price1\",\"type\":\"uint256\"},{\"name\":\"price2\",\"type\":\"uint256\"},{\"name\":\"metadata1\",\"type\":\"string\"},{\"name\":\"metadata2\",\"type\":\"string\"}],\"name\":\"subdivide\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_percentage\",\"type\":\"uint8\"}],\"name\":\"setFeePercentage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"forSale\",\"type\":\"bool\"},{\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setTradingEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"plotsOwned\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSubdivisions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"newOwner\",\"type\":\"address\"},{\"name\":\"newData\",\"type\":\"string\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"isUnowned\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_numPlots\",\"type\":\"uint256\"},{\"name\":\"_initialPriceInWei\",\"type\":\"uint256\"},{\"name\":\"_feePercentage\",\"type\":\"uint8\"},{\"name\":\"_tradingEnabled\",\"type\":\"bool\"},{\"name\":\"_subdivisionEnabled\",\"type\":\"bool\"},{\"name\":\"_maxSubdivisions\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"PriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newData\",\"type\":\"string\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"}]","ContractName":"LunarToken","CompilerVersion":"v0.4.17+commit.bdeb9e52","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000190000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://3da9cb054091eeff125c1ead496047af2df766806a826b3ec71d55e68c279fb9"}]}