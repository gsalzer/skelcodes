{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ninterface Token {\r\n    function transfer(address receiver, uint amount) public;\r\n}\r\n\r\ncontract ASCCrowdsale {\r\n    \r\n    Token public tokenReward;\r\n    address creator;\r\n    address owner = 0xb99776950E24a1D580d8c1622ab6C92002aEc169;\r\n\r\n    uint256 public startDate;\r\n    uint256 public endDate;\r\n    uint256 public price;\r\n\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    function ASCCrowdsale() public {\r\n        creator = msg.sender;\r\n        startDate = 1452038400;     // 06/01/2018\r\n        endDate = 1521586800;       // 21/03/2018\r\n        price = 72000;\r\n        tokenReward = Token(0xE5b7301D818299487b744900923A40cF7d1f0242);\r\n    }\r\n\r\n    function setOwner(address _owner) public {\r\n        require(msg.sender == creator);\r\n        owner = _owner;      \r\n    }\r\n\r\n    function setCreator(address _creator) public {\r\n        require(msg.sender == creator);\r\n        creator = _creator;      \r\n    }    \r\n\r\n    function setStartDate(uint256 _startDate) public {\r\n        require(msg.sender == creator);\r\n        startDate = _startDate;      \r\n    }\r\n\r\n    function setEndDate(uint256 _endDate) public {\r\n        require(msg.sender == creator);\r\n        endDate = _endDate;      \r\n    }\r\n\r\n    function setPrice(uint256 _price) public {\r\n        require(msg.sender == creator);\r\n        price = _price;      \r\n    }\r\n\r\n    function sendToken(address receiver, uint amount) public {\r\n        require(msg.sender == creator);\r\n        tokenReward.transfer(receiver, amount);\r\n        FundTransfer(receiver, amount, true);    \r\n    }\r\n\r\n    function () payable public {\r\n        require(msg.value > 0);\r\n        require(now > startDate);\r\n        require(now < endDate);\r\n        uint amount = msg.value / 1 ether;\r\n\t    amount *= price * 100;\r\n\t    uint amount10 = amount / 10;\r\n\r\n        // period 1 : 60%\r\n        if(now > startDate && now < 1516230000) {\r\n            amount += amount10 * 6;\r\n        }\r\n\r\n        // Pperiod 2 : 40%\r\n        if(now > 1516230000 && now < 1517439600) {\r\n            amount += amount10 * 4;\r\n        }\r\n\r\n        // period 3 : 20%\r\n        if(now > 1517439600 && now < 1518649200) {\r\n            amount += amount10 * 2;\r\n        }\r\n\r\n        // period 4 : 10%\r\n        if(now > 1518649200 && now < 1519858800) {\r\n            amount += amount10;\r\n        }\r\n\r\n        tokenReward.transfer(msg.sender, amount);\r\n        FundTransfer(msg.sender, amount, true);\r\n        owner.transfer(msg.value);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_endDate\",\"type\":\"uint256\"}],\"name\":\"setEndDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"setCreator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_startDate\",\"type\":\"uint256\"}],\"name\":\"setStartDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"ASCCrowdsale","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f646d70e1cbc38f7f4570690ac38784c01c826fcc07c7e9af510a3e5a769ca07"}]}