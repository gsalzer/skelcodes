{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ncontract ERC20TokenInterface {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract MigrationRecipientV1Interface {\r\n    function migrateTokensV1(address _owner, uint256 _balance) public;\r\n}\r\n\r\ncontract MainToken is ERC20TokenInterface, MigrationRecipientV1Interface {\r\n    string public name = \"Swag\";\r\n    string public symbol = \"SWAG\";\r\n    uint8 public decimals = 0;\r\n    string public version = '1';\r\n    mapping (address => uint256) balances;\r\n    address migrateToAddress = 0x0;\r\n    address[] migrationSources;\r\n\r\n    function MainToken() public {\r\n        migrationSources.push(msg.sender);\r\n    }\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public onlyIfNotMigrating returns (bool success) {\r\n        if (balances[msg.sender] >= _value && _value > 0) {\r\n            balances[msg.sender] -= _value;\r\n            balances[_to] += _value;\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        } else {\r\n            return false; // Insufficient balance or negative value\r\n        }\r\n    }\r\n\r\n    // Migrate tokens to a new version of the contract\r\n    function migrateMyTokens() public onlyIfMigrating {\r\n        var balance = balances[msg.sender];\r\n        if (balance > 0) {\r\n            totalSupply -= balance;\r\n            balances[msg.sender] = 0;\r\n            MigrationRecipientV1Interface(migrateToAddress).migrateTokensV1(msg.sender, balance);\r\n        }\r\n    }\r\n\r\n    // Receive tokens from an older version of the token contract\r\n    function migrateTokensV1(address _owner, uint256 _value) public migrationSourcesOnly {\r\n        totalSupply += _value;\r\n        balances[_owner] += _value;\r\n        Transfer(0x0, _owner, _value);\r\n    }\r\n\r\n    function setMigrateToAddress(address _to) public migrationSourcesOnly {\r\n        migrateToAddress = _to;\r\n    }\r\n\r\n    function setOtherMigrationSources(address[] _otherMigrationSources) public migrationSourcesOnly {\r\n        migrationSources = _otherMigrationSources;\r\n        migrationSources.push(msg.sender);\r\n    }\r\n\r\n    function airdrop(address[] _targets, uint256 _value) public migrationSourcesOnly {\r\n        totalSupply += _targets.length * _value;\r\n        for (uint256 i = 0; i < _targets.length; i++) {\r\n            address target = _targets[i];\r\n            balances[target] += _value;\r\n            Transfer(0x0, target, _value);\r\n        }\r\n    }\r\n\r\n    function () public {\r\n    }\r\n\r\n    modifier onlyIfMigrating() {\r\n        require(migrateToAddress != 0x0);\r\n        _;\r\n    }\r\n\r\n    modifier onlyIfNotMigrating() {\r\n        require(migrateToAddress == 0x0);\r\n        _;\r\n    }\r\n\r\n    modifier migrationSourcesOnly() {\r\n        require(arrayContainsAddress256(migrationSources, msg.sender));\r\n        _;\r\n    }\r\n\r\n    // \"addresses\" may not be longer than 256\r\n    function arrayContainsAddress256(address[] addresses, address value) internal pure returns (bool) {\r\n        for (uint8 i = 0; i < addresses.length; i++) {\r\n            if (addresses[i] == value) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Allowances are intentionally not supported.\r\n    // These are only here to implement the ERC20 interface.\r\n    function approve(address, uint256) public returns (bool) {\r\n        return false;\r\n    }\r\n\r\n    function allowance(address, address) public constant returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    function transferFrom(address, address, uint256) public returns (bool) {\r\n        return false;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_otherMigrationSources\",\"type\":\"address[]\"}],\"name\":\"setOtherMigrationSources\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"setMigrateToAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"migrateMyTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_targets\",\"type\":\"address[]\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"airdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"migrateTokensV1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"MainToken","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://79de79ca7c8cda68bf8161a0a05d00f2961294cf6d02255dd8a4f4119e01b83d"}]}