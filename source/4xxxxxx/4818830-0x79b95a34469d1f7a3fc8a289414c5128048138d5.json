{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract CryptoPicture {\r\n\r\n\taddress\t\tpublic\t_admin;\r\n\tuint\t\t\t\t_supply = 29;\r\n\tuint \t\t\t\t_id;\r\n\tbytes32[29]\t\t\t_cryptoPicture;\r\n\tbool\t\tpublic\t_endEdit;\r\n\r\n\tmapping ( bytes32 => string ) \t_namePicture;\r\n\tmapping ( bytes32 => string ) \t_author;\r\n\tmapping ( bytes32 => bytes32 ) \t_hashPicture;\r\n\tmapping ( bytes32 => address ) \t_owner;\r\n\tmapping ( address => mapping ( address => mapping ( bytes32 => bool ) ) ) \t_allowance;\r\n\r\n\tevent \tTransfer( address from, address to, bytes32 picture );\r\n\tevent \tApproval( address owner, address spender, bytes32 cryptoPicture, bool resolution );\r\n\r\n\tfunction \tCryptoPicture() public {\r\n\t\t_admin = msg.sender;\r\n\t}\r\n\r\n\t/*** Assert  functions ***/\r\n\tfunction \tassertAdmin() view private {\r\n\t\tif ( msg.sender != _admin ) {\r\n\t\t\tassert( false );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction \tassertOwnerPicture( address owner, bytes32 hash ) view private {\r\n\t\tif ( owner != _owner[hash] ) {\r\n\t\t\tassert( false );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction \tassertId( uint id ) view private {\r\n\t\tif ( id >= _supply )\r\n\t\t\tassert( false );\r\n\t}\r\n\r\n\tfunction \tassertAllowance( address from, bytes32 hash ) view private {\r\n\t\tif ( _allowance[from][msg.sender][hash] == false )\r\n\t\t\tassert( false );\r\n\t}\r\n\r\n\tfunction \tassertEdit() view private {\r\n\t\tif ( _endEdit == true )\r\n\t\t\tassert( false );\r\n\t}\r\n\r\n\tfunction\tassertProtectedEdit( uint id ) view private {\r\n\t\tassertAdmin();\r\n\t\tassertEdit();\r\n\t\tassertId( id );\r\n\t}\r\n\r\n\t/*** Admin panel ***/\r\n\tfunction  \taddPicture( string namePicture, bytes32 hashPicture, string author, address owner ) public {\r\n\t\tassertAdmin();\r\n\t\tassertId(_id);\r\n\r\n\t\tsetPicture( _id, namePicture, hashPicture, author, owner );\r\n\t\t_id++;\r\n\t}\r\n\r\n\tfunction\tsetEndEdit() public {\r\n\t\tassertAdmin();\r\n\t\t_endEdit = true;\r\n\t}\r\n\r\n\tfunction \tsetAdmin( address admin ) public {\r\n\t\tassertAdmin();\r\n\t\t_admin = admin;\r\n\t}\r\n\r\n\t/*** Edit function for Admin ***/\r\n\tfunction \tsetNamePiture( uint id, string namePicture ) public {\r\n\t\tbytes32 \thash;\r\n\r\n\t\tassertProtectedEdit( id );\r\n\r\n\t\thash = _cryptoPicture[id];\r\n\t\tsetPicture( id, namePicture, _hashPicture[hash], _author[hash], _owner[hash] );\r\n\t}\r\n\r\n\tfunction \tsetAuthor( uint id, string author ) public {\r\n\t\tbytes32 \thash;\r\n\r\n\t\tassertProtectedEdit( id );\r\n\r\n\t\thash = _cryptoPicture[id];\r\n\t\tsetPicture( id, _namePicture[hash], _hashPicture[hash], author, _owner[hash]);\r\n\t}\r\n\r\n\tfunction \t\tsetHashPiture( uint id, bytes32 hashPicture ) public {\r\n\t\tbytes32 \thash;\r\n\r\n\t\tassertProtectedEdit( id );\r\n\r\n\t\thash = _cryptoPicture[id];\r\n\t\tsetPicture( id, _namePicture[hash], hashPicture, _author[hash], _owner[hash] );\r\n\t}\r\n\r\n\tfunction \t\tsetOwner( uint id, address owner ) public {\r\n\t\tbytes32 \thash;\r\n\r\n\t\tassertProtectedEdit( id );\r\n\r\n\t\thash = _cryptoPicture[id];\r\n\t\tsetPicture( id, _namePicture[hash], _hashPicture[hash], _author[hash], owner );\r\n\t}\r\n\r\n\t/*** private function for edit field cryptoPicture\t***/\r\n\tfunction \tsetPicture( uint id, string namePicture, bytes32 hashPicture, string author, address owner ) private {\r\n\t\tbytes32 \thash;\r\n\r\n\t\thash = sha256( this, id, namePicture, hashPicture, author );\r\n\r\n\t\t_cryptoPicture[id] = hash;\r\n\t\t_namePicture[hash] = namePicture;\r\n\t\t_author[hash] = author;\r\n\t\t_owner[hash] = owner;\r\n\t\t_hashPicture[hash] = hashPicture;\r\n\t}\r\n\r\n\t/*** ERC20 similary ***/\r\n\tfunction \ttotalSupply() public constant returns ( uint )  {\r\n\t\treturn \t_supply;\r\n\t}\r\n\r\n\tfunction \tallowance( address owner, address spender, bytes32 picture) public constant returns ( bool ) {\r\n\t\treturn \t_allowance[owner][spender][picture];\r\n\t}\r\n\r\n\tfunction \tapprove( address spender, bytes32 hash, bool resolution ) public returns ( bool ) {\r\n\t\tassertOwnerPicture( msg.sender, hash );\r\n\r\n\t\t_allowance[msg.sender][spender][hash] = resolution;\r\n\t\tApproval( msg.sender, spender, hash, resolution );\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction \ttransfer( address to, bytes32 hash ) public returns ( bool ) {\r\n\t\tassertOwnerPicture( msg.sender, hash );\r\n\r\n\t\t_owner[hash] = to;\r\n\t\tTransfer( msg.sender, to, hash );\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction \ttransferFrom( address from, address to, bytes32 hash ) public returns( bool ) {\r\n\t\tassertOwnerPicture( from, hash );\r\n\t\tassertAllowance( from, hash );\r\n\r\n\t\t_owner[hash] = to;\r\n\t\t_allowance[from][msg.sender][hash] = false;\r\n\t\tTransfer( from, to, hash );\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*** Get variable ***/\r\n\tfunction \tgetCryptoPicture( uint id ) public constant returns ( bytes32 ) {\r\n\t\tassertId( id );\r\n\r\n\t\treturn _cryptoPicture[id];\r\n\t}\r\n\r\n\tfunction \tgetNamePicture( bytes32 picture ) public constant returns ( string ) {\r\n\t\treturn _namePicture[picture];\r\n\t}\r\n\r\n\tfunction \tgetAutorPicture( bytes32 picture ) public constant returns ( string ) {\r\n\t\treturn _author[picture];\r\n\t}\r\n\r\n\tfunction \tgetHashPicture( bytes32 picture ) public constant returns ( bytes32 ) {\r\n\t\treturn _hashPicture[picture];\r\n\t}\r\n\r\n\tfunction \tgetOwnerPicture( bytes32 picture ) public constant returns ( address ) {\r\n\t\treturn _owner[picture];\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getCryptoPicture\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"picture\",\"type\":\"bytes32\"}],\"name\":\"getAutorPicture\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setEndEdit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"namePicture\",\"type\":\"string\"}],\"name\":\"setNamePiture\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"picture\",\"type\":\"bytes32\"}],\"name\":\"getNamePicture\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"picture\",\"type\":\"bytes32\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"namePicture\",\"type\":\"string\"},{\"name\":\"hashPicture\",\"type\":\"bytes32\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"addPicture\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"picture\",\"type\":\"bytes32\"}],\"name\":\"getHashPicture\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"hashPicture\",\"type\":\"bytes32\"}],\"name\":\"setHashPiture\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"author\",\"type\":\"string\"}],\"name\":\"setAuthor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_endEdit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"resolution\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"picture\",\"type\":\"bytes32\"}],\"name\":\"getOwnerPicture\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"picture\",\"type\":\"bytes32\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"cryptoPicture\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"resolution\",\"type\":\"bool\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"CryptoPicture","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1f48099acc2acbe77b543f8ccd6d6dee92149722ac6d95476f5259d43bf786a8"}]}