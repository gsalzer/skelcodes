{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract SafeMath {\r\n    function safeAdd(uint x, uint y) pure internal returns(uint) {\r\n      uint z = x + y;\r\n      assert((z >= x) && (z >= y));\r\n      return z;\r\n    }\r\n\r\n    function safeSubtract(uint x, uint y) pure internal returns(uint) {\r\n      assert(x >= y);\r\n      uint z = x - y;\r\n      return z;\r\n    }\r\n\r\n    function safeMult(uint x, uint y) pure internal returns(uint) {\r\n      uint z = x * y;\r\n      assert((x == 0)||(z/x == y));\r\n      return z;\r\n    }\r\n\r\n    function getRandomNumber(uint16 maxRandom, uint8 min, address privateAddress) constant public returns(uint8) {\r\n        uint256 genNum = uint256(block.blockhash(block.number-1)) + uint256(privateAddress);\r\n        return uint8(genNum % (maxRandom - min + 1)+min);\r\n    }\r\n}\r\n\r\ncontract Enums {\r\n    enum ResultCode {\r\n        SUCCESS,\r\n        ERROR_CLASS_NOT_FOUND,\r\n        ERROR_LOW_BALANCE,\r\n        ERROR_SEND_FAIL,\r\n        ERROR_NOT_OWNER,\r\n        ERROR_NOT_ENOUGH_MONEY,\r\n        ERROR_INVALID_AMOUNT\r\n    }\r\n\r\n    enum AngelAura { \r\n        Blue, \r\n        Yellow, \r\n        Purple, \r\n        Orange, \r\n        Red, \r\n        Green \r\n    }\r\n}\r\n\r\n\r\n\r\ncontract AccessControl {\r\n    address public creatorAddress;\r\n    uint16 public totalSeraphims = 0;\r\n    mapping (address => bool) public seraphims;\r\n\r\n    bool public isMaintenanceMode = true;\r\n \r\n    modifier onlyCREATOR() {\r\n        require(msg.sender == creatorAddress);\r\n        _;\r\n    }\r\n\r\n    modifier onlySERAPHIM() {\r\n        require(seraphims[msg.sender] == true);\r\n        _;\r\n    }\r\n    \r\n    modifier isContractActive {\r\n        require(!isMaintenanceMode);\r\n        _;\r\n    }\r\n    \r\n    // Constructor\r\n    function AccessControl() public {\r\n        creatorAddress = msg.sender;\r\n    }\r\n    \r\n\r\n    function addSERAPHIM(address _newSeraphim) onlyCREATOR public {\r\n        if (seraphims[_newSeraphim] == false) {\r\n            seraphims[_newSeraphim] = true;\r\n            totalSeraphims += 1;\r\n        }\r\n    }\r\n    \r\n    function removeSERAPHIM(address _oldSeraphim) onlyCREATOR public {\r\n        if (seraphims[_oldSeraphim] == true) {\r\n            seraphims[_oldSeraphim] = false;\r\n            totalSeraphims -= 1;\r\n        }\r\n    }\r\n\r\n    function updateMaintenanceMode(bool _isMaintaining) onlyCREATOR public {\r\n        isMaintenanceMode = _isMaintaining;\r\n    }\r\n\r\n  \r\n} \r\n\r\n\r\n\r\ncontract IAccessoryData is AccessControl, Enums {\r\n    uint8 public totalAccessorySeries;    \r\n    uint32 public totalAccessories;\r\n    \r\n \r\n    /*** FUNCTIONS ***/\r\n    //*** Write Access ***//\r\n    function createAccessorySeries(uint8 _AccessorySeriesId, uint32 _maxTotal, uint _price) onlyCREATOR public returns(uint8) ;\r\n\tfunction setAccessory(uint8 _AccessorySeriesId, address _owner) onlySERAPHIM external returns(uint64);\r\n   function addAccessoryIdMapping(address _owner, uint64 _accessoryId) private;\r\n\tfunction transferAccessory(address _from, address _to, uint64 __accessoryId) onlySERAPHIM public returns(ResultCode);\r\n    function ownerAccessoryTransfer (address _to, uint64 __accessoryId)  public;\r\n    \r\n    //*** Read Access ***//\r\n    function getAccessorySeries(uint8 _accessorySeriesId) constant public returns(uint8 accessorySeriesId, uint32 currentTotal, uint32 maxTotal, uint price) ;\r\n\tfunction getAccessory(uint _accessoryId) constant public returns(uint accessoryID, uint8 AccessorySeriesID, address owner);\r\n\tfunction getOwnerAccessoryCount(address _owner) constant public returns(uint);\r\n\tfunction getAccessoryByIndex(address _owner, uint _index) constant public returns(uint) ;\r\n    function getTotalAccessorySeries() constant public returns (uint8) ;\r\n    function getTotalAccessories() constant public returns (uint);\r\n}\r\n\r\n\r\ncontract IAngelCardData is AccessControl, Enums {\r\n    uint8 public totalAngelCardSeries;\r\n    uint64 public totalAngels;\r\n\r\n    \r\n    // write\r\n    // angels\r\n    function createAngelCardSeries(uint8 _angelCardSeriesId, uint _basePrice,  uint64 _maxTotal, uint8 _baseAura, uint16 _baseBattlePower, uint64 _liveTime) onlyCREATOR external returns(uint8);\r\n    function updateAngelCardSeries(uint8 _angelCardSeriesId) onlyCREATOR external;\r\n    function setAngel(uint8 _angelCardSeriesId, address _owner, uint _price, uint16 _battlePower) onlySERAPHIM external returns(uint64);\r\n    function addToAngelExperienceLevel(uint64 _angelId, uint _value) onlySERAPHIM external;\r\n    function setAngelLastBattleTime(uint64 _angelId) onlySERAPHIM external;\r\n    function setAngelLastVsBattleTime(uint64 _angelId) onlySERAPHIM external;\r\n    function setLastBattleResult(uint64 _angelId, uint16 _value) onlySERAPHIM external;\r\n    function addAngelIdMapping(address _owner, uint64 _angelId) private;\r\n    function transferAngel(address _from, address _to, uint64 _angelId) onlySERAPHIM public returns(ResultCode);\r\n    function ownerAngelTransfer (address _to, uint64 _angelId)  public;\r\n\r\n    // read\r\n    function getAngelCardSeries(uint8 _angelCardSeriesId) constant public returns(uint8 angelCardSeriesId, uint64 currentAngelTotal, uint basePrice, uint64 maxAngelTotal, uint8 baseAura, uint baseBattlePower, uint64 lastSellTime, uint64 liveTime);\r\n    function getAngel(uint64 _angelId) constant public returns(uint64 angelId, uint8 angelCardSeriesId, uint16 battlePower, uint8 aura, uint16 experience, uint price, uint64 createdTime, uint64 lastBattleTime, uint64 lastVsBattleTime, uint16 lastBattleResult, address owner);\r\n    function getOwnerAngelCount(address _owner) constant public returns(uint);\r\n    function getAngelByIndex(address _owner, uint _index) constant public returns(uint64);\r\n    function getTotalAngelCardSeries() constant public returns (uint8);\r\n    function getTotalAngels() constant public returns (uint64);\r\n}\r\n\r\n\r\ncontract IPetCardData is AccessControl, Enums {\r\n    uint8 public totalPetCardSeries;    \r\n    uint64 public totalPets;\r\n    \r\n    // write\r\n    function createPetCardSeries(uint8 _petCardSeriesId, uint32 _maxTotal) onlyCREATOR public returns(uint8);\r\n    function setPet(uint8 _petCardSeriesId, address _owner, string _name, uint8 _luck, uint16 _auraRed, uint16 _auraYellow, uint16 _auraBlue) onlySERAPHIM external returns(uint64);\r\n    function setPetAuras(uint64 _petId, uint8 _auraRed, uint8 _auraBlue, uint8 _auraYellow) onlySERAPHIM external;\r\n    function setPetLastTrainingTime(uint64 _petId) onlySERAPHIM external;\r\n    function setPetLastBreedingTime(uint64 _petId) onlySERAPHIM external;\r\n    function addPetIdMapping(address _owner, uint64 _petId) private;\r\n    function transferPet(address _from, address _to, uint64 _petId) onlySERAPHIM public returns(ResultCode);\r\n    function ownerPetTransfer (address _to, uint64 _petId)  public;\r\n    function setPetName(string _name, uint64 _petId) public;\r\n\r\n    // read\r\n    function getPetCardSeries(uint8 _petCardSeriesId) constant public returns(uint8 petCardSeriesId, uint32 currentPetTotal, uint32 maxPetTotal);\r\n    function getPet(uint _petId) constant public returns(uint petId, uint8 petCardSeriesId, string name, uint8 luck, uint16 auraRed, uint16 auraBlue, uint16 auraYellow, uint64 lastTrainingTime, uint64 lastBreedingTime, address owner);\r\n    function getOwnerPetCount(address _owner) constant public returns(uint);\r\n    function getPetByIndex(address _owner, uint _index) constant public returns(uint);\r\n    function getTotalPetCardSeries() constant public returns (uint8);\r\n    function getTotalPets() constant public returns (uint);\r\n}\r\n\r\n  \r\n\r\n   \r\n\t\r\n\r\ncontract Realm is AccessControl, Enums, SafeMath {\r\n    // Addresses for other contracts realm interacts with. \r\n    address public angelCardDataContract;\r\n    address public petCardDataContract;\r\n    address public accessoryDataContract;\r\n    \r\n    // events\r\n    event EventCreateAngel(address indexed owner, uint64 angelId);\r\n    event EventCreatePet(address indexed owner, uint petId);\r\n     event EventCreateAccessory(address indexed owner, uint accessoryId);\r\n    \r\n\r\n    /*** DATA TYPES ***/\r\n    struct AngelCardSeries {\r\n        uint8 angelCardSeriesId;\r\n        uint basePrice; \r\n        uint64 currentAngelTotal;\r\n        uint64 maxAngelTotal;\r\n        AngelAura baseAura;\r\n        uint baseBattlePower;\r\n        uint64 lastSellTime;\r\n        uint64 liveTime;\r\n    }\r\n\r\n    struct PetCardSeries {\r\n        uint8 petCardSeriesId;\r\n        uint32 currentPetTotal;\r\n        uint32 maxPetTotal;\r\n    }\r\n\r\n    struct Angel {\r\n        uint64 angelId;\r\n        uint8 angelCardSeriesId;\r\n        address owner;\r\n        uint16 battlePower;\r\n        AngelAura aura;\r\n        uint16 experience;\r\n        uint price;\r\n        uint64 createdTime;\r\n        uint64 lastBattleTime;\r\n        uint64 lastVsBattleTime;\r\n        uint16 lastBattleResult;\r\n    }\r\n\r\n    struct Pet {\r\n        uint64 petId;\r\n        uint8 petCardSeriesId;\r\n        address owner;\r\n        string name;\r\n        uint8 luck;\r\n        uint16 auraRed;\r\n        uint16 auraYellow;\r\n        uint16 auraBlue;\r\n        uint64 lastTrainingTime;\r\n        uint64 lastBreedingTime;\r\n        uint price; \r\n        uint64 liveTime;\r\n    }\r\n    \r\n      struct AccessorySeries {\r\n        uint8 AccessorySeriesId;\r\n        uint32 currentTotal;\r\n        uint32 maxTotal;\r\n        uint price;\r\n    }\r\n\r\n    struct Accessory {\r\n        uint32 accessoryId;\r\n        uint8 accessorySeriesId;\r\n        address owner;\r\n    }\r\n\r\n    // write functions\r\n    function SetAngelCardDataContact(address _angelCardDataContract) onlyCREATOR external {\r\n        angelCardDataContract = _angelCardDataContract;\r\n    }\r\n    function SetPetCardDataContact(address _petCardDataContract) onlyCREATOR external {\r\n        petCardDataContract = _petCardDataContract;\r\n    }\r\n    function SetAccessoryDataContact(address _accessoryDataContract) onlyCREATOR external {\r\n        accessoryDataContract = _accessoryDataContract;\r\n    }\r\n\r\n\r\n    function withdrawEther() external onlyCREATOR {\r\n    creatorAddress.transfer(this.balance);\r\n}\r\n\r\n    //Create each mint of a petCard\r\n     function createPet(uint8 _petCardSeriesId, string _newname) isContractActive external {\r\n        IPetCardData petCardData = IPetCardData(petCardDataContract);\r\n        PetCardSeries memory petSeries;\r\n      \r\n      \r\n        (,petSeries.currentPetTotal, petSeries.maxPetTotal) = petCardData.getPetCardSeries(_petCardSeriesId);\r\n\r\n        \r\n        if (petSeries.currentPetTotal >= petSeries.maxPetTotal) { revert ();}\r\n        \r\n        //timechecks - in case people try to interact with the contract directly and get pets before they are available\r\n        if (_petCardSeriesId > 4) {revert();} //Pets higher than 4 come from battle, breeding, or marketplace. \r\n        if ((_petCardSeriesId == 2) && (now < 1518348600)) {revert();}\r\n        if ((_petCardSeriesId == 3) && (now < 1520076600)) {revert();}\r\n        if ((_petCardSeriesId == 4) && (now < 1521804600)) {revert();}\r\n         \r\n        //first find pet luck\r\n        uint8 _newLuck = getRandomNumber(19, 10, msg.sender);\r\n        \r\n        \r\n        uint16 _auraRed = 0;\r\n        uint16 _auraYellow = 0;\r\n        uint16 _auraBlue = 0;\r\n        \r\n        uint32 _auraColor = getRandomNumber(2,0,msg.sender);\r\n        if (_auraColor == 0) { _auraRed = 2;}\r\n        if (_auraColor == 1) { _auraYellow = 2;}\r\n        if (_auraColor == 2) { _auraBlue = 2;}\r\n        \r\n        uint64 petId = petCardData.setPet(_petCardSeriesId, msg.sender, _newname, _newLuck, _auraRed, _auraYellow, _auraBlue);\r\n        \r\n        EventCreatePet(msg.sender, petId);\r\n    }\r\n\r\n //Create each mint of a Accessory card \r\n     function createAccessory(uint8 _accessorySeriesId) isContractActive external payable {\r\n        if (_accessorySeriesId > 18) {revert();} \r\n    IAccessoryData AccessoryData = IAccessoryData(accessoryDataContract);\r\n      AccessorySeries memory accessorySeries;\r\n      (,accessorySeries.currentTotal, accessorySeries.maxTotal, accessorySeries.price) = AccessoryData.getAccessorySeries(_accessorySeriesId);\r\n    if (accessorySeries.currentTotal >= accessorySeries.maxTotal) { revert ();}\r\n      if (msg.value < accessorySeries.price) { revert();}\r\n     uint64 accessoryId = AccessoryData.setAccessory(_accessorySeriesId, msg.sender);\r\n     \r\n     EventCreateAccessory(msg.sender, accessoryId);\r\n    }\r\n    \r\n    \r\n    // created every mint of an angel card\r\n    function createAngel(uint8 _angelCardSeriesId) isContractActive external payable {\r\n        IAngelCardData angelCardData = IAngelCardData(angelCardDataContract);\r\n        AngelCardSeries memory series;\r\n        (, series.currentAngelTotal, series.basePrice, series.maxAngelTotal,,series.baseBattlePower, series.lastSellTime, series.liveTime) = angelCardData.getAngelCardSeries(_angelCardSeriesId);\r\n      \r\n      if ( _angelCardSeriesId > 24) {revert();}\r\n        //Checked here and in angelCardData\r\n        if (series.currentAngelTotal >= series.maxAngelTotal) { revert();}\r\n        if (_angelCardSeriesId > 3) {\r\n            // check is it within the  release schedule\r\n            if (now < series.liveTime) {\r\n            revert();\r\n            }\r\n        }\r\n        // Verify the price paid for card is correct\r\n        if (series.basePrice > msg.value) {revert(); }\r\n        \r\n        // add angel\r\n        uint64 angelId = angelCardData.setAngel(_angelCardSeriesId, msg.sender, msg.value, uint16(series.baseBattlePower+getRandomNumber(10,0,msg.sender)));\r\n        \r\n        EventCreateAngel(msg.sender, angelId);\r\n    }\r\n      function kill() onlyCREATOR external {\r\n        selfdestruct(creatorAddress);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_angelCardSeriesId\",\"type\":\"uint8\"}],\"name\":\"createAngel\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_angelCardDataContract\",\"type\":\"address\"}],\"name\":\"SetAngelCardDataContact\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"seraphims\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_isMaintaining\",\"type\":\"bool\"}],\"name\":\"updateMaintenanceMode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_accessorySeriesId\",\"type\":\"uint8\"}],\"name\":\"createAccessory\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_accessoryDataContract\",\"type\":\"address\"}],\"name\":\"SetAccessoryDataContact\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"maxRandom\",\"type\":\"uint16\"},{\"name\":\"min\",\"type\":\"uint8\"},{\"name\":\"privateAddress\",\"type\":\"address\"}],\"name\":\"getRandomNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isMaintenanceMode\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oldSeraphim\",\"type\":\"address\"}],\"name\":\"removeSERAPHIM\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"petCardDataContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"accessoryDataContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSeraphims\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSeraphim\",\"type\":\"address\"}],\"name\":\"addSERAPHIM\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_petCardSeriesId\",\"type\":\"uint8\"},{\"name\":\"_newname\",\"type\":\"string\"}],\"name\":\"createPet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"angelCardDataContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creatorAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_petCardDataContract\",\"type\":\"address\"}],\"name\":\"SetPetCardDataContact\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"angelId\",\"type\":\"uint64\"}],\"name\":\"EventCreateAngel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"petId\",\"type\":\"uint256\"}],\"name\":\"EventCreatePet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"accessoryId\",\"type\":\"uint256\"}],\"name\":\"EventCreateAccessory\",\"type\":\"event\"}]","ContractName":"Realm","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1ca515538e2f47df827e254dedfba62fc4714d1a63a9e35ba1600c4f6efe42e0"}]}