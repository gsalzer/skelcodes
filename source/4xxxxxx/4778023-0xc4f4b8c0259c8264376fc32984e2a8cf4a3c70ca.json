{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.15;\r\n\r\n\r\n/// @title Abstract oracle contract - Functions to be implemented by oracles\r\ncontract Oracle {\r\n\r\n    function isOutcomeSet() public constant returns (bool);\r\n    function getOutcome() public constant returns (int);\r\n}\r\n\r\n\r\n\r\n/// @title Centralized oracle contract - Allows the contract owner to set an outcome\r\n/// @author Stefan George - <stefan@gnosis.pm>\r\ncontract CentralizedOracle is Oracle {\r\n\r\n    /*\r\n     *  Events\r\n     */\r\n    event OwnerReplacement(address indexed newOwner);\r\n    event OutcomeAssignment(int outcome);\r\n\r\n    /*\r\n     *  Storage\r\n     */\r\n    address public owner;\r\n    bytes public ipfsHash;\r\n    bool public isSet;\r\n    int public outcome;\r\n\r\n    /*\r\n     *  Modifiers\r\n     */\r\n    modifier isOwner () {\r\n        // Only owner is allowed to proceed\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /*\r\n     *  Public functions\r\n     */\r\n    /// @dev Constructor sets owner address and IPFS hash\r\n    /// @param _ipfsHash Hash identifying off chain event description\r\n    function CentralizedOracle(address _owner, bytes _ipfsHash)\r\n        public\r\n    {\r\n        // Description hash cannot be null\r\n        require(_ipfsHash.length == 46);\r\n        owner = _owner;\r\n        ipfsHash = _ipfsHash;\r\n    }\r\n\r\n    /// @dev Replaces owner\r\n    /// @param newOwner New owner\r\n    function replaceOwner(address newOwner)\r\n        public\r\n        isOwner\r\n    {\r\n        // Result is not set yet\r\n        require(!isSet);\r\n        owner = newOwner;\r\n        OwnerReplacement(newOwner);\r\n    }\r\n\r\n    /// @dev Sets event outcome\r\n    /// @param _outcome Event outcome\r\n    function setOutcome(int _outcome)\r\n        public\r\n        isOwner\r\n    {\r\n        // Result is not set yet\r\n        require(!isSet);\r\n        isSet = true;\r\n        outcome = _outcome;\r\n        OutcomeAssignment(_outcome);\r\n    }\r\n\r\n    /// @dev Returns if winning outcome is set\r\n    /// @return Is outcome set?\r\n    function isOutcomeSet()\r\n        public\r\n        constant\r\n        returns (bool)\r\n    {\r\n        return isSet;\r\n    }\r\n\r\n    /// @dev Returns outcome\r\n    /// @return Outcome\r\n    function getOutcome()\r\n        public\r\n        constant\r\n        returns (int)\r\n    {\r\n        return outcome;\r\n    }\r\n}\r\n\r\n\r\n\r\n/// @title Centralized oracle factory contract - Allows to create centralized oracle contracts\r\n/// @author Stefan George - <stefan@gnosis.pm>\r\ncontract CentralizedOracleFactory {\r\n\r\n    /*\r\n     *  Events\r\n     */\r\n    event CentralizedOracleCreation(address indexed creator, CentralizedOracle centralizedOracle, bytes ipfsHash);\r\n\r\n    /*\r\n     *  Public functions\r\n     */\r\n    /// @dev Creates a new centralized oracle contract\r\n    /// @param ipfsHash Hash identifying off chain event description\r\n    /// @return Oracle contract\r\n    function createCentralizedOracle(bytes ipfsHash)\r\n        public\r\n        returns (CentralizedOracle centralizedOracle)\r\n    {\r\n        centralizedOracle = new CentralizedOracle(msg.sender, ipfsHash);\r\n        CentralizedOracleCreation(msg.sender, centralizedOracle, ipfsHash);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"ipfsHash\",\"type\":\"bytes\"}],\"name\":\"createCentralizedOracle\",\"outputs\":[{\"name\":\"centralizedOracle\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"centralizedOracle\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ipfsHash\",\"type\":\"bytes\"}],\"name\":\"CentralizedOracleCreation\",\"type\":\"event\"}]","ContractName":"CentralizedOracleFactory","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4ec3af95c34e1434340698c5a6f11c2e7d54829812a0c1eec36f4fe06ce6c3c2"}]}