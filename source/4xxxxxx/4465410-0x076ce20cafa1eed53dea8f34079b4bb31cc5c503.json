{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.17;\r\n\r\ncontract ERC20Interface {\r\n\tfunction totalSupply() public constant returns (uint256);\r\n\tfunction balanceOf(address _owner) public constant returns (uint256);\r\n\tfunction transfer(address _to, uint256 _value) public returns (bool);\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool);\r\n\tfunction approve(address _spender, uint256 _value) public returns (bool);\r\n\tfunction allowance(address _owner, address _spender) public constant returns (uint256);\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract SafeMath {\r\n  function safeMul(uint a, uint b) internal pure returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint a, uint b) internal pure returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint a, uint b) internal pure returns (uint) {\r\n    uint c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract RandomToken {\r\n    function balanceOf(address _owner) public view returns (uint256);\r\n    function transfer(address _to, uint256 _value) public returns (bool);\r\n}\r\n\r\ncontract HalloweenCollectorToken is ERC20Interface, SafeMath {\r\n    string constant token_name = \"Halloween Limited Edition Token\";\r\n    string constant token_symbol = \"HALW\";\r\n    uint8 constant token_decimals = 0;\r\n    uint256 public constant ether_per_token = 0.0035 * 1 ether;\r\n    uint public constant TOKEN_SWAP_DURATION_HOURS = 1 * 24;\r\n    uint256 public constant token_airdrop_cnt_max = 1000;\r\n    uint256 public constant token_airdrop_amount_each = 10;\r\n    uint256 public constant token_swap_supply = 40000;\r\n\r\n    uint public time_of_token_swap_start;\r\n    uint public time_of_token_swap_end;\r\n    uint256 totSupply;\r\n    uint256 public airdrop_cnt;\r\n\r\n    address owner;\r\n    mapping(address => uint256) balances;\r\n    mapping(address => mapping(address => uint256)) allowed;\r\n    mapping(address => bool) is_airdropped;\r\n    \r\n    \r\n    modifier onlyOwner() {\r\n        if (msg.sender != owner) { revert(); }\r\n        _;\r\n    }\r\n    \r\n    modifier transferAllowed() {\r\n        _;\r\n    }\r\n    \r\n    modifier purchaseAllowed() {\r\n        if (now > time_of_token_swap_end) { revert(); }\r\n        _;\r\n    }\r\n    \r\n    function HalloweenCollectorToken() public {\r\n        owner = msg.sender;\r\n        uint256 airdrop_supply = safeMul(token_airdrop_cnt_max, token_airdrop_amount_each);\r\n        totSupply = safeAdd(token_swap_supply, airdrop_supply);\r\n        time_of_token_swap_start = now;\r\n        time_of_token_swap_end = time_of_token_swap_start + TOKEN_SWAP_DURATION_HOURS * 1 hours;\r\n        airdrop_cnt = 0;\r\n        balances[owner] = totSupply;\r\n    }\r\n\r\n    function name() public pure returns (string)    { return token_name; }\r\n    function symbol() public pure returns (string)  { return token_symbol; }\r\n    function decimals() public pure returns (uint8) { return token_decimals; }\r\n    \r\n    function totalSupply() public view returns (uint256) {\r\n        return totSupply;\r\n    }\r\n    \r\n    function balanceOf(address a) public view returns (uint256) {\r\n        return balances[a];\r\n    }\r\n\r\n    function transfer(address _to, uint256 _amount) public transferAllowed returns (bool) {\r\n        if ( \r\n                _amount > 0\r\n            &&  balances[msg.sender] >= _amount\r\n            &&  balances[_to] + _amount > balances[_to]\r\n        ) {\r\n            balances[msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(msg.sender, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) public transferAllowed returns (bool) {\r\n        if (\r\n                _amount > 0\r\n            &&  balances[_from] >= _amount\r\n            &&  allowed[_from][msg.sender] >= _amount\r\n            &&  balances[_to] + _amount > balances[_to]\r\n        ) {\r\n            balances[_from] -= _amount;\r\n            allowed[_from][msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(_from, _to, _amount);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    function approve(address _spender, uint256 _amount) public returns (bool) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n \r\n    function allowance(address _owner, address _spender) public view returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    \r\n    function() public payable purchaseAllowed {\r\n        if (msg.value == 0) {\r\n            if (airdrop_cnt >= token_airdrop_cnt_max || is_airdropped[msg.sender]) {\r\n                //  airdrop already received\r\n                return;\r\n            }\r\n            else {\r\n                //  airdrop\r\n                airdrop_cnt++;\r\n                is_airdropped[msg.sender] = true;\r\n                balances[owner] = safeSub(balances[owner], token_airdrop_amount_each);\r\n                balances[msg.sender] = safeAdd(balances[msg.sender], token_airdrop_amount_each);\r\n                Transfer(address(this), msg.sender, token_airdrop_amount_each);\r\n            }\r\n        }\r\n        else {\r\n            //  normal swap\r\n            uint256 tokenRequested = msg.value / ether_per_token;\r\n            assert(tokenRequested > 0 && tokenRequested <= balances[owner]);\r\n            uint256 cost = safeMul(tokenRequested, ether_per_token);\r\n            uint256 change = safeSub(msg.value, cost);\r\n            \r\n            owner.transfer(cost);\r\n            msg.sender.transfer(change);\r\n            balances[owner] = safeSub(balances[owner], tokenRequested);\r\n            balances[msg.sender] = safeAdd(balances[msg.sender], tokenRequested);\r\n    \r\n            Transfer(address(this), msg.sender, tokenRequested);\r\n        }\r\n    }\r\n    \r\n    function withdrawForeignTokens(address _tokenContract) public onlyOwner returns (bool) {\r\n        RandomToken token = RandomToken(_tokenContract);\r\n        uint256 amount = token.balanceOf(address(this));\r\n        return token.transfer(owner, amount);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"airdrop_cnt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"time_of_token_swap_start\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ether_per_token\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_swap_supply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_airdrop_cnt_max\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"time_of_token_swap_end\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawForeignTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token_airdrop_amount_each\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_SWAP_DURATION_HOURS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"HalloweenCollectorToken","CompilerVersion":"v0.4.17+commit.bdeb9e52","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8697602f3037322292d5b4887ad6d153dde6e0fa11d3c626a569c7bb69b620e9"}]}