{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.4;\r\n\r\n\r\ncontract EDProxy {\r\n\r\n    function EDProxy() public {\r\n    }\r\n\r\n    function dtrade(address _callee, uint8 v1, uint8 v2, uint256[] uints,address[] addresses,bytes32[] b) public {\r\n        \r\n        if (_callee.delegatecall(bytes4(keccak256(\"trade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256)\")),\r\n          addresses[0],\r\n          uints[0],\r\n          addresses[2],\r\n          uints[2],\r\n          uints[4],\r\n          uints[6],\r\n          addresses[4],\r\n          v1,\r\n          b[0],\r\n          b[2],\r\n          uints[8]\r\n          )) {\r\n        (_callee.delegatecall(bytes4(keccak256(\"trade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256)\")),\r\n           addresses[1],\r\n           uints[1],\r\n           addresses[3],\r\n           uints[3],\r\n           uints[5],\r\n           uints[7],\r\n           addresses[5],\r\n           v2,\r\n           b[1],\r\n           b[3],\r\n           uints[9]\r\n           ));\r\n          }\r\n    }\r\n    \r\n     function testcall(address _callee)  public {\r\n        bytes32[] memory b = new bytes32[](4);\r\n        address[] memory addrs = new address[](6);\r\n        uint256[] memory ints = new uint256[](12);\r\n        uint8 v1;\r\n        uint8 v2;\r\n\r\n        bytes32 somebytes;\r\n        ints[0]=1;\r\n        ints[1]=2;\r\n        ints[2]=3;\r\n        ints[3]=4;\r\n        ints[4]=5;\r\n        ints[5]=6;\r\n        ints[6]=7;\r\n        ints[7]=8;\r\n        ints[8]=9;\r\n        ints[9]=10;\r\n        v1=11;\r\n        v2=12;\r\n        b[0]=somebytes;\r\n        b[1]=somebytes;\r\n        b[2]=somebytes;\r\n        b[3]=somebytes;\r\n        addrs[0]=0xdc04977a2078c8ffdf086d618d1f961b6c54111;\r\n        addrs[1]=0xdc04977a2078c8ffdf086d618d1f961b6c54222;\r\n        addrs[2]=0xdc04977a2078c8ffdf086d618d1f961b6c54333;\r\n        addrs[3]=0xdc04977a2078c8ffdf086d618d1f961b6c54444;\r\n        addrs[4]=0xdc04977a2078c8ffdf086d618d1f961b6c54555;\r\n        addrs[5]=0xdc04977a2078c8ffdf086d618d1f961b6c54666;\r\n        dtrade(_callee, v1, v2, ints, addrs,b);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_callee\",\"type\":\"address\"}],\"name\":\"testcall\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_callee\",\"type\":\"address\"},{\"name\":\"v1\",\"type\":\"uint8\"},{\"name\":\"v2\",\"type\":\"uint8\"},{\"name\":\"uints\",\"type\":\"uint256[]\"},{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"b\",\"type\":\"bytes32[]\"}],\"name\":\"dtrade\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}]","ContractName":"EDProxy","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://eb9eee0b1e610f844157ee684eab5487bbcebc283fdc145fddcc4a261ddd4c43"}]}