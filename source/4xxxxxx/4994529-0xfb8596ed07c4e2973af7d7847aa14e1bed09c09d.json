{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.19;\r\n\r\ncontract Maths {\r\n\r\n    function Mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        require(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function Div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function Sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function Add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\ncontract Owned is Maths {\r\n\r\n    address public owner;        \r\n    bool public transfer_status = true;\r\n    uint256 TotalSupply = 10000000000000000000000000000;\r\n    address public InitialOwnerAddress;\r\n    mapping(address => uint256) UserBalances;\r\n    mapping(address => mapping(address => uint256)) public Allowance;\r\n    uint256 LockInExpiry = Add(block.timestamp, 2629744);\r\n    event OwnershipChanged(address indexed _invoker, address indexed _newOwner);        \r\n    event TransferStatusChanged(bool _newStatus);\r\n    \r\n        \r\n    function Owned() public {\r\n        InitialOwnerAddress = 0xb51e11ce9c9427e85ed23e2a7b12f71e9a6d261b;\r\n        owner = 0xb51e11ce9c9427e85ed23e2a7b12f71e9a6d261b;\r\n    }\r\n\r\n    modifier _onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function ChangeOwner(address _AddressToMake) public _onlyOwner returns (bool _success) {\r\n\r\n        owner = _AddressToMake;\r\n        OwnershipChanged(msg.sender, _AddressToMake);\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    function ChangeTransferStatus(bool _newStatus) public _onlyOwner returns (bool _success) {\r\n\r\n        transfer_status = _newStatus;\r\n        TransferStatusChanged(_newStatus);\r\n    \r\n        return true;\r\n    \r\n    }\r\n\r\n    function Mint(uint256 _amount) public _onlyOwner returns (bool _success) {\r\n\r\n        TotalSupply = Add(TotalSupply, _amount);\r\n        UserBalances[msg.sender] = Add(UserBalances[msg.sender], _amount);\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    function Burn(uint256 _amount) public _onlyOwner returns (bool _success) {\r\n\r\n        require(Sub(UserBalances[msg.sender], _amount) >= 0);\r\n        TotalSupply = Sub(TotalSupply, _amount);\r\n        UserBalances[msg.sender] = Sub(UserBalances[msg.sender], _amount);\r\n\r\n        return true;\r\n\r\n    }\r\n        \r\n}\r\n\r\ncontract Core is Owned {\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    string name = 'Gregc1131';\r\n    string symbol = '1131';\r\n    uint256 decimals = 18;\r\n\r\n    function Core() public {\r\n\r\n        UserBalances[0xb51e11ce9c9427e85ed23e2a7b12f71e9a6d261b] = TotalSupply;\r\n\r\n    }\r\n\r\n    function _transferCheck(address _sender, address _recipient, uint256 _amount) private view returns (bool success) {\r\n                     \r\n        require(transfer_status == true);\r\n        require(_amount > 0);\r\n        require(_recipient != address(0));\r\n        require(UserBalances[_sender] > _amount);\r\n        require(Sub(UserBalances[_sender], _amount) >= 0);\r\n        require(Add(UserBalances[_recipient], _amount) > UserBalances[_recipient]);\r\n            \r\n            if (_sender == InitialOwnerAddress && block.timestamp < LockInExpiry) {\r\n                require(Sub(UserBalances[_sender], _amount) >= 2500000000);\r\n            }\r\n        \r\n        return true;\r\n\r\n    }\r\n\r\n    function transfer(address _receiver, uint256 _amount) public returns (bool status) {\r\n\r\n        require(_transferCheck(msg.sender, _receiver, _amount));\r\n        UserBalances[msg.sender] = Sub(UserBalances[msg.sender], _amount);\r\n        UserBalances[_receiver] = Add(UserBalances[msg.sender], _amount);\r\n        Transfer(msg.sender, _receiver, _amount);\r\n        return true;\r\n\r\n    }\r\n\r\n    function transferFrom(address _owner, address _receiver, uint256 _amount) public returns (bool status) {\r\n\r\n        require(_transferCheck(_owner, _receiver, _amount));\r\n        require(Sub(Allowance[_owner][msg.sender], _amount) >= 0);\r\n        UserBalances[_owner] = Sub(UserBalances[_owner], _amount);\r\n        UserBalances[_receiver] = Add(UserBalances[_receiver], _amount);\r\n        Allowance[_owner][msg.sender] = Sub(Allowance[_owner][msg.sender], _amount);\r\n        Transfer(_owner, _receiver, _amount);\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    function multiTransfer(address[] _destinations, uint256[] _values) public returns (uint256) {\r\n\r\n        uint256 i = 0;\r\n\r\n        while (i < _destinations.length) {\r\n            transfer(_destinations[i], _values[i]);\r\n            i += 1;\r\n        }\r\n\r\n        return (i);\r\n\r\n    }\r\n\r\n    function approve(address _spender, uint256 _amount) public returns (bool approved) {\r\n\r\n        require(_amount > 0);\r\n        require(UserBalances[msg.sender] > 0);\r\n        Allowance[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    function balanceOf(address _address) public view returns (uint256 balance) {\r\n\r\n        return UserBalances[_address];\r\n\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public view returns (uint256 allowed) {\r\n\r\n        return Allowance[_owner][_spender];\r\n\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256 supply) {\r\n\r\n        return TotalSupply;\r\n\r\n    }\r\n\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"approved\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_destinations\",\"type\":\"address[]\"},{\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"multiTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"status\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"InitialOwnerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_receiver\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"status\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfer_status\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"allowed\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_AddressToMake\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newStatus\",\"type\":\"bool\"}],\"name\":\"ChangeTransferStatus\",\"outputs\":[{\"name\":\"_success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_invoker\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newStatus\",\"type\":\"bool\"}],\"name\":\"TransferStatusChanged\",\"type\":\"event\"}]","ContractName":"Core","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bb264a5f837a5edc75fe504f096548969b44a55843369c85a1a0bd60fca7c96f"}]}