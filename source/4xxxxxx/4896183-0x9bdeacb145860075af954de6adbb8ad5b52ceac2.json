{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.19;\r\n\r\n/**\r\n   @title HODL\r\n\r\n   A smart contract for real HOLDERS, all ETH received here can be withdraw a year \r\n   after it was deposited.\r\n */\r\ncontract HODL {\r\n\r\n    // 1 Year to relase the funds\r\n    uint256 public RELEASE_TIME = 1 years;\r\n\r\n    // Balances on hold\r\n    mapping(address => Deposit) deposits;\r\n    \r\n    struct Deposit {\r\n        uint256 value;\r\n        uint256 releaseTime;\r\n    }\r\n    \r\n    /**\r\n     @dev Fallback function\r\n\r\n     Everytime the contract receives ETH it will check if there is a deposit\r\n     made by the `msg.sender` if there is one the value of the tx wil be added\r\n     to the current deposit and the release time will be reseted adding a year\r\n     If there is not deposit created by the `msg.sender` it will be created.\r\n   */\r\n    function () public payable {\r\n        require(msg.value > 0);\r\n        \r\n        if (deposits[msg.sender].releaseTime == 0) {\r\n            uint256 releaseTime = now + RELEASE_TIME;\r\n            deposits[msg.sender] = Deposit(msg.value, releaseTime);\r\n        } else {\r\n            deposits[msg.sender].value += msg.value;\r\n            deposits[msg.sender].releaseTime += RELEASE_TIME;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     @dev withdraw function\r\n\r\n     This function can be called by a holder after a year of his last deposit\r\n     and it will transfer all the ETH deposited back to him.\r\n   */\r\n    function withdraw() public {\r\n        require(deposits[msg.sender].value > 0);\r\n        require(deposits[msg.sender].releaseTime < now);\r\n        \r\n        msg.sender.transfer(deposits[msg.sender].value);\r\n        \r\n        deposits[msg.sender].value = 0;\r\n        deposits[msg.sender].releaseTime = 0;\r\n    }\r\n    \r\n    /**\r\n     @dev getDeposit function\r\n     It returns the deposited value and release time from a holder.\r\n\r\n     @param holder address The holder address\r\n\r\n     @return uint256 value Amount of ETH deposited in wei\r\n     @return uint256 releaseTime Timestamp of when the the deposit can returned\r\n   */\r\n    function getDeposit(address holder) public view returns\r\n        (uint256 value, uint256 releaseTime)\r\n    {\r\n        return(deposits[holder].value, deposits[holder].releaseTime);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RELEASE_TIME\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"getDeposit\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"HODL","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://71c10598b7c389295093a60b30b2d8d9a6b508b799dd6551de81550a7290fc17"}]}