{"status":"1","message":"OK","result":[{"SourceCode":"contract PreICOin {\r\n  string public constant symbol = \"PreICO\";\r\n  string public constant name = \"PreICOin\";\r\n  uint8 public constant decimals = 18;\r\n  uint256 public _totalSupply = 0;\r\n  bool private workingState = false;\r\n  bool private transferAllowed = false;\r\n  address public owner;\r\n  address private cur_coin;\r\n  mapping (address => uint256) balances;\r\n  mapping (address => mapping (address => uint256)) allowed;\r\n  mapping (address => uint256) private etherClients;\r\n  event FundsGot(address indexed _sender, uint256 _value);\r\n  event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n  event ContractEnabled();\r\n  event ContractDisabled();\r\n  event TransferEnabled();\r\n  event TransferDisabled();\r\n  event CurrentCoin(address coin);\r\n\r\n  modifier onlyOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  modifier ownerAndCoin {\r\n    require((msg.sender == owner)||(msg.sender == cur_coin));\r\n    _;\r\n  }\r\n  modifier workingFlag {\r\n    require(workingState == true);\r\n    _;\r\n  }\r\n  modifier transferFlag {\r\n    require(transferAllowed == true);\r\n    _;\r\n  }\r\n\r\n  function PreICOin() payable {\r\n    owner = msg.sender;\r\n    enableContract();\r\n  }\r\n  function kill() public onlyOwner {\r\n    require(workingState == false);\r\n    selfdestruct(owner);\r\n  }\r\n  function setCurrentCoin(address current) onlyOwner workingFlag {\r\n    cur_coin = current;\r\n    CurrentCoin(cur_coin);\r\n  }\r\n\r\n  //work controller functions\r\n  function enableContract() onlyOwner {\r\n    workingState = true;\r\n    ContractEnabled();\r\n  }\r\n  function disableContract() onlyOwner {\r\n    workingState = false;\r\n    ContractDisabled();\r\n  }\r\n  function contractState() returns (string state) {\r\n    if (workingState) {\r\n      state = \"Working\";\r\n    }\r\n    else {\r\n      state = \"Stopped\";\r\n    }\r\n  }\r\n  //transfer controller functions\r\n  function enableTransfer() onlyOwner {\r\n    transferAllowed = true;\r\n    TransferEnabled();\r\n  }\r\n  function disableTransfer() onlyOwner {\r\n    transferAllowed = false;\r\n    TransferDisabled();\r\n  }\r\n  function transferState() returns (string state) {\r\n    if (transferAllowed) {\r\n      state = \"Working\";\r\n    }\r\n    else {\r\n      state = \"Stopped\";\r\n    }\r\n  }\r\n  //token controller functions\r\n  function generateTokens(address _client, uint256 _amount) ownerAndCoin workingFlag {\r\n    _totalSupply += _amount;\r\n    balances[_client] += _amount;\r\n  }\r\n  function destroyTokens(address _client, uint256 _amount) ownerAndCoin workingFlag returns (bool state) {\r\n    if (balances[_client] >= _amount) {\r\n      balances[_client] -= _amount;\r\n      _totalSupply -= _amount;\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  //send ether function (working)\r\n  function () workingFlag payable {\r\n    bool ret = cur_coin.call(bytes4(keccak256(\"pay(address,uint256)\")), msg.sender, msg.value);\r\n    ret;\r\n  }\r\n  function totalSupply() constant workingFlag returns (uint256 totalsupply) {\r\n    totalsupply = _totalSupply;\r\n  }\r\n  //ERC20 Interface\r\n  function balanceOf(address _owner) constant workingFlag returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n  function transfer(address _to, uint256 _value) transferFlag workingFlag returns (bool success) {\r\n    if (balances[msg.sender] >= _value\r\n      && _value > 0\r\n      && balances[_to] + _value > balances[_to])\r\n      {\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n  }\r\n  function transferFrom(address _from, address _to, uint256 _value) transferFlag workingFlag returns (bool success) {\r\n    if (balances[_from] >= _value\r\n      && allowed[_from][msg.sender] >= _value\r\n      && _value > 0\r\n      && balances[_to] + _value > balances[_to])\r\n      {\r\n        balances[msg.sender] -= _value;\r\n        allowed[_from][msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n  }\r\n  function approve(address _spender, uint256 _value) returns (bool success) {\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"current\",\"type\":\"address\"}],\"name\":\"setCurrentCoin\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalsupply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enableContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_client\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contractState\",\"outputs\":[{\"name\":\"state\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableContract\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transferState\",\"outputs\":[{\"name\":\"state\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableTransfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_client\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyTokens\",\"outputs\":[{\"name\":\"state\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enableTransfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"FundsGot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContractEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContractDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TransferEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TransferDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"coin\",\"type\":\"address\"}],\"name\":\"CurrentCoin\",\"type\":\"event\"}]","ContractName":"PreICOin","CompilerVersion":"v0.4.14+commit.c2215d46","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a854473e25db72b4c90d10b85cf9f81e0c3e7ba8742cad1a40685a63c0555f14"}]}