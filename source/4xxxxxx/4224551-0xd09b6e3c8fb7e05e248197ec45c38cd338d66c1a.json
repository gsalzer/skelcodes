{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n/// @author Jordi Baylina\r\n/// Auditors: Griff Green & psdev\r\n/// @notice Based on http://hudsonjameson.com/ethereummarriage/\r\n/// License: GNU-3\r\n\r\n/// @dev `Owned` is a base level contract that assigns an `owner` that can be\r\n///  later changed\r\ncontract Owned {\r\n\r\n    /// @dev `owner` is the only address that can call a function with this\r\n    /// modifier\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    address public owner;\r\n\r\n    /// @notice The Constructor assigns the message sender to be `owner`\r\n    function Owned() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    address public newOwner;\r\n\r\n    /// @notice `owner` can step down and assign some other address to this role\r\n    /// @param _newOwner The address of the new owner\r\n    ///  an unowned neutral vault, however that cannot be undone\r\n    function changeOwner(address _newOwner) onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    /// @notice `newOwner` has to accept the ownership before it is transferred\r\n    ///  Any account or any contract with the ability to call `acceptOwnership`\r\n    ///  can be used to accept ownership of this contract, including a contract\r\n    ///  with no other functions\r\n    function acceptOwnership() {\r\n        if (msg.sender == newOwner) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n\r\n    // This is a general safty function that allows the owner to do a lot\r\n    //  of things in the unlikely event that something goes wrong\r\n    // _dst is the contract being called making this like a 1/1 multisig\r\n    function execute(address _dst, uint _value, bytes _data) onlyOwner {\r\n        _dst.call.value(_value)(_data);\r\n    }\r\n}\r\n\r\n\r\ncontract Marriage is Owned\r\n{\r\n    // Marriage data variables\r\n    string public partner1;\r\n    string public partner2;\r\n    uint public marriageDate;\r\n    string public marriageStatus;\r\n    string public vows;\r\n\r\n    Event[] public majorEvents;\r\n    Message[] public messages;\r\n\r\n    struct Event {\r\n        uint date;\r\n        string name;\r\n        string description;\r\n        string url;\r\n    }\r\n\r\n    struct Message {\r\n        uint date;\r\n        string nameFrom;\r\n        string text;\r\n        string url;\r\n        uint value;\r\n    }\r\n\r\n    modifier areMarried {\r\n        require(sha3(marriageStatus) == sha3(\"Married\"));\r\n        _;\r\n    }\r\n\r\n    //Set Owner\r\n    function Marriage(address _owner) {\r\n        owner = _owner;\r\n    }\r\n\r\n    function numberOfMajorEvents() constant public returns (uint) {\r\n        return majorEvents.length;\r\n    }\r\n\r\n    function numberOfMessages() constant public returns (uint) {\r\n        return messages.length;\r\n    }\r\n\r\n    // Create initial marriage contract\r\n    function createMarriage(\r\n        string _partner1,\r\n        string _partner2,\r\n        string _vows,\r\n        string url) onlyOwner\r\n    {\r\n        require(majorEvents.length == 0);\r\n        partner1 = _partner1;\r\n        partner2 = _partner2;\r\n        marriageDate = now;\r\n        vows = _vows;\r\n        marriageStatus = \"Married\";\r\n        majorEvents.push(Event(now, \"Marriage\", vows, url));\r\n        MajorEvent(\"Marrigage\", vows, url);\r\n    }\r\n\r\n    // Set the marriage status if it changes\r\n    function setStatus(string status, string url) onlyOwner\r\n    {\r\n        marriageStatus = status;\r\n        setMajorEvent(\"Changed Status\", status, url);\r\n    }\r\n\r\n    // Set the IPFS hash of the image of the couple\r\n    function setMajorEvent(string name, string description, string url) onlyOwner areMarried\r\n    {\r\n        majorEvents.push(Event(now, name, description, url));\r\n        MajorEvent(name, description, url);\r\n    }\r\n\r\n    function sendMessage(string nameFrom, string text, string url) payable areMarried {\r\n        if (msg.value > 0) {\r\n            owner.transfer(this.balance);\r\n        }\r\n        messages.push(Message(now, nameFrom, text, url, msg.value));\r\n        MessageSent(nameFrom, text, url, msg.value);\r\n    }\r\n\r\n\r\n    // Declare event structure\r\n    event MajorEvent(string name, string description, string url);\r\n    event MessageSent(string name, string description, string url, uint value);\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"messages\",\"outputs\":[{\"name\":\"date\",\"type\":\"uint256\"},{\"name\":\"nameFrom\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nameFrom\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"name\":\"sendMessage\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marriageDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"majorEvents\",\"outputs\":[{\"name\":\"date\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"name\":\"setMajorEvent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"partner2\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"partner1\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dst\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"status\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"name\":\"setStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vows\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marriageStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfMajorEvents\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_partner1\",\"type\":\"string\"},{\"name\":\"_partner2\",\"type\":\"string\"},{\"name\":\"_vows\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"name\":\"createMarriage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfMessages\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"url\",\"type\":\"string\"}],\"name\":\"MajorEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"url\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"MessageSent\",\"type\":\"event\"}]","ContractName":"Marriage","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000126799e70341c54203d241c92c1f511dbe75aded","Library":"","SwarmSource":"bzzr://958a677e37393cbaf01690946f50ef64bd2028a90365fa957770683fe7057847"}]}