{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\n    contract ERC20 {\r\n     function totalSupply() constant returns (uint256 totalSupply);\r\n     function balanceOf(address _owner) constant returns (uint256 balance);\r\n     function transfer(address _to, uint256 _value) returns (bool success);\r\n     function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n     function approve(address _spender, uint256 _value) returns (bool success);\r\n     function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n     event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n     event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n }\r\n \r\n  // PayBits is ERC20 Token\r\n  contract PayBits is ERC20 {\r\n     string public constant symbol = \"PYB\";\r\n     string public constant name = \"PayBits\";\r\n     uint8 public constant decimals = 18;\r\n     uint256 _totalSupply = 21000000 * 10**18;\r\n     \r\n\r\n     address public owner;\r\n  \r\n     mapping(address => uint256) balances;\r\n  \r\n     mapping(address => mapping (address => uint256)) allowed;\r\n     \r\n        // Total Supply of Token will be 21 Million only\r\n     function PayBits() {\r\n         owner = msg.sender;\r\n         balances[owner] = 21000000 * 10**18;\r\n     }\r\n     \r\n     modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n     \r\n     // To Distribute AirDrops for Applicants of Round 1\r\n     function AirDropPayBitsR1(address[] addresses) onlyOwner {\r\n         for (uint i = 0; i < addresses.length; i++) {\r\n             balances[owner] -= 400000000000000000000;\r\n             balances[addresses[i]] += 400000000000000000000;\r\n             Transfer(owner, addresses[i], 400000000000000000000);\r\n         }\r\n     }\r\n      // To Distribute AirDrops for Applicants of Round 2\r\n      function AirDropPayBitsR2(address[] addresses) onlyOwner {\r\n         for (uint i = 0; i < addresses.length; i++) {\r\n             balances[owner] -= 300000000000000000000;\r\n             balances[addresses[i]] += 300000000000000000000;\r\n             Transfer(owner, addresses[i], 300000000000000000000);\r\n         }\r\n     }\r\n      // To Distribute AirDrops for Applicants of Round 3\r\n     function AirDropPayBitsR3(address[] addresses) onlyOwner {\r\n         for (uint i = 0; i < addresses.length; i++) {\r\n             balances[owner] -= 200000000000000000000;\r\n             balances[addresses[i]] += 200000000000000000000;\r\n             Transfer(owner, addresses[i], 200000000000000000000);\r\n         }\r\n     }\r\n     \r\n     // To Distribute AirDrops of Remaining Token To Bounty (Press Release Post, Article submission, Blog submission, Social Sharing Etc)\r\n     function AirDropPayBitsBounty(address[] addresses) onlyOwner {\r\n         for (uint i = 0; i < addresses.length; i++) {\r\n             balances[owner] -= 100000000000000000000;\r\n             balances[addresses[i]] += 100000000000000000000;\r\n             Transfer(owner, addresses[i], 100000000000000000000);\r\n         }\r\n     }\r\n        // Total Supply of Coin will be 21 Million only \r\n     function totalSupply() constant returns (uint256 totalSupply) {\r\n         totalSupply = _totalSupply;\r\n     }\r\n  \r\n        // For Future Development 20% of token will be used\r\n     function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n     }\r\n \r\n     function transfer(address _to, uint256 _amount) returns (bool success) {\r\n         if (balances[msg.sender] >= _amount \r\n            && _amount > 0\r\n             && balances[_to] + _amount > balances[_to]) {\r\n             balances[msg.sender] -= _amount;\r\n             balances[_to] += _amount;\r\n             Transfer(msg.sender, _to, _amount);\r\n            return true;\r\n         } else {\r\n             return false;\r\n         }\r\n     }\r\n     \r\n     \r\n     function transferFrom(\r\n         address _from,\r\n         address _to,\r\n         uint256 _amount\r\n     ) returns (bool success) {\r\n         if (balances[_from] >= _amount\r\n             && allowed[_from][msg.sender] >= _amount\r\n             && _amount > 0\r\n             && balances[_to] + _amount > balances[_to]) {\r\n             balances[_from] -= _amount;\r\n             allowed[_from][msg.sender] -= _amount;\r\n             balances[_to] += _amount;\r\n             Transfer(_from, _to, _amount);\r\n             return true;\r\n         } else {\r\n            return false;\r\n         }\r\n     }\r\n \r\n     function approve(address _spender, uint256 _amount) returns (bool success) {\r\n         allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n         return true;\r\n     }\r\n  \r\n     function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n         return allowed[_owner][_spender];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"AirDropPayBitsR3\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"AirDropPayBitsBounty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"AirDropPayBitsR1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"AirDropPayBitsR2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"PayBits","CompilerVersion":"v0.4.16+commit.d7661dd9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7ec9156424b426ed5f2c1b07fcc9a3122df9d970d8c407f4dfed6295902c84fb"}]}