{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\ncontract ERC20 {\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n}\r\n\r\ncontract Ownable {\r\n\r\n  address owner;\r\n  address pendingOwner;\r\n\r\n  modifier onlyOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  modifier onlyPendingOwner {\r\n    require(msg.sender == pendingOwner);\r\n    _;\r\n  }\r\n\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    pendingOwner = newOwner;\r\n  }\r\n\r\n  function claimOwnership() onlyPendingOwner {\r\n    owner = pendingOwner;\r\n  }\r\n}\r\n\r\ncontract Destructible is Ownable {\r\n\r\n  function destroy() onlyOwner {\r\n    selfdestruct(msg.sender);\r\n  }\r\n}\r\n\r\ncontract WithClaim {\r\n    \r\n    event Claim(string data);\r\n}\r\n\r\n// Mainnet: 0xFd74f0ce337fC692B8c124c094c1386A14ec7901\r\n// Rinkeby: 0xC5De286677AC4f371dc791022218b1c13B72DbBd\r\n// Ropsten: 0x6f32a6F579CFEed1FFfDc562231C957ECC894001\r\n// Kovan:   0x139d658eD55b78e783DbE9bD4eb8F2b977b24153\r\n\r\ncontract UserfeedsClaimWithoutValueTransfer is Destructible, WithClaim {\r\n\r\n  function post(string data) {\r\n    Claim(data);\r\n  }\r\n}\r\n\r\n// Mainnet: 0x70B610F7072E742d4278eC55C02426Dbaaee388C\r\n// Rinkeby: 0x00034B8397d9400117b4298548EAa59267953F8c\r\n// Ropsten: 0x37C1CA7996CDdAaa31e13AA3eEE0C89Ee4f665B5\r\n// Kovan:   0xc666c75C2bBA9AD8Df402138cE32265ac0EC7aaC\r\n\r\ncontract UserfeedsClaimWithValueTransfer is Destructible, WithClaim {\r\n\r\n  function post(address userfeed, string data) payable {\r\n    userfeed.transfer(msg.value);\r\n    Claim(data);\r\n  }\r\n}\r\n\r\n// Mainnet: 0xfF8A1BA752fE5df494B02D77525EC6Fa76cecb93\r\n// Rinkeby: 0xBd2A0FF74dE98cFDDe4653c610E0E473137534fB\r\n// Ropsten: 0x54b4372fA0bd76664B48625f0e8c899Ff19DFc39\r\n// Kovan:   0xd6Ede7F43882B100C6311a9dF801088eA91cEb64\r\n\r\ncontract UserfeedsClaimWithTokenTransfer is Destructible, WithClaim {\r\n\r\n  function post(address userfeed, address token, uint value, string data) {\r\n    var erc20 = ERC20(token);\r\n    require(erc20.transferFrom(msg.sender, userfeed, value));\r\n    Claim(data);\r\n  }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data\",\"type\":\"string\"}],\"name\":\"post\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"data\",\"type\":\"string\"}],\"name\":\"Claim\",\"type\":\"event\"}]","ContractName":"UserfeedsClaimWithoutValueTransfer","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://db0251604a184946364e85d409c6ba182c1506810c9129c0e4fddd373f32160a"}]}