{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\n// File: contracts/Ownable.sol\r\n\r\n/*\r\n * Ownable\r\n *\r\n * Base contract with an owner.\r\n * Provides onlyOwner modifier, which prevents function from running if it is called by anyone other than the owner.\r\n */\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n\r\n  function Ownable() public { owner = msg.sender; }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n\r\n  }\r\n}\r\n\r\n// File: contracts/Deployer.sol\r\n\r\ncontract Deployer {\r\n\r\n  address public deployer;\r\n\r\n  function Deployer() public { deployer = msg.sender; }\r\n\r\n  modifier onlyDeployer() {\r\n    require(msg.sender == deployer);\r\n    _;\r\n  }\r\n}\r\n\r\n// File: contracts/ModultradeStorage.sol\r\n\r\ncontract ModultradeStorage is Ownable, Deployer {\r\n\r\n  bool private _doMigrate = true;\r\n\r\n  mapping (address => address[]) public sellerProposals;\r\n\r\n  mapping (uint => address) public proposalListAddress;\r\n\r\n  address[] public proposals;\r\n\r\n  event InsertProposalEvent (address _proposal, uint _id, address _seller);\r\n\r\n  event PaidProposalEvent (address _proposal, uint _id);\r\n\r\n  function ModultradeStorage() public {}\r\n\r\n  function insertProposal(address seller, uint id, address proposal) public onlyOwner {\r\n    sellerProposals[seller].push(proposal);\r\n    proposalListAddress[id] = proposal;\r\n    proposals.push(proposal);\r\n\r\n    InsertProposalEvent(proposal, id, seller);\r\n  }\r\n\r\n  function getProposalsBySeller(address seller) public constant returns (address[]){\r\n    return sellerProposals[seller];\r\n  }\r\n\r\n  function getProposals() public constant returns (address[]){\r\n    return proposals;\r\n  }\r\n\r\n  function getProposalById(uint id) public constant returns (address){\r\n    return proposalListAddress[id];\r\n  }\r\n\r\n  function getCount() public constant returns (uint) {\r\n    return proposals.length;\r\n  }\r\n\r\n  function getCountBySeller(address seller) public constant returns (uint) {\r\n    return sellerProposals[seller].length;\r\n  }\r\n\r\n  function firePaidProposalEvent(address proposal, uint id) public {\r\n    require(proposalListAddress[id] == proposal);\r\n\r\n    PaidProposalEvent(proposal, id);\r\n  }\r\n\r\n  function changeOwner(address newOwner) public onlyDeployer {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getProposalsBySeller\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"proposal\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"firePaidProposalEvent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getProposalById\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getCountBySeller\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProposals\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalListAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"seller\",\"type\":\"address\"},{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"proposal\",\"type\":\"address\"}],\"name\":\"insertProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sellerProposals\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_proposal\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"InsertProposalEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_proposal\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"PaidProposalEvent\",\"type\":\"event\"}]","ContractName":"ModultradeStorage","CompilerVersion":"v0.4.18+commit.9cf6e910","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1a2835bb39a166c6ba4040869ef5782c6d27d1e0a3ab65320ec781088666ccf7"}]}