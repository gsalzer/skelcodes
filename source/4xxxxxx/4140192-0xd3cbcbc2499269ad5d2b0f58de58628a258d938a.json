{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.8;\r\ncontract token { function transfer(address receiver, uint amount) returns (bool) {  } }\r\n\r\ncontract LuxPresale {\r\n    address public beneficiary;\r\n    uint public totalLuxCents; uint public amountRaised; uint public deadline; uint public price; uint public presaleStartDate;\r\n    token public tokenReward;\r\n    mapping(address => uint) public balanceOf;\r\n    event GoalReached(address beneficiary, uint amountRaised);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n    bool crowdsaleClosed = false;\r\n\r\n    function LuxPresale(\r\n        address ifSuccessfulSendTo,\r\n        uint totalLux,\r\n        uint startDate,\r\n        uint durationInMinutes,\r\n        token addressOfTokenUsedAsReward\r\n    ) {\r\n        beneficiary = ifSuccessfulSendTo;\r\n        totalLuxCents = totalLux * 100;\r\n        presaleStartDate = startDate;\r\n        deadline = startDate + durationInMinutes * 1 minutes;\r\n        tokenReward = token(addressOfTokenUsedAsReward);\r\n    }\r\n    \r\n    function () payable {\r\n        if (now < presaleStartDate) throw;\r\n\r\n        if (crowdsaleClosed) {\r\n\t\t\tif (msg.value > 0) throw;\r\n            uint reward = balanceOf[msg.sender];\r\n            balanceOf[msg.sender] = 0;\r\n            if (reward > 0) {\r\n                if (!tokenReward.transfer(msg.sender, reward/price)) {\r\n                    balanceOf[msg.sender] = reward;\r\n                }\r\n            }        \r\n        } else { \r\n            uint amount = msg.value;\r\n            balanceOf[msg.sender] += amount;\r\n            amountRaised += amount;\r\n        }\r\n    }\r\n    \r\n    modifier afterDeadline() { if (now >= deadline) _; }\r\n    \r\n    modifier onlyOwner() {\r\n        if (msg.sender != beneficiary) {\r\n            throw;\r\n        }\r\n        _;\r\n    }\r\n\r\n    function setGoalReached() afterDeadline {\r\n        if (amountRaised == 0) throw;\r\n        if (crowdsaleClosed) throw;\r\n        crowdsaleClosed = true;\r\n        price = amountRaised/totalLuxCents;\r\n    }\r\n\r\n    function safeWithdrawal() afterDeadline onlyOwner {\r\n        if (!crowdsaleClosed) throw;\r\n        if (beneficiary.send(amountRaised)) {\r\n            FundTransfer(beneficiary, amountRaised, false);\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"totalLuxCents\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setGoalReached\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amountRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"presaleStartDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"ifSuccessfulSendTo\",\"type\":\"address\"},{\"name\":\"totalLux\",\"type\":\"uint256\"},{\"name\":\"startDate\",\"type\":\"uint256\"},{\"name\":\"durationInMinutes\",\"type\":\"uint256\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amountRaised\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"isContribution\",\"type\":\"bool\"}],\"name\":\"FundTransfer\",\"type\":\"event\"}]","ContractName":"LuxPresale","CompilerVersion":"v0.4.8+commit.60cc1668","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000006773C81C54EF618231ac54Fbf35aac81435b06fE0000000000000000000000000000000000000000000000000000000005F5E10000000000000000000000000000000000000000000000000000000000598C58CF00000000000000000000000000000000000000000000000000000000000002D0000000000000000000000000C27f0903aCeD0f4E7B61141B26d94F7FB7334566","Library":"","SwarmSource":"bzzr://59b6290880ea46b6eebaad0e77f4dc7993ab7c32198bb4b54d9fcc27bd7eb956"}]}