{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.4;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract GoFreakingDoIt is Ownable {\r\n    struct Goal {\r\n    \tbytes32 hash;\r\n        address owner; // goal owner addr\r\n        string description; // set goal description\r\n        uint amount; // set goal amount\r\n        string supervisorEmail; // email of friend\r\n        string creatorEmail; // email of friend\r\n        string deadline;\r\n        bool emailSent;\r\n        bool completed;\r\n    }\r\n\r\n    // address owner;\r\n\tmapping (bytes32 => Goal) public goals;\r\n\tGoal[] public activeGoals;\r\n\r\n\t// Events\r\n    event setGoalEvent (\r\n    \taddress _owner,\r\n        string _description,\r\n        uint _amount,\r\n        string _supervisorEmail,\r\n        string _creatorEmail,\r\n        string _deadline,\r\n        bool _emailSent,\r\n        bool _completed\r\n    );\r\n\r\n    event setGoalSucceededEvent(bytes32 hash, bool _completed);\r\n    event setGoalFailedEvent(bytes32 hash, bool _completed);\r\n\r\n\t// app.setGoal(\"Finish cleaning\", \"hello@karolisram.com\", \"hello@karolisram.com\", \"2017-12-12\", {value: web3.toWei(11.111, 'ether')})\r\n\t// app.setGoal(\"Finish cleaning\", \"hello@karolisram.com\", \"hello@karolisram.com\", \"2017-12-12\", {value: web3.toWei(11.111, 'ether'), from: web3.eth.accounts[1]})\r\n\tfunction setGoal(string _description, string _supervisorEmail, string _creatorEmail, string _deadline) payable returns (bytes32, address, string, uint, string, string, string) {\r\n\t\trequire(msg.value > 0);\r\n\t\trequire(keccak256(_description) != keccak256(''));\r\n\t\trequire(keccak256(_creatorEmail) != keccak256(''));\r\n\t\trequire(keccak256(_deadline) != keccak256(''));\r\n\r\n\t\tbytes32 hash = keccak256(msg.sender, _description, msg.value, _deadline);\r\n\r\n\t\tGoal memory goal = Goal({\r\n\t\t\thash: hash,\r\n\t\t\towner: msg.sender,\r\n\t\t\tdescription: _description,\r\n\t\t\tamount: msg.value,\r\n\t\t\tsupervisorEmail: _supervisorEmail,\r\n\t\t\tcreatorEmail: _creatorEmail,\r\n\t\t\tdeadline: _deadline,\r\n\t\t\temailSent: false,\r\n\t\t\tcompleted: false\r\n\t\t});\r\n\r\n\t\tgoals[hash] = goal;\r\n\t\tactiveGoals.push(goal);\r\n\r\n\t\tsetGoalEvent(goal.owner, goal.description, goal.amount, goal.supervisorEmail, goal.creatorEmail, goal.deadline, goal.emailSent, goal.completed);\r\n\r\n\t\treturn (hash, goal.owner, goal.description, goal.amount, goal.supervisorEmail, goal.creatorEmail, goal.deadline);\r\n\t}\r\n\r\n\tfunction getGoalsCount() constant returns (uint count) {\r\n\t    return activeGoals.length;\r\n\t}\r\n\r\n\t// app.setEmailSent(\"0x00f2484d16ad04b395c6261b978fb21f0c59210d98e9ac361afc4772ab811393\", {from: web3.eth.accounts[1]})\r\n\tfunction setEmailSent(uint _index, bytes32 _hash) onlyOwner {\r\n\t\tassert(goals[_hash].amount > 0);\r\n\r\n\t\tgoals[_hash].emailSent = true;\r\n\t\tactiveGoals[_index].emailSent = true;\r\n\t}\r\n\r\n\tfunction setGoalSucceeded(uint _index, bytes32 _hash) onlyOwner {\r\n\t\tassert(goals[_hash].amount > 0);\r\n\r\n\t\tgoals[_hash].completed = true;\r\n\t\tactiveGoals[_index].completed = true;\r\n\r\n\t\tgoals[_hash].owner.transfer(goals[_hash].amount); // send ether back to person who set the goal\r\n\r\n\t\tsetGoalSucceededEvent(_hash, true);\r\n\t}\r\n\r\n\t// app.setGoalFailed(0, '0xf7a1a8aa52aeaaaa353ab49ab5cd735f3fd02598b4ff861b314907a414121ba4')\r\n\tfunction setGoalFailed(uint _index, bytes32 _hash) {\r\n\t\tassert(goals[_hash].amount > 0);\r\n\t\t// assert(goals[_hash].emailSent == true);\r\n\r\n\t\tgoals[_hash].completed = false;\r\n\t\tactiveGoals[_index].completed = false;\r\n\r\n\t\towner.transfer(goals[_hash].amount); // send ether to contract owner\r\n\r\n\t\tsetGoalFailedEvent(_hash, false);\r\n\t}\r\n\r\n\t// Fallback function in case someone sends ether to the contract so it doesn't get lost\r\n\tfunction() payable {}\r\n\r\n    function kill() onlyOwner { \r\n    \tselfdestruct(owner);\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"},{\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"setGoalSucceeded\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeGoals\",\"outputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"supervisorEmail\",\"type\":\"string\"},{\"name\":\"creatorEmail\",\"type\":\"string\"},{\"name\":\"deadline\",\"type\":\"string\"},{\"name\":\"emailSent\",\"type\":\"bool\"},{\"name\":\"completed\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"},{\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"setGoalFailed\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"goals\",\"outputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"supervisorEmail\",\"type\":\"string\"},{\"name\":\"creatorEmail\",\"type\":\"string\"},{\"name\":\"deadline\",\"type\":\"string\"},{\"name\":\"emailSent\",\"type\":\"bool\"},{\"name\":\"completed\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_description\",\"type\":\"string\"},{\"name\":\"_supervisorEmail\",\"type\":\"string\"},{\"name\":\"_creatorEmail\",\"type\":\"string\"},{\"name\":\"_deadline\",\"type\":\"string\"}],\"name\":\"setGoal\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"},{\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"setEmailSent\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getGoalsCount\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_description\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_supervisorEmail\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_creatorEmail\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_deadline\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_emailSent\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_completed\",\"type\":\"bool\"}],\"name\":\"setGoalEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_completed\",\"type\":\"bool\"}],\"name\":\"setGoalSucceededEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_completed\",\"type\":\"bool\"}],\"name\":\"setGoalFailedEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]","ContractName":"GoFreakingDoIt","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://1f09782d0561303dd4664b478cfd1d936b77247c464ae0670b652bc1eac63ccf"}]}