{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\n/**\r\n * @title SafeMath\r\n    * @dev Math operations with safety checks that throw on error\r\n       */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n  \r\n  function div(uint256 a, uint256 b) internal returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n    * @dev The Ownable contract has an owner address, and provides basic authorization control \r\n       * functions, this simplifies the implementation of \"user permissions\". \r\n          */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  /** \r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n        * account.\r\n             */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner. \r\n        */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n        * @param newOwner The address to transfer ownership to. \r\n             */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @title Token\r\n   * @dev interface for interacting with droneshowcoin token\r\n             */\r\ninterface  Token {\r\n function transfer(address _to, uint256 _value) public returns (bool);\r\n function balanceOf(address _owner) public constant returns(uint256 balance);\r\n}\r\n\r\ncontract DroneShowCoinICOContract is Ownable {\r\n    \r\n    using SafeMath for uint256;\r\n    \r\n    Token token;\r\n    \r\n    uint256 public constant RATE = 650; //tokens per ether\r\n    uint256 public constant CAP = 15000; //cap in ether\r\n    uint256 public constant START = 1510754400; //GMT: Wednesday, November 15, 2017 2:00:00 PM\r\n    uint256 public constant DAYS = 30; //\r\n    \r\n    bool public initialized = false;\r\n    uint256 public raisedAmount = 0;\r\n    uint256 public bonusesGiven = 0;\r\n    uint256 public numberOfTransactions = 0;\r\n    \r\n    event BoughtTokens(address indexed to, uint256 value);\r\n    \r\n    modifier whenSaleIsActive() {\r\n        assert (isActive());\r\n        _;\r\n    }\r\n    \r\n    function DroneShowCoinICOContract(address _tokenAddr) public {\r\n        require(_tokenAddr != 0);\r\n        token = Token(_tokenAddr);\r\n    }\r\n    \r\n    function initialize(uint256 numTokens) public onlyOwner {\r\n        require (initialized == false);\r\n        require (tokensAvailable() == numTokens);\r\n        initialized = true;\r\n    }\r\n    \r\n    function isActive() public constant returns (bool) {\r\n        return (\r\n            initialized == true &&  //check if initialized\r\n            now >= START && //check if after start date\r\n            now <= START.add(DAYS * 1 days) && //check if before end date\r\n            goalReached() == false //check if goal was not reached\r\n        ); // if all of the above are true we are active, else we are not\r\n    }\r\n    \r\n    function goalReached() public constant returns (bool) {\r\n        return (raisedAmount >= CAP * 1 ether);\r\n    }\r\n    \r\n    function () public payable {\r\n        buyTokens();\r\n    }\r\n    \r\n    function buyTokens() public payable whenSaleIsActive {\r\n        uint256 weiAmount = msg.value;\r\n        uint256 tokens = weiAmount.mul(RATE);\r\n        \r\n        uint256 secondspassed = now - START;\r\n        uint256 dayspassed = secondspassed/(60*60*24);\r\n        uint256 bonusPrcnt = 0;\r\n        if (dayspassed < 7) {\r\n            //first 7 days 20% bonus\r\n            bonusPrcnt = 20;\r\n        } else if (dayspassed < 14) {\r\n            //second week 10% bonus\r\n            bonusPrcnt = 10;\r\n        } else {\r\n            //no bonus\r\n            bonusPrcnt = 0;\r\n        }\r\n        uint256 bonusAmount = (tokens * bonusPrcnt) / 100;\r\n        tokens = tokens.add(bonusAmount);\r\n        BoughtTokens(msg.sender, tokens);\r\n        \r\n        raisedAmount = raisedAmount.add(msg.value);\r\n        bonusesGiven = bonusesGiven.add(bonusAmount);\r\n        numberOfTransactions = numberOfTransactions.add(1);\r\n        token.transfer(msg.sender, tokens);\r\n        \r\n        owner.transfer(msg.value);\r\n        \r\n    }\r\n    \r\n    function tokensAvailable() public constant returns (uint256) {\r\n        return token.balanceOf(this);\r\n    }\r\n    \r\n    function destroy() public onlyOwner {\r\n        uint256 balance = token.balanceOf(this);\r\n        assert (balance > 0);\r\n        token.transfer(owner,balance);\r\n        selfdestruct(owner);\r\n        \r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusesGiven\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensAvailable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"goalReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"START\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DAYS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"raisedAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfTransactions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"BoughtTokens\",\"type\":\"event\"}]","ContractName":"DroneShowCoinICOContract","CompilerVersion":"v0.4.15+commit.bbb8e64f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000005bc18c3896c80a5c61004ee74499cdf48f42aff2","Library":"","SwarmSource":"bzzr://9b91ad3bc0a0c25cb96dbf3f6650b0ceee46f983fc6233a83bf4a69c7625a9f6"}]}