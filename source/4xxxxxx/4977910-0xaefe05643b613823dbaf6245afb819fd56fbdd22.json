{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.16;\r\n\r\ninterface token {\r\n    function transfer(address receiver, uint amount) public;\r\n    function balanceOf(address addr) public returns (uint);\r\n}\r\n\r\ncontract TimedVault {\r\n    address public beneficiary;\r\n    \r\n    // Lock the tokens till 03/01/2019 @ 3:00pm (UTC)\r\n    uint public releaseDate = 1551452400;\r\n    token public tokenReward;\r\n    \r\n    uint public amountOfTokens;\r\n\r\n    /**\r\n     * Constructor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    function TimedVault(\r\n        address ifSuccessfulSendTo,\r\n        address addressOfTokenUsedAsReward\r\n    ) public {\r\n        beneficiary = ifSuccessfulSendTo;\r\n        tokenReward = token(addressOfTokenUsedAsReward);\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n    function () payable public {\r\n    }\r\n\r\n    modifier afterDeadline() { if (now >= releaseDate) _; }\r\n\r\n    /**\r\n     * Withdraw the funds\r\n     *\r\n     * Checks to see if goal or time limit has been reached, and if so, and the funding goal was reached,\r\n     * sends the entire amount to the beneficiary. If goal was not reached, each contributor can withdraw\r\n     * the amount they contributed.\r\n     */\r\n    function safeWithdrawal() afterDeadline public {\r\n        amountOfTokens = tokenReward.balanceOf(this);\r\n        tokenReward.transfer(beneficiary, amountOfTokens);\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"amountOfTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenReward\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"safeWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"ifSuccessfulSendTo\",\"type\":\"address\"},{\"name\":\"addressOfTokenUsedAsReward\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"TimedVault","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000e0401d70e14e2e51a5203b1989e211e391295c5900000000000000000000000054fe56d168a8c847dbf13dd6e0fcfffa4e55d467","Library":"","SwarmSource":"bzzr://50e130e640e4038ed9c7d76088231b2110e51347f578122126c5c849278fb0df"}]}