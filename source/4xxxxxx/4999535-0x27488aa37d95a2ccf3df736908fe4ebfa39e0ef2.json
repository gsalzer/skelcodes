{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.15;\r\n\r\ncontract ERC20 {\r\n    function totalSupply() external constant returns (uint256 _totalSupply);\r\n    function balanceOf(address _owner) external constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) external returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\r\n    function approve(address _spender, uint256 _old, uint256 _new) external returns (bool success);\r\n    function allowance(address _owner, address _spender) external constant returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    function ERC20() internal {\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    uint256 constant private    MAX_UINT256     = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\r\n\r\n    function safeAdd (uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        assert (x <= MAX_UINT256 - y);\r\n        return x + y;\r\n    }\r\n\r\n    function safeSub (uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        assert (x >= y);\r\n        return x - y;\r\n    }\r\n\r\n    function safeMul (uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        z = x * y;\r\n        assert(x == 0 || z / x == y);\r\n    }\r\n\r\n    function safeDiv (uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        z = x / y;\r\n        return z;\r\n    }\r\n}\r\n\r\ncontract DetailedERC20 is ERC20 {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    address public              owner;\r\n\r\n    string  public              name;\r\n    string  public              symbol;\r\n    uint8   public              decimals;\r\n    string  public              description;\r\n    uint256 private             summarySupply;\r\n\r\n    mapping(address => uint256)                      private   accounts;\r\n    mapping(address => mapping (address => uint256)) private   allowed;\r\n\r\n    function DetailedERC20(string _name, string _symbol,string _description, uint8 _decimals, uint256 _startTokens) public {\r\n        owner = msg.sender;\r\n\r\n        accounts[owner]  = _startTokens;\r\n        summarySupply    = _startTokens;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        description = _description;\r\n    }\r\n\r\n    modifier onlyPayloadSize(uint size) {\r\n        assert(msg.data.length >= size + 4);\r\n        _;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) onlyPayloadSize(64) external returns (bool success) {\r\n        if (accounts[msg.sender] >= _value) {\r\n            accounts[msg.sender] = accounts[msg.sender].safeSub(_value);\r\n            accounts[_to] = accounts[_to].safeAdd(_value);\r\n            Transfer(msg.sender, _to, _value);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) onlyPayloadSize(64) external returns (bool success) {\r\n        if ((accounts[_from] >= _value) && (allowed[_from][msg.sender] >= _value)) {\r\n            accounts[_from] = accounts[_from].safeSub(_value);\r\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].safeSub(_value);\r\n            accounts[_to] = accounts[_to].safeAdd(_value);\r\n            Transfer(_from, _to, _value);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function approve(address _spender, uint256 _old, uint256 _new) onlyPayloadSize(64) external returns (bool success) {\r\n        if (_old == allowed[msg.sender][_spender]) {\r\n            allowed[msg.sender][_spender] = _new;\r\n            Approval(msg.sender, _spender, _new);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) external constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function balanceOf(address _owner) external constant returns (uint256 balance) {\r\n        if (_owner == 0x00)\r\n            return accounts[msg.sender];\r\n        return accounts[_owner];\r\n    }\r\n\r\n    function totalSupply() external constant returns (uint256 _totalSupply) {\r\n        _totalSupply = summarySupply;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_old\",\"type\":\"uint256\"},{\"name\":\"_new\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_description\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_startTokens\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"DetailedERC20","CompilerVersion":"v0.4.19+commit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000005f5e1000000000000000000000000000000000000000000000000000000000000000004535354540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045353545400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e535353205465737420746f6b656e000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://2a5e5107acae7fbf13e6736f0b73310e92b94bf30a8d3cfee5a0f22718896024"}]}