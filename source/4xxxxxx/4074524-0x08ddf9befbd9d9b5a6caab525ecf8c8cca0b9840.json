{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n * VISTA FINTECH  \r\n * SMART CONTRACT FOR CROWNSALE http://www.vistafin.com\r\n * Edit by Ray Indinor\r\n * Approved by Jacky Hsieh\r\n */\r\n\r\npragma solidity ^0.4.11;\r\nlibrary SafeMath {\r\n\tfunction mul(uint a, uint b) internal returns (uint) {\r\n\t\tuint c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\t\r\n\tfunction div(uint a, uint b) internal returns (uint) {\r\n\t\tassert(b > 0);\r\n\t\tuint c = a / b;\r\n\t\tassert(a == b * c + a % b);\r\n\t\treturn c;\r\n\t}\r\n\t\r\n\tfunction sub(uint a, uint b) internal returns (uint) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\t\r\n\tfunction add(uint a, uint b) internal returns (uint) {\r\n\t\tuint c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n\t\r\n\tfunction max64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n\t\treturn a >= b ? a : b;\r\n\t}\r\n\t\r\n\tfunction min64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n\t\treturn a < b ? a : b;\r\n\t}\r\n\t\r\n\tfunction max256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\treturn a >= b ? a : b;\r\n\t}\r\n\t\r\n\tfunction min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\treturn a < b ? a : b;\r\n\t}\r\n\t\r\n\tfunction assert(bool assertion) internal {\r\n\t\tif (!assertion) {\r\n\t\t\tthrow;\r\n    }\r\n  }\r\n}\r\n\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n    function Ownable() {\r\n        owner = msg.sender;\r\n    }\r\n\t\r\n    modifier onlyOwner {\r\n        if (msg.sender != owner) throw;\r\n        _;\r\n    }\r\n\t\r\n    function transferOwnership(address newOwner) onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n * Pausable Function\r\n * Abstract contract that allows children to implement an emergency stop function. \r\n */\r\ncontract Pausable is Ownable {\r\n\tbool public stopped = false;\r\n\tmodifier stopInEmergency {\r\n\t\tif (stopped) {\r\n\t\t\tthrow;\r\n\t\t}\r\n\t\t_;\r\n\t}\r\n  \r\n\tmodifier onlyInEmergency {\r\n\t\tif (!stopped) {\r\n\t\t\tthrow;\r\n\t\t}\r\n\t\t_;\r\n\t}\r\n\t\r\n/*\r\n * EmergencyStop Function\r\n * called by the owner on emergency, triggers stopped state \r\n */\r\nfunction emergencyStop() external onlyOwner {\r\n    stopped = true;\r\n\t}\r\n\r\n\t\r\n/*\r\n * Release EmergencyState Function\r\n * called by the owner on end of emergency, returns to normal state\r\n */  \r\n\r\nfunction release() external onlyOwner onlyInEmergency {\r\n    stopped = false;\r\n\t}\r\n}\r\n\r\n/*\r\n * ERC20Basic class\r\n * Abstract contract that allows children to implement ERC20basic persistent data in state variables.\r\n */ \t\r\ncontract ERC20Basic {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function transfer(address to, uint value);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\n\r\n/*\r\n * ERC20 class\r\n * Abstract contract that allows children to implement ERC20 persistent data in state variables.\r\n */ \r\ncontract ERC20 is ERC20Basic {\r\n\tfunction allowance(address owner, address spender) constant returns (uint);\r\n\tfunction transferFrom(address from, address to, uint value);\r\n\tfunction approve(address spender, uint value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n\r\n\r\n/*\r\n * BasicToken class\r\n * Abstract contract that allows children to implement BasicToken functions and  persistent data in state variables.\r\n */\r\n\r\ncontract BasicToken is ERC20Basic {\r\n  \r\n\tusing SafeMath for uint;\r\n  \r\n\tmapping(address => uint) balances;\r\n  \r\n\t/*\r\n\t* Fix for the ERC20 short address attack  \r\n\t*/\r\n\tmodifier onlyPayloadSize(uint size) {\r\n\t\tif(msg.data.length < size + 4) {\r\n\t\tthrow;\r\n\t\t}\r\n\t\t_;\r\n\t}\r\n\t\r\n\tfunction transfer(address _to, uint _value) onlyPayloadSize(2 * 32) {\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(_value);\r\n\t\tbalances[_to] = balances[_to].add(_value);\r\n\t\tTransfer(msg.sender, _to, _value);\r\n\t}\r\n\t\r\n\tfunction balanceOf(address _owner) constant returns (uint balance) {\r\n\t\treturn balances[_owner];\r\n\t}\r\n}\r\n\r\n\r\n\r\n/*\r\n * StandardToken class\r\n * Abstract contract that allows children to implement StandToken functions and  persistent data in state variables.\r\n */\r\ncontract StandardToken is BasicToken, ERC20 {\r\n\tmapping (address => mapping (address => uint)) allowed;\r\n\tfunction transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) {\r\n    var _allowance = allowed[_from][msg.sender];\r\n    // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\r\n    // if (_value > _allowance) throw;\r\n    balances[_to] = balances[_to].add(_value);\r\n    balances[_from] = balances[_from].sub(_value);\r\n    allowed[_from][msg.sender] = _allowance.sub(_value);\r\n    Transfer(_from, _to, _value);\r\n  }\r\n\tfunction approve(address _spender, uint _value) {\r\n\t\t// To change the approve amount you first have to reduce the addresses`\r\n\t\t//  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n\t\t//  already 0 to mitigate the race condition described here:\r\n\t\t//  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n\t\tif ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;\r\n\t\tallowed[msg.sender][_spender] = _value;\r\n\t\tApproval(msg.sender, _spender, _value);\r\n\t}\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint remaining) {\r\n\t\treturn allowed[_owner][_spender];\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * ================================================================================\r\n * VISTA token smart contract. Implements\r\n * VISTACOIN class\r\n */\r\ncontract VISTAcoin is StandardToken, Ownable {\r\n\tstring public constant name = \"VISTAcoin\";\r\n\tstring public constant symbol = \"VTA\";\r\n\tuint public constant decimals = 0;\r\n\t// Constructor\r\n\tfunction VISTAcoin() {\r\n\t\ttotalSupply = 50000000;\r\n\t\tbalances[msg.sender] = totalSupply; // Send all tokens to owner\r\n\t}\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]","ContractName":"VISTAcoin","CompilerVersion":"v0.4.11+commit.68ef5810","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7880788a2eaa6472fef8b36f1fda59dc4060ab235d3cfd80758262ce33db11d5"}]}