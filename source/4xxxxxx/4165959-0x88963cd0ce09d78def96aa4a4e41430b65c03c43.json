{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.11;\r\n\r\ncontract ERC20Interface {    \r\n    function totalSupply() constant returns (uint256 totalSupply);\r\n    function balanceOf(address _owner) constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n    function approve(address _spender, uint256 _value) returns (bool success);\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract AKCToken is ERC20Interface{\r\n    string public standard = 'Token 1.0';\r\n    string public constant name=\"Artwork File\";\r\n    string public constant symbol=\"AKC\";\r\n    uint8 public constant decimals=9;\r\n    uint256 constant _totalSupply=1000000000000000000;\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n    mapping(address => uint256) balances;\r\n    address public owner;\r\n    \r\n    function AKCToken() {\r\n        owner = msg.sender;\r\n        balances[owner] = _totalSupply; \r\n    }\r\n    \r\n    function totalSupply() constant returns (uint256 totalSupply) {\r\n          return _totalSupply;\r\n    }\r\n    \r\n    function balanceOf(address _owner) constant returns (uint256 balance){\r\n        return balances[_owner]; \r\n    }\r\n\r\n    function transfer(address _to, uint256 _amount) returns (bool success)  {\r\n       if (balances[msg.sender] >= _amount \r\n              && _amount > 0\r\n              && balances[_to] + _amount > balances[_to]) {\r\n              balances[msg.sender] -= _amount;\r\n              balances[_to] += _amount;\r\n              Transfer(msg.sender, _to, _amount);\r\n              return true;\r\n          } else {\r\n              return false;\r\n          }\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _amount) returns (bool success){\r\n        if (balances[_from] >= _amount\r\n             && _amount > 0\r\n             && balances[_to] + _amount > balances[_to]  && _amount <= allowed[_from][msg.sender]) \r\n        {\r\n             balances[_from] -= _amount;\r\n             balances[_to] += _amount;\r\n             allowed[_from][msg.sender] -= _amount;\r\n             Transfer(_from, _to, _amount);\r\n             return true;\r\n        } else {\r\n             return false;\r\n        }\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) returns (bool success){\r\n         allowed[msg.sender][_spender] = _value;\r\n         Approval(msg.sender, _spender, _value);\r\n         return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining)\r\n    {\r\n        return allowed[_owner][_spender];\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]","ContractName":"AKCToken","CompilerVersion":"v0.4.12+commit.194ff033","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5a9dca21bd3b68f44cc552fd15603fe1d68794ec59216d3311b903313bf749f9"}]}