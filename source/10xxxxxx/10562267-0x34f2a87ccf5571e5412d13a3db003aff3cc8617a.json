{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\n// Created by Henry Harder (c) 2020\r\n// A simple contract wallet that burns CHI to save on transactions.\r\n// Use at your peril.\r\n\r\npragma solidity ^0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nabstract contract IFreeUpTo {\r\n    function freeUpTo(uint256 value) external virtual returns (uint256 freed);\r\n}\r\n\r\nabstract contract IERC20 {\r\n    function approve(address _spender, uint256 _value) public virtual returns (bool success);\r\n    function balanceOf(address _owner) public virtual view returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public virtual returns (bool success);\r\n}\r\n\r\ncontract FixinCHI {\r\n    modifier discount {\r\n        uint256 gasStart = gasleft();\r\n        _;\r\n        uint256 gasSpent = 21000 + gasStart - gasleft() + 16 * msg.data.length;\r\n        IFreeUpTo(0x0000000000004946c0e9F43F4Dee607b0eF1fA1c).freeUpTo((gasSpent + 14154) / 41947);\r\n    }\r\n}\r\n\r\ncontract GasWallet is FixinCHI {\r\n    // Revert reasons:\r\n    // 0 - caller not admin\r\n    // 1 - caller not user or admin\r\n    // 2 - mutex set\r\n    // 3 - contract disabled\r\n    // 4 - balance too low\r\n    // 5 - multi-call argument length mis-match\r\n    // 6 - hit fallback function\r\n\r\n    event Created(address wallet, address admin);\r\n    \r\n    bool public enabled = false;\r\n    uint256 public constant MAX_ALLOWANCE = (2 ** 256) - 1;\r\n    \r\n    bool private _isMutexSet = false;\r\n    address payable private _admin;\r\n    mapping (address => bool) private _users;\r\n    \r\n    modifier onlyAdmin {\r\n        require(msg.sender == _admin, \"0\");\r\n        _;\r\n    }\r\n    \r\n    modifier userOrAdmin {\r\n        require(msg.sender == _admin || _users[msg.sender], \"1\");\r\n        _;\r\n    }\r\n    \r\n    modifier mutex {\r\n        require(!_isMutexSet, \"2\");\r\n        _isMutexSet = true;\r\n        _;\r\n        _isMutexSet = false;\r\n    }\r\n    \r\n    modifier notDisabled {\r\n        require(enabled, \"3\");\r\n        _;\r\n    }\r\n    \r\n    constructor(address payable admin) {\r\n        enabled = true;\r\n        _admin = admin;\r\n        emit Created(address(this), _admin);\r\n    }\r\n    \r\n    function isUser(address who) public view returns (bool) {\r\n        return _users[who];\r\n    }\r\n    \r\n    function setApproval(address token, address spender, uint256 allowance) public discount userOrAdmin notDisabled {\r\n        if (allowance == 0) {\r\n            allowance = MAX_ALLOWANCE;\r\n        }\r\n        \r\n        IERC20 _token = IERC20(token);\r\n        _token.approve(spender, allowance);\r\n    }\r\n    \r\n    function revokeApproval(address token, address spender) public discount userOrAdmin notDisabled {\r\n        IERC20 _token = IERC20(token);\r\n        _token.approve(spender, 0);\r\n    }\r\n    \r\n    function sendTokens(address token, address to, uint256 amount) public discount userOrAdmin notDisabled {\r\n        IERC20 _token = IERC20(token);\r\n        _token.transfer(to, amount);\r\n    }\r\n    \r\n    function sendEther(address payable to, uint256 amount) public discount userOrAdmin notDisabled {\r\n        require(address(this).balance >= amount, \"4\");\r\n        to.transfer(amount);\r\n    }\r\n    \r\n    function addUser(address payable user) public onlyAdmin notDisabled {\r\n        _users[user] = true;\r\n    }\r\n    \r\n    function removeUser(address user) public onlyAdmin notDisabled {\r\n        _users[user] = false;\r\n    }\r\n    \r\n    \r\n    function disable() public onlyAdmin notDisabled {\r\n        enabled = false;\r\n    }\r\n    \r\n    function escapeEther() public onlyAdmin {\r\n        _admin.transfer(address(this).balance);\r\n    }\r\n    \r\n    function escapeToken(address token) public onlyAdmin {\r\n        IERC20 _token = IERC20(token);\r\n        _token.transfer(_admin, _token.balanceOf(address(this)));\r\n    }\r\n    \r\n    function deploy(\r\n        bytes memory code\r\n    ) public discount mutex userOrAdmin notDisabled returns(address newContract) {\r\n        assembly {\r\n            newContract := create(0, add(code, 32), mload(code))\r\n        }\r\n    }\r\n    \r\n    function execute(\r\n        address target,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) public payable discount mutex userOrAdmin notDisabled returns (bytes memory result) {\r\n        require(address(this).balance >= value, \"4\");\r\n        \r\n        bool ok;\r\n        (ok, result) = target.call{value: value}(data);\r\n        require(ok, \"TX_REVERT\");\r\n    }\r\n    \r\n    function batchExecute(\r\n        address[] calldata targets,\r\n        uint256[] calldata values,\r\n        bytes[] calldata datas\r\n    ) public payable discount userOrAdmin notDisabled returns (bytes[] memory results) {\r\n        require((targets.length == values.length) && (values.length == datas.length), \"5\");\r\n        for (uint i = 0; i < targets.length; i++) {\r\n            results[i] = execute(targets[i], values[i], datas[i]);\r\n        }\r\n    }\r\n    \r\n    receive() external payable notDisabled {}\r\n    \r\n    fallback() external payable {\r\n        revert(\"6\");\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"Created\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MAX_ALLOWANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"batchExecute\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"escapeEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"escapeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"revokeApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"name\":\"setApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"GasWallet","CompilerVersion":"v0.7.0+commit.9e61f92b","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000bb4068bac37ef5975210fa0cf03c0984f2d1542c","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://61e0a648b80e0dcd4401db18144a0d1421cb5a199f6376c3005d9b3c1506c201"}]}