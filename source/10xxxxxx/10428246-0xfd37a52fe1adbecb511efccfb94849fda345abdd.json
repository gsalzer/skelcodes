{"status":"1","message":"OK","result":[{"SourceCode":"{\"Owned.sol\":{\"content\":\"// \\\"SPDX-License-Identifier: UNLICENSED \\\"\\r\\npragma solidity ^0.6.0;\\r\\n// ----------------------------------------------------------------------------\\r\\n// Owned contract\\r\\n// ----------------------------------------------------------------------------\\r\\ncontract Owned {\\r\\n    address payable public owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed _from, address indexed _to);\\r\\n\\r\\n    constructor() public {\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner {\\r\\n        require(msg.sender == owner);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address payable _newOwner) public onlyOwner {\\r\\n        owner = _newOwner;\\r\\n        emit OwnershipTransferred(msg.sender, _newOwner);\\r\\n    }\\r\\n}\"},\"XYS_voting.sol\":{\"content\":\"// \\\"SPDX-License-Identifier: UNLICENSED \\\"\\r\\npragma solidity ^0.6.0;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\nimport \\\"./Owned.sol\\\";\\r\\n\\r\\ncontract XYSVoting is Owned{\\r\\n    \\r\\n    struct Case{\\r\\n        uint256 id;\\r\\n        string title;\\r\\n        string message;\\r\\n        uint256 startTime;\\r\\n        uint256 Legitimate;\\r\\n        uint256 Illegitimate;\\r\\n    }\\r\\n    \\r\\n    Case[10] private cases;\\r\\n    \\r\\n    struct Voter{\\r\\n        bool voted;\\r\\n        bool legitimate;\\r\\n    }\\r\\n    \\r\\n    uint256 _votingTimePeriod = 48 hours;\\r\\n    uint256 public caseId = 0;\\r\\n    uint256 public totalCases = 0;\\r\\n    \\r\\n    mapping(uint256 =\\u003e mapping(address =\\u003e Voter)) caseUserVotes;\\r\\n    \\r\\n    modifier caseExist(uint256 id){\\r\\n        require(cases[id - 1].startTime \\u003e 0 \\u0026\\u0026 id \\u003e= 0);\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    /*modifier votingOpenForCase(uint256 id){\\r\\n        require(now \\u003e cases[id - 1].startTime + 24 hours);\\r\\n        _;\\r\\n    }*/\\r\\n    \\r\\n    modifier caseOpen(uint256 id){\\r\\n        require(cases[id - 1].startTime + _votingTimePeriod \\u003e now);\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    modifier caseNotVoted(uint256 id){\\r\\n        require(!caseVoteStatus(id, msg.sender));\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    constructor(address payable _owner) public {\\r\\n        owner = _owner;\\r\\n    }\\r\\n    \\r\\n    function addCase(string calldata _title, string calldata _message) external onlyOwner{\\r\\n        \\r\\n        if(caseId == 10)\\r\\n            caseId = 0;\\r\\n            \\r\\n        cases[caseId] = Case({\\r\\n                                id: caseId + 1,\\r\\n                                title: _title,\\r\\n                                message: _message,\\r\\n                                startTime: now,\\r\\n                                Legitimate: 0,\\r\\n                                Illegitimate: 0\\r\\n                            });\\r\\n        caseId++;\\r\\n        totalCases++;\\r\\n    }\\r\\n    \\r\\n    function getCases() public view returns(Case[10] memory){\\r\\n        return cases;\\r\\n    }\\r\\n    \\r\\n    function vote(uint256 _caseId, bool legitimate) external caseExist(_caseId) caseOpen(_caseId) caseNotVoted(_caseId){\\r\\n        if(legitimate){\\r\\n            cases[_caseId - 1].Legitimate = cases[_caseId - 1].Legitimate + 1;\\r\\n            caseUserVotes[_caseId - 1][msg.sender].legitimate = true;\\r\\n        }\\r\\n        else{\\r\\n            cases[_caseId - 1].Illegitimate = cases[_caseId - 1].Illegitimate + 1;\\r\\n            caseUserVotes[_caseId - 1][msg.sender].legitimate = false;\\r\\n        }   \\r\\n        caseUserVotes[_caseId - 1][msg.sender].voted = true;\\r\\n        \\r\\n    }\\r\\n    \\r\\n    function caseVoteStatus(uint256 _caseId, address voter) public view returns(bool status){\\r\\n        return caseUserVotes[_caseId - 1][voter].voted;\\r\\n    }\\r\\n    \\r\\n    function getAllCaseStatus() external view returns(\\r\\n        bool[] memory statuses,\\r\\n        bool[] memory caseVotingOpen\\r\\n    ){\\r\\n        statuses = new bool[](10);\\r\\n        caseVotingOpen = new bool[](10);\\r\\n        \\r\\n        for(uint256 i =0; i \\u003c 10; i++){\\r\\n            statuses[i] = caseUserVotes[i][msg.sender].voted;\\r\\n            caseVotingOpen[i] = cases[i].startTime + _votingTimePeriod \\u003e now ? true : false;\\r\\n        }\\r\\n        \\r\\n        return (statuses, caseVotingOpen);\\r\\n    }\\r\\n    \\r\\n    function getCoherence() external view returns(uint256 coherence){\\r\\n        uint256 voted = 0;\\r\\n        uint256 correct = 0;\\r\\n        for(uint256 i = 0; i\\u003c100 \\u0026\\u0026 i\\u003ctotalCases ;i++){\\r\\n            if(caseVoteStatus(i + 1, msg.sender) ){\\r\\n                voted++;\\r\\n                \\r\\n                // check its correctness with majority\\r\\n                if(caseUserVotes[i][msg.sender].legitimate \\u0026\\u0026 cases[i].Legitimate \\u003e cases[i].Illegitimate)\\r\\n                    correct++;\\r\\n                else if(!caseUserVotes[i][msg.sender].legitimate \\u0026\\u0026 cases[i].Legitimate \\u003c cases[i].Illegitimate)\\r\\n                    correct++;\\r\\n            }\\r\\n        }\\r\\n        \\r\\n        return correct*100/voted;\\r\\n    }\\r\\n    \\r\\n}\"}}","ABI":"[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"addCase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"caseId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_caseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"caseVoteStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllCaseStatus\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"statuses\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"caseVotingOpen\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCases\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Legitimate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Illegitimate\",\"type\":\"uint256\"}],\"internalType\":\"struct XYSVoting.Case[10]\",\"name\":\"\",\"type\":\"tuple[10]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCoherence\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"coherence\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_caseId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"legitimate\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"XYSVoting","CompilerVersion":"v0.6.11+commit.5ef660b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000d95fe581e3ba54d14dee8d512afdf54bd0d8c7a5","EVMVersion":"Default","Library":"","LicenseType":"Unlicense","Proxy":"0","Implementation":"","SwarmSource":"ipfs://e673ad278982ec535d09bcf14498736b591a3fece31d2248f493e4e2b48b767b"}]}