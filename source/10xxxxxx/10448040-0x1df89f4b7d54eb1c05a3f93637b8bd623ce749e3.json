{"status":"1","message":"OK","result":[{"SourceCode":"/**\nAuthor: Authereum Labs, Inc.\n*/\n\npragma solidity 0.5.17;\n\n\n/**\n * @title AuthereumProxy\n * @author Authereum Labs, Inc.\n * @dev The Authereum Proxy.\n */\ncontract AuthereumProxy {\n\n    // We do not include a name or a version for this contract as this\n    // is a simple proxy. Including them here would overwrite the declaration\n    // of these variables in the implementation.\n\n    /// @dev Storage slot with the address of the current implementation.\n    /// @notice This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /// @dev Set the implementation in the constructor\n    /// @param _logic Address of the logic contract\n    constructor(address _logic) public payable {\n        bytes32 slot = IMPLEMENTATION_SLOT;\n        assembly {\n            sstore(slot, _logic)\n        }\n    }\n\n    /// @dev Fallback function\n    /// @notice A payable fallback needs to be implemented in the implementation contract\n    /// @notice This is a low level function that doesn't return to its internal call site.\n    /// @notice It will return to the external caller whatever the implementation returns.\n    function () external payable {\n        if (msg.data.length == 0) return;\n\n        assembly {\n            // Load the implementation address from the IMPLEMENTATION_SLOT\n            let impl := sload(IMPLEMENTATION_SLOT)\n\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize)\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas, impl, 0, calldatasize, 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize)\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 { revert(0, returndatasize) }\n            default { return(0, returndatasize) }\n        }\n    }\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","ContractName":"AuthereumProxy","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000d61abd2b5a20930253c0801b6fd6631cf545c938","EVMVersion":"Default","Library":"","LicenseType":"","Proxy":"0","Implementation":"","SwarmSource":""}]}