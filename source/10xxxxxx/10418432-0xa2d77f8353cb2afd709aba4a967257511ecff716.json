{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.25;\r\n\r\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) external; }\r\n\r\ncontract owned {\r\n\taddress public owner;\r\n\r\n\tconstructor() public {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n    \trequire(msg.sender == owner);\r\n    \t_;\r\n\t}\r\n\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        \r\n        return c;\r\n    }\r\n\r\n}\r\n\r\ncontract TokenERC20 is owned {\r\n    \r\n    using SafeMath for uint256;\r\n\r\n\tstring public name;\r\n\tstring public symbol;\r\n\tuint8 public decimals = 8;\r\n\tuint256 public totalSupply;\r\n\r\n\tmapping (address => uint256) public balanceOf;\r\n\tmapping (address => mapping(address => uint256)) public allowance;\r\n\t\r\n\tevent Transfer(address indexed from, address indexed to, uint256 value);\r\n\tevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\tevent Burn(address indexed from, address indexed to, uint256 value);\r\n\r\n\tconstructor(uint256 initialSupply, string tokenName, string tokenSymbol) public {\r\n\t\t\ttotalSupply = initialSupply*10**uint256(decimals);\r\n\t\t\tbalanceOf[msg.sender] = totalSupply;\r\n\t\t\temit Transfer(0x0, msg.sender, totalSupply);\r\n\t\t\tname = tokenName;\r\n\t\t\tsymbol = tokenSymbol;\r\n\t}\r\n\t\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n    \t\r\n    \trequire(_to !=0x0);\r\n    \trequire(balanceOf[_from] >= _value);\r\n    \trequire(balanceOf[_to].add(_value) >= balanceOf[_to]);\r\n    \t\r\n        uint previousBalances = balanceOf[_from].add(balanceOf[_to]);\r\n    \r\n    \tbalanceOf[_from] = balanceOf[_from].sub(_value);\r\n    \tbalanceOf[_to] = balanceOf[_to].add(_value);\r\n    \t\r\n    \temit Transfer(_from, _to, _value);\r\n    \tassert(balanceOf[_from].add(balanceOf[_to]) == previousBalances);\r\n    \r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool sucess){\r\n    \t\r\n    \t_transfer(msg.sender, _to, _value);\r\n    \treturn true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool sucess){\r\n    \t\r\n    \trequire(_value <= allowance[_from][msg.sender]);\r\n    \tallowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n    \t_transfer(_from, _to, _value);\r\n    \treturn true;\r\n    \r\n    }\r\n    \r\n    function approve(address _spender, uint256 _value) public returns (bool sucess){\r\n    \t\r\n    \tallowance[msg.sender][_spender] = _value;\r\n    \temit Approval(msg.sender, _spender, _value);\r\n    \treturn true;\r\n    \r\n    }\r\n    \r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    \r\n   function burn(uint256 _value) onlyOwner public returns (bool sucess){\r\n    \trequire(balanceOf[msg.sender] >= _value);\r\n    \r\n    \tbalanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\r\n    \ttotalSupply = totalSupply.sub(_value);\r\n    \temit Transfer(msg.sender, address(0), _value);\r\n    \treturn true;\r\n    }\r\n    \r\n    function burnFrom(address _from, uint256 _value) onlyOwner public returns (bool sucess){\r\n    \trequire(balanceOf[_from] >= _value);\r\n    \trequire(_value <= allowance[_from][msg.sender]);\r\n    \r\n    \tbalanceOf[_from] = balanceOf[_from].sub(_value);\r\n    \tallowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n    \ttotalSupply = totalSupply.sub(_value);\r\n    \temit Transfer(msg.sender, address(0), _value);\r\n    \treturn true;\r\n    }\r\n\r\n    function mintToken(address target, uint256 mintedAmount) onlyOwner public {\r\n    \tbalanceOf[target] = balanceOf[target].add(mintedAmount);\r\n    \ttotalSupply = totalSupply.add(mintedAmount);\r\n    \temit Transfer(address(0), target, mintedAmount);\r\n    }\r\n    \r\n}","ABI":"[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"sucess\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"sucess\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"sucess\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"sucess\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"sucess\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"}]","ContractName":"TokenERC20","CompilerVersion":"v0.4.25+commit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000028fa6ae00000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000017496e7465726e65742045786368616e676520546f6b656e0000000000000000000000000000000000000000000000000000000000000000000000000000000004494e455800000000000000000000000000000000000000000000000000000000","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://cf23422c1772a7817877328dab7c93ad0377e34a2f6b74b502b0bb6695876d96"}]}