{"status":"1","message":"OK","result":[{"SourceCode":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.7.0;\r\n\r\nabstract contract ERC20 {\r\n  uint256 public totalSupply;\r\n\r\n  function balanceOf(address who) public view virtual returns (uint256);\r\n  function transfer(address to, uint256 value) public virtual returns (bool);\r\n  function allowance(address owner, address spender) public view virtual returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public virtual returns (bool);\r\n  function approve(address spender, uint256 value) public virtual returns (bool);\r\n\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ClerkCommunityReserve {\r\n\r\n    address public owner;\r\n    uint256 public unlockDate;\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"You are not the owner\");\r\n        _;\r\n    }\r\n\r\n    constructor () {\r\n        owner = address(0x7962d11EDf3e7163D7bae3E3E2F007F37c4C6F29); // The reserves wallet address\r\n        unlockDate = 1630454400; // 1st of September 2021 @ 12:00 am (UTC)\r\n    }\r\n\r\n    // This can only ever be incremented - never decreased\r\n    function updateUnlockDate(uint256 _newDate) onlyOwner public {\r\n        require(_newDate > unlockDate, \"Date specified is less than current unlock date\");\r\n        unlockDate = _newDate;\r\n    }\r\n\r\n    // keep all tokens sent to this address\r\n    receive() external payable  {\r\n        emit Received(msg.sender, msg.value);\r\n    }\r\n\r\n    // callable by owner only, after specified time\r\n    function withdrawAll() onlyOwner public {\r\n       require(block.timestamp >= unlockDate);\r\n       // withdraw balance\r\n       msg.sender.transfer(address(this).balance);\r\n       emit Withdrew(msg.sender, address(this).balance);\r\n    }\r\n\r\n    // callable by owner only, after specified time, only for Tokens implementing ERC20\r\n    function withdrawERC20(address _tokenContract) onlyOwner public {\r\n       require(block.timestamp >= unlockDate, \"Funds cannot be withdrawn yet\");\r\n       ERC20 token = ERC20(_tokenContract);\r\n       uint256 tokenBalance = token.balanceOf(address(this));\r\n       token.transfer(owner, tokenBalance);\r\n       emit WithdrewTokens(_tokenContract, msg.sender, tokenBalance);\r\n    }\r\n\r\n    // callable by owner only, after specified time, only for Tokens implementing ERC20\r\n    function withdrawERC20Amount(address _tokenContract, uint256 _amount) onlyOwner public {\r\n       require(block.timestamp >= unlockDate, \"Funds cannot be withdrawn yet\");\r\n       ERC20 token = ERC20(_tokenContract);\r\n       uint256 tokenBalance = token.balanceOf(address(this));\r\n       require(tokenBalance >= _amount, \"Not enough funds in the reserve\");\r\n       token.transfer(owner, _amount);\r\n       emit WithdrewTokens(_tokenContract, msg.sender, _amount);\r\n    }\r\n\r\n    function info() public view returns(address, uint256, uint256) {\r\n        return (owner, unlockDate, address(this).balance);\r\n    }\r\n\r\n    function infoERC20(address _tokenContract) public view returns(address, uint256, uint256) {\r\n        ERC20 token = ERC20(_tokenContract);\r\n        return (owner, unlockDate, token.balanceOf(address(this)));\r\n    }\r\n\r\n    event Received(address from, uint256 amount);\r\n    event Withdrew(address to, uint256 amount);\r\n    event WithdrewTokens(address tokenContract, address to, uint256 amount);\r\n}","ABI":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrew\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrewTokens\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"infoERC20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newDate\",\"type\":\"uint256\"}],\"name\":\"updateUnlockDate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20Amount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"ClerkCommunityReserve","CompilerVersion":"v0.7.0+commit.9e61f92b","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://20b8b1fa196e964de85d3adbac8dcf280f96ad6416b0be20f313020a22e5fe14"}]}