{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.12;\r\n\r\ninterface Kye {\r\n    function routerAddress() external view returns (address);\r\n}\r\n\r\ncontract Routerable {\r\n    \r\n    address private constant _KYEADDRESS = 0xD5A4dc51229774223e288528E03192e2342bDA00;\r\n    \r\n    function kyeAddress() public pure returns (address) {\r\n        return _KYEADDRESS;\r\n    }\r\n    \r\n    function routerAddress() public view returns (address) {\r\n        return Kye(kyeAddress()).routerAddress();\r\n    }\r\n    \r\n    modifier onlyRouter() {\r\n        require(msg.sender == routerAddress(), \"Caller is not Router\");\r\n        _;\r\n    }\r\n}\r\n\r\ncontract LiquidityPool is Routerable{\r\n    \r\n    receive() external payable {}\r\n    \r\n    function give(uint amount, address payable to) public onlyRouter {\r\n        to.transfer(amount);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"give\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kyeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"routerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"LiquidityPool","CompilerVersion":"v0.6.12+commit.27d51765","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://50b9a6eacfa5f4ce827c7d8912ebce029d9888a8fbc7465e6088be74bae71f58"}]}