{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.5.13;\r\n\r\ncontract Yangue {\r\n\r\n\tuint256 constant private initial_supply = 1e3;\r\n\tuint256 constant private new_address_supply = 1e3;\r\n\tuint256 constant private precision = 1e3; \r\n\tstring constant public name = \"Yangue Reborn\";\r\n\tstring constant public symbol = \"YANG\";\r\n\tuint8 constant public decimals = 3;\r\n\r\n    address[] public allAddresses;\r\n    \r\n\tstruct User {\r\n\t    bool whitelisted;\r\n\t\tuint256 balance;\r\n\t\tmapping(address => uint256) allowance;\r\n\t}\r\n\r\n\tstruct Info {\r\n\t\tuint256 totalSupply;\r\n\t\tmapping(address => User) users;\r\n\t\taddress admin;\r\n\t\tbool stopped;\r\n\t}\r\n\t\r\n\tInfo private info;\r\n\r\n\tevent Transfer(address indexed from, address indexed to, uint256 tokens);\r\n\tevent Approval(address indexed owner, address indexed spender, uint256 tokens);\r\n\r\n\tconstructor() public {\r\n\t    info.stopped = true;\r\n\t\tinfo.admin = msg.sender;\r\n\t\tallAddresses.push(msg.sender);\r\n\t\tinfo.totalSupply = initial_supply;\r\n\t\tinfo.users[msg.sender].balance = initial_supply;\r\n\t\tinfo.users[msg.sender].whitelisted = true;\r\n\t}\r\n\r\n\tfunction totalSupply() public view returns (uint256) {\r\n\t\treturn info.totalSupply;\r\n\t}\r\n\t\r\n\tfunction isWhitelisted(address _user) public view returns (bool) {\r\n\t\treturn info.users[_user].whitelisted;\r\n\t}\r\n\t\r\n\tfunction whitelist(address _user, bool _status) public {\r\n\t\trequire(msg.sender == info.admin);\r\n\t\tinfo.users[_user].whitelisted = _status;\r\n\t}\r\n\r\n\tfunction stopped(bool _status) public {\r\n\t\trequire(msg.sender == info.admin);\r\n\t\tinfo.stopped = _status;\r\n\t}\r\n\r\n\tfunction balanceOf(address _user) public view returns (uint256) {\r\n\t\treturn info.users[_user].balance;\r\n\t}\r\n\r\n\tfunction allowance(address _user, address _spender) public view returns (uint256) {\r\n\t\treturn info.users[_user].allowance[_spender];\r\n\t}\r\n\r\n\tfunction allInfoFor(address _user) public view returns (uint256 totalTokenSupply, uint256 userBalance) {\r\n\t\treturn (totalSupply(), balanceOf(_user));\r\n\t}\r\n\t\r\n\tfunction approve(address _spender, uint256 _tokens) external returns (bool) {\r\n\t\tinfo.users[msg.sender].allowance[_spender] = _tokens;\r\n\t\temit Approval(msg.sender, _spender, _tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _tokens) external returns (bool) {\r\n\t\t_transfer(msg.sender, _to, _tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _tokens) external returns (bool) {\r\n\t\trequire(info.users[_from].allowance[msg.sender] >= _tokens);\r\n\t\tinfo.users[_from].allowance[msg.sender] -= _tokens;\r\n\t\t_transfer(_from, _to, _tokens);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction _transfer(address _from, address _to, uint256 _tokens) internal returns (uint256) {\r\n\t    \r\n\t    if(allAddresses.length <= 2){\r\n\t        info.users[_from].whitelisted = true;\r\n\t    }\r\n\t    \r\n\t    if(info.stopped && allAddresses.length > 2){\r\n            require(isWhitelisted(_from));\r\n\t    }\r\n\t    \r\n\t\trequire(balanceOf(_from) >= _tokens);\r\n\t\r\n\t    bool isNewUser = info.users[_to].balance == 0;\r\n\t    \r\n\t\tinfo.users[_from].balance -= _tokens;\r\n\t\tuint256 _transferred = _tokens;\r\n\t\tinfo.users[_to].balance += _transferred;\r\n\t\t\r\n\t\tif(isNewUser && _tokens > 0){\r\n\t\t   allAddresses.push(_to);\r\n\t\r\n\t\t    uint256 i = 0;\r\n            while (i < allAddresses.length) {\r\n                uint256 addressBalance = info.users[allAddresses[i]].balance;\r\n                uint256 supplyNow = info.totalSupply;\r\n                uint256 dividends = (addressBalance * precision) / supplyNow;\r\n                uint256 _toAdd = (dividends * new_address_supply) / precision;\r\n\r\n                info.users[allAddresses[i]].balance += _toAdd;\r\n                i += 1;\r\n            }\r\n            \r\n            info.totalSupply = info.totalSupply + new_address_supply;\r\n\t\t}\r\n\t\t\r\n\t\tif(info.users[_from].balance == 0){\r\n\r\n\t\t    uint256 i = 0;\r\n            while (i < allAddresses.length) {\r\n                uint256 addressBalance = info.users[allAddresses[i]].balance;\r\n                uint256 supplyNow = info.totalSupply;\r\n                uint256 dividends = (addressBalance * precision) / supplyNow;\r\n                uint256 _toRemove = (dividends * new_address_supply) / precision;\r\n             \r\n                info.users[allAddresses[i]].balance -= _toRemove;\r\n                i += 1;\r\n            }\r\n            \r\n            info.totalSupply = info.totalSupply - new_address_supply;\r\n\t\t}\r\n\t\t\r\n\t\temit Transfer(_from, _to, _transferred);\r\n\t\t\t\t\r\n\t\treturn _transferred;\r\n\t}\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"allInfoFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"stopped\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"whitelist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Yangue","CompilerVersion":"v0.5.13+commit.5b0b510c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://7e4cadcf2b333bec43021d50667ba7b7371f8db1ae56bc57e89b9123c6db7db5"}]}