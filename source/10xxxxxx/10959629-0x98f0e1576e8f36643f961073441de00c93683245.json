{"status":"1","message":"OK","result":[{"SourceCode":"/*\r\n* Author : Christopher D.\r\n*/\r\n\r\npragma solidity 0.5.17;\r\n\r\nlibrary SafeMath {\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function mint(address account, uint amount) external;\r\n}\r\n\r\ncontract GOKUAirdrop {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) public supplies;\r\n    IERC20 public goku = IERC20(0x4E44FE174e934ff78A77BEe3C2b752fD1BEeFDEf); //need replace\r\n\r\n    address public gov;\r\n\r\n    constructor()\r\n        public\r\n    {\r\n        gov = msg.sender;\r\n    }\r\n\r\n    modifier onlyGov()\r\n    {\r\n        require(msg.sender == gov, \"require gov!\");\r\n        _;\r\n    }\r\n\r\n    function setAirdropSupply(address pool, uint256 initSupply)\r\n        external\r\n        onlyGov\r\n    {\r\n        supplies[pool] = initSupply;\r\n    }\r\n\r\n    function transferOwnership(address owner)\r\n        external\r\n        onlyGov\r\n    {\r\n        gov = owner;\r\n    }\r\n\r\n    function getRemainAirdrop(address pool)\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return supplies[pool];\r\n    }\r\n\r\n    function airdrop(uint256 value)\r\n        external\r\n    {\r\n        require(supplies[msg.sender] > 0, \"Unable to call!\");\r\n        require(value > 0, \"Unable to airdrop 0!\");\r\n        require(supplies[msg.sender] >= value, \"Unable to airdrop!\");\r\n        goku.mint(msg.sender, value);\r\n        supplies[msg.sender] = supplies[msg.sender].sub(value);\r\n    }\r\n\r\n    function airdropAll()\r\n        external\r\n    {\r\n        require(supplies[msg.sender] > 0, \"Unable to call!\");\r\n        goku.mint(msg.sender, supplies[msg.sender]);\r\n        supplies[msg.sender] = 0;\r\n    }\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"airdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"airdropAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getRemainAirdrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"goku\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initSupply\",\"type\":\"uint256\"}],\"name\":\"setAirdropSupply\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supplies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"GOKUAirdrop","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://f352c9b87081474a8d1947b6d0c5596a2bd60ba65aa751b94ac411d8152daebf"}]}