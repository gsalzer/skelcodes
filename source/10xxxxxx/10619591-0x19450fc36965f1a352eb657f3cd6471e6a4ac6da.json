{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.4.26;\r\n\r\ncontract CommonwealthNamingService {\r\n    address public eWLTHDivies;\r\n    \r\n    uint recordsCreated;\r\n    \r\n    uint recordCreationPrice = (0.001 ether); // 0.001 ETH to register a name.\r\n    \r\n    mapping(address => bool) activatedCNS;\r\n    mapping(address => string) addressNameMap;\r\n    mapping(string => address) nameAddressMap;\r\n    \r\n    event NameRegistered(address _owner, string _name, uint _registrationFeePaid);\r\n    event NameReassigned(address _owner, address _recipient);\r\n    \r\n    // Check availability\r\n    function isAvailable(string memory name) public view returns (bool) {\r\n        if (checkCharacters(bytes(name))) {return (nameAddressMap[name] == address(0));}\r\n        return false;\r\n    }\r\n    \r\n    constructor(address _divies) public {\r\n        eWLTHDivies = _divies;\r\n    }\r\n    \r\n    // Main Functions\r\n    function buyRecord(string memory _name) public payable returns (bool, uint) {\r\n        require(msg.value == recordCreationPrice);\r\n        createRecord(_name, msg.sender);\r\n        eWLTHDivies.transfer(msg.value);\r\n        recordsCreated += 1;\r\n        emit NameRegistered(msg.sender, _name, recordCreationPrice);\r\n    }\r\n    \r\n    // User Functions\r\n    function getRecordOwner(string memory name) public view returns (address) {\r\n        return nameAddressMap[name];\r\n    }\r\n    \r\n    function getRecordName(address addr) public view returns (string memory name) {\r\n        return addressNameMap[addr];\r\n    }\r\n    \r\n    // Record Functions\r\n    function getRecordCount() public view returns (uint) {return recordsCreated;}\r\n    \r\n    // Internal Functions\r\n    function createRecord(string memory name, address _owner) internal returns (bool) {\r\n        require(bytes(name).length <= 32, \"name must be fewer than 32 bytes\");\r\n        require(bytes(name).length >= 3, \"name must be more than 3 bytes\");\r\n        require(checkCharacters(bytes(name)));\r\n        require(nameAddressMap[name] == address(0), \"name in use\");\r\n        string memory oldName = addressNameMap[_owner];\r\n        if (bytes(oldName).length > 0) {nameAddressMap[oldName] = address(0);}\r\n        addressNameMap[_owner] = name;\r\n        nameAddressMap[name] = _owner;\r\n        activatedCNS[_owner] = true;\r\n        return true;\r\n    }\r\n    \r\n    // Validation - Check for only letters and numbers, allow 9-0, A-Z, a-z only\r\n    function checkCharacters(bytes memory name) internal pure returns (bool) {\r\n        for(uint i; i<name.length; i++){\r\n            bytes1 char = name[i];\r\n            if(!(char >= 0x30 && char <= 0x39) && !(char >= 0x41 && char <= 0x5A) && !(char >= 0x61 && char <= 0x7A))\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}","ABI":"[{\"constant\":true,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getRecordOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eWLTHDivies\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"buyRecord\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"isAvailable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getRecordName\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRecordCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_divies\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_registrationFeePaid\",\"type\":\"uint256\"}],\"name\":\"NameRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"NameReassigned\",\"type\":\"event\"}]","ContractName":"CommonwealthNamingService","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000005c79caefeab641eb667ee9dcb82c5e9d211eca73","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://371ca6ac0a64a7b3e04249a288f0f83f82a91e46d9c4c26fbcc2e75926c4d0ba"}]}