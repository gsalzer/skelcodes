{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.16;\r\npragma experimental ABIEncoderV2;\r\n\r\n/// @title Named Contract\r\ncontract NamedContract {\r\n    /// @notice The name of contract, which can be set once\r\n    string public name;\r\n\r\n    /// @notice Sets contract name.\r\n    function setContractName(string memory newName) internal {\r\n        name = newName;\r\n    }\r\n}\r\n\r\ncontract Ownable {\r\n    /// @notice Storage position of the owner address\r\n    /// @dev The address of the current owner is stored in a\r\n    /// constant pseudorandom slot of the contract storage\r\n    /// (slot number obtained as a result of hashing a certain message),\r\n    /// the probability of rewriting which is almost zero\r\n    bytes32 private constant _ownerPosition = keccak256(\"owner\");\r\n\r\n    /// @notice Storage position of the authorized new owner address\r\n    bytes32 private constant _authorizedNewOwnerPosition = keccak256(\"authorizedNewOwner\");\r\n\r\n    /// @notice Contract constructor\r\n    /// @dev Sets msg sender address as owner address\r\n    constructor() public {\r\n        bytes32 ownerPosition = _ownerPosition;\r\n        address owner = msg.sender;\r\n        assembly {\r\n            sstore(ownerPosition, owner)\r\n        }\r\n    }\r\n\r\n    /// @notice Check that requires msg.sender to be the current owner\r\n    function requireOwner() internal view {\r\n        require(\r\n            msg.sender == getOwner(),\r\n            \"Sender must be owner\"\r\n        );\r\n    }\r\n\r\n    /// @notice Returns contract owner address\r\n    function getOwner() public view returns (address owner) {\r\n        bytes32 ownerPosition = _ownerPosition;\r\n        assembly {\r\n            owner := sload(ownerPosition)\r\n        }\r\n    }\r\n\r\n    /// @notice Returns authorized new owner address\r\n    function getAuthorizedNewOwner() public view returns (address newOwner) {\r\n        bytes32 authorizedNewOwnerPosition = _authorizedNewOwnerPosition;\r\n        assembly {\r\n            newOwner := sload(authorizedNewOwnerPosition)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Authorizes the transfer of ownership to the provided address.\r\n     * NOTE: No transfer will occur unless authorizedAddress calls assumeOwnership( ).\r\n     * This authorization may be removed by another call to this function authorizing\r\n     * the null address.\r\n     *\r\n     * @param authorizedAddress The address authorized to become the new owner.\r\n     */\r\n    function authorizeOwnershipTransfer(address authorizedAddress) external {\r\n        requireOwner();\r\n        bytes32 authorizedNewOwnerPosition = _authorizedNewOwnerPosition;\r\n        assembly {\r\n            sstore(authorizedNewOwnerPosition, authorizedAddress)\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @notice Transfers ownership of this contract to the authorizedNewOwner.\r\n     */\r\n    function assumeOwnership() external {\r\n        bytes32 authorizedNewOwnerPosition = _authorizedNewOwnerPosition;\r\n        address newOwner;\r\n\r\n        assembly {\r\n            newOwner := sload(authorizedNewOwnerPosition)\r\n        }\r\n\r\n        require(\r\n            msg.sender == newOwner,\r\n            \"Only the authorized new owner can accept ownership\"\r\n        );\r\n        \r\n        bytes32 ownerPosition = _ownerPosition;\r\n        address zero = address(0);\r\n\r\n        assembly {\r\n            sstore(ownerPosition, newOwner)\r\n            sstore(authorizedNewOwnerPosition, zero)\r\n        }\r\n    }\r\n}\r\n\r\n/// @title Upgradeable contract\r\ncontract Upgradeable is Ownable {\r\n    /// @notice Storage position of the current implementation address.\r\n    /// @dev The address of the current implementation is stored in a\r\n    /// constant pseudorandom slot of the contract proxy contract storage\r\n    /// (slot number obtained as a result of hashing a certain message),\r\n    /// the probability of rewriting which is almost zero\r\n    bytes32 private constant implementationPosition = keccak256(\r\n        \"implementation\"\r\n    );\r\n\r\n    /// @notice Contract constructor\r\n    /// @dev Calls Ownable contract constructor\r\n    constructor() public Ownable() {}\r\n\r\n    /// @notice Returns the current implementation contract address\r\n    function getImplementation() public view returns (address implementation) {\r\n        bytes32 position = implementationPosition;\r\n        assembly {\r\n            implementation := sload(position)\r\n        }\r\n    }\r\n\r\n    /// @notice Sets new implementation contract address as current\r\n    /// @param _newImplementation New implementation contract address\r\n    function setImplementation(address _newImplementation) public {\r\n        requireOwner();\r\n        require(_newImplementation != address(0), \"New implementation must have non-zero address\");\r\n        address currentImplementation = getImplementation();\r\n        require(currentImplementation != _newImplementation, \"New implementation must have new address\");\r\n        bytes32 position = implementationPosition;\r\n        assembly {\r\n            sstore(position, _newImplementation)\r\n        }\r\n    }\r\n\r\n    /// @notice Sets new implementation contract address and call its initializer.\r\n    /// @dev New implementation call is a low level delegatecall.\r\n    /// @param _newImplementation the new implementation address.\r\n    /// @param _newImplementaionCallData represents the msg.data to bet sent through the low level delegatecall.\r\n    /// This parameter may include the initializer function signature with the needed payload.\r\n    function setImplementationAndCall(\r\n        address _newImplementation,\r\n        bytes calldata _newImplementaionCallData\r\n    ) external payable {\r\n        setImplementation(_newImplementation);\r\n        if (_newImplementaionCallData.length > 0) {\r\n            (bool success, ) = address(this).call.value(msg.value)(\r\n                _newImplementaionCallData\r\n            );\r\n            require(success, \"Delegatecall has failed\");\r\n        }\r\n    }\r\n}\r\n/// @title Upgradeable Registry Contract\r\ncontract SwipeRegistry is NamedContract, Upgradeable {\r\n    /// @notice Contract constructor\r\n    /// @dev Calls Upgradable contract constructor and sets contract name\r\n    constructor(string memory contractName) public Upgradeable() {\r\n        setContractName(contractName);\r\n    }\r\n    \r\n    /// @notice Performs a delegatecall to the implementation contract.\r\n    /// @dev Fallback function allows to perform a delegatecall to the given implementation.\r\n    /// This function will return whatever the implementation call returns.\r\n    function() external payable {\r\n        require(msg.data.length > 0, \"Calldata must not be empty\");\r\n        address _impl = getImplementation();\r\n        assembly {\r\n            // The pointer to the free memory slot\r\n            let ptr := mload(0x40)\r\n            // Copy function signature and arguments from calldata at zero position into memory at pointer position\r\n            calldatacopy(ptr, 0x0, calldatasize)\r\n            // Delegatecall method of the implementation contract, returns 0 on error\r\n            let result := delegatecall(gas, _impl, ptr, calldatasize, 0x0, 0)\r\n            // Get the size of the last return data\r\n            let size := returndatasize\r\n            // Copy the size length of bytes from return data at zero position to pointer position\r\n            returndatacopy(ptr, 0x0, size)\r\n            // Depending on result value\r\n            switch result\r\n                case 0 {\r\n                    // End execution and revert state changes\r\n                    revert(ptr, size)\r\n                }\r\n                default {\r\n                    // Return data with length of size at pointers position\r\n                    return(ptr, size)\r\n                }\r\n        }\r\n    }\r\n}\r\ncontract GovernanceEvent {\r\n    /// @notice An event emitted when initialize\r\n    event Initialize(\r\n        address indexed timelockAddress,\r\n        address indexed stakingAddress,\r\n        address indexed guardian\r\n    );\r\n\r\n    event GuardianshipTransferAuthorization(\r\n        address indexed authorizedAddress\r\n    );\r\n\r\n    event GuardianUpdate(\r\n        address indexed oldValue,\r\n        address indexed newValue\r\n    );\r\n\r\n    event QuorumVotesUpdate(\r\n        uint256 indexed oldValue,\r\n        uint256 indexed newValue\r\n    );\r\n\r\n    event ProposalThresholdUpdate(\r\n        uint256 indexed oldValue,\r\n        uint256 indexed newValue\r\n    );\r\n\r\n    event ProposalMaxOperationsUpdate(\r\n        uint256 indexed oldValue,\r\n        uint256 indexed newValue\r\n    );\r\n\r\n    event VotingDelayUpdate(\r\n        uint256 indexed oldValue,\r\n        uint256 indexed newValue\r\n    );\r\n\r\n    event VotingPeriodUpdate(\r\n        uint256 indexed oldValue,\r\n        uint256 indexed newValue\r\n    );\r\n\r\n    event ProposalCreation(\r\n        uint256 indexed id,\r\n        address indexed proposer,\r\n        address[] targets,\r\n        uint256[] values,\r\n        string[] signatures,\r\n        bytes[] calldatas,\r\n        uint256 indexed startBlock,\r\n        uint256 endBlock,\r\n        string description\r\n    );\r\n\r\n    event Vote(\r\n        address indexed voter,\r\n        uint256 indexed proposalId,\r\n        bool indexed support,\r\n        uint256 votes\r\n    );\r\n\r\n    event ProposalCancel(\r\n        uint256 indexed id\r\n    );\r\n\r\n    event ProposalQueue(\r\n        uint256 indexed id,\r\n        uint256 indexed eta\r\n    );\r\n\r\n    event ProposalExecution(\r\n        uint256 indexed id\r\n    );\r\n}\r\n\r\n\r\n/// @title Governance Proxy Contract\r\ncontract GovernanceProxy is SwipeRegistry, GovernanceEvent {\r\n    /// @notice Contract constructor\r\n    /// @dev Calls SwipeRegistry contract constructor\r\n    constructor() public SwipeRegistry(\"Swipe Governance Proxy\") {}\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldValue\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"GuardianUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizedAddress\",\"type\":\"address\"}],\"name\":\"GuardianshipTransferAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"timelockAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakingAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"ProposalMaxOperationsUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"QuorumVotesUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"Vote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"VotingDelayUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodUpdate\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[],\"name\":\"assumeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"authorizedAddress\",\"type\":\"address\"}],\"name\":\"authorizeOwnershipTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAuthorizedNewOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementation\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_newImplementaionCallData\",\"type\":\"bytes\"}],\"name\":\"setImplementationAndCall\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"GovernanceProxy","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://9ed9fe60f8d6a65833133349741bf2c86ea098f729e478112d828b2859e97cec"}]}