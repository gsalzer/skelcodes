{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.4.18;\r\n\r\ncontract ERC20 {\r\n  uint256 public totalSupply;\r\n\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract AMPLGTeamReserve {\r\n\r\n    address public owner;\r\n    uint256 public unlockDate;\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"You are not the owner\");\r\n        _;\r\n    }\r\n\r\n    constructor () public {\r\n        owner = address(0xF112F4452E8Dc33C5574B13C939383A0aB8aa583); // The reserves wallet address\r\n        unlockDate = 1606845600; // This can be increased, use info() to see the up to date unlocking time\r\n    }\r\n\r\n    // keep all tokens sent to this address\r\n    function() payable public {\r\n        emit Received(msg.sender, msg.value);\r\n    }\r\n\r\n    // callable by owner only, after specified time\r\n    function withdrawAll() onlyOwner public {\r\n       require(now >= unlockDate, \"No time to withdraw yet\");\r\n       // withdraw balance\r\n       msg.sender.transfer(address(this).balance);\r\n       emit Withdrew(msg.sender, address(this).balance);\r\n    }\r\n\r\n    // callable by owner only, after specified time, only for Tokens implementing ERC20\r\n    function withdrawERC20(address _tokenContract) onlyOwner public {\r\n       require(now >= unlockDate, \"Funds cannot be withdrawn yet\");\r\n       ERC20 token = ERC20(_tokenContract);\r\n       uint256 tokenBalance = token.balanceOf(this);\r\n       token.transfer(owner, tokenBalance);\r\n       emit WithdrewTokens(_tokenContract, msg.sender, tokenBalance);\r\n    }\r\n\r\n    // callable by owner only, after specified time, only for Tokens implementing ERC20\r\n    function withdrawERC20Amount(address _tokenContract, uint256 _amount) onlyOwner public {\r\n       require(now >= unlockDate, \"Funds cannot be withdrawn yet\");\r\n       ERC20 token = ERC20(_tokenContract);\r\n       uint256 tokenBalance = token.balanceOf(this);\r\n       require(tokenBalance > _amount, \"Not enough funds in the reserve\");\r\n       token.transfer(owner, _amount);\r\n       emit WithdrewTokens(_tokenContract, msg.sender, _amount);\r\n    }\r\n\r\n    function info() public view returns(address, uint256, uint256) {\r\n        return (owner, unlockDate, address(this).balance);\r\n    }\r\n\r\n    function calculateUnlockTime() public view returns (uint256, uint256) {\r\n        uint256 time = now;\r\n        uint256 UnlockTime = now + 90 days;\r\n        return (time, UnlockTime);\r\n    }\r\n    \r\n    function infoERC20(address _tokenContract) public view returns(address, uint256, uint256) {\r\n        ERC20 token = ERC20(_tokenContract);\r\n        return (owner, unlockDate, token.balanceOf(this));\r\n    }\r\n    \r\n    function updateUnlockDate(uint256 _newDate) onlyOwner public {\r\n        unlockDate = _newDate;\r\n    }\r\n    \r\n    event Received(address from, uint256 amount);\r\n    event Withdrew(address to, uint256 amount);\r\n    event WithdrewTokens(address tokenContract, address to, uint256 amount);\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"name\":\"_newDate\",\"type\":\"uint256\"}],\"name\":\"updateUnlockDate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20Amount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"infoERC20\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"calculateUnlockTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrew\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrewTokens\",\"type\":\"event\"}]","ContractName":"AMPLGTeamReserve","CompilerVersion":"v0.4.26+commit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"GNU GPLv3","Proxy":"0","Implementation":"","SwarmSource":"bzzr://aad6ad71522f9f588fb7178a23a473306b73bf8fffda085cb98e7b47fe3f492d"}]}