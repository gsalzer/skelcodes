{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.7.0;\r\n\r\n// \"SPDX-License-Identifier: UNLICENSED\"\r\n\r\ncontract Notary {\r\n    event HashAdded(address indexed sender, bytes32 hash, uint256 blockNumber);\r\n\r\n    mapping (bytes32 => uint256) private hashes;\r\n    \r\n    function addHash (bytes32 _hash) public {\r\n        require(hashes[_hash] == 0, \"The hash was already added\");\r\n        \r\n        hashes[_hash] = block.number;\r\n        \r\n        emit HashAdded(msg.sender, _hash, block.number);\r\n    }\r\n    \r\n    function findHash (bytes32 _hash) public view returns(uint) {\r\n        return hashes[_hash];\r\n    }\r\n}","ABI":"[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"HashAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"addHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"findHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","ContractName":"Notary","CompilerVersion":"v0.7.0+commit.9e61f92b","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://35b901c4f2e5b6c2eab7195253d2623e37e40b0f0bd8cb7cc1cba60e91dffa0a"}]}