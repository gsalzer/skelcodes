{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.6.0;\r\n\r\n\r\ncontract TeamVault {\r\n    \r\n    ERC20 constant GUFIToken = ERC20(0xd53F0115E3d255d2E6F7DeAd5E0E17aE45EEBDDa);\r\n    ERC20 constant TeamToken = ERC20(0xb7d0596e636dBEc773075372868b14d5a224C0Fd);\r\n    \r\n    address blobby = msg.sender;\r\n    uint256 public lastTradingFeeDistribution;\r\n    uint256 public migrationLock;\r\n    address public migrationRecipient;\r\n    \r\n    \r\n \r\n    function distributeWeekly(address recipient) external {\r\n        uint256 teamBalance = TeamToken.balanceOf(address(this));\r\n        require(lastTradingFeeDistribution + 7 days < now); // Max once a day\r\n        require(msg.sender == blobby);\r\n        TeamToken.transfer(recipient, (teamBalance / 100));\r\n        lastTradingFeeDistribution = now;\r\n    } \r\n    \r\n    \r\n    function startTeamMigration(address recipient) external {\r\n        require(msg.sender == blobby);\r\n        migrationLock = now + 120 days;\r\n        migrationRecipient = recipient;\r\n    }\r\n    \r\n    \r\n    function processMigration() external {\r\n        require(msg.sender == blobby);\r\n        require(migrationRecipient != address(0));\r\n        require(now > migrationLock);\r\n        \r\n        uint256 teamBalance = TeamToken.balanceOf(address(this));\r\n        TeamToken.transfer(migrationRecipient, teamBalance);\r\n    }\r\n    \r\n    \r\n    \r\n    function getBlobby() public view returns (address){\r\n        return blobby;\r\n    }\r\n    function getTeamBalance() public view returns (uint256){\r\n        return TeamToken.balanceOf(address(this));\r\n    }\r\n    \r\n}\r\n\r\ninterface ERC20 {\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function approve(address spender, uint256 value) external returns (bool);\r\n  function approveAndCall(address spender, uint tokens, bytes calldata data) external returns (bool success);\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"distributeWeekly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobby\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTeamBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTradingFeeDistribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"processMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"startTeamMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TeamVault","CompilerVersion":"v0.6.0+commit.26b70077","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"ipfs://013930c8c75e6df039ab0906b4149d56fcde625c69168dd13747907075dc6a87"}]}