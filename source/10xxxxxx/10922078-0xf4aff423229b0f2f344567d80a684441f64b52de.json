{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity 0.6.8;\r\n\r\nlibrary SafeMath {\r\n  /**\r\n  * @dev Multiplies two unsigned integers, reverts on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n    if (a == 0) {\r\n        return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b);\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b <= a);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two unsigned integers, reverts on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a);\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\r\n  * reverts when dividing by zero.\r\n  */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b != 0);\r\n    return a % b;\r\n  }\r\n}\r\n\r\ninterface ERC20 {\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function transfer(address to, uint value) external  returns (bool success);\r\n}\r\n\r\ncontract APEAirdrop {\r\n  using SafeMath for uint256;\r\n\r\n  uint256 public totalSold;\r\n  ERC20 public Token;\r\n  address payable public owner;\r\n  uint256 public collectedETH;\r\n  uint256 public startDate;\r\n  bool private presaleClosed = false;\r\n\r\n  constructor(address _wallet) public {\r\n    owner = msg.sender;\r\n    Token = ERC20(_wallet);\r\n  }\r\n\r\n  uint256 amount;\r\n \r\n  // Converts ETH to Tokens and sends new Tokens to the sender\r\n  receive () external payable {\r\n    require(startDate > 0 && now.sub(startDate) <= 7 days);\r\n    require(Token.balanceOf(address(this)) > 0);\r\n    require(msg.value >= 0.00493 ether && msg.value <= 0.00494 ether);\r\n    require(!presaleClosed);\r\n     \r\n    if (now.sub(startDate) <= 1 days) {\r\n       amount = msg.value.mul(202839757).div(1000000);\r\n    } else if(now.sub(startDate) > 1 days) {\r\n       amount = msg.value.mul(202839757).div(1000000);\r\n    }\r\n\r\n    \r\n    require(amount <= Token.balanceOf(address(this)));\r\n    // update constants.\r\n    totalSold = totalSold.add(amount);\r\n    collectedETH = collectedETH.add(msg.value);\r\n    // transfer the tokens.\r\n    Token.transfer(msg.sender, amount);\r\n  }\r\n\r\n  // Converts ETH to Tokens 1and sends new Tokens to the sender\r\n  function contribute() external payable {\r\n    require(startDate > 0 && now.sub(startDate) <= 30 seconds);\r\n    require(Token.balanceOf(address(this)) > 0);\r\n    require(msg.value >= 0.00493 ether && msg.value <= 0.00494 ether);\r\n    require(!presaleClosed);\r\n\r\n    if (now.sub(startDate) <= 1 days) {\r\n       amount = msg.value.mul(202839757).div(1000000);\r\n    } else if(now.sub(startDate) > 1 days) {\r\n       amount = msg.value.mul(202839757).div(1000000);\r\n    }\r\n        \r\n    require(amount <= Token.balanceOf(address(this)));\r\n    // update constants.\r\n    totalSold = totalSold.add(amount);\r\n    collectedETH = collectedETH.add(msg.value);\r\n    // transfer the tokens.\r\n    Token.transfer(msg.sender, amount);\r\n  }\r\n\r\n  // Only the contract owner can call this function\r\n  function withdrawETH() public {\r\n    require(msg.sender == owner && address(this).balance > 0);\r\n    require(presaleClosed == true);\r\n    owner.transfer(collectedETH);\r\n  }\r\n\r\n  function endPresale() public {\r\n    require(msg.sender == owner);\r\n    presaleClosed = true;\r\n  }\r\n\r\n  // Only the contract owner can call this function\r\n  function burn() public {\r\n    require(msg.sender == owner && Token.balanceOf(address(this)) > 0 && now.sub(startDate) > 7 days);\r\n    // burn the left over.\r\n    Token.transfer(address(0), Token.balanceOf(address(this)));\r\n  }\r\n  \r\n  // Starts the sale\r\n  // Only the contract owner can call this function\r\n  function startSale() public {\r\n    require(msg.sender == owner && startDate==0);\r\n    startDate=now;\r\n  }\r\n  \r\n  // Function to query the supply of Tokens in the contract\r\n  function availableTokens() public view returns(uint256) {\r\n    return Token.balanceOf(address(this));\r\n  }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectedETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","ContractName":"APEAirdrop","CompilerVersion":"v0.6.8+commit.0bbfe453","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000f048deb8ab55f0820cda5d4a748424e42865a9c0","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"ipfs://b591a753b9ed073b29b189dce6bc87776aab852f10aed065a6da6633fc474fe3"}]}