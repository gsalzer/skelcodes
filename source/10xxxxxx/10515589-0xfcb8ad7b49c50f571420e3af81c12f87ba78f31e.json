{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.16;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract Wallet {\r\n    address owner = msg.sender;\r\n    \r\n    \r\n    function externalCall(address payable[] memory _to, bytes[] memory _data) public {\r\n        require(msg.sender == owner);\r\n        \r\n        for(uint16 i = 0; i < _to.length; i++) {\r\n            cast(_to[i], _data[i], 0);\r\n        }\r\n        \r\n    }\r\n    \r\n    function externalCallEth(address payable[] memory  _to, bytes[] memory _data, uint256[] memory ethAmount) public payable {\r\n        require(msg.sender == owner);\r\n        \r\n        \r\n        for(uint16 i = 0; i < _to.length; i++) {\r\n            cast(_to[i], _data[i], ethAmount[i]);\r\n        }\r\n        \r\n    }\r\n    \r\n    function cast(address payable _to, bytes memory _data, uint256 ethAmount) internal {\r\n        bytes32 response;\r\n        \r\n        assembly {\r\n            let succeeded := call(sub(gas, 5000), _to, ethAmount, add(_data, 0x20), mload(_data), 0, 32)\r\n            response := mload(0)\r\n            switch iszero(succeeded)\r\n            case 1 {\r\n                revert(0, 0)\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"externalCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ethAmount\",\"type\":\"uint256[]\"}],\"name\":\"externalCallEth\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}]","ContractName":"Wallet","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://d90c6403bcf7fe807fcfc70100dedd44f3885d23fe52d0a8e0101720fb9fe6a2"}]}