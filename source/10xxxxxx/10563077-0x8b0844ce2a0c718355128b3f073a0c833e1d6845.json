{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5;\r\n// author: Shayan Eskandari, Moe Adham, Dylan Seago\r\n// dylan@bitaccess.co\r\n// Version: 0.6 (July 2020)\r\n\r\ncontract SuicideTokenWallet {\r\n\r\n  function transferAndDie(address erc20contract, address to, uint value) public {\r\n    // erc20contract: the address of the ERC20 smart contract holding the tokens\r\n    // to: the address to transfer the tokens to\r\n    // value: the number of token base units to transfer\r\n    ERC20Basic token = ERC20Basic(erc20contract);\r\n    token.transfer(to, value);\r\n    selfdestruct(address(msg.sender));\r\n  }\r\n\r\n  function() external { } // Reject all ether sent to the contract\r\n}\r\n\r\ncontract TokenWallet {\r\n    \r\n  address owner;\r\n  \r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n    \r\n  function walletTransfer(uint256 salt, address erc20contract, address to, uint value) public {\r\n    require(msg.sender == owner);\r\n    // Creation bytecode for SuicideTokenWallet contract\r\n    bytes memory code = hex\"608060405234801561001057600080fd5b5060fa8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063beabacc814602a575b005b602860048036036060811015603e57600080fd5b506001600160a01b038135811691602081013590911690604001356040805163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529151859283169163a9059cbb91604480830192600092919082900301818387803b15801560aa57600080fd5b505af115801560bd573d6000803e3d6000fd5b503392505050fffea265627a7a7231582000bd91d65a6891a56deea75812860b67288bd6b2cb18eaf0f7f7fbd9c344156c64736f6c63430005110032\";\r\n    address addr;\r\n    assembly {\r\n      addr := create2(0, add(code, 0x20), mload(code), salt)\r\n      if iszero(extcodesize(addr)) {\r\n        revert(0, 0)\r\n      }\r\n    }\r\n    SuicideTokenWallet wallet = SuicideTokenWallet(addr);\r\n    wallet.transferAndDie(erc20contract, to, value);\r\n  }\r\n\r\n}\r\n\r\n\r\ncontract ERC20Basic { //contract definition of a ERC20 token with basic functionality.\r\n  uint public totalSupply;\r\n  function balanceOf(address who) public view returns (uint);\r\n  function transfer(address to, uint value) public;\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n}","ABI":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20contract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"walletTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"TokenWallet","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://ffd62f9c75c725ab971812bfde0ea2492b5bb4797fc8acb4bedd6e4ae87f91b2"}]}