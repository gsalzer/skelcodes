{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity >=0.5.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract Multicall {\r\n    bytes constant internal MULTICALL_FAIL = abi.encodePacked(keccak256('MULTICALL_FAIL'));\r\n    struct Call {\r\n        address target;\r\n        bytes callData;\r\n    }\r\n    function aggregate(Call[] memory calls) public returns (uint256 blockNumber, bytes[] memory returnData) {\r\n        blockNumber = block.number;\r\n        returnData = new bytes[](calls.length);\r\n        for(uint256 i = 0; i < calls.length; i++) {\r\n            (bool success, bytes memory ret) = calls[i].target.call(calls[i].callData);\r\n            if (success) {\r\n              returnData[i] = ret;\r\n            } else {\r\n              returnData[i] = MULTICALL_FAIL;\r\n            }\r\n        }\r\n    }\r\n}","ABI":"[{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"Multicall","CompilerVersion":"v0.5.16+commit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","EVMVersion":"Default","Library":"","LicenseType":"None","Proxy":"0","Implementation":"","SwarmSource":"bzzr://7562d7961825acd0987f84c77d48edad2cf1776c93327a9f0f025e029a38ef3e"}]}