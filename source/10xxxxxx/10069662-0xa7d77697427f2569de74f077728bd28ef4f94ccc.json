{"status":"1","message":"OK","result":[{"SourceCode":"pragma solidity ^0.5.17;\r\n\r\ncontract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor () internal {\r\n        _owner = msg.sender;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    /**\r\n     * @return the address of the owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(isOwner());\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @return true if `msg.sender` is the owner of the contract.\r\n     */\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == _owner || tx.origin == _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to relinquish control of the contract.\r\n     * @notice Renouncing to ownership will leave the contract without an owner.\r\n     * It will not be possible to call the functions with the `onlyOwner`\r\n     * modifier anymore.\r\n     */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two numbers, truncating the quotient.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two numbers, throws on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ninterface TokenInterface {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address _owner) external view returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n/**\r\n * @title  Lition Vesting Contract\r\n * @author Patricio Mosse\r\n **/\r\ncontract LitionVesting is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    TokenInterface public token;\r\n    \r\n    address[] public holders;\r\n    \r\n    mapping (address => Holding[]) public holdings;\r\n\r\n    struct Holding {\r\n        uint256 totalTokens;\r\n        uint256 unlockDate;\r\n        bool claimed;\r\n    }\r\n    \r\n    bool teamEcosystemCommunityInitialized = false;\r\n    bool investorsAdvisors1Initialized = false;\r\n    bool investorsAdvisors2Initialized = false;\r\n\r\n    // Events\r\n    event TokensReleased(address _to, uint256 _tokensReleased);\r\n    \r\n    // Dates\r\n    uint256 april_01_2021 = 1617228000;\r\n    \r\n    uint256 july_15_2020 = 1594764000;\r\n    uint256 october_15_2020 = 1602712800;\r\n    uint256 january_15_2021 = 1610665200;\r\n    uint256 april_15_2021 = 1618437600;\r\n    \r\n    uint256 july_15_2021 = 1626300000;\r\n    \r\n    uint256 june_30_2020 = 1593468000;\r\n    uint256 december_31_2020 = 1609369200;\r\n    uint256 june_30_2021 = 1625004000;\r\n    uint256 december_31_2021 = 1640905200;\r\n    \r\n    // Wallets\r\n    address teamWallet = 0x80BCd5a881A159d84521c8d06ab2c10edc486341;\r\n    address ecosystemWallet = 0x25a13Edb1651DC729691134dB3a450f5D94292e9;\r\n    address communityWallet = 0xA443e7c9EB6F0855eD237817CFbC2D74b87F60Fd;\r\n    \r\n    address investor_1_Wallet = 0xfe568f98dF64e7B49050FfE810D9f78952bb4f92;\r\n    address investor_2_Wallet = 0x47C2F58aC01770e4bbeF401FDde1821c370BF5b0;\r\n    address investor_3_Wallet = 0xeea95625332612fdbAB0713417d09e900028D9Fd;\r\n    address investor_4_Wallet = 0xa9053549B32Ea35daf4999212d8Cb9f7b4ce3A7B;\r\n    address investor_5_Wallet = 0xBf16D4B69619FbbeB878bb2D86c081aF1fc127b6;\r\n    address investor_6_Wallet = 0xCcbc8e2713b96CC821bDdb74b6D71acd7d29c172;\r\n    address investor_7_Wallet = 0x8121f802237A70C8D1220220D6B55786a436B78d;\r\n    address investor_8_Wallet = 0x3f19FC15a62De71eaf5E8003c176f16b3c99822C;\r\n    address investor_9_Wallet = 0xA579672BD4044f4f6C3502e571e370ECadeC9258;\r\n    address investor_10_Wallet = 0x710a630B2409f3f702939FEAB09512c07eD140Ef;\r\n    address investor_11_Wallet = 0x88FA0266C1036f52D20366a0203f9b3782CF794B;\r\n    address investor_12_Wallet = 0xE1ED0F1a13515552fe0d5f779cCD56DB30f6DBa2;\r\n    address investor_13_Wallet = 0x763c7C7Bf6b39FC5062E6FB8fd287dd3a3CF5f55;\r\n    address investor_14_Wallet = 0x92cfdcEEb276a6Bc2f13B6907CD8E6aC245dD0FE;\r\n    address investor_15_Wallet = 0xA21880528906dd770e22db5Bb1E2835fd693d8D8;\r\n    address investor_16_Wallet = 0x7E3ace45Ffe3b6b7E5815057A4e29E6e18d6dD19;\r\n    address investor_17_Wallet = 0xD1d4c1c16aEb26528D731dDB54Bb0Bff9608b6ca;\r\n    address investor_18_Wallet = 0x8B4D7019c40084Ceb95a7B6FA6880312CF78be6a;\r\n    address investor_19_Wallet = 0x055c484fF3592211eC2DA416edF9eAf900767E35;\r\n    address investor_20_Wallet = 0x8f34031645D5609D0898e80566AFad1182232B63;\r\n    address investor_21_Wallet = 0xEF4F09580673910d9FdcE1bc8D26389DBB75C7a0;\r\n    address investor_22_Wallet = 0xa27A3A45Ed3218506c9d825990C80208DcEce99E;\r\n    \r\n    function getVestingByBeneficiary(address _beneficiary, uint256 _index) external view returns (uint256 totalTokens, uint256 unlockDate, bool claimed) {\r\n        require(holdings[_beneficiary].length > _index, \"The holding doesn't exist\");\r\n        Holding memory holding = holdings[_beneficiary][_index];\r\n        totalTokens = holding.totalTokens;\r\n        unlockDate = holding.unlockDate;\r\n        claimed = holding.claimed;\r\n    }\r\n    \r\n    function getTotalVestingsByBeneficiary(address _beneficiary) external view returns (uint256) {\r\n        return holdings[_beneficiary].length;\r\n    }\r\n\r\n    function getTotalToClaimNowByBeneficiary(address _beneficiary) public view returns(uint256) {\r\n        uint256 total = 0;\r\n        \r\n        for (uint256 i = 0; i < holdings[_beneficiary].length; i++) {\r\n            Holding memory holding = holdings[_beneficiary][i];\r\n            if (!holding.claimed && now > holding.unlockDate) {\r\n                total = total.add(holding.totalTokens);\r\n            }\r\n        }\r\n\r\n        return total;\r\n    }\r\n    \r\n    function getTotalVested() public view returns(uint256) {\r\n        uint256 total = 0;\r\n        \r\n        for (uint256 i = 0; i < holders.length; i++) {\r\n            for (uint256 j = 0; j < holdings[holders[i]].length; j++) {\r\n                Holding memory holding = holdings[holders[i]][j];\r\n                total = total.add(holding.totalTokens);\r\n            }\r\n        }\r\n\r\n        return total;\r\n    }\r\n    \r\n    function getTotalClaimed() public view returns(uint256) {\r\n        uint256 total = 0;\r\n        \r\n        for (uint256 i = 0; i < holders.length; i++) {\r\n            for (uint256 j = 0; j < holdings[holders[i]].length; j++) {\r\n                Holding memory holding = holdings[holders[i]][j];\r\n                if (holding.claimed) {\r\n                    total = total.add(holding.totalTokens);\r\n                }\r\n            }\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    function claimTokens() external\r\n    {\r\n        uint256 tokensToClaim = getTotalToClaimNowByBeneficiary(msg.sender);\r\n        \r\n        require(tokensToClaim > 0, \"Nothing to claim\");\r\n        \r\n        for (uint256 i = 0; i < holdings[msg.sender].length; i++) {\r\n            Holding storage holding = holdings[msg.sender][i];\r\n            if (!holding.claimed && now > holding.unlockDate) {\r\n                holding.claimed = true;\r\n                require(token.transfer(msg.sender, tokensToClaim), \"Insufficient balance in vesting contract\");\r\n                emit TokensReleased(msg.sender, tokensToClaim);\r\n            }\r\n        }\r\n    }\r\n    \r\n    function _addHolderToList(address _beneficiary) internal {\r\n        for (uint256 i = 0; i < holders.length; i++) {\r\n            if (holders[i] == _beneficiary) {\r\n                return;\r\n            }\r\n        }\r\n        holders.push(_beneficiary);\r\n    }\r\n\r\n    function _createVesting(address _beneficiary, uint256 _tokens, uint256 _unlockDate) internal {\r\n        _addHolderToList(_beneficiary);\r\n        Holding memory holding = Holding(_tokens, _unlockDate, false);\r\n        holdings[_beneficiary].push(holding);\r\n    }\r\n    \r\n    constructor(address _token) public {\r\n        token = TokenInterface(_token);\r\n    }\r\n    \r\n    function _initializeTeamEcosystemCommunity() public onlyOwner {\r\n        require(!teamEcosystemCommunityInitialized, \"Already initialized\");\r\n        teamEcosystemCommunityInitialized = true;\r\n        \r\n        // Team: 2.950.000\r\n        _createVesting(teamWallet, 2950000000000000000000000, april_01_2021); \r\n        \r\n        // Ecosystem: 8.080.000\r\n        _createVesting(ecosystemWallet, 2020000000000000000000000, july_15_2020); \r\n        _createVesting(ecosystemWallet, 2020000000000000000000000, october_15_2020); \r\n        _createVesting(ecosystemWallet, 2020000000000000000000000, january_15_2021); \r\n        _createVesting(ecosystemWallet, 2020000000000000000000000, april_15_2021); \r\n        \r\n        // Community: 8.937.500\r\n        _createVesting(communityWallet, 1787500000000000000000000, july_15_2020); \r\n        _createVesting(communityWallet, 1787500000000000000000000, october_15_2020); \r\n        _createVesting(communityWallet, 1787500000000000000000000, january_15_2021); \r\n        _createVesting(communityWallet, 1787500000000000000000000, april_15_2021); \r\n        _createVesting(communityWallet, 1787500000000000000000000, july_15_2021); \r\n    }\r\n    \r\n    // Investors and advisors: 18.793.753\r\n    function _initializeInvestorsAdvisors1() public onlyOwner {\r\n        require(!investorsAdvisors1Initialized, \"Already initialized\");\r\n        investorsAdvisors1Initialized = true;\r\n        \r\n        // - Total: 850.000\r\n        _createVesting(investor_1_Wallet, 212500000000000000000000, june_30_2020); \r\n        _createVesting(investor_1_Wallet, 212500000000000000000000, december_31_2020); \r\n        _createVesting(investor_1_Wallet, 212500000000000000000000, june_30_2021); \r\n        _createVesting(investor_1_Wallet, 212500000000000000000000, december_31_2021); \r\n        \r\n        // - Total: 2.125.000\r\n        _createVesting(investor_2_Wallet, 531250000000000000000000, june_30_2020); \r\n        _createVesting(investor_2_Wallet, 531250000000000000000000, december_31_2020); \r\n        _createVesting(investor_2_Wallet, 531250000000000000000000, june_30_2021); \r\n        _createVesting(investor_2_Wallet, 531250000000000000000000, december_31_2021); \r\n        \r\n        // - Total: 255.000\r\n        _createVesting(investor_3_Wallet, 63750000000000000000000, june_30_2020); \r\n        _createVesting(investor_3_Wallet, 63750000000000000000000, december_31_2020); \r\n        _createVesting(investor_3_Wallet, 63750000000000000000000, june_30_2021); \r\n        _createVesting(investor_3_Wallet, 63750000000000000000000, december_31_2021); \r\n\r\n        // - Total: 2.656.250\r\n        _createVesting(investor_4_Wallet, 664062500000000000000000, june_30_2020); \r\n        _createVesting(investor_4_Wallet, 664062500000000000000000, december_31_2020); \r\n        _createVesting(investor_4_Wallet, 664062500000000000000000, june_30_2021); \r\n        _createVesting(investor_4_Wallet, 664062500000000000000000, december_31_2021); \r\n\r\n        // - Total: 295.139 \r\n        _createVesting(investor_5_Wallet, 73784750000000000000000, june_30_2020); \r\n        _createVesting(investor_5_Wallet, 73784750000000000000000, december_31_2020); \r\n        _createVesting(investor_5_Wallet, 73784750000000000000000, june_30_2021); \r\n        _createVesting(investor_5_Wallet, 73784750000000000000000, december_31_2021); \r\n\r\n        // - Total: 5.568.611\r\n        _createVesting(investor_6_Wallet, 1392152750000000000000000, june_30_2020); \r\n        _createVesting(investor_6_Wallet, 1392152750000000000000000, december_31_2020); \r\n        _createVesting(investor_6_Wallet, 1392152750000000000000000, june_30_2021); \r\n        _createVesting(investor_6_Wallet, 1392152750000000000000000, december_31_2021); \r\n\r\n        // - Total: 42.500 \r\n        _createVesting(investor_7_Wallet, 10625000000000000000000, june_30_2020); \r\n        _createVesting(investor_7_Wallet, 10625000000000000000000, december_31_2020); \r\n        _createVesting(investor_7_Wallet, 10625000000000000000000, june_30_2021); \r\n        _createVesting(investor_7_Wallet, 10625000000000000000000, december_31_2021); \r\n\r\n        // - Total: 807.353 \r\n        _createVesting(investor_8_Wallet, 201838250000000000000000, june_30_2020); \r\n        _createVesting(investor_8_Wallet, 201838250000000000000000, december_31_2020); \r\n        _createVesting(investor_8_Wallet, 201838250000000000000000, june_30_2021); \r\n        _createVesting(investor_8_Wallet, 201838250000000000000000, december_31_2021); \r\n\r\n        // - Total: 850.000 \r\n        _createVesting(investor_9_Wallet, 212500000000000000000000, june_30_2020); \r\n        _createVesting(investor_9_Wallet, 212500000000000000000000, december_31_2020); \r\n        _createVesting(investor_9_Wallet, 212500000000000000000000, june_30_2021); \r\n        _createVesting(investor_9_Wallet, 212500000000000000000000, december_31_2021); \r\n\r\n        // - Total: 425.000 \r\n        _createVesting(investor_10_Wallet, 106250000000000000000000, june_30_2020); \r\n        _createVesting(investor_10_Wallet, 106250000000000000000000, december_31_2020); \r\n        _createVesting(investor_10_Wallet, 106250000000000000000000, june_30_2021); \r\n        _createVesting(investor_10_Wallet, 106250000000000000000000, december_31_2021); \r\n\r\n    }\r\n    \r\n    function _initializeInvestorsAdvisors2() public onlyOwner {\r\n        require(!investorsAdvisors2Initialized, \"Already initialized\");\r\n        investorsAdvisors2Initialized = true;\r\n\r\n        // - Total: 63.750 \r\n        _createVesting(investor_11_Wallet, 15937500000000000000000, june_30_2020); \r\n        _createVesting(investor_11_Wallet, 15937500000000000000000, december_31_2020); \r\n        _createVesting(investor_11_Wallet, 15937500000000000000000, june_30_2021); \r\n        _createVesting(investor_11_Wallet, 15937500000000000000000, december_31_2021); \r\n\r\n        // - Total: 63.750 \r\n        _createVesting(investor_12_Wallet, 15937500000000000000000, june_30_2020); \r\n        _createVesting(investor_12_Wallet, 15937500000000000000000, december_31_2020); \r\n        _createVesting(investor_12_Wallet, 15937500000000000000000, june_30_2021); \r\n        _createVesting(investor_12_Wallet, 15937500000000000000000, december_31_2021); \r\n\r\n        // - Total: 21.250 \r\n        _createVesting(investor_13_Wallet, 5312500000000000000000, june_30_2020); \r\n        _createVesting(investor_13_Wallet, 5312500000000000000000, december_31_2020); \r\n        _createVesting(investor_13_Wallet, 5312500000000000000000, june_30_2021); \r\n        _createVesting(investor_13_Wallet, 5312500000000000000000, december_31_2021); \r\n\r\n        // - Total: 212.500 \r\n        _createVesting(investor_14_Wallet, 53125000000000000000000, june_30_2020); \r\n        _createVesting(investor_14_Wallet, 53125000000000000000000, december_31_2020); \r\n        _createVesting(investor_14_Wallet, 53125000000000000000000, june_30_2021); \r\n        _createVesting(investor_14_Wallet, 53125000000000000000000, december_31_2021); \r\n\r\n        // - Total: 607.143 \r\n        _createVesting(investor_15_Wallet, 151785750000000000000000, june_30_2020); \r\n        _createVesting(investor_15_Wallet, 151785750000000000000000, december_31_2020); \r\n        _createVesting(investor_15_Wallet, 151785750000000000000000, june_30_2021); \r\n        _createVesting(investor_15_Wallet, 151785750000000000000000, december_31_2021); \r\n\r\n        // - Total: 5.865 \r\n        _createVesting(investor_16_Wallet, 1466250000000000000000, june_30_2020); \r\n        _createVesting(investor_16_Wallet, 1466250000000000000000, december_31_2020); \r\n        _createVesting(investor_16_Wallet, 1466250000000000000000, june_30_2021); \r\n        _createVesting(investor_16_Wallet, 1466250000000000000000, december_31_2021); \r\n\r\n        // - Total: 616.250 \r\n        _createVesting(investor_17_Wallet, 154062500000000000000000, june_30_2020); \r\n        _createVesting(investor_17_Wallet, 154062500000000000000000, december_31_2020); \r\n        _createVesting(investor_17_Wallet, 154062500000000000000000, june_30_2021); \r\n        _createVesting(investor_17_Wallet, 154062500000000000000000, december_31_2021); \r\n\r\n        // - Total: 308.125 \r\n        _createVesting(investor_18_Wallet, 77031250000000000000000, june_30_2020); \r\n        _createVesting(investor_18_Wallet, 77031250000000000000000, december_31_2020); \r\n        _createVesting(investor_18_Wallet, 77031250000000000000000, june_30_2021); \r\n        _createVesting(investor_18_Wallet, 77031250000000000000000, december_31_2021); \r\n\r\n        // - Total: 63.750 \r\n        _createVesting(investor_19_Wallet, 15937500000000000000000, june_30_2020); \r\n        _createVesting(investor_19_Wallet, 15937500000000000000000, december_31_2020); \r\n        _createVesting(investor_19_Wallet, 15937500000000000000000, june_30_2021); \r\n        _createVesting(investor_19_Wallet, 15937500000000000000000, december_31_2021); \r\n\r\n        // - Total: 1.020.000 \r\n        _createVesting(investor_20_Wallet, 255000000000000000000000, june_30_2020); \r\n        _createVesting(investor_20_Wallet, 255000000000000000000000, december_31_2020); \r\n        _createVesting(investor_20_Wallet, 255000000000000000000000, june_30_2021); \r\n        _createVesting(investor_20_Wallet, 255000000000000000000000, december_31_2021); \r\n\r\n        // - Total: 311.367 \r\n        _createVesting(investor_21_Wallet, 77841750000000000000000, june_30_2020); \r\n        _createVesting(investor_21_Wallet, 77841750000000000000000, december_31_2020); \r\n        _createVesting(investor_21_Wallet, 77841750000000000000000, june_30_2021); \r\n        _createVesting(investor_21_Wallet, 77841750000000000000000, december_31_2021); \r\n\r\n        // - Total: 1.636.250\r\n        _createVesting(investor_22_Wallet, 409062500000000000000000, june_30_2020); \r\n        _createVesting(investor_22_Wallet, 409062500000000000000000, december_31_2020); \r\n        _createVesting(investor_22_Wallet, 409062500000000000000000, june_30_2021); \r\n        _createVesting(investor_22_Wallet, 409062500000000000000000, december_31_2021); \r\n    }\r\n\r\n    function _claimUnallocated( address _sendTo) external onlyOwner{\r\n        uint256 allTokens = token.balanceOf(address(this));\r\n        token.transfer(_sendTo, allTokens);\r\n    }\r\n}","ABI":"[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokensReleased\",\"type\":\"uint256\"}],\"name\":\"TokensReleased\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sendTo\",\"type\":\"address\"}],\"name\":\"_claimUnallocated\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_initializeInvestorsAdvisors1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_initializeInvestorsAdvisors2\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_initializeTeamEcosystemCommunity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"getTotalToClaimNowByBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalVested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"getTotalVestingsByBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getVestingByBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"holders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"holdings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract TokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","ContractName":"LitionVesting","CompilerVersion":"v0.5.17+commit.d19bba13","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000763fa6806e1acf68130d2d0f0df754c93cc546b2","EVMVersion":"Default","Library":"","LicenseType":"MIT","Proxy":"0","Implementation":"","SwarmSource":"bzzr://d7eb4740abddda03926fcd7ec4e21da047dce3a5b246418354f90977a539e295"}]}